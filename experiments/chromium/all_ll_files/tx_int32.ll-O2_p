; ModuleID = '../../third_party/ffmpeg/libavutil/tx_int32.c'
source_filename = "../../third_party/ffmpeg/libavutil/tx_int32.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVComplexInt32 = type { i32, i32 }
%struct.CosTabsInitOnce = type { void ()*, i32 }
%struct.AVTXContext = type { i32, i32, i32, i32, i64, double, %struct.AVComplexInt32*, %struct.AVComplexInt32*, i32*, i32*, i32* }

@ff_cos_16_int32 = common hidden local_unnamed_addr global [8 x i32] zeroinitializer, align 32
@ff_cos_32_int32 = common hidden global [16 x i32] zeroinitializer, align 32
@ff_cos_64_int32 = common hidden global [32 x i32] zeroinitializer, align 32
@ff_cos_128_int32 = common hidden global [64 x i32] zeroinitializer, align 32
@ff_cos_256_int32 = common hidden global [128 x i32] zeroinitializer, align 32
@ff_cos_512_int32 = common hidden global [256 x i32] zeroinitializer, align 32
@ff_cos_1024_int32 = common hidden global [512 x i32] zeroinitializer, align 32
@ff_cos_2048_int32 = common hidden global [1024 x i32] zeroinitializer, align 32
@ff_cos_4096_int32 = common hidden global [2048 x i32] zeroinitializer, align 32
@ff_cos_8192_int32 = common hidden global [4096 x i32] zeroinitializer, align 32
@ff_cos_16384_int32 = common hidden global [8192 x i32] zeroinitializer, align 32
@ff_cos_32768_int32 = common hidden global [16384 x i32] zeroinitializer, align 32
@ff_cos_65536_int32 = common hidden global [32768 x i32] zeroinitializer, align 32
@ff_cos_131072_int32 = common hidden global [65536 x i32] zeroinitializer, align 32
@ff_cos_53_int32 = common hidden local_unnamed_addr global [4 x %struct.AVComplexInt32] zeroinitializer, align 32
@fft_dispatch = internal unnamed_addr constant [18 x void (%struct.AVComplexInt32*)*] [void (%struct.AVComplexInt32*)* null, void (%struct.AVComplexInt32*)* @fft2, void (%struct.AVComplexInt32*)* @fft4, void (%struct.AVComplexInt32*)* @fft8, void (%struct.AVComplexInt32*)* @fft16, void (%struct.AVComplexInt32*)* @fft32, void (%struct.AVComplexInt32*)* @fft64, void (%struct.AVComplexInt32*)* @fft128, void (%struct.AVComplexInt32*)* @fft256, void (%struct.AVComplexInt32*)* @fft512, void (%struct.AVComplexInt32*)* @fft1024, void (%struct.AVComplexInt32*)* @fft2048, void (%struct.AVComplexInt32*)* @fft4096, void (%struct.AVComplexInt32*)* @fft8192, void (%struct.AVComplexInt32*)* @fft16384, void (%struct.AVComplexInt32*)* @fft32768, void (%struct.AVComplexInt32*)* @fft65536, void (%struct.AVComplexInt32*)* @fft131072], align 16
@cos_tabs_init_once = internal global [18 x %struct.CosTabsInitOnce] [%struct.CosTabsInitOnce { void ()* @ff_init_53_tabs, i32 0 }, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce zeroinitializer, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_16, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_32, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_64, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_128, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_256, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_512, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_1024, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_2048, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_4096, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_8192, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_16384, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_32768, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_65536, i32 0 }, %struct.CosTabsInitOnce { void ()* @init_cos_tabs_131072, i32 0 }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_tx_init_mdct_fft_int32(%struct.AVTXContext*, void (%struct.AVTXContext*, i8*, i8*, i64)** nocapture, i32, i32, i32, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %8 = tail call i32 @ff_tx_type_is_mdct(i32 %2) #8
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i32
  %11 = ashr i32 %4, %10
  %12 = srem i32 %11, 15
  %13 = icmp eq i32 %12, 0
  %14 = sdiv i32 %11, 15
  %15 = select i1 %13, i32 %14, i32 %11
  br i1 %13, label %26, label %16

16:                                               ; preds = %7
  %17 = srem i32 %15, 5
  %18 = sdiv i32 %15, 5
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = srem i32 %15, 3
  %22 = sdiv i32 %15, 3
  %23 = icmp eq i32 %21, 0
  %24 = select i1 %23, i32 %22, i32 %11
  %25 = select i1 %23, i32 3, i32 1
  br label %26

26:                                               ; preds = %20, %16, %7
  %27 = phi i32 [ %14, %7 ], [ %18, %16 ], [ %24, %20 ]
  %28 = phi i32 [ 15, %7 ], [ 5, %16 ], [ %25, %20 ]
  %29 = tail call i32 @llvm.ctpop.i32(i32 %27), !range !2
  %30 = icmp ult i32 %29, 2
  %31 = add i32 %27, -2
  %32 = icmp ult i32 %31, 131071
  %33 = and i1 %32, %30
  %34 = select i1 %33, i32 %27, i32 1
  %35 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  store i32 %28, i32* %35, align 8
  %36 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 2
  store i32 %3, i32* %37, align 8
  %38 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 3
  store i32 %2, i32* %38, align 4
  %39 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 4
  store i64 %6, i64* %39, align 8
  %40 = icmp sgt i32 %27, 1
  %41 = and i1 %32, %30
  %42 = xor i1 %41, true
  %43 = and i1 %40, %42
  %44 = icmp eq i32 %34, 1
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %62

46:                                               ; preds = %26
  %47 = xor i1 %9, true
  %48 = and i32 %11, 1
  %49 = icmp eq i32 %48, 0
  %50 = or i1 %49, %47
  %51 = and i64 %6, 1
  %52 = icmp eq i64 %51, 0
  %53 = and i1 %52, %50
  br i1 %53, label %54, label %190

54:                                               ; preds = %46
  store i32 %11, i32* %35, align 8
  store i32 1, i32* %36, align 4
  store void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_fft, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br i1 %9, label %55, label %190

55:                                               ; preds = %54
  %56 = bitcast i8* %5 to float*
  %57 = load float, float* %56, align 4
  %58 = fpext float %57 to double
  %59 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  store double %58, double* %59, align 8
  %60 = icmp eq i32 %3, 0
  %61 = select i1 %60, void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_mdct, void (%struct.AVTXContext*, i8*, i8*, i64)* @naive_imdct
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %61, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br label %190

62:                                               ; preds = %26
  %63 = icmp ne i32 %28, 1
  %64 = icmp sgt i32 %34, 1
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %93

66:                                               ; preds = %62
  %67 = tail call i32 @ff_tx_gen_compound_mapping(%struct.AVTXContext* %0) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %190

69:                                               ; preds = %66
  %70 = mul nsw i32 %34, %28
  %71 = sext i32 %70 to i64
  %72 = shl nsw i64 %71, 3
  %73 = tail call noalias i8* @av_malloc(i64 %72) #8
  %74 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %75 = bitcast %struct.AVComplexInt32** %74 to i8**
  store i8* %73, i8** %75, align 8
  %76 = icmp eq i8* %73, null
  br i1 %76, label %190, label %77

77:                                               ; preds = %69
  %78 = icmp eq i32 %28, 3
  %79 = icmp eq i32 %28, 5
  %80 = select i1 %79, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_5xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_15xM
  %81 = select i1 %78, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_fft_3xM, void (%struct.AVTXContext*, i8*, i8*, i64)* %80
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %81, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br i1 %9, label %82, label %98

82:                                               ; preds = %77
  br i1 %78, label %83, label %86

83:                                               ; preds = %82
  %84 = icmp eq i32 %3, 0
  %85 = select i1 %84, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_3xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_3xM
  br label %91

86:                                               ; preds = %82
  %87 = icmp ne i32 %3, 0
  %88 = select i1 %87, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_5xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_5xM
  %89 = select i1 %87, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_imdct_15xM, void (%struct.AVTXContext*, i8*, i8*, i64)* @compound_mdct_15xM
  %90 = select i1 %79, void (%struct.AVTXContext*, i8*, i8*, i64)* %88, void (%struct.AVTXContext*, i8*, i8*, i64)* %89
  br label %91

91:                                               ; preds = %86, %83
  %92 = phi void (%struct.AVTXContext*, i8*, i8*, i64)* [ %85, %83 ], [ %90, %86 ]
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %92, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  br label %98

93:                                               ; preds = %62
  %94 = icmp eq i32 %3, 0
  %95 = select i1 %94, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_mdct, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_imdct
  %96 = select i1 %9, void (%struct.AVTXContext*, i8*, i8*, i64)* %95, void (%struct.AVTXContext*, i8*, i8*, i64)* @monolithic_fft
  store void (%struct.AVTXContext*, i8*, i8*, i64)* %96, void (%struct.AVTXContext*, i8*, i8*, i64)** %1, align 8
  %97 = icmp eq i32 %28, 1
  br i1 %97, label %101, label %98

98:                                               ; preds = %93, %91, %77
  %99 = load void ()*, void ()** getelementptr inbounds ([18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 0, i32 0), align 16
  %100 = tail call i32 @pthread_once(i32* getelementptr inbounds ([18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 0, i32 1), void ()* %99) #8
  br label %101

101:                                              ; preds = %93, %98
  %102 = phi i1 [ true, %98 ], [ false, %93 ]
  %103 = or i1 %9, %102
  %104 = trunc i64 %6 to i32
  %105 = and i32 %104, 1
  %106 = xor i32 %105, 1
  %107 = select i1 %103, i32 0, i32 %106
  %108 = tail call i32 @ff_tx_gen_ptwo_revtab(%struct.AVTXContext* %0, i32 %107) #8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %190

110:                                              ; preds = %101
  %111 = and i64 %6, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  br i1 %9, label %190, label %114

114:                                              ; preds = %113
  %115 = tail call i32 @ff_tx_gen_ptwo_inplace_revtab_idx(%struct.AVTXContext* %0) #8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %190

117:                                              ; preds = %114, %110
  %118 = or i32 %34, 1
  %119 = tail call i32 @llvm.ctlz.i32(i32 %118, i1 true), !range !3
  %120 = xor i32 %119, 31
  %121 = icmp ult i32 %120, 4
  br i1 %121, label %133, label %122

122:                                              ; preds = %117
  %123 = add nuw nsw i32 %120, 1
  %124 = zext i32 %123 to i64
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ 4, %122 ], [ %131, %125 ]
  %127 = getelementptr inbounds [18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 %126, i32 1
  %128 = getelementptr inbounds [18 x %struct.CosTabsInitOnce], [18 x %struct.CosTabsInitOnce]* @cos_tabs_init_once, i64 0, i64 %126, i32 0
  %129 = load void ()*, void ()** %128, align 16
  %130 = tail call i32 @pthread_once(i32* %127, void ()* %129) #8
  %131 = add nuw nsw i64 %126, 1
  %132 = icmp eq i64 %131, %124
  br i1 %132, label %133, label %125

133:                                              ; preds = %125, %117
  br i1 %9, label %134, label %190

134:                                              ; preds = %133
  %135 = mul nsw i32 %34, %28
  %136 = bitcast i8* %5 to float*
  %137 = load float, float* %136, align 4
  %138 = fcmp nsz olt float %137, 0.000000e+00
  %139 = sitofp i32 %135 to double
  %140 = fadd nsz double %139, 1.250000e-01
  %141 = select i1 %138, double %140, double 1.250000e-01
  %142 = sext i32 %135 to i64
  %143 = tail call i8* @av_malloc_array(i64 %142, i64 8) #8
  %144 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %145 = bitcast %struct.AVComplexInt32** %144 to i8**
  store i8* %143, i8** %145, align 8
  %146 = icmp eq i8* %143, null
  %147 = bitcast i8* %143 to %struct.AVComplexInt32*
  br i1 %146, label %190, label %148

148:                                              ; preds = %134
  %149 = tail call nsz float @llvm.fabs.f32(float %137)
  %150 = fpext float %149 to double
  %151 = tail call nsz double @llvm.sqrt.f64(double %150) #8
  %152 = icmp sgt i32 %135, 0
  br i1 %152, label %153, label %190

153:                                              ; preds = %148
  %154 = zext i32 %135 to i64
  br label %155

155:                                              ; preds = %188, %153
  %156 = phi %struct.AVComplexInt32* [ %147, %153 ], [ %189, %188 ]
  %157 = phi i64 [ 0, %153 ], [ %186, %188 ]
  %158 = trunc i64 %157 to i32
  %159 = sitofp i32 %158 to double
  %160 = fadd nsz double %141, %159
  %161 = fmul nsz double %160, 0x3FF921FB54442D18
  %162 = fdiv nsz double %161, %139
  %163 = tail call nsz double @llvm.cos.f64(double %162) #8
  %164 = fmul nsz double %151, %163
  %165 = fmul nsz double %164, 0x41E0000000000000
  %166 = fptrunc double %165 to float
  %167 = tail call i64 @llvm.lrint.i64.f32(float %166) #8
  %168 = icmp slt i64 %167, 2147483647
  %169 = select i1 %168, i64 %167, i64 2147483647
  %170 = icmp sgt i64 %169, -2147483648
  %171 = select i1 %170, i64 %169, i64 -2147483648
  %172 = trunc i64 %171 to i32
  %173 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %156, i64 %157, i32 0
  store i32 %172, i32* %173, align 4
  %174 = tail call nsz double @llvm.sin.f64(double %162) #8
  %175 = fmul nsz double %151, %174
  %176 = fmul nsz double %175, 0x41E0000000000000
  %177 = fptrunc double %176 to float
  %178 = tail call i64 @llvm.lrint.i64.f32(float %177) #8
  %179 = icmp slt i64 %178, 2147483647
  %180 = select i1 %179, i64 %178, i64 2147483647
  %181 = icmp sgt i64 %180, -2147483648
  %182 = select i1 %181, i64 %180, i64 -2147483648
  %183 = trunc i64 %182 to i32
  %184 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %144, align 8
  %185 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %184, i64 %157, i32 1
  store i32 %183, i32* %185, align 4
  %186 = add nuw nsw i64 %157, 1
  %187 = icmp eq i64 %186, %154
  br i1 %187, label %190, label %188

188:                                              ; preds = %155
  %189 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %144, align 8
  br label %155

190:                                              ; preds = %155, %148, %134, %133, %114, %113, %101, %69, %66, %54, %55, %46
  %191 = phi i32 [ -38, %46 ], [ 0, %55 ], [ 0, %54 ], [ %67, %66 ], [ -12, %69 ], [ %108, %101 ], [ -38, %113 ], [ %115, %114 ], [ 0, %133 ], [ -12, %134 ], [ 0, %148 ], [ 0, %155 ]
  ret i32 %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ff_tx_type_is_mdct(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_fft(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = bitcast i8* %2 to %struct.AVComplexInt32*
  %6 = bitcast i8* %1 to %struct.AVComplexInt32*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = sitofp i32 %8 to double
  %13 = select i1 %11, double 0xC01921FB54442D18, double 0x401921FB54442D18
  %14 = fdiv nsz double %13, %12
  %15 = icmp sgt i32 %8, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %4
  %17 = zext i32 %8 to i64
  br label %18

18:                                               ; preds = %16, %24
  %19 = phi i64 [ 0, %16 ], [ %27, %24 ]
  %20 = trunc i64 %19 to i32
  %21 = sitofp i32 %20 to double
  %22 = fmul nsz double %14, %21
  br label %29

23:                                               ; preds = %24, %4
  ret void

24:                                               ; preds = %29
  %25 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %19, i32 0
  store i32 %70, i32* %25, align 4
  %26 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %19, i32 1
  store i32 %71, i32* %26, align 4
  %27 = add nuw nsw i64 %19, 1
  %28 = icmp eq i64 %27, %17
  br i1 %28, label %23, label %18

29:                                               ; preds = %29, %18
  %30 = phi i64 [ 0, %18 ], [ %72, %29 ]
  %31 = phi i32 [ 0, %18 ], [ %71, %29 ]
  %32 = phi i32 [ 0, %18 ], [ %70, %29 ]
  %33 = trunc i64 %30 to i32
  %34 = sitofp i32 %33 to double
  %35 = fmul nsz double %22, %34
  %36 = tail call nsz double @llvm.cos.f64(double %35)
  %37 = fmul nsz double %36, 0x41E0000000000000
  %38 = fptrunc double %37 to float
  %39 = tail call i64 @llvm.lrint.i64.f32(float %38)
  %40 = icmp slt i64 %39, 2147483647
  %41 = select i1 %40, i64 %39, i64 2147483647
  %42 = icmp sgt i64 %41, -2147483648
  %43 = select i1 %42, i64 %41, i64 -2147483648
  %44 = tail call nsz double @llvm.sin.f64(double %35)
  %45 = fmul nsz double %44, 0x41E0000000000000
  %46 = fptrunc double %45 to float
  %47 = tail call i64 @llvm.lrint.i64.f32(float %46)
  %48 = icmp slt i64 %47, 2147483647
  %49 = select i1 %48, i64 %47, i64 2147483647
  %50 = icmp sgt i64 %49, -2147483648
  %51 = select i1 %50, i64 %49, i64 -2147483648
  %52 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %30, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %43, %54
  %56 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %30, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %51, %58
  %60 = add i64 %55, 1073741824
  %61 = sub i64 %60, %59
  %62 = lshr i64 %61, 31
  %63 = trunc i64 %62 to i32
  %64 = mul nsw i64 %51, %54
  %65 = mul nsw i64 %43, %58
  %66 = add i64 %64, 1073741824
  %67 = add i64 %66, %65
  %68 = lshr i64 %67, 31
  %69 = trunc i64 %68 to i32
  %70 = add nsw i32 %32, %63
  %71 = add nsw i32 %31, %69
  %72 = add nuw nsw i64 %30, 1
  %73 = icmp eq i64 %72, %17
  br i1 %73, label %24, label %29
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_imdct(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 1
  %8 = bitcast i8* %2 to i32*
  %9 = bitcast i8* %1 to i32*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  %11 = load double, double* %10, align 8
  %12 = sitofp i32 %7 to double
  %13 = fmul nsz double %12, 4.000000e+00
  %14 = fdiv nsz double 0x400921FB54442D18, %13
  %15 = lshr i64 %3, 2
  %16 = icmp sgt i32 %6, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %4
  %18 = shl i32 %6, 2
  %19 = mul nsw i32 %6, 6
  %20 = sext i32 %7 to i64
  %21 = sext i32 %6 to i64
  %22 = zext i32 %6 to i64
  br label %24

23:                                               ; preds = %38, %4
  ret void

24:                                               ; preds = %17, %38
  %25 = phi i64 [ 0, %17 ], [ %60, %38 ]
  %26 = phi i32 [ 0, %17 ], [ %61, %38 ]
  %27 = shl nuw nsw i32 %26, 1
  %28 = xor i32 %27, -1
  %29 = add i32 %18, %28
  %30 = sitofp i32 %29 to double
  %31 = fmul nsz double %14, %30
  %32 = trunc i64 %25 to i32
  %33 = shl i32 %32, 1
  %34 = add nsw i32 %33, %19
  %35 = or i32 %34, 1
  %36 = sitofp i32 %35 to double
  %37 = fmul nsz double %14, %36
  br label %63

38:                                               ; preds = %63
  %39 = fmul nsz double %11, %81
  %40 = fmul nsz double %39, 0x41E0000000000000
  %41 = fptrunc double %40 to float
  %42 = tail call i64 @llvm.lrint.i64.f32(float %41)
  %43 = icmp slt i64 %42, 2147483647
  %44 = select i1 %43, i64 %42, i64 2147483647
  %45 = icmp sgt i64 %44, -2147483648
  %46 = select i1 %45, i64 %44, i64 -2147483648
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds i32, i32* %9, i64 %25
  store i32 %47, i32* %48, align 4
  %49 = fmul nsz double %11, %83
  %50 = fmul nsz double %49, 0xC1E0000000000000
  %51 = fptrunc double %50 to float
  %52 = tail call i64 @llvm.lrint.i64.f32(float %51)
  %53 = icmp slt i64 %52, 2147483647
  %54 = select i1 %53, i64 %52, i64 2147483647
  %55 = icmp sgt i64 %54, -2147483648
  %56 = select i1 %55, i64 %54, i64 -2147483648
  %57 = trunc i64 %56 to i32
  %58 = add nsw i64 %25, %21
  %59 = getelementptr inbounds i32, i32* %9, i64 %58
  store i32 %57, i32* %59, align 4
  %60 = add nuw nsw i64 %25, 1
  %61 = add nuw nsw i32 %26, 1
  %62 = icmp eq i64 %60, %22
  br i1 %62, label %23, label %24

63:                                               ; preds = %24, %63
  %64 = phi i64 [ 0, %24 ], [ %84, %63 ]
  %65 = phi double [ 0.000000e+00, %24 ], [ %83, %63 ]
  %66 = phi double [ 0.000000e+00, %24 ], [ %81, %63 ]
  %67 = trunc i64 %64 to i32
  %68 = shl i32 %67, 1
  %69 = or i32 %68, 1
  %70 = sitofp i32 %69 to double
  %71 = fmul nsz double %31, %70
  %72 = tail call nsz double @llvm.cos.f64(double %71)
  %73 = fmul nsz double %37, %70
  %74 = tail call nsz double @llvm.cos.f64(double %73)
  %75 = mul nuw nsw i64 %15, %64
  %76 = getelementptr inbounds i32, i32* %8, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sitofp i32 %77 to double
  %79 = fmul nsz double %78, 0x3E00000000000000
  %80 = fmul nsz double %72, %79
  %81 = fadd nsz double %66, %80
  %82 = fmul nsz double %74, %79
  %83 = fadd nsz double %65, %82
  %84 = add nuw nsw i64 %64, 1
  %85 = icmp slt i64 %84, %20
  br i1 %85, label %63, label %38
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @naive_mdct(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #3 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 1
  %8 = bitcast i8* %2 to i32*
  %9 = bitcast i8* %1 to i32*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 5
  %11 = load double, double* %10, align 8
  %12 = sitofp i32 %7 to double
  %13 = fmul nsz double %12, 4.000000e+00
  %14 = fdiv nsz double 0x400921FB54442D18, %13
  %15 = lshr i64 %3, 2
  %16 = icmp sgt i32 %6, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %4
  %18 = shl nsw i32 %6, 2
  %19 = sext i32 %18 to i64
  %20 = sext i32 %7 to i64
  br label %21

21:                                               ; preds = %27, %17
  %22 = phi i64 [ 0, %17 ], [ %39, %27 ]
  %23 = trunc i64 %22 to i32
  %24 = shl i32 %23, 1
  %25 = or i32 %24, 1
  br label %41

26:                                               ; preds = %27, %4
  ret void

27:                                               ; preds = %41
  %28 = fmul nsz double %11, %57
  %29 = fmul nsz double %28, 0x41E0000000000000
  %30 = fptrunc double %29 to float
  %31 = tail call i64 @llvm.lrint.i64.f32(float %30)
  %32 = icmp slt i64 %31, 2147483647
  %33 = select i1 %32, i64 %31, i64 2147483647
  %34 = icmp sgt i64 %33, -2147483648
  %35 = select i1 %34, i64 %33, i64 -2147483648
  %36 = trunc i64 %35 to i32
  %37 = mul nsw i64 %15, %22
  %38 = getelementptr inbounds i32, i32* %9, i64 %37
  store i32 %36, i32* %38, align 4
  %39 = add nuw nsw i64 %22, 1
  %40 = icmp slt i64 %39, %20
  br i1 %40, label %21, label %26

41:                                               ; preds = %21, %41
  %42 = phi i64 [ 0, %21 ], [ %58, %41 ]
  %43 = phi double [ 0.000000e+00, %21 ], [ %57, %41 ]
  %44 = trunc i64 %42 to i32
  %45 = shl i32 %44, 1
  %46 = or i32 %45, 1
  %47 = add nsw i32 %46, %7
  %48 = mul nsw i32 %47, %25
  %49 = getelementptr inbounds i32, i32* %8, i64 %42
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to double
  %52 = fmul nsz double %51, 0x3E00000000000000
  %53 = sitofp i32 %48 to double
  %54 = fmul nsz double %14, %53
  %55 = tail call nsz double @llvm.cos.f64(double %54)
  %56 = fmul nsz double %55, %52
  %57 = fadd nsz double %43, %56
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp slt i64 %58, %19
  br i1 %59, label %41, label %27
}

declare i32 @ff_tx_gen_compound_mapping(%struct.AVTXContext*) local_unnamed_addr #2

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %8 = load i32*, i32** %7, align 8
  %9 = mul nsw i32 %6, 3
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = bitcast i8* %2 to %struct.AVComplexInt32*
  %13 = bitcast i8* %1 to %struct.AVComplexInt32*
  %14 = or i32 %6, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %18, align 8
  %20 = icmp sgt i32 %6, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = sext i32 %6 to i64
  br label %118

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %26 = sext i32 %6 to i64
  %27 = shl nsw i64 %26, 1
  %28 = zext i32 %6 to i64
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ 0, %23 ], [ %116, %29 ]
  %31 = mul i64 %30, 3
  %32 = and i64 %31, 4294967295
  %33 = getelementptr inbounds i32, i32* %8, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %35
  %37 = bitcast %struct.AVComplexInt32* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = add nuw nsw i64 %32, 1
  %40 = getelementptr inbounds i32, i32* %8, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %42
  %44 = bitcast %struct.AVComplexInt32* %43 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = add nuw nsw i64 %32, 2
  %47 = getelementptr inbounds i32, i32* %8, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %49
  %51 = bitcast %struct.AVComplexInt32* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %24, align 8
  %54 = load i32*, i32** %25, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %30
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %53, i64 %57
  %59 = lshr i64 %45, 32
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %52, 32
  %62 = trunc i64 %61 to i32
  %63 = sub nsw i64 %59, %61
  %64 = add nsw i32 %62, %60
  %65 = trunc i64 %45 to i32
  %66 = trunc i64 %52 to i32
  %67 = sub i64 %45, %52
  %68 = add nsw i32 %66, %65
  %69 = trunc i64 %38 to i32
  %70 = add nsw i32 %68, %69
  %71 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %58, i64 0, i32 0
  store i32 %70, i32* %71, align 4
  %72 = lshr i64 %38, 32
  %73 = trunc i64 %72 to i32
  %74 = add nsw i32 %64, %73
  %75 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %53, i64 %57, i32 1
  store i32 %74, i32* %75, align 4
  %76 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %77 = sext i32 %76 to i64
  %78 = shl i64 %63, 32
  %79 = ashr exact i64 %78, 32
  %80 = mul nsw i64 %79, %77
  %81 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %82 = sext i32 %81 to i64
  %83 = shl i64 %67, 32
  %84 = ashr exact i64 %83, 32
  %85 = mul nsw i64 %84, %82
  %86 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %87 = sext i32 %86 to i64
  %88 = sext i32 %68 to i64
  %89 = mul nsw i64 %87, %88
  %90 = sext i32 %64 to i64
  %91 = mul nsw i64 %87, %90
  %92 = add nsw i64 %80, 1073741824
  %93 = add i64 %92, %89
  %94 = lshr i64 %93, 31
  %95 = trunc i64 %94 to i32
  %96 = sub i32 %69, %95
  %97 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %58, i64 %26, i32 0
  store i32 %96, i32* %97, align 4
  %98 = sub nsw i64 1073741824, %85
  %99 = add nsw i64 %98, %91
  %100 = lshr i64 %99, 31
  %101 = trunc i64 %100 to i32
  %102 = sub i32 %73, %101
  %103 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %58, i64 %26, i32 1
  store i32 %102, i32* %103, align 4
  %104 = sub nsw i64 1073741824, %80
  %105 = add nsw i64 %104, %89
  %106 = lshr i64 %105, 31
  %107 = trunc i64 %106 to i32
  %108 = sub i32 %69, %107
  %109 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %58, i64 %27, i32 0
  store i32 %108, i32* %109, align 4
  %110 = add nsw i64 %85, 1073741824
  %111 = add i64 %110, %91
  %112 = lshr i64 %111, 31
  %113 = trunc i64 %112 to i32
  %114 = sub i32 %73, %113
  %115 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %58, i64 %27, i32 1
  store i32 %114, i32* %115, align 4
  %116 = add nuw nsw i64 %30, 1
  %117 = icmp eq i64 %116, %28
  br i1 %117, label %118, label %29

118:                                              ; preds = %29, %21
  %119 = phi i64 [ %22, %21 ], [ %26, %29 ]
  %120 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %121 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %120, align 8
  tail call void %19(%struct.AVComplexInt32* %121) #8
  %122 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %120, align 8
  %123 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 %119
  tail call void %19(%struct.AVComplexInt32* %123) #8
  %124 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %120, align 8
  %125 = shl nsw i64 %119, 1
  %126 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %124, i64 %125
  tail call void %19(%struct.AVComplexInt32* %126) #8
  br i1 %20, label %128, label %127

127:                                              ; preds = %128, %118
  ret void

128:                                              ; preds = %118, %128
  %129 = phi i64 [ %139, %128 ], [ 0, %118 ]
  %130 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %13, i64 %129
  %131 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %120, align 8
  %132 = getelementptr inbounds i32, i32* %11, i64 %129
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %131, i64 %134
  %136 = bitcast %struct.AVComplexInt32* %135 to i64*
  %137 = bitcast %struct.AVComplexInt32* %130 to i64*
  %138 = load i64, i64* %136, align 4
  store i64 %138, i64* %137, align 4
  %139 = add nuw nsw i64 %129, 1
  %140 = icmp slt i64 %139, %10
  br i1 %140, label %128, label %127
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %8 = load i32*, i32** %7, align 8
  %9 = mul nsw i32 %6, 5
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = bitcast i8* %2 to %struct.AVComplexInt32*
  %13 = bitcast i8* %1 to %struct.AVComplexInt32*
  %14 = or i32 %6, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %18, align 8
  %20 = icmp sgt i32 %6, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %4
  %22 = sext i32 %6 to i64
  %23 = mul nsw i64 %22, 3
  br label %195

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %26 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %27 = sext i32 %6 to i64
  %28 = shl nsw i64 %27, 1
  %29 = mul nsw i64 %27, 3
  %30 = shl nsw i64 %27, 2
  %31 = zext i32 %6 to i64
  br label %32

32:                                               ; preds = %32, %24
  %33 = phi i64 [ 0, %24 ], [ %193, %32 ]
  %34 = mul i64 %33, 5
  %35 = and i64 %34, 4294967295
  %36 = getelementptr inbounds i32, i32* %8, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %38
  %40 = bitcast %struct.AVComplexInt32* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = add nuw nsw i64 %35, 1
  %43 = getelementptr inbounds i32, i32* %8, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %45
  %47 = bitcast %struct.AVComplexInt32* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = add nuw nsw i64 %35, 2
  %50 = getelementptr inbounds i32, i32* %8, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %52
  %54 = bitcast %struct.AVComplexInt32* %53 to i64*
  %55 = load i64, i64* %54, align 4
  %56 = add nuw nsw i64 %35, 3
  %57 = getelementptr inbounds i32, i32* %8, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %59
  %61 = bitcast %struct.AVComplexInt32* %60 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = add nuw nsw i64 %35, 4
  %64 = getelementptr inbounds i32, i32* %8, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %12, i64 %66
  %68 = bitcast %struct.AVComplexInt32* %67 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %25, align 8
  %71 = load i32*, i32** %26, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %33
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %70, i64 %74
  %76 = trunc i64 %48 to i32
  %77 = trunc i64 %69 to i32
  %78 = sub i64 %48, %69
  %79 = add nsw i32 %77, %76
  %80 = lshr i64 %48, 32
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %69, 32
  %83 = trunc i64 %82 to i32
  %84 = sub nsw i64 %80, %82
  %85 = add nsw i32 %83, %81
  %86 = trunc i64 %55 to i32
  %87 = trunc i64 %62 to i32
  %88 = sub i64 %55, %62
  %89 = add nsw i32 %87, %86
  %90 = lshr i64 %55, 32
  %91 = trunc i64 %90 to i32
  %92 = lshr i64 %62, 32
  %93 = trunc i64 %92 to i32
  %94 = sub nsw i64 %90, %92
  %95 = add nsw i32 %93, %91
  %96 = trunc i64 %41 to i32
  %97 = add i32 %89, %79
  %98 = add i32 %97, %96
  %99 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 0, i32 0
  store i32 %98, i32* %99, align 4
  %100 = lshr i64 %41, 32
  %101 = trunc i64 %100 to i32
  %102 = add i32 %95, %85
  %103 = add i32 %102, %101
  %104 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %70, i64 %74, i32 1
  store i32 %103, i32* %104, align 4
  %105 = sext i32 %89 to i64
  %106 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %107, %105
  %109 = sext i32 %79 to i64
  %110 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %111, %109
  %113 = add nsw i64 %108, 1073741824
  %114 = sub nsw i64 %113, %112
  %115 = lshr i64 %114, 31
  %116 = trunc i64 %115 to i32
  %117 = mul nsw i64 %107, %109
  %118 = mul nsw i64 %111, %105
  %119 = add nsw i64 %117, 1073741824
  %120 = sub nsw i64 %119, %118
  %121 = lshr i64 %120, 31
  %122 = trunc i64 %121 to i32
  %123 = sext i32 %95 to i64
  %124 = mul nsw i64 %107, %123
  %125 = sext i32 %85 to i64
  %126 = mul nsw i64 %111, %125
  %127 = add nsw i64 %124, 1073741824
  %128 = sub nsw i64 %127, %126
  %129 = lshr i64 %128, 31
  %130 = trunc i64 %129 to i32
  %131 = mul nsw i64 %107, %125
  %132 = mul nsw i64 %111, %123
  %133 = add nsw i64 %131, 1073741824
  %134 = sub nsw i64 %133, %132
  %135 = lshr i64 %134, 31
  %136 = trunc i64 %135 to i32
  %137 = shl i64 %94, 32
  %138 = ashr exact i64 %137, 32
  %139 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %138, %140
  %142 = shl i64 %84, 32
  %143 = ashr exact i64 %142, 32
  %144 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %143, %145
  %147 = add nsw i64 %141, 1073741824
  %148 = sub nsw i64 %147, %146
  %149 = lshr i64 %148, 31
  %150 = trunc i64 %149 to i32
  %151 = mul nsw i64 %143, %140
  %152 = mul nsw i64 %138, %145
  %153 = add nsw i64 %151, 1073741824
  %154 = add i64 %153, %152
  %155 = lshr i64 %154, 31
  %156 = trunc i64 %155 to i32
  %157 = shl i64 %88, 32
  %158 = ashr exact i64 %157, 32
  %159 = mul nsw i64 %158, %140
  %160 = shl i64 %78, 32
  %161 = ashr exact i64 %160, 32
  %162 = mul nsw i64 %161, %145
  %163 = add nsw i64 %159, 1073741824
  %164 = sub nsw i64 %163, %162
  %165 = lshr i64 %164, 31
  %166 = trunc i64 %165 to i32
  %167 = mul nsw i64 %161, %140
  %168 = mul nsw i64 %158, %145
  %169 = add nsw i64 %167, 1073741824
  %170 = add i64 %169, %168
  %171 = lshr i64 %170, 31
  %172 = trunc i64 %171 to i32
  %173 = add i32 %96, %122
  %174 = add i32 %173, %156
  %175 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %27, i32 0
  store i32 %174, i32* %175, align 4
  %176 = add i32 %101, %136
  %177 = sub i32 %176, %172
  %178 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %27, i32 1
  store i32 %177, i32* %178, align 4
  %179 = add i32 %96, %116
  %180 = sub i32 %179, %150
  %181 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %28, i32 0
  store i32 %180, i32* %181, align 4
  %182 = add i32 %101, %130
  %183 = add i32 %182, %166
  %184 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %28, i32 1
  store i32 %183, i32* %184, align 4
  %185 = add i32 %179, %150
  %186 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %29, i32 0
  store i32 %185, i32* %186, align 4
  %187 = sub i32 %182, %166
  %188 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %29, i32 1
  store i32 %187, i32* %188, align 4
  %189 = sub i32 %173, %156
  %190 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %30, i32 0
  store i32 %189, i32* %190, align 4
  %191 = add i32 %176, %172
  %192 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %75, i64 %30, i32 1
  store i32 %191, i32* %192, align 4
  %193 = add nuw nsw i64 %33, 1
  %194 = icmp eq i64 %193, %31
  br i1 %194, label %195, label %32

195:                                              ; preds = %32, %21
  %196 = phi i64 [ %23, %21 ], [ %29, %32 ]
  %197 = phi i64 [ %22, %21 ], [ %27, %32 ]
  %198 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %199 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  tail call void %19(%struct.AVComplexInt32* %199) #8
  %200 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  %201 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %200, i64 %197
  tail call void %19(%struct.AVComplexInt32* %201) #8
  %202 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  %203 = shl nsw i64 %197, 1
  %204 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %202, i64 %203
  tail call void %19(%struct.AVComplexInt32* %204) #8
  %205 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  %206 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %205, i64 %196
  tail call void %19(%struct.AVComplexInt32* %206) #8
  %207 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  %208 = shl nsw i64 %197, 2
  %209 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %207, i64 %208
  tail call void %19(%struct.AVComplexInt32* %209) #8
  br i1 %20, label %211, label %210

210:                                              ; preds = %211, %195
  ret void

211:                                              ; preds = %195, %211
  %212 = phi i64 [ %222, %211 ], [ 0, %195 ]
  %213 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %13, i64 %212
  %214 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %198, align 8
  %215 = getelementptr inbounds i32, i32* %11, i64 %212
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %214, i64 %217
  %219 = bitcast %struct.AVComplexInt32* %218 to i64*
  %220 = bitcast %struct.AVComplexInt32* %213 to i64*
  %221 = load i64, i64* %219, align 4
  store i64 %221, i64* %220, align 4
  %222 = add nuw nsw i64 %212, 1
  %223 = icmp slt i64 %222, %10
  br i1 %223, label %211, label %210
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_fft_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexInt32], align 16
  %6 = alloca [15 x %struct.AVComplexInt32], align 16
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %10 = load i32*, i32** %9, align 8
  %11 = mul nsw i32 %8, 15
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = bitcast i8* %2 to %struct.AVComplexInt32*
  %15 = bitcast i8* %1 to %struct.AVComplexInt32*
  %16 = bitcast [15 x %struct.AVComplexInt32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 120, i1 false)
  %17 = or i32 %8, 1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true), !range !3
  %19 = xor i32 %18, 31
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %20
  %22 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %21, align 8
  %23 = icmp sgt i32 %8, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %4
  %25 = sext i32 %8 to i64
  %26 = mul nsw i64 %25, 3
  %27 = mul nsw i64 %25, 5
  %28 = mul nsw i64 %25, 6
  %29 = mul nsw i64 %25, 7
  %30 = mul nsw i64 %25, 9
  %31 = mul nsw i64 %25, 10
  %32 = mul nsw i64 %25, 11
  %33 = mul nsw i64 %25, 12
  %34 = mul nsw i64 %25, 13
  %35 = mul nsw i64 %25, 14
  br label %233

36:                                               ; preds = %4
  %37 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %38 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %39 = sext i32 %8 to i64
  %40 = bitcast [15 x %struct.AVComplexInt32]* %5 to i8*
  %41 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 0
  %42 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 0
  %43 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 1
  %44 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 1
  %45 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 0
  %46 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 0
  %47 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 1
  %48 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 1
  %49 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 0
  %50 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 1
  %51 = mul nsw i64 %39, 6
  %52 = mul nsw i64 %39, 12
  %53 = mul nsw i64 %39, 3
  %54 = mul nsw i64 %39, 9
  %55 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 0
  %56 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 0
  %57 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 1
  %58 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 1
  %59 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 0
  %60 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 0
  %61 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 1
  %62 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 1
  %63 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 0
  %64 = mul nsw i64 %39, 10
  %65 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 1
  %66 = mul nsw i64 %39, 7
  %67 = mul nsw i64 %39, 13
  %68 = shl nsw i64 %39, 2
  %69 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 0
  %70 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 0
  %71 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 1
  %72 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 1
  %73 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 0
  %74 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 0
  %75 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 1
  %76 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 1
  %77 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 0
  %78 = mul nsw i64 %39, 5
  %79 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 1
  %80 = mul nsw i64 %39, 11
  %81 = shl nsw i64 %39, 1
  %82 = shl nsw i64 %39, 3
  %83 = mul nsw i64 %39, 14
  %84 = zext i32 %8 to i64
  %85 = bitcast [15 x %struct.AVComplexInt32]* %6 to i64*
  %86 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 1
  %87 = bitcast %struct.AVComplexInt32* %86 to i64*
  %88 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 2
  %89 = bitcast %struct.AVComplexInt32* %88 to i64*
  %90 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 3
  %91 = bitcast %struct.AVComplexInt32* %90 to i64*
  %92 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 4
  %93 = bitcast %struct.AVComplexInt32* %92 to i64*
  %94 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 5
  %95 = bitcast %struct.AVComplexInt32* %94 to i64*
  %96 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 6
  %97 = bitcast %struct.AVComplexInt32* %96 to i64*
  %98 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 7
  %99 = bitcast %struct.AVComplexInt32* %98 to i64*
  %100 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 8
  %101 = bitcast %struct.AVComplexInt32* %100 to i64*
  %102 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 9
  %103 = bitcast %struct.AVComplexInt32* %102 to i64*
  %104 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 10
  %105 = bitcast %struct.AVComplexInt32* %104 to i64*
  %106 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 11
  %107 = bitcast %struct.AVComplexInt32* %106 to i64*
  %108 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 12
  %109 = bitcast %struct.AVComplexInt32* %108 to i64*
  %110 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 13
  %111 = bitcast %struct.AVComplexInt32* %110 to i64*
  %112 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 14
  %113 = bitcast %struct.AVComplexInt32* %112 to i64*
  br label %114

114:                                              ; preds = %336, %36
  %115 = phi i64 [ 0, %36 ], [ %662, %336 ]
  %116 = mul i64 %115, 15
  %117 = and i64 %116, 4294967295
  %118 = getelementptr inbounds i32, i32* %10, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %120
  %122 = bitcast %struct.AVComplexInt32* %121 to i64*
  %123 = load i64, i64* %122, align 4
  store i64 %123, i64* %85, align 16
  %124 = add nuw nsw i64 %117, 1
  %125 = getelementptr inbounds i32, i32* %10, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %127
  %129 = bitcast %struct.AVComplexInt32* %128 to i64*
  %130 = load i64, i64* %129, align 4
  store i64 %130, i64* %87, align 8
  %131 = add nuw nsw i64 %117, 2
  %132 = getelementptr inbounds i32, i32* %10, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %134
  %136 = bitcast %struct.AVComplexInt32* %135 to i64*
  %137 = load i64, i64* %136, align 4
  store i64 %137, i64* %89, align 16
  %138 = add nuw nsw i64 %117, 3
  %139 = getelementptr inbounds i32, i32* %10, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %141
  %143 = bitcast %struct.AVComplexInt32* %142 to i64*
  %144 = load i64, i64* %143, align 4
  store i64 %144, i64* %91, align 8
  %145 = add nuw nsw i64 %117, 4
  %146 = getelementptr inbounds i32, i32* %10, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %148
  %150 = bitcast %struct.AVComplexInt32* %149 to i64*
  %151 = load i64, i64* %150, align 4
  store i64 %151, i64* %93, align 16
  %152 = add nuw nsw i64 %117, 5
  %153 = getelementptr inbounds i32, i32* %10, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %155
  %157 = bitcast %struct.AVComplexInt32* %156 to i64*
  %158 = load i64, i64* %157, align 4
  store i64 %158, i64* %95, align 8
  %159 = add nuw nsw i64 %117, 6
  %160 = getelementptr inbounds i32, i32* %10, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %162
  %164 = bitcast %struct.AVComplexInt32* %163 to i64*
  %165 = load i64, i64* %164, align 4
  store i64 %165, i64* %97, align 16
  %166 = add nuw nsw i64 %117, 7
  %167 = getelementptr inbounds i32, i32* %10, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %169
  %171 = bitcast %struct.AVComplexInt32* %170 to i64*
  %172 = load i64, i64* %171, align 4
  store i64 %172, i64* %99, align 8
  %173 = add nuw nsw i64 %117, 8
  %174 = getelementptr inbounds i32, i32* %10, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %176
  %178 = bitcast %struct.AVComplexInt32* %177 to i64*
  %179 = load i64, i64* %178, align 4
  store i64 %179, i64* %101, align 16
  %180 = add nuw nsw i64 %117, 9
  %181 = getelementptr inbounds i32, i32* %10, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %183
  %185 = bitcast %struct.AVComplexInt32* %184 to i64*
  %186 = load i64, i64* %185, align 4
  store i64 %186, i64* %103, align 8
  %187 = add nuw nsw i64 %117, 10
  %188 = getelementptr inbounds i32, i32* %10, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %190
  %192 = bitcast %struct.AVComplexInt32* %191 to i64*
  %193 = load i64, i64* %192, align 4
  store i64 %193, i64* %105, align 16
  %194 = add nuw nsw i64 %117, 11
  %195 = getelementptr inbounds i32, i32* %10, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %197
  %199 = bitcast %struct.AVComplexInt32* %198 to i64*
  %200 = load i64, i64* %199, align 4
  store i64 %200, i64* %107, align 8
  %201 = add nuw nsw i64 %117, 12
  %202 = getelementptr inbounds i32, i32* %10, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %204
  %206 = bitcast %struct.AVComplexInt32* %205 to i64*
  %207 = load i64, i64* %206, align 4
  store i64 %207, i64* %109, align 16
  %208 = add nuw nsw i64 %117, 13
  %209 = getelementptr inbounds i32, i32* %10, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %211
  %213 = bitcast %struct.AVComplexInt32* %212 to i64*
  %214 = load i64, i64* %213, align 4
  store i64 %214, i64* %111, align 8
  %215 = add nuw nsw i64 %117, 14
  %216 = getelementptr inbounds i32, i32* %10, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %14, i64 %218
  %220 = bitcast %struct.AVComplexInt32* %219 to i64*
  %221 = load i64, i64* %220, align 4
  store i64 %221, i64* %113, align 16
  %222 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %37, align 8
  %223 = load i32*, i32** %38, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 %115
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %40) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 120, i1 false) #8
  %227 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %228 = sext i32 %227 to i64
  %229 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %230 = sext i32 %229 to i64
  %231 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %232 = sext i32 %231 to i64
  br label %278

233:                                              ; preds = %336, %24
  %234 = phi i64 [ %35, %24 ], [ %83, %336 ]
  %235 = phi i64 [ %34, %24 ], [ %67, %336 ]
  %236 = phi i64 [ %33, %24 ], [ %52, %336 ]
  %237 = phi i64 [ %32, %24 ], [ %80, %336 ]
  %238 = phi i64 [ %31, %24 ], [ %64, %336 ]
  %239 = phi i64 [ %30, %24 ], [ %54, %336 ]
  %240 = phi i64 [ %29, %24 ], [ %66, %336 ]
  %241 = phi i64 [ %28, %24 ], [ %51, %336 ]
  %242 = phi i64 [ %27, %24 ], [ %78, %336 ]
  %243 = phi i64 [ %26, %24 ], [ %53, %336 ]
  %244 = phi i64 [ %25, %24 ], [ %39, %336 ]
  %245 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %246 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  tail call void %22(%struct.AVComplexInt32* %246) #8
  %247 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %248 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %247, i64 %244
  tail call void %22(%struct.AVComplexInt32* %248) #8
  %249 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %250 = shl nsw i64 %244, 1
  %251 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %249, i64 %250
  tail call void %22(%struct.AVComplexInt32* %251) #8
  %252 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %253 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %252, i64 %243
  tail call void %22(%struct.AVComplexInt32* %253) #8
  %254 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %255 = shl nsw i64 %244, 2
  %256 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %254, i64 %255
  tail call void %22(%struct.AVComplexInt32* %256) #8
  %257 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %258 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %257, i64 %242
  tail call void %22(%struct.AVComplexInt32* %258) #8
  %259 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %260 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %259, i64 %241
  tail call void %22(%struct.AVComplexInt32* %260) #8
  %261 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %262 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %261, i64 %240
  tail call void %22(%struct.AVComplexInt32* %262) #8
  %263 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %264 = shl nsw i64 %244, 3
  %265 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %263, i64 %264
  tail call void %22(%struct.AVComplexInt32* %265) #8
  %266 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %267 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %266, i64 %239
  tail call void %22(%struct.AVComplexInt32* %267) #8
  %268 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %269 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %268, i64 %238
  tail call void %22(%struct.AVComplexInt32* %269) #8
  %270 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %271 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %270, i64 %237
  tail call void %22(%struct.AVComplexInt32* %271) #8
  %272 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %273 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %272, i64 %236
  tail call void %22(%struct.AVComplexInt32* %273) #8
  %274 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %275 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %274, i64 %235
  tail call void %22(%struct.AVComplexInt32* %275) #8
  %276 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %277 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %276, i64 %234
  tail call void %22(%struct.AVComplexInt32* %277) #8
  br i1 %23, label %665, label %664

278:                                              ; preds = %278, %114
  %279 = phi i64 [ 0, %114 ], [ %334, %278 ]
  %280 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %279
  %281 = mul nuw nsw i64 %279, 3
  %282 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %281
  %283 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %282, i64 1, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %282, i64 2, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = sub nsw i32 %284, %286
  %288 = add nsw i32 %286, %284
  %289 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %282, i64 1, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %282, i64 2, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = sub nsw i32 %290, %292
  %294 = add nsw i32 %292, %290
  %295 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %282, i64 0, i32 0
  %296 = load i32, i32* %295, align 8
  %297 = add nsw i32 %296, %294
  %298 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %280, i64 0, i32 0
  store i32 %297, i32* %298, align 8
  %299 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %281, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = add nsw i32 %300, %288
  %302 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %279, i32 1
  store i32 %301, i32* %302, align 4
  %303 = sext i32 %287 to i64
  %304 = mul nsw i64 %303, %228
  %305 = sext i32 %293 to i64
  %306 = mul nsw i64 %305, %230
  %307 = sext i32 %294 to i64
  %308 = mul nsw i64 %307, %232
  %309 = sext i32 %288 to i64
  %310 = mul nsw i64 %309, %232
  %311 = add nsw i64 %304, 1073741824
  %312 = add i64 %311, %308
  %313 = lshr i64 %312, 31
  %314 = trunc i64 %313 to i32
  %315 = sub i32 %296, %314
  %316 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %280, i64 5, i32 0
  store i32 %315, i32* %316, align 8
  %317 = add i64 %310, 1073741824
  %318 = sub i64 %317, %306
  %319 = lshr i64 %318, 31
  %320 = trunc i64 %319 to i32
  %321 = sub i32 %300, %320
  %322 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %280, i64 5, i32 1
  store i32 %321, i32* %322, align 4
  %323 = sub i64 1073741824, %304
  %324 = add nsw i64 %323, %308
  %325 = lshr i64 %324, 31
  %326 = trunc i64 %325 to i32
  %327 = sub i32 %296, %326
  %328 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %280, i64 10, i32 0
  store i32 %327, i32* %328, align 8
  %329 = add i64 %317, %306
  %330 = lshr i64 %329, 31
  %331 = trunc i64 %330 to i32
  %332 = sub i32 %300, %331
  %333 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %280, i64 10, i32 1
  store i32 %332, i32* %333, align 4
  %334 = add nuw nsw i64 %279, 1
  %335 = icmp eq i64 %334, 5
  br i1 %335, label %336, label %278

336:                                              ; preds = %278
  %337 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %222, i64 %226
  %338 = load i32, i32* %41, align 8
  %339 = load i32, i32* %42, align 16
  %340 = sub nsw i32 %338, %339
  %341 = add nsw i32 %339, %338
  %342 = load i32, i32* %43, align 4
  %343 = load i32, i32* %44, align 4
  %344 = sub nsw i32 %342, %343
  %345 = add nsw i32 %343, %342
  %346 = load i32, i32* %45, align 16
  %347 = load i32, i32* %46, align 8
  %348 = sub nsw i32 %346, %347
  %349 = add nsw i32 %347, %346
  %350 = load i32, i32* %47, align 4
  %351 = load i32, i32* %48, align 4
  %352 = sub nsw i32 %350, %351
  %353 = add nsw i32 %351, %350
  %354 = load i32, i32* %49, align 16
  %355 = add i32 %349, %341
  %356 = add i32 %355, %354
  %357 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 0, i32 0
  store i32 %356, i32* %357, align 4
  %358 = load i32, i32* %50, align 4
  %359 = add i32 %353, %345
  %360 = add i32 %359, %358
  %361 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %222, i64 %226, i32 1
  store i32 %360, i32* %361, align 4
  %362 = sext i32 %349 to i64
  %363 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %364 = sext i32 %363 to i64
  %365 = mul nsw i64 %364, %362
  %366 = sext i32 %341 to i64
  %367 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %368 = sext i32 %367 to i64
  %369 = mul nsw i64 %368, %366
  %370 = add nsw i64 %365, 1073741824
  %371 = sub nsw i64 %370, %369
  %372 = lshr i64 %371, 31
  %373 = trunc i64 %372 to i32
  %374 = mul nsw i64 %364, %366
  %375 = mul nsw i64 %368, %362
  %376 = add nsw i64 %374, 1073741824
  %377 = sub nsw i64 %376, %375
  %378 = lshr i64 %377, 31
  %379 = trunc i64 %378 to i32
  %380 = sext i32 %353 to i64
  %381 = mul nsw i64 %364, %380
  %382 = sext i32 %345 to i64
  %383 = mul nsw i64 %368, %382
  %384 = add nsw i64 %381, 1073741824
  %385 = sub nsw i64 %384, %383
  %386 = lshr i64 %385, 31
  %387 = trunc i64 %386 to i32
  %388 = mul nsw i64 %364, %382
  %389 = mul nsw i64 %368, %380
  %390 = add nsw i64 %388, 1073741824
  %391 = sub nsw i64 %390, %389
  %392 = lshr i64 %391, 31
  %393 = trunc i64 %392 to i32
  %394 = sext i32 %352 to i64
  %395 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %396 = sext i32 %395 to i64
  %397 = mul nsw i64 %396, %394
  %398 = sext i32 %344 to i64
  %399 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %400 = sext i32 %399 to i64
  %401 = mul nsw i64 %400, %398
  %402 = add nsw i64 %397, 1073741824
  %403 = sub nsw i64 %402, %401
  %404 = lshr i64 %403, 31
  %405 = trunc i64 %404 to i32
  %406 = mul nsw i64 %396, %398
  %407 = mul nsw i64 %400, %394
  %408 = add nsw i64 %406, 1073741824
  %409 = add i64 %408, %407
  %410 = lshr i64 %409, 31
  %411 = trunc i64 %410 to i32
  %412 = sext i32 %348 to i64
  %413 = mul nsw i64 %396, %412
  %414 = sext i32 %340 to i64
  %415 = mul nsw i64 %400, %414
  %416 = add nsw i64 %413, 1073741824
  %417 = sub nsw i64 %416, %415
  %418 = lshr i64 %417, 31
  %419 = trunc i64 %418 to i32
  %420 = mul nsw i64 %396, %414
  %421 = mul nsw i64 %400, %412
  %422 = add nsw i64 %420, 1073741824
  %423 = add i64 %422, %421
  %424 = lshr i64 %423, 31
  %425 = trunc i64 %424 to i32
  %426 = add i32 %354, %379
  %427 = add i32 %426, %411
  %428 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %51, i32 0
  store i32 %427, i32* %428, align 4
  %429 = add i32 %358, %393
  %430 = sub i32 %429, %425
  %431 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %51, i32 1
  store i32 %430, i32* %431, align 4
  %432 = add i32 %354, %373
  %433 = sub i32 %432, %405
  %434 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %52, i32 0
  store i32 %433, i32* %434, align 4
  %435 = add i32 %358, %387
  %436 = add i32 %435, %419
  %437 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %52, i32 1
  store i32 %436, i32* %437, align 4
  %438 = add i32 %432, %405
  %439 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %53, i32 0
  store i32 %438, i32* %439, align 4
  %440 = sub i32 %435, %419
  %441 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %53, i32 1
  store i32 %440, i32* %441, align 4
  %442 = sub i32 %426, %411
  %443 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %54, i32 0
  store i32 %442, i32* %443, align 4
  %444 = add i32 %429, %425
  %445 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %54, i32 1
  store i32 %444, i32* %445, align 4
  %446 = load i32, i32* %55, align 16
  %447 = load i32, i32* %56, align 8
  %448 = sub nsw i32 %446, %447
  %449 = add nsw i32 %447, %446
  %450 = load i32, i32* %57, align 4
  %451 = load i32, i32* %58, align 4
  %452 = sub nsw i32 %450, %451
  %453 = add nsw i32 %451, %450
  %454 = load i32, i32* %59, align 8
  %455 = load i32, i32* %60, align 16
  %456 = sub nsw i32 %454, %455
  %457 = add nsw i32 %455, %454
  %458 = load i32, i32* %61, align 4
  %459 = load i32, i32* %62, align 4
  %460 = sub nsw i32 %458, %459
  %461 = add nsw i32 %459, %458
  %462 = load i32, i32* %63, align 8
  %463 = add i32 %457, %449
  %464 = add i32 %463, %462
  %465 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %64, i32 0
  store i32 %464, i32* %465, align 4
  %466 = load i32, i32* %65, align 4
  %467 = add i32 %461, %453
  %468 = add i32 %467, %466
  %469 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %64, i32 1
  store i32 %468, i32* %469, align 4
  %470 = sext i32 %457 to i64
  %471 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %472 = sext i32 %471 to i64
  %473 = mul nsw i64 %472, %470
  %474 = sext i32 %449 to i64
  %475 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %476 = sext i32 %475 to i64
  %477 = mul nsw i64 %476, %474
  %478 = add nsw i64 %473, 1073741824
  %479 = sub nsw i64 %478, %477
  %480 = lshr i64 %479, 31
  %481 = trunc i64 %480 to i32
  %482 = mul nsw i64 %472, %474
  %483 = mul nsw i64 %476, %470
  %484 = add nsw i64 %482, 1073741824
  %485 = sub nsw i64 %484, %483
  %486 = lshr i64 %485, 31
  %487 = trunc i64 %486 to i32
  %488 = sext i32 %461 to i64
  %489 = mul nsw i64 %472, %488
  %490 = sext i32 %453 to i64
  %491 = mul nsw i64 %476, %490
  %492 = add nsw i64 %489, 1073741824
  %493 = sub nsw i64 %492, %491
  %494 = lshr i64 %493, 31
  %495 = trunc i64 %494 to i32
  %496 = mul nsw i64 %472, %490
  %497 = mul nsw i64 %476, %488
  %498 = add nsw i64 %496, 1073741824
  %499 = sub nsw i64 %498, %497
  %500 = lshr i64 %499, 31
  %501 = trunc i64 %500 to i32
  %502 = sext i32 %460 to i64
  %503 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %504 = sext i32 %503 to i64
  %505 = mul nsw i64 %504, %502
  %506 = sext i32 %452 to i64
  %507 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %508 = sext i32 %507 to i64
  %509 = mul nsw i64 %508, %506
  %510 = add nsw i64 %505, 1073741824
  %511 = sub nsw i64 %510, %509
  %512 = lshr i64 %511, 31
  %513 = trunc i64 %512 to i32
  %514 = mul nsw i64 %504, %506
  %515 = mul nsw i64 %508, %502
  %516 = add nsw i64 %514, 1073741824
  %517 = add i64 %516, %515
  %518 = lshr i64 %517, 31
  %519 = trunc i64 %518 to i32
  %520 = sext i32 %456 to i64
  %521 = mul nsw i64 %504, %520
  %522 = sext i32 %448 to i64
  %523 = mul nsw i64 %508, %522
  %524 = add nsw i64 %521, 1073741824
  %525 = sub nsw i64 %524, %523
  %526 = lshr i64 %525, 31
  %527 = trunc i64 %526 to i32
  %528 = mul nsw i64 %504, %522
  %529 = mul nsw i64 %508, %520
  %530 = add nsw i64 %528, 1073741824
  %531 = add i64 %530, %529
  %532 = lshr i64 %531, 31
  %533 = trunc i64 %532 to i32
  %534 = add i32 %462, %487
  %535 = add i32 %534, %519
  %536 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %39, i32 0
  store i32 %535, i32* %536, align 4
  %537 = add i32 %466, %501
  %538 = sub i32 %537, %533
  %539 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %39, i32 1
  store i32 %538, i32* %539, align 4
  %540 = add i32 %462, %481
  %541 = sub i32 %540, %513
  %542 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %66, i32 0
  store i32 %541, i32* %542, align 4
  %543 = add i32 %466, %495
  %544 = add i32 %543, %527
  %545 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %66, i32 1
  store i32 %544, i32* %545, align 4
  %546 = add i32 %540, %513
  %547 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %67, i32 0
  store i32 %546, i32* %547, align 4
  %548 = sub i32 %543, %527
  %549 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %67, i32 1
  store i32 %548, i32* %549, align 4
  %550 = sub i32 %534, %519
  %551 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %68, i32 0
  store i32 %550, i32* %551, align 4
  %552 = add i32 %537, %533
  %553 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %68, i32 1
  store i32 %552, i32* %553, align 4
  %554 = load i32, i32* %69, align 8
  %555 = load i32, i32* %70, align 16
  %556 = sub nsw i32 %554, %555
  %557 = add nsw i32 %555, %554
  %558 = load i32, i32* %71, align 4
  %559 = load i32, i32* %72, align 4
  %560 = sub nsw i32 %558, %559
  %561 = add nsw i32 %559, %558
  %562 = load i32, i32* %73, align 16
  %563 = load i32, i32* %74, align 8
  %564 = sub nsw i32 %562, %563
  %565 = add nsw i32 %563, %562
  %566 = load i32, i32* %75, align 4
  %567 = load i32, i32* %76, align 4
  %568 = sub nsw i32 %566, %567
  %569 = add nsw i32 %567, %566
  %570 = load i32, i32* %77, align 16
  %571 = add i32 %565, %557
  %572 = add i32 %571, %570
  %573 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %78, i32 0
  store i32 %572, i32* %573, align 4
  %574 = load i32, i32* %79, align 4
  %575 = add i32 %569, %561
  %576 = add i32 %575, %574
  %577 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %78, i32 1
  store i32 %576, i32* %577, align 4
  %578 = sext i32 %565 to i64
  %579 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %580 = sext i32 %579 to i64
  %581 = mul nsw i64 %580, %578
  %582 = sext i32 %557 to i64
  %583 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %584 = sext i32 %583 to i64
  %585 = mul nsw i64 %584, %582
  %586 = add nsw i64 %581, 1073741824
  %587 = sub nsw i64 %586, %585
  %588 = lshr i64 %587, 31
  %589 = trunc i64 %588 to i32
  %590 = mul nsw i64 %580, %582
  %591 = mul nsw i64 %584, %578
  %592 = add nsw i64 %590, 1073741824
  %593 = sub nsw i64 %592, %591
  %594 = lshr i64 %593, 31
  %595 = trunc i64 %594 to i32
  %596 = sext i32 %569 to i64
  %597 = mul nsw i64 %580, %596
  %598 = sext i32 %561 to i64
  %599 = mul nsw i64 %584, %598
  %600 = add nsw i64 %597, 1073741824
  %601 = sub nsw i64 %600, %599
  %602 = lshr i64 %601, 31
  %603 = trunc i64 %602 to i32
  %604 = mul nsw i64 %580, %598
  %605 = mul nsw i64 %584, %596
  %606 = add nsw i64 %604, 1073741824
  %607 = sub nsw i64 %606, %605
  %608 = lshr i64 %607, 31
  %609 = trunc i64 %608 to i32
  %610 = sext i32 %568 to i64
  %611 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %612 = sext i32 %611 to i64
  %613 = mul nsw i64 %612, %610
  %614 = sext i32 %560 to i64
  %615 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %616 = sext i32 %615 to i64
  %617 = mul nsw i64 %616, %614
  %618 = add nsw i64 %613, 1073741824
  %619 = sub nsw i64 %618, %617
  %620 = lshr i64 %619, 31
  %621 = trunc i64 %620 to i32
  %622 = mul nsw i64 %612, %614
  %623 = mul nsw i64 %616, %610
  %624 = add nsw i64 %622, 1073741824
  %625 = add i64 %624, %623
  %626 = lshr i64 %625, 31
  %627 = trunc i64 %626 to i32
  %628 = sext i32 %564 to i64
  %629 = mul nsw i64 %612, %628
  %630 = sext i32 %556 to i64
  %631 = mul nsw i64 %616, %630
  %632 = add nsw i64 %629, 1073741824
  %633 = sub nsw i64 %632, %631
  %634 = lshr i64 %633, 31
  %635 = trunc i64 %634 to i32
  %636 = mul nsw i64 %612, %630
  %637 = mul nsw i64 %616, %628
  %638 = add nsw i64 %636, 1073741824
  %639 = add i64 %638, %637
  %640 = lshr i64 %639, 31
  %641 = trunc i64 %640 to i32
  %642 = add i32 %570, %595
  %643 = add i32 %642, %627
  %644 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %80, i32 0
  store i32 %643, i32* %644, align 4
  %645 = add i32 %574, %609
  %646 = sub i32 %645, %641
  %647 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %80, i32 1
  store i32 %646, i32* %647, align 4
  %648 = add i32 %570, %589
  %649 = sub i32 %648, %621
  %650 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %81, i32 0
  store i32 %649, i32* %650, align 4
  %651 = add i32 %574, %603
  %652 = add i32 %651, %635
  %653 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %81, i32 1
  store i32 %652, i32* %653, align 4
  %654 = add i32 %648, %621
  %655 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %82, i32 0
  store i32 %654, i32* %655, align 4
  %656 = sub i32 %651, %635
  %657 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %82, i32 1
  store i32 %656, i32* %657, align 4
  %658 = sub i32 %642, %627
  %659 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %83, i32 0
  store i32 %658, i32* %659, align 4
  %660 = add i32 %645, %641
  %661 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %337, i64 %83, i32 1
  store i32 %660, i32* %661, align 4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %40) #8
  %662 = add nuw nsw i64 %115, 1
  %663 = icmp eq i64 %662, %84
  br i1 %663, label %233, label %114

664:                                              ; preds = %665, %233
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %16) #8
  ret void

665:                                              ; preds = %233, %665
  %666 = phi i64 [ %676, %665 ], [ 0, %233 ]
  %667 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %15, i64 %666
  %668 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %245, align 8
  %669 = getelementptr inbounds i32, i32* %13, i64 %666
  %670 = load i32, i32* %669, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %668, i64 %671
  %673 = bitcast %struct.AVComplexInt32* %672 to i64*
  %674 = bitcast %struct.AVComplexInt32* %667 to i64*
  %675 = load i64, i64* %673, align 4
  store i64 %675, i64* %674, align 4
  %676 = add nuw nsw i64 %666, 1
  %677 = icmp slt i64 %676, %12
  br i1 %677, label %665, label %664
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexInt32*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = bitcast i8* %2 to i32*
  %17 = or i32 %9, 1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true), !range !3
  %19 = xor i32 %18, 31
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %20
  %22 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %21, align 8
  %23 = lshr i64 %3, 2
  %24 = mul i32 %9, 6
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %23, %26
  %28 = getelementptr inbounds i32, i32* %16, i64 %27
  %29 = icmp sgt i32 %9, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  %31 = sext i32 %9 to i64
  br label %199

32:                                               ; preds = %4
  %33 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %35 = sext i32 %9 to i64
  %36 = shl nsw i64 %35, 1
  %37 = zext i32 %9 to i64
  br label %38

38:                                               ; preds = %38, %32
  %39 = phi i64 [ 0, %32 ], [ %197, %38 ]
  %40 = mul i64 %39, 3
  %41 = and i64 %40, 4294967295
  %42 = getelementptr inbounds i32, i32* %13, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 0, %43
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %23, %45
  %47 = getelementptr inbounds i32, i32* %28, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %43 to i64
  %50 = mul nsw i64 %23, %49
  %51 = getelementptr inbounds i32, i32* %16, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = ashr i32 %43, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %54, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = sext i32 %48 to i64
  %59 = mul nsw i64 %57, %58
  %60 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %54, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = sext i32 %52 to i64
  %64 = mul nsw i64 %62, %63
  %65 = add nsw i64 %59, 1073741824
  %66 = sub nsw i64 %65, %64
  %67 = lshr i64 %66, 31
  %68 = trunc i64 %67 to i32
  %69 = mul nsw i64 %62, %58
  %70 = mul nsw i64 %57, %63
  %71 = add nsw i64 %70, 1073741824
  %72 = add i64 %71, %69
  %73 = lshr i64 %72, 31
  %74 = trunc i64 %73 to i32
  %75 = add nuw nsw i64 %41, 1
  %76 = getelementptr inbounds i32, i32* %13, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sub nsw i32 0, %77
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %23, %79
  %81 = getelementptr inbounds i32, i32* %28, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %77 to i64
  %84 = mul nsw i64 %23, %83
  %85 = getelementptr inbounds i32, i32* %16, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = ashr i32 %77, 1
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %88, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = sext i32 %82 to i64
  %93 = mul nsw i64 %91, %92
  %94 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %88, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = sext i32 %86 to i64
  %98 = mul nsw i64 %96, %97
  %99 = add nsw i64 %93, 1073741824
  %100 = sub nsw i64 %99, %98
  %101 = lshr i64 %100, 31
  %102 = trunc i64 %101 to i32
  %103 = mul nsw i64 %96, %92
  %104 = mul nsw i64 %91, %97
  %105 = add nsw i64 %104, 1073741824
  %106 = add i64 %105, %103
  %107 = lshr i64 %106, 31
  %108 = trunc i64 %107 to i32
  %109 = add nuw nsw i64 %41, 2
  %110 = getelementptr inbounds i32, i32* %13, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 0, %111
  %113 = sext i32 %112 to i64
  %114 = mul nsw i64 %23, %113
  %115 = getelementptr inbounds i32, i32* %28, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %111 to i64
  %118 = mul nsw i64 %23, %117
  %119 = getelementptr inbounds i32, i32* %16, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = ashr i32 %111, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %122, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = sext i32 %116 to i64
  %127 = mul nsw i64 %125, %126
  %128 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %122, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = sext i32 %120 to i64
  %132 = mul nsw i64 %130, %131
  %133 = add nsw i64 %127, 1073741824
  %134 = sub nsw i64 %133, %132
  %135 = lshr i64 %134, 31
  %136 = trunc i64 %135 to i32
  %137 = mul nsw i64 %130, %126
  %138 = mul nsw i64 %125, %131
  %139 = add nsw i64 %138, 1073741824
  %140 = add i64 %139, %137
  %141 = lshr i64 %140, 31
  %142 = trunc i64 %141 to i32
  %143 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %33, align 8
  %144 = load i32*, i32** %34, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 %39
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %143, i64 %147
  %149 = sub nsw i64 %107, %141
  %150 = add nsw i32 %142, %108
  %151 = sub nsw i64 %101, %135
  %152 = add nsw i32 %136, %102
  %153 = add nsw i32 %152, %68
  %154 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %148, i64 0, i32 0
  store i32 %153, i32* %154, align 4
  %155 = add nsw i32 %150, %74
  %156 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %143, i64 %147, i32 1
  store i32 %155, i32* %156, align 4
  %157 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %158 = sext i32 %157 to i64
  %159 = shl i64 %149, 32
  %160 = ashr exact i64 %159, 32
  %161 = mul nsw i64 %160, %158
  %162 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %163 = sext i32 %162 to i64
  %164 = shl i64 %151, 32
  %165 = ashr exact i64 %164, 32
  %166 = mul nsw i64 %165, %163
  %167 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %168 = sext i32 %167 to i64
  %169 = sext i32 %152 to i64
  %170 = mul nsw i64 %168, %169
  %171 = sext i32 %150 to i64
  %172 = mul nsw i64 %168, %171
  %173 = add nsw i64 %161, 1073741824
  %174 = add i64 %173, %170
  %175 = lshr i64 %174, 31
  %176 = trunc i64 %175 to i32
  %177 = sub i32 %68, %176
  %178 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %148, i64 %35, i32 0
  store i32 %177, i32* %178, align 4
  %179 = sub nsw i64 1073741824, %166
  %180 = add nsw i64 %179, %172
  %181 = lshr i64 %180, 31
  %182 = trunc i64 %181 to i32
  %183 = sub i32 %74, %182
  %184 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %148, i64 %35, i32 1
  store i32 %183, i32* %184, align 4
  %185 = sub nsw i64 1073741824, %161
  %186 = add nsw i64 %185, %170
  %187 = lshr i64 %186, 31
  %188 = trunc i64 %187 to i32
  %189 = sub i32 %68, %188
  %190 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %148, i64 %36, i32 0
  store i32 %189, i32* %190, align 4
  %191 = add nsw i64 %166, 1073741824
  %192 = add i64 %191, %172
  %193 = lshr i64 %192, 31
  %194 = trunc i64 %193 to i32
  %195 = sub i32 %74, %194
  %196 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %148, i64 %36, i32 1
  store i32 %195, i32* %196, align 4
  %197 = add nuw nsw i64 %39, 1
  %198 = icmp eq i64 %197, %37
  br i1 %198, label %199, label %38

199:                                              ; preds = %38, %30
  %200 = phi i64 [ %31, %30 ], [ %35, %38 ]
  %201 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %202 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %201, align 8
  tail call void %22(%struct.AVComplexInt32* %202) #8
  %203 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %201, align 8
  %204 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %203, i64 %200
  tail call void %22(%struct.AVComplexInt32* %204) #8
  %205 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %201, align 8
  %206 = shl nsw i64 %200, 1
  %207 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %205, i64 %206
  tail call void %22(%struct.AVComplexInt32* %207) #8
  %208 = icmp sgt i32 %10, 1
  br i1 %208, label %209, label %211

209:                                              ; preds = %199
  %210 = sext i32 %11 to i64
  br label %212

211:                                              ; preds = %212, %199
  ret void

212:                                              ; preds = %209, %212
  %213 = phi i64 [ 0, %209 ], [ %284, %212 ]
  %214 = add nsw i64 %213, %210
  %215 = xor i64 %213, -1
  %216 = add nsw i64 %210, %215
  %217 = getelementptr inbounds i32, i32* %15, i64 %214
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds i32, i32* %15, i64 %216
  %220 = load i32, i32* %219, align 4
  %221 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %201, align 8
  %222 = sext i32 %220 to i64
  %223 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 %222, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 %222, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %218 to i64
  %228 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 %227, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 %227, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %216, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = sext i32 %224 to i64
  %236 = mul nsw i64 %234, %235
  %237 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %216, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = sext i32 %226 to i64
  %241 = mul nsw i64 %239, %240
  %242 = add nsw i64 %236, 1073741824
  %243 = sub nsw i64 %242, %241
  %244 = lshr i64 %243, 31
  %245 = trunc i64 %244 to i32
  %246 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %216, i32 0
  store i32 %245, i32* %246, align 4
  %247 = load i32, i32* %237, align 4
  %248 = sext i32 %247 to i64
  %249 = mul nsw i64 %248, %235
  %250 = load i32, i32* %232, align 4
  %251 = sext i32 %250 to i64
  %252 = mul nsw i64 %251, %240
  %253 = add nsw i64 %249, 1073741824
  %254 = add i64 %253, %252
  %255 = lshr i64 %254, 31
  %256 = trunc i64 %255 to i32
  %257 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %214, i32 1
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %214, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = sext i32 %229 to i64
  %262 = mul nsw i64 %260, %261
  %263 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %214, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = sext i32 %231 to i64
  %267 = mul nsw i64 %265, %266
  %268 = add nsw i64 %262, 1073741824
  %269 = sub nsw i64 %268, %267
  %270 = lshr i64 %269, 31
  %271 = trunc i64 %270 to i32
  %272 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %214, i32 0
  store i32 %271, i32* %272, align 4
  %273 = load i32, i32* %263, align 4
  %274 = sext i32 %273 to i64
  %275 = mul nsw i64 %274, %261
  %276 = load i32, i32* %258, align 4
  %277 = sext i32 %276 to i64
  %278 = mul nsw i64 %277, %266
  %279 = add nsw i64 %275, 1073741824
  %280 = add i64 %279, %278
  %281 = lshr i64 %280, 31
  %282 = trunc i64 %281 to i32
  %283 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %216, i32 1
  store i32 %282, i32* %283, align 4
  %284 = add nuw nsw i64 %213, 1
  %285 = icmp slt i64 %284, %210
  br i1 %285, label %212, label %211
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_3xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [3 x %struct.AVComplexInt32], align 16
  %6 = bitcast i8* %2 to i32*
  %7 = bitcast i8* %1 to i32*
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %9 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %8, align 8
  %10 = bitcast [3 x %struct.AVComplexInt32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 0
  %12 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 1
  %13 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 0
  %14 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 1
  %15 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 0
  %16 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 1
  %17 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %18 = bitcast [3 x %struct.AVComplexInt32]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 24, i1 false)
  %19 = load i32, i32* %17, align 4
  %20 = mul nsw i32 %19, 3
  %21 = mul i32 %19, 9
  %22 = ashr i32 %20, 1
  %23 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %24 = load i32*, i32** %23, align 8
  %25 = sext i32 %20 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = or i32 %19, 1
  %28 = tail call i32 @llvm.ctlz.i32(i32 %27, i1 true), !range !3
  %29 = xor i32 %28, 31
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %30
  %32 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %31, align 8
  %33 = lshr i64 %3, 2
  %34 = icmp sgt i32 %19, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %4
  %36 = sext i32 %19 to i64
  br label %48

37:                                               ; preds = %4
  %38 = mul i32 %19, 15
  %39 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %40 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %41 = sext i32 %19 to i64
  %42 = shl nsw i64 %41, 1
  %43 = zext i32 %19 to i64
  br label %44

44:                                               ; preds = %58, %37
  %45 = phi i64 [ 0, %37 ], [ %117, %58 ]
  %46 = mul i64 %45, 3
  %47 = and i64 %46, 4294967295
  br label %119

48:                                               ; preds = %58, %35
  %49 = phi i64 [ %36, %35 ], [ %41, %58 ]
  %50 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %51 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %50, align 8
  tail call void %32(%struct.AVComplexInt32* %51) #8
  %52 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %50, align 8
  %53 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %52, i64 %49
  tail call void %32(%struct.AVComplexInt32* %53) #8
  %54 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %50, align 8
  %55 = shl nsw i64 %49, 1
  %56 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %54, i64 %55
  tail call void %32(%struct.AVComplexInt32* %56) #8
  %57 = icmp sgt i32 %20, 1
  br i1 %57, label %195, label %197

58:                                               ; preds = %164
  %59 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %39, align 8
  %60 = load i32*, i32** %40, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %45
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %59, i64 %63
  %65 = load i32, i32* %14, align 4
  %66 = load i32, i32* %16, align 4
  %67 = sub nsw i32 %65, %66
  %68 = add nsw i32 %66, %65
  %69 = load i32, i32* %13, align 8
  %70 = load i32, i32* %15, align 16
  %71 = sub nsw i32 %69, %70
  %72 = add nsw i32 %70, %69
  %73 = load i32, i32* %11, align 16
  %74 = add nsw i32 %73, %72
  %75 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 0, i32 0
  store i32 %74, i32* %75, align 4
  %76 = load i32, i32* %12, align 4
  %77 = add nsw i32 %76, %68
  %78 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %59, i64 %63, i32 1
  store i32 %77, i32* %78, align 4
  %79 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %80 = sext i32 %79 to i64
  %81 = sext i32 %67 to i64
  %82 = mul nsw i64 %80, %81
  %83 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %84 = sext i32 %83 to i64
  %85 = sext i32 %71 to i64
  %86 = mul nsw i64 %84, %85
  %87 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %88 = sext i32 %87 to i64
  %89 = sext i32 %72 to i64
  %90 = mul nsw i64 %88, %89
  %91 = sext i32 %68 to i64
  %92 = mul nsw i64 %88, %91
  %93 = add nsw i64 %82, 1073741824
  %94 = add i64 %93, %90
  %95 = lshr i64 %94, 31
  %96 = trunc i64 %95 to i32
  %97 = sub i32 %73, %96
  %98 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 %41, i32 0
  store i32 %97, i32* %98, align 4
  %99 = sub nsw i64 1073741824, %86
  %100 = add nsw i64 %99, %92
  %101 = lshr i64 %100, 31
  %102 = trunc i64 %101 to i32
  %103 = sub i32 %76, %102
  %104 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 %41, i32 1
  store i32 %103, i32* %104, align 4
  %105 = sub nsw i64 1073741824, %82
  %106 = add nsw i64 %105, %90
  %107 = lshr i64 %106, 31
  %108 = trunc i64 %107 to i32
  %109 = sub i32 %73, %108
  %110 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 %42, i32 0
  store i32 %109, i32* %110, align 4
  %111 = add nsw i64 %86, 1073741824
  %112 = add i64 %111, %92
  %113 = lshr i64 %112, 31
  %114 = trunc i64 %113 to i32
  %115 = sub i32 %76, %114
  %116 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 %42, i32 1
  store i32 %115, i32* %116, align 4
  %117 = add nuw nsw i64 %45, 1
  %118 = icmp eq i64 %117, %43
  br i1 %118, label %48, label %44

119:                                              ; preds = %164, %44
  %120 = phi i64 [ 0, %44 ], [ %193, %164 ]
  %121 = add nuw nsw i64 %120, %47
  %122 = getelementptr inbounds i32, i32* %24, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, %20
  %125 = add nsw i32 %123, %20
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %6, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = xor i32 %123, -1
  br i1 %124, label %130, label %147

130:                                              ; preds = %119
  %131 = add i32 %20, %129
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %6, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 32, %128
  %136 = add i32 %135, %134
  %137 = add nsw i32 %123, %21
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32* %6, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %21, %129
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %6, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sub i32 32, %140
  %146 = sub i32 %145, %144
  br label %164

147:                                              ; preds = %119
  %148 = add i32 %38, %129
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i32, i32* %6, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 32, %128
  %153 = sub i32 %152, %151
  %154 = sub i32 %123, %20
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %6, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %21, %129
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i32, i32* %6, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %157, 32
  %163 = sub i32 %162, %161
  br label %164

164:                                              ; preds = %130, %147
  %165 = phi i32 [ %136, %130 ], [ %153, %147 ]
  %166 = phi i32 [ %146, %130 ], [ %163, %147 ]
  %167 = ashr i32 %166, 6
  %168 = ashr i32 %165, 6
  %169 = ashr i32 %123, 1
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %170, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = sext i32 %168 to i64
  %175 = mul nsw i64 %173, %174
  %176 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %170, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = sext i32 %167 to i64
  %180 = mul nsw i64 %178, %179
  %181 = add nsw i64 %175, 1073741824
  %182 = sub nsw i64 %181, %180
  %183 = lshr i64 %182, 31
  %184 = trunc i64 %183 to i32
  %185 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 %120, i32 1
  store i32 %184, i32* %185, align 4
  %186 = mul nsw i64 %178, %174
  %187 = mul nsw i64 %173, %179
  %188 = add nsw i64 %187, 1073741824
  %189 = add nsw i64 %188, %186
  %190 = lshr i64 %189, 31
  %191 = trunc i64 %190 to i32
  %192 = getelementptr inbounds [3 x %struct.AVComplexInt32], [3 x %struct.AVComplexInt32]* %5, i64 0, i64 %120, i32 0
  store i32 %191, i32* %192, align 8
  %193 = add nuw nsw i64 %120, 1
  %194 = icmp eq i64 %193, 3
  br i1 %194, label %58, label %119

195:                                              ; preds = %48
  %196 = sext i32 %22 to i64
  br label %198

197:                                              ; preds = %198, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret void

198:                                              ; preds = %195, %198
  %199 = phi i64 [ 0, %195 ], [ %282, %198 ]
  %200 = phi i32 [ 0, %195 ], [ %283, %198 ]
  %201 = add nsw i64 %199, %196
  %202 = add nsw i32 %200, %22
  %203 = xor i64 %199, -1
  %204 = xor i32 %200, -1
  %205 = add nsw i64 %196, %203
  %206 = add nsw i32 %22, %204
  %207 = getelementptr inbounds i32, i32* %26, i64 %201
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %26, i64 %205
  %210 = load i32, i32* %209, align 4
  %211 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %50, align 8
  %212 = sext i32 %210 to i64
  %213 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %211, i64 %212, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %211, i64 %212, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %208 to i64
  %218 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %211, i64 %217, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %211, i64 %217, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %201, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %223 to i64
  %225 = sext i32 %219 to i64
  %226 = mul nsw i64 %224, %225
  %227 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %201, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = sext i32 %221 to i64
  %231 = mul nsw i64 %229, %230
  %232 = add nsw i64 %226, 1073741824
  %233 = sub nsw i64 %232, %231
  %234 = lshr i64 %233, 31
  %235 = trunc i64 %234 to i32
  %236 = shl nsw i32 %206, 1
  %237 = sext i32 %236 to i64
  %238 = mul nsw i64 %33, %237
  %239 = add nsw i64 %238, %33
  %240 = getelementptr inbounds i32, i32* %7, i64 %239
  store i32 %235, i32* %240, align 4
  %241 = load i32, i32* %227, align 4
  %242 = sext i32 %241 to i64
  %243 = mul nsw i64 %242, %225
  %244 = load i32, i32* %222, align 4
  %245 = sext i32 %244 to i64
  %246 = mul nsw i64 %245, %230
  %247 = add nsw i64 %243, 1073741824
  %248 = add i64 %247, %246
  %249 = lshr i64 %248, 31
  %250 = trunc i64 %249 to i32
  %251 = shl nsw i32 %202, 1
  %252 = sext i32 %251 to i64
  %253 = mul nsw i64 %33, %252
  %254 = getelementptr inbounds i32, i32* %7, i64 %253
  store i32 %250, i32* %254, align 4
  %255 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %205, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = sext i32 %214 to i64
  %259 = mul nsw i64 %257, %258
  %260 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %205, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = sext i32 %216 to i64
  %264 = mul nsw i64 %262, %263
  %265 = add nsw i64 %259, 1073741824
  %266 = sub nsw i64 %265, %264
  %267 = lshr i64 %266, 31
  %268 = trunc i64 %267 to i32
  %269 = add nsw i64 %253, %33
  %270 = getelementptr inbounds i32, i32* %7, i64 %269
  store i32 %268, i32* %270, align 4
  %271 = load i32, i32* %260, align 4
  %272 = sext i32 %271 to i64
  %273 = mul nsw i64 %272, %258
  %274 = load i32, i32* %255, align 4
  %275 = sext i32 %274 to i64
  %276 = mul nsw i64 %275, %263
  %277 = add nsw i64 %273, 1073741824
  %278 = add i64 %277, %276
  %279 = lshr i64 %278, 31
  %280 = trunc i64 %279 to i32
  %281 = getelementptr inbounds i32, i32* %7, i64 %238
  store i32 %280, i32* %281, align 4
  %282 = add nuw nsw i64 %199, 1
  %283 = add nuw nsw i32 %200, 1
  %284 = icmp slt i64 %282, %196
  br i1 %284, label %198, label %197
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexInt32*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 5
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = bitcast i8* %2 to i32*
  %17 = or i32 %9, 1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true), !range !3
  %19 = xor i32 %18, 31
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %20
  %22 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %21, align 8
  %23 = lshr i64 %3, 2
  %24 = mul i32 %9, 10
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %23, %26
  %28 = getelementptr inbounds i32, i32* %16, i64 %27
  %29 = icmp sgt i32 %9, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %4
  %31 = sext i32 %9 to i64
  %32 = mul nsw i64 %31, 3
  br label %324

33:                                               ; preds = %4
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %35 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %36 = sext i32 %9 to i64
  %37 = shl nsw i64 %36, 1
  %38 = mul nsw i64 %36, 3
  %39 = shl nsw i64 %36, 2
  %40 = zext i32 %9 to i64
  br label %41

41:                                               ; preds = %41, %33
  %42 = phi i64 [ 0, %33 ], [ %322, %41 ]
  %43 = mul i64 %42, 5
  %44 = and i64 %43, 4294967295
  %45 = getelementptr inbounds i32, i32* %13, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 0, %46
  %48 = sext i32 %47 to i64
  %49 = mul nsw i64 %23, %48
  %50 = getelementptr inbounds i32, i32* %28, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %46 to i64
  %53 = mul nsw i64 %23, %52
  %54 = getelementptr inbounds i32, i32* %16, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = ashr i32 %46, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = sext i32 %51 to i64
  %62 = mul nsw i64 %60, %61
  %63 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %57, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = sext i32 %55 to i64
  %67 = mul nsw i64 %65, %66
  %68 = add nsw i64 %62, 1073741824
  %69 = sub nsw i64 %68, %67
  %70 = lshr i64 %69, 31
  %71 = trunc i64 %70 to i32
  %72 = mul nsw i64 %65, %61
  %73 = mul nsw i64 %60, %66
  %74 = add nsw i64 %73, 1073741824
  %75 = add i64 %74, %72
  %76 = lshr i64 %75, 31
  %77 = trunc i64 %76 to i32
  %78 = add nuw nsw i64 %44, 1
  %79 = getelementptr inbounds i32, i32* %13, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 0, %80
  %82 = sext i32 %81 to i64
  %83 = mul nsw i64 %23, %82
  %84 = getelementptr inbounds i32, i32* %28, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %80 to i64
  %87 = mul nsw i64 %23, %86
  %88 = getelementptr inbounds i32, i32* %16, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = ashr i32 %80, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %91, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = sext i32 %85 to i64
  %96 = mul nsw i64 %94, %95
  %97 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %91, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = sext i32 %89 to i64
  %101 = mul nsw i64 %99, %100
  %102 = add nsw i64 %96, 1073741824
  %103 = sub nsw i64 %102, %101
  %104 = lshr i64 %103, 31
  %105 = trunc i64 %104 to i32
  %106 = mul nsw i64 %99, %95
  %107 = mul nsw i64 %94, %100
  %108 = add nsw i64 %107, 1073741824
  %109 = add i64 %108, %106
  %110 = lshr i64 %109, 31
  %111 = trunc i64 %110 to i32
  %112 = add nuw nsw i64 %44, 2
  %113 = getelementptr inbounds i32, i32* %13, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sub nsw i32 0, %114
  %116 = sext i32 %115 to i64
  %117 = mul nsw i64 %23, %116
  %118 = getelementptr inbounds i32, i32* %28, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %114 to i64
  %121 = mul nsw i64 %23, %120
  %122 = getelementptr inbounds i32, i32* %16, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = ashr i32 %114, 1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %125, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = sext i32 %119 to i64
  %130 = mul nsw i64 %128, %129
  %131 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %125, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = sext i32 %123 to i64
  %135 = mul nsw i64 %133, %134
  %136 = add nsw i64 %130, 1073741824
  %137 = sub nsw i64 %136, %135
  %138 = lshr i64 %137, 31
  %139 = trunc i64 %138 to i32
  %140 = mul nsw i64 %133, %129
  %141 = mul nsw i64 %128, %134
  %142 = add nsw i64 %141, 1073741824
  %143 = add i64 %142, %140
  %144 = lshr i64 %143, 31
  %145 = trunc i64 %144 to i32
  %146 = add nuw nsw i64 %44, 3
  %147 = getelementptr inbounds i32, i32* %13, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sub nsw i32 0, %148
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %23, %150
  %152 = getelementptr inbounds i32, i32* %28, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %148 to i64
  %155 = mul nsw i64 %23, %154
  %156 = getelementptr inbounds i32, i32* %16, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = ashr i32 %148, 1
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %159, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = sext i32 %153 to i64
  %164 = mul nsw i64 %162, %163
  %165 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %159, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = sext i32 %157 to i64
  %169 = mul nsw i64 %167, %168
  %170 = add nsw i64 %164, 1073741824
  %171 = sub nsw i64 %170, %169
  %172 = lshr i64 %171, 31
  %173 = trunc i64 %172 to i32
  %174 = mul nsw i64 %167, %163
  %175 = mul nsw i64 %162, %168
  %176 = add nsw i64 %175, 1073741824
  %177 = add i64 %176, %174
  %178 = lshr i64 %177, 31
  %179 = trunc i64 %178 to i32
  %180 = add nuw nsw i64 %44, 4
  %181 = getelementptr inbounds i32, i32* %13, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = sub nsw i32 0, %182
  %184 = sext i32 %183 to i64
  %185 = mul nsw i64 %23, %184
  %186 = getelementptr inbounds i32, i32* %28, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = sext i32 %182 to i64
  %189 = mul nsw i64 %23, %188
  %190 = getelementptr inbounds i32, i32* %16, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = ashr i32 %182, 1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %193, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = sext i32 %187 to i64
  %198 = mul nsw i64 %196, %197
  %199 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %193, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = sext i32 %191 to i64
  %203 = mul nsw i64 %201, %202
  %204 = add nsw i64 %198, 1073741824
  %205 = sub nsw i64 %204, %203
  %206 = lshr i64 %205, 31
  %207 = trunc i64 %206 to i32
  %208 = mul nsw i64 %201, %197
  %209 = mul nsw i64 %196, %202
  %210 = add nsw i64 %209, 1073741824
  %211 = add i64 %210, %208
  %212 = lshr i64 %211, 31
  %213 = trunc i64 %212 to i32
  %214 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %34, align 8
  %215 = load i32*, i32** %35, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 %42
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %214, i64 %218
  %220 = sub nsw i64 %104, %206
  %221 = add nsw i32 %105, %207
  %222 = sub nsw i64 %110, %212
  %223 = add nsw i32 %111, %213
  %224 = sub nsw i64 %138, %172
  %225 = add nsw i32 %173, %139
  %226 = sub nsw i64 %144, %178
  %227 = add nsw i32 %179, %145
  %228 = add i32 %225, %221
  %229 = add i32 %228, %71
  %230 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 0, i32 0
  store i32 %229, i32* %230, align 4
  %231 = add i32 %227, %223
  %232 = add i32 %231, %77
  %233 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %214, i64 %218, i32 1
  store i32 %232, i32* %233, align 4
  %234 = sext i32 %225 to i64
  %235 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %236 = sext i32 %235 to i64
  %237 = mul nsw i64 %236, %234
  %238 = sext i32 %221 to i64
  %239 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %240 = sext i32 %239 to i64
  %241 = mul nsw i64 %240, %238
  %242 = add nsw i64 %237, 1073741824
  %243 = sub nsw i64 %242, %241
  %244 = lshr i64 %243, 31
  %245 = trunc i64 %244 to i32
  %246 = mul nsw i64 %236, %238
  %247 = mul nsw i64 %240, %234
  %248 = add nsw i64 %246, 1073741824
  %249 = sub nsw i64 %248, %247
  %250 = lshr i64 %249, 31
  %251 = trunc i64 %250 to i32
  %252 = sext i32 %227 to i64
  %253 = mul nsw i64 %236, %252
  %254 = sext i32 %223 to i64
  %255 = mul nsw i64 %240, %254
  %256 = add nsw i64 %253, 1073741824
  %257 = sub nsw i64 %256, %255
  %258 = lshr i64 %257, 31
  %259 = trunc i64 %258 to i32
  %260 = mul nsw i64 %236, %254
  %261 = mul nsw i64 %240, %252
  %262 = add nsw i64 %260, 1073741824
  %263 = sub nsw i64 %262, %261
  %264 = lshr i64 %263, 31
  %265 = trunc i64 %264 to i32
  %266 = shl i64 %226, 32
  %267 = ashr exact i64 %266, 32
  %268 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %269 = sext i32 %268 to i64
  %270 = mul nsw i64 %267, %269
  %271 = shl i64 %222, 32
  %272 = ashr exact i64 %271, 32
  %273 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %274 = sext i32 %273 to i64
  %275 = mul nsw i64 %272, %274
  %276 = add nsw i64 %270, 1073741824
  %277 = sub nsw i64 %276, %275
  %278 = lshr i64 %277, 31
  %279 = trunc i64 %278 to i32
  %280 = mul nsw i64 %272, %269
  %281 = mul nsw i64 %267, %274
  %282 = add nsw i64 %280, 1073741824
  %283 = add i64 %282, %281
  %284 = lshr i64 %283, 31
  %285 = trunc i64 %284 to i32
  %286 = shl i64 %224, 32
  %287 = ashr exact i64 %286, 32
  %288 = mul nsw i64 %287, %269
  %289 = shl i64 %220, 32
  %290 = ashr exact i64 %289, 32
  %291 = mul nsw i64 %290, %274
  %292 = add nsw i64 %288, 1073741824
  %293 = sub nsw i64 %292, %291
  %294 = lshr i64 %293, 31
  %295 = trunc i64 %294 to i32
  %296 = mul nsw i64 %290, %269
  %297 = mul nsw i64 %287, %274
  %298 = add nsw i64 %296, 1073741824
  %299 = add i64 %298, %297
  %300 = lshr i64 %299, 31
  %301 = trunc i64 %300 to i32
  %302 = add i32 %71, %251
  %303 = add i32 %302, %285
  %304 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %36, i32 0
  store i32 %303, i32* %304, align 4
  %305 = add i32 %77, %265
  %306 = sub i32 %305, %301
  %307 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %36, i32 1
  store i32 %306, i32* %307, align 4
  %308 = add i32 %71, %245
  %309 = sub i32 %308, %279
  %310 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %37, i32 0
  store i32 %309, i32* %310, align 4
  %311 = add i32 %77, %259
  %312 = add i32 %311, %295
  %313 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %37, i32 1
  store i32 %312, i32* %313, align 4
  %314 = add i32 %308, %279
  %315 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %38, i32 0
  store i32 %314, i32* %315, align 4
  %316 = sub i32 %311, %295
  %317 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %38, i32 1
  store i32 %316, i32* %317, align 4
  %318 = sub i32 %302, %285
  %319 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %39, i32 0
  store i32 %318, i32* %319, align 4
  %320 = add i32 %305, %301
  %321 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %219, i64 %39, i32 1
  store i32 %320, i32* %321, align 4
  %322 = add nuw nsw i64 %42, 1
  %323 = icmp eq i64 %322, %40
  br i1 %323, label %324, label %41

324:                                              ; preds = %41, %30
  %325 = phi i64 [ %32, %30 ], [ %38, %41 ]
  %326 = phi i64 [ %31, %30 ], [ %36, %41 ]
  %327 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %328 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  tail call void %22(%struct.AVComplexInt32* %328) #8
  %329 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  %330 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %329, i64 %326
  tail call void %22(%struct.AVComplexInt32* %330) #8
  %331 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  %332 = shl nsw i64 %326, 1
  %333 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %331, i64 %332
  tail call void %22(%struct.AVComplexInt32* %333) #8
  %334 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  %335 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %334, i64 %325
  tail call void %22(%struct.AVComplexInt32* %335) #8
  %336 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  %337 = shl nsw i64 %326, 2
  %338 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %336, i64 %337
  tail call void %22(%struct.AVComplexInt32* %338) #8
  %339 = icmp sgt i32 %10, 1
  br i1 %339, label %340, label %342

340:                                              ; preds = %324
  %341 = sext i32 %11 to i64
  br label %343

342:                                              ; preds = %343, %324
  ret void

343:                                              ; preds = %340, %343
  %344 = phi i64 [ 0, %340 ], [ %415, %343 ]
  %345 = add nsw i64 %344, %341
  %346 = xor i64 %344, -1
  %347 = add nsw i64 %341, %346
  %348 = getelementptr inbounds i32, i32* %15, i64 %345
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds i32, i32* %15, i64 %347
  %351 = load i32, i32* %350, align 4
  %352 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %327, align 8
  %353 = sext i32 %351 to i64
  %354 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %352, i64 %353, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %352, i64 %353, i32 0
  %357 = load i32, i32* %356, align 4
  %358 = sext i32 %349 to i64
  %359 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %352, i64 %358, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %352, i64 %358, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %347, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sext i32 %364 to i64
  %366 = sext i32 %355 to i64
  %367 = mul nsw i64 %365, %366
  %368 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %347, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = sext i32 %357 to i64
  %372 = mul nsw i64 %370, %371
  %373 = add nsw i64 %367, 1073741824
  %374 = sub nsw i64 %373, %372
  %375 = lshr i64 %374, 31
  %376 = trunc i64 %375 to i32
  %377 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %347, i32 0
  store i32 %376, i32* %377, align 4
  %378 = load i32, i32* %368, align 4
  %379 = sext i32 %378 to i64
  %380 = mul nsw i64 %379, %366
  %381 = load i32, i32* %363, align 4
  %382 = sext i32 %381 to i64
  %383 = mul nsw i64 %382, %371
  %384 = add nsw i64 %380, 1073741824
  %385 = add i64 %384, %383
  %386 = lshr i64 %385, 31
  %387 = trunc i64 %386 to i32
  %388 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %345, i32 1
  store i32 %387, i32* %388, align 4
  %389 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %345, i32 1
  %390 = load i32, i32* %389, align 4
  %391 = sext i32 %390 to i64
  %392 = sext i32 %360 to i64
  %393 = mul nsw i64 %391, %392
  %394 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %345, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = sext i32 %395 to i64
  %397 = sext i32 %362 to i64
  %398 = mul nsw i64 %396, %397
  %399 = add nsw i64 %393, 1073741824
  %400 = sub nsw i64 %399, %398
  %401 = lshr i64 %400, 31
  %402 = trunc i64 %401 to i32
  %403 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %345, i32 0
  store i32 %402, i32* %403, align 4
  %404 = load i32, i32* %394, align 4
  %405 = sext i32 %404 to i64
  %406 = mul nsw i64 %405, %392
  %407 = load i32, i32* %389, align 4
  %408 = sext i32 %407 to i64
  %409 = mul nsw i64 %408, %397
  %410 = add nsw i64 %406, 1073741824
  %411 = add i64 %410, %409
  %412 = lshr i64 %411, 31
  %413 = trunc i64 %412 to i32
  %414 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %347, i32 1
  store i32 %413, i32* %414, align 4
  %415 = add nuw nsw i64 %344, 1
  %416 = icmp slt i64 %415, %341
  br i1 %416, label %343, label %342
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_5xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [5 x %struct.AVComplexInt32], align 16
  %6 = bitcast i8* %2 to i32*
  %7 = bitcast i8* %1 to i32*
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %9 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %8, align 8
  %10 = bitcast [5 x %struct.AVComplexInt32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 40, i1 false)
  %11 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 5
  %14 = mul i32 %12, 15
  %15 = ashr i32 %13, 1
  %16 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = or i32 %12, 1
  %21 = tail call i32 @llvm.ctlz.i32(i32 %20, i1 true), !range !3
  %22 = xor i32 %21, 31
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %23
  %25 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %24, align 8
  %26 = lshr i64 %3, 2
  %27 = icmp sgt i32 %12, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %4
  %29 = sext i32 %12 to i64
  %30 = mul nsw i64 %29, 3
  br label %54

31:                                               ; preds = %4
  %32 = mul i32 %12, 25
  %33 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %34 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %35 = sext i32 %12 to i64
  %36 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 0
  %37 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 0
  %38 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 1
  %39 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 1
  %40 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 0
  %41 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 0
  %42 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 1
  %43 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 1
  %44 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 0
  %45 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 1
  %46 = shl nsw i64 %35, 1
  %47 = mul nsw i64 %35, 3
  %48 = shl nsw i64 %35, 2
  %49 = zext i32 %12 to i64
  br label %50

50:                                               ; preds = %70, %31
  %51 = phi i64 [ 0, %31 ], [ %185, %70 ]
  %52 = mul i64 %51, 5
  %53 = and i64 %52, 4294967295
  br label %187

54:                                               ; preds = %70, %28
  %55 = phi i64 [ %30, %28 ], [ %47, %70 ]
  %56 = phi i64 [ %29, %28 ], [ %35, %70 ]
  %57 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %58 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  tail call void %25(%struct.AVComplexInt32* %58) #8
  %59 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  %60 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %59, i64 %56
  tail call void %25(%struct.AVComplexInt32* %60) #8
  %61 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  %62 = shl nsw i64 %56, 1
  %63 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %61, i64 %62
  tail call void %25(%struct.AVComplexInt32* %63) #8
  %64 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  %65 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %64, i64 %55
  tail call void %25(%struct.AVComplexInt32* %65) #8
  %66 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  %67 = shl nsw i64 %56, 2
  %68 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %66, i64 %67
  tail call void %25(%struct.AVComplexInt32* %68) #8
  %69 = icmp sgt i32 %13, 1
  br i1 %69, label %263, label %265

70:                                               ; preds = %232
  %71 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %33, align 8
  %72 = load i32*, i32** %34, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %51
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %71, i64 %75
  %77 = load i32, i32* %36, align 8
  %78 = load i32, i32* %37, align 16
  %79 = sub nsw i32 %77, %78
  %80 = add nsw i32 %78, %77
  %81 = load i32, i32* %38, align 4
  %82 = load i32, i32* %39, align 4
  %83 = sub nsw i32 %81, %82
  %84 = add nsw i32 %82, %81
  %85 = load i32, i32* %40, align 16
  %86 = load i32, i32* %41, align 8
  %87 = sub nsw i32 %85, %86
  %88 = add nsw i32 %86, %85
  %89 = load i32, i32* %42, align 4
  %90 = load i32, i32* %43, align 4
  %91 = sub nsw i32 %89, %90
  %92 = add nsw i32 %90, %89
  %93 = load i32, i32* %44, align 16
  %94 = add i32 %88, %80
  %95 = add i32 %94, %93
  %96 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 0, i32 0
  store i32 %95, i32* %96, align 4
  %97 = load i32, i32* %45, align 4
  %98 = add i32 %92, %84
  %99 = add i32 %98, %97
  %100 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %71, i64 %75, i32 1
  store i32 %99, i32* %100, align 4
  %101 = sext i32 %88 to i64
  %102 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %103 = sext i32 %102 to i64
  %104 = mul nsw i64 %103, %101
  %105 = sext i32 %80 to i64
  %106 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %107, %105
  %109 = add nsw i64 %104, 1073741824
  %110 = sub nsw i64 %109, %108
  %111 = lshr i64 %110, 31
  %112 = trunc i64 %111 to i32
  %113 = mul nsw i64 %103, %105
  %114 = mul nsw i64 %107, %101
  %115 = add nsw i64 %113, 1073741824
  %116 = sub nsw i64 %115, %114
  %117 = lshr i64 %116, 31
  %118 = trunc i64 %117 to i32
  %119 = sext i32 %92 to i64
  %120 = mul nsw i64 %103, %119
  %121 = sext i32 %84 to i64
  %122 = mul nsw i64 %107, %121
  %123 = add nsw i64 %120, 1073741824
  %124 = sub nsw i64 %123, %122
  %125 = lshr i64 %124, 31
  %126 = trunc i64 %125 to i32
  %127 = mul nsw i64 %103, %121
  %128 = mul nsw i64 %107, %119
  %129 = add nsw i64 %127, 1073741824
  %130 = sub nsw i64 %129, %128
  %131 = lshr i64 %130, 31
  %132 = trunc i64 %131 to i32
  %133 = sext i32 %91 to i64
  %134 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %135, %133
  %137 = sext i32 %83 to i64
  %138 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %139 = sext i32 %138 to i64
  %140 = mul nsw i64 %139, %137
  %141 = add nsw i64 %136, 1073741824
  %142 = sub nsw i64 %141, %140
  %143 = lshr i64 %142, 31
  %144 = trunc i64 %143 to i32
  %145 = mul nsw i64 %135, %137
  %146 = mul nsw i64 %139, %133
  %147 = add nsw i64 %145, 1073741824
  %148 = add i64 %147, %146
  %149 = lshr i64 %148, 31
  %150 = trunc i64 %149 to i32
  %151 = sext i32 %87 to i64
  %152 = mul nsw i64 %135, %151
  %153 = sext i32 %79 to i64
  %154 = mul nsw i64 %139, %153
  %155 = add nsw i64 %152, 1073741824
  %156 = sub nsw i64 %155, %154
  %157 = lshr i64 %156, 31
  %158 = trunc i64 %157 to i32
  %159 = mul nsw i64 %135, %153
  %160 = mul nsw i64 %139, %151
  %161 = add nsw i64 %159, 1073741824
  %162 = add i64 %161, %160
  %163 = lshr i64 %162, 31
  %164 = trunc i64 %163 to i32
  %165 = add i32 %93, %118
  %166 = add i32 %165, %150
  %167 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %35, i32 0
  store i32 %166, i32* %167, align 4
  %168 = add i32 %97, %132
  %169 = sub i32 %168, %164
  %170 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %35, i32 1
  store i32 %169, i32* %170, align 4
  %171 = add i32 %93, %112
  %172 = sub i32 %171, %144
  %173 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %46, i32 0
  store i32 %172, i32* %173, align 4
  %174 = add i32 %97, %126
  %175 = add i32 %174, %158
  %176 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %46, i32 1
  store i32 %175, i32* %176, align 4
  %177 = add i32 %171, %144
  %178 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %47, i32 0
  store i32 %177, i32* %178, align 4
  %179 = sub i32 %174, %158
  %180 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %47, i32 1
  store i32 %179, i32* %180, align 4
  %181 = sub i32 %165, %150
  %182 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %48, i32 0
  store i32 %181, i32* %182, align 4
  %183 = add i32 %168, %164
  %184 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %76, i64 %48, i32 1
  store i32 %183, i32* %184, align 4
  %185 = add nuw nsw i64 %51, 1
  %186 = icmp eq i64 %185, %49
  br i1 %186, label %54, label %50

187:                                              ; preds = %232, %50
  %188 = phi i64 [ 0, %50 ], [ %261, %232 ]
  %189 = add nuw nsw i64 %188, %53
  %190 = getelementptr inbounds i32, i32* %17, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = icmp slt i32 %191, %13
  %193 = add nsw i32 %191, %13
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %6, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = xor i32 %191, -1
  br i1 %192, label %198, label %215

198:                                              ; preds = %187
  %199 = add i32 %13, %197
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i32, i32* %6, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 32, %196
  %204 = add i32 %203, %202
  %205 = add nsw i32 %191, %14
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i32, i32* %6, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %14, %197
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %6, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 32, %208
  %214 = sub i32 %213, %212
  br label %232

215:                                              ; preds = %187
  %216 = add i32 %32, %197
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i32, i32* %6, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 32, %196
  %221 = sub i32 %220, %219
  %222 = sub i32 %191, %13
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i32, i32* %6, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = add i32 %14, %197
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %6, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = add i32 %225, 32
  %231 = sub i32 %230, %229
  br label %232

232:                                              ; preds = %198, %215
  %233 = phi i32 [ %204, %198 ], [ %221, %215 ]
  %234 = phi i32 [ %214, %198 ], [ %231, %215 ]
  %235 = ashr i32 %234, 6
  %236 = ashr i32 %233, 6
  %237 = ashr i32 %191, 1
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %238, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = sext i32 %236 to i64
  %243 = mul nsw i64 %241, %242
  %244 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %238, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = sext i32 %235 to i64
  %248 = mul nsw i64 %246, %247
  %249 = add nsw i64 %243, 1073741824
  %250 = sub nsw i64 %249, %248
  %251 = lshr i64 %250, 31
  %252 = trunc i64 %251 to i32
  %253 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 %188, i32 1
  store i32 %252, i32* %253, align 4
  %254 = mul nsw i64 %246, %242
  %255 = mul nsw i64 %241, %247
  %256 = add nsw i64 %255, 1073741824
  %257 = add nsw i64 %256, %254
  %258 = lshr i64 %257, 31
  %259 = trunc i64 %258 to i32
  %260 = getelementptr inbounds [5 x %struct.AVComplexInt32], [5 x %struct.AVComplexInt32]* %5, i64 0, i64 %188, i32 0
  store i32 %259, i32* %260, align 8
  %261 = add nuw nsw i64 %188, 1
  %262 = icmp eq i64 %261, 5
  br i1 %262, label %70, label %187

263:                                              ; preds = %54
  %264 = sext i32 %15 to i64
  br label %266

265:                                              ; preds = %266, %54
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  ret void

266:                                              ; preds = %263, %266
  %267 = phi i64 [ 0, %263 ], [ %350, %266 ]
  %268 = phi i32 [ 0, %263 ], [ %351, %266 ]
  %269 = add nsw i64 %267, %264
  %270 = add nsw i32 %268, %15
  %271 = xor i64 %267, -1
  %272 = xor i32 %268, -1
  %273 = add nsw i64 %264, %271
  %274 = add nsw i32 %15, %272
  %275 = getelementptr inbounds i32, i32* %19, i64 %269
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds i32, i32* %19, i64 %273
  %278 = load i32, i32* %277, align 4
  %279 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %57, align 8
  %280 = sext i32 %278 to i64
  %281 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %279, i64 %280, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %279, i64 %280, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %276 to i64
  %286 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %279, i64 %285, i32 0
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %279, i64 %285, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %269, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = sext i32 %291 to i64
  %293 = sext i32 %287 to i64
  %294 = mul nsw i64 %292, %293
  %295 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %269, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = sext i32 %289 to i64
  %299 = mul nsw i64 %297, %298
  %300 = add nsw i64 %294, 1073741824
  %301 = sub nsw i64 %300, %299
  %302 = lshr i64 %301, 31
  %303 = trunc i64 %302 to i32
  %304 = shl nsw i32 %274, 1
  %305 = sext i32 %304 to i64
  %306 = mul nsw i64 %26, %305
  %307 = add nsw i64 %306, %26
  %308 = getelementptr inbounds i32, i32* %7, i64 %307
  store i32 %303, i32* %308, align 4
  %309 = load i32, i32* %295, align 4
  %310 = sext i32 %309 to i64
  %311 = mul nsw i64 %310, %293
  %312 = load i32, i32* %290, align 4
  %313 = sext i32 %312 to i64
  %314 = mul nsw i64 %313, %298
  %315 = add nsw i64 %311, 1073741824
  %316 = add i64 %315, %314
  %317 = lshr i64 %316, 31
  %318 = trunc i64 %317 to i32
  %319 = shl nsw i32 %270, 1
  %320 = sext i32 %319 to i64
  %321 = mul nsw i64 %26, %320
  %322 = getelementptr inbounds i32, i32* %7, i64 %321
  store i32 %318, i32* %322, align 4
  %323 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %273, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = sext i32 %324 to i64
  %326 = sext i32 %282 to i64
  %327 = mul nsw i64 %325, %326
  %328 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %273, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = sext i32 %329 to i64
  %331 = sext i32 %284 to i64
  %332 = mul nsw i64 %330, %331
  %333 = add nsw i64 %327, 1073741824
  %334 = sub nsw i64 %333, %332
  %335 = lshr i64 %334, 31
  %336 = trunc i64 %335 to i32
  %337 = add nsw i64 %321, %26
  %338 = getelementptr inbounds i32, i32* %7, i64 %337
  store i32 %336, i32* %338, align 4
  %339 = load i32, i32* %328, align 4
  %340 = sext i32 %339 to i64
  %341 = mul nsw i64 %340, %326
  %342 = load i32, i32* %323, align 4
  %343 = sext i32 %342 to i64
  %344 = mul nsw i64 %343, %331
  %345 = add nsw i64 %341, 1073741824
  %346 = add i64 %345, %344
  %347 = lshr i64 %346, 31
  %348 = trunc i64 %347 to i32
  %349 = getelementptr inbounds i32, i32* %7, i64 %306
  store i32 %348, i32* %349, align 4
  %350 = add nuw nsw i64 %267, 1
  %351 = add nuw nsw i32 %268, 1
  %352 = icmp slt i64 %350, %264
  br i1 %352, label %266, label %265
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_imdct_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexInt32], align 16
  %6 = alloca [15 x %struct.AVComplexInt32], align 16
  %7 = bitcast [15 x %struct.AVComplexInt32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 120, i1 false)
  %8 = bitcast i8* %1 to %struct.AVComplexInt32*
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %10 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %9, align 8
  %11 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 %12, 15
  %14 = ashr i32 %13, 1
  %15 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %13 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast i8* %2 to i32*
  %20 = or i32 %12, 1
  %21 = tail call i32 @llvm.ctlz.i32(i32 %20, i1 true), !range !3
  %22 = xor i32 %21, 31
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %23
  %25 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %24, align 8
  %26 = lshr i64 %3, 2
  %27 = mul i32 %12, 30
  %28 = add nsw i32 %27, -1
  %29 = sext i32 %28 to i64
  %30 = mul nsw i64 %26, %29
  %31 = getelementptr inbounds i32, i32* %19, i64 %30
  %32 = icmp sgt i32 %12, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %4
  %34 = sext i32 %12 to i64
  %35 = mul nsw i64 %34, 3
  %36 = mul nsw i64 %34, 5
  %37 = mul nsw i64 %34, 6
  %38 = mul nsw i64 %34, 7
  %39 = mul nsw i64 %34, 9
  %40 = mul nsw i64 %34, 10
  %41 = mul nsw i64 %34, 11
  %42 = mul nsw i64 %34, 12
  %43 = mul nsw i64 %34, 13
  %44 = mul nsw i64 %34, 14
  br label %98

45:                                               ; preds = %4
  %46 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %48 = sext i32 %12 to i64
  %49 = bitcast [15 x %struct.AVComplexInt32]* %5 to i8*
  %50 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 0
  %51 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 0
  %52 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 1
  %53 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 1
  %54 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 0
  %55 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 0
  %56 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 1
  %57 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 1
  %58 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 0
  %59 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 1
  %60 = mul nsw i64 %48, 6
  %61 = mul nsw i64 %48, 12
  %62 = mul nsw i64 %48, 3
  %63 = mul nsw i64 %48, 9
  %64 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 0
  %65 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 0
  %66 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 1
  %67 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 1
  %68 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 0
  %69 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 0
  %70 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 1
  %71 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 1
  %72 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 0
  %73 = mul nsw i64 %48, 10
  %74 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 1
  %75 = mul nsw i64 %48, 7
  %76 = mul nsw i64 %48, 13
  %77 = shl nsw i64 %48, 2
  %78 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 0
  %79 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 0
  %80 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 1
  %81 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 1
  %82 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 0
  %83 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 0
  %84 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 1
  %85 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 1
  %86 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 0
  %87 = mul nsw i64 %48, 5
  %88 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 1
  %89 = mul nsw i64 %48, 11
  %90 = shl nsw i64 %48, 1
  %91 = shl nsw i64 %48, 3
  %92 = mul nsw i64 %48, 14
  %93 = zext i32 %12 to i64
  br label %94

94:                                               ; preds = %214, %45
  %95 = phi i64 [ 0, %45 ], [ %540, %214 ]
  %96 = mul i64 %95, 15
  %97 = and i64 %96, 4294967295
  br label %542

98:                                               ; preds = %214, %33
  %99 = phi i64 [ %44, %33 ], [ %92, %214 ]
  %100 = phi i64 [ %43, %33 ], [ %76, %214 ]
  %101 = phi i64 [ %42, %33 ], [ %61, %214 ]
  %102 = phi i64 [ %41, %33 ], [ %89, %214 ]
  %103 = phi i64 [ %40, %33 ], [ %73, %214 ]
  %104 = phi i64 [ %39, %33 ], [ %63, %214 ]
  %105 = phi i64 [ %38, %33 ], [ %75, %214 ]
  %106 = phi i64 [ %37, %33 ], [ %60, %214 ]
  %107 = phi i64 [ %36, %33 ], [ %87, %214 ]
  %108 = phi i64 [ %35, %33 ], [ %62, %214 ]
  %109 = phi i64 [ %34, %33 ], [ %48, %214 ]
  %110 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %111 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  tail call void %25(%struct.AVComplexInt32* %111) #8
  %112 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %113 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %112, i64 %109
  tail call void %25(%struct.AVComplexInt32* %113) #8
  %114 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %115 = shl nsw i64 %109, 1
  %116 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 %115
  tail call void %25(%struct.AVComplexInt32* %116) #8
  %117 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %118 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %117, i64 %108
  tail call void %25(%struct.AVComplexInt32* %118) #8
  %119 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %120 = shl nsw i64 %109, 2
  %121 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %119, i64 %120
  tail call void %25(%struct.AVComplexInt32* %121) #8
  %122 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %123 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 %107
  tail call void %25(%struct.AVComplexInt32* %123) #8
  %124 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %125 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %124, i64 %106
  tail call void %25(%struct.AVComplexInt32* %125) #8
  %126 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %127 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %126, i64 %105
  tail call void %25(%struct.AVComplexInt32* %127) #8
  %128 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %129 = shl nsw i64 %109, 3
  %130 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %128, i64 %129
  tail call void %25(%struct.AVComplexInt32* %130) #8
  %131 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %132 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %131, i64 %104
  tail call void %25(%struct.AVComplexInt32* %132) #8
  %133 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %134 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %133, i64 %103
  tail call void %25(%struct.AVComplexInt32* %134) #8
  %135 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %136 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %135, i64 %102
  tail call void %25(%struct.AVComplexInt32* %136) #8
  %137 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %138 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %137, i64 %101
  tail call void %25(%struct.AVComplexInt32* %138) #8
  %139 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %140 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %139, i64 %100
  tail call void %25(%struct.AVComplexInt32* %140) #8
  %141 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %142 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %141, i64 %99
  tail call void %25(%struct.AVComplexInt32* %142) #8
  %143 = icmp sgt i32 %13, 1
  br i1 %143, label %582, label %584

144:                                              ; preds = %542
  %145 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %46, align 8
  %146 = load i32*, i32** %47, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 %95
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %49) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 120, i1 false) #8
  %150 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %151 = sext i32 %150 to i64
  %152 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %153 = sext i32 %152 to i64
  %154 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %155 = sext i32 %154 to i64
  br label %156

156:                                              ; preds = %156, %144
  %157 = phi i64 [ 0, %144 ], [ %212, %156 ]
  %158 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %157
  %159 = mul nuw nsw i64 %157, 3
  %160 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %159
  %161 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %160, i64 1, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %160, i64 2, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub nsw i32 %162, %164
  %166 = add nsw i32 %164, %162
  %167 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %160, i64 1, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %160, i64 2, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = sub nsw i32 %168, %170
  %172 = add nsw i32 %170, %168
  %173 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %160, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = add nsw i32 %174, %172
  %176 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %158, i64 0, i32 0
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %159, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i32 %178, %166
  %180 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %157, i32 1
  store i32 %179, i32* %180, align 4
  %181 = sext i32 %165 to i64
  %182 = mul nsw i64 %181, %151
  %183 = sext i32 %171 to i64
  %184 = mul nsw i64 %183, %153
  %185 = sext i32 %172 to i64
  %186 = mul nsw i64 %185, %155
  %187 = sext i32 %166 to i64
  %188 = mul nsw i64 %187, %155
  %189 = add nsw i64 %182, 1073741824
  %190 = add i64 %189, %186
  %191 = lshr i64 %190, 31
  %192 = trunc i64 %191 to i32
  %193 = sub i32 %174, %192
  %194 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %158, i64 5, i32 0
  store i32 %193, i32* %194, align 8
  %195 = add i64 %188, 1073741824
  %196 = sub i64 %195, %184
  %197 = lshr i64 %196, 31
  %198 = trunc i64 %197 to i32
  %199 = sub i32 %178, %198
  %200 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %158, i64 5, i32 1
  store i32 %199, i32* %200, align 4
  %201 = sub i64 1073741824, %182
  %202 = add nsw i64 %201, %186
  %203 = lshr i64 %202, 31
  %204 = trunc i64 %203 to i32
  %205 = sub i32 %174, %204
  %206 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %158, i64 10, i32 0
  store i32 %205, i32* %206, align 8
  %207 = add i64 %195, %184
  %208 = lshr i64 %207, 31
  %209 = trunc i64 %208 to i32
  %210 = sub i32 %178, %209
  %211 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %158, i64 10, i32 1
  store i32 %210, i32* %211, align 4
  %212 = add nuw nsw i64 %157, 1
  %213 = icmp eq i64 %212, 5
  br i1 %213, label %214, label %156

214:                                              ; preds = %156
  %215 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %145, i64 %149
  %216 = load i32, i32* %50, align 8
  %217 = load i32, i32* %51, align 16
  %218 = sub nsw i32 %216, %217
  %219 = add nsw i32 %217, %216
  %220 = load i32, i32* %52, align 4
  %221 = load i32, i32* %53, align 4
  %222 = sub nsw i32 %220, %221
  %223 = add nsw i32 %221, %220
  %224 = load i32, i32* %54, align 16
  %225 = load i32, i32* %55, align 8
  %226 = sub nsw i32 %224, %225
  %227 = add nsw i32 %225, %224
  %228 = load i32, i32* %56, align 4
  %229 = load i32, i32* %57, align 4
  %230 = sub nsw i32 %228, %229
  %231 = add nsw i32 %229, %228
  %232 = load i32, i32* %58, align 16
  %233 = add i32 %227, %219
  %234 = add i32 %233, %232
  %235 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 0, i32 0
  store i32 %234, i32* %235, align 4
  %236 = load i32, i32* %59, align 4
  %237 = add i32 %231, %223
  %238 = add i32 %237, %236
  %239 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %145, i64 %149, i32 1
  store i32 %238, i32* %239, align 4
  %240 = sext i32 %227 to i64
  %241 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %242 = sext i32 %241 to i64
  %243 = mul nsw i64 %242, %240
  %244 = sext i32 %219 to i64
  %245 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %246 = sext i32 %245 to i64
  %247 = mul nsw i64 %246, %244
  %248 = add nsw i64 %243, 1073741824
  %249 = sub nsw i64 %248, %247
  %250 = lshr i64 %249, 31
  %251 = trunc i64 %250 to i32
  %252 = mul nsw i64 %242, %244
  %253 = mul nsw i64 %246, %240
  %254 = add nsw i64 %252, 1073741824
  %255 = sub nsw i64 %254, %253
  %256 = lshr i64 %255, 31
  %257 = trunc i64 %256 to i32
  %258 = sext i32 %231 to i64
  %259 = mul nsw i64 %242, %258
  %260 = sext i32 %223 to i64
  %261 = mul nsw i64 %246, %260
  %262 = add nsw i64 %259, 1073741824
  %263 = sub nsw i64 %262, %261
  %264 = lshr i64 %263, 31
  %265 = trunc i64 %264 to i32
  %266 = mul nsw i64 %242, %260
  %267 = mul nsw i64 %246, %258
  %268 = add nsw i64 %266, 1073741824
  %269 = sub nsw i64 %268, %267
  %270 = lshr i64 %269, 31
  %271 = trunc i64 %270 to i32
  %272 = sext i32 %230 to i64
  %273 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %274 = sext i32 %273 to i64
  %275 = mul nsw i64 %274, %272
  %276 = sext i32 %222 to i64
  %277 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %278 = sext i32 %277 to i64
  %279 = mul nsw i64 %278, %276
  %280 = add nsw i64 %275, 1073741824
  %281 = sub nsw i64 %280, %279
  %282 = lshr i64 %281, 31
  %283 = trunc i64 %282 to i32
  %284 = mul nsw i64 %274, %276
  %285 = mul nsw i64 %278, %272
  %286 = add nsw i64 %284, 1073741824
  %287 = add i64 %286, %285
  %288 = lshr i64 %287, 31
  %289 = trunc i64 %288 to i32
  %290 = sext i32 %226 to i64
  %291 = mul nsw i64 %274, %290
  %292 = sext i32 %218 to i64
  %293 = mul nsw i64 %278, %292
  %294 = add nsw i64 %291, 1073741824
  %295 = sub nsw i64 %294, %293
  %296 = lshr i64 %295, 31
  %297 = trunc i64 %296 to i32
  %298 = mul nsw i64 %274, %292
  %299 = mul nsw i64 %278, %290
  %300 = add nsw i64 %298, 1073741824
  %301 = add i64 %300, %299
  %302 = lshr i64 %301, 31
  %303 = trunc i64 %302 to i32
  %304 = add i32 %232, %257
  %305 = add i32 %304, %289
  %306 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %60, i32 0
  store i32 %305, i32* %306, align 4
  %307 = add i32 %236, %271
  %308 = sub i32 %307, %303
  %309 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %60, i32 1
  store i32 %308, i32* %309, align 4
  %310 = add i32 %232, %251
  %311 = sub i32 %310, %283
  %312 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %61, i32 0
  store i32 %311, i32* %312, align 4
  %313 = add i32 %236, %265
  %314 = add i32 %313, %297
  %315 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %61, i32 1
  store i32 %314, i32* %315, align 4
  %316 = add i32 %310, %283
  %317 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %62, i32 0
  store i32 %316, i32* %317, align 4
  %318 = sub i32 %313, %297
  %319 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %62, i32 1
  store i32 %318, i32* %319, align 4
  %320 = sub i32 %304, %289
  %321 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %63, i32 0
  store i32 %320, i32* %321, align 4
  %322 = add i32 %307, %303
  %323 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %63, i32 1
  store i32 %322, i32* %323, align 4
  %324 = load i32, i32* %64, align 16
  %325 = load i32, i32* %65, align 8
  %326 = sub nsw i32 %324, %325
  %327 = add nsw i32 %325, %324
  %328 = load i32, i32* %66, align 4
  %329 = load i32, i32* %67, align 4
  %330 = sub nsw i32 %328, %329
  %331 = add nsw i32 %329, %328
  %332 = load i32, i32* %68, align 8
  %333 = load i32, i32* %69, align 16
  %334 = sub nsw i32 %332, %333
  %335 = add nsw i32 %333, %332
  %336 = load i32, i32* %70, align 4
  %337 = load i32, i32* %71, align 4
  %338 = sub nsw i32 %336, %337
  %339 = add nsw i32 %337, %336
  %340 = load i32, i32* %72, align 8
  %341 = add i32 %335, %327
  %342 = add i32 %341, %340
  %343 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %73, i32 0
  store i32 %342, i32* %343, align 4
  %344 = load i32, i32* %74, align 4
  %345 = add i32 %339, %331
  %346 = add i32 %345, %344
  %347 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %73, i32 1
  store i32 %346, i32* %347, align 4
  %348 = sext i32 %335 to i64
  %349 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %350 = sext i32 %349 to i64
  %351 = mul nsw i64 %350, %348
  %352 = sext i32 %327 to i64
  %353 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %354 = sext i32 %353 to i64
  %355 = mul nsw i64 %354, %352
  %356 = add nsw i64 %351, 1073741824
  %357 = sub nsw i64 %356, %355
  %358 = lshr i64 %357, 31
  %359 = trunc i64 %358 to i32
  %360 = mul nsw i64 %350, %352
  %361 = mul nsw i64 %354, %348
  %362 = add nsw i64 %360, 1073741824
  %363 = sub nsw i64 %362, %361
  %364 = lshr i64 %363, 31
  %365 = trunc i64 %364 to i32
  %366 = sext i32 %339 to i64
  %367 = mul nsw i64 %350, %366
  %368 = sext i32 %331 to i64
  %369 = mul nsw i64 %354, %368
  %370 = add nsw i64 %367, 1073741824
  %371 = sub nsw i64 %370, %369
  %372 = lshr i64 %371, 31
  %373 = trunc i64 %372 to i32
  %374 = mul nsw i64 %350, %368
  %375 = mul nsw i64 %354, %366
  %376 = add nsw i64 %374, 1073741824
  %377 = sub nsw i64 %376, %375
  %378 = lshr i64 %377, 31
  %379 = trunc i64 %378 to i32
  %380 = sext i32 %338 to i64
  %381 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %382 = sext i32 %381 to i64
  %383 = mul nsw i64 %382, %380
  %384 = sext i32 %330 to i64
  %385 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %386 = sext i32 %385 to i64
  %387 = mul nsw i64 %386, %384
  %388 = add nsw i64 %383, 1073741824
  %389 = sub nsw i64 %388, %387
  %390 = lshr i64 %389, 31
  %391 = trunc i64 %390 to i32
  %392 = mul nsw i64 %382, %384
  %393 = mul nsw i64 %386, %380
  %394 = add nsw i64 %392, 1073741824
  %395 = add i64 %394, %393
  %396 = lshr i64 %395, 31
  %397 = trunc i64 %396 to i32
  %398 = sext i32 %334 to i64
  %399 = mul nsw i64 %382, %398
  %400 = sext i32 %326 to i64
  %401 = mul nsw i64 %386, %400
  %402 = add nsw i64 %399, 1073741824
  %403 = sub nsw i64 %402, %401
  %404 = lshr i64 %403, 31
  %405 = trunc i64 %404 to i32
  %406 = mul nsw i64 %382, %400
  %407 = mul nsw i64 %386, %398
  %408 = add nsw i64 %406, 1073741824
  %409 = add i64 %408, %407
  %410 = lshr i64 %409, 31
  %411 = trunc i64 %410 to i32
  %412 = add i32 %340, %365
  %413 = add i32 %412, %397
  %414 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %48, i32 0
  store i32 %413, i32* %414, align 4
  %415 = add i32 %344, %379
  %416 = sub i32 %415, %411
  %417 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %48, i32 1
  store i32 %416, i32* %417, align 4
  %418 = add i32 %340, %359
  %419 = sub i32 %418, %391
  %420 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %75, i32 0
  store i32 %419, i32* %420, align 4
  %421 = add i32 %344, %373
  %422 = add i32 %421, %405
  %423 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %75, i32 1
  store i32 %422, i32* %423, align 4
  %424 = add i32 %418, %391
  %425 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %76, i32 0
  store i32 %424, i32* %425, align 4
  %426 = sub i32 %421, %405
  %427 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %76, i32 1
  store i32 %426, i32* %427, align 4
  %428 = sub i32 %412, %397
  %429 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %77, i32 0
  store i32 %428, i32* %429, align 4
  %430 = add i32 %415, %411
  %431 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %77, i32 1
  store i32 %430, i32* %431, align 4
  %432 = load i32, i32* %78, align 8
  %433 = load i32, i32* %79, align 16
  %434 = sub nsw i32 %432, %433
  %435 = add nsw i32 %433, %432
  %436 = load i32, i32* %80, align 4
  %437 = load i32, i32* %81, align 4
  %438 = sub nsw i32 %436, %437
  %439 = add nsw i32 %437, %436
  %440 = load i32, i32* %82, align 16
  %441 = load i32, i32* %83, align 8
  %442 = sub nsw i32 %440, %441
  %443 = add nsw i32 %441, %440
  %444 = load i32, i32* %84, align 4
  %445 = load i32, i32* %85, align 4
  %446 = sub nsw i32 %444, %445
  %447 = add nsw i32 %445, %444
  %448 = load i32, i32* %86, align 16
  %449 = add i32 %443, %435
  %450 = add i32 %449, %448
  %451 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %87, i32 0
  store i32 %450, i32* %451, align 4
  %452 = load i32, i32* %88, align 4
  %453 = add i32 %447, %439
  %454 = add i32 %453, %452
  %455 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %87, i32 1
  store i32 %454, i32* %455, align 4
  %456 = sext i32 %443 to i64
  %457 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %458 = sext i32 %457 to i64
  %459 = mul nsw i64 %458, %456
  %460 = sext i32 %435 to i64
  %461 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %462 = sext i32 %461 to i64
  %463 = mul nsw i64 %462, %460
  %464 = add nsw i64 %459, 1073741824
  %465 = sub nsw i64 %464, %463
  %466 = lshr i64 %465, 31
  %467 = trunc i64 %466 to i32
  %468 = mul nsw i64 %458, %460
  %469 = mul nsw i64 %462, %456
  %470 = add nsw i64 %468, 1073741824
  %471 = sub nsw i64 %470, %469
  %472 = lshr i64 %471, 31
  %473 = trunc i64 %472 to i32
  %474 = sext i32 %447 to i64
  %475 = mul nsw i64 %458, %474
  %476 = sext i32 %439 to i64
  %477 = mul nsw i64 %462, %476
  %478 = add nsw i64 %475, 1073741824
  %479 = sub nsw i64 %478, %477
  %480 = lshr i64 %479, 31
  %481 = trunc i64 %480 to i32
  %482 = mul nsw i64 %458, %476
  %483 = mul nsw i64 %462, %474
  %484 = add nsw i64 %482, 1073741824
  %485 = sub nsw i64 %484, %483
  %486 = lshr i64 %485, 31
  %487 = trunc i64 %486 to i32
  %488 = sext i32 %446 to i64
  %489 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %490 = sext i32 %489 to i64
  %491 = mul nsw i64 %490, %488
  %492 = sext i32 %438 to i64
  %493 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %494 = sext i32 %493 to i64
  %495 = mul nsw i64 %494, %492
  %496 = add nsw i64 %491, 1073741824
  %497 = sub nsw i64 %496, %495
  %498 = lshr i64 %497, 31
  %499 = trunc i64 %498 to i32
  %500 = mul nsw i64 %490, %492
  %501 = mul nsw i64 %494, %488
  %502 = add nsw i64 %500, 1073741824
  %503 = add i64 %502, %501
  %504 = lshr i64 %503, 31
  %505 = trunc i64 %504 to i32
  %506 = sext i32 %442 to i64
  %507 = mul nsw i64 %490, %506
  %508 = sext i32 %434 to i64
  %509 = mul nsw i64 %494, %508
  %510 = add nsw i64 %507, 1073741824
  %511 = sub nsw i64 %510, %509
  %512 = lshr i64 %511, 31
  %513 = trunc i64 %512 to i32
  %514 = mul nsw i64 %490, %508
  %515 = mul nsw i64 %494, %506
  %516 = add nsw i64 %514, 1073741824
  %517 = add i64 %516, %515
  %518 = lshr i64 %517, 31
  %519 = trunc i64 %518 to i32
  %520 = add i32 %448, %473
  %521 = add i32 %520, %505
  %522 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %89, i32 0
  store i32 %521, i32* %522, align 4
  %523 = add i32 %452, %487
  %524 = sub i32 %523, %519
  %525 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %89, i32 1
  store i32 %524, i32* %525, align 4
  %526 = add i32 %448, %467
  %527 = sub i32 %526, %499
  %528 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %90, i32 0
  store i32 %527, i32* %528, align 4
  %529 = add i32 %452, %481
  %530 = add i32 %529, %513
  %531 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %90, i32 1
  store i32 %530, i32* %531, align 4
  %532 = add i32 %526, %499
  %533 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %91, i32 0
  store i32 %532, i32* %533, align 4
  %534 = sub i32 %529, %513
  %535 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %91, i32 1
  store i32 %534, i32* %535, align 4
  %536 = sub i32 %520, %505
  %537 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %92, i32 0
  store i32 %536, i32* %537, align 4
  %538 = add i32 %523, %519
  %539 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %215, i64 %92, i32 1
  store i32 %538, i32* %539, align 4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %49) #8
  %540 = add nuw nsw i64 %95, 1
  %541 = icmp eq i64 %540, %93
  br i1 %541, label %98, label %94

542:                                              ; preds = %542, %94
  %543 = phi i64 [ 0, %94 ], [ %580, %542 ]
  %544 = add nuw nsw i64 %543, %97
  %545 = getelementptr inbounds i32, i32* %16, i64 %544
  %546 = load i32, i32* %545, align 4
  %547 = sub nsw i32 0, %546
  %548 = sext i32 %547 to i64
  %549 = mul nsw i64 %26, %548
  %550 = getelementptr inbounds i32, i32* %31, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = sext i32 %546 to i64
  %553 = mul nsw i64 %26, %552
  %554 = getelementptr inbounds i32, i32* %19, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = ashr i32 %546, 1
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %557, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = sext i32 %559 to i64
  %561 = sext i32 %551 to i64
  %562 = mul nsw i64 %560, %561
  %563 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %557, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = sext i32 %555 to i64
  %567 = mul nsw i64 %565, %566
  %568 = add nsw i64 %562, 1073741824
  %569 = sub nsw i64 %568, %567
  %570 = lshr i64 %569, 31
  %571 = trunc i64 %570 to i32
  %572 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %543, i32 0
  store i32 %571, i32* %572, align 8
  %573 = mul nsw i64 %565, %561
  %574 = mul nsw i64 %560, %566
  %575 = add nsw i64 %574, 1073741824
  %576 = add i64 %575, %573
  %577 = lshr i64 %576, 31
  %578 = trunc i64 %577 to i32
  %579 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %543, i32 1
  store i32 %578, i32* %579, align 4
  %580 = add nuw nsw i64 %543, 1
  %581 = icmp eq i64 %580, 15
  br i1 %581, label %144, label %542

582:                                              ; preds = %98
  %583 = sext i32 %14 to i64
  br label %585

584:                                              ; preds = %585, %98
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #8
  ret void

585:                                              ; preds = %582, %585
  %586 = phi i64 [ 0, %582 ], [ %657, %585 ]
  %587 = add nsw i64 %586, %583
  %588 = xor i64 %586, -1
  %589 = add nsw i64 %583, %588
  %590 = getelementptr inbounds i32, i32* %18, i64 %587
  %591 = load i32, i32* %590, align 4
  %592 = getelementptr inbounds i32, i32* %18, i64 %589
  %593 = load i32, i32* %592, align 4
  %594 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %110, align 8
  %595 = sext i32 %593 to i64
  %596 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %594, i64 %595, i32 1
  %597 = load i32, i32* %596, align 4
  %598 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %594, i64 %595, i32 0
  %599 = load i32, i32* %598, align 4
  %600 = sext i32 %591 to i64
  %601 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %594, i64 %600, i32 1
  %602 = load i32, i32* %601, align 4
  %603 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %594, i64 %600, i32 0
  %604 = load i32, i32* %603, align 4
  %605 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %589, i32 1
  %606 = load i32, i32* %605, align 4
  %607 = sext i32 %606 to i64
  %608 = sext i32 %597 to i64
  %609 = mul nsw i64 %607, %608
  %610 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %589, i32 0
  %611 = load i32, i32* %610, align 4
  %612 = sext i32 %611 to i64
  %613 = sext i32 %599 to i64
  %614 = mul nsw i64 %612, %613
  %615 = add nsw i64 %609, 1073741824
  %616 = sub nsw i64 %615, %614
  %617 = lshr i64 %616, 31
  %618 = trunc i64 %617 to i32
  %619 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %589, i32 0
  store i32 %618, i32* %619, align 4
  %620 = load i32, i32* %610, align 4
  %621 = sext i32 %620 to i64
  %622 = mul nsw i64 %621, %608
  %623 = load i32, i32* %605, align 4
  %624 = sext i32 %623 to i64
  %625 = mul nsw i64 %624, %613
  %626 = add nsw i64 %622, 1073741824
  %627 = add i64 %626, %625
  %628 = lshr i64 %627, 31
  %629 = trunc i64 %628 to i32
  %630 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %587, i32 1
  store i32 %629, i32* %630, align 4
  %631 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %587, i32 1
  %632 = load i32, i32* %631, align 4
  %633 = sext i32 %632 to i64
  %634 = sext i32 %602 to i64
  %635 = mul nsw i64 %633, %634
  %636 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %587, i32 0
  %637 = load i32, i32* %636, align 4
  %638 = sext i32 %637 to i64
  %639 = sext i32 %604 to i64
  %640 = mul nsw i64 %638, %639
  %641 = add nsw i64 %635, 1073741824
  %642 = sub nsw i64 %641, %640
  %643 = lshr i64 %642, 31
  %644 = trunc i64 %643 to i32
  %645 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %587, i32 0
  store i32 %644, i32* %645, align 4
  %646 = load i32, i32* %636, align 4
  %647 = sext i32 %646 to i64
  %648 = mul nsw i64 %647, %634
  %649 = load i32, i32* %631, align 4
  %650 = sext i32 %649 to i64
  %651 = mul nsw i64 %650, %639
  %652 = add nsw i64 %648, 1073741824
  %653 = add i64 %652, %651
  %654 = lshr i64 %653, 31
  %655 = trunc i64 %654 to i32
  %656 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %589, i32 1
  store i32 %655, i32* %656, align 4
  %657 = add nuw nsw i64 %586, 1
  %658 = icmp slt i64 %657, %583
  br i1 %658, label %585, label %584
}

; Function Attrs: nounwind ssp uwtable
define internal void @compound_mdct_15xM(%struct.AVTXContext* nocapture readonly, i8* nocapture, i8* nocapture readonly, i64) #0 {
  %5 = alloca [15 x %struct.AVComplexInt32], align 16
  %6 = alloca [15 x %struct.AVComplexInt32], align 16
  %7 = bitcast i8* %2 to i32*
  %8 = bitcast i8* %1 to i32*
  %9 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %10 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %9, align 8
  %11 = bitcast [15 x %struct.AVComplexInt32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 120, i1 false)
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %13, 15
  %15 = mul i32 %13, 45
  %16 = ashr i32 %14, 1
  %17 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 8
  %18 = load i32*, i32** %17, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds i32, i32* %18, i64 %19
  %21 = or i32 %13, 1
  %22 = tail call i32 @llvm.ctlz.i32(i32 %21, i1 true), !range !3
  %23 = xor i32 %22, 31
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %24
  %26 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %25, align 8
  %27 = lshr i64 %3, 2
  %28 = icmp sgt i32 %13, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %4
  %30 = sext i32 %13 to i64
  %31 = mul nsw i64 %30, 3
  %32 = mul nsw i64 %30, 5
  %33 = mul nsw i64 %30, 6
  %34 = mul nsw i64 %30, 7
  %35 = mul nsw i64 %30, 9
  %36 = mul nsw i64 %30, 10
  %37 = mul nsw i64 %30, 11
  %38 = mul nsw i64 %30, 12
  %39 = mul nsw i64 %30, 13
  %40 = mul nsw i64 %30, 14
  br label %95

41:                                               ; preds = %4
  %42 = mul i32 %13, 75
  %43 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %44 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %45 = sext i32 %13 to i64
  %46 = bitcast [15 x %struct.AVComplexInt32]* %5 to i8*
  %47 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 0
  %48 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 0
  %49 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 1, i32 1
  %50 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 4, i32 1
  %51 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 0
  %52 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 0
  %53 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 2, i32 1
  %54 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 3, i32 1
  %55 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 0
  %56 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 0, i32 1
  %57 = mul nsw i64 %45, 6
  %58 = mul nsw i64 %45, 12
  %59 = mul nsw i64 %45, 3
  %60 = mul nsw i64 %45, 9
  %61 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 0
  %62 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 0
  %63 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 6, i32 1
  %64 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 9, i32 1
  %65 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 0
  %66 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 0
  %67 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 7, i32 1
  %68 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 8, i32 1
  %69 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 0
  %70 = mul nsw i64 %45, 10
  %71 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 5, i32 1
  %72 = mul nsw i64 %45, 7
  %73 = mul nsw i64 %45, 13
  %74 = shl nsw i64 %45, 2
  %75 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 0
  %76 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 0
  %77 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 11, i32 1
  %78 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 14, i32 1
  %79 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 0
  %80 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 0
  %81 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 12, i32 1
  %82 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 13, i32 1
  %83 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 0
  %84 = mul nsw i64 %45, 5
  %85 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 10, i32 1
  %86 = mul nsw i64 %45, 11
  %87 = shl nsw i64 %45, 1
  %88 = shl nsw i64 %45, 3
  %89 = mul nsw i64 %45, 14
  %90 = zext i32 %13 to i64
  br label %91

91:                                               ; preds = %211, %41
  %92 = phi i64 [ 0, %41 ], [ %537, %211 ]
  %93 = mul i64 %92, 15
  %94 = and i64 %93, 4294967295
  br label %539

95:                                               ; preds = %211, %29
  %96 = phi i64 [ %40, %29 ], [ %89, %211 ]
  %97 = phi i64 [ %39, %29 ], [ %73, %211 ]
  %98 = phi i64 [ %38, %29 ], [ %58, %211 ]
  %99 = phi i64 [ %37, %29 ], [ %86, %211 ]
  %100 = phi i64 [ %36, %29 ], [ %70, %211 ]
  %101 = phi i64 [ %35, %29 ], [ %60, %211 ]
  %102 = phi i64 [ %34, %29 ], [ %72, %211 ]
  %103 = phi i64 [ %33, %29 ], [ %57, %211 ]
  %104 = phi i64 [ %32, %29 ], [ %84, %211 ]
  %105 = phi i64 [ %31, %29 ], [ %59, %211 ]
  %106 = phi i64 [ %30, %29 ], [ %45, %211 ]
  %107 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 7
  %108 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  tail call void %26(%struct.AVComplexInt32* %108) #8
  %109 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %110 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %109, i64 %106
  tail call void %26(%struct.AVComplexInt32* %110) #8
  %111 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %112 = shl nsw i64 %106, 1
  %113 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %111, i64 %112
  tail call void %26(%struct.AVComplexInt32* %113) #8
  %114 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %115 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 %105
  tail call void %26(%struct.AVComplexInt32* %115) #8
  %116 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %117 = shl nsw i64 %106, 2
  %118 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %116, i64 %117
  tail call void %26(%struct.AVComplexInt32* %118) #8
  %119 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %120 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %119, i64 %104
  tail call void %26(%struct.AVComplexInt32* %120) #8
  %121 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %122 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %121, i64 %103
  tail call void %26(%struct.AVComplexInt32* %122) #8
  %123 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %124 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %102
  tail call void %26(%struct.AVComplexInt32* %124) #8
  %125 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %126 = shl nsw i64 %106, 3
  %127 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %125, i64 %126
  tail call void %26(%struct.AVComplexInt32* %127) #8
  %128 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %129 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %128, i64 %101
  tail call void %26(%struct.AVComplexInt32* %129) #8
  %130 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %131 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %130, i64 %100
  tail call void %26(%struct.AVComplexInt32* %131) #8
  %132 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %133 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %132, i64 %99
  tail call void %26(%struct.AVComplexInt32* %133) #8
  %134 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %135 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %134, i64 %98
  tail call void %26(%struct.AVComplexInt32* %135) #8
  %136 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %137 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %136, i64 %97
  tail call void %26(%struct.AVComplexInt32* %137) #8
  %138 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %139 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %138, i64 %96
  tail call void %26(%struct.AVComplexInt32* %139) #8
  %140 = icmp sgt i32 %14, 1
  br i1 %140, label %615, label %617

141:                                              ; preds = %584
  %142 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %43, align 8
  %143 = load i32*, i32** %44, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 %92
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %46) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 120, i1 false) #8
  %147 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  %148 = sext i32 %147 to i64
  %149 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %150 = sext i32 %149 to i64
  %151 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  %152 = sext i32 %151 to i64
  br label %153

153:                                              ; preds = %153, %141
  %154 = phi i64 [ 0, %141 ], [ %209, %153 ]
  %155 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %154
  %156 = mul nuw nsw i64 %154, 3
  %157 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %156
  %158 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %157, i64 1, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %157, i64 2, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = sub nsw i32 %159, %161
  %163 = add nsw i32 %161, %159
  %164 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %157, i64 1, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %157, i64 2, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = sub nsw i32 %165, %167
  %169 = add nsw i32 %167, %165
  %170 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %157, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = add nsw i32 %171, %169
  %173 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %155, i64 0, i32 0
  store i32 %172, i32* %173, align 8
  %174 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %156, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = add nsw i32 %175, %163
  %177 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %5, i64 0, i64 %154, i32 1
  store i32 %176, i32* %177, align 4
  %178 = sext i32 %162 to i64
  %179 = mul nsw i64 %178, %148
  %180 = sext i32 %168 to i64
  %181 = mul nsw i64 %180, %150
  %182 = sext i32 %169 to i64
  %183 = mul nsw i64 %182, %152
  %184 = sext i32 %163 to i64
  %185 = mul nsw i64 %184, %152
  %186 = add nsw i64 %179, 1073741824
  %187 = add i64 %186, %183
  %188 = lshr i64 %187, 31
  %189 = trunc i64 %188 to i32
  %190 = sub i32 %171, %189
  %191 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %155, i64 5, i32 0
  store i32 %190, i32* %191, align 8
  %192 = add i64 %185, 1073741824
  %193 = sub i64 %192, %181
  %194 = lshr i64 %193, 31
  %195 = trunc i64 %194 to i32
  %196 = sub i32 %175, %195
  %197 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %155, i64 5, i32 1
  store i32 %196, i32* %197, align 4
  %198 = sub i64 1073741824, %179
  %199 = add nsw i64 %198, %183
  %200 = lshr i64 %199, 31
  %201 = trunc i64 %200 to i32
  %202 = sub i32 %171, %201
  %203 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %155, i64 10, i32 0
  store i32 %202, i32* %203, align 8
  %204 = add i64 %192, %181
  %205 = lshr i64 %204, 31
  %206 = trunc i64 %205 to i32
  %207 = sub i32 %175, %206
  %208 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %155, i64 10, i32 1
  store i32 %207, i32* %208, align 4
  %209 = add nuw nsw i64 %154, 1
  %210 = icmp eq i64 %209, 5
  br i1 %210, label %211, label %153

211:                                              ; preds = %153
  %212 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %142, i64 %146
  %213 = load i32, i32* %47, align 8
  %214 = load i32, i32* %48, align 16
  %215 = sub nsw i32 %213, %214
  %216 = add nsw i32 %214, %213
  %217 = load i32, i32* %49, align 4
  %218 = load i32, i32* %50, align 4
  %219 = sub nsw i32 %217, %218
  %220 = add nsw i32 %218, %217
  %221 = load i32, i32* %51, align 16
  %222 = load i32, i32* %52, align 8
  %223 = sub nsw i32 %221, %222
  %224 = add nsw i32 %222, %221
  %225 = load i32, i32* %53, align 4
  %226 = load i32, i32* %54, align 4
  %227 = sub nsw i32 %225, %226
  %228 = add nsw i32 %226, %225
  %229 = load i32, i32* %55, align 16
  %230 = add i32 %224, %216
  %231 = add i32 %230, %229
  %232 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 0, i32 0
  store i32 %231, i32* %232, align 4
  %233 = load i32, i32* %56, align 4
  %234 = add i32 %228, %220
  %235 = add i32 %234, %233
  %236 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %142, i64 %146, i32 1
  store i32 %235, i32* %236, align 4
  %237 = sext i32 %224 to i64
  %238 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %239 = sext i32 %238 to i64
  %240 = mul nsw i64 %239, %237
  %241 = sext i32 %216 to i64
  %242 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %243 = sext i32 %242 to i64
  %244 = mul nsw i64 %243, %241
  %245 = add nsw i64 %240, 1073741824
  %246 = sub nsw i64 %245, %244
  %247 = lshr i64 %246, 31
  %248 = trunc i64 %247 to i32
  %249 = mul nsw i64 %239, %241
  %250 = mul nsw i64 %243, %237
  %251 = add nsw i64 %249, 1073741824
  %252 = sub nsw i64 %251, %250
  %253 = lshr i64 %252, 31
  %254 = trunc i64 %253 to i32
  %255 = sext i32 %228 to i64
  %256 = mul nsw i64 %239, %255
  %257 = sext i32 %220 to i64
  %258 = mul nsw i64 %243, %257
  %259 = add nsw i64 %256, 1073741824
  %260 = sub nsw i64 %259, %258
  %261 = lshr i64 %260, 31
  %262 = trunc i64 %261 to i32
  %263 = mul nsw i64 %239, %257
  %264 = mul nsw i64 %243, %255
  %265 = add nsw i64 %263, 1073741824
  %266 = sub nsw i64 %265, %264
  %267 = lshr i64 %266, 31
  %268 = trunc i64 %267 to i32
  %269 = sext i32 %227 to i64
  %270 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %271 = sext i32 %270 to i64
  %272 = mul nsw i64 %271, %269
  %273 = sext i32 %219 to i64
  %274 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %275 = sext i32 %274 to i64
  %276 = mul nsw i64 %275, %273
  %277 = add nsw i64 %272, 1073741824
  %278 = sub nsw i64 %277, %276
  %279 = lshr i64 %278, 31
  %280 = trunc i64 %279 to i32
  %281 = mul nsw i64 %271, %273
  %282 = mul nsw i64 %275, %269
  %283 = add nsw i64 %281, 1073741824
  %284 = add i64 %283, %282
  %285 = lshr i64 %284, 31
  %286 = trunc i64 %285 to i32
  %287 = sext i32 %223 to i64
  %288 = mul nsw i64 %271, %287
  %289 = sext i32 %215 to i64
  %290 = mul nsw i64 %275, %289
  %291 = add nsw i64 %288, 1073741824
  %292 = sub nsw i64 %291, %290
  %293 = lshr i64 %292, 31
  %294 = trunc i64 %293 to i32
  %295 = mul nsw i64 %271, %289
  %296 = mul nsw i64 %275, %287
  %297 = add nsw i64 %295, 1073741824
  %298 = add i64 %297, %296
  %299 = lshr i64 %298, 31
  %300 = trunc i64 %299 to i32
  %301 = add i32 %229, %254
  %302 = add i32 %301, %286
  %303 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %57, i32 0
  store i32 %302, i32* %303, align 4
  %304 = add i32 %233, %268
  %305 = sub i32 %304, %300
  %306 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %57, i32 1
  store i32 %305, i32* %306, align 4
  %307 = add i32 %229, %248
  %308 = sub i32 %307, %280
  %309 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %58, i32 0
  store i32 %308, i32* %309, align 4
  %310 = add i32 %233, %262
  %311 = add i32 %310, %294
  %312 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %58, i32 1
  store i32 %311, i32* %312, align 4
  %313 = add i32 %307, %280
  %314 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %59, i32 0
  store i32 %313, i32* %314, align 4
  %315 = sub i32 %310, %294
  %316 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %59, i32 1
  store i32 %315, i32* %316, align 4
  %317 = sub i32 %301, %286
  %318 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %60, i32 0
  store i32 %317, i32* %318, align 4
  %319 = add i32 %304, %300
  %320 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %60, i32 1
  store i32 %319, i32* %320, align 4
  %321 = load i32, i32* %61, align 16
  %322 = load i32, i32* %62, align 8
  %323 = sub nsw i32 %321, %322
  %324 = add nsw i32 %322, %321
  %325 = load i32, i32* %63, align 4
  %326 = load i32, i32* %64, align 4
  %327 = sub nsw i32 %325, %326
  %328 = add nsw i32 %326, %325
  %329 = load i32, i32* %65, align 8
  %330 = load i32, i32* %66, align 16
  %331 = sub nsw i32 %329, %330
  %332 = add nsw i32 %330, %329
  %333 = load i32, i32* %67, align 4
  %334 = load i32, i32* %68, align 4
  %335 = sub nsw i32 %333, %334
  %336 = add nsw i32 %334, %333
  %337 = load i32, i32* %69, align 8
  %338 = add i32 %332, %324
  %339 = add i32 %338, %337
  %340 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %70, i32 0
  store i32 %339, i32* %340, align 4
  %341 = load i32, i32* %71, align 4
  %342 = add i32 %336, %328
  %343 = add i32 %342, %341
  %344 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %70, i32 1
  store i32 %343, i32* %344, align 4
  %345 = sext i32 %332 to i64
  %346 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %347 = sext i32 %346 to i64
  %348 = mul nsw i64 %347, %345
  %349 = sext i32 %324 to i64
  %350 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %351 = sext i32 %350 to i64
  %352 = mul nsw i64 %351, %349
  %353 = add nsw i64 %348, 1073741824
  %354 = sub nsw i64 %353, %352
  %355 = lshr i64 %354, 31
  %356 = trunc i64 %355 to i32
  %357 = mul nsw i64 %347, %349
  %358 = mul nsw i64 %351, %345
  %359 = add nsw i64 %357, 1073741824
  %360 = sub nsw i64 %359, %358
  %361 = lshr i64 %360, 31
  %362 = trunc i64 %361 to i32
  %363 = sext i32 %336 to i64
  %364 = mul nsw i64 %347, %363
  %365 = sext i32 %328 to i64
  %366 = mul nsw i64 %351, %365
  %367 = add nsw i64 %364, 1073741824
  %368 = sub nsw i64 %367, %366
  %369 = lshr i64 %368, 31
  %370 = trunc i64 %369 to i32
  %371 = mul nsw i64 %347, %365
  %372 = mul nsw i64 %351, %363
  %373 = add nsw i64 %371, 1073741824
  %374 = sub nsw i64 %373, %372
  %375 = lshr i64 %374, 31
  %376 = trunc i64 %375 to i32
  %377 = sext i32 %335 to i64
  %378 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %379 = sext i32 %378 to i64
  %380 = mul nsw i64 %379, %377
  %381 = sext i32 %327 to i64
  %382 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %383 = sext i32 %382 to i64
  %384 = mul nsw i64 %383, %381
  %385 = add nsw i64 %380, 1073741824
  %386 = sub nsw i64 %385, %384
  %387 = lshr i64 %386, 31
  %388 = trunc i64 %387 to i32
  %389 = mul nsw i64 %379, %381
  %390 = mul nsw i64 %383, %377
  %391 = add nsw i64 %389, 1073741824
  %392 = add i64 %391, %390
  %393 = lshr i64 %392, 31
  %394 = trunc i64 %393 to i32
  %395 = sext i32 %331 to i64
  %396 = mul nsw i64 %379, %395
  %397 = sext i32 %323 to i64
  %398 = mul nsw i64 %383, %397
  %399 = add nsw i64 %396, 1073741824
  %400 = sub nsw i64 %399, %398
  %401 = lshr i64 %400, 31
  %402 = trunc i64 %401 to i32
  %403 = mul nsw i64 %379, %397
  %404 = mul nsw i64 %383, %395
  %405 = add nsw i64 %403, 1073741824
  %406 = add i64 %405, %404
  %407 = lshr i64 %406, 31
  %408 = trunc i64 %407 to i32
  %409 = add i32 %337, %362
  %410 = add i32 %409, %394
  %411 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %45, i32 0
  store i32 %410, i32* %411, align 4
  %412 = add i32 %341, %376
  %413 = sub i32 %412, %408
  %414 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %45, i32 1
  store i32 %413, i32* %414, align 4
  %415 = add i32 %337, %356
  %416 = sub i32 %415, %388
  %417 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %72, i32 0
  store i32 %416, i32* %417, align 4
  %418 = add i32 %341, %370
  %419 = add i32 %418, %402
  %420 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %72, i32 1
  store i32 %419, i32* %420, align 4
  %421 = add i32 %415, %388
  %422 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %73, i32 0
  store i32 %421, i32* %422, align 4
  %423 = sub i32 %418, %402
  %424 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %73, i32 1
  store i32 %423, i32* %424, align 4
  %425 = sub i32 %409, %394
  %426 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %74, i32 0
  store i32 %425, i32* %426, align 4
  %427 = add i32 %412, %408
  %428 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %74, i32 1
  store i32 %427, i32* %428, align 4
  %429 = load i32, i32* %75, align 8
  %430 = load i32, i32* %76, align 16
  %431 = sub nsw i32 %429, %430
  %432 = add nsw i32 %430, %429
  %433 = load i32, i32* %77, align 4
  %434 = load i32, i32* %78, align 4
  %435 = sub nsw i32 %433, %434
  %436 = add nsw i32 %434, %433
  %437 = load i32, i32* %79, align 16
  %438 = load i32, i32* %80, align 8
  %439 = sub nsw i32 %437, %438
  %440 = add nsw i32 %438, %437
  %441 = load i32, i32* %81, align 4
  %442 = load i32, i32* %82, align 4
  %443 = sub nsw i32 %441, %442
  %444 = add nsw i32 %442, %441
  %445 = load i32, i32* %83, align 16
  %446 = add i32 %440, %432
  %447 = add i32 %446, %445
  %448 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %84, i32 0
  store i32 %447, i32* %448, align 4
  %449 = load i32, i32* %85, align 4
  %450 = add i32 %444, %436
  %451 = add i32 %450, %449
  %452 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %84, i32 1
  store i32 %451, i32* %452, align 4
  %453 = sext i32 %440 to i64
  %454 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  %455 = sext i32 %454 to i64
  %456 = mul nsw i64 %455, %453
  %457 = sext i32 %432 to i64
  %458 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  %459 = sext i32 %458 to i64
  %460 = mul nsw i64 %459, %457
  %461 = add nsw i64 %456, 1073741824
  %462 = sub nsw i64 %461, %460
  %463 = lshr i64 %462, 31
  %464 = trunc i64 %463 to i32
  %465 = mul nsw i64 %455, %457
  %466 = mul nsw i64 %459, %453
  %467 = add nsw i64 %465, 1073741824
  %468 = sub nsw i64 %467, %466
  %469 = lshr i64 %468, 31
  %470 = trunc i64 %469 to i32
  %471 = sext i32 %444 to i64
  %472 = mul nsw i64 %455, %471
  %473 = sext i32 %436 to i64
  %474 = mul nsw i64 %459, %473
  %475 = add nsw i64 %472, 1073741824
  %476 = sub nsw i64 %475, %474
  %477 = lshr i64 %476, 31
  %478 = trunc i64 %477 to i32
  %479 = mul nsw i64 %455, %473
  %480 = mul nsw i64 %459, %471
  %481 = add nsw i64 %479, 1073741824
  %482 = sub nsw i64 %481, %480
  %483 = lshr i64 %482, 31
  %484 = trunc i64 %483 to i32
  %485 = sext i32 %443 to i64
  %486 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %487 = sext i32 %486 to i64
  %488 = mul nsw i64 %487, %485
  %489 = sext i32 %435 to i64
  %490 = load i32, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  %491 = sext i32 %490 to i64
  %492 = mul nsw i64 %491, %489
  %493 = add nsw i64 %488, 1073741824
  %494 = sub nsw i64 %493, %492
  %495 = lshr i64 %494, 31
  %496 = trunc i64 %495 to i32
  %497 = mul nsw i64 %487, %489
  %498 = mul nsw i64 %491, %485
  %499 = add nsw i64 %497, 1073741824
  %500 = add i64 %499, %498
  %501 = lshr i64 %500, 31
  %502 = trunc i64 %501 to i32
  %503 = sext i32 %439 to i64
  %504 = mul nsw i64 %487, %503
  %505 = sext i32 %431 to i64
  %506 = mul nsw i64 %491, %505
  %507 = add nsw i64 %504, 1073741824
  %508 = sub nsw i64 %507, %506
  %509 = lshr i64 %508, 31
  %510 = trunc i64 %509 to i32
  %511 = mul nsw i64 %487, %505
  %512 = mul nsw i64 %491, %503
  %513 = add nsw i64 %511, 1073741824
  %514 = add i64 %513, %512
  %515 = lshr i64 %514, 31
  %516 = trunc i64 %515 to i32
  %517 = add i32 %445, %470
  %518 = add i32 %517, %502
  %519 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %86, i32 0
  store i32 %518, i32* %519, align 4
  %520 = add i32 %449, %484
  %521 = sub i32 %520, %516
  %522 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %86, i32 1
  store i32 %521, i32* %522, align 4
  %523 = add i32 %445, %464
  %524 = sub i32 %523, %496
  %525 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %87, i32 0
  store i32 %524, i32* %525, align 4
  %526 = add i32 %449, %478
  %527 = add i32 %526, %510
  %528 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %87, i32 1
  store i32 %527, i32* %528, align 4
  %529 = add i32 %523, %496
  %530 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %88, i32 0
  store i32 %529, i32* %530, align 4
  %531 = sub i32 %526, %510
  %532 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %88, i32 1
  store i32 %531, i32* %532, align 4
  %533 = sub i32 %517, %502
  %534 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %89, i32 0
  store i32 %533, i32* %534, align 4
  %535 = add i32 %520, %516
  %536 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %212, i64 %89, i32 1
  store i32 %535, i32* %536, align 4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %46) #8
  %537 = add nuw nsw i64 %92, 1
  %538 = icmp eq i64 %537, %90
  br i1 %538, label %95, label %91

539:                                              ; preds = %584, %91
  %540 = phi i64 [ 0, %91 ], [ %613, %584 ]
  %541 = add nuw nsw i64 %540, %94
  %542 = getelementptr inbounds i32, i32* %18, i64 %541
  %543 = load i32, i32* %542, align 4
  %544 = icmp slt i32 %543, %14
  %545 = add nsw i32 %543, %14
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i32, i32* %7, i64 %546
  %548 = load i32, i32* %547, align 4
  %549 = xor i32 %543, -1
  br i1 %544, label %550, label %567

550:                                              ; preds = %539
  %551 = add i32 %14, %549
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i32, i32* %7, i64 %552
  %554 = load i32, i32* %553, align 4
  %555 = sub i32 32, %548
  %556 = add i32 %555, %554
  %557 = add nsw i32 %543, %15
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i32, i32* %7, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = add i32 %15, %549
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds i32, i32* %7, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = sub i32 32, %560
  %566 = sub i32 %565, %564
  br label %584

567:                                              ; preds = %539
  %568 = add i32 %42, %549
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds i32, i32* %7, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = sub i32 32, %548
  %573 = sub i32 %572, %571
  %574 = sub i32 %543, %14
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i32, i32* %7, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add i32 %15, %549
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i32, i32* %7, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = add i32 %577, 32
  %583 = sub i32 %582, %581
  br label %584

584:                                              ; preds = %550, %567
  %585 = phi i32 [ %556, %550 ], [ %573, %567 ]
  %586 = phi i32 [ %566, %550 ], [ %583, %567 ]
  %587 = ashr i32 %586, 6
  %588 = ashr i32 %585, 6
  %589 = ashr i32 %543, 1
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %590, i32 0
  %592 = load i32, i32* %591, align 4
  %593 = sext i32 %592 to i64
  %594 = sext i32 %588 to i64
  %595 = mul nsw i64 %593, %594
  %596 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %590, i32 1
  %597 = load i32, i32* %596, align 4
  %598 = sext i32 %597 to i64
  %599 = sext i32 %587 to i64
  %600 = mul nsw i64 %598, %599
  %601 = add nsw i64 %595, 1073741824
  %602 = sub nsw i64 %601, %600
  %603 = lshr i64 %602, 31
  %604 = trunc i64 %603 to i32
  %605 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %540, i32 1
  store i32 %604, i32* %605, align 4
  %606 = mul nsw i64 %598, %594
  %607 = mul nsw i64 %593, %599
  %608 = add nsw i64 %607, 1073741824
  %609 = add nsw i64 %608, %606
  %610 = lshr i64 %609, 31
  %611 = trunc i64 %610 to i32
  %612 = getelementptr inbounds [15 x %struct.AVComplexInt32], [15 x %struct.AVComplexInt32]* %6, i64 0, i64 %540, i32 0
  store i32 %611, i32* %612, align 8
  %613 = add nuw nsw i64 %540, 1
  %614 = icmp eq i64 %613, 15
  br i1 %614, label %141, label %539

615:                                              ; preds = %95
  %616 = sext i32 %16 to i64
  br label %618

617:                                              ; preds = %618, %95
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #8
  ret void

618:                                              ; preds = %615, %618
  %619 = phi i64 [ 0, %615 ], [ %702, %618 ]
  %620 = phi i32 [ 0, %615 ], [ %703, %618 ]
  %621 = add nsw i64 %619, %616
  %622 = add nsw i32 %620, %16
  %623 = xor i64 %619, -1
  %624 = xor i32 %620, -1
  %625 = add nsw i64 %616, %623
  %626 = add nsw i32 %16, %624
  %627 = getelementptr inbounds i32, i32* %20, i64 %621
  %628 = load i32, i32* %627, align 4
  %629 = getelementptr inbounds i32, i32* %20, i64 %625
  %630 = load i32, i32* %629, align 4
  %631 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %107, align 8
  %632 = sext i32 %630 to i64
  %633 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %631, i64 %632, i32 0
  %634 = load i32, i32* %633, align 4
  %635 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %631, i64 %632, i32 1
  %636 = load i32, i32* %635, align 4
  %637 = sext i32 %628 to i64
  %638 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %631, i64 %637, i32 0
  %639 = load i32, i32* %638, align 4
  %640 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %631, i64 %637, i32 1
  %641 = load i32, i32* %640, align 4
  %642 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %621, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = sext i32 %643 to i64
  %645 = sext i32 %639 to i64
  %646 = mul nsw i64 %644, %645
  %647 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %621, i32 0
  %648 = load i32, i32* %647, align 4
  %649 = sext i32 %648 to i64
  %650 = sext i32 %641 to i64
  %651 = mul nsw i64 %649, %650
  %652 = add nsw i64 %646, 1073741824
  %653 = sub nsw i64 %652, %651
  %654 = lshr i64 %653, 31
  %655 = trunc i64 %654 to i32
  %656 = shl nsw i32 %626, 1
  %657 = sext i32 %656 to i64
  %658 = mul nsw i64 %27, %657
  %659 = add nsw i64 %658, %27
  %660 = getelementptr inbounds i32, i32* %8, i64 %659
  store i32 %655, i32* %660, align 4
  %661 = load i32, i32* %647, align 4
  %662 = sext i32 %661 to i64
  %663 = mul nsw i64 %662, %645
  %664 = load i32, i32* %642, align 4
  %665 = sext i32 %664 to i64
  %666 = mul nsw i64 %665, %650
  %667 = add nsw i64 %663, 1073741824
  %668 = add i64 %667, %666
  %669 = lshr i64 %668, 31
  %670 = trunc i64 %669 to i32
  %671 = shl nsw i32 %622, 1
  %672 = sext i32 %671 to i64
  %673 = mul nsw i64 %27, %672
  %674 = getelementptr inbounds i32, i32* %8, i64 %673
  store i32 %670, i32* %674, align 4
  %675 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %625, i32 1
  %676 = load i32, i32* %675, align 4
  %677 = sext i32 %676 to i64
  %678 = sext i32 %634 to i64
  %679 = mul nsw i64 %677, %678
  %680 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %10, i64 %625, i32 0
  %681 = load i32, i32* %680, align 4
  %682 = sext i32 %681 to i64
  %683 = sext i32 %636 to i64
  %684 = mul nsw i64 %682, %683
  %685 = add nsw i64 %679, 1073741824
  %686 = sub nsw i64 %685, %684
  %687 = lshr i64 %686, 31
  %688 = trunc i64 %687 to i32
  %689 = add nsw i64 %673, %27
  %690 = getelementptr inbounds i32, i32* %8, i64 %689
  store i32 %688, i32* %690, align 4
  %691 = load i32, i32* %680, align 4
  %692 = sext i32 %691 to i64
  %693 = mul nsw i64 %692, %678
  %694 = load i32, i32* %675, align 4
  %695 = sext i32 %694 to i64
  %696 = mul nsw i64 %695, %683
  %697 = add nsw i64 %693, 1073741824
  %698 = add i64 %697, %696
  %699 = lshr i64 %698, 31
  %700 = trunc i64 %699 to i32
  %701 = getelementptr inbounds i32, i32* %8, i64 %658
  store i32 %700, i32* %701, align 4
  %702 = add nuw nsw i64 %619, 1
  %703 = add nuw nsw i32 %620, 1
  %704 = icmp slt i64 %702, %616
  br i1 %704, label %618, label %617
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_fft(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to %struct.AVComplexInt32*
  %6 = bitcast i8* %1 to %struct.AVComplexInt32*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 1
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 true), !range !3
  %11 = xor i32 %10, 31
  %12 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %4
  %17 = icmp sgt i32 %8, 0
  br i1 %17, label %18, label %122

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %20 = zext i32 %8 to i64
  %21 = add nsw i64 %20, -1
  %22 = and i64 %20, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %104, label %24

24:                                               ; preds = %18
  %25 = sub nsw i64 %20, %22
  br label %59

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 10
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  br label %31

31:                                               ; preds = %55, %26
  %32 = phi i32 [ %29, %26 ], [ %57, %55 ]
  %33 = phi i32* [ %28, %26 ], [ %56, %55 ]
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %34, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %34, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32*, i32** %30, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %34
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %42, %31
  %43 = phi i32 [ %38, %31 ], [ %50, %42 ]
  %44 = phi i32 [ %36, %31 ], [ %48, %42 ]
  %45 = phi i32 [ %41, %31 ], [ %53, %42 ]
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %46, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %46, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %44, i32* %47, align 4
  store i32 %43, i32* %49, align 4
  %51 = load i32*, i32** %30, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %46
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %32
  br i1 %54, label %55, label %42

55:                                               ; preds = %42
  %56 = getelementptr inbounds i32, i32* %33, i64 1
  store i32 %48, i32* %35, align 4
  store i32 %50, i32* %37, align 4
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %122, label %31

59:                                               ; preds = %59, %24
  %60 = phi i64 [ 0, %24 ], [ %101, %59 ]
  %61 = phi i64 [ %25, %24 ], [ %102, %59 ]
  %62 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %60
  %63 = load i32*, i32** %19, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %60
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %66
  %68 = bitcast %struct.AVComplexInt32* %67 to i64*
  %69 = bitcast %struct.AVComplexInt32* %62 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = or i64 %60, 1
  %72 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %71
  %73 = load i32*, i32** %19, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %76
  %78 = bitcast %struct.AVComplexInt32* %77 to i64*
  %79 = bitcast %struct.AVComplexInt32* %72 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 4
  %81 = or i64 %60, 2
  %82 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %81
  %83 = load i32*, i32** %19, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %81
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %86
  %88 = bitcast %struct.AVComplexInt32* %87 to i64*
  %89 = bitcast %struct.AVComplexInt32* %82 to i64*
  %90 = load i64, i64* %88, align 4
  store i64 %90, i64* %89, align 4
  %91 = or i64 %60, 3
  %92 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %91
  %93 = load i32*, i32** %19, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %91
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %96
  %98 = bitcast %struct.AVComplexInt32* %97 to i64*
  %99 = bitcast %struct.AVComplexInt32* %92 to i64*
  %100 = load i64, i64* %98, align 4
  store i64 %100, i64* %99, align 4
  %101 = add nuw nsw i64 %60, 4
  %102 = add i64 %61, -4
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %59

104:                                              ; preds = %59, %18
  %105 = phi i64 [ 0, %18 ], [ %101, %59 ]
  %106 = icmp eq i64 %22, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %104, %107
  %108 = phi i64 [ %119, %107 ], [ %105, %104 ]
  %109 = phi i64 [ %120, %107 ], [ %22, %104 ]
  %110 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %6, i64 %108
  %111 = load i32*, i32** %19, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 %108
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %114
  %116 = bitcast %struct.AVComplexInt32* %115 to i64*
  %117 = bitcast %struct.AVComplexInt32* %110 to i64*
  %118 = load i64, i64* %116, align 4
  store i64 %118, i64* %117, align 4
  %119 = add nuw nsw i64 %108, 1
  %120 = add i64 %109, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %107, !llvm.loop !4

122:                                              ; preds = %55, %104, %107, %16
  %123 = zext i32 %11 to i64
  %124 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %123
  %125 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %124, align 8
  tail call void %125(%struct.AVComplexInt32* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_imdct(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %1 to %struct.AVComplexInt32*
  %6 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %7 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %6, align 8
  %8 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = bitcast i8* %2 to i32*
  %12 = or i32 %9, 1
  %13 = tail call i32 @llvm.ctlz.i32(i32 %12, i1 true), !range !3
  %14 = xor i32 %13, 31
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %15
  %17 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %16, align 8
  %18 = lshr i64 %3, 2
  %19 = shl i32 %9, 1
  %20 = add nsw i32 %19, -1
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %18, %21
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = icmp sgt i32 %9, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %4
  tail call void %17(%struct.AVComplexInt32* %5) #8
  br label %79

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %28 = zext i32 %9 to i64
  br label %33

29:                                               ; preds = %33
  tail call void %17(%struct.AVComplexInt32* %5) #8
  %30 = icmp sgt i32 %9, 1
  br i1 %30, label %31, label %79

31:                                               ; preds = %29
  %32 = sext i32 %10 to i64
  br label %80

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %77, %33 ]
  %35 = mul nsw i64 %34, -2
  %36 = mul nsw i64 %18, %35
  %37 = getelementptr inbounds i32, i32* %23, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = shl nuw nsw i64 %34, 1
  %40 = mul nuw nsw i64 %18, %39
  %41 = getelementptr inbounds i32, i32* %11, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %34, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = sext i32 %38 to i64
  %47 = mul nsw i64 %45, %46
  %48 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %34, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = sext i32 %42 to i64
  %52 = mul nsw i64 %50, %51
  %53 = add nsw i64 %47, 1073741824
  %54 = sub nsw i64 %53, %52
  %55 = lshr i64 %54, 31
  %56 = trunc i64 %55 to i32
  %57 = load i32*, i32** %27, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %34
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %60, i32 0
  store i32 %56, i32* %61, align 4
  %62 = load i32, i32* %48, align 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %63, %46
  %65 = load i32, i32* %43, align 4
  %66 = sext i32 %65 to i64
  %67 = mul nsw i64 %66, %51
  %68 = add nsw i64 %64, 1073741824
  %69 = add i64 %68, %67
  %70 = lshr i64 %69, 31
  %71 = trunc i64 %70 to i32
  %72 = load i32*, i32** %27, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %34
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %75, i32 1
  store i32 %71, i32* %76, align 4
  %77 = add nuw nsw i64 %34, 1
  %78 = icmp eq i64 %77, %28
  br i1 %78, label %29, label %33

79:                                               ; preds = %80, %25, %29
  ret void

80:                                               ; preds = %31, %80
  %81 = phi i64 [ 0, %31 ], [ %141, %80 ]
  %82 = add nsw i64 %81, %32
  %83 = xor i64 %81, -1
  %84 = add nsw i64 %32, %83
  %85 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %84, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %84, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %82, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %5, i64 %82, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %84, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = sext i32 %86 to i64
  %97 = mul nsw i64 %95, %96
  %98 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %84, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = sext i32 %88 to i64
  %102 = mul nsw i64 %100, %101
  %103 = add nsw i64 %97, 1073741824
  %104 = sub nsw i64 %103, %102
  %105 = lshr i64 %104, 31
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %87, align 4
  %107 = load i32, i32* %98, align 4
  %108 = sext i32 %107 to i64
  %109 = mul nsw i64 %108, %96
  %110 = load i32, i32* %93, align 4
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %111, %101
  %113 = add nsw i64 %109, 1073741824
  %114 = add i64 %113, %112
  %115 = lshr i64 %114, 31
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %89, align 4
  %117 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %82, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = sext i32 %90 to i64
  %121 = mul nsw i64 %119, %120
  %122 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %7, i64 %82, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = sext i32 %92 to i64
  %126 = mul nsw i64 %124, %125
  %127 = add nsw i64 %121, 1073741824
  %128 = sub nsw i64 %127, %126
  %129 = lshr i64 %128, 31
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %91, align 4
  %131 = load i32, i32* %122, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %132, %120
  %134 = load i32, i32* %117, align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %135, %125
  %137 = add nsw i64 %133, 1073741824
  %138 = add i64 %137, %136
  %139 = lshr i64 %138, 31
  %140 = trunc i64 %139 to i32
  store i32 %140, i32* %85, align 4
  %141 = add nuw nsw i64 %81, 1
  %142 = icmp slt i64 %141, %32
  br i1 %142, label %80, label %79
}

; Function Attrs: nounwind ssp uwtable
define internal void @monolithic_mdct(%struct.AVTXContext* nocapture readonly, i8*, i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to i32*
  %6 = bitcast i8* %1 to i32*
  %7 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 6
  %8 = load %struct.AVComplexInt32*, %struct.AVComplexInt32** %7, align 8
  %9 = bitcast i8* %1 to %struct.AVComplexInt32*
  %10 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = mul nsw i32 %11, 3
  %13 = ashr i32 %11, 1
  %14 = or i32 %11, 1
  %15 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 true), !range !3
  %16 = xor i32 %15, 31
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [18 x void (%struct.AVComplexInt32*)*], [18 x void (%struct.AVComplexInt32*)*]* @fft_dispatch, i64 0, i64 %17
  %19 = load void (%struct.AVComplexInt32*)*, void (%struct.AVComplexInt32*)** %18, align 8
  %20 = lshr i64 %3, 2
  %21 = icmp sgt i32 %11, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %4
  tail call void %19(%struct.AVComplexInt32* %9) #8
  br label %119

23:                                               ; preds = %4
  %24 = mul nsw i32 %11, 5
  %25 = getelementptr inbounds %struct.AVTXContext, %struct.AVTXContext* %0, i64 0, i32 9
  %26 = sext i32 %11 to i64
  %27 = sext i32 %12 to i64
  %28 = zext i32 %11 to i64
  br label %33

29:                                               ; preds = %77
  tail call void %19(%struct.AVComplexInt32* %9) #8
  %30 = icmp sgt i32 %11, 1
  br i1 %30, label %31, label %119

31:                                               ; preds = %29
  %32 = sext i32 %13 to i64
  br label %120

33:                                               ; preds = %77, %23
  %34 = phi i64 [ 0, %23 ], [ %116, %77 ]
  %35 = phi i32 [ 0, %23 ], [ %117, %77 ]
  %36 = shl nuw nsw i64 %34, 1
  %37 = shl nuw nsw i32 %35, 1
  %38 = icmp slt i64 %36, %26
  %39 = add nsw i64 %36, %26
  %40 = getelementptr inbounds i32, i32* %5, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %37, -1
  br i1 %38, label %43, label %59

43:                                               ; preds = %33
  %44 = add i32 %11, %42
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %5, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 32, %41
  %49 = add i32 %48, %47
  %50 = add nsw i64 %36, %27
  %51 = getelementptr inbounds i32, i32* %5, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %12, %42
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %5, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 32, %52
  %58 = sub i32 %57, %56
  br label %77

59:                                               ; preds = %33
  %60 = add i32 %24, %42
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %5, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 32, %41
  %65 = sub i32 %64, %63
  %66 = trunc i64 %36 to i32
  %67 = sub i32 %66, %11
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %5, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %12, %42
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %5, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %70, 32
  %76 = sub i32 %75, %74
  br label %77

77:                                               ; preds = %43, %59
  %78 = phi i32 [ %49, %43 ], [ %65, %59 ]
  %79 = phi i32 [ %58, %43 ], [ %76, %59 ]
  %80 = ashr i32 %79, 6
  %81 = ashr i32 %78, 6
  %82 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %34, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = sext i32 %81 to i64
  %86 = mul nsw i64 %84, %85
  %87 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %34, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = sext i32 %80 to i64
  %91 = mul nsw i64 %89, %90
  %92 = add nsw i64 %86, 1073741824
  %93 = sub nsw i64 %92, %91
  %94 = lshr i64 %93, 31
  %95 = trunc i64 %94 to i32
  %96 = load i32*, i32** %25, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 %34
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %99, i32 1
  store i32 %95, i32* %100, align 4
  %101 = load i32, i32* %87, align 4
  %102 = sext i32 %101 to i64
  %103 = mul nsw i64 %102, %85
  %104 = load i32, i32* %82, align 4
  %105 = sext i32 %104 to i64
  %106 = mul nsw i64 %105, %90
  %107 = add nsw i64 %103, 1073741824
  %108 = add nsw i64 %107, %106
  %109 = lshr i64 %108, 31
  %110 = trunc i64 %109 to i32
  %111 = load i32*, i32** %25, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 %34
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %114, i32 0
  store i32 %110, i32* %115, align 4
  %116 = add nuw nsw i64 %34, 1
  %117 = add nuw nsw i32 %35, 1
  %118 = icmp eq i64 %116, %28
  br i1 %118, label %29, label %33

119:                                              ; preds = %120, %22, %29
  ret void

120:                                              ; preds = %31, %120
  %121 = phi i64 [ 0, %31 ], [ %197, %120 ]
  %122 = phi i32 [ 0, %31 ], [ %198, %120 ]
  %123 = add nsw i64 %121, %32
  %124 = add nsw i32 %122, %13
  %125 = xor i64 %121, -1
  %126 = xor i32 %122, -1
  %127 = add nsw i64 %32, %125
  %128 = add nsw i32 %13, %126
  %129 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %127, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %127, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %123, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %9, i64 %123, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %123, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = sext i32 %134 to i64
  %141 = mul nsw i64 %139, %140
  %142 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %123, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = sext i32 %136 to i64
  %146 = mul nsw i64 %144, %145
  %147 = add nsw i64 %141, 1073741824
  %148 = sub nsw i64 %147, %146
  %149 = lshr i64 %148, 31
  %150 = trunc i64 %149 to i32
  %151 = shl nsw i32 %128, 1
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %20, %152
  %154 = add nsw i64 %153, %20
  %155 = getelementptr inbounds i32, i32* %6, i64 %154
  store i32 %150, i32* %155, align 4
  %156 = load i32, i32* %142, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %157, %140
  %159 = load i32, i32* %137, align 4
  %160 = sext i32 %159 to i64
  %161 = mul nsw i64 %160, %145
  %162 = add nsw i64 %158, 1073741824
  %163 = add i64 %162, %161
  %164 = lshr i64 %163, 31
  %165 = trunc i64 %164 to i32
  %166 = shl nsw i32 %124, 1
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %20, %167
  %169 = getelementptr inbounds i32, i32* %6, i64 %168
  store i32 %165, i32* %169, align 4
  %170 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %127, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = sext i32 %130 to i64
  %174 = mul nsw i64 %172, %173
  %175 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %8, i64 %127, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = sext i32 %132 to i64
  %179 = mul nsw i64 %177, %178
  %180 = add nsw i64 %174, 1073741824
  %181 = sub nsw i64 %180, %179
  %182 = lshr i64 %181, 31
  %183 = trunc i64 %182 to i32
  %184 = add nsw i64 %168, %20
  %185 = getelementptr inbounds i32, i32* %6, i64 %184
  store i32 %183, i32* %185, align 4
  %186 = load i32, i32* %175, align 4
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %187, %173
  %189 = load i32, i32* %170, align 4
  %190 = sext i32 %189 to i64
  %191 = mul nsw i64 %190, %178
  %192 = add nsw i64 %188, 1073741824
  %193 = add i64 %192, %191
  %194 = lshr i64 %193, 31
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds i32, i32* %6, i64 %153
  store i32 %195, i32* %196, align 4
  %197 = add nuw nsw i64 %121, 1
  %198 = add nuw nsw i32 %122, 1
  %199 = icmp slt i64 %197, %32
  br i1 %199, label %120, label %119
}

declare i32 @ff_tx_gen_ptwo_revtab(%struct.AVTXContext*, i32) local_unnamed_addr #2

declare i32 @ff_tx_gen_ptwo_inplace_revtab_idx(%struct.AVTXContext*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.cos.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.lrint.i64.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sin.f64(double) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft2(%struct.AVComplexInt32* nocapture) #5 {
  %2 = bitcast %struct.AVComplexInt32* %0 to <4 x i32>*
  %3 = load <4 x i32>, <4 x i32>* %2, align 4
  %4 = shufflevector <4 x i32> %3, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %5 = add nsw <4 x i32> %4, %3
  %6 = sub nsw <4 x i32> %4, %3
  %7 = shufflevector <4 x i32> %5, <4 x i32> %6, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %8 = bitcast %struct.AVComplexInt32* %0 to <4 x i32>*
  store <4 x i32> %7, <4 x i32>* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @fft4(%struct.AVComplexInt32* nocapture) #5 {
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %3, %5
  %7 = add nsw i32 %5, %3
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %9, %11
  %13 = add nsw i32 %11, %9
  %14 = sub nsw i32 %7, %13
  store i32 %14, i32* %10, align 4
  %15 = add nsw i32 %13, %7
  store i32 %15, i32* %2, align 4
  %16 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %17, %19
  %21 = add nsw i32 %19, %17
  %22 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %23, %25
  %27 = add nsw i32 %25, %23
  %28 = sub nsw i32 %20, %12
  store i32 %28, i32* %24, align 4
  %29 = add nsw i32 %20, %12
  store i32 %29, i32* %18, align 4
  %30 = sub nsw i32 %6, %26
  store i32 %30, i32* %8, align 4
  %31 = add nsw i32 %26, %6
  store i32 %31, i32* %4, align 4
  %32 = sub nsw i32 %21, %27
  store i32 %32, i32* %22, align 4
  %33 = add nsw i32 %27, %21
  store i32 %33, i32* %16, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft8(%struct.AVComplexInt32*) #3 {
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %3, %5
  %7 = add nsw i32 %5, %3
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 %9, %11
  %13 = add nsw i32 %11, %9
  %14 = sub nsw i32 %7, %13
  %15 = add nsw i32 %13, %7
  %16 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %17, %19
  %21 = add nsw i32 %19, %17
  %22 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %23, %25
  %27 = add nsw i32 %25, %23
  %28 = sub nsw i32 %20, %12
  %29 = add nsw i32 %20, %12
  %30 = sub nsw i32 %6, %26
  %31 = add nsw i32 %26, %6
  %32 = sub nsw i32 %21, %27
  %33 = add nsw i32 %27, %21
  %34 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 5, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %35
  %39 = sub i32 %35, %37
  %40 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 5, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %41
  %45 = sub i32 %41, %43
  %46 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 7, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %47
  %51 = sub i32 %47, %49
  %52 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 7, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %53
  %57 = sub i32 %53, %55
  %58 = sub nsw i32 %50, %38
  %59 = add nsw i32 %50, %38
  %60 = sub nsw i32 %15, %59
  store i32 %60, i32* %34, align 4
  %61 = add nsw i32 %59, %15
  store i32 %61, i32* %2, align 4
  %62 = sub nsw i32 %32, %58
  store i32 %62, i32* %52, align 4
  %63 = add nsw i32 %58, %32
  store i32 %63, i32* %22, align 4
  %64 = sub nsw i32 %44, %56
  %65 = add nsw i32 %56, %44
  %66 = sub nsw i32 %14, %64
  store i32 %66, i32* %46, align 4
  %67 = add nsw i32 %64, %14
  store i32 %67, i32* %10, align 4
  %68 = sub nsw i32 %33, %65
  store i32 %68, i32* %40, align 4
  %69 = add nsw i32 %65, %33
  store i32 %69, i32* %16, align 4
  %70 = tail call i64 @llvm.lrint.i64.f32(float 0x41D6A09E60000000)
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483648
  %74 = select i1 %73, i64 %72, i64 -2147483648
  %75 = sext i32 %39 to i64
  %76 = sext i32 %45 to i64
  %77 = add nsw i64 %76, %75
  %78 = mul i64 %77, %74
  %79 = add nsw i64 %78, 1073741824
  %80 = lshr i64 %79, 31
  %81 = trunc i64 %80 to i32
  %82 = sub nsw i64 %76, %75
  %83 = mul i64 %82, %74
  %84 = add nsw i64 %83, 1073741824
  %85 = lshr i64 %84, 31
  %86 = trunc i64 %85 to i32
  %87 = sext i32 %51 to i64
  %88 = mul nsw i64 %74, %87
  %89 = sext i32 %57 to i64
  %90 = mul nsw i64 %74, %89
  %91 = add i64 %88, 1073741824
  %92 = sub i64 %91, %90
  %93 = lshr i64 %92, 31
  %94 = trunc i64 %93 to i32
  %95 = add i64 %91, %90
  %96 = lshr i64 %95, 31
  %97 = trunc i64 %96 to i32
  %98 = sub nsw i32 %94, %81
  %99 = add nsw i32 %94, %81
  %100 = sub nsw i32 %31, %99
  store i32 %100, i32* %36, align 4
  %101 = add nsw i32 %99, %31
  store i32 %101, i32* %4, align 4
  %102 = sub nsw i32 %28, %98
  store i32 %102, i32* %54, align 4
  %103 = add nsw i32 %98, %28
  store i32 %103, i32* %24, align 4
  %104 = sub nsw i32 %86, %97
  %105 = add nsw i32 %97, %86
  %106 = sub nsw i32 %30, %104
  store i32 %106, i32* %48, align 4
  %107 = add nsw i32 %104, %30
  store i32 %107, i32* %8, align 4
  %108 = sub nsw i32 %29, %105
  store i32 %108, i32* %42, align 4
  %109 = add nsw i32 %105, %29
  store i32 %109, i32* %18, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft16(%struct.AVComplexInt32*) #3 {
  %2 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ff_cos_16_int32, i64 0, i64 1), align 4
  %3 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ff_cos_16_int32, i64 0, i64 3), align 4
  tail call void @fft8(%struct.AVComplexInt32* %0)
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 8, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 9, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %5, %7
  %9 = add nsw i32 %7, %5
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 11, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 10, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 %11, %13
  %15 = add nsw i32 %13, %11
  %16 = sub nsw i32 %9, %15
  store i32 %16, i32* %12, align 4
  %17 = add nsw i32 %15, %9
  %18 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 8, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 9, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %19, %21
  %23 = add nsw i32 %21, %19
  %24 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 10, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 11, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %25, %27
  %29 = add nsw i32 %27, %25
  %30 = sub nsw i32 %22, %14
  store i32 %30, i32* %26, align 4
  %31 = add nsw i32 %22, %14
  store i32 %31, i32* %20, align 4
  %32 = sub nsw i32 %8, %28
  store i32 %32, i32* %10, align 4
  %33 = add nsw i32 %28, %8
  store i32 %33, i32* %6, align 4
  %34 = sub nsw i32 %23, %29
  store i32 %34, i32* %24, align 4
  %35 = add nsw i32 %29, %23
  %36 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 12, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 13, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sub nsw i32 %37, %39
  %41 = add nsw i32 %39, %37
  %42 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 15, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 14, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %43, %45
  %47 = add nsw i32 %45, %43
  %48 = sub nsw i32 %41, %47
  store i32 %48, i32* %44, align 4
  %49 = add nsw i32 %47, %41
  %50 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 12, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 13, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 %51, %53
  %55 = add nsw i32 %53, %51
  %56 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 14, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 15, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub nsw i32 %57, %59
  %61 = add nsw i32 %59, %57
  %62 = sub nsw i32 %54, %46
  store i32 %62, i32* %58, align 4
  %63 = add nsw i32 %54, %46
  store i32 %63, i32* %52, align 4
  %64 = sub nsw i32 %40, %60
  store i32 %64, i32* %42, align 4
  %65 = add nsw i32 %60, %40
  store i32 %65, i32* %38, align 4
  %66 = sub nsw i32 %55, %61
  %67 = add nsw i32 %61, %55
  %68 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub nsw i32 %49, %17
  %77 = add nsw i32 %49, %17
  %78 = sub nsw i32 %69, %77
  store i32 %78, i32* %4, align 4
  %79 = add nsw i32 %69, %77
  store i32 %79, i32* %68, align 4
  %80 = sub nsw i32 %75, %76
  store i32 %80, i32* %50, align 4
  %81 = add nsw i32 %75, %76
  store i32 %81, i32* %74, align 4
  %82 = sub nsw i32 %35, %67
  %83 = add nsw i32 %35, %67
  %84 = sub nsw i32 %73, %82
  store i32 %84, i32* %36, align 4
  %85 = add nsw i32 %73, %82
  store i32 %85, i32* %72, align 4
  %86 = sub nsw i32 %71, %83
  store i32 %86, i32* %18, align 4
  %87 = add nsw i32 %71, %83
  store i32 %87, i32* %70, align 4
  %88 = tail call i64 @llvm.lrint.i64.f32(float 0x41D6A09E60000000)
  %89 = icmp slt i64 %88, 2147483647
  %90 = select i1 %89, i64 %88, i64 2147483647
  %91 = icmp sgt i64 %90, -2147483648
  %92 = select i1 %91, i64 %90, i64 -2147483648
  %93 = load i32, i32* %12, align 4
  %94 = sext i32 %93 to i64
  %95 = sext i32 %34 to i64
  %96 = add nsw i64 %95, %94
  %97 = mul i64 %96, %92
  %98 = add nsw i64 %97, 1073741824
  %99 = lshr i64 %98, 31
  %100 = trunc i64 %99 to i32
  %101 = sub nsw i64 %95, %94
  %102 = mul i64 %101, %92
  %103 = add nsw i64 %102, 1073741824
  %104 = lshr i64 %103, 31
  %105 = trunc i64 %104 to i32
  %106 = sext i32 %48 to i64
  %107 = mul nsw i64 %92, %106
  %108 = sext i32 %66 to i64
  %109 = mul nsw i64 %92, %108
  %110 = add i64 %107, 1073741824
  %111 = sub i64 %110, %109
  %112 = lshr i64 %111, 31
  %113 = trunc i64 %112 to i32
  %114 = add i64 %110, %109
  %115 = lshr i64 %114, 31
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub nsw i32 %113, %100
  %126 = add nsw i32 %113, %100
  %127 = sub nsw i32 %118, %126
  store i32 %127, i32* %12, align 4
  %128 = add nsw i32 %126, %118
  store i32 %128, i32* %117, align 4
  %129 = sub nsw i32 %124, %125
  store i32 %129, i32* %56, align 4
  %130 = add nsw i32 %125, %124
  store i32 %130, i32* %123, align 4
  %131 = sub nsw i32 %105, %116
  %132 = add nsw i32 %116, %105
  %133 = sub nsw i32 %122, %131
  store i32 %133, i32* %44, align 4
  %134 = add nsw i32 %131, %122
  store i32 %134, i32* %121, align 4
  %135 = sub nsw i32 %120, %132
  store i32 %135, i32* %24, align 4
  %136 = add nsw i32 %132, %120
  store i32 %136, i32* %119, align 4
  %137 = sext i32 %2 to i64
  %138 = load i32, i32* %6, align 4
  %139 = sext i32 %138 to i64
  %140 = mul nsw i64 %139, %137
  %141 = sub nsw i32 0, %3
  %142 = sext i32 %141 to i64
  %143 = load i32, i32* %20, align 4
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %144, %142
  %146 = add nsw i64 %140, 1073741824
  %147 = sub nsw i64 %146, %145
  %148 = lshr i64 %147, 31
  %149 = trunc i64 %148 to i32
  %150 = mul nsw i64 %139, %142
  %151 = mul nsw i64 %144, %137
  %152 = add nsw i64 %150, 1073741824
  %153 = add i64 %152, %151
  %154 = lshr i64 %153, 31
  %155 = trunc i64 %154 to i32
  %156 = load i32, i32* %38, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %157, %137
  %159 = sext i32 %3 to i64
  %160 = load i32, i32* %52, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %161, %159
  %163 = add nsw i64 %158, 1073741824
  %164 = sub nsw i64 %163, %162
  %165 = lshr i64 %164, 31
  %166 = trunc i64 %165 to i32
  %167 = mul nsw i64 %157, %159
  %168 = mul nsw i64 %161, %137
  %169 = add nsw i64 %167, 1073741824
  %170 = add i64 %169, %168
  %171 = lshr i64 %170, 31
  %172 = trunc i64 %171 to i32
  %173 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 5, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 5, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub nsw i32 %166, %149
  %182 = add nsw i32 %166, %149
  %183 = sub nsw i32 %174, %182
  store i32 %183, i32* %6, align 4
  %184 = add nsw i32 %182, %174
  store i32 %184, i32* %173, align 4
  %185 = sub nsw i32 %180, %181
  store i32 %185, i32* %52, align 4
  %186 = add nsw i32 %181, %180
  store i32 %186, i32* %179, align 4
  %187 = sub nsw i32 %155, %172
  %188 = add nsw i32 %172, %155
  %189 = sub nsw i32 %178, %187
  store i32 %189, i32* %38, align 4
  %190 = add nsw i32 %187, %178
  store i32 %190, i32* %177, align 4
  %191 = sub nsw i32 %176, %188
  store i32 %191, i32* %20, align 4
  %192 = add nsw i32 %188, %176
  store i32 %192, i32* %175, align 4
  %193 = load i32, i32* %10, align 4
  %194 = sext i32 %193 to i64
  %195 = mul nsw i64 %194, %159
  %196 = sub nsw i32 0, %2
  %197 = sext i32 %196 to i64
  %198 = load i32, i32* %26, align 4
  %199 = sext i32 %198 to i64
  %200 = mul nsw i64 %199, %197
  %201 = add nsw i64 %195, 1073741824
  %202 = sub nsw i64 %201, %200
  %203 = lshr i64 %202, 31
  %204 = trunc i64 %203 to i32
  %205 = mul nsw i64 %194, %197
  %206 = mul nsw i64 %199, %159
  %207 = add nsw i64 %205, 1073741824
  %208 = add i64 %207, %206
  %209 = lshr i64 %208, 31
  %210 = trunc i64 %209 to i32
  %211 = load i32, i32* %42, align 4
  %212 = sext i32 %211 to i64
  %213 = mul nsw i64 %212, %159
  %214 = load i32, i32* %58, align 4
  %215 = sext i32 %214 to i64
  %216 = mul nsw i64 %215, %137
  %217 = add nsw i64 %213, 1073741824
  %218 = sub nsw i64 %217, %216
  %219 = lshr i64 %218, 31
  %220 = trunc i64 %219 to i32
  %221 = mul nsw i64 %212, %137
  %222 = mul nsw i64 %215, %159
  %223 = add nsw i64 %221, 1073741824
  %224 = add i64 %223, %222
  %225 = lshr i64 %224, 31
  %226 = trunc i64 %225 to i32
  %227 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 7, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 7, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sub nsw i32 %220, %204
  %236 = add nsw i32 %220, %204
  %237 = sub nsw i32 %228, %236
  store i32 %237, i32* %10, align 4
  %238 = add nsw i32 %236, %228
  store i32 %238, i32* %227, align 4
  %239 = sub nsw i32 %234, %235
  store i32 %239, i32* %58, align 4
  %240 = add nsw i32 %235, %234
  store i32 %240, i32* %233, align 4
  %241 = sub nsw i32 %210, %226
  %242 = add nsw i32 %226, %210
  %243 = sub nsw i32 %232, %241
  store i32 %243, i32* %42, align 4
  %244 = add nsw i32 %241, %232
  store i32 %244, i32* %231, align 4
  %245 = sub nsw i32 %230, %242
  store i32 %245, i32* %26, align 4
  %246 = add nsw i32 %242, %230
  store i32 %246, i32* %229, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft32(%struct.AVComplexInt32*) #3 {
  tail call void @fft16(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 16
  tail call void @fft8(%struct.AVComplexInt32* %2)
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 24
  tail call void @fft8(%struct.AVComplexInt32* %3)
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft64(%struct.AVComplexInt32*) #3 {
  tail call void @fft16(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 16
  tail call void @fft8(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 24
  tail call void @fft8(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 32
  tail call void @fft16(%struct.AVComplexInt32* %4)
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 48
  tail call void @fft16(%struct.AVComplexInt32* %5)
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 0), i32 8)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft128(%struct.AVComplexInt32*) #3 {
  tail call void @fft16(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 16
  tail call void @fft8(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 24
  tail call void @fft8(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 32
  tail call void @fft16(%struct.AVComplexInt32* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 48
  tail call void @fft16(%struct.AVComplexInt32* %5) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 0), i32 8) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 64
  tail call void @fft16(%struct.AVComplexInt32* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 80
  tail call void @fft8(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 88
  tail call void @fft8(%struct.AVComplexInt32* %8) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %6, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 96
  tail call void @fft16(%struct.AVComplexInt32* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 112
  tail call void @fft8(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 120
  tail call void @fft8(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %9, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([64 x i32], [64 x i32]* @ff_cos_128_int32, i64 0, i64 0), i32 16)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft256(%struct.AVComplexInt32*) #3 {
  tail call void @fft128(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 128
  tail call void @fft16(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 144
  tail call void @fft8(%struct.AVComplexInt32* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 152
  tail call void @fft8(%struct.AVComplexInt32* %4) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 160
  tail call void @fft16(%struct.AVComplexInt32* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 176
  tail call void @fft16(%struct.AVComplexInt32* %6) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 0), i32 8) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 192
  tail call void @fft16(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 208
  tail call void @fft8(%struct.AVComplexInt32* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 216
  tail call void @fft8(%struct.AVComplexInt32* %9) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 0), i32 4) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 224
  tail call void @fft16(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 240
  tail call void @fft16(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 0), i32 8) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([128 x i32], [128 x i32]* @ff_cos_256_int32, i64 0, i64 0), i32 32)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft512(%struct.AVComplexInt32*) #3 {
  tail call void @fft256(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 256
  tail call void @fft128(%struct.AVComplexInt32* %2)
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 384
  tail call void @fft128(%struct.AVComplexInt32* %3)
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft1024(%struct.AVComplexInt32*) #3 {
  tail call void @fft256(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 256
  tail call void @fft128(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 384
  tail call void @fft128(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 512
  tail call void @fft256(%struct.AVComplexInt32* %4)
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 768
  tail call void @fft256(%struct.AVComplexInt32* %5)
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 0), i32 128)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft2048(%struct.AVComplexInt32*) #3 {
  tail call void @fft256(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 256
  tail call void @fft128(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 384
  tail call void @fft128(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 512
  tail call void @fft256(%struct.AVComplexInt32* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 768
  tail call void @fft256(%struct.AVComplexInt32* %5) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 0), i32 128) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1024
  tail call void @fft256(%struct.AVComplexInt32* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1280
  tail call void @fft128(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1408
  tail call void @fft128(%struct.AVComplexInt32* %8) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %6, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1536
  tail call void @fft256(%struct.AVComplexInt32* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1792
  tail call void @fft128(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1920
  tail call void @fft128(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %9, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([1024 x i32], [1024 x i32]* @ff_cos_2048_int32, i64 0, i64 0), i32 256)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft4096(%struct.AVComplexInt32*) #3 {
  tail call void @fft2048(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2048
  tail call void @fft256(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2304
  tail call void @fft128(%struct.AVComplexInt32* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2432
  tail call void @fft128(%struct.AVComplexInt32* %4) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2560
  tail call void @fft256(%struct.AVComplexInt32* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 2816
  tail call void @fft256(%struct.AVComplexInt32* %6) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 0), i32 128) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3072
  tail call void @fft256(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3328
  tail call void @fft128(%struct.AVComplexInt32* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3456
  tail call void @fft128(%struct.AVComplexInt32* %9) #8
  tail call fastcc void @pass(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 0), i32 64) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3584
  tail call void @fft256(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 3840
  tail call void @fft256(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 0), i32 128) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([2048 x i32], [2048 x i32]* @ff_cos_4096_int32, i64 0, i64 0), i32 512)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft8192(%struct.AVComplexInt32*) #3 {
  tail call void @fft4096(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexInt32* %2)
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexInt32* %3)
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft16384(%struct.AVComplexInt32*) #3 {
  tail call void @fft4096(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 8192
  tail call void @fft4096(%struct.AVComplexInt32* %4)
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 12288
  tail call void @fft4096(%struct.AVComplexInt32* %5)
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 0), i32 2048)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft32768(%struct.AVComplexInt32*) #3 {
  tail call void @fft4096(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 4096
  tail call void @fft2048(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 6144
  tail call void @fft2048(%struct.AVComplexInt32* %3) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 8192
  tail call void @fft4096(%struct.AVComplexInt32* %4) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 12288
  tail call void @fft4096(%struct.AVComplexInt32* %5) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 0), i32 2048) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 16384
  tail call void @fft4096(%struct.AVComplexInt32* %6) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 20480
  tail call void @fft2048(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 22528
  tail call void @fft2048(%struct.AVComplexInt32* %8) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %6, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 24576
  tail call void @fft4096(%struct.AVComplexInt32* %9) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 28672
  tail call void @fft2048(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 30720
  tail call void @fft2048(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %9, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([16384 x i32], [16384 x i32]* @ff_cos_32768_int32, i64 0, i64 0), i32 4096)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft65536(%struct.AVComplexInt32*) #3 {
  tail call void @fft32768(%struct.AVComplexInt32* %0)
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 32768
  tail call void @fft16384(%struct.AVComplexInt32* %2)
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 49152
  tail call void @fft16384(%struct.AVComplexInt32* %3)
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([32768 x i32], [32768 x i32]* @ff_cos_65536_int32, i64 0, i64 0), i32 8192)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @fft131072(%struct.AVComplexInt32*) #3 {
  tail call void @fft32768(%struct.AVComplexInt32* %0) #8
  %2 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 32768
  tail call void @fft4096(%struct.AVComplexInt32* %2) #8
  %3 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 36864
  tail call void @fft2048(%struct.AVComplexInt32* %3) #8
  %4 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 38912
  tail call void @fft2048(%struct.AVComplexInt32* %4) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  %5 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 40960
  tail call void @fft4096(%struct.AVComplexInt32* %5) #8
  %6 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 45056
  tail call void @fft4096(%struct.AVComplexInt32* %6) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %2, i32* getelementptr inbounds ([8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 0), i32 2048) #8
  %7 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 49152
  tail call void @fft4096(%struct.AVComplexInt32* %7) #8
  %8 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 53248
  tail call void @fft2048(%struct.AVComplexInt32* %8) #8
  %9 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 55296
  tail call void @fft2048(%struct.AVComplexInt32* %9) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 0), i32 1024) #8
  %10 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 57344
  tail call void @fft4096(%struct.AVComplexInt32* %10) #8
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 61440
  tail call void @fft4096(%struct.AVComplexInt32* %11) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %7, i32* getelementptr inbounds ([8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 0), i32 2048) #8
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([32768 x i32], [32768 x i32]* @ff_cos_65536_int32, i64 0, i64 0), i32 8192) #8
  %12 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 65536
  tail call void @fft32768(%struct.AVComplexInt32* %12)
  %13 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 98304
  tail call void @fft32768(%struct.AVComplexInt32* %13)
  tail call fastcc void @pass_big(%struct.AVComplexInt32* %0, i32* getelementptr inbounds ([65536 x i32], [65536 x i32]* @ff_cos_131072_int32, i64 0, i64 0), i32 16384)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @pass(%struct.AVComplexInt32* nocapture, i32* nocapture readonly, i32) unnamed_addr #5 {
  %4 = shl i32 %2, 1
  %5 = shl i32 %2, 2
  %6 = mul i32 %2, 6
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds i32, i32* %1, i64 %7
  %9 = add i32 %2, -1
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %10, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %10, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %6 to i64
  %16 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %15, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %15, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %17, %12
  %21 = add nsw i32 %17, %12
  %22 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %23, %21
  store i32 %24, i32* %11, align 4
  %25 = load i32, i32* %22, align 4
  %26 = add nsw i32 %25, %21
  store i32 %26, i32* %22, align 4
  %27 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %7, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sub nsw i32 %28, %20
  store i32 %29, i32* %18, align 4
  %30 = load i32, i32* %27, align 4
  %31 = add nsw i32 %30, %20
  store i32 %31, i32* %27, align 4
  %32 = sub nsw i32 %14, %19
  %33 = add nsw i32 %19, %14
  %34 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %7, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %35, %32
  store i32 %36, i32* %16, align 4
  %37 = load i32, i32* %34, align 4
  %38 = add nsw i32 %37, %32
  store i32 %38, i32* %34, align 4
  %39 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub nsw i32 %40, %33
  store i32 %41, i32* %13, align 4
  %42 = load i32, i32* %39, align 4
  %43 = add nsw i32 %42, %33
  store i32 %43, i32* %39, align 4
  %44 = getelementptr inbounds i32, i32* %1, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = or i32 %5, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %48, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %51, %46
  %53 = getelementptr inbounds i32, i32* %8, i64 -1
  %54 = load i32, i32* %53, align 4
  %55 = sub nsw i32 0, %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %48, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %56
  %61 = add nsw i64 %52, 1073741824
  %62 = sub nsw i64 %61, %60
  %63 = lshr i64 %62, 31
  %64 = trunc i64 %63 to i32
  %65 = mul nsw i64 %56, %51
  %66 = mul nsw i64 %59, %46
  %67 = add nsw i64 %65, 1073741824
  %68 = add i64 %67, %66
  %69 = lshr i64 %68, 31
  %70 = trunc i64 %69 to i32
  %71 = or i32 %6, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %72, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = mul nsw i64 %75, %46
  %77 = sext i32 %54 to i64
  %78 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %72, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = mul nsw i64 %80, %77
  %82 = add nsw i64 %76, 1073741824
  %83 = sub nsw i64 %82, %81
  %84 = lshr i64 %83, 31
  %85 = trunc i64 %84 to i32
  %86 = mul nsw i64 %75, %77
  %87 = mul nsw i64 %80, %46
  %88 = add nsw i64 %86, 1073741824
  %89 = add i64 %88, %87
  %90 = lshr i64 %89, 31
  %91 = trunc i64 %90 to i32
  %92 = sub nsw i32 %85, %64
  %93 = add nsw i32 %85, %64
  %94 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = sub nsw i32 %95, %93
  store i32 %96, i32* %49, align 4
  %97 = load i32, i32* %94, align 4
  %98 = add nsw i32 %93, %97
  store i32 %98, i32* %94, align 4
  %99 = or i32 %4, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %100, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = sub nsw i32 %102, %92
  store i32 %103, i32* %78, align 4
  %104 = load i32, i32* %101, align 4
  %105 = add nsw i32 %104, %92
  store i32 %105, i32* %101, align 4
  %106 = sub nsw i32 %70, %91
  %107 = add nsw i32 %91, %70
  %108 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %100, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = sub nsw i32 %109, %106
  store i32 %110, i32* %73, align 4
  %111 = load i32, i32* %108, align 4
  %112 = add nsw i32 %111, %106
  store i32 %112, i32* %108, align 4
  %113 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub nsw i32 %114, %107
  store i32 %115, i32* %57, align 4
  %116 = load i32, i32* %113, align 4
  %117 = add nsw i32 %116, %107
  store i32 %117, i32* %113, align 4
  br label %118

118:                                              ; preds = %118, %3
  %119 = phi i32* [ %8, %3 ], [ %125, %118 ]
  %120 = phi i32 [ %9, %3 ], [ %266, %118 ]
  %121 = phi i32* [ %1, %3 ], [ %124, %118 ]
  %122 = phi %struct.AVComplexInt32* [ %0, %3 ], [ %123, %118 ]
  %123 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 2
  %124 = getelementptr inbounds i32, i32* %121, i64 2
  %125 = getelementptr inbounds i32, i32* %119, i64 -2
  %126 = load i32, i32* %124, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %10
  %129 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %128, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = mul nsw i64 %131, %127
  %133 = load i32, i32* %125, align 4
  %134 = sub nsw i32 0, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %128, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = mul nsw i64 %138, %135
  %140 = add nsw i64 %132, 1073741824
  %141 = sub nsw i64 %140, %139
  %142 = lshr i64 %141, 31
  %143 = trunc i64 %142 to i32
  %144 = mul nsw i64 %135, %131
  %145 = mul nsw i64 %138, %127
  %146 = add nsw i64 %144, 1073741824
  %147 = add i64 %146, %145
  %148 = lshr i64 %147, 31
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %15
  %151 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %150, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = mul nsw i64 %153, %127
  %155 = sext i32 %133 to i64
  %156 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %150, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = sext i32 %157 to i64
  %159 = mul nsw i64 %158, %155
  %160 = add nsw i64 %154, 1073741824
  %161 = sub nsw i64 %160, %159
  %162 = lshr i64 %161, 31
  %163 = trunc i64 %162 to i32
  %164 = mul nsw i64 %153, %155
  %165 = mul nsw i64 %158, %127
  %166 = add nsw i64 %164, 1073741824
  %167 = add i64 %166, %165
  %168 = lshr i64 %167, 31
  %169 = trunc i64 %168 to i32
  %170 = sub nsw i32 %163, %143
  %171 = add nsw i32 %163, %143
  %172 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = sub nsw i32 %173, %171
  store i32 %174, i32* %129, align 4
  %175 = load i32, i32* %172, align 4
  %176 = add nsw i32 %171, %175
  store i32 %176, i32* %172, align 4
  %177 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %7
  %178 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %177, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = sub nsw i32 %179, %170
  store i32 %180, i32* %156, align 4
  %181 = load i32, i32* %178, align 4
  %182 = add nsw i32 %181, %170
  store i32 %182, i32* %178, align 4
  %183 = sub nsw i32 %149, %169
  %184 = add nsw i32 %169, %149
  %185 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %177, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = sub nsw i32 %186, %183
  store i32 %187, i32* %151, align 4
  %188 = load i32, i32* %185, align 4
  %189 = add nsw i32 %188, %183
  store i32 %189, i32* %185, align 4
  %190 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 2, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub nsw i32 %191, %184
  store i32 %192, i32* %136, align 4
  %193 = load i32, i32* %190, align 4
  %194 = add nsw i32 %193, %184
  store i32 %194, i32* %190, align 4
  %195 = getelementptr inbounds i32, i32* %121, i64 3
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %48
  %199 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %198, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = sext i32 %200 to i64
  %202 = mul nsw i64 %201, %197
  %203 = getelementptr inbounds i32, i32* %119, i64 -3
  %204 = load i32, i32* %203, align 4
  %205 = sub nsw i32 0, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %198, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = mul nsw i64 %209, %206
  %211 = add nsw i64 %202, 1073741824
  %212 = sub nsw i64 %211, %210
  %213 = lshr i64 %212, 31
  %214 = trunc i64 %213 to i32
  %215 = mul nsw i64 %206, %201
  %216 = mul nsw i64 %209, %197
  %217 = add nsw i64 %215, 1073741824
  %218 = add i64 %217, %216
  %219 = lshr i64 %218, 31
  %220 = trunc i64 %219 to i32
  %221 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %72
  %222 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = sext i32 %223 to i64
  %225 = mul nsw i64 %224, %197
  %226 = sext i32 %204 to i64
  %227 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %221, i64 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = mul nsw i64 %229, %226
  %231 = add nsw i64 %225, 1073741824
  %232 = sub nsw i64 %231, %230
  %233 = lshr i64 %232, 31
  %234 = trunc i64 %233 to i32
  %235 = mul nsw i64 %224, %226
  %236 = mul nsw i64 %229, %197
  %237 = add nsw i64 %235, 1073741824
  %238 = add i64 %237, %236
  %239 = lshr i64 %238, 31
  %240 = trunc i64 %239 to i32
  %241 = sub nsw i32 %234, %214
  %242 = add nsw i32 %234, %214
  %243 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 3, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = sub nsw i32 %244, %242
  store i32 %245, i32* %199, align 4
  %246 = load i32, i32* %243, align 4
  %247 = add nsw i32 %242, %246
  store i32 %247, i32* %243, align 4
  %248 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %123, i64 %100
  %249 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %248, i64 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = sub nsw i32 %250, %241
  store i32 %251, i32* %227, align 4
  %252 = load i32, i32* %249, align 4
  %253 = add nsw i32 %252, %241
  store i32 %253, i32* %249, align 4
  %254 = sub nsw i32 %220, %240
  %255 = add nsw i32 %240, %220
  %256 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = sub nsw i32 %257, %254
  store i32 %258, i32* %222, align 4
  %259 = load i32, i32* %256, align 4
  %260 = add nsw i32 %259, %254
  store i32 %260, i32* %256, align 4
  %261 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %122, i64 3, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = sub nsw i32 %262, %255
  store i32 %263, i32* %207, align 4
  %264 = load i32, i32* %261, align 4
  %265 = add nsw i32 %264, %255
  store i32 %265, i32* %261, align 4
  %266 = add i32 %120, -1
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %118

268:                                              ; preds = %118
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @pass_big(%struct.AVComplexInt32* nocapture, i32* nocapture readonly, i32) unnamed_addr #5 {
  %4 = shl i32 %2, 1
  %5 = shl i32 %2, 2
  %6 = mul i32 %2, 6
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds i32, i32* %1, i64 %7
  %9 = add i32 %2, -1
  %10 = sext i32 %5 to i64
  %11 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %10, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %10, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %6 to i64
  %16 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %15, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %15, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %7, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %7, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %17, %12
  %29 = add nsw i32 %17, %12
  %30 = sub nsw i32 %21, %29
  store i32 %30, i32* %11, align 4
  %31 = add nsw i32 %21, %29
  store i32 %31, i32* %20, align 4
  %32 = sub nsw i32 %27, %28
  store i32 %32, i32* %18, align 4
  %33 = add nsw i32 %27, %28
  store i32 %33, i32* %26, align 4
  %34 = sub nsw i32 %14, %19
  %35 = add nsw i32 %19, %14
  %36 = sub nsw i32 %25, %34
  store i32 %36, i32* %16, align 4
  %37 = add nsw i32 %25, %34
  store i32 %37, i32* %24, align 4
  %38 = sub nsw i32 %23, %35
  store i32 %38, i32* %13, align 4
  %39 = add nsw i32 %23, %35
  store i32 %39, i32* %22, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = or i32 %5, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %44, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = mul nsw i64 %47, %42
  %49 = getelementptr inbounds i32, i32* %8, i64 -1
  %50 = load i32, i32* %49, align 4
  %51 = sub nsw i32 0, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %44, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %55, %52
  %57 = add nsw i64 %48, 1073741824
  %58 = sub nsw i64 %57, %56
  %59 = lshr i64 %58, 31
  %60 = trunc i64 %59 to i32
  %61 = mul nsw i64 %52, %47
  %62 = mul nsw i64 %55, %42
  %63 = add nsw i64 %61, 1073741824
  %64 = add i64 %63, %62
  %65 = lshr i64 %64, 31
  %66 = trunc i64 %65 to i32
  %67 = or i32 %6, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %71, %42
  %73 = sext i32 %50 to i64
  %74 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %68, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %76, %73
  %78 = add nsw i64 %72, 1073741824
  %79 = sub nsw i64 %78, %77
  %80 = lshr i64 %79, 31
  %81 = trunc i64 %80 to i32
  %82 = mul nsw i64 %71, %73
  %83 = mul nsw i64 %76, %42
  %84 = add nsw i64 %82, 1073741824
  %85 = add i64 %84, %83
  %86 = lshr i64 %85, 31
  %87 = trunc i64 %86 to i32
  %88 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 1, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %4, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %93, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %0, i64 %93, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub nsw i32 %81, %60
  %99 = add nsw i32 %81, %60
  %100 = sub nsw i32 %89, %99
  store i32 %100, i32* %45, align 4
  %101 = add nsw i32 %99, %89
  store i32 %101, i32* %88, align 4
  %102 = sub nsw i32 %97, %98
  store i32 %102, i32* %74, align 4
  %103 = add nsw i32 %98, %97
  store i32 %103, i32* %96, align 4
  %104 = sub nsw i32 %66, %87
  %105 = add nsw i32 %87, %66
  %106 = sub nsw i32 %95, %104
  store i32 %106, i32* %69, align 4
  %107 = add nsw i32 %104, %95
  store i32 %107, i32* %94, align 4
  %108 = sub nsw i32 %91, %105
  store i32 %108, i32* %53, align 4
  %109 = add nsw i32 %105, %91
  store i32 %109, i32* %90, align 4
  br label %110

110:                                              ; preds = %110, %3
  %111 = phi i32* [ %8, %3 ], [ %117, %110 ]
  %112 = phi i32 [ %9, %3 ], [ %250, %110 ]
  %113 = phi i32* [ %1, %3 ], [ %116, %110 ]
  %114 = phi %struct.AVComplexInt32* [ %0, %3 ], [ %115, %110 ]
  %115 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 2
  %116 = getelementptr inbounds i32, i32* %113, i64 2
  %117 = getelementptr inbounds i32, i32* %111, i64 -2
  %118 = load i32, i32* %116, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %10
  %121 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %120, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = mul nsw i64 %123, %119
  %125 = load i32, i32* %117, align 4
  %126 = sub nsw i32 0, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %120, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = mul nsw i64 %130, %127
  %132 = add nsw i64 %124, 1073741824
  %133 = sub nsw i64 %132, %131
  %134 = lshr i64 %133, 31
  %135 = trunc i64 %134 to i32
  %136 = mul nsw i64 %127, %123
  %137 = mul nsw i64 %130, %119
  %138 = add nsw i64 %136, 1073741824
  %139 = add i64 %138, %137
  %140 = lshr i64 %139, 31
  %141 = trunc i64 %140 to i32
  %142 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %15
  %143 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %142, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %145, %119
  %147 = sext i32 %125 to i64
  %148 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %142, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %150, %147
  %152 = add nsw i64 %146, 1073741824
  %153 = sub nsw i64 %152, %151
  %154 = lshr i64 %153, 31
  %155 = trunc i64 %154 to i32
  %156 = mul nsw i64 %145, %147
  %157 = mul nsw i64 %150, %119
  %158 = add nsw i64 %156, 1073741824
  %159 = add i64 %158, %157
  %160 = lshr i64 %159, 31
  %161 = trunc i64 %160 to i32
  %162 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 2, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %7
  %167 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = sub nsw i32 %155, %135
  %172 = add nsw i32 %155, %135
  %173 = sub nsw i32 %163, %172
  store i32 %173, i32* %121, align 4
  %174 = add nsw i32 %172, %163
  store i32 %174, i32* %162, align 4
  %175 = sub nsw i32 %170, %171
  store i32 %175, i32* %148, align 4
  %176 = add nsw i32 %171, %170
  store i32 %176, i32* %169, align 4
  %177 = sub nsw i32 %141, %161
  %178 = add nsw i32 %161, %141
  %179 = sub nsw i32 %168, %177
  store i32 %179, i32* %143, align 4
  %180 = add nsw i32 %177, %168
  store i32 %180, i32* %167, align 4
  %181 = sub nsw i32 %165, %178
  store i32 %181, i32* %128, align 4
  %182 = add nsw i32 %178, %165
  store i32 %182, i32* %164, align 4
  %183 = getelementptr inbounds i32, i32* %113, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %44
  %187 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = sext i32 %188 to i64
  %190 = mul nsw i64 %189, %185
  %191 = getelementptr inbounds i32, i32* %111, i64 -3
  %192 = load i32, i32* %191, align 4
  %193 = sub nsw i32 0, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %186, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %197, %194
  %199 = add nsw i64 %190, 1073741824
  %200 = sub nsw i64 %199, %198
  %201 = lshr i64 %200, 31
  %202 = trunc i64 %201 to i32
  %203 = mul nsw i64 %194, %189
  %204 = mul nsw i64 %197, %185
  %205 = add nsw i64 %203, 1073741824
  %206 = add i64 %205, %204
  %207 = lshr i64 %206, 31
  %208 = trunc i64 %207 to i32
  %209 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %68
  %210 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %209, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = mul nsw i64 %212, %185
  %214 = sext i32 %192 to i64
  %215 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %209, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = mul nsw i64 %217, %214
  %219 = add nsw i64 %213, 1073741824
  %220 = sub nsw i64 %219, %218
  %221 = lshr i64 %220, 31
  %222 = trunc i64 %221 to i32
  %223 = mul nsw i64 %212, %214
  %224 = mul nsw i64 %217, %185
  %225 = add nsw i64 %223, 1073741824
  %226 = add i64 %225, %224
  %227 = lshr i64 %226, 31
  %228 = trunc i64 %227 to i32
  %229 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 3, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %114, i64 3, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %115, i64 %93
  %234 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %233, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %struct.AVComplexInt32, %struct.AVComplexInt32* %233, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub nsw i32 %222, %202
  %239 = add nsw i32 %222, %202
  %240 = sub nsw i32 %230, %239
  store i32 %240, i32* %187, align 4
  %241 = add nsw i32 %239, %230
  store i32 %241, i32* %229, align 4
  %242 = sub nsw i32 %237, %238
  store i32 %242, i32* %215, align 4
  %243 = add nsw i32 %238, %237
  store i32 %243, i32* %236, align 4
  %244 = sub nsw i32 %208, %228
  %245 = add nsw i32 %228, %208
  %246 = sub nsw i32 %235, %244
  store i32 %246, i32* %210, align 4
  %247 = add nsw i32 %244, %235
  store i32 %247, i32* %234, align 4
  %248 = sub nsw i32 %232, %245
  store i32 %248, i32* %195, align 4
  %249 = add nsw i32 %245, %232
  store i32 %249, i32* %231, align 4
  %250 = add i32 %112, -1
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %110

252:                                              ; preds = %110
  ret void
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #2

; Function Attrs: cold nofree nounwind optsize ssp uwtable writeonly
define internal void @ff_init_53_tabs() #6 {
  %1 = tail call i64 @llvm.lrint.i64.f32(float 0x41DBB67AE0000000)
  %2 = icmp slt i64 %1, 2147483647
  %3 = select i1 %2, i64 %1, i64 2147483647
  %4 = icmp sgt i64 %3, -2147483648
  %5 = select i1 %4, i64 %3, i64 -2147483648
  %6 = trunc i64 %5 to i32
  store i32 %6, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 0), align 32
  store i32 %6, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 0, i32 1), align 4
  %7 = tail call i64 @llvm.lrint.i64.f32(float 0x41D0000000000000)
  %8 = icmp slt i64 %7, 2147483647
  %9 = select i1 %8, i64 %7, i64 2147483647
  %10 = icmp sgt i64 %9, -2147483648
  %11 = select i1 %10, i64 %9, i64 -2147483648
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 0), align 8
  store i32 %12, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 1, i32 1), align 4
  %13 = tail call i64 @llvm.lrint.i64.f32(float 0x41C3C6EF40000000)
  %14 = icmp slt i64 %13, 2147483647
  %15 = select i1 %14, i64 %13, i64 2147483647
  %16 = icmp sgt i64 %15, -2147483648
  %17 = select i1 %16, i64 %15, i64 -2147483648
  %18 = trunc i64 %17 to i32
  %19 = tail call i64 @llvm.lrint.i64.f32(float 0x41DE6F0E20000000)
  %20 = icmp slt i64 %19, 2147483647
  %21 = select i1 %20, i64 %19, i64 2147483647
  %22 = icmp sgt i64 %21, -2147483648
  %23 = select i1 %22, i64 %21, i64 -2147483648
  %24 = trunc i64 %23 to i32
  store i32 %18, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 0), align 16
  store i32 %24, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 2, i32 1), align 4
  %25 = tail call i64 @llvm.lrint.i64.f32(float 0x41D9E377A0000000)
  %26 = icmp slt i64 %25, 2147483647
  %27 = select i1 %26, i64 %25, i64 2147483647
  %28 = icmp sgt i64 %27, -2147483648
  %29 = select i1 %28, i64 %27, i64 -2147483648
  %30 = trunc i64 %29 to i32
  %31 = tail call i64 @llvm.lrint.i64.f32(float 0x41D2CF2300000000)
  %32 = icmp slt i64 %31, 2147483647
  %33 = select i1 %32, i64 %31, i64 2147483647
  %34 = icmp sgt i64 %33, -2147483648
  %35 = select i1 %34, i64 %33, i64 -2147483648
  %36 = trunc i64 %35 to i32
  store i32 %30, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 0), align 8
  store i32 %36, i32* getelementptr inbounds ([4 x %struct.AVComplexInt32], [4 x %struct.AVComplexInt32]* @ff_cos_53_int32, i64 0, i64 3, i32 1), align 4
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_16() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FD921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_cos_16_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 5
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_cos_16_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 8, %19
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_cos_16_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_32() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FC921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 9
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 16, %19
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* @ff_cos_32_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 8
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_64() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FB921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 17
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 32, %19
  %23 = getelementptr inbounds [32 x i32], [32 x i32]* @ff_cos_64_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 16
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_128() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3FA921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [64 x i32], [64 x i32]* @ff_cos_128_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 33
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [64 x i32], [64 x i32]* @ff_cos_128_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 64, %19
  %23 = getelementptr inbounds [64 x i32], [64 x i32]* @ff_cos_128_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 32
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_256() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F9921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [128 x i32], [128 x i32]* @ff_cos_256_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 65
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [128 x i32], [128 x i32]* @ff_cos_256_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 128, %19
  %23 = getelementptr inbounds [128 x i32], [128 x i32]* @ff_cos_256_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 64
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_512() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F8921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 129
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 256, %19
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* @ff_cos_512_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 128
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_1024() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F7921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 257
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 512, %19
  %23 = getelementptr inbounds [512 x i32], [512 x i32]* @ff_cos_1024_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 256
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_2048() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F6921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [1024 x i32], [1024 x i32]* @ff_cos_2048_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 513
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [1024 x i32], [1024 x i32]* @ff_cos_2048_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 1024, %19
  %23 = getelementptr inbounds [1024 x i32], [1024 x i32]* @ff_cos_2048_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 512
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_4096() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F5921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [2048 x i32], [2048 x i32]* @ff_cos_4096_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 1025
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [2048 x i32], [2048 x i32]* @ff_cos_4096_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 2048, %19
  %23 = getelementptr inbounds [2048 x i32], [2048 x i32]* @ff_cos_4096_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 1024
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_8192() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F4921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 2049
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 4096, %19
  %23 = getelementptr inbounds [4096 x i32], [4096 x i32]* @ff_cos_8192_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 2048
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_16384() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F3921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 4097
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 8192, %19
  %23 = getelementptr inbounds [8192 x i32], [8192 x i32]* @ff_cos_16384_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 4096
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_32768() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F2921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [16384 x i32], [16384 x i32]* @ff_cos_32768_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 8193
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [16384 x i32], [16384 x i32]* @ff_cos_32768_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 16384, %19
  %23 = getelementptr inbounds [16384 x i32], [16384 x i32]* @ff_cos_32768_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 8192
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_65536() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F1921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [32768 x i32], [32768 x i32]* @ff_cos_65536_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 16385
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [32768 x i32], [32768 x i32]* @ff_cos_65536_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 32768, %19
  %23 = getelementptr inbounds [32768 x i32], [32768 x i32]* @ff_cos_65536_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 16384
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

; Function Attrs: cold nofree nounwind optsize ssp uwtable
define internal void @init_cos_tabs_131072() #7 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i64 [ 0, %0 ], [ %16, %1 ]
  %3 = trunc i64 %2 to i32
  %4 = sitofp i32 %3 to double
  %5 = fmul nsz double %4, 0x3F0921FB54442D18
  %6 = tail call nsz double @llvm.cos.f64(double %5) #8
  %7 = fmul nsz double %6, 0x41E0000000000000
  %8 = fptrunc double %7 to float
  %9 = tail call i64 @llvm.lrint.i64.f32(float %8) #8
  %10 = icmp slt i64 %9, 2147483647
  %11 = select i1 %10, i64 %9, i64 2147483647
  %12 = icmp sgt i64 %11, -2147483648
  %13 = select i1 %12, i64 %11, i64 -2147483648
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds [65536 x i32], [65536 x i32]* @ff_cos_131072_int32, i64 0, i64 %2
  store i32 %14, i32* %15, align 4
  %16 = add nuw nsw i64 %2, 1
  %17 = icmp eq i64 %16, 32769
  br i1 %17, label %18, label %1

18:                                               ; preds = %1, %18
  %19 = phi i64 [ %24, %18 ], [ 1, %1 ]
  %20 = getelementptr inbounds [65536 x i32], [65536 x i32]* @ff_cos_131072_int32, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sub nuw nsw i64 65536, %19
  %23 = getelementptr inbounds [65536 x i32], [65536 x i32]* @ff_cos_131072_int32, i64 0, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %19, 1
  %25 = icmp eq i64 %24, 32768
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  ret void
}

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.sqrt.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold nofree nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i32 0, i32 32}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
