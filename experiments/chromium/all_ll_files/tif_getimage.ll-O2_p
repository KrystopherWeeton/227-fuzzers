; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_getimage.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_getimage.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.TIFFDisplay = type { [3 x [3 x float]], float, float, float, i32, i32, i32, float, float, float, float, float, float }
%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.0, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.0 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }
%struct._TIFFRGBAImage = type { %struct.tiff*, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16*, i16*, i16*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, %union.anon.1, i8*, i32**, i32**, %struct.TIFFYCbCrToRGB*, %struct.TIFFCIELabToRGB*, i8*, i8*, i32, i32 }
%union.anon.1 = type { {}* }
%struct.TIFFYCbCrToRGB = type { i8*, i32*, i32*, i32*, i32*, i32* }
%struct.TIFFCIELabToRGB = type { i32, float, float, float, float, float, float, %struct.TIFFDisplay, [1501 x float], [1501 x float], [1501 x float] }

@.str = private unnamed_addr constant [54 x i8] c"Sorry, requested compression method is not configured\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Sorry, can not handle images with %d-bit samples\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"Sorry, can not handle images with IEEE floating-point samples\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"Missing needed %s tag\00", align 1
@photoTag = internal constant [26 x i8] c"PhotometricInterpretation\00", align 16
@.str.4 = private unnamed_addr constant [79 x i8] c"Sorry, can not handle contiguous data with %s=%d, and %s=%d and Bits/Sample=%d\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"Samples/pixel\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Sorry, can not handle RGB image with %s=%d\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"Color channels\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"Sorry, can not handle separated image with %s=%d\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"InkSet\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Sorry, LogL data must have %s=%d\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"Compression\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Sorry, LogLuv data must have %s=%d or %d\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"Sorry, can not handle LogLuv images with %s=%d\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Planarconfiguration\00", align 1
@.str.15 = private unnamed_addr constant [46 x i8] c"Sorry, can not handle image with %s=%d, %s=%d\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"colorchannels\00", align 1
@.str.17 = private unnamed_addr constant [56 x i8] c"Sorry, can not handle image with %s=%d, %s=%d and %s=%d\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"Bits/sample\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"Sorry, can not handle image with %s=%d\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"Missing required \22Colormap\22 tag\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Out of memory for colormap copy\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"Sorry, can not handle image\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"No \22get\22 routine setup\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"No \22put\22 routine setupl; probably can not handle image format\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.26 = private unnamed_addr constant [47 x i8] c"Can't use TIFFReadRGBAStrip() with tiled file.\00", align 1
@.str.27 = private unnamed_addr constant [60 x i8] c"Row passed to TIFFReadRGBAStrip() must be first in a strip.\00", align 1
@.str.28 = private unnamed_addr constant [48 x i8] c"Can't use TIFFReadRGBATile() with striped file.\00", align 1
@.str.29 = private unnamed_addr constant [71 x i8] c"Row/col passed to TIFFReadRGBATile() must be topleft corner of a tile.\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"No space for tile buffer\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"Invalid skew\00", align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"Invalid vertical YCbCr subsampling\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"Integer overflow in gtStripContig\00", align 1
@BuildMapUaToAa.module = internal constant [15 x i8] c"BuildMapUaToAa\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@BuildMapBitdepth16To8.module = internal constant [22 x i8] c"BuildMapBitdepth16To8\00", align 16
@.str.35 = private unnamed_addr constant [24 x i8] c"Assuming 8-bit colormap\00", align 1
@.str.36 = private unnamed_addr constant [42 x i8] c"No space for photometric conversion table\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"No space for B&W mapping table\00", align 1
@.str.38 = private unnamed_addr constant [35 x i8] c"No space for Palette mapping table\00", align 1
@initYCbCrConversion.module = internal constant [20 x i8] c"initYCbCrConversion\00", align 16
@.str.39 = private unnamed_addr constant [41 x i8] c"No space for YCbCr->RGB conversion state\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"Invalid values for YCbCrCoefficients tag\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"Invalid values for ReferenceBlackWhite tag\00", align 1
@initCIELabConversion.module = internal constant [21 x i8] c"initCIELabConversion\00", align 16
@.str.42 = private unnamed_addr constant [34 x i8] c"Invalid value for WhitePoint tag.\00", align 1
@.str.43 = private unnamed_addr constant [47 x i8] c"No space for CIE L*a*b*->RGB conversion state.\00", align 1
@display_sRGB = internal constant %struct.TIFFDisplay { [3 x [3 x float]] [[3 x float] [float 0x4009ED9160000000, float 0xBFF89930C0000000, float 0xBFDFE91000000000], [3 x float] [float 0xBFEF03AFC0000000, float 0x3FFE0418A0000000, float 0x3FA54C9860000000], [3 x float] [float 0x3FAC779A60000000, float 0xBFCA1CAC00000000, float 0x3FF0E978E0000000]], float 1.000000e+02, float 1.000000e+02, float 1.000000e+02, i32 255, i32 255, i32 255, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x4003333340000000, float 0x4003333340000000, float 0x4003333340000000 }, align 4
@.str.44 = private unnamed_addr constant [55 x i8] c"Failed to initialize CIE L*a*b*->RGB conversion state.\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"gtTileSeparate\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"gtStripSeparate\00", align 1
@.str.47 = private unnamed_addr constant [36 x i8] c"Integer overflow in gtStripSeparate\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFRGBAImageOK(%struct.tiff*, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #6
  store i16 -21846, i16* %3, align 2
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 23
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 54, i1 false)
  br label %116

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 8
  %12 = load i16, i16* %11, align 4
  switch i16 %12, label %13 [
    i16 1, label %16
    i16 2, label %16
    i16 4, label %16
    i16 8, label %16
    i16 16, label %16
  ]

13:                                               ; preds = %10
  %14 = zext i16 %12 to i32
  %15 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 %14) #6
  br label %116

16:                                               ; preds = %10, %10, %10, %10, %10
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 9
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, 3
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0), i64 62, i1 false)
  br label %116

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 15
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 30
  %26 = load i16, i16* %25, align 4
  %27 = zext i16 %26 to i32
  %28 = sub nsw i32 %24, %27
  %29 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %0, i32 262, i16* nonnull %3) #6
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %21
  switch i32 %28, label %34 [
    i32 1, label %32
    i32 3, label %33
  ]

32:                                               ; preds = %31
  store i16 1, i16* %3, align 2
  br label %38

33:                                               ; preds = %31
  store i16 2, i16* %3, align 2
  br label %116

34:                                               ; preds = %31
  %35 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0)) #6
  br label %116

36:                                               ; preds = %21
  %37 = load i16, i16* %3, align 2
  switch i16 %37, label %113 [
    i16 0, label %38
    i16 1, label %38
    i16 3, label %38
    i16 6, label %116
    i16 2, label %54
    i16 5, label %58
    i16 -32692, label %73
    i16 -32691, label %79
    i16 8, label %101
  ]

38:                                               ; preds = %32, %36, %36, %36
  %39 = phi i16 [ 1, %32 ], [ %37, %36 ], [ %37, %36 ], [ %37, %36 ]
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 1
  br i1 %42, label %43, label %116

43:                                               ; preds = %38
  %44 = load i16, i16* %22, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp eq i16 %44, 1
  br i1 %46, label %116, label %47

47:                                               ; preds = %43
  %48 = load i16, i16* %11, align 4
  %49 = icmp ult i16 %48, 8
  br i1 %49, label %50, label %116

50:                                               ; preds = %47
  %51 = zext i16 %48 to i32
  %52 = zext i16 %39 to i32
  %53 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0), i32 %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %45, i32 %51) #6
  br label %116

54:                                               ; preds = %36
  %55 = icmp slt i32 %28, 3
  br i1 %55, label %56, label %116

56:                                               ; preds = %54
  %57 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i32 %28) #6
  br label %116

58:                                               ; preds = %36
  %59 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %59) #6
  store i16 -21846, i16* %4, align 2
  %60 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %0, i32 332, i16* nonnull %4) #6
  %61 = load i16, i16* %4, align 2
  %62 = icmp eq i16 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = zext i16 %61 to i32
  %65 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i32 %64) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %59) #6
  br label %116

66:                                               ; preds = %58
  %67 = load i16, i16* %22, align 2
  %68 = icmp ult i16 %67, 4
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = zext i16 %67 to i32
  %71 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %70) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %59) #6
  br label %116

72:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %59) #6
  br label %116

73:                                               ; preds = %36
  %74 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %75 = load i16, i16* %74, align 8
  %76 = icmp eq i16 %75, -30860
  br i1 %76, label %116, label %77

77:                                               ; preds = %73
  %78 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 34676) #6
  br label %116

79:                                               ; preds = %36
  %80 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %81 = load i16, i16* %80, align 8
  %82 = and i16 %81, -2
  %83 = icmp eq i16 %82, -30860
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  %85 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 34676, i32 34677) #6
  br label %116

86:                                               ; preds = %79
  %87 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 24
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 1
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = zext i16 %88 to i32
  %92 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 %91) #6
  br label %116

93:                                               ; preds = %86
  %94 = load i16, i16* %22, align 2
  %95 = icmp ne i16 %94, 3
  %96 = icmp ne i32 %28, 3
  %97 = or i1 %96, %95
  br i1 %97, label %98, label %116

98:                                               ; preds = %93
  %99 = zext i16 %94 to i32
  %100 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %99, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i32 %28) #6
  br label %116

101:                                              ; preds = %36
  %102 = load i16, i16* %22, align 2
  %103 = icmp eq i16 %102, 3
  %104 = icmp eq i32 %28, 3
  %105 = load i16, i16* %11, align 4
  %106 = and i1 %103, %104
  %107 = icmp eq i16 %105, 8
  %108 = and i1 %106, %107
  br i1 %108, label %116, label %109

109:                                              ; preds = %101
  %110 = zext i16 %102 to i32
  %111 = zext i16 %105 to i32
  %112 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %110, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i32 %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i32 %111) #6
  br label %116

113:                                              ; preds = %36
  %114 = zext i16 %37 to i32
  %115 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0), i32 %114) #6
  br label %116

116:                                              ; preds = %101, %33, %36, %47, %38, %54, %93, %73, %43, %72, %69, %63, %113, %109, %98, %90, %84, %77, %56, %50, %34, %20, %13, %9
  %117 = phi i32 [ 0, %13 ], [ 0, %20 ], [ 0, %113 ], [ 0, %109 ], [ 0, %84 ], [ 0, %90 ], [ 0, %98 ], [ 0, %77 ], [ 0, %56 ], [ 0, %50 ], [ 0, %34 ], [ 0, %9 ], [ 0, %63 ], [ 0, %69 ], [ 1, %72 ], [ 1, %43 ], [ 1, %73 ], [ 1, %93 ], [ 1, %54 ], [ 1, %38 ], [ 1, %47 ], [ 1, %36 ], [ 1, %33 ], [ 1, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #6
  ret i32 %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

declare i32 @TIFFGetField(%struct.tiff*, i32, ...) local_unnamed_addr #3

declare i32 @TIFFGetFieldDefaulted(%struct.tiff*, i32, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @TIFFRGBAImageEnd(%struct._TIFFRGBAImage* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 16
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_TIFFfree(i8* nonnull %3) #6
  store i8* null, i8** %2, align 8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %8 = load i32**, i32*** %7, align 8
  %9 = icmp eq i32** %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = bitcast i32** %8 to i8*
  tail call void @_TIFFfree(i8* nonnull %11) #6
  store i32** null, i32*** %7, align 8
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp eq i32** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast i32** %14 to i8*
  tail call void @_TIFFfree(i8* nonnull %17) #6
  store i32** null, i32*** %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %20 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %19, align 8
  %21 = icmp eq %struct.TIFFYCbCrToRGB* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %struct.TIFFYCbCrToRGB* %20 to i8*
  tail call void @_TIFFfree(i8* nonnull %23) #6
  store %struct.TIFFYCbCrToRGB* null, %struct.TIFFYCbCrToRGB** %19, align 8
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 20
  %26 = load %struct.TIFFCIELabToRGB*, %struct.TIFFCIELabToRGB** %25, align 8
  %27 = icmp eq %struct.TIFFCIELabToRGB* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %struct.TIFFCIELabToRGB* %26 to i8*
  tail call void @_TIFFfree(i8* nonnull %29) #6
  store %struct.TIFFCIELabToRGB* null, %struct.TIFFCIELabToRGB** %25, align 8
  br label %30

30:                                               ; preds = %24, %28
  %31 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_TIFFfree(i8* nonnull %32) #6
  store i8* null, i8** %31, align 8
  br label %35

35:                                               ; preds = %30, %34
  %36 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @_TIFFfree(i8* nonnull %37) #6
  store i8* null, i8** %36, align 8
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 11
  %42 = load i16*, i16** %41, align 8
  %43 = icmp eq i16* %42, null
  br i1 %43, label %53, label %44

44:                                               ; preds = %40
  %45 = bitcast i16* %42 to i8*
  tail call void @_TIFFfree(i8* nonnull %45) #6
  %46 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 12
  %47 = bitcast i16** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_TIFFfree(i8* %48) #6
  %49 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 13
  %50 = bitcast i16** %49 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_TIFFfree(i8* %51) #6
  %52 = bitcast i16** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false)
  br label %53

53:                                               ; preds = %40, %44
  ret void
}

declare void @_TIFFfree(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFRGBAImageBegin(%struct._TIFFRGBAImage*, %struct.tiff*, i32, i8* nocapture) local_unnamed_addr #0 {
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca float*, align 8
  %8 = alloca [3 x float], align 4
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16*, align 8
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16*, align 8
  %17 = alloca i16*, align 8
  %18 = alloca i16*, align 8
  %19 = alloca i16, align 2
  %20 = bitcast i16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %12, align 8
  %21 = bitcast i16* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %21) #6
  store i16 -21846, i16* %13, align 2
  %22 = bitcast i16* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %22) #6
  store i16 -21846, i16* %14, align 2
  %23 = bitcast i16* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23) #6
  store i16 -21846, i16* %15, align 2
  %24 = bitcast i16** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %16, align 8
  %25 = bitcast i16** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %17, align 8
  %26 = bitcast i16** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %18, align 8
  %27 = tail call i32 @TIFFRGBAImageOK(%struct.tiff* %1, i8* %3)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %700, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 11
  %31 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 12
  %32 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 13
  %33 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 16
  %34 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 20
  %35 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %36 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %37 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %38 = bitcast i16** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false)
  %39 = bitcast i8** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 64, i1 false)
  store i16 4, i16* %37, align 2
  %40 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  store %struct.tiff* %1, %struct.tiff** %40, align 8
  %41 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 1
  store i32 %2, i32* %41, align 8
  %42 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 6
  %43 = tail call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 258, i16* %42) #6
  %44 = load i16, i16* %42, align 4
  switch i16 %44, label %45 [
    i16 1, label %48
    i16 2, label %48
    i16 4, label %48
    i16 8, label %48
    i16 16, label %48
  ]

45:                                               ; preds = %29
  %46 = zext i16 %44 to i32
  %47 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 %46) #6
  br label %699

48:                                               ; preds = %29, %29, %29, %29, %29
  %49 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 3
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %51 = tail call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 277, i16* %50) #6
  %52 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 338, i16* nonnull %13, i16** nonnull %12) #6
  %53 = load i16, i16* %13, align 2
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = load i16*, i16** %12, align 8
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %64 [
    i16 0, label %58
    i16 1, label %62
    i16 2, label %62
  ]

58:                                               ; preds = %55
  %59 = load i16, i16* %50, align 2
  %60 = icmp ugt i16 %59, 3
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  store i32 1, i32* %49, align 8
  br label %64

62:                                               ; preds = %55, %55
  %63 = zext i16 %57 to i32
  store i32 %63, i32* %49, align 8
  br label %64

64:                                               ; preds = %48, %62, %55, %61, %58
  %65 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 10
  %66 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 262, i16* %65) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  store i16 0, i16* %65, align 4
  br label %69

69:                                               ; preds = %64, %68
  %70 = load i16, i16* %13, align 2
  %71 = icmp eq i16 %70, 0
  %72 = load i16, i16* %50, align 2
  br i1 %71, label %73, label %79

73:                                               ; preds = %69
  %74 = icmp eq i16 %72, 4
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = load i16, i16* %65, align 4
  %77 = icmp eq i16 %76, 2
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  store i32 1, i32* %49, align 8
  store i16 1, i16* %13, align 2
  br label %79

79:                                               ; preds = %69, %78, %75, %73
  %80 = phi i16 [ 1, %78 ], [ 0, %75 ], [ 0, %73 ], [ %70, %69 ]
  %81 = phi i16 [ 4, %78 ], [ 4, %75 ], [ %72, %73 ], [ %72, %69 ]
  %82 = zext i16 %81 to i32
  %83 = zext i16 %80 to i32
  %84 = sub nsw i32 %82, %83
  %85 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 259, i16* nonnull %15) #6
  %86 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 284, i16* nonnull %14) #6
  %87 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 262, i16* %65) #6
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %99

89:                                               ; preds = %79
  switch i32 %84, label %97 [
    i32 1, label %90
    i32 3, label %96
  ]

90:                                               ; preds = %89
  %91 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %91) #6
  store i16 -21846, i16* %11, align 2
  %92 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 259, i16* nonnull %11) #6
  %93 = load i16, i16* %11, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %91) #6
  switch i16 %93, label %95 [
    i16 -32765, label %94
    i16 4, label %94
    i16 3, label %94
    i16 2, label %94
  ]

94:                                               ; preds = %90, %90, %90, %90
  store i16 0, i16* %65, align 4
  br label %137

95:                                               ; preds = %90
  store i16 1, i16* %65, align 4
  br label %137

96:                                               ; preds = %89
  store i16 2, i16* %65, align 4
  br label %202

97:                                               ; preds = %89
  %98 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0)) #6
  br label %699

99:                                               ; preds = %79
  %100 = load i16, i16* %65, align 4
  switch i16 %100, label %199 [
    i16 3, label %101
    i16 0, label %137
    i16 1, label %137
    i16 6, label %152
    i16 2, label %160
    i16 5, label %164
    i16 -32692, label %178
    i16 -32691, label %185
    i16 8, label %202
  ]

101:                                              ; preds = %99
  %102 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 320, i16** nonnull %16, i16** nonnull %17, i16** nonnull %18) #6
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i64 32, i1 false)
  br label %699

105:                                              ; preds = %101
  %106 = load i16, i16* %42, align 4
  %107 = zext i16 %106 to i32
  %108 = shl i32 1, %107
  %109 = sext i32 %108 to i64
  %110 = shl nsw i64 %109, 1
  %111 = call i8* @_TIFFmalloc(i64 %110) #6
  %112 = bitcast i16** %30 to i8**
  store i8* %111, i8** %112, align 8
  %113 = call i8* @_TIFFmalloc(i64 %110) #6
  %114 = bitcast i16** %31 to i8**
  store i8* %113, i8** %114, align 8
  %115 = call i8* @_TIFFmalloc(i64 %110) #6
  %116 = bitcast i16** %32 to i8**
  store i8* %115, i8** %116, align 8
  %117 = load i16*, i16** %30, align 8
  %118 = icmp eq i16* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %105
  %120 = load i16*, i16** %31, align 8
  %121 = icmp eq i16* %120, null
  %122 = icmp eq i8* %115, null
  %123 = or i1 %122, %121
  br i1 %123, label %124, label %125

124:                                              ; preds = %119, %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i64 32, i1 false)
  br label %699

125:                                              ; preds = %119
  %126 = bitcast i16* %117 to i8*
  %127 = bitcast i16** %16 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = shl nsw i32 %108, 1
  %130 = sext i32 %129 to i64
  call void @_TIFFmemcpy(i8* nonnull %126, i8* %128, i64 %130) #6
  %131 = load i8*, i8** %114, align 8
  %132 = bitcast i16** %17 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @_TIFFmemcpy(i8* %131, i8* %133, i64 %130) #6
  %134 = load i8*, i8** %116, align 8
  %135 = bitcast i16** %18 to i8**
  %136 = load i8*, i8** %135, align 8
  call void @_TIFFmemcpy(i8* %134, i8* %136, i64 %130) #6
  br label %137

137:                                              ; preds = %94, %95, %99, %99, %125
  %138 = load i16, i16* %14, align 2
  %139 = icmp eq i16 %138, 1
  br i1 %139, label %140, label %202

140:                                              ; preds = %137
  %141 = load i16, i16* %50, align 2
  %142 = zext i16 %141 to i32
  %143 = icmp eq i16 %141, 1
  br i1 %143, label %202, label %144

144:                                              ; preds = %140
  %145 = load i16, i16* %42, align 4
  %146 = icmp ult i16 %145, 8
  br i1 %146, label %147, label %202

147:                                              ; preds = %144
  %148 = zext i16 %145 to i32
  %149 = load i16, i16* %65, align 4
  %150 = zext i16 %149 to i32
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0), i32 %150, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %142, i32 %148) #6
  br label %699

152:                                              ; preds = %99
  %153 = load i16, i16* %14, align 2
  %154 = icmp eq i16 %153, 1
  %155 = load i16, i16* %15, align 2
  %156 = icmp eq i16 %155, 7
  %157 = and i1 %154, %156
  br i1 %157, label %158, label %202

158:                                              ; preds = %152
  %159 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %1, i32 65538, i32 1) #6
  store i16 2, i16* %65, align 4
  br label %202

160:                                              ; preds = %99
  %161 = icmp slt i32 %84, 3
  br i1 %161, label %162, label %202

162:                                              ; preds = %160
  %163 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i32 %84) #6
  br label %699

164:                                              ; preds = %99
  %165 = bitcast i16* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %165) #6
  store i16 -21846, i16* %19, align 2
  %166 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 332, i16* nonnull %19) #6
  %167 = load i16, i16* %19, align 2
  %168 = icmp eq i16 %167, 1
  br i1 %168, label %169, label %172

169:                                              ; preds = %164
  %170 = load i16, i16* %50, align 2
  %171 = icmp ult i16 %170, 4
  br i1 %171, label %172, label %177

172:                                              ; preds = %169, %164
  %173 = phi i16 [ %167, %164 ], [ %170, %169 ]
  %174 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), %164 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), %169 ]
  %175 = zext i16 %173 to i32
  %176 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i8* %174, i32 %175) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %165) #6
  br label %699

177:                                              ; preds = %169
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %165) #6
  br label %202

178:                                              ; preds = %99
  %179 = load i16, i16* %15, align 2
  %180 = icmp eq i16 %179, -30860
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 34676) #6
  br label %699

183:                                              ; preds = %178
  %184 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %1, i32 65560, i32 3) #6
  store i16 1, i16* %65, align 4
  store i16 8, i16* %42, align 4
  br label %202

185:                                              ; preds = %99
  %186 = load i16, i16* %15, align 2
  %187 = and i16 %186, -2
  %188 = icmp eq i16 %187, -30860
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 34676, i32 34677) #6
  br label %699

191:                                              ; preds = %185
  %192 = load i16, i16* %14, align 2
  %193 = icmp eq i16 %192, 1
  br i1 %193, label %197, label %194

194:                                              ; preds = %191
  %195 = zext i16 %192 to i32
  %196 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 %195) #6
  br label %700

197:                                              ; preds = %191
  %198 = call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %1, i32 65560, i32 3) #6
  store i16 2, i16* %65, align 4
  store i16 8, i16* %42, align 4
  br label %202

199:                                              ; preds = %99
  %200 = zext i16 %100 to i32
  %201 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @photoTag, i64 0, i64 0), i32 %200) #6
  br label %699

202:                                              ; preds = %177, %96, %140, %160, %152, %158, %137, %144, %99, %197, %183
  %203 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 4
  %204 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 256, i32* %203) #6
  %205 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 5
  %206 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %1, i32 257, i32* %205) #6
  %207 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 8
  %208 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %1, i32 274, i16* %207) #6
  %209 = load i16, i16* %14, align 2
  %210 = icmp eq i16 %209, 2
  br i1 %210, label %213, label %211

211:                                              ; preds = %202
  %212 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 2
  store i32 1, i32* %212, align 4
  br label %218

213:                                              ; preds = %202
  %214 = load i16, i16* %50, align 2
  %215 = icmp ult i16 %214, 2
  %216 = zext i1 %215 to i32
  %217 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 2
  store i32 %216, i32* %217, align 4
  br i1 %215, label %218, label %529

218:                                              ; preds = %211, %213
  %219 = load %struct.tiff*, %struct.tiff** %40, align 8
  %220 = call i32 @TIFFIsTiled(%struct.tiff* %219) #6
  %221 = icmp eq i32 %220, 0
  %222 = select i1 %221, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* @gtStripContig, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* @gtTileContig
  %223 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 14
  store i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %222, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %223, align 8
  %224 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %225 = bitcast %union.anon.1* %224 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)**
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* null, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  %226 = load i16, i16* %65, align 4
  switch i16 %226, label %528 [
    i16 2, label %227
    i16 5, label %391
    i16 3, label %405
    i16 0, label %414
    i16 1, label %414
    i16 6, label %431
    i16 8, label %460
  ]

227:                                              ; preds = %218
  %228 = load i16, i16* %42, align 4
  switch i16 %228, label %522 [
    i16 8, label %229
    i16 16, label %274
  ]

229:                                              ; preds = %227
  %230 = load i32, i32* %49, align 8
  switch i32 %230, label %231 [
    i32 1, label %233
    i32 2, label %237
  ]

231:                                              ; preds = %229
  %232 = load i16, i16* %50, align 2
  br label %270

233:                                              ; preds = %229
  %234 = load i16, i16* %50, align 2
  %235 = icmp ugt i16 %234, 3
  br i1 %235, label %236, label %270

236:                                              ; preds = %233
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBAAcontig8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

237:                                              ; preds = %229
  %238 = load i16, i16* %50, align 2
  %239 = icmp ugt i16 %238, 3
  br i1 %239, label %240, label %270

240:                                              ; preds = %237
  %241 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %241, i8** %35, align 8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %243, label %247

243:                                              ; preds = %240
  %244 = load %struct.tiff*, %struct.tiff** %40, align 8
  %245 = getelementptr inbounds %struct.tiff, %struct.tiff* %244, i64 0, i32 55
  %246 = load i8*, i8** %245, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %246, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @BuildMapUaToAa.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %522

247:                                              ; preds = %240, %266
  %248 = phi i32 [ %267, %266 ], [ 0, %240 ]
  %249 = phi i8* [ %263, %266 ], [ %241, %240 ]
  br label %250

250:                                              ; preds = %250, %247
  %251 = phi i32 [ 0, %247 ], [ %264, %250 ]
  %252 = phi i8* [ %249, %247 ], [ %263, %250 ]
  %253 = mul nuw nsw i32 %251, %248
  %254 = add nuw nsw i32 %253, 127
  %255 = udiv i32 %254, 255
  %256 = trunc i32 %255 to i8
  %257 = getelementptr inbounds i8, i8* %252, i64 1
  store i8 %256, i8* %252, align 1
  %258 = or i32 %251, 1
  %259 = mul nuw nsw i32 %258, %248
  %260 = add nuw nsw i32 %259, 127
  %261 = udiv i32 %260, 255
  %262 = trunc i32 %261 to i8
  %263 = getelementptr inbounds i8, i8* %252, i64 2
  store i8 %262, i8* %257, align 1
  %264 = add nuw nsw i32 %251, 2
  %265 = icmp eq i32 %264, 256
  br i1 %265, label %266, label %250

266:                                              ; preds = %250
  %267 = add nuw nsw i32 %248, 1
  %268 = icmp eq i32 %267, 256
  br i1 %268, label %269, label %247

269:                                              ; preds = %266
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBUAcontig8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

270:                                              ; preds = %237, %233, %231
  %271 = phi i16 [ %232, %231 ], [ %234, %233 ], [ %238, %237 ]
  %272 = icmp ugt i16 %271, 2
  br i1 %272, label %273, label %522

273:                                              ; preds = %270
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBcontig8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

274:                                              ; preds = %227
  %275 = load i32, i32* %49, align 8
  switch i32 %275, label %276 [
    i32 1, label %278
    i32 2, label %306
  ]

276:                                              ; preds = %274
  %277 = load i16, i16* %50, align 2
  br label %363

278:                                              ; preds = %274
  %279 = load i16, i16* %50, align 2
  %280 = icmp ugt i16 %279, 3
  br i1 %280, label %281, label %363

281:                                              ; preds = %278
  %282 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %282, i8** %36, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %301, label %284

284:                                              ; preds = %281, %284
  %285 = phi i64 [ %298, %284 ], [ 0, %281 ]
  %286 = phi <16 x i32> [ %299, %284 ], [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %281 ]
  %287 = getelementptr i8, i8* %282, i64 %285
  %288 = add nuw nsw <16 x i32> %286, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %289 = udiv <16 x i32> %288, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %290 = trunc <16 x i32> %289 to <16 x i8>
  %291 = bitcast i8* %287 to <16 x i8>*
  store <16 x i8> %290, <16 x i8>* %291, align 1
  %292 = or i64 %285, 16
  %293 = getelementptr i8, i8* %282, i64 %292
  %294 = add <16 x i32> %286, <i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144>
  %295 = udiv <16 x i32> %294, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %296 = trunc <16 x i32> %295 to <16 x i8>
  %297 = bitcast i8* %293 to <16 x i8>*
  store <16 x i8> %296, <16 x i8>* %297, align 1
  %298 = add nuw nsw i64 %285, 32
  %299 = add <16 x i32> %286, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %300 = icmp eq i64 %298, 65536
  br i1 %300, label %305, label %284, !llvm.loop !2

301:                                              ; preds = %281
  %302 = load %struct.tiff*, %struct.tiff** %40, align 8
  %303 = getelementptr inbounds %struct.tiff, %struct.tiff* %302, i64 0, i32 55
  %304 = load i8*, i8** %303, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %304, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @BuildMapBitdepth16To8.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %522

305:                                              ; preds = %284
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBAAcontig16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

306:                                              ; preds = %274
  %307 = load i16, i16* %50, align 2
  %308 = icmp ugt i16 %307, 3
  br i1 %308, label %309, label %363

309:                                              ; preds = %306
  %310 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %310, i8** %36, align 8
  %311 = icmp eq i8* %310, null
  br i1 %311, label %329, label %312

312:                                              ; preds = %309, %312
  %313 = phi i64 [ %326, %312 ], [ 0, %309 ]
  %314 = phi <16 x i32> [ %327, %312 ], [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %309 ]
  %315 = getelementptr i8, i8* %310, i64 %313
  %316 = add nuw nsw <16 x i32> %314, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %317 = udiv <16 x i32> %316, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %318 = trunc <16 x i32> %317 to <16 x i8>
  %319 = bitcast i8* %315 to <16 x i8>*
  store <16 x i8> %318, <16 x i8>* %319, align 1
  %320 = or i64 %313, 16
  %321 = getelementptr i8, i8* %310, i64 %320
  %322 = add <16 x i32> %314, <i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144>
  %323 = udiv <16 x i32> %322, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %324 = trunc <16 x i32> %323 to <16 x i8>
  %325 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %324, <16 x i8>* %325, align 1
  %326 = add nuw nsw i64 %313, 32
  %327 = add <16 x i32> %314, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %328 = icmp eq i64 %326, 65536
  br i1 %328, label %333, label %312, !llvm.loop !4

329:                                              ; preds = %309
  %330 = load %struct.tiff*, %struct.tiff** %40, align 8
  %331 = getelementptr inbounds %struct.tiff, %struct.tiff* %330, i64 0, i32 55
  %332 = load i8*, i8** %331, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %332, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @BuildMapBitdepth16To8.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %522

333:                                              ; preds = %312
  %334 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %334, i8** %35, align 8
  %335 = icmp eq i8* %334, null
  br i1 %335, label %336, label %340

336:                                              ; preds = %333
  %337 = load %struct.tiff*, %struct.tiff** %40, align 8
  %338 = getelementptr inbounds %struct.tiff, %struct.tiff* %337, i64 0, i32 55
  %339 = load i8*, i8** %338, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %339, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @BuildMapUaToAa.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %522

340:                                              ; preds = %333, %359
  %341 = phi i32 [ %360, %359 ], [ 0, %333 ]
  %342 = phi i8* [ %356, %359 ], [ %334, %333 ]
  br label %343

343:                                              ; preds = %343, %340
  %344 = phi i32 [ 0, %340 ], [ %357, %343 ]
  %345 = phi i8* [ %342, %340 ], [ %356, %343 ]
  %346 = mul nuw nsw i32 %344, %341
  %347 = add nuw nsw i32 %346, 127
  %348 = udiv i32 %347, 255
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds i8, i8* %345, i64 1
  store i8 %349, i8* %345, align 1
  %351 = or i32 %344, 1
  %352 = mul nuw nsw i32 %351, %341
  %353 = add nuw nsw i32 %352, 127
  %354 = udiv i32 %353, 255
  %355 = trunc i32 %354 to i8
  %356 = getelementptr inbounds i8, i8* %345, i64 2
  store i8 %355, i8* %350, align 1
  %357 = add nuw nsw i32 %344, 2
  %358 = icmp eq i32 %357, 256
  br i1 %358, label %359, label %343

359:                                              ; preds = %343
  %360 = add nuw nsw i32 %341, 1
  %361 = icmp eq i32 %360, 256
  br i1 %361, label %362, label %340

362:                                              ; preds = %359
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBUAcontig16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

363:                                              ; preds = %306, %278, %276
  %364 = phi i16 [ %277, %276 ], [ %279, %278 ], [ %307, %306 ]
  %365 = icmp ugt i16 %364, 2
  br i1 %365, label %366, label %522

366:                                              ; preds = %363
  %367 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %367, i8** %36, align 8
  %368 = icmp eq i8* %367, null
  br i1 %368, label %386, label %369

369:                                              ; preds = %366, %369
  %370 = phi i64 [ %383, %369 ], [ 0, %366 ]
  %371 = phi <16 x i32> [ %384, %369 ], [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %366 ]
  %372 = getelementptr i8, i8* %367, i64 %370
  %373 = add nuw nsw <16 x i32> %371, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %374 = udiv <16 x i32> %373, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %375 = trunc <16 x i32> %374 to <16 x i8>
  %376 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %376, align 1
  %377 = or i64 %370, 16
  %378 = getelementptr i8, i8* %367, i64 %377
  %379 = add <16 x i32> %371, <i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144>
  %380 = udiv <16 x i32> %379, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %381 = trunc <16 x i32> %380 to <16 x i8>
  %382 = bitcast i8* %378 to <16 x i8>*
  store <16 x i8> %381, <16 x i8>* %382, align 1
  %383 = add nuw nsw i64 %370, 32
  %384 = add <16 x i32> %371, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %385 = icmp eq i64 %383, 65536
  br i1 %385, label %390, label %369, !llvm.loop !5

386:                                              ; preds = %366
  %387 = load %struct.tiff*, %struct.tiff** %40, align 8
  %388 = getelementptr inbounds %struct.tiff, %struct.tiff* %387, i64 0, i32 55
  %389 = load i8*, i8** %388, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %389, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @BuildMapBitdepth16To8.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %522

390:                                              ; preds = %369
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBcontig16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

391:                                              ; preds = %218
  %392 = load i16, i16* %50, align 2
  %393 = icmp ugt i16 %392, 3
  br i1 %393, label %394, label %522

394:                                              ; preds = %391
  %395 = call fastcc i32 @buildMap(%struct._TIFFRGBAImage* %0) #6
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %522, label %397

397:                                              ; preds = %394
  %398 = load i16, i16* %42, align 4
  %399 = icmp eq i16 %398, 8
  br i1 %399, label %400, label %522

400:                                              ; preds = %397
  %401 = load i8*, i8** %33, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBcontig8bitCMYKtile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

404:                                              ; preds = %400
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putRGBcontig8bitCMYKMaptile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

405:                                              ; preds = %218
  %406 = call fastcc i32 @buildMap(%struct._TIFFRGBAImage* %0) #6
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %522, label %408

408:                                              ; preds = %405
  %409 = load i16, i16* %42, align 4
  switch i16 %409, label %522 [
    i16 8, label %410
    i16 4, label %411
    i16 2, label %412
    i16 1, label %413
  ]

410:                                              ; preds = %408
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put8bitcmaptile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

411:                                              ; preds = %408
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put4bitcmaptile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

412:                                              ; preds = %408
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put2bitcmaptile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

413:                                              ; preds = %408
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put1bitcmaptile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

414:                                              ; preds = %218, %218
  %415 = call fastcc i32 @buildMap(%struct._TIFFRGBAImage* %0) #6
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %522, label %417

417:                                              ; preds = %414
  %418 = load i16, i16* %42, align 4
  switch i16 %418, label %522 [
    i16 16, label %419
    i16 8, label %420
    i16 4, label %428
    i16 2, label %429
    i16 1, label %430
  ]

419:                                              ; preds = %417
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put16bitbwtile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

420:                                              ; preds = %417
  %421 = load i32, i32* %49, align 8
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %427, label %423

423:                                              ; preds = %420
  %424 = load i16, i16* %50, align 2
  %425 = icmp eq i16 %424, 2
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putagreytile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

427:                                              ; preds = %423, %420
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @putgreytile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

428:                                              ; preds = %417
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put4bitbwtile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

429:                                              ; preds = %417
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put2bitbwtile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

430:                                              ; preds = %417
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* @put1bitbwtile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

431:                                              ; preds = %218
  %432 = load i16, i16* %42, align 4
  %433 = icmp eq i16 %432, 8
  br i1 %433, label %434, label %522

434:                                              ; preds = %431
  %435 = load i16, i16* %50, align 2
  %436 = icmp eq i16 %435, 3
  br i1 %436, label %437, label %522

437:                                              ; preds = %434
  %438 = call fastcc i32 @initYCbCrConversion(%struct._TIFFRGBAImage* %0) #6
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %522, label %440

440:                                              ; preds = %437
  %441 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %441) #6
  store i16 -21846, i16* %9, align 2
  %442 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %442) #6
  store i16 -21846, i16* %10, align 2
  %443 = load %struct.tiff*, %struct.tiff** %40, align 8
  %444 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %443, i32 530, i16* nonnull %9, i16* nonnull %10) #6
  %445 = load i16, i16* %9, align 2
  %446 = zext i16 %445 to i32
  %447 = shl nuw nsw i32 %446, 4
  %448 = load i16, i16* %10, align 2
  %449 = zext i16 %448 to i32
  %450 = or i32 %447, %449
  switch i32 %450, label %459 [
    i32 68, label %457
    i32 66, label %451
    i32 65, label %452
    i32 34, label %453
    i32 33, label %454
    i32 18, label %455
    i32 17, label %456
  ]

451:                                              ; preds = %440
  br label %457

452:                                              ; preds = %440
  br label %457

453:                                              ; preds = %440
  br label %457

454:                                              ; preds = %440
  br label %457

455:                                              ; preds = %440
  br label %457

456:                                              ; preds = %440
  br label %457

457:                                              ; preds = %440, %451, %452, %453, %454, %455, %456
  %458 = phi void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* [ @putcontig8bitYCbCr11tile, %456 ], [ @putcontig8bitYCbCr12tile, %455 ], [ @putcontig8bitYCbCr21tile, %454 ], [ @putcontig8bitYCbCr22tile, %453 ], [ @putcontig8bitYCbCr41tile, %452 ], [ @putcontig8bitYCbCr42tile, %451 ], [ @putcontig8bitYCbCr44tile, %440 ]
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* %458, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %459

459:                                              ; preds = %457, %440
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %442) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %441) #6
  br label %522

460:                                              ; preds = %218
  %461 = load i16, i16* %50, align 2
  %462 = icmp eq i16 %461, 3
  br i1 %462, label %463, label %522

463:                                              ; preds = %460
  %464 = call fastcc i32 @buildMap(%struct._TIFFRGBAImage* %0) #6
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %522, label %466

466:                                              ; preds = %463
  %467 = load i16, i16* %42, align 4
  %468 = icmp eq i16 %467, 8
  br i1 %468, label %469, label %522

469:                                              ; preds = %466
  %470 = bitcast float** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %470) #6
  store float* inttoptr (i64 -6148914691236517206 to float*), float** %7, align 8
  %471 = bitcast [3 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %471) #6
  %472 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %472, align 4
  %473 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %473, align 4
  %474 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %474, align 4
  %475 = load %struct.tiff*, %struct.tiff** %40, align 8
  %476 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %475, i32 318, float** nonnull %7) #6
  %477 = load float*, float** %7, align 8
  %478 = getelementptr inbounds float, float* %477, i64 1
  %479 = load float, float* %478, align 4
  %480 = fcmp oeq float %479, 0.000000e+00
  br i1 %480, label %481, label %485

481:                                              ; preds = %469
  %482 = load %struct.tiff*, %struct.tiff** %40, align 8
  %483 = getelementptr inbounds %struct.tiff, %struct.tiff* %482, i64 0, i32 55
  %484 = load i8*, i8** %483, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %484, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @initCIELabConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0)) #6
  br label %520

485:                                              ; preds = %469
  %486 = load %struct.TIFFCIELabToRGB*, %struct.TIFFCIELabToRGB** %34, align 8
  %487 = icmp eq %struct.TIFFCIELabToRGB* %486, null
  br i1 %487, label %488, label %499

488:                                              ; preds = %485
  %489 = call i8* @_TIFFmalloc(i64 18124) #6
  %490 = bitcast %struct.TIFFCIELabToRGB** %34 to i8**
  store i8* %489, i8** %490, align 8
  %491 = icmp eq i8* %489, null
  br i1 %491, label %495, label %492

492:                                              ; preds = %488
  %493 = bitcast i8* %489 to %struct.TIFFCIELabToRGB*
  %494 = load float*, float** %7, align 8
  br label %499

495:                                              ; preds = %488
  %496 = load %struct.tiff*, %struct.tiff** %40, align 8
  %497 = getelementptr inbounds %struct.tiff, %struct.tiff* %496, i64 0, i32 55
  %498 = load i8*, i8** %497, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %498, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @initCIELabConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0)) #6
  br label %520

499:                                              ; preds = %492, %485
  %500 = phi %struct.TIFFCIELabToRGB* [ %493, %492 ], [ %486, %485 ]
  %501 = phi float* [ %494, %492 ], [ %477, %485 ]
  store float 1.000000e+02, float* %473, align 4
  %502 = load float, float* %501, align 4
  %503 = getelementptr inbounds float, float* %501, i64 1
  %504 = load float, float* %503, align 4
  %505 = fdiv float %502, %504
  %506 = fmul float %505, 1.000000e+02
  store float %506, float* %472, align 4
  %507 = load float, float* %501, align 4
  %508 = fsub float 1.000000e+00, %507
  %509 = fsub float %508, %504
  %510 = fdiv float %509, %504
  %511 = fmul float %510, 1.000000e+02
  store float %511, float* %474, align 4
  %512 = call i32 @TIFFCIELabToRGBInit(%struct.TIFFCIELabToRGB* %500, %struct.TIFFDisplay* nonnull @display_sRGB, float* nonnull %472) #6
  %513 = icmp slt i32 %512, 0
  br i1 %513, label %514, label %520

514:                                              ; preds = %499
  %515 = load %struct.tiff*, %struct.tiff** %40, align 8
  %516 = getelementptr inbounds %struct.tiff, %struct.tiff* %515, i64 0, i32 55
  %517 = load i8*, i8** %516, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %517, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @initCIELabConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.44, i64 0, i64 0)) #6
  %518 = bitcast %struct.TIFFCIELabToRGB** %34 to i8**
  %519 = load i8*, i8** %518, align 8
  call void @_TIFFfree(i8* %519) #6
  br label %520

520:                                              ; preds = %514, %499, %495, %481
  %521 = phi void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* [ null, %481 ], [ null, %514 ], [ null, %495 ], [ @putcontig8bitCIELab, %499 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %471) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %470) #6
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* %521, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  br label %522

522:                                              ; preds = %520, %466, %463, %460, %459, %437, %434, %431, %430, %429, %428, %427, %426, %419, %417, %414, %413, %412, %411, %410, %408, %405, %404, %403, %397, %394, %391, %390, %386, %363, %362, %336, %329, %305, %301, %273, %270, %269, %243, %236, %227
  %523 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %223, align 8
  %524 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %523, null
  br i1 %524, label %528, label %525

525:                                              ; preds = %522
  %526 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %225, align 8
  %527 = icmp eq void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)* %526, null
  br i1 %527, label %528, label %700

528:                                              ; preds = %218, %522, %525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i64 28, i1 false)
  br label %699

529:                                              ; preds = %213
  %530 = load %struct.tiff*, %struct.tiff** %40, align 8
  %531 = call i32 @TIFFIsTiled(%struct.tiff* %530) #6
  %532 = icmp eq i32 %531, 0
  %533 = select i1 %532, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* @gtStripSeparate, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* @gtTileSeparate
  %534 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 14
  store i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %533, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %534, align 8
  %535 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %536 = bitcast %union.anon.1* %535 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)**
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* null, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  %537 = load i16, i16* %65, align 4
  switch i16 %537, label %698 [
    i16 0, label %538
    i16 1, label %538
    i16 2, label %538
    i16 5, label %662
    i16 6, label %669
  ]

538:                                              ; preds = %529, %529, %529
  %539 = load i16, i16* %42, align 4
  switch i16 %539, label %692 [
    i16 8, label %540
    i16 16, label %574
  ]

540:                                              ; preds = %538
  %541 = load i32, i32* %49, align 8
  switch i32 %541, label %573 [
    i32 1, label %542
    i32 2, label %543
  ]

542:                                              ; preds = %540
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBAAseparate8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

543:                                              ; preds = %540
  %544 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %544, i8** %35, align 8
  %545 = icmp eq i8* %544, null
  br i1 %545, label %546, label %550

546:                                              ; preds = %543
  %547 = load %struct.tiff*, %struct.tiff** %40, align 8
  %548 = getelementptr inbounds %struct.tiff, %struct.tiff* %547, i64 0, i32 55
  %549 = load i8*, i8** %548, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %549, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @BuildMapUaToAa.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %692

550:                                              ; preds = %543, %569
  %551 = phi i32 [ %570, %569 ], [ 0, %543 ]
  %552 = phi i8* [ %566, %569 ], [ %544, %543 ]
  br label %553

553:                                              ; preds = %553, %550
  %554 = phi i32 [ 0, %550 ], [ %567, %553 ]
  %555 = phi i8* [ %552, %550 ], [ %566, %553 ]
  %556 = mul nuw nsw i32 %554, %551
  %557 = add nuw nsw i32 %556, 127
  %558 = udiv i32 %557, 255
  %559 = trunc i32 %558 to i8
  %560 = getelementptr inbounds i8, i8* %555, i64 1
  store i8 %559, i8* %555, align 1
  %561 = or i32 %554, 1
  %562 = mul nuw nsw i32 %561, %551
  %563 = add nuw nsw i32 %562, 127
  %564 = udiv i32 %563, 255
  %565 = trunc i32 %564 to i8
  %566 = getelementptr inbounds i8, i8* %555, i64 2
  store i8 %565, i8* %560, align 1
  %567 = add nuw nsw i32 %554, 2
  %568 = icmp eq i32 %567, 256
  br i1 %568, label %569, label %553

569:                                              ; preds = %553
  %570 = add nuw nsw i32 %551, 1
  %571 = icmp eq i32 %570, 256
  br i1 %571, label %572, label %550

572:                                              ; preds = %569
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBUAseparate8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

573:                                              ; preds = %540
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBseparate8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

574:                                              ; preds = %538
  %575 = load i32, i32* %49, align 8
  %576 = icmp eq i32 %575, 1
  br i1 %576, label %577, label %602

577:                                              ; preds = %574
  %578 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %578, i8** %36, align 8
  %579 = icmp eq i8* %578, null
  br i1 %579, label %597, label %580

580:                                              ; preds = %577, %580
  %581 = phi i64 [ %594, %580 ], [ 0, %577 ]
  %582 = phi <16 x i32> [ %595, %580 ], [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %577 ]
  %583 = getelementptr i8, i8* %578, i64 %581
  %584 = add nuw nsw <16 x i32> %582, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %585 = udiv <16 x i32> %584, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %586 = trunc <16 x i32> %585 to <16 x i8>
  %587 = bitcast i8* %583 to <16 x i8>*
  store <16 x i8> %586, <16 x i8>* %587, align 1
  %588 = or i64 %581, 16
  %589 = getelementptr i8, i8* %578, i64 %588
  %590 = add <16 x i32> %582, <i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144>
  %591 = udiv <16 x i32> %590, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %592 = trunc <16 x i32> %591 to <16 x i8>
  %593 = bitcast i8* %589 to <16 x i8>*
  store <16 x i8> %592, <16 x i8>* %593, align 1
  %594 = add nuw nsw i64 %581, 32
  %595 = add <16 x i32> %582, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %596 = icmp eq i64 %594, 65536
  br i1 %596, label %601, label %580, !llvm.loop !6

597:                                              ; preds = %577
  %598 = load %struct.tiff*, %struct.tiff** %40, align 8
  %599 = getelementptr inbounds %struct.tiff, %struct.tiff* %598, i64 0, i32 55
  %600 = load i8*, i8** %599, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %600, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @BuildMapBitdepth16To8.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %692

601:                                              ; preds = %580
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBAAseparate16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

602:                                              ; preds = %574
  %603 = icmp eq i32 %575, 2
  %604 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %604, i8** %36, align 8
  %605 = icmp eq i8* %604, null
  br i1 %605, label %623, label %606

606:                                              ; preds = %602, %606
  %607 = phi i64 [ %620, %606 ], [ 0, %602 ]
  %608 = phi <16 x i32> [ %621, %606 ], [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>, %602 ]
  %609 = getelementptr i8, i8* %604, i64 %607
  %610 = add nuw nsw <16 x i32> %608, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %611 = udiv <16 x i32> %610, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %612 = trunc <16 x i32> %611 to <16 x i8>
  %613 = bitcast i8* %609 to <16 x i8>*
  store <16 x i8> %612, <16 x i8>* %613, align 1
  %614 = or i64 %607, 16
  %615 = getelementptr i8, i8* %604, i64 %614
  %616 = add <16 x i32> %608, <i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144, i32 144>
  %617 = udiv <16 x i32> %616, <i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257, i32 257>
  %618 = trunc <16 x i32> %617 to <16 x i8>
  %619 = bitcast i8* %615 to <16 x i8>*
  store <16 x i8> %618, <16 x i8>* %619, align 1
  %620 = add nuw nsw i64 %607, 32
  %621 = add <16 x i32> %608, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %622 = icmp eq i64 %620, 65536
  br i1 %622, label %627, label %606, !llvm.loop !7

623:                                              ; preds = %602
  %624 = load %struct.tiff*, %struct.tiff** %40, align 8
  %625 = getelementptr inbounds %struct.tiff, %struct.tiff* %624, i64 0, i32 55
  %626 = load i8*, i8** %625, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %626, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @BuildMapBitdepth16To8.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %627

627:                                              ; preds = %606, %623
  %628 = phi i1 [ false, %623 ], [ true, %606 ]
  br i1 %603, label %629, label %660

629:                                              ; preds = %627
  br i1 %628, label %630, label %692

630:                                              ; preds = %629
  %631 = call i8* @_TIFFmalloc(i64 65536) #6
  store i8* %631, i8** %35, align 8
  %632 = icmp eq i8* %631, null
  br i1 %632, label %633, label %637

633:                                              ; preds = %630
  %634 = load %struct.tiff*, %struct.tiff** %40, align 8
  %635 = getelementptr inbounds %struct.tiff, %struct.tiff* %634, i64 0, i32 55
  %636 = load i8*, i8** %635, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %636, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @BuildMapUaToAa.module, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #6
  br label %692

637:                                              ; preds = %630, %656
  %638 = phi i32 [ %657, %656 ], [ 0, %630 ]
  %639 = phi i8* [ %653, %656 ], [ %631, %630 ]
  br label %640

640:                                              ; preds = %640, %637
  %641 = phi i32 [ 0, %637 ], [ %654, %640 ]
  %642 = phi i8* [ %639, %637 ], [ %653, %640 ]
  %643 = mul nuw nsw i32 %641, %638
  %644 = add nuw nsw i32 %643, 127
  %645 = udiv i32 %644, 255
  %646 = trunc i32 %645 to i8
  %647 = getelementptr inbounds i8, i8* %642, i64 1
  store i8 %646, i8* %642, align 1
  %648 = or i32 %641, 1
  %649 = mul nuw nsw i32 %648, %638
  %650 = add nuw nsw i32 %649, 127
  %651 = udiv i32 %650, 255
  %652 = trunc i32 %651 to i8
  %653 = getelementptr inbounds i8, i8* %642, i64 2
  store i8 %652, i8* %647, align 1
  %654 = add nuw nsw i32 %641, 2
  %655 = icmp eq i32 %654, 256
  br i1 %655, label %656, label %640

656:                                              ; preds = %640
  %657 = add nuw nsw i32 %638, 1
  %658 = icmp eq i32 %657, 256
  br i1 %658, label %659, label %637

659:                                              ; preds = %656
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBUAseparate16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

660:                                              ; preds = %627
  br i1 %628, label %661, label %692

661:                                              ; preds = %660
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putRGBseparate16bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

662:                                              ; preds = %529
  %663 = load i16, i16* %42, align 4
  %664 = icmp eq i16 %663, 8
  br i1 %664, label %665, label %692

665:                                              ; preds = %662
  %666 = load i16, i16* %50, align 2
  %667 = icmp eq i16 %666, 4
  br i1 %667, label %668, label %692

668:                                              ; preds = %665
  store i32 1, i32* %49, align 8
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putCMYKseparate8bittile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %692

669:                                              ; preds = %529
  %670 = load i16, i16* %42, align 4
  %671 = icmp eq i16 %670, 8
  br i1 %671, label %672, label %692

672:                                              ; preds = %669
  %673 = load i16, i16* %50, align 2
  %674 = icmp eq i16 %673, 3
  br i1 %674, label %675, label %692

675:                                              ; preds = %672
  %676 = call fastcc i32 @initYCbCrConversion(%struct._TIFFRGBAImage* %0) #6
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %692, label %678

678:                                              ; preds = %675
  %679 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %679) #6
  store i16 -21846, i16* %5, align 2
  %680 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %680) #6
  store i16 -21846, i16* %6, align 2
  %681 = load %struct.tiff*, %struct.tiff** %40, align 8
  %682 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %681, i32 530, i16* nonnull %5, i16* nonnull %6) #6
  %683 = load i16, i16* %5, align 2
  %684 = zext i16 %683 to i32
  %685 = shl nuw nsw i32 %684, 4
  %686 = load i16, i16* %6, align 2
  %687 = zext i16 %686 to i32
  %688 = or i32 %685, %687
  %689 = icmp eq i32 %688, 17
  br i1 %689, label %690, label %691

690:                                              ; preds = %678
  store void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* @putseparate8bitYCbCr11tile, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  br label %691

691:                                              ; preds = %690, %678
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %680) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %679) #6
  br label %692

692:                                              ; preds = %691, %675, %672, %669, %668, %665, %662, %661, %660, %659, %633, %629, %601, %597, %573, %572, %546, %542, %538
  %693 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %534, align 8
  %694 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %693, null
  br i1 %694, label %698, label %695

695:                                              ; preds = %692
  %696 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %536, align 8
  %697 = icmp eq void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)* %696, null
  br i1 %697, label %698, label %700

698:                                              ; preds = %529, %692, %695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i64 28, i1 false)
  br label %699

699:                                              ; preds = %172, %698, %528, %199, %189, %181, %162, %147, %124, %104, %97, %45
  call void @TIFFRGBAImageEnd(%struct._TIFFRGBAImage* %0)
  br label %700

700:                                              ; preds = %695, %525, %4, %699, %194
  %701 = phi i32 [ 0, %699 ], [ 0, %194 ], [ 0, %4 ], [ 1, %525 ], [ 1, %695 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  ret i32 %701
}

declare i8* @_TIFFmalloc(i64) local_unnamed_addr #3

declare void @_TIFFmemcpy(i8*, i8*, i64) local_unnamed_addr #3

declare i32 @TIFFSetField(%struct.tiff*, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFRGBAImageGet(%struct._TIFFRGBAImage*, i32*, i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 14
  %6 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %5, align 8
  %7 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %10 = load %struct.tiff*, %struct.tiff** %9, align 8
  %11 = getelementptr inbounds %struct.tiff, %struct.tiff* %10, i64 0, i32 55
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i8* @TIFFFileName(%struct.tiff* %10) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %12, i8* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %27

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %16 = bitcast %union.anon.1* %15 to void (%struct._TIFFRGBAImage*)**
  %17 = load void (%struct._TIFFRGBAImage*)*, void (%struct._TIFFRGBAImage*)** %16, align 8
  %18 = icmp eq void (%struct._TIFFRGBAImage*)* %17, null
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %21 = load %struct.tiff*, %struct.tiff** %20, align 8
  %22 = getelementptr inbounds %struct.tiff, %struct.tiff* %21, i64 0, i32 55
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* @TIFFFileName(%struct.tiff* %21) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %23, i8* %24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %27

25:                                               ; preds = %14
  %26 = tail call i32 %6(%struct._TIFFRGBAImage* %0, i32* %1, i32 %2, i32 %3) #6
  br label %27

27:                                               ; preds = %25, %19, %8
  %28 = phi i32 [ 0, %8 ], [ 0, %19 ], [ %26, %25 ]
  ret i32 %28
}

declare void @TIFFErrorExt(i8*, i8*, i8*, ...) local_unnamed_addr #3

declare i8* @TIFFFileName(%struct.tiff*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBAImageOriented(%struct.tiff*, i32, i32, i32*, i32, i32) local_unnamed_addr #0 {
  %7 = alloca [1024 x i8], align 16
  %8 = alloca %struct._TIFFRGBAImage, align 8
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 1024, i1 false)
  %10 = bitcast %struct._TIFFRGBAImage* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 144, i1 false)
  %11 = call i32 @TIFFRGBAImageOK(%struct.tiff* %0, i8* nonnull %9)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %6
  %14 = call i32 @TIFFRGBAImageBegin(%struct._TIFFRGBAImage* nonnull %8, %struct.tiff* %0, i32 %5, i8* nonnull %9)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %49, label %16

16:                                               ; preds = %13
  %17 = trunc i32 %4 to i16
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 9
  store i16 %17, i16* %18, align 2
  %19 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = sub i32 %2, %20
  %22 = mul i32 %21, %1
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %3, i64 %23
  %25 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 14
  %26 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %25, align 8
  %27 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 0
  %30 = load %struct.tiff*, %struct.tiff** %29, align 8
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %30, i64 0, i32 55
  %32 = load i8*, i8** %31, align 8
  %33 = call i8* @TIFFFileName(%struct.tiff* %30) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %32, i8* %33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %47

34:                                               ; preds = %16
  %35 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 15
  %36 = bitcast %union.anon.1* %35 to void (%struct._TIFFRGBAImage*)**
  %37 = load void (%struct._TIFFRGBAImage*)*, void (%struct._TIFFRGBAImage*)** %36, align 8
  %38 = icmp eq void (%struct._TIFFRGBAImage*)* %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %8, i64 0, i32 0
  %41 = load %struct.tiff*, %struct.tiff** %40, align 8
  %42 = getelementptr inbounds %struct.tiff, %struct.tiff* %41, i64 0, i32 55
  %43 = load i8*, i8** %42, align 8
  %44 = call i8* @TIFFFileName(%struct.tiff* %41) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %43, i8* %44, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %47

45:                                               ; preds = %34
  %46 = call i32 %26(%struct._TIFFRGBAImage* nonnull %8, i32* %24, i32 %1, i32 %20) #6
  br label %47

47:                                               ; preds = %28, %39, %45
  %48 = phi i32 [ 0, %28 ], [ 0, %39 ], [ %46, %45 ]
  call void @TIFFRGBAImageEnd(%struct._TIFFRGBAImage* nonnull %8)
  br label %53

49:                                               ; preds = %13, %6
  %50 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %51 = load i8*, i8** %50, align 8
  %52 = call i8* @TIFFFileName(%struct.tiff* %0) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %51, i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* nonnull %9) #6
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i32 [ %48, %47 ], [ 0, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %9) #6
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBAImage(%struct.tiff*, i32, i32, i32*, i32) local_unnamed_addr #0 {
  %6 = tail call i32 @TIFFReadRGBAImageOriented(%struct.tiff* %0, i32 %1, i32 %2, i32* %3, i32 4, i32 %4)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBAStrip(%struct.tiff*, i32, i32*) local_unnamed_addr #0 {
  %4 = tail call i32 @TIFFReadRGBAStripExt(%struct.tiff* %0, i32 %1, i32* %2, i32 0)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBAStripExt(%struct.tiff*, i32, i32*, i32) local_unnamed_addr #0 {
  %5 = alloca [1024 x i8], align 16
  %6 = alloca %struct._TIFFRGBAImage, align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 1024, i1 false)
  %9 = bitcast %struct._TIFFRGBAImage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 144, i1 false)
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  store i32 -1431655766, i32* %7, align 4
  %11 = tail call i32 @TIFFIsTiled(%struct.tiff* %0) #6
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i8* @TIFFFileName(%struct.tiff* %0) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %15, i8* %16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26, i64 0, i64 0)) #6
  br label %72

17:                                               ; preds = %4
  %18 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %0, i32 278, i32* nonnull %7) #6
  %19 = load i32, i32* %7, align 4
  %20 = urem i32 %1, %19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %24 = load i8*, i8** %23, align 8
  %25 = call i8* @TIFFFileName(%struct.tiff* %0) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %24, i8* %25, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.27, i64 0, i64 0)) #6
  br label %72

26:                                               ; preds = %17
  %27 = call i32 @TIFFRGBAImageOK(%struct.tiff* %0, i8* nonnull %8)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %68, label %29

29:                                               ; preds = %26
  %30 = call i32 @TIFFRGBAImageBegin(%struct._TIFFRGBAImage* nonnull %6, %struct.tiff* %0, i32 %3, i8* nonnull %8)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %68, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 23
  store i32 %1, i32* %33, align 8
  %34 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 24
  store i32 0, i32* %34, align 4
  %35 = load i32, i32* %7, align 4
  %36 = add i32 %35, %1
  %37 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = icmp ugt i32 %36, %38
  %40 = sub i32 %38, %1
  %41 = select i1 %39, i32 %40, i32 %35
  %42 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 14
  %45 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %44, align 8
  %46 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %45, null
  br i1 %46, label %47, label %53

47:                                               ; preds = %32
  %48 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 0
  %49 = load %struct.tiff*, %struct.tiff** %48, align 8
  %50 = getelementptr inbounds %struct.tiff, %struct.tiff* %49, i64 0, i32 55
  %51 = load i8*, i8** %50, align 8
  %52 = call i8* @TIFFFileName(%struct.tiff* %49) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %51, i8* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %66

53:                                               ; preds = %32
  %54 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 15
  %55 = bitcast %union.anon.1* %54 to void (%struct._TIFFRGBAImage*)**
  %56 = load void (%struct._TIFFRGBAImage*)*, void (%struct._TIFFRGBAImage*)** %55, align 8
  %57 = icmp eq void (%struct._TIFFRGBAImage*)* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %6, i64 0, i32 0
  %60 = load %struct.tiff*, %struct.tiff** %59, align 8
  %61 = getelementptr inbounds %struct.tiff, %struct.tiff* %60, i64 0, i32 55
  %62 = load i8*, i8** %61, align 8
  %63 = call i8* @TIFFFileName(%struct.tiff* %60) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %62, i8* %63, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %66

64:                                               ; preds = %53
  %65 = call i32 %45(%struct._TIFFRGBAImage* nonnull %6, i32* %2, i32 %43, i32 %41) #6
  br label %66

66:                                               ; preds = %47, %58, %64
  %67 = phi i32 [ 0, %47 ], [ 0, %58 ], [ %65, %64 ]
  call void @TIFFRGBAImageEnd(%struct._TIFFRGBAImage* nonnull %6)
  br label %72

68:                                               ; preds = %29, %26
  %69 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %70 = load i8*, i8** %69, align 8
  %71 = call i8* @TIFFFileName(%struct.tiff* %0) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %70, i8* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* nonnull %8) #6
  br label %72

72:                                               ; preds = %66, %68, %22, %13
  %73 = phi i32 [ 0, %13 ], [ 0, %22 ], [ %67, %66 ], [ 0, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #6
  ret i32 %73
}

declare i32 @TIFFIsTiled(%struct.tiff*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBATile(%struct.tiff*, i32, i32, i32*) local_unnamed_addr #0 {
  %5 = tail call i32 @TIFFReadRGBATileExt(%struct.tiff* %0, i32 %1, i32 %2, i32* %3, i32 0)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFReadRGBATileExt(%struct.tiff*, i32, i32, i32*, i32) local_unnamed_addr #0 {
  %6 = alloca [1024 x i8], align 16
  %7 = alloca %struct._TIFFRGBAImage, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 1024, i1 false)
  %11 = bitcast %struct._TIFFRGBAImage* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 144, i1 false)
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  store i32 -1431655766, i32* %8, align 4
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %9, align 4
  %14 = tail call i32 @TIFFIsTiled(%struct.tiff* %0) #6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i8* @TIFFFileName(%struct.tiff* %0) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %18, i8* %19, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.28, i64 0, i64 0)) #6
  br label %156

20:                                               ; preds = %5
  %21 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %0, i32 322, i32* nonnull %8) #6
  %22 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %0, i32 323, i32* nonnull %9) #6
  %23 = load i32, i32* %8, align 4
  %24 = urem i32 %1, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = load i32, i32* %9, align 4
  %28 = urem i32 %2, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26, %20
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %32 = load i8*, i8** %31, align 8
  %33 = call i8* @TIFFFileName(%struct.tiff* %0) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %32, i8* %33, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.29, i64 0, i64 0)) #6
  br label %156

34:                                               ; preds = %26
  %35 = call i32 @TIFFRGBAImageOK(%struct.tiff* %0, i8* nonnull %10)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = call i32 @TIFFRGBAImageBegin(%struct._TIFFRGBAImage* nonnull %7, %struct.tiff* %0, i32 %4, i8* nonnull %10)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37, %34
  %41 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %42 = load i8*, i8** %41, align 8
  %43 = call i8* @TIFFFileName(%struct.tiff* %0) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %42, i8* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* nonnull %10) #6
  br label %156

44:                                               ; preds = %37
  %45 = load i32, i32* %9, align 4
  %46 = add i32 %45, %2
  %47 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = icmp ugt i32 %46, %48
  %50 = sub i32 %48, %2
  %51 = select i1 %49, i32 %50, i32 %45
  %52 = load i32, i32* %8, align 4
  %53 = add i32 %52, %1
  %54 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = icmp ugt i32 %53, %55
  %57 = sub i32 %55, %1
  %58 = select i1 %56, i32 %57, i32 %52
  %59 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 23
  store i32 %2, i32* %59, align 8
  %60 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 24
  store i32 %1, i32* %60, align 4
  %61 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 14
  %62 = load i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)*, i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)** %61, align 8
  %63 = icmp eq i32 (%struct._TIFFRGBAImage*, i32*, i32, i32)* %62, null
  br i1 %63, label %64, label %70

64:                                               ; preds = %44
  %65 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 0
  %66 = load %struct.tiff*, %struct.tiff** %65, align 8
  %67 = getelementptr inbounds %struct.tiff, %struct.tiff* %66, i64 0, i32 55
  %68 = load i8*, i8** %67, align 8
  %69 = call i8* @TIFFFileName(%struct.tiff* %66) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %68, i8* %69, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %83

70:                                               ; preds = %44
  %71 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 15
  %72 = bitcast %union.anon.1* %71 to void (%struct._TIFFRGBAImage*)**
  %73 = load void (%struct._TIFFRGBAImage*)*, void (%struct._TIFFRGBAImage*)** %72, align 8
  %74 = icmp eq void (%struct._TIFFRGBAImage*)* %73, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %7, i64 0, i32 0
  %77 = load %struct.tiff*, %struct.tiff** %76, align 8
  %78 = getelementptr inbounds %struct.tiff, %struct.tiff* %77, i64 0, i32 55
  %79 = load i8*, i8** %78, align 8
  %80 = call i8* @TIFFFileName(%struct.tiff* %77) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %79, i8* %80, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %83

81:                                               ; preds = %70
  %82 = call i32 %62(%struct._TIFFRGBAImage* nonnull %7, i32* %3, i32 %58, i32 %51) #6
  br label %83

83:                                               ; preds = %64, %75, %81
  %84 = phi i32 [ 0, %64 ], [ 0, %75 ], [ %82, %81 ]
  call void @TIFFRGBAImageEnd(%struct._TIFFRGBAImage* nonnull %7)
  %85 = load i32, i32* %8, align 4
  %86 = icmp eq i32 %85, %58
  %87 = load i32, i32* %9, align 4
  %88 = icmp eq i32 %51, %87
  %89 = and i1 %86, %88
  br i1 %89, label %156, label %90

90:                                               ; preds = %83
  %91 = icmp eq i32 %51, 0
  br i1 %91, label %114, label %92

92:                                               ; preds = %90
  %93 = zext i32 %58 to i64
  %94 = shl nuw nsw i64 %93, 2
  %95 = zext i32 %51 to i64
  %96 = add i32 %87, -1
  %97 = mul i32 %96, %85
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %3, i64 %98
  %100 = bitcast i32* %99 to i8*
  %101 = add i32 %51, -1
  %102 = mul i32 %101, %58
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %3, i64 %103
  %105 = bitcast i32* %104 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %105, i64 %94, i1 false)
  %106 = getelementptr inbounds i32, i32* %99, i64 %93
  %107 = bitcast i32* %106 to i8*
  %108 = sub i32 %85, %58
  %109 = zext i32 %108 to i64
  %110 = shl nuw nsw i64 %109, 2
  call void @_TIFFmemset(i8* %107, i32 0, i64 %110) #6
  %111 = icmp eq i32 %51, 1
  br i1 %111, label %112, label %117

112:                                              ; preds = %117, %92
  %113 = load i32, i32* %9, align 4
  br label %114

114:                                              ; preds = %112, %90
  %115 = phi i32 [ %113, %112 ], [ %87, %90 ]
  %116 = icmp ugt i32 %115, %51
  br i1 %116, label %141, label %156

117:                                              ; preds = %92, %117
  %118 = phi i64 [ %139, %117 ], [ 1, %92 ]
  %119 = phi i32 [ %120, %117 ], [ 0, %92 ]
  %120 = add nuw i32 %119, 1
  %121 = load i32, i32* %9, align 4
  %122 = load i32, i32* %8, align 4
  %123 = sub i32 -2, %119
  %124 = add i32 %121, %123
  %125 = mul i32 %124, %122
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %3, i64 %126
  %128 = bitcast i32* %127 to i8*
  %129 = add i32 %51, %123
  %130 = mul i32 %129, %58
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %3, i64 %131
  %133 = bitcast i32* %132 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %133, i64 %94, i1 false)
  %134 = getelementptr inbounds i32, i32* %127, i64 %93
  %135 = bitcast i32* %134 to i8*
  %136 = sub i32 %122, %58
  %137 = zext i32 %136 to i64
  %138 = shl nuw nsw i64 %137, 2
  call void @_TIFFmemset(i8* %135, i32 0, i64 %138) #6
  %139 = add nuw nsw i64 %118, 1
  %140 = icmp ult i64 %139, %95
  br i1 %140, label %117, label %112

141:                                              ; preds = %114, %141
  %142 = phi i32 [ %154, %141 ], [ %115, %114 ]
  %143 = phi i32 [ %153, %141 ], [ %51, %114 ]
  %144 = xor i32 %143, -1
  %145 = add i32 %142, %144
  %146 = load i32, i32* %8, align 4
  %147 = mul i32 %146, %145
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %3, i64 %148
  %150 = bitcast i32* %149 to i8*
  %151 = zext i32 %146 to i64
  %152 = shl nuw nsw i64 %151, 2
  call void @_TIFFmemset(i8* %150, i32 0, i64 %152) #6
  %153 = add nuw i32 %143, 1
  %154 = load i32, i32* %9, align 4
  %155 = icmp ugt i32 %154, %153
  br i1 %155, label %141, label %156

156:                                              ; preds = %141, %114, %83, %40, %30, %16
  %157 = phi i32 [ 0, %30 ], [ 0, %40 ], [ 0, %16 ], [ %84, %83 ], [ %84, %114 ], [ %84, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %10) #6
  ret i32 %157
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_TIFFmemset(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @gtTileContig(%struct._TIFFRGBAImage*, i32*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %9 = load %struct.tiff*, %struct.tiff** %8, align 8
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %11 = bitcast %union.anon.1* %10 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)**
  %12 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %11, align 8
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  store i8* null, i8** %7, align 8
  %16 = tail call i64 @TIFFTileSize(%struct.tiff* %9) #6
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.tiff, %struct.tiff* %9, i64 0, i32 55
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i8* @TIFFFileName(%struct.tiff* %9) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %20, i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)) #6
  br label %257

22:                                               ; preds = %4
  %23 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %9, i32 322, i32* nonnull %5) #6
  %24 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %9, i32 323, i32* nonnull %6) #6
  %25 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 8
  %26 = load i16, i16* %25, align 8
  switch i16 %26, label %55 [
    i16 1, label %27
    i16 5, label %27
    i16 2, label %32
    i16 6, label %32
    i16 3, label %37
    i16 7, label %37
    i16 4, label %42
    i16 8, label %42
  ]

27:                                               ; preds = %22, %22
  %28 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %29 = load i16, i16* %28, align 2
  switch i16 %29, label %31 [
    i16 2, label %55
    i16 6, label %55
    i16 3, label %47
    i16 7, label %47
    i16 4, label %30
    i16 8, label %30
  ]

30:                                               ; preds = %27, %27
  br label %47

31:                                               ; preds = %27
  br label %55

32:                                               ; preds = %22, %22
  %33 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %36 [
    i16 1, label %55
    i16 5, label %55
    i16 3, label %47
    i16 7, label %47
    i16 4, label %35
    i16 8, label %35
  ]

35:                                               ; preds = %32, %32
  br label %47

36:                                               ; preds = %32
  br label %55

37:                                               ; preds = %22, %22
  %38 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %41 [
    i16 1, label %47
    i16 5, label %47
    i16 2, label %40
    i16 6, label %40
    i16 4, label %55
    i16 8, label %55
  ]

40:                                               ; preds = %37, %37
  br label %47

41:                                               ; preds = %37
  br label %55

42:                                               ; preds = %22, %22
  %43 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %44 = load i16, i16* %43, align 2
  switch i16 %44, label %46 [
    i16 1, label %47
    i16 5, label %47
    i16 2, label %45
    i16 6, label %45
    i16 3, label %55
    i16 7, label %55
  ]

45:                                               ; preds = %42, %42
  br label %47

46:                                               ; preds = %42
  br label %55

47:                                               ; preds = %32, %32, %27, %27, %45, %40, %35, %30, %37, %37, %42, %42
  %48 = phi i32 [ 1, %42 ], [ 1, %42 ], [ 3, %37 ], [ 3, %37 ], [ 1, %30 ], [ 3, %35 ], [ 1, %40 ], [ 3, %45 ], [ 3, %27 ], [ 3, %27 ], [ 1, %32 ], [ 1, %32 ]
  %49 = add i32 %3, -1
  %50 = load i32, i32* %5, align 4
  %51 = zext i32 %50 to i64
  %52 = zext i32 %2 to i64
  %53 = add nuw nsw i64 %51, %52
  %54 = sub nsw i64 0, %53
  br label %61

55:                                               ; preds = %42, %42, %37, %37, %46, %41, %36, %31, %27, %27, %32, %32, %22
  %56 = phi i32 [ 0, %22 ], [ 2, %32 ], [ 2, %32 ], [ 2, %27 ], [ 2, %27 ], [ 0, %31 ], [ 0, %36 ], [ 0, %41 ], [ 0, %46 ], [ 2, %37 ], [ 2, %37 ], [ 2, %42 ], [ 2, %42 ]
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = zext i32 %2 to i64
  %60 = sub nsw i64 %59, %58
  br label %61

61:                                               ; preds = %55, %47
  %62 = phi i32 [ %50, %47 ], [ %57, %55 ]
  %63 = phi i1 [ true, %47 ], [ false, %55 ]
  %64 = phi i32 [ %48, %47 ], [ %56, %55 ]
  %65 = phi i32 [ %49, %47 ], [ 0, %55 ]
  %66 = phi i64 [ %54, %47 ], [ %60, %55 ]
  %67 = add nsw i64 %66, 2147483648
  %68 = icmp ugt i64 %67, 4294967295
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  call void @_TIFFfree(i8* null) #6
  %70 = getelementptr inbounds %struct.tiff, %struct.tiff* %9, i64 0, i32 55
  %71 = load i8*, i8** %70, align 8
  %72 = call i8* @TIFFFileName(%struct.tiff* %9) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %71, i8* %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #6
  br label %257

73:                                               ; preds = %61
  %74 = trunc i64 %66 to i32
  %75 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 24
  %76 = load i32, i32* %75, align 4
  %77 = urem i32 %76, %62
  %78 = sub i32 %62, %77
  %79 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %77)
  %80 = extractvalue { i32, i1 } %79, 1
  br i1 %80, label %81, label %85

81:                                               ; preds = %73
  call void @_TIFFfree(i8* null) #6
  %82 = getelementptr inbounds %struct.tiff, %struct.tiff* %9, i64 0, i32 55
  %83 = load i8*, i8** %82, align 8
  %84 = call i8* @TIFFFileName(%struct.tiff* %9) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %83, i8* %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #6
  br label %257

85:                                               ; preds = %73
  %86 = extractvalue { i32, i1 } %79, 0
  %87 = icmp eq i32 %3, 0
  br i1 %87, label %196, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 23
  %90 = icmp eq i32 %2, 0
  %91 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 1
  %92 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %93 = zext i32 %2 to i64
  br label %94

94:                                               ; preds = %88, %185
  %95 = phi i32 [ 1, %88 ], [ %186, %185 ]
  %96 = phi i32 [ %65, %88 ], [ %189, %185 ]
  %97 = phi i32 [ 0, %88 ], [ %190, %185 ]
  %98 = load i32, i32* %6, align 4
  %99 = load i32, i32* %89, align 8
  %100 = add i32 %99, %97
  %101 = urem i32 %100, %98
  %102 = sub i32 %98, %101
  %103 = add i32 %102, %97
  %104 = icmp ugt i32 %103, %3
  %105 = sub i32 %3, %97
  %106 = select i1 %104, i32 %105, i32 %102
  br i1 %90, label %185, label %107

107:                                              ; preds = %94
  %108 = load i32, i32* %75, align 4
  %109 = mul i32 %96, %2
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %1, i64 %110
  br label %112

112:                                              ; preds = %181, %107
  %113 = phi i32 [ %99, %107 ], [ %184, %181 ]
  %114 = phi i32 [ %86, %107 ], [ %74, %181 ]
  %115 = phi i32 [ 0, %107 ], [ %173, %181 ]
  %116 = phi i32 [ %78, %107 ], [ %182, %181 ]
  %117 = phi i32 [ %77, %107 ], [ 0, %181 ]
  %118 = phi i32 [ %108, %107 ], [ %183, %181 ]
  %119 = add i32 %113, %97
  %120 = call i64 @_TIFFReadTileAndAllocBuffer(%struct.tiff* %9, i8** nonnull %7, i64 %16, i32 %118, i32 %119, i32 0, i16 zeroext 0) #6
  %121 = icmp eq i64 %120, -1
  br i1 %121, label %122, label %128

122:                                              ; preds = %112
  %123 = load i8*, i8** %7, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %185, label %125

125:                                              ; preds = %122
  %126 = load i32, i32* %91, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %185

128:                                              ; preds = %125, %112
  %129 = load i32, i32* %89, align 8
  %130 = add i32 %129, %97
  %131 = load i32, i32* %6, align 4
  %132 = urem i32 %130, %131
  %133 = zext i32 %132 to i64
  %134 = call i64 @TIFFTileRowSize(%struct.tiff* %9) #6
  %135 = mul nsw i64 %134, %133
  %136 = sext i32 %117 to i64
  %137 = load i16, i16* %92, align 2
  %138 = zext i16 %137 to i64
  %139 = mul nsw i64 %138, %136
  %140 = add nsw i64 %139, %135
  %141 = add i32 %115, %116
  %142 = icmp ugt i32 %141, %2
  br i1 %142, label %145, label %143

143:                                              ; preds = %128
  %144 = zext i32 %115 to i64
  br label %171

145:                                              ; preds = %128
  %146 = load i32, i32* %5, align 4
  %147 = zext i32 %146 to i64
  %148 = sub nsw i64 %147, %93
  %149 = zext i32 %115 to i64
  %150 = add nsw i64 %148, %149
  %151 = add nsw i64 %150, 2147483648
  %152 = icmp ugt i64 %151, 4294967295
  br i1 %152, label %153, label %158

153:                                              ; preds = %145
  %154 = load i8*, i8** %7, align 8
  call void @_TIFFfree(i8* %154) #6
  %155 = getelementptr inbounds %struct.tiff, %struct.tiff* %9, i64 0, i32 55
  %156 = load i8*, i8** %155, align 8
  %157 = call i8* @TIFFFileName(%struct.tiff* %9) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %156, i8* %157, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #6
  br label %257

158:                                              ; preds = %145
  %159 = trunc i64 %150 to i32
  %160 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %159)
  %161 = extractvalue { i32, i1 } %160, 1
  br i1 %161, label %162, label %167

162:                                              ; preds = %158
  %163 = load i8*, i8** %7, align 8
  call void @_TIFFfree(i8* %163) #6
  %164 = getelementptr inbounds %struct.tiff, %struct.tiff* %9, i64 0, i32 55
  %165 = load i8*, i8** %164, align 8
  %166 = call i8* @TIFFFileName(%struct.tiff* %9) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %165, i8* %166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #6
  br label %257

167:                                              ; preds = %158
  %168 = extractvalue { i32, i1 } %160, 0
  %169 = sub i32 %146, %159
  %170 = add i32 %169, %115
  br label %171

171:                                              ; preds = %143, %167
  %172 = phi i64 [ %144, %143 ], [ %149, %167 ]
  %173 = phi i32 [ %141, %143 ], [ %170, %167 ]
  %174 = phi i32 [ %117, %143 ], [ %159, %167 ]
  %175 = phi i32 [ %116, %143 ], [ %169, %167 ]
  %176 = phi i32 [ %114, %143 ], [ %168, %167 ]
  %177 = getelementptr inbounds i32, i32* %111, i64 %172
  %178 = load i8*, i8** %7, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 %140
  call void %12(%struct._TIFFRGBAImage* %0, i32* %177, i32 %115, i32 %96, i32 %175, i32 %106, i32 %174, i32 %176, i8* %179) #6
  %180 = icmp ult i32 %173, %2
  br i1 %180, label %181, label %185

181:                                              ; preds = %171
  %182 = load i32, i32* %5, align 4
  %183 = add i32 %175, %118
  %184 = load i32, i32* %89, align 8
  br label %112

185:                                              ; preds = %171, %125, %122, %94
  %186 = phi i32 [ %95, %94 ], [ 0, %122 ], [ 0, %125 ], [ %95, %171 ]
  %187 = sub nsw i32 0, %106
  %188 = select i1 %63, i32 %187, i32 %106
  %189 = add i32 %188, %96
  %190 = add i32 %106, %97
  %191 = icmp ne i32 %186, 0
  %192 = icmp ult i32 %190, %3
  %193 = and i1 %192, %191
  br i1 %193, label %94, label %194

194:                                              ; preds = %185
  %195 = load i8*, i8** %7, align 8
  br label %196

196:                                              ; preds = %194, %85
  %197 = phi i8* [ null, %85 ], [ %195, %194 ]
  %198 = phi i32 [ 1, %85 ], [ %186, %194 ]
  call void @_TIFFfree(i8* %197) #6
  %199 = and i32 %64, 2
  %200 = icmp ne i32 %199, 0
  %201 = icmp ne i32 %3, 0
  %202 = and i1 %200, %201
  br i1 %202, label %203, label %257

203:                                              ; preds = %196
  %204 = zext i32 %2 to i64
  %205 = zext i32 %3 to i64
  %206 = and i64 %205, 1
  %207 = icmp eq i32 %3, 1
  br i1 %207, label %239, label %208

208:                                              ; preds = %203
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %267, %208
  %211 = phi i64 [ 0, %208 ], [ %268, %267 ]
  %212 = phi i64 [ %209, %208 ], [ %269, %267 ]
  %213 = trunc i64 %211 to i32
  %214 = mul i32 %213, %2
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32* %1, i64 %215
  %217 = getelementptr inbounds i32, i32* %216, i64 -1
  %218 = getelementptr inbounds i32, i32* %217, i64 %204
  %219 = icmp ult i32* %216, %218
  br i1 %219, label %220, label %228

220:                                              ; preds = %210, %220
  %221 = phi i32* [ %226, %220 ], [ %218, %210 ]
  %222 = phi i32* [ %225, %220 ], [ %216, %210 ]
  %223 = load i32, i32* %222, align 4
  %224 = load i32, i32* %221, align 4
  store i32 %224, i32* %222, align 4
  store i32 %223, i32* %221, align 4
  %225 = getelementptr inbounds i32, i32* %222, i64 1
  %226 = getelementptr inbounds i32, i32* %221, i64 -1
  %227 = icmp ult i32* %225, %226
  br i1 %227, label %220, label %228

228:                                              ; preds = %220, %210
  %229 = trunc i64 %211 to i32
  %230 = or i32 %229, 1
  %231 = mul i32 %230, %2
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i32, i32* %1, i64 %232
  %234 = getelementptr inbounds i32, i32* %233, i64 -1
  %235 = getelementptr inbounds i32, i32* %234, i64 %204
  %236 = icmp ult i32* %233, %235
  br i1 %236, label %259, label %267

237:                                              ; preds = %267
  %238 = trunc i64 %268 to i32
  br label %239

239:                                              ; preds = %237, %203
  %240 = phi i32 [ 0, %203 ], [ %238, %237 ]
  %241 = icmp eq i64 %206, 0
  br i1 %241, label %257, label %242

242:                                              ; preds = %239
  %243 = mul i32 %240, %2
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds i32, i32* %1, i64 %244
  %246 = getelementptr inbounds i32, i32* %245, i64 -1
  %247 = getelementptr inbounds i32, i32* %246, i64 %204
  %248 = icmp ult i32* %245, %247
  br i1 %248, label %249, label %257

249:                                              ; preds = %242, %249
  %250 = phi i32* [ %255, %249 ], [ %247, %242 ]
  %251 = phi i32* [ %254, %249 ], [ %245, %242 ]
  %252 = load i32, i32* %251, align 4
  %253 = load i32, i32* %250, align 4
  store i32 %253, i32* %251, align 4
  store i32 %252, i32* %250, align 4
  %254 = getelementptr inbounds i32, i32* %251, i64 1
  %255 = getelementptr inbounds i32, i32* %250, i64 -1
  %256 = icmp ult i32* %254, %255
  br i1 %256, label %249, label %257

257:                                              ; preds = %239, %242, %249, %196, %162, %153, %81, %69, %18
  %258 = phi i32 [ 0, %18 ], [ 0, %69 ], [ 0, %81 ], [ 0, %153 ], [ 0, %162 ], [ %198, %196 ], [ %198, %249 ], [ %198, %242 ], [ %198, %239 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  ret i32 %258

259:                                              ; preds = %228, %259
  %260 = phi i32* [ %265, %259 ], [ %235, %228 ]
  %261 = phi i32* [ %264, %259 ], [ %233, %228 ]
  %262 = load i32, i32* %261, align 4
  %263 = load i32, i32* %260, align 4
  store i32 %263, i32* %261, align 4
  store i32 %262, i32* %260, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 1
  %265 = getelementptr inbounds i32, i32* %260, i64 -1
  %266 = icmp ult i32* %264, %265
  br i1 %266, label %259, label %267

267:                                              ; preds = %259, %228
  %268 = add nuw nsw i64 %211, 2
  %269 = add i64 %212, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %237, label %210
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gtStripContig(%struct._TIFFRGBAImage*, i32*, i32, i32) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %10 = load %struct.tiff*, %struct.tiff** %9, align 8
  %11 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %12 = bitcast %union.anon.1* %11 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)**
  %13 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*)** %12, align 8
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  store i8* null, i8** %5, align 8
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %6, align 4
  %16 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #6
  store i16 -21846, i16* %7, align 2
  %17 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #6
  store i16 -21846, i16* %8, align 2
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 23
  %21 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %10, i32 530, i16* nonnull %7, i16* nonnull %8) #6
  %22 = load i16, i16* %8, align 2
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.tiff, %struct.tiff* %10, i64 0, i32 55
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* @TIFFFileName(%struct.tiff* %10) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %26, i8* %27, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i64 0, i64 0)) #6
  br label %193

28:                                               ; preds = %4
  %29 = call i64 @TIFFStripSize(%struct.tiff* %10) #6
  %30 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 8
  %31 = load i16, i16* %30, align 8
  switch i16 %31, label %57 [
    i16 1, label %32
    i16 5, label %32
    i16 2, label %37
    i16 6, label %37
    i16 3, label %42
    i16 7, label %42
    i16 4, label %47
    i16 8, label %47
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %36 [
    i16 2, label %57
    i16 6, label %57
    i16 3, label %52
    i16 7, label %52
    i16 4, label %35
    i16 8, label %35
  ]

35:                                               ; preds = %32, %32
  br label %52

36:                                               ; preds = %32
  br label %57

37:                                               ; preds = %28, %28
  %38 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %41 [
    i16 1, label %57
    i16 5, label %57
    i16 3, label %52
    i16 7, label %52
    i16 4, label %40
    i16 8, label %40
  ]

40:                                               ; preds = %37, %37
  br label %52

41:                                               ; preds = %37
  br label %57

42:                                               ; preds = %28, %28
  %43 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %44 = load i16, i16* %43, align 2
  switch i16 %44, label %46 [
    i16 1, label %52
    i16 5, label %52
    i16 2, label %45
    i16 6, label %45
    i16 4, label %57
    i16 8, label %57
  ]

45:                                               ; preds = %42, %42
  br label %52

46:                                               ; preds = %42
  br label %57

47:                                               ; preds = %28, %28
  %48 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %49 = load i16, i16* %48, align 2
  switch i16 %49, label %51 [
    i16 1, label %52
    i16 5, label %52
    i16 2, label %50
    i16 6, label %50
    i16 3, label %57
    i16 7, label %57
  ]

50:                                               ; preds = %47, %47
  br label %52

51:                                               ; preds = %47
  br label %57

52:                                               ; preds = %37, %37, %32, %32, %50, %45, %40, %35, %42, %42, %47, %47
  %53 = phi i32 [ 1, %47 ], [ 1, %47 ], [ 3, %42 ], [ 3, %42 ], [ 1, %35 ], [ 3, %40 ], [ 1, %45 ], [ 3, %50 ], [ 3, %32 ], [ 3, %32 ], [ 1, %37 ], [ 1, %37 ]
  %54 = add i32 %3, -1
  %55 = shl i32 %2, 1
  %56 = sub nsw i32 0, %55
  br label %57

57:                                               ; preds = %47, %47, %42, %42, %28, %37, %37, %32, %32, %36, %41, %46, %51, %52
  %58 = phi i1 [ true, %52 ], [ false, %51 ], [ false, %46 ], [ false, %41 ], [ false, %36 ], [ false, %32 ], [ false, %32 ], [ false, %37 ], [ false, %37 ], [ false, %28 ], [ false, %42 ], [ false, %42 ], [ false, %47 ], [ false, %47 ]
  %59 = phi i32 [ %53, %52 ], [ 0, %51 ], [ 0, %46 ], [ 0, %41 ], [ 0, %36 ], [ 2, %32 ], [ 2, %32 ], [ 2, %37 ], [ 2, %37 ], [ 0, %28 ], [ 2, %42 ], [ 2, %42 ], [ 2, %47 ], [ 2, %47 ]
  %60 = phi i32 [ %54, %52 ], [ 0, %51 ], [ 0, %46 ], [ 0, %41 ], [ 0, %36 ], [ 0, %32 ], [ 0, %32 ], [ 0, %37 ], [ 0, %37 ], [ 0, %28 ], [ 0, %42 ], [ 0, %42 ], [ 0, %47 ], [ 0, %47 ]
  %61 = phi i32 [ %56, %52 ], [ 0, %51 ], [ 0, %46 ], [ 0, %41 ], [ 0, %36 ], [ 0, %32 ], [ 0, %32 ], [ 0, %37 ], [ 0, %37 ], [ 0, %28 ], [ 0, %42 ], [ 0, %42 ], [ 0, %47 ], [ 0, %47 ]
  %62 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %10, i32 278, i32* nonnull %6) #6
  %63 = call i64 @TIFFScanlineSize(%struct.tiff* %10) #6
  %64 = call i32 @llvm.usub.sat.i32(i32 %19, i32 %2)
  %65 = icmp eq i32 %3, 0
  br i1 %65, label %190, label %66

66:                                               ; preds = %57
  %67 = icmp sgt i64 %63, 0
  %68 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 1
  %69 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 24
  %70 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  br label %71

71:                                               ; preds = %66, %110
  %72 = phi i32 [ %60, %66 ], [ %129, %110 ]
  %73 = phi i32 [ 0, %66 ], [ %130, %110 ]
  %74 = load i32, i32* %6, align 4
  %75 = load i32, i32* %20, align 8
  %76 = add i32 %75, %73
  %77 = urem i32 %76, %74
  %78 = sub i32 %74, %77
  %79 = add i32 %78, %73
  %80 = icmp ugt i32 %79, %3
  %81 = sub i32 %3, %73
  %82 = select i1 %80, i32 %81, i32 %78
  %83 = load i16, i16* %8, align 2
  %84 = zext i16 %83 to i32
  %85 = urem i32 %82, %84
  %86 = icmp eq i32 %85, 0
  %87 = sub nsw i32 %84, %85
  %88 = select i1 %86, i32 0, i32 %87
  %89 = add i32 %88, %77
  %90 = add i32 %89, %82
  %91 = zext i32 %90 to i64
  br i1 %67, label %92, label %99

92:                                               ; preds = %71
  %93 = udiv i64 9223372036854775807, %63
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %95, label %99

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.tiff, %struct.tiff* %10, i64 0, i32 55
  %97 = load i8*, i8** %96, align 8
  %98 = call i8* @TIFFFileName(%struct.tiff* %10) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %97, i8* %98, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #6
  br label %193

99:                                               ; preds = %71, %92
  %100 = call i32 @TIFFComputeStrip(%struct.tiff* %10, i32 %76, i16 zeroext 0) #6
  %101 = mul nsw i64 %63, %91
  %102 = call i64 @_TIFFReadEncodedStripAndAllocBuffer(%struct.tiff* %10, i32 %100, i8** nonnull %5, i64 %29, i64 %101) #6
  %103 = icmp eq i64 %102, -1
  %104 = load i8*, i8** %5, align 8
  br i1 %103, label %105, label %110

105:                                              ; preds = %99
  %106 = icmp eq i8* %104, null
  br i1 %106, label %132, label %107

107:                                              ; preds = %105
  %108 = load i32, i32* %68, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %132

110:                                              ; preds = %99, %107
  %111 = load i32, i32* %20, align 8
  %112 = add i32 %111, %73
  %113 = load i32, i32* %6, align 4
  %114 = urem i32 %112, %113
  %115 = zext i32 %114 to i64
  %116 = mul nsw i64 %63, %115
  %117 = load i32, i32* %69, align 4
  %118 = sext i32 %117 to i64
  %119 = load i16, i16* %70, align 2
  %120 = zext i16 %119 to i64
  %121 = mul nsw i64 %120, %118
  %122 = add nsw i64 %121, %116
  %123 = mul i32 %72, %2
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32* %1, i64 %124
  %126 = getelementptr inbounds i8, i8* %104, i64 %122
  call void %13(%struct._TIFFRGBAImage* %0, i32* %125, i32 0, i32 %72, i32 %2, i32 %82, i32 %64, i32 %61, i8* %126) #6
  %127 = sub nsw i32 0, %82
  %128 = select i1 %58, i32 %127, i32 %82
  %129 = add i32 %128, %72
  %130 = add i32 %82, %73
  %131 = icmp ult i32 %130, %3
  br i1 %131, label %71, label %132

132:                                              ; preds = %110, %107, %105
  %133 = phi i32 [ 1, %110 ], [ 0, %107 ], [ 0, %105 ]
  %134 = and i32 %59, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %190, label %136

136:                                              ; preds = %132
  %137 = zext i32 %2 to i64
  %138 = zext i32 %3 to i64
  %139 = and i64 %138, 1
  %140 = icmp eq i32 %3, 1
  br i1 %140, label %172, label %141

141:                                              ; preds = %136
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %203, %141
  %144 = phi i64 [ 0, %141 ], [ %204, %203 ]
  %145 = phi i64 [ %142, %141 ], [ %205, %203 ]
  %146 = trunc i64 %144 to i32
  %147 = mul i32 %146, %2
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %1, i64 %148
  %150 = getelementptr inbounds i32, i32* %149, i64 -1
  %151 = getelementptr inbounds i32, i32* %150, i64 %137
  %152 = icmp ult i32* %149, %151
  br i1 %152, label %153, label %161

153:                                              ; preds = %143, %153
  %154 = phi i32* [ %159, %153 ], [ %151, %143 ]
  %155 = phi i32* [ %158, %153 ], [ %149, %143 ]
  %156 = load i32, i32* %155, align 4
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %158 = getelementptr inbounds i32, i32* %155, i64 1
  %159 = getelementptr inbounds i32, i32* %154, i64 -1
  %160 = icmp ult i32* %158, %159
  br i1 %160, label %153, label %161

161:                                              ; preds = %153, %143
  %162 = trunc i64 %144 to i32
  %163 = or i32 %162, 1
  %164 = mul i32 %163, %2
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %1, i64 %165
  %167 = getelementptr inbounds i32, i32* %166, i64 -1
  %168 = getelementptr inbounds i32, i32* %167, i64 %137
  %169 = icmp ult i32* %166, %168
  br i1 %169, label %195, label %203

170:                                              ; preds = %203
  %171 = trunc i64 %204 to i32
  br label %172

172:                                              ; preds = %170, %136
  %173 = phi i32 [ 0, %136 ], [ %171, %170 ]
  %174 = icmp eq i64 %139, 0
  br i1 %174, label %190, label %175

175:                                              ; preds = %172
  %176 = mul i32 %173, %2
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i32, i32* %1, i64 %177
  %179 = getelementptr inbounds i32, i32* %178, i64 -1
  %180 = getelementptr inbounds i32, i32* %179, i64 %137
  %181 = icmp ult i32* %178, %180
  br i1 %181, label %182, label %190

182:                                              ; preds = %175, %182
  %183 = phi i32* [ %188, %182 ], [ %180, %175 ]
  %184 = phi i32* [ %187, %182 ], [ %178, %175 ]
  %185 = load i32, i32* %184, align 4
  %186 = load i32, i32* %183, align 4
  store i32 %186, i32* %184, align 4
  store i32 %185, i32* %183, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 1
  %188 = getelementptr inbounds i32, i32* %183, i64 -1
  %189 = icmp ult i32* %187, %188
  br i1 %189, label %182, label %190

190:                                              ; preds = %172, %175, %182, %132, %57
  %191 = phi i32 [ %133, %132 ], [ 1, %57 ], [ %133, %182 ], [ %133, %175 ], [ %133, %172 ]
  %192 = load i8*, i8** %5, align 8
  call void @_TIFFfree(i8* %192) #6
  br label %193

193:                                              ; preds = %95, %190, %24
  %194 = phi i32 [ 0, %24 ], [ %191, %190 ], [ 0, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  ret i32 %194

195:                                              ; preds = %161, %195
  %196 = phi i32* [ %201, %195 ], [ %168, %161 ]
  %197 = phi i32* [ %200, %195 ], [ %166, %161 ]
  %198 = load i32, i32* %197, align 4
  %199 = load i32, i32* %196, align 4
  store i32 %199, i32* %197, align 4
  store i32 %198, i32* %196, align 4
  %200 = getelementptr inbounds i32, i32* %197, i64 1
  %201 = getelementptr inbounds i32, i32* %196, i64 -1
  %202 = icmp ult i32* %200, %201
  br i1 %202, label %195, label %203

203:                                              ; preds = %195, %161
  %204 = add nuw nsw i64 %144, 2
  %205 = add i64 %145, -2
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %170, label %143
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBAAcontig8bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %346, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = icmp ugt i32 %4, 7
  %17 = zext i16 %11 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %15 to i64
  %20 = and i32 %4, 7
  br label %21

21:                                               ; preds = %13, %339
  %22 = phi i8* [ %8, %13 ], [ %343, %339 ]
  %23 = phi i32* [ %1, %13 ], [ %342, %339 ]
  %24 = phi i32 [ %5, %13 ], [ %344, %339 ]
  br i1 %16, label %25, label %183

25:                                               ; preds = %21, %25
  %26 = phi i32 [ %181, %25 ], [ %4, %21 ]
  %27 = phi i8* [ %180, %25 ], [ %22, %21 ]
  %28 = phi i32* [ %179, %25 ], [ %23, %21 ]
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = or i32 %34, %30
  %36 = getelementptr inbounds i8, i8* %27, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = or i32 %35, %39
  %41 = getelementptr inbounds i8, i8* %27, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw i32 %43, 24
  %45 = or i32 %40, %44
  %46 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %45, i32* %28, align 4
  %47 = getelementptr inbounds i8, i8* %27, i64 %17
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %49
  %55 = getelementptr inbounds i8, i8* %47, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 16
  %59 = or i32 %54, %58
  %60 = getelementptr inbounds i8, i8* %47, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw i32 %62, 24
  %64 = or i32 %59, %63
  %65 = getelementptr inbounds i32, i32* %28, i64 2
  store i32 %64, i32* %46, align 4
  %66 = getelementptr inbounds i8, i8* %47, i64 %17
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, i8* %66, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  %74 = getelementptr inbounds i8, i8* %66, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 16
  %78 = or i32 %73, %77
  %79 = getelementptr inbounds i8, i8* %66, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw i32 %81, 24
  %83 = or i32 %78, %82
  %84 = getelementptr inbounds i32, i32* %28, i64 3
  store i32 %83, i32* %65, align 4
  %85 = getelementptr inbounds i8, i8* %66, i64 %17
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds i8, i8* %85, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 8
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds i8, i8* %85, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 16
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds i8, i8* %85, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw i32 %100, 24
  %102 = or i32 %97, %101
  %103 = getelementptr inbounds i32, i32* %28, i64 4
  store i32 %102, i32* %84, align 4
  %104 = getelementptr inbounds i8, i8* %85, i64 %17
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = or i32 %110, %106
  %112 = getelementptr inbounds i8, i8* %104, i64 2
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = shl nuw nsw i32 %114, 16
  %116 = or i32 %111, %115
  %117 = getelementptr inbounds i8, i8* %104, i64 3
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = shl nuw i32 %119, 24
  %121 = or i32 %116, %120
  %122 = getelementptr inbounds i32, i32* %28, i64 5
  store i32 %121, i32* %103, align 4
  %123 = getelementptr inbounds i8, i8* %104, i64 %17
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds i8, i8* %123, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 8
  %130 = or i32 %129, %125
  %131 = getelementptr inbounds i8, i8* %123, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %130, %134
  %136 = getelementptr inbounds i8, i8* %123, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw i32 %138, 24
  %140 = or i32 %135, %139
  %141 = getelementptr inbounds i32, i32* %28, i64 6
  store i32 %140, i32* %122, align 4
  %142 = getelementptr inbounds i8, i8* %123, i64 %17
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds i8, i8* %142, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw nsw i32 %147, 8
  %149 = or i32 %148, %144
  %150 = getelementptr inbounds i8, i8* %142, i64 2
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = shl nuw nsw i32 %152, 16
  %154 = or i32 %149, %153
  %155 = getelementptr inbounds i8, i8* %142, i64 3
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = shl nuw i32 %157, 24
  %159 = or i32 %154, %158
  %160 = getelementptr inbounds i32, i32* %28, i64 7
  store i32 %159, i32* %141, align 4
  %161 = getelementptr inbounds i8, i8* %142, i64 %17
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds i8, i8* %161, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl nuw nsw i32 %166, 8
  %168 = or i32 %167, %163
  %169 = getelementptr inbounds i8, i8* %161, i64 2
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 16
  %173 = or i32 %168, %172
  %174 = getelementptr inbounds i8, i8* %161, i64 3
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw i32 %176, 24
  %178 = or i32 %173, %177
  %179 = getelementptr inbounds i32, i32* %28, i64 8
  store i32 %178, i32* %160, align 4
  %180 = getelementptr inbounds i8, i8* %161, i64 %17
  %181 = add i32 %26, -8
  %182 = icmp ugt i32 %181, 7
  br i1 %182, label %25, label %183

183:                                              ; preds = %25, %21
  %184 = phi i32* [ %23, %21 ], [ %179, %25 ]
  %185 = phi i8* [ %22, %21 ], [ %180, %25 ]
  %186 = phi i32 [ %4, %21 ], [ %20, %25 ]
  switch i32 %186, label %339 [
    i32 1, label %317
    i32 7, label %187
    i32 6, label %207
    i32 5, label %229
    i32 4, label %251
    i32 3, label %273
    i32 2, label %295
  ]

187:                                              ; preds = %183
  %188 = load i8, i8* %185, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds i8, i8* %185, i64 1
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = shl nuw nsw i32 %192, 8
  %194 = or i32 %193, %189
  %195 = getelementptr inbounds i8, i8* %185, i64 2
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl nuw nsw i32 %197, 16
  %199 = or i32 %194, %198
  %200 = getelementptr inbounds i8, i8* %185, i64 3
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = shl nuw i32 %202, 24
  %204 = or i32 %199, %203
  %205 = getelementptr inbounds i32, i32* %184, i64 1
  store i32 %204, i32* %184, align 4
  %206 = getelementptr inbounds i8, i8* %185, i64 %17
  br label %207

207:                                              ; preds = %183, %187
  %208 = phi i32* [ %205, %187 ], [ %184, %183 ]
  %209 = phi i8* [ %206, %187 ], [ %185, %183 ]
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds i8, i8* %209, i64 1
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = shl nuw nsw i32 %214, 8
  %216 = or i32 %215, %211
  %217 = getelementptr inbounds i8, i8* %209, i64 2
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = shl nuw nsw i32 %219, 16
  %221 = or i32 %216, %220
  %222 = getelementptr inbounds i8, i8* %209, i64 3
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = shl nuw i32 %224, 24
  %226 = or i32 %221, %225
  %227 = getelementptr inbounds i32, i32* %208, i64 1
  store i32 %226, i32* %208, align 4
  %228 = getelementptr inbounds i8, i8* %209, i64 %17
  br label %229

229:                                              ; preds = %183, %207
  %230 = phi i32* [ %227, %207 ], [ %184, %183 ]
  %231 = phi i8* [ %228, %207 ], [ %185, %183 ]
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = getelementptr inbounds i8, i8* %231, i64 1
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = shl nuw nsw i32 %236, 8
  %238 = or i32 %237, %233
  %239 = getelementptr inbounds i8, i8* %231, i64 2
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 16
  %243 = or i32 %238, %242
  %244 = getelementptr inbounds i8, i8* %231, i64 3
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl nuw i32 %246, 24
  %248 = or i32 %243, %247
  %249 = getelementptr inbounds i32, i32* %230, i64 1
  store i32 %248, i32* %230, align 4
  %250 = getelementptr inbounds i8, i8* %231, i64 %17
  br label %251

251:                                              ; preds = %183, %229
  %252 = phi i32* [ %249, %229 ], [ %184, %183 ]
  %253 = phi i8* [ %250, %229 ], [ %185, %183 ]
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = getelementptr inbounds i8, i8* %253, i64 1
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = shl nuw nsw i32 %258, 8
  %260 = or i32 %259, %255
  %261 = getelementptr inbounds i8, i8* %253, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = shl nuw nsw i32 %263, 16
  %265 = or i32 %260, %264
  %266 = getelementptr inbounds i8, i8* %253, i64 3
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = shl nuw i32 %268, 24
  %270 = or i32 %265, %269
  %271 = getelementptr inbounds i32, i32* %252, i64 1
  store i32 %270, i32* %252, align 4
  %272 = getelementptr inbounds i8, i8* %253, i64 %17
  br label %273

273:                                              ; preds = %183, %251
  %274 = phi i32* [ %271, %251 ], [ %184, %183 ]
  %275 = phi i8* [ %272, %251 ], [ %185, %183 ]
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = getelementptr inbounds i8, i8* %275, i64 1
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = shl nuw nsw i32 %280, 8
  %282 = or i32 %281, %277
  %283 = getelementptr inbounds i8, i8* %275, i64 2
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = shl nuw nsw i32 %285, 16
  %287 = or i32 %282, %286
  %288 = getelementptr inbounds i8, i8* %275, i64 3
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = shl nuw i32 %290, 24
  %292 = or i32 %287, %291
  %293 = getelementptr inbounds i32, i32* %274, i64 1
  store i32 %292, i32* %274, align 4
  %294 = getelementptr inbounds i8, i8* %275, i64 %17
  br label %295

295:                                              ; preds = %183, %273
  %296 = phi i32* [ %293, %273 ], [ %184, %183 ]
  %297 = phi i8* [ %294, %273 ], [ %185, %183 ]
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = getelementptr inbounds i8, i8* %297, i64 1
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = shl nuw nsw i32 %302, 8
  %304 = or i32 %303, %299
  %305 = getelementptr inbounds i8, i8* %297, i64 2
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = shl nuw nsw i32 %307, 16
  %309 = or i32 %304, %308
  %310 = getelementptr inbounds i8, i8* %297, i64 3
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = shl nuw i32 %312, 24
  %314 = or i32 %309, %313
  %315 = getelementptr inbounds i32, i32* %296, i64 1
  store i32 %314, i32* %296, align 4
  %316 = getelementptr inbounds i8, i8* %297, i64 %17
  br label %317

317:                                              ; preds = %183, %295
  %318 = phi i32* [ %315, %295 ], [ %184, %183 ]
  %319 = phi i8* [ %316, %295 ], [ %185, %183 ]
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = getelementptr inbounds i8, i8* %319, i64 1
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl nuw nsw i32 %324, 8
  %326 = or i32 %325, %321
  %327 = getelementptr inbounds i8, i8* %319, i64 2
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  %330 = shl nuw nsw i32 %329, 16
  %331 = or i32 %326, %330
  %332 = getelementptr inbounds i8, i8* %319, i64 3
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i32
  %335 = shl nuw i32 %334, 24
  %336 = or i32 %331, %335
  %337 = getelementptr inbounds i32, i32* %318, i64 1
  store i32 %336, i32* %318, align 4
  %338 = getelementptr inbounds i8, i8* %319, i64 %17
  br label %339

339:                                              ; preds = %183, %317
  %340 = phi i32* [ %337, %317 ], [ %184, %183 ]
  %341 = phi i8* [ %338, %317 ], [ %185, %183 ]
  %342 = getelementptr inbounds i32, i32* %340, i64 %18
  %343 = getelementptr inbounds i8, i8* %341, i64 %19
  %344 = add i32 %24, -1
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %21

346:                                              ; preds = %339, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBUAcontig8bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %70, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = icmp eq i32 %4, 0
  %17 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %18 = zext i16 %11 to i64
  %19 = sext i32 %7 to i64
  %20 = sext i32 %15 to i64
  br label %21

21:                                               ; preds = %13, %63
  %22 = phi i8* [ %8, %13 ], [ %67, %63 ]
  %23 = phi i32* [ %1, %13 ], [ %66, %63 ]
  %24 = phi i32 [ %5, %13 ], [ %68, %63 ]
  br i1 %16, label %63, label %25

25:                                               ; preds = %21, %25
  %26 = phi i8* [ %60, %25 ], [ %22, %21 ]
  %27 = phi i32* [ %59, %25 ], [ %23, %21 ]
  %28 = phi i32 [ %61, %25 ], [ %4, %21 ]
  %29 = getelementptr inbounds i8, i8* %26, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = load i8*, i8** %17, align 8
  %33 = zext i8 %30 to i64
  %34 = shl nuw nsw i64 %33, 8
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  %36 = load i8, i8* %26, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i8, i8* %26, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds i8, i8* %35, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i8, i8* %26, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds i8, i8* %35, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %46, 8
  %54 = shl nuw nsw i32 %52, 16
  %55 = shl nuw i32 %31, 24
  %56 = or i32 %55, %40
  %57 = or i32 %56, %53
  %58 = or i32 %57, %54
  %59 = getelementptr inbounds i32, i32* %27, i64 1
  store i32 %58, i32* %27, align 4
  %60 = getelementptr inbounds i8, i8* %26, i64 %18
  %61 = add i32 %28, -1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %25

63:                                               ; preds = %25, %21
  %64 = phi i32* [ %23, %21 ], [ %59, %25 ]
  %65 = phi i8* [ %22, %21 ], [ %60, %25 ]
  %66 = getelementptr inbounds i32, i32* %64, i64 %19
  %67 = getelementptr inbounds i8, i8* %65, i64 %20
  %68 = add i32 %24, -1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %21

70:                                               ; preds = %63, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBcontig8bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %286, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = icmp ugt i32 %4, 7
  %17 = zext i16 %11 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %15 to i64
  %20 = and i32 %4, 7
  br label %21

21:                                               ; preds = %13, %279
  %22 = phi i8* [ %8, %13 ], [ %283, %279 ]
  %23 = phi i32* [ %1, %13 ], [ %282, %279 ]
  %24 = phi i32 [ %5, %13 ], [ %284, %279 ]
  br i1 %16, label %25, label %151

25:                                               ; preds = %21, %25
  %26 = phi i32 [ %149, %25 ], [ %4, %21 ]
  %27 = phi i8* [ %148, %25 ], [ %22, %21 ]
  %28 = phi i32* [ %147, %25 ], [ %23, %21 ]
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = getelementptr inbounds i8, i8* %27, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 16
  %39 = or i32 %34, %30
  %40 = or i32 %39, %38
  %41 = or i32 %40, -16777216
  %42 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %41, i32* %28, align 4
  %43 = getelementptr inbounds i8, i8* %27, i64 %17
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %43, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = getelementptr inbounds i8, i8* %43, i64 2
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 16
  %54 = or i32 %49, %45
  %55 = or i32 %54, %53
  %56 = or i32 %55, -16777216
  %57 = getelementptr inbounds i32, i32* %28, i64 2
  store i32 %56, i32* %42, align 4
  %58 = getelementptr inbounds i8, i8* %43, i64 %17
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 8
  %65 = getelementptr inbounds i8, i8* %58, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = or i32 %64, %60
  %70 = or i32 %69, %68
  %71 = or i32 %70, -16777216
  %72 = getelementptr inbounds i32, i32* %28, i64 3
  store i32 %71, i32* %57, align 4
  %73 = getelementptr inbounds i8, i8* %58, i64 %17
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = getelementptr inbounds i8, i8* %73, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 16
  %84 = or i32 %79, %75
  %85 = or i32 %84, %83
  %86 = or i32 %85, -16777216
  %87 = getelementptr inbounds i32, i32* %28, i64 4
  store i32 %86, i32* %72, align 4
  %88 = getelementptr inbounds i8, i8* %73, i64 %17
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = getelementptr inbounds i8, i8* %88, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw nsw i32 %93, 8
  %95 = getelementptr inbounds i8, i8* %88, i64 2
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 16
  %99 = or i32 %94, %90
  %100 = or i32 %99, %98
  %101 = or i32 %100, -16777216
  %102 = getelementptr inbounds i32, i32* %28, i64 5
  store i32 %101, i32* %87, align 4
  %103 = getelementptr inbounds i8, i8* %88, i64 %17
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = getelementptr inbounds i8, i8* %103, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw nsw i32 %112, 16
  %114 = or i32 %109, %105
  %115 = or i32 %114, %113
  %116 = or i32 %115, -16777216
  %117 = getelementptr inbounds i32, i32* %28, i64 6
  store i32 %116, i32* %102, align 4
  %118 = getelementptr inbounds i8, i8* %103, i64 %17
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = getelementptr inbounds i8, i8* %118, i64 1
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = shl nuw nsw i32 %123, 8
  %125 = getelementptr inbounds i8, i8* %118, i64 2
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl nuw nsw i32 %127, 16
  %129 = or i32 %124, %120
  %130 = or i32 %129, %128
  %131 = or i32 %130, -16777216
  %132 = getelementptr inbounds i32, i32* %28, i64 7
  store i32 %131, i32* %117, align 4
  %133 = getelementptr inbounds i8, i8* %118, i64 %17
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = getelementptr inbounds i8, i8* %133, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw nsw i32 %138, 8
  %140 = getelementptr inbounds i8, i8* %133, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = shl nuw nsw i32 %142, 16
  %144 = or i32 %139, %135
  %145 = or i32 %144, %143
  %146 = or i32 %145, -16777216
  %147 = getelementptr inbounds i32, i32* %28, i64 8
  store i32 %146, i32* %132, align 4
  %148 = getelementptr inbounds i8, i8* %133, i64 %17
  %149 = add i32 %26, -8
  %150 = icmp ugt i32 %149, 7
  br i1 %150, label %25, label %151

151:                                              ; preds = %25, %21
  %152 = phi i32* [ %23, %21 ], [ %147, %25 ]
  %153 = phi i8* [ %22, %21 ], [ %148, %25 ]
  %154 = phi i32 [ %4, %21 ], [ %20, %25 ]
  switch i32 %154, label %279 [
    i32 1, label %261
    i32 7, label %155
    i32 6, label %171
    i32 5, label %189
    i32 4, label %207
    i32 3, label %225
    i32 2, label %243
  ]

155:                                              ; preds = %151
  %156 = load i8, i8* %153, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds i8, i8* %153, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = shl nuw nsw i32 %160, 8
  %162 = getelementptr inbounds i8, i8* %153, i64 2
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl nuw nsw i32 %164, 16
  %166 = or i32 %161, %157
  %167 = or i32 %166, %165
  %168 = or i32 %167, -16777216
  %169 = getelementptr inbounds i32, i32* %152, i64 1
  store i32 %168, i32* %152, align 4
  %170 = getelementptr inbounds i8, i8* %153, i64 %17
  br label %171

171:                                              ; preds = %151, %155
  %172 = phi i32* [ %169, %155 ], [ %152, %151 ]
  %173 = phi i8* [ %170, %155 ], [ %153, %151 ]
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds i8, i8* %173, i64 1
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = shl nuw nsw i32 %178, 8
  %180 = getelementptr inbounds i8, i8* %173, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = shl nuw nsw i32 %182, 16
  %184 = or i32 %179, %175
  %185 = or i32 %184, %183
  %186 = or i32 %185, -16777216
  %187 = getelementptr inbounds i32, i32* %172, i64 1
  store i32 %186, i32* %172, align 4
  %188 = getelementptr inbounds i8, i8* %173, i64 %17
  br label %189

189:                                              ; preds = %151, %171
  %190 = phi i32* [ %187, %171 ], [ %152, %151 ]
  %191 = phi i8* [ %188, %171 ], [ %153, %151 ]
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds i8, i8* %191, i64 1
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 8
  %198 = getelementptr inbounds i8, i8* %191, i64 2
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl nuw nsw i32 %200, 16
  %202 = or i32 %197, %193
  %203 = or i32 %202, %201
  %204 = or i32 %203, -16777216
  %205 = getelementptr inbounds i32, i32* %190, i64 1
  store i32 %204, i32* %190, align 4
  %206 = getelementptr inbounds i8, i8* %191, i64 %17
  br label %207

207:                                              ; preds = %151, %189
  %208 = phi i32* [ %205, %189 ], [ %152, %151 ]
  %209 = phi i8* [ %206, %189 ], [ %153, %151 ]
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds i8, i8* %209, i64 1
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = shl nuw nsw i32 %214, 8
  %216 = getelementptr inbounds i8, i8* %209, i64 2
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = shl nuw nsw i32 %218, 16
  %220 = or i32 %215, %211
  %221 = or i32 %220, %219
  %222 = or i32 %221, -16777216
  %223 = getelementptr inbounds i32, i32* %208, i64 1
  store i32 %222, i32* %208, align 4
  %224 = getelementptr inbounds i8, i8* %209, i64 %17
  br label %225

225:                                              ; preds = %151, %207
  %226 = phi i32* [ %223, %207 ], [ %152, %151 ]
  %227 = phi i8* [ %224, %207 ], [ %153, %151 ]
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = getelementptr inbounds i8, i8* %227, i64 1
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = shl nuw nsw i32 %232, 8
  %234 = getelementptr inbounds i8, i8* %227, i64 2
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = shl nuw nsw i32 %236, 16
  %238 = or i32 %233, %229
  %239 = or i32 %238, %237
  %240 = or i32 %239, -16777216
  %241 = getelementptr inbounds i32, i32* %226, i64 1
  store i32 %240, i32* %226, align 4
  %242 = getelementptr inbounds i8, i8* %227, i64 %17
  br label %243

243:                                              ; preds = %151, %225
  %244 = phi i32* [ %241, %225 ], [ %152, %151 ]
  %245 = phi i8* [ %242, %225 ], [ %153, %151 ]
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = getelementptr inbounds i8, i8* %245, i64 1
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = shl nuw nsw i32 %250, 8
  %252 = getelementptr inbounds i8, i8* %245, i64 2
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i32
  %255 = shl nuw nsw i32 %254, 16
  %256 = or i32 %251, %247
  %257 = or i32 %256, %255
  %258 = or i32 %257, -16777216
  %259 = getelementptr inbounds i32, i32* %244, i64 1
  store i32 %258, i32* %244, align 4
  %260 = getelementptr inbounds i8, i8* %245, i64 %17
  br label %261

261:                                              ; preds = %151, %243
  %262 = phi i32* [ %259, %243 ], [ %152, %151 ]
  %263 = phi i8* [ %260, %243 ], [ %153, %151 ]
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds i8, i8* %263, i64 1
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = shl nuw nsw i32 %268, 8
  %270 = getelementptr inbounds i8, i8* %263, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = shl nuw nsw i32 %272, 16
  %274 = or i32 %269, %265
  %275 = or i32 %274, %273
  %276 = or i32 %275, -16777216
  %277 = getelementptr inbounds i32, i32* %262, i64 1
  store i32 %276, i32* %262, align 4
  %278 = getelementptr inbounds i8, i8* %263, i64 %17
  br label %279

279:                                              ; preds = %151, %261
  %280 = phi i32* [ %277, %261 ], [ %152, %151 ]
  %281 = phi i8* [ %278, %261 ], [ %153, %151 ]
  %282 = getelementptr inbounds i32, i32* %280, i64 %18
  %283 = getelementptr inbounds i8, i8* %281, i64 %19
  %284 = add i32 %24, -1
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %21

286:                                              ; preds = %279, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBAAcontig16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %71, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = bitcast i8* %8 to i16*
  %17 = icmp eq i32 %4, 0
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %19 = zext i16 %11 to i64
  %20 = sext i32 %7 to i64
  %21 = sext i32 %15 to i64
  br label %22

22:                                               ; preds = %13, %64
  %23 = phi i16* [ %16, %13 ], [ %68, %64 ]
  %24 = phi i32* [ %1, %13 ], [ %67, %64 ]
  %25 = phi i32 [ %5, %13 ], [ %69, %64 ]
  br i1 %17, label %64, label %26

26:                                               ; preds = %22, %26
  %27 = phi i16* [ %61, %26 ], [ %23, %22 ]
  %28 = phi i32* [ %60, %26 ], [ %24, %22 ]
  %29 = phi i32 [ %62, %26 ], [ %4, %22 ]
  %30 = load i8*, i8** %18, align 8
  %31 = load i16, i16* %27, align 2
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i16, i16* %27, i64 1
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds i8, i8* %30, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %42, %35
  %44 = getelementptr inbounds i16, i16* %27, i64 2
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i64
  %47 = getelementptr inbounds i8, i8* %30, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 16
  %51 = or i32 %43, %50
  %52 = getelementptr inbounds i16, i16* %27, i64 3
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds i8, i8* %30, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw i32 %57, 24
  %59 = or i32 %51, %58
  %60 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %59, i32* %28, align 4
  %61 = getelementptr inbounds i16, i16* %27, i64 %19
  %62 = add i32 %29, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %26

64:                                               ; preds = %26, %22
  %65 = phi i32* [ %24, %22 ], [ %60, %26 ]
  %66 = phi i16* [ %23, %22 ], [ %61, %26 ]
  %67 = getelementptr inbounds i32, i32* %65, i64 %20
  %68 = getelementptr inbounds i16, i16* %66, i64 %21
  %69 = add i32 %25, -1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %22

71:                                               ; preds = %64, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBUAcontig16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %85, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = bitcast i8* %8 to i16*
  %17 = icmp eq i32 %4, 0
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %19 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %20 = zext i16 %11 to i64
  %21 = sext i32 %7 to i64
  %22 = sext i32 %15 to i64
  br label %23

23:                                               ; preds = %13, %78
  %24 = phi i16* [ %16, %13 ], [ %82, %78 ]
  %25 = phi i32* [ %1, %13 ], [ %81, %78 ]
  %26 = phi i32 [ %5, %13 ], [ %83, %78 ]
  br i1 %17, label %78, label %27

27:                                               ; preds = %23, %27
  %28 = phi i16* [ %75, %27 ], [ %24, %23 ]
  %29 = phi i32* [ %74, %27 ], [ %25, %23 ]
  %30 = phi i32 [ %76, %27 ], [ %4, %23 ]
  %31 = load i8*, i8** %18, align 8
  %32 = getelementptr inbounds i16, i16* %28, i64 3
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = load i8*, i8** %19, align 8
  %39 = zext i8 %36 to i64
  %40 = shl nuw nsw i64 %39, 8
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = load i16, i16* %28, align 2
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds i8, i8* %31, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds i8, i8* %41, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i16, i16* %28, i64 1
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i64
  %53 = getelementptr inbounds i8, i8* %31, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i8, i8* %41, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = getelementptr inbounds i16, i16* %28, i64 2
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i64
  %62 = getelementptr inbounds i8, i8* %31, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %41, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %58, 8
  %69 = shl nuw nsw i32 %67, 16
  %70 = shl nuw i32 %37, 24
  %71 = or i32 %70, %49
  %72 = or i32 %71, %68
  %73 = or i32 %72, %69
  %74 = getelementptr inbounds i32, i32* %29, i64 1
  store i32 %73, i32* %29, align 4
  %75 = getelementptr inbounds i16, i16* %28, i64 %20
  %76 = add i32 %30, -1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %27

78:                                               ; preds = %27, %23
  %79 = phi i32* [ %25, %23 ], [ %74, %27 ]
  %80 = phi i16* [ %24, %23 ], [ %75, %27 ]
  %81 = getelementptr inbounds i32, i32* %79, i64 %21
  %82 = getelementptr inbounds i16, i16* %80, i64 %22
  %83 = add i32 %26, -1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %23

85:                                               ; preds = %78, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBcontig16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %64, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = bitcast i8* %8 to i16*
  %17 = icmp eq i32 %4, 0
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %19 = zext i16 %11 to i64
  %20 = sext i32 %7 to i64
  %21 = sext i32 %15 to i64
  br label %22

22:                                               ; preds = %13, %57
  %23 = phi i16* [ %16, %13 ], [ %61, %57 ]
  %24 = phi i32* [ %1, %13 ], [ %60, %57 ]
  %25 = phi i32 [ %5, %13 ], [ %62, %57 ]
  br i1 %17, label %57, label %26

26:                                               ; preds = %22, %26
  %27 = phi i16* [ %54, %26 ], [ %23, %22 ]
  %28 = phi i32* [ %53, %26 ], [ %24, %22 ]
  %29 = phi i32 [ %55, %26 ], [ %4, %22 ]
  %30 = load i8*, i8** %18, align 8
  %31 = load i16, i16* %27, align 2
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i16, i16* %27, i64 1
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds i8, i8* %30, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = getelementptr inbounds i16, i16* %27, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i64
  %46 = getelementptr inbounds i8, i8* %30, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = or i32 %42, %35
  %51 = or i32 %50, %49
  %52 = or i32 %51, -16777216
  %53 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %52, i32* %28, align 4
  %54 = getelementptr inbounds i16, i16* %27, i64 %19
  %55 = add i32 %29, -1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %26

57:                                               ; preds = %26, %22
  %58 = phi i32* [ %24, %22 ], [ %53, %26 ]
  %59 = phi i16* [ %23, %22 ], [ %54, %26 ]
  %60 = getelementptr inbounds i32, i32* %58, i64 %20
  %61 = getelementptr inbounds i16, i16* %59, i64 %21
  %62 = add i32 %25, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %22

64:                                               ; preds = %57, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @buildMap(%struct._TIFFRGBAImage*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  switch i16 %3, label %656 [
    i16 2, label %4
    i16 6, label %4
    i16 5, label %4
    i16 1, label %8
    i16 0, label %8
    i16 3, label %295
  ]

4:                                                ; preds = %1, %1, %1
  %5 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 6
  %6 = load i16, i16* %5, align 4
  %7 = icmp eq i16 %6, 8
  br i1 %7, label %656, label %8

8:                                                ; preds = %4, %1, %1
  %9 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 6
  %10 = load i16, i16* %9, align 4
  %11 = zext i16 %10 to i64
  %12 = shl nsw i64 -1, %11
  %13 = trunc i64 %12 to i32
  %14 = xor i32 %13, -1
  %15 = icmp eq i16 %10, 16
  %16 = select i1 %15, i32 255, i32 %14
  %17 = add i32 %16, 1
  %18 = sext i32 %17 to i64
  %19 = tail call i8* @_TIFFmalloc(i64 %18) #6
  %20 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 16
  store i8* %19, i8** %20, align 8
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %8
  %23 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %24 = load %struct.tiff*, %struct.tiff** %23, align 8
  %25 = getelementptr inbounds %struct.tiff, %struct.tiff* %24, i64 0, i32 55
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i8* @TIFFFileName(%struct.tiff* %24) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %26, i8* %27, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.36, i64 0, i64 0)) #6
  br label %656

28:                                               ; preds = %8
  %29 = load i16, i16* %2, align 4
  %30 = icmp eq i16 %29, 0
  %31 = icmp slt i32 %16, 0
  br i1 %30, label %42, label %32

32:                                               ; preds = %28
  br i1 %31, label %113, label %33

33:                                               ; preds = %32
  store i8 0, i8* %19, align 1
  %34 = icmp eq i32 %16, 0
  br i1 %34, label %113, label %35

35:                                               ; preds = %33
  %36 = zext i32 %17 to i64
  %37 = add nsw i64 %36, -1
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %17, 2
  br i1 %39, label %103, label %40

40:                                               ; preds = %35
  %41 = sub nsw i64 %37, %38
  br label %73

42:                                               ; preds = %28
  br i1 %31, label %113, label %43

43:                                               ; preds = %42
  store i8 -1, i8* %19, align 1
  %44 = icmp eq i32 %16, 0
  br i1 %44, label %113, label %45

45:                                               ; preds = %43
  %46 = zext i32 %17 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %47, 1
  %49 = icmp eq i32 %17, 2
  br i1 %49, label %92, label %50

50:                                               ; preds = %45
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 1, %50 ], [ %70, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %71, %52 ]
  %55 = load i8*, i8** %20, align 8
  %56 = trunc i64 %53 to i32
  %57 = sub nsw i32 %16, %56
  %58 = mul nsw i32 %57, 255
  %59 = sdiv i32 %58, %16
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %55, i64 %53
  store i8 %60, i8* %61, align 1
  %62 = add nuw nsw i64 %53, 1
  %63 = load i8*, i8** %20, align 8
  %64 = trunc i64 %62 to i32
  %65 = sub nsw i32 %16, %64
  %66 = mul nsw i32 %65, 255
  %67 = sdiv i32 %66, %16
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, i8* %63, i64 %62
  store i8 %68, i8* %69, align 1
  %70 = add nuw nsw i64 %53, 2
  %71 = add i64 %54, -2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %92, label %52

73:                                               ; preds = %73, %40
  %74 = phi i64 [ 1, %40 ], [ %89, %73 ]
  %75 = phi i64 [ %41, %40 ], [ %90, %73 ]
  %76 = load i8*, i8** %20, align 8
  %77 = trunc i64 %74 to i32
  %78 = mul nsw i32 %77, 255
  %79 = sdiv i32 %78, %16
  %80 = trunc i32 %79 to i8
  %81 = getelementptr inbounds i8, i8* %76, i64 %74
  store i8 %80, i8* %81, align 1
  %82 = add nuw nsw i64 %74, 1
  %83 = load i8*, i8** %20, align 8
  %84 = trunc i64 %82 to i32
  %85 = mul nsw i32 %84, 255
  %86 = sdiv i32 %85, %16
  %87 = trunc i32 %86 to i8
  %88 = getelementptr inbounds i8, i8* %83, i64 %82
  store i8 %87, i8* %88, align 1
  %89 = add nuw nsw i64 %74, 2
  %90 = add i64 %75, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %103, label %73

92:                                               ; preds = %52, %45
  %93 = phi i64 [ 1, %45 ], [ %70, %52 ]
  %94 = icmp eq i64 %48, 0
  br i1 %94, label %113, label %95

95:                                               ; preds = %92
  %96 = load i8*, i8** %20, align 8
  %97 = trunc i64 %93 to i32
  %98 = sub nsw i32 %16, %97
  %99 = mul nsw i32 %98, 255
  %100 = sdiv i32 %99, %16
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds i8, i8* %96, i64 %93
  store i8 %101, i8* %102, align 1
  br label %113

103:                                              ; preds = %73, %35
  %104 = phi i64 [ 1, %35 ], [ %89, %73 ]
  %105 = icmp eq i64 %38, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = load i8*, i8** %20, align 8
  %108 = trunc i64 %104 to i32
  %109 = mul nsw i32 %108, 255
  %110 = sdiv i32 %109, %16
  %111 = trunc i32 %110 to i8
  %112 = getelementptr inbounds i8, i8* %107, i64 %104
  store i8 %111, i8* %112, align 1
  br label %113

113:                                              ; preds = %106, %103, %95, %92, %33, %43, %42, %32
  %114 = load i16, i16* %9, align 4
  %115 = icmp ult i16 %114, 17
  br i1 %115, label %116, label %656

116:                                              ; preds = %113
  %117 = load i16, i16* %2, align 4
  %118 = icmp ult i16 %117, 2
  br i1 %118, label %119, label %656

119:                                              ; preds = %116
  %120 = load i8*, i8** %20, align 8
  %121 = trunc i16 %114 to i8
  %122 = udiv i8 8, %121
  %123 = zext i8 %122 to i64
  %124 = icmp ugt i16 %114, 8
  %125 = shl nuw nsw i64 %123, 10
  %126 = add nuw nsw i64 %125, 2048
  %127 = select i1 %124, i64 3072, i64 %126
  %128 = tail call i8* @_TIFFmalloc(i64 %127) #6
  %129 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %130 = bitcast i32*** %129 to i8**
  store i8* %128, i8** %130, align 8
  %131 = icmp eq i8* %128, null
  br i1 %131, label %132, label %138

132:                                              ; preds = %119
  %133 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %134 = load %struct.tiff*, %struct.tiff** %133, align 8
  %135 = getelementptr inbounds %struct.tiff, %struct.tiff* %134, i64 0, i32 55
  %136 = load i8*, i8** %135, align 8
  %137 = tail call i8* @TIFFFileName(%struct.tiff* %134) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %136, i8* %137, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i64 0, i64 0)) #6
  br label %656

138:                                              ; preds = %119
  %139 = bitcast i8* %128 to i32**
  %140 = getelementptr inbounds i8, i8* %128, i64 2048
  %141 = bitcast i8* %140 to i32*
  br label %142

142:                                              ; preds = %291, %138
  %143 = phi i32** [ %139, %138 ], [ %292, %291 ]
  %144 = phi i64 [ 0, %138 ], [ %289, %291 ]
  %145 = phi i32* [ %141, %138 ], [ %288, %291 ]
  %146 = getelementptr inbounds i32*, i32** %143, i64 %144
  store i32* %145, i32** %146, align 8
  switch i16 %114, label %287 [
    i16 1, label %147
    i16 2, label %226
    i16 4, label %261
    i16 8, label %274
    i16 16, label %274
  ]

147:                                              ; preds = %142
  %148 = lshr i64 %144, 7
  %149 = and i64 %148, 33554431
  %150 = getelementptr inbounds i8, i8* %120, i64 %149
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = shl nuw nsw i32 %152, 8
  %154 = shl nuw nsw i32 %152, 16
  %155 = or i32 %153, %152
  %156 = or i32 %155, %154
  %157 = or i32 %156, -16777216
  %158 = getelementptr inbounds i32, i32* %145, i64 1
  store i32 %157, i32* %145, align 4
  %159 = lshr i64 %144, 6
  %160 = and i64 %159, 1
  %161 = getelementptr inbounds i8, i8* %120, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 8
  %165 = shl nuw nsw i32 %163, 16
  %166 = or i32 %164, %163
  %167 = or i32 %166, %165
  %168 = or i32 %167, -16777216
  %169 = getelementptr inbounds i32, i32* %145, i64 2
  store i32 %168, i32* %158, align 4
  %170 = lshr i64 %144, 5
  %171 = and i64 %170, 1
  %172 = getelementptr inbounds i8, i8* %120, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = shl nuw nsw i32 %174, 8
  %176 = shl nuw nsw i32 %174, 16
  %177 = or i32 %175, %174
  %178 = or i32 %177, %176
  %179 = or i32 %178, -16777216
  %180 = getelementptr inbounds i32, i32* %145, i64 3
  store i32 %179, i32* %169, align 4
  %181 = lshr i64 %144, 4
  %182 = and i64 %181, 1
  %183 = getelementptr inbounds i8, i8* %120, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = shl nuw nsw i32 %185, 16
  %188 = or i32 %186, %185
  %189 = or i32 %188, %187
  %190 = or i32 %189, -16777216
  %191 = getelementptr inbounds i32, i32* %145, i64 4
  store i32 %190, i32* %180, align 4
  %192 = lshr i64 %144, 3
  %193 = and i64 %192, 1
  %194 = getelementptr inbounds i8, i8* %120, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 8
  %198 = shl nuw nsw i32 %196, 16
  %199 = or i32 %197, %196
  %200 = or i32 %199, %198
  %201 = or i32 %200, -16777216
  %202 = getelementptr inbounds i32, i32* %145, i64 5
  store i32 %201, i32* %191, align 4
  %203 = lshr i64 %144, 2
  %204 = and i64 %203, 1
  %205 = getelementptr inbounds i8, i8* %120, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 8
  %209 = shl nuw nsw i32 %207, 16
  %210 = or i32 %208, %207
  %211 = or i32 %210, %209
  %212 = or i32 %211, -16777216
  %213 = getelementptr inbounds i32, i32* %145, i64 6
  store i32 %212, i32* %202, align 4
  %214 = lshr i64 %144, 1
  %215 = and i64 %214, 1
  %216 = getelementptr inbounds i8, i8* %120, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = shl nuw nsw i32 %218, 8
  %220 = shl nuw nsw i32 %218, 16
  %221 = or i32 %219, %218
  %222 = or i32 %221, %220
  %223 = or i32 %222, -16777216
  %224 = getelementptr inbounds i32, i32* %145, i64 7
  store i32 %223, i32* %213, align 4
  %225 = and i64 %144, 1
  br label %274

226:                                              ; preds = %142
  %227 = lshr i64 %144, 6
  %228 = and i64 %227, 67108863
  %229 = getelementptr inbounds i8, i8* %120, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = shl nuw nsw i32 %231, 8
  %233 = shl nuw nsw i32 %231, 16
  %234 = or i32 %232, %231
  %235 = or i32 %234, %233
  %236 = or i32 %235, -16777216
  %237 = getelementptr inbounds i32, i32* %145, i64 1
  store i32 %236, i32* %145, align 4
  %238 = lshr i64 %144, 4
  %239 = and i64 %238, 3
  %240 = getelementptr inbounds i8, i8* %120, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = shl nuw nsw i32 %242, 8
  %244 = shl nuw nsw i32 %242, 16
  %245 = or i32 %243, %242
  %246 = or i32 %245, %244
  %247 = or i32 %246, -16777216
  %248 = getelementptr inbounds i32, i32* %145, i64 2
  store i32 %247, i32* %237, align 4
  %249 = lshr i64 %144, 2
  %250 = and i64 %249, 3
  %251 = getelementptr inbounds i8, i8* %120, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = shl nuw nsw i32 %253, 8
  %255 = shl nuw nsw i32 %253, 16
  %256 = or i32 %254, %253
  %257 = or i32 %256, %255
  %258 = or i32 %257, -16777216
  %259 = getelementptr inbounds i32, i32* %145, i64 3
  store i32 %258, i32* %248, align 4
  %260 = and i64 %144, 3
  br label %274

261:                                              ; preds = %142
  %262 = lshr i64 %144, 4
  %263 = and i64 %262, 268435455
  %264 = getelementptr inbounds i8, i8* %120, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = shl nuw nsw i32 %266, 8
  %268 = shl nuw nsw i32 %266, 16
  %269 = or i32 %267, %266
  %270 = or i32 %269, %268
  %271 = or i32 %270, -16777216
  %272 = getelementptr inbounds i32, i32* %145, i64 1
  store i32 %271, i32* %145, align 4
  %273 = and i64 %144, 15
  br label %274

274:                                              ; preds = %142, %142, %147, %226, %261
  %275 = phi i64 [ %225, %147 ], [ %260, %226 ], [ %273, %261 ], [ %144, %142 ], [ %144, %142 ]
  %276 = phi i64 [ 8, %147 ], [ 4, %226 ], [ 2, %261 ], [ 1, %142 ], [ 1, %142 ]
  %277 = phi i32* [ %224, %147 ], [ %259, %226 ], [ %272, %261 ], [ %145, %142 ], [ %145, %142 ]
  %278 = getelementptr inbounds i8, i8* %120, i64 %275
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = shl nuw nsw i32 %280, 8
  %282 = shl nuw nsw i32 %280, 16
  %283 = or i32 %281, %280
  %284 = or i32 %283, %282
  %285 = or i32 %284, -16777216
  %286 = getelementptr inbounds i32, i32* %145, i64 %276
  store i32 %285, i32* %277, align 4
  br label %287

287:                                              ; preds = %274, %142
  %288 = phi i32* [ %145, %142 ], [ %286, %274 ]
  %289 = add nuw nsw i64 %144, 1
  %290 = icmp eq i64 %289, 256
  br i1 %290, label %293, label %291

291:                                              ; preds = %287
  %292 = load i32**, i32*** %129, align 8
  br label %142

293:                                              ; preds = %287
  %294 = load i8*, i8** %20, align 8
  tail call void @_TIFFfree(i8* %294) #6
  store i8* null, i8** %20, align 8
  br label %656

295:                                              ; preds = %1
  %296 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 11
  %297 = load i16*, i16** %296, align 8
  %298 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 12
  %299 = load i16*, i16** %298, align 8
  %300 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 13
  %301 = load i16*, i16** %300, align 8
  %302 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 6
  %303 = load i16, i16* %302, align 4
  %304 = zext i16 %303 to i64
  %305 = shl i64 1, %304
  br label %306

306:                                              ; preds = %320, %295
  %307 = phi i16* [ %297, %295 ], [ %314, %320 ]
  %308 = phi i16* [ %299, %295 ], [ %321, %320 ]
  %309 = phi i16* [ %301, %295 ], [ %322, %320 ]
  %310 = phi i64 [ %305, %295 ], [ %311, %320 ]
  %311 = add nsw i64 %310, -1
  %312 = icmp sgt i64 %310, 0
  br i1 %312, label %313, label %449

313:                                              ; preds = %306
  %314 = getelementptr inbounds i16, i16* %307, i64 1
  %315 = load i16, i16* %307, align 2
  %316 = icmp ugt i16 %315, 255
  br i1 %316, label %325, label %317

317:                                              ; preds = %313
  %318 = load i16, i16* %308, align 2
  %319 = icmp ugt i16 %318, 255
  br i1 %319, label %325, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds i16, i16* %308, i64 1
  %322 = getelementptr inbounds i16, i16* %309, i64 1
  %323 = load i16, i16* %309, align 2
  %324 = icmp ugt i16 %323, 255
  br i1 %324, label %325, label %306

325:                                              ; preds = %320, %317, %313
  %326 = shl nsw i64 -1, %304
  %327 = xor i64 %326, -1
  %328 = sub i64 0, %326
  %329 = icmp slt i64 %327, 0
  %330 = select i1 %329, i64 %327, i64 0
  %331 = sub i64 %328, %330
  %332 = icmp ult i64 %331, 8
  br i1 %332, label %434, label %333

333:                                              ; preds = %325
  %334 = icmp slt i64 %327, 0
  %335 = select i1 %334, i64 %327, i64 0
  %336 = getelementptr i16, i16* %297, i64 %335
  %337 = sub i64 0, %326
  %338 = getelementptr i16, i16* %297, i64 %337
  %339 = getelementptr i16, i16* %299, i64 %335
  %340 = getelementptr i16, i16* %299, i64 %337
  %341 = getelementptr i16, i16* %301, i64 %335
  %342 = getelementptr i16, i16* %301, i64 %337
  %343 = icmp ult i16* %336, %340
  %344 = icmp ult i16* %339, %338
  %345 = and i1 %343, %344
  %346 = icmp ult i16* %336, %342
  %347 = icmp ult i16* %341, %338
  %348 = and i1 %346, %347
  %349 = or i1 %345, %348
  %350 = icmp ult i16* %339, %342
  %351 = icmp ult i16* %341, %340
  %352 = and i1 %350, %351
  %353 = or i1 %349, %352
  br i1 %353, label %434, label %354

354:                                              ; preds = %333
  %355 = and i64 %331, -8
  %356 = sub i64 %327, %355
  %357 = add i64 %355, -8
  %358 = lshr exact i64 %357, 3
  %359 = add nuw nsw i64 %358, 1
  %360 = and i64 %359, 1
  %361 = icmp eq i64 %357, 0
  br i1 %361, label %409, label %362

362:                                              ; preds = %354
  %363 = sub nuw nsw i64 %359, %360
  %364 = getelementptr inbounds i16, i16* %297, i64 -7
  %365 = getelementptr inbounds i16, i16* %299, i64 -7
  %366 = getelementptr inbounds i16, i16* %301, i64 -7
  %367 = getelementptr inbounds i16, i16* %297, i64 -7
  %368 = getelementptr inbounds i16, i16* %299, i64 -7
  %369 = getelementptr inbounds i16, i16* %301, i64 -7
  br label %370

370:                                              ; preds = %370, %362
  %371 = phi i64 [ 0, %362 ], [ %406, %370 ]
  %372 = phi i64 [ %363, %362 ], [ %407, %370 ]
  %373 = sub i64 %327, %371
  %374 = getelementptr inbounds i16, i16* %364, i64 %373
  %375 = bitcast i16* %374 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !8, !noalias !11
  %377 = lshr <8 x i16> %376, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %378 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %378, align 2, !alias.scope !8, !noalias !11
  %379 = getelementptr inbounds i16, i16* %365, i64 %373
  %380 = bitcast i16* %379 to <8 x i16>*
  %381 = load <8 x i16>, <8 x i16>* %380, align 2, !alias.scope !14, !noalias !15
  %382 = lshr <8 x i16> %381, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %383 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %382, <8 x i16>* %383, align 2, !alias.scope !14, !noalias !15
  %384 = getelementptr inbounds i16, i16* %366, i64 %373
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !15
  %387 = lshr <8 x i16> %386, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %388 = bitcast i16* %384 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %388, align 2, !alias.scope !15
  %389 = or i64 %371, 8
  %390 = sub i64 %327, %389
  %391 = getelementptr inbounds i16, i16* %367, i64 %390
  %392 = bitcast i16* %391 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !8, !noalias !11
  %394 = lshr <8 x i16> %393, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %395 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %395, align 2, !alias.scope !8, !noalias !11
  %396 = getelementptr inbounds i16, i16* %368, i64 %390
  %397 = bitcast i16* %396 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !14, !noalias !15
  %399 = lshr <8 x i16> %398, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %400 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %400, align 2, !alias.scope !14, !noalias !15
  %401 = getelementptr inbounds i16, i16* %369, i64 %390
  %402 = bitcast i16* %401 to <8 x i16>*
  %403 = load <8 x i16>, <8 x i16>* %402, align 2, !alias.scope !15
  %404 = lshr <8 x i16> %403, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %405 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %405, align 2, !alias.scope !15
  %406 = add i64 %371, 16
  %407 = add i64 %372, -2
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %370, !llvm.loop !16

409:                                              ; preds = %370, %354
  %410 = phi i64 [ 0, %354 ], [ %406, %370 ]
  %411 = icmp eq i64 %360, 0
  br i1 %411, label %432, label %412

412:                                              ; preds = %409
  %413 = sub i64 %327, %410
  %414 = getelementptr inbounds i16, i16* %297, i64 -7
  %415 = getelementptr inbounds i16, i16* %414, i64 %413
  %416 = bitcast i16* %415 to <8 x i16>*
  %417 = load <8 x i16>, <8 x i16>* %416, align 2, !alias.scope !8, !noalias !11
  %418 = lshr <8 x i16> %417, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %419 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %419, align 2, !alias.scope !8, !noalias !11
  %420 = getelementptr inbounds i16, i16* %299, i64 -7
  %421 = getelementptr inbounds i16, i16* %420, i64 %413
  %422 = bitcast i16* %421 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !14, !noalias !15
  %424 = lshr <8 x i16> %423, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %425 = bitcast i16* %421 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %425, align 2, !alias.scope !14, !noalias !15
  %426 = getelementptr inbounds i16, i16* %301, i64 -7
  %427 = getelementptr inbounds i16, i16* %426, i64 %413
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !15
  %430 = lshr <8 x i16> %429, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %431 = bitcast i16* %427 to <8 x i16>*
  store <8 x i16> %430, <8 x i16>* %431, align 2, !alias.scope !15
  br label %432

432:                                              ; preds = %409, %412
  %433 = icmp eq i64 %331, %355
  br i1 %433, label %455, label %434

434:                                              ; preds = %432, %333, %325
  %435 = phi i64 [ %327, %333 ], [ %327, %325 ], [ %356, %432 ]
  br label %436

436:                                              ; preds = %434, %436
  %437 = phi i64 [ %447, %436 ], [ %435, %434 ]
  %438 = getelementptr inbounds i16, i16* %297, i64 %437
  %439 = load i16, i16* %438, align 2
  %440 = lshr i16 %439, 8
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %299, i64 %437
  %442 = load i16, i16* %441, align 2
  %443 = lshr i16 %442, 8
  store i16 %443, i16* %441, align 2
  %444 = getelementptr inbounds i16, i16* %301, i64 %437
  %445 = load i16, i16* %444, align 2
  %446 = lshr i16 %445, 8
  store i16 %446, i16* %444, align 2
  %447 = add nsw i64 %437, -1
  %448 = icmp sgt i64 %437, 0
  br i1 %448, label %436, label %455, !llvm.loop !17

449:                                              ; preds = %306
  %450 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %451 = load %struct.tiff*, %struct.tiff** %450, align 8
  %452 = getelementptr inbounds %struct.tiff, %struct.tiff* %451, i64 0, i32 55
  %453 = load i8*, i8** %452, align 8
  %454 = tail call i8* @TIFFFileName(%struct.tiff* %451) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %453, i8* %454, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0)) #6
  br label %455

455:                                              ; preds = %436, %432, %449
  %456 = load i16, i16* %302, align 4
  %457 = icmp ult i16 %456, 9
  br i1 %457, label %458, label %656

458:                                              ; preds = %455
  %459 = trunc i16 %456 to i8
  %460 = udiv i8 8, %459
  %461 = zext i8 %460 to i64
  %462 = load i16*, i16** %296, align 8
  %463 = load i16*, i16** %298, align 8
  %464 = load i16*, i16** %300, align 8
  %465 = shl nuw nsw i64 %461, 10
  %466 = add nuw nsw i64 %465, 2048
  %467 = tail call i8* @_TIFFmalloc(i64 %466) #6
  %468 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %469 = bitcast i32*** %468 to i8**
  store i8* %467, i8** %469, align 8
  %470 = icmp eq i8* %467, null
  br i1 %470, label %471, label %477

471:                                              ; preds = %458
  %472 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %473 = load %struct.tiff*, %struct.tiff** %472, align 8
  %474 = getelementptr inbounds %struct.tiff, %struct.tiff* %473, i64 0, i32 55
  %475 = load i8*, i8** %474, align 8
  %476 = tail call i8* @TIFFFileName(%struct.tiff* %473) #6
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %475, i8* %476, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0)) #6
  br label %656

477:                                              ; preds = %458
  %478 = bitcast i8* %467 to i32**
  %479 = getelementptr inbounds i8, i8* %467, i64 2048
  %480 = bitcast i8* %479 to i32*
  br label %481

481:                                              ; preds = %654, %477
  %482 = phi i32** [ %478, %477 ], [ %655, %654 ]
  %483 = phi i64 [ 0, %477 ], [ %652, %654 ]
  %484 = phi i32* [ %480, %477 ], [ %651, %654 ]
  %485 = getelementptr inbounds i32*, i32** %482, i64 %483
  store i32* %484, i32** %485, align 8
  switch i16 %456, label %650 [
    i16 1, label %486
    i16 2, label %559
    i16 4, label %605
    i16 8, label %630
  ]

486:                                              ; preds = %481
  %487 = lshr i64 %483, 7
  %488 = and i64 %487, 1
  %489 = getelementptr inbounds i16, i16* %462, i64 %488
  %490 = load i16, i16* %489, align 2
  %491 = and i16 %490, 255
  %492 = getelementptr inbounds i16, i16* %463, i64 %488
  %493 = load i16, i16* %492, align 2
  %494 = shl i16 %493, 8
  %495 = or i16 %494, %491
  %496 = zext i16 %495 to i32
  %497 = getelementptr inbounds i16, i16* %464, i64 %488
  %498 = load i16, i16* %497, align 2
  %499 = and i16 %498, 255
  %500 = zext i16 %499 to i32
  %501 = shl nuw nsw i32 %500, 16
  %502 = or i32 %501, %496
  %503 = or i32 %502, -16777216
  %504 = getelementptr inbounds i32, i32* %484, i64 1
  store i32 %503, i32* %484, align 4
  %505 = lshr i64 %483, 6
  %506 = and i64 %505, 1
  %507 = getelementptr inbounds i16, i16* %462, i64 %506
  %508 = load i16, i16* %507, align 2
  %509 = and i16 %508, 255
  %510 = getelementptr inbounds i16, i16* %463, i64 %506
  %511 = load i16, i16* %510, align 2
  %512 = shl i16 %511, 8
  %513 = or i16 %512, %509
  %514 = zext i16 %513 to i32
  %515 = getelementptr inbounds i16, i16* %464, i64 %506
  %516 = load i16, i16* %515, align 2
  %517 = and i16 %516, 255
  %518 = zext i16 %517 to i32
  %519 = shl nuw nsw i32 %518, 16
  %520 = or i32 %519, %514
  %521 = or i32 %520, -16777216
  %522 = getelementptr inbounds i32, i32* %484, i64 2
  store i32 %521, i32* %504, align 4
  %523 = lshr i64 %483, 5
  %524 = and i64 %523, 1
  %525 = getelementptr inbounds i16, i16* %462, i64 %524
  %526 = load i16, i16* %525, align 2
  %527 = and i16 %526, 255
  %528 = getelementptr inbounds i16, i16* %463, i64 %524
  %529 = load i16, i16* %528, align 2
  %530 = shl i16 %529, 8
  %531 = or i16 %530, %527
  %532 = zext i16 %531 to i32
  %533 = getelementptr inbounds i16, i16* %464, i64 %524
  %534 = load i16, i16* %533, align 2
  %535 = and i16 %534, 255
  %536 = zext i16 %535 to i32
  %537 = shl nuw nsw i32 %536, 16
  %538 = or i32 %537, %532
  %539 = or i32 %538, -16777216
  %540 = getelementptr inbounds i32, i32* %484, i64 3
  store i32 %539, i32* %522, align 4
  %541 = lshr i64 %483, 4
  %542 = and i64 %541, 1
  %543 = getelementptr inbounds i16, i16* %462, i64 %542
  %544 = load i16, i16* %543, align 2
  %545 = and i16 %544, 255
  %546 = getelementptr inbounds i16, i16* %463, i64 %542
  %547 = load i16, i16* %546, align 2
  %548 = shl i16 %547, 8
  %549 = or i16 %548, %545
  %550 = zext i16 %549 to i32
  %551 = getelementptr inbounds i16, i16* %464, i64 %542
  %552 = load i16, i16* %551, align 2
  %553 = and i16 %552, 255
  %554 = zext i16 %553 to i32
  %555 = shl nuw nsw i32 %554, 16
  %556 = or i32 %555, %550
  %557 = or i32 %556, -16777216
  %558 = getelementptr inbounds i32, i32* %484, i64 4
  store i32 %557, i32* %540, align 4
  br label %559

559:                                              ; preds = %481, %486
  %560 = phi i64 [ 3, %486 ], [ 6, %481 ]
  %561 = phi i64 [ 1, %486 ], [ 3, %481 ]
  %562 = phi i64 [ 5, %486 ], [ 1, %481 ]
  %563 = phi i32* [ %558, %486 ], [ %484, %481 ]
  %564 = phi i64 [ 2, %486 ], [ 4, %481 ]
  %565 = phi i64 [ 6, %486 ], [ 2, %481 ]
  %566 = phi i64 [ 1, %486 ], [ 2, %481 ]
  %567 = phi i64 [ 7, %486 ], [ 3, %481 ]
  %568 = phi i64 [ 8, %486 ], [ 4, %481 ]
  %569 = lshr i64 %483, %560
  %570 = and i64 %569, %561
  %571 = getelementptr inbounds i16, i16* %462, i64 %570
  %572 = load i16, i16* %571, align 2
  %573 = and i16 %572, 255
  %574 = getelementptr inbounds i16, i16* %463, i64 %570
  %575 = load i16, i16* %574, align 2
  %576 = shl i16 %575, 8
  %577 = or i16 %576, %573
  %578 = zext i16 %577 to i32
  %579 = getelementptr inbounds i16, i16* %464, i64 %570
  %580 = load i16, i16* %579, align 2
  %581 = and i16 %580, 255
  %582 = zext i16 %581 to i32
  %583 = shl nuw nsw i32 %582, 16
  %584 = or i32 %583, %578
  %585 = or i32 %584, -16777216
  %586 = getelementptr inbounds i32, i32* %484, i64 %562
  store i32 %585, i32* %563, align 4
  %587 = lshr i64 %483, %564
  %588 = and i64 %587, %561
  %589 = getelementptr inbounds i16, i16* %462, i64 %588
  %590 = load i16, i16* %589, align 2
  %591 = and i16 %590, 255
  %592 = getelementptr inbounds i16, i16* %463, i64 %588
  %593 = load i16, i16* %592, align 2
  %594 = shl i16 %593, 8
  %595 = or i16 %594, %591
  %596 = zext i16 %595 to i32
  %597 = getelementptr inbounds i16, i16* %464, i64 %588
  %598 = load i16, i16* %597, align 2
  %599 = and i16 %598, 255
  %600 = zext i16 %599 to i32
  %601 = shl nuw nsw i32 %600, 16
  %602 = or i32 %601, %596
  %603 = or i32 %602, -16777216
  %604 = getelementptr inbounds i32, i32* %484, i64 %565
  store i32 %603, i32* %586, align 4
  br label %605

605:                                              ; preds = %559, %481
  %606 = phi i64 [ 4, %481 ], [ %566, %559 ]
  %607 = phi i64 [ 15, %481 ], [ %561, %559 ]
  %608 = phi i64 [ 1, %481 ], [ %567, %559 ]
  %609 = phi i32* [ %484, %481 ], [ %604, %559 ]
  %610 = phi i64 [ 2, %481 ], [ %568, %559 ]
  %611 = lshr i64 %483, %606
  %612 = and i64 %611, %607
  %613 = getelementptr inbounds i16, i16* %462, i64 %612
  %614 = load i16, i16* %613, align 2
  %615 = and i16 %614, 255
  %616 = getelementptr inbounds i16, i16* %463, i64 %612
  %617 = load i16, i16* %616, align 2
  %618 = shl i16 %617, 8
  %619 = or i16 %618, %615
  %620 = zext i16 %619 to i32
  %621 = getelementptr inbounds i16, i16* %464, i64 %612
  %622 = load i16, i16* %621, align 2
  %623 = and i16 %622, 255
  %624 = zext i16 %623 to i32
  %625 = shl nuw nsw i32 %624, 16
  %626 = or i32 %625, %620
  %627 = or i32 %626, -16777216
  %628 = getelementptr inbounds i32, i32* %484, i64 %608
  store i32 %627, i32* %609, align 4
  %629 = and i64 %483, %607
  br label %630

630:                                              ; preds = %605, %481
  %631 = phi i64 [ %483, %481 ], [ %629, %605 ]
  %632 = phi i64 [ 1, %481 ], [ %610, %605 ]
  %633 = phi i32* [ %484, %481 ], [ %628, %605 ]
  %634 = getelementptr inbounds i16, i16* %462, i64 %631
  %635 = load i16, i16* %634, align 2
  %636 = and i16 %635, 255
  %637 = getelementptr inbounds i16, i16* %463, i64 %631
  %638 = load i16, i16* %637, align 2
  %639 = shl i16 %638, 8
  %640 = or i16 %639, %636
  %641 = zext i16 %640 to i32
  %642 = getelementptr inbounds i16, i16* %464, i64 %631
  %643 = load i16, i16* %642, align 2
  %644 = and i16 %643, 255
  %645 = zext i16 %644 to i32
  %646 = shl nuw nsw i32 %645, 16
  %647 = or i32 %646, %641
  %648 = or i32 %647, -16777216
  %649 = getelementptr inbounds i32, i32* %484, i64 %632
  store i32 %648, i32* %633, align 4
  br label %650

650:                                              ; preds = %630, %481
  %651 = phi i32* [ %484, %481 ], [ %649, %630 ]
  %652 = add nuw nsw i64 %483, 1
  %653 = icmp eq i64 %652, 256
  br i1 %653, label %656, label %654

654:                                              ; preds = %650
  %655 = load i32**, i32*** %468, align 8
  br label %481

656:                                              ; preds = %650, %113, %293, %116, %1, %4, %455, %471, %132, %22
  %657 = phi i32 [ 0, %22 ], [ 0, %132 ], [ 0, %471 ], [ 1, %455 ], [ 1, %4 ], [ 1, %1 ], [ 1, %116 ], [ 1, %293 ], [ 1, %113 ], [ 1, %650 ]
  ret i32 %657
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBcontig8bitCMYKtile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %571, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i32
  %15 = mul nsw i32 %14, %6
  %16 = icmp ugt i32 %4, 7
  %17 = zext i16 %11 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %15 to i64
  %20 = and i32 %4, 7
  br label %21

21:                                               ; preds = %13, %564
  %22 = phi i8* [ %8, %13 ], [ %568, %564 ]
  %23 = phi i32* [ %1, %13 ], [ %567, %564 ]
  %24 = phi i32 [ %5, %13 ], [ %569, %564 ]
  br i1 %16, label %25, label %303

25:                                               ; preds = %21, %25
  %26 = phi i32 [ %301, %25 ], [ %4, %21 ]
  %27 = phi i8* [ %300, %25 ], [ %22, %21 ]
  %28 = phi i32* [ %299, %25 ], [ %23, %21 ]
  %29 = getelementptr inbounds i8, i8* %27, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = xor i8 %30, -1
  %32 = zext i8 %31 to i32
  %33 = load i8, i8* %27, align 1
  %34 = xor i8 %33, -1
  %35 = zext i8 %34 to i32
  %36 = mul nuw nsw i32 %35, %32
  %37 = trunc i32 %36 to i16
  %38 = udiv i16 %37, 255
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds i8, i8* %27, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = xor i8 %41, -1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %32
  %45 = trunc i32 %44 to i16
  %46 = udiv i16 %45, 255
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds i8, i8* %27, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = xor i8 %49, -1
  %51 = zext i8 %50 to i32
  %52 = mul nuw nsw i32 %51, %32
  %53 = trunc i32 %52 to i16
  %54 = udiv i16 %53, 255
  %55 = zext i16 %54 to i32
  %56 = shl nuw nsw i32 %47, 8
  %57 = shl nuw nsw i32 %55, 16
  %58 = or i32 %56, %39
  %59 = or i32 %58, %57
  %60 = or i32 %59, -16777216
  %61 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %60, i32* %28, align 4
  %62 = getelementptr inbounds i8, i8* %27, i64 %17
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = xor i8 %64, -1
  %66 = zext i8 %65 to i32
  %67 = load i8, i8* %62, align 1
  %68 = xor i8 %67, -1
  %69 = zext i8 %68 to i32
  %70 = mul nuw nsw i32 %69, %66
  %71 = trunc i32 %70 to i16
  %72 = udiv i16 %71, 255
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds i8, i8* %62, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = xor i8 %75, -1
  %77 = zext i8 %76 to i32
  %78 = mul nuw nsw i32 %77, %66
  %79 = trunc i32 %78 to i16
  %80 = udiv i16 %79, 255
  %81 = zext i16 %80 to i32
  %82 = getelementptr inbounds i8, i8* %62, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = xor i8 %83, -1
  %85 = zext i8 %84 to i32
  %86 = mul nuw nsw i32 %85, %66
  %87 = trunc i32 %86 to i16
  %88 = udiv i16 %87, 255
  %89 = zext i16 %88 to i32
  %90 = shl nuw nsw i32 %81, 8
  %91 = shl nuw nsw i32 %89, 16
  %92 = or i32 %90, %73
  %93 = or i32 %92, %91
  %94 = or i32 %93, -16777216
  %95 = getelementptr inbounds i32, i32* %28, i64 2
  store i32 %94, i32* %61, align 4
  %96 = getelementptr inbounds i8, i8* %62, i64 %17
  %97 = getelementptr inbounds i8, i8* %96, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = xor i8 %98, -1
  %100 = zext i8 %99 to i32
  %101 = load i8, i8* %96, align 1
  %102 = xor i8 %101, -1
  %103 = zext i8 %102 to i32
  %104 = mul nuw nsw i32 %103, %100
  %105 = trunc i32 %104 to i16
  %106 = udiv i16 %105, 255
  %107 = zext i16 %106 to i32
  %108 = getelementptr inbounds i8, i8* %96, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = xor i8 %109, -1
  %111 = zext i8 %110 to i32
  %112 = mul nuw nsw i32 %111, %100
  %113 = trunc i32 %112 to i16
  %114 = udiv i16 %113, 255
  %115 = zext i16 %114 to i32
  %116 = getelementptr inbounds i8, i8* %96, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = xor i8 %117, -1
  %119 = zext i8 %118 to i32
  %120 = mul nuw nsw i32 %119, %100
  %121 = trunc i32 %120 to i16
  %122 = udiv i16 %121, 255
  %123 = zext i16 %122 to i32
  %124 = shl nuw nsw i32 %115, 8
  %125 = shl nuw nsw i32 %123, 16
  %126 = or i32 %124, %107
  %127 = or i32 %126, %125
  %128 = or i32 %127, -16777216
  %129 = getelementptr inbounds i32, i32* %28, i64 3
  store i32 %128, i32* %95, align 4
  %130 = getelementptr inbounds i8, i8* %96, i64 %17
  %131 = getelementptr inbounds i8, i8* %130, i64 3
  %132 = load i8, i8* %131, align 1
  %133 = xor i8 %132, -1
  %134 = zext i8 %133 to i32
  %135 = load i8, i8* %130, align 1
  %136 = xor i8 %135, -1
  %137 = zext i8 %136 to i32
  %138 = mul nuw nsw i32 %137, %134
  %139 = trunc i32 %138 to i16
  %140 = udiv i16 %139, 255
  %141 = zext i16 %140 to i32
  %142 = getelementptr inbounds i8, i8* %130, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = xor i8 %143, -1
  %145 = zext i8 %144 to i32
  %146 = mul nuw nsw i32 %145, %134
  %147 = trunc i32 %146 to i16
  %148 = udiv i16 %147, 255
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds i8, i8* %130, i64 2
  %151 = load i8, i8* %150, align 1
  %152 = xor i8 %151, -1
  %153 = zext i8 %152 to i32
  %154 = mul nuw nsw i32 %153, %134
  %155 = trunc i32 %154 to i16
  %156 = udiv i16 %155, 255
  %157 = zext i16 %156 to i32
  %158 = shl nuw nsw i32 %149, 8
  %159 = shl nuw nsw i32 %157, 16
  %160 = or i32 %158, %141
  %161 = or i32 %160, %159
  %162 = or i32 %161, -16777216
  %163 = getelementptr inbounds i32, i32* %28, i64 4
  store i32 %162, i32* %129, align 4
  %164 = getelementptr inbounds i8, i8* %130, i64 %17
  %165 = getelementptr inbounds i8, i8* %164, i64 3
  %166 = load i8, i8* %165, align 1
  %167 = xor i8 %166, -1
  %168 = zext i8 %167 to i32
  %169 = load i8, i8* %164, align 1
  %170 = xor i8 %169, -1
  %171 = zext i8 %170 to i32
  %172 = mul nuw nsw i32 %171, %168
  %173 = trunc i32 %172 to i16
  %174 = udiv i16 %173, 255
  %175 = zext i16 %174 to i32
  %176 = getelementptr inbounds i8, i8* %164, i64 1
  %177 = load i8, i8* %176, align 1
  %178 = xor i8 %177, -1
  %179 = zext i8 %178 to i32
  %180 = mul nuw nsw i32 %179, %168
  %181 = trunc i32 %180 to i16
  %182 = udiv i16 %181, 255
  %183 = zext i16 %182 to i32
  %184 = getelementptr inbounds i8, i8* %164, i64 2
  %185 = load i8, i8* %184, align 1
  %186 = xor i8 %185, -1
  %187 = zext i8 %186 to i32
  %188 = mul nuw nsw i32 %187, %168
  %189 = trunc i32 %188 to i16
  %190 = udiv i16 %189, 255
  %191 = zext i16 %190 to i32
  %192 = shl nuw nsw i32 %183, 8
  %193 = shl nuw nsw i32 %191, 16
  %194 = or i32 %192, %175
  %195 = or i32 %194, %193
  %196 = or i32 %195, -16777216
  %197 = getelementptr inbounds i32, i32* %28, i64 5
  store i32 %196, i32* %163, align 4
  %198 = getelementptr inbounds i8, i8* %164, i64 %17
  %199 = getelementptr inbounds i8, i8* %198, i64 3
  %200 = load i8, i8* %199, align 1
  %201 = xor i8 %200, -1
  %202 = zext i8 %201 to i32
  %203 = load i8, i8* %198, align 1
  %204 = xor i8 %203, -1
  %205 = zext i8 %204 to i32
  %206 = mul nuw nsw i32 %205, %202
  %207 = trunc i32 %206 to i16
  %208 = udiv i16 %207, 255
  %209 = zext i16 %208 to i32
  %210 = getelementptr inbounds i8, i8* %198, i64 1
  %211 = load i8, i8* %210, align 1
  %212 = xor i8 %211, -1
  %213 = zext i8 %212 to i32
  %214 = mul nuw nsw i32 %213, %202
  %215 = trunc i32 %214 to i16
  %216 = udiv i16 %215, 255
  %217 = zext i16 %216 to i32
  %218 = getelementptr inbounds i8, i8* %198, i64 2
  %219 = load i8, i8* %218, align 1
  %220 = xor i8 %219, -1
  %221 = zext i8 %220 to i32
  %222 = mul nuw nsw i32 %221, %202
  %223 = trunc i32 %222 to i16
  %224 = udiv i16 %223, 255
  %225 = zext i16 %224 to i32
  %226 = shl nuw nsw i32 %217, 8
  %227 = shl nuw nsw i32 %225, 16
  %228 = or i32 %226, %209
  %229 = or i32 %228, %227
  %230 = or i32 %229, -16777216
  %231 = getelementptr inbounds i32, i32* %28, i64 6
  store i32 %230, i32* %197, align 4
  %232 = getelementptr inbounds i8, i8* %198, i64 %17
  %233 = getelementptr inbounds i8, i8* %232, i64 3
  %234 = load i8, i8* %233, align 1
  %235 = xor i8 %234, -1
  %236 = zext i8 %235 to i32
  %237 = load i8, i8* %232, align 1
  %238 = xor i8 %237, -1
  %239 = zext i8 %238 to i32
  %240 = mul nuw nsw i32 %239, %236
  %241 = trunc i32 %240 to i16
  %242 = udiv i16 %241, 255
  %243 = zext i16 %242 to i32
  %244 = getelementptr inbounds i8, i8* %232, i64 1
  %245 = load i8, i8* %244, align 1
  %246 = xor i8 %245, -1
  %247 = zext i8 %246 to i32
  %248 = mul nuw nsw i32 %247, %236
  %249 = trunc i32 %248 to i16
  %250 = udiv i16 %249, 255
  %251 = zext i16 %250 to i32
  %252 = getelementptr inbounds i8, i8* %232, i64 2
  %253 = load i8, i8* %252, align 1
  %254 = xor i8 %253, -1
  %255 = zext i8 %254 to i32
  %256 = mul nuw nsw i32 %255, %236
  %257 = trunc i32 %256 to i16
  %258 = udiv i16 %257, 255
  %259 = zext i16 %258 to i32
  %260 = shl nuw nsw i32 %251, 8
  %261 = shl nuw nsw i32 %259, 16
  %262 = or i32 %260, %243
  %263 = or i32 %262, %261
  %264 = or i32 %263, -16777216
  %265 = getelementptr inbounds i32, i32* %28, i64 7
  store i32 %264, i32* %231, align 4
  %266 = getelementptr inbounds i8, i8* %232, i64 %17
  %267 = getelementptr inbounds i8, i8* %266, i64 3
  %268 = load i8, i8* %267, align 1
  %269 = xor i8 %268, -1
  %270 = zext i8 %269 to i32
  %271 = load i8, i8* %266, align 1
  %272 = xor i8 %271, -1
  %273 = zext i8 %272 to i32
  %274 = mul nuw nsw i32 %273, %270
  %275 = trunc i32 %274 to i16
  %276 = udiv i16 %275, 255
  %277 = zext i16 %276 to i32
  %278 = getelementptr inbounds i8, i8* %266, i64 1
  %279 = load i8, i8* %278, align 1
  %280 = xor i8 %279, -1
  %281 = zext i8 %280 to i32
  %282 = mul nuw nsw i32 %281, %270
  %283 = trunc i32 %282 to i16
  %284 = udiv i16 %283, 255
  %285 = zext i16 %284 to i32
  %286 = getelementptr inbounds i8, i8* %266, i64 2
  %287 = load i8, i8* %286, align 1
  %288 = xor i8 %287, -1
  %289 = zext i8 %288 to i32
  %290 = mul nuw nsw i32 %289, %270
  %291 = trunc i32 %290 to i16
  %292 = udiv i16 %291, 255
  %293 = zext i16 %292 to i32
  %294 = shl nuw nsw i32 %285, 8
  %295 = shl nuw nsw i32 %293, 16
  %296 = or i32 %294, %277
  %297 = or i32 %296, %295
  %298 = or i32 %297, -16777216
  %299 = getelementptr inbounds i32, i32* %28, i64 8
  store i32 %298, i32* %265, align 4
  %300 = getelementptr inbounds i8, i8* %266, i64 %17
  %301 = add i32 %26, -8
  %302 = icmp ugt i32 %301, 7
  br i1 %302, label %25, label %303

303:                                              ; preds = %25, %21
  %304 = phi i32* [ %23, %21 ], [ %299, %25 ]
  %305 = phi i8* [ %22, %21 ], [ %300, %25 ]
  %306 = phi i32 [ %4, %21 ], [ %20, %25 ]
  switch i32 %306, label %564 [
    i32 1, label %527
    i32 7, label %307
    i32 6, label %342
    i32 5, label %379
    i32 4, label %416
    i32 3, label %453
    i32 2, label %490
  ]

307:                                              ; preds = %303
  %308 = getelementptr inbounds i8, i8* %305, i64 3
  %309 = load i8, i8* %308, align 1
  %310 = xor i8 %309, -1
  %311 = zext i8 %310 to i32
  %312 = load i8, i8* %305, align 1
  %313 = xor i8 %312, -1
  %314 = zext i8 %313 to i32
  %315 = mul nuw nsw i32 %314, %311
  %316 = trunc i32 %315 to i16
  %317 = udiv i16 %316, 255
  %318 = zext i16 %317 to i32
  %319 = getelementptr inbounds i8, i8* %305, i64 1
  %320 = load i8, i8* %319, align 1
  %321 = xor i8 %320, -1
  %322 = zext i8 %321 to i32
  %323 = mul nuw nsw i32 %322, %311
  %324 = trunc i32 %323 to i16
  %325 = udiv i16 %324, 255
  %326 = zext i16 %325 to i32
  %327 = getelementptr inbounds i8, i8* %305, i64 2
  %328 = load i8, i8* %327, align 1
  %329 = xor i8 %328, -1
  %330 = zext i8 %329 to i32
  %331 = mul nuw nsw i32 %330, %311
  %332 = trunc i32 %331 to i16
  %333 = udiv i16 %332, 255
  %334 = zext i16 %333 to i32
  %335 = shl nuw nsw i32 %326, 8
  %336 = shl nuw nsw i32 %334, 16
  %337 = or i32 %335, %318
  %338 = or i32 %337, %336
  %339 = or i32 %338, -16777216
  %340 = getelementptr inbounds i32, i32* %304, i64 1
  store i32 %339, i32* %304, align 4
  %341 = getelementptr inbounds i8, i8* %305, i64 %17
  br label %342

342:                                              ; preds = %303, %307
  %343 = phi i32* [ %340, %307 ], [ %304, %303 ]
  %344 = phi i8* [ %341, %307 ], [ %305, %303 ]
  %345 = getelementptr inbounds i8, i8* %344, i64 3
  %346 = load i8, i8* %345, align 1
  %347 = xor i8 %346, -1
  %348 = zext i8 %347 to i32
  %349 = load i8, i8* %344, align 1
  %350 = xor i8 %349, -1
  %351 = zext i8 %350 to i32
  %352 = mul nuw nsw i32 %351, %348
  %353 = trunc i32 %352 to i16
  %354 = udiv i16 %353, 255
  %355 = zext i16 %354 to i32
  %356 = getelementptr inbounds i8, i8* %344, i64 1
  %357 = load i8, i8* %356, align 1
  %358 = xor i8 %357, -1
  %359 = zext i8 %358 to i32
  %360 = mul nuw nsw i32 %359, %348
  %361 = trunc i32 %360 to i16
  %362 = udiv i16 %361, 255
  %363 = zext i16 %362 to i32
  %364 = getelementptr inbounds i8, i8* %344, i64 2
  %365 = load i8, i8* %364, align 1
  %366 = xor i8 %365, -1
  %367 = zext i8 %366 to i32
  %368 = mul nuw nsw i32 %367, %348
  %369 = trunc i32 %368 to i16
  %370 = udiv i16 %369, 255
  %371 = zext i16 %370 to i32
  %372 = shl nuw nsw i32 %363, 8
  %373 = shl nuw nsw i32 %371, 16
  %374 = or i32 %372, %355
  %375 = or i32 %374, %373
  %376 = or i32 %375, -16777216
  %377 = getelementptr inbounds i32, i32* %343, i64 1
  store i32 %376, i32* %343, align 4
  %378 = getelementptr inbounds i8, i8* %344, i64 %17
  br label %379

379:                                              ; preds = %303, %342
  %380 = phi i32* [ %377, %342 ], [ %304, %303 ]
  %381 = phi i8* [ %378, %342 ], [ %305, %303 ]
  %382 = getelementptr inbounds i8, i8* %381, i64 3
  %383 = load i8, i8* %382, align 1
  %384 = xor i8 %383, -1
  %385 = zext i8 %384 to i32
  %386 = load i8, i8* %381, align 1
  %387 = xor i8 %386, -1
  %388 = zext i8 %387 to i32
  %389 = mul nuw nsw i32 %388, %385
  %390 = trunc i32 %389 to i16
  %391 = udiv i16 %390, 255
  %392 = zext i16 %391 to i32
  %393 = getelementptr inbounds i8, i8* %381, i64 1
  %394 = load i8, i8* %393, align 1
  %395 = xor i8 %394, -1
  %396 = zext i8 %395 to i32
  %397 = mul nuw nsw i32 %396, %385
  %398 = trunc i32 %397 to i16
  %399 = udiv i16 %398, 255
  %400 = zext i16 %399 to i32
  %401 = getelementptr inbounds i8, i8* %381, i64 2
  %402 = load i8, i8* %401, align 1
  %403 = xor i8 %402, -1
  %404 = zext i8 %403 to i32
  %405 = mul nuw nsw i32 %404, %385
  %406 = trunc i32 %405 to i16
  %407 = udiv i16 %406, 255
  %408 = zext i16 %407 to i32
  %409 = shl nuw nsw i32 %400, 8
  %410 = shl nuw nsw i32 %408, 16
  %411 = or i32 %409, %392
  %412 = or i32 %411, %410
  %413 = or i32 %412, -16777216
  %414 = getelementptr inbounds i32, i32* %380, i64 1
  store i32 %413, i32* %380, align 4
  %415 = getelementptr inbounds i8, i8* %381, i64 %17
  br label %416

416:                                              ; preds = %303, %379
  %417 = phi i32* [ %414, %379 ], [ %304, %303 ]
  %418 = phi i8* [ %415, %379 ], [ %305, %303 ]
  %419 = getelementptr inbounds i8, i8* %418, i64 3
  %420 = load i8, i8* %419, align 1
  %421 = xor i8 %420, -1
  %422 = zext i8 %421 to i32
  %423 = load i8, i8* %418, align 1
  %424 = xor i8 %423, -1
  %425 = zext i8 %424 to i32
  %426 = mul nuw nsw i32 %425, %422
  %427 = trunc i32 %426 to i16
  %428 = udiv i16 %427, 255
  %429 = zext i16 %428 to i32
  %430 = getelementptr inbounds i8, i8* %418, i64 1
  %431 = load i8, i8* %430, align 1
  %432 = xor i8 %431, -1
  %433 = zext i8 %432 to i32
  %434 = mul nuw nsw i32 %433, %422
  %435 = trunc i32 %434 to i16
  %436 = udiv i16 %435, 255
  %437 = zext i16 %436 to i32
  %438 = getelementptr inbounds i8, i8* %418, i64 2
  %439 = load i8, i8* %438, align 1
  %440 = xor i8 %439, -1
  %441 = zext i8 %440 to i32
  %442 = mul nuw nsw i32 %441, %422
  %443 = trunc i32 %442 to i16
  %444 = udiv i16 %443, 255
  %445 = zext i16 %444 to i32
  %446 = shl nuw nsw i32 %437, 8
  %447 = shl nuw nsw i32 %445, 16
  %448 = or i32 %446, %429
  %449 = or i32 %448, %447
  %450 = or i32 %449, -16777216
  %451 = getelementptr inbounds i32, i32* %417, i64 1
  store i32 %450, i32* %417, align 4
  %452 = getelementptr inbounds i8, i8* %418, i64 %17
  br label %453

453:                                              ; preds = %303, %416
  %454 = phi i32* [ %451, %416 ], [ %304, %303 ]
  %455 = phi i8* [ %452, %416 ], [ %305, %303 ]
  %456 = getelementptr inbounds i8, i8* %455, i64 3
  %457 = load i8, i8* %456, align 1
  %458 = xor i8 %457, -1
  %459 = zext i8 %458 to i32
  %460 = load i8, i8* %455, align 1
  %461 = xor i8 %460, -1
  %462 = zext i8 %461 to i32
  %463 = mul nuw nsw i32 %462, %459
  %464 = trunc i32 %463 to i16
  %465 = udiv i16 %464, 255
  %466 = zext i16 %465 to i32
  %467 = getelementptr inbounds i8, i8* %455, i64 1
  %468 = load i8, i8* %467, align 1
  %469 = xor i8 %468, -1
  %470 = zext i8 %469 to i32
  %471 = mul nuw nsw i32 %470, %459
  %472 = trunc i32 %471 to i16
  %473 = udiv i16 %472, 255
  %474 = zext i16 %473 to i32
  %475 = getelementptr inbounds i8, i8* %455, i64 2
  %476 = load i8, i8* %475, align 1
  %477 = xor i8 %476, -1
  %478 = zext i8 %477 to i32
  %479 = mul nuw nsw i32 %478, %459
  %480 = trunc i32 %479 to i16
  %481 = udiv i16 %480, 255
  %482 = zext i16 %481 to i32
  %483 = shl nuw nsw i32 %474, 8
  %484 = shl nuw nsw i32 %482, 16
  %485 = or i32 %483, %466
  %486 = or i32 %485, %484
  %487 = or i32 %486, -16777216
  %488 = getelementptr inbounds i32, i32* %454, i64 1
  store i32 %487, i32* %454, align 4
  %489 = getelementptr inbounds i8, i8* %455, i64 %17
  br label %490

490:                                              ; preds = %303, %453
  %491 = phi i32* [ %488, %453 ], [ %304, %303 ]
  %492 = phi i8* [ %489, %453 ], [ %305, %303 ]
  %493 = getelementptr inbounds i8, i8* %492, i64 3
  %494 = load i8, i8* %493, align 1
  %495 = xor i8 %494, -1
  %496 = zext i8 %495 to i32
  %497 = load i8, i8* %492, align 1
  %498 = xor i8 %497, -1
  %499 = zext i8 %498 to i32
  %500 = mul nuw nsw i32 %499, %496
  %501 = trunc i32 %500 to i16
  %502 = udiv i16 %501, 255
  %503 = zext i16 %502 to i32
  %504 = getelementptr inbounds i8, i8* %492, i64 1
  %505 = load i8, i8* %504, align 1
  %506 = xor i8 %505, -1
  %507 = zext i8 %506 to i32
  %508 = mul nuw nsw i32 %507, %496
  %509 = trunc i32 %508 to i16
  %510 = udiv i16 %509, 255
  %511 = zext i16 %510 to i32
  %512 = getelementptr inbounds i8, i8* %492, i64 2
  %513 = load i8, i8* %512, align 1
  %514 = xor i8 %513, -1
  %515 = zext i8 %514 to i32
  %516 = mul nuw nsw i32 %515, %496
  %517 = trunc i32 %516 to i16
  %518 = udiv i16 %517, 255
  %519 = zext i16 %518 to i32
  %520 = shl nuw nsw i32 %511, 8
  %521 = shl nuw nsw i32 %519, 16
  %522 = or i32 %520, %503
  %523 = or i32 %522, %521
  %524 = or i32 %523, -16777216
  %525 = getelementptr inbounds i32, i32* %491, i64 1
  store i32 %524, i32* %491, align 4
  %526 = getelementptr inbounds i8, i8* %492, i64 %17
  br label %527

527:                                              ; preds = %303, %490
  %528 = phi i32* [ %525, %490 ], [ %304, %303 ]
  %529 = phi i8* [ %526, %490 ], [ %305, %303 ]
  %530 = getelementptr inbounds i8, i8* %529, i64 3
  %531 = load i8, i8* %530, align 1
  %532 = xor i8 %531, -1
  %533 = zext i8 %532 to i32
  %534 = load i8, i8* %529, align 1
  %535 = xor i8 %534, -1
  %536 = zext i8 %535 to i32
  %537 = mul nuw nsw i32 %536, %533
  %538 = trunc i32 %537 to i16
  %539 = udiv i16 %538, 255
  %540 = zext i16 %539 to i32
  %541 = getelementptr inbounds i8, i8* %529, i64 1
  %542 = load i8, i8* %541, align 1
  %543 = xor i8 %542, -1
  %544 = zext i8 %543 to i32
  %545 = mul nuw nsw i32 %544, %533
  %546 = trunc i32 %545 to i16
  %547 = udiv i16 %546, 255
  %548 = zext i16 %547 to i32
  %549 = getelementptr inbounds i8, i8* %529, i64 2
  %550 = load i8, i8* %549, align 1
  %551 = xor i8 %550, -1
  %552 = zext i8 %551 to i32
  %553 = mul nuw nsw i32 %552, %533
  %554 = trunc i32 %553 to i16
  %555 = udiv i16 %554, 255
  %556 = zext i16 %555 to i32
  %557 = shl nuw nsw i32 %548, 8
  %558 = shl nuw nsw i32 %556, 16
  %559 = or i32 %557, %540
  %560 = or i32 %559, %558
  %561 = or i32 %560, -16777216
  %562 = getelementptr inbounds i32, i32* %528, i64 1
  store i32 %561, i32* %528, align 4
  %563 = getelementptr inbounds i8, i8* %529, i64 %17
  br label %564

564:                                              ; preds = %303, %527
  %565 = phi i32* [ %562, %527 ], [ %304, %303 ]
  %566 = phi i8* [ %563, %527 ], [ %305, %303 ]
  %567 = getelementptr inbounds i32, i32* %565, i64 %18
  %568 = getelementptr inbounds i8, i8* %566, i64 %19
  %569 = add i32 %24, -1
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %21

571:                                              ; preds = %564, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBcontig8bitCMYKMaptile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 16
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %82, label %15

15:                                               ; preds = %9
  %16 = zext i16 %11 to i32
  %17 = mul nsw i32 %16, %6
  %18 = icmp eq i32 %4, 0
  %19 = zext i16 %11 to i64
  %20 = sext i32 %17 to i64
  %21 = sext i32 %7 to i64
  br label %22

22:                                               ; preds = %15, %75
  %23 = phi i8* [ %8, %15 ], [ %78, %75 ]
  %24 = phi i32* [ %1, %15 ], [ %79, %75 ]
  %25 = phi i32 [ %5, %15 ], [ %80, %75 ]
  br i1 %18, label %75, label %26

26:                                               ; preds = %22, %26
  %27 = phi i8* [ %72, %26 ], [ %23, %22 ]
  %28 = phi i32* [ %71, %26 ], [ %24, %22 ]
  %29 = phi i32 [ %73, %26 ], [ %4, %22 ]
  %30 = getelementptr inbounds i8, i8* %27, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = xor i8 %31, -1
  %33 = zext i8 %32 to i32
  %34 = load i8, i8* %27, align 1
  %35 = xor i8 %34, -1
  %36 = zext i8 %35 to i32
  %37 = mul nuw nsw i32 %36, %33
  %38 = trunc i32 %37 to i16
  %39 = udiv i16 %38, 255
  %40 = zext i16 %39 to i64
  %41 = getelementptr inbounds i8, i8* %27, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = xor i8 %42, -1
  %44 = zext i8 %43 to i32
  %45 = mul nuw nsw i32 %44, %33
  %46 = trunc i32 %45 to i16
  %47 = udiv i16 %46, 255
  %48 = zext i16 %47 to i64
  %49 = getelementptr inbounds i8, i8* %27, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = xor i8 %50, -1
  %52 = zext i8 %51 to i32
  %53 = mul nuw nsw i32 %52, %33
  %54 = trunc i32 %53 to i16
  %55 = udiv i16 %54, 255
  %56 = zext i16 %55 to i64
  %57 = getelementptr inbounds i8, i8* %13, i64 %40
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = getelementptr inbounds i8, i8* %13, i64 %48
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 8
  %64 = getelementptr inbounds i8, i8* %13, i64 %56
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %63, %59
  %69 = or i32 %68, %67
  %70 = or i32 %69, -16777216
  %71 = getelementptr inbounds i32, i32* %28, i64 1
  store i32 %70, i32* %28, align 4
  %72 = getelementptr inbounds i8, i8* %27, i64 %19
  %73 = add i32 %29, -1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %26

75:                                               ; preds = %26, %22
  %76 = phi i32* [ %24, %22 ], [ %71, %26 ]
  %77 = phi i8* [ %23, %22 ], [ %72, %26 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %20
  %79 = getelementptr inbounds i32, i32* %76, i64 %21
  %80 = add i32 %25, -1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %22

82:                                               ; preds = %75, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put8bitcmaptile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %91, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i32 %4, 0
  %17 = zext i16 %15 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %6 to i64
  %20 = add i32 %4, -1
  %21 = and i32 %4, 3
  %22 = icmp eq i32 %21, 0
  %23 = icmp ult i32 %20, 3
  br label %24

24:                                               ; preds = %13, %84
  %25 = phi i8* [ %8, %13 ], [ %88, %84 ]
  %26 = phi i32* [ %1, %13 ], [ %87, %84 ]
  %27 = phi i32 [ %5, %13 ], [ %89, %84 ]
  br i1 %16, label %84, label %28

28:                                               ; preds = %24
  br i1 %22, label %44, label %29

29:                                               ; preds = %28, %29
  %30 = phi i8* [ %40, %29 ], [ %25, %28 ]
  %31 = phi i32* [ %39, %29 ], [ %26, %28 ]
  %32 = phi i32 [ %41, %29 ], [ %4, %28 ]
  %33 = phi i32 [ %42, %29 ], [ %21, %28 ]
  %34 = load i8, i8* %30, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds i32*, i32** %11, i64 %35
  %37 = load i32*, i32** %36, align 8
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 %38, i32* %31, align 4
  %40 = getelementptr inbounds i8, i8* %30, i64 %17
  %41 = add i32 %32, -1
  %42 = add i32 %33, -1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %29, !llvm.loop !18

44:                                               ; preds = %29, %28
  %45 = phi i32* [ undef, %28 ], [ %39, %29 ]
  %46 = phi i8* [ undef, %28 ], [ %40, %29 ]
  %47 = phi i8* [ %25, %28 ], [ %40, %29 ]
  %48 = phi i32* [ %26, %28 ], [ %39, %29 ]
  %49 = phi i32 [ %4, %28 ], [ %41, %29 ]
  br i1 %23, label %84, label %50

50:                                               ; preds = %44, %50
  %51 = phi i8* [ %81, %50 ], [ %47, %44 ]
  %52 = phi i32* [ %80, %50 ], [ %48, %44 ]
  %53 = phi i32 [ %82, %50 ], [ %49, %44 ]
  %54 = load i8, i8* %51, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i32*, i32** %11, i64 %55
  %57 = load i32*, i32** %56, align 8
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 %58, i32* %52, align 4
  %60 = getelementptr inbounds i8, i8* %51, i64 %17
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds i32*, i32** %11, i64 %62
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i32, i32* %52, i64 2
  store i32 %65, i32* %59, align 4
  %67 = getelementptr inbounds i8, i8* %60, i64 %17
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds i32*, i32** %11, i64 %69
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds i32, i32* %52, i64 3
  store i32 %72, i32* %66, align 4
  %74 = getelementptr inbounds i8, i8* %67, i64 %17
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds i32*, i32** %11, i64 %76
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds i32, i32* %52, i64 4
  store i32 %79, i32* %73, align 4
  %81 = getelementptr inbounds i8, i8* %74, i64 %17
  %82 = add i32 %53, -4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %50

84:                                               ; preds = %44, %50, %24
  %85 = phi i32* [ %26, %24 ], [ %45, %44 ], [ %80, %50 ]
  %86 = phi i8* [ %25, %24 ], [ %46, %44 ], [ %81, %50 ]
  %87 = getelementptr inbounds i32, i32* %85, i64 %18
  %88 = getelementptr inbounds i8, i8* %86, i64 %19
  %89 = add i32 %27, -1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %24

91:                                               ; preds = %84, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put4bitcmaptile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %92, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 2
  %15 = icmp ugt i32 %4, 1
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 1
  %19 = add i32 %4, -2
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = add i32 %4, -2
  %23 = icmp ult i32 %19, 2
  br label %24

24:                                               ; preds = %13, %85
  %25 = phi i8* [ %8, %13 ], [ %89, %85 ]
  %26 = phi i32* [ %1, %13 ], [ %88, %85 ]
  %27 = phi i32 [ %5, %13 ], [ %90, %85 ]
  br i1 %15, label %28, label %72

28:                                               ; preds = %24
  br i1 %21, label %29, label %40

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = load i8, i8* %25, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i32*, i32** %11, i64 %32
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %34, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %36, i32* %26, align 4
  %38 = load i32, i32* %35, align 4
  %39 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %38, i32* %37, align 4
  br label %40

40:                                               ; preds = %29, %28
  %41 = phi i32 [ %22, %29 ], [ %4, %28 ]
  %42 = phi i8* [ %30, %29 ], [ %25, %28 ]
  %43 = phi i32* [ %39, %29 ], [ %26, %28 ]
  %44 = phi i8* [ %30, %29 ], [ undef, %28 ]
  %45 = phi i32* [ %39, %29 ], [ undef, %28 ]
  br i1 %23, label %72, label %46

46:                                               ; preds = %40, %46
  %47 = phi i32 [ %70, %46 ], [ %41, %40 ]
  %48 = phi i8* [ %60, %46 ], [ %42, %40 ]
  %49 = phi i32* [ %69, %46 ], [ %43, %40 ]
  %50 = getelementptr inbounds i8, i8* %48, i64 1
  %51 = load i8, i8* %48, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds i32*, i32** %11, i64 %52
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 1
  %56 = load i32, i32* %54, align 4
  %57 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 %56, i32* %49, align 4
  %58 = load i32, i32* %55, align 4
  %59 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %58, i32* %57, align 4
  %60 = getelementptr inbounds i8, i8* %48, i64 2
  %61 = load i8, i8* %50, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds i32*, i32** %11, i64 %62
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  %66 = load i32, i32* %64, align 4
  %67 = getelementptr inbounds i32, i32* %49, i64 3
  store i32 %66, i32* %59, align 4
  %68 = load i32, i32* %65, align 4
  %69 = getelementptr inbounds i32, i32* %49, i64 4
  store i32 %68, i32* %67, align 4
  %70 = add i32 %47, -4
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %46, label %72

72:                                               ; preds = %40, %46, %24
  %73 = phi i32* [ %26, %24 ], [ %45, %40 ], [ %69, %46 ]
  %74 = phi i8* [ %25, %24 ], [ %44, %40 ], [ %60, %46 ]
  %75 = phi i32 [ %4, %24 ], [ %18, %46 ], [ %18, %40 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  %79 = load i8, i8* %74, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds i32*, i32** %11, i64 %80
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds i32, i32* %73, i64 1
  store i32 %83, i32* %73, align 4
  br label %85

85:                                               ; preds = %72, %77
  %86 = phi i32* [ %84, %77 ], [ %73, %72 ]
  %87 = phi i8* [ %78, %77 ], [ %74, %72 ]
  %88 = getelementptr inbounds i32, i32* %86, i64 %16
  %89 = getelementptr inbounds i8, i8* %87, i64 %17
  %90 = add i32 %27, -1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %24

92:                                               ; preds = %85, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put2bitcmaptile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %123, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 4
  %15 = icmp ugt i32 %4, 3
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 3
  %19 = add i32 %4, -4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  %22 = add i32 %4, -4
  %23 = icmp ult i32 %19, 4
  br label %24

24:                                               ; preds = %13, %116
  %25 = phi i8* [ %8, %13 ], [ %120, %116 ]
  %26 = phi i32* [ %1, %13 ], [ %119, %116 ]
  %27 = phi i32 [ %5, %13 ], [ %121, %116 ]
  br i1 %15, label %28, label %90

28:                                               ; preds = %24
  br i1 %21, label %29, label %46

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = load i8, i8* %25, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i32*, i32** %11, i64 %32
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %34, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %36, i32* %26, align 4
  %38 = getelementptr inbounds i32, i32* %34, i64 2
  %39 = load i32, i32* %35, align 4
  %40 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %39, i32* %37, align 4
  %41 = getelementptr inbounds i32, i32* %34, i64 3
  %42 = load i32, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %26, i64 3
  store i32 %42, i32* %40, align 4
  %44 = load i32, i32* %41, align 4
  %45 = getelementptr inbounds i32, i32* %26, i64 4
  store i32 %44, i32* %43, align 4
  br label %46

46:                                               ; preds = %29, %28
  %47 = phi i32 [ %22, %29 ], [ %4, %28 ]
  %48 = phi i8* [ %30, %29 ], [ %25, %28 ]
  %49 = phi i32* [ %45, %29 ], [ %26, %28 ]
  %50 = phi i8* [ %30, %29 ], [ undef, %28 ]
  %51 = phi i32* [ %45, %29 ], [ undef, %28 ]
  br i1 %23, label %90, label %52

52:                                               ; preds = %46, %52
  %53 = phi i32 [ %88, %52 ], [ %47, %46 ]
  %54 = phi i8* [ %72, %52 ], [ %48, %46 ]
  %55 = phi i32* [ %87, %52 ], [ %49, %46 ]
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = load i8, i8* %54, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds i32*, i32** %11, i64 %58
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 1
  %62 = load i32, i32* %60, align 4
  %63 = getelementptr inbounds i32, i32* %55, i64 1
  store i32 %62, i32* %55, align 4
  %64 = getelementptr inbounds i32, i32* %60, i64 2
  %65 = load i32, i32* %61, align 4
  %66 = getelementptr inbounds i32, i32* %55, i64 2
  store i32 %65, i32* %63, align 4
  %67 = getelementptr inbounds i32, i32* %60, i64 3
  %68 = load i32, i32* %64, align 4
  %69 = getelementptr inbounds i32, i32* %55, i64 3
  store i32 %68, i32* %66, align 4
  %70 = load i32, i32* %67, align 4
  %71 = getelementptr inbounds i32, i32* %55, i64 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds i8, i8* %54, i64 2
  %73 = load i8, i8* %56, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds i32*, i32** %11, i64 %74
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 1
  %78 = load i32, i32* %76, align 4
  %79 = getelementptr inbounds i32, i32* %55, i64 5
  store i32 %78, i32* %71, align 4
  %80 = getelementptr inbounds i32, i32* %76, i64 2
  %81 = load i32, i32* %77, align 4
  %82 = getelementptr inbounds i32, i32* %55, i64 6
  store i32 %81, i32* %79, align 4
  %83 = getelementptr inbounds i32, i32* %76, i64 3
  %84 = load i32, i32* %80, align 4
  %85 = getelementptr inbounds i32, i32* %55, i64 7
  store i32 %84, i32* %82, align 4
  %86 = load i32, i32* %83, align 4
  %87 = getelementptr inbounds i32, i32* %55, i64 8
  store i32 %86, i32* %85, align 4
  %88 = add i32 %53, -8
  %89 = icmp ugt i32 %88, 3
  br i1 %89, label %52, label %90

90:                                               ; preds = %46, %52, %24
  %91 = phi i32* [ %26, %24 ], [ %51, %46 ], [ %87, %52 ]
  %92 = phi i8* [ %25, %24 ], [ %50, %46 ], [ %72, %52 ]
  %93 = phi i32 [ %4, %24 ], [ %18, %52 ], [ %18, %46 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %116, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = load i8, i8* %92, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds i32*, i32** %11, i64 %98
  %100 = load i32*, i32** %99, align 8
  switch i32 %93, label %116 [
    i32 3, label %101
    i32 2, label %105
    i32 1, label %111
  ]

101:                                              ; preds = %95
  %102 = getelementptr inbounds i32, i32* %100, i64 1
  %103 = load i32, i32* %100, align 4
  %104 = getelementptr inbounds i32, i32* %91, i64 1
  store i32 %103, i32* %91, align 4
  br label %105

105:                                              ; preds = %95, %101
  %106 = phi i32* [ %91, %95 ], [ %104, %101 ]
  %107 = phi i32* [ %100, %95 ], [ %102, %101 ]
  %108 = getelementptr inbounds i32, i32* %107, i64 1
  %109 = load i32, i32* %107, align 4
  %110 = getelementptr inbounds i32, i32* %106, i64 1
  store i32 %109, i32* %106, align 4
  br label %111

111:                                              ; preds = %95, %105
  %112 = phi i32* [ %91, %95 ], [ %110, %105 ]
  %113 = phi i32* [ %100, %95 ], [ %108, %105 ]
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 1
  store i32 %114, i32* %112, align 4
  br label %116

116:                                              ; preds = %90, %95, %111
  %117 = phi i32* [ %91, %95 ], [ %115, %111 ], [ %91, %90 ]
  %118 = phi i8* [ %96, %95 ], [ %96, %111 ], [ %92, %90 ]
  %119 = getelementptr inbounds i32, i32* %117, i64 %16
  %120 = getelementptr inbounds i8, i8* %118, i64 %17
  %121 = add i32 %27, -1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %24

123:                                              ; preds = %116, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put1bitcmaptile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 18
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %114, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 8
  %15 = icmp ugt i32 %4, 7
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 7
  br label %19

19:                                               ; preds = %13, %107
  %20 = phi i8* [ %8, %13 ], [ %111, %107 ]
  %21 = phi i32* [ %1, %13 ], [ %110, %107 ]
  %22 = phi i32 [ %5, %13 ], [ %112, %107 ]
  br i1 %15, label %23, label %57

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %55, %23 ], [ %4, %19 ]
  %25 = phi i8* [ %27, %23 ], [ %20, %19 ]
  %26 = phi i32* [ %54, %23 ], [ %21, %19 ]
  %27 = getelementptr inbounds i8, i8* %25, i64 1
  %28 = load i8, i8* %25, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds i32*, i32** %11, i64 %29
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  %33 = load i32, i32* %31, align 4
  %34 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %33, i32* %26, align 4
  %35 = getelementptr inbounds i32, i32* %31, i64 2
  %36 = load i32, i32* %32, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %36, i32* %34, align 4
  %38 = getelementptr inbounds i32, i32* %31, i64 3
  %39 = load i32, i32* %35, align 4
  %40 = getelementptr inbounds i32, i32* %26, i64 3
  store i32 %39, i32* %37, align 4
  %41 = getelementptr inbounds i32, i32* %31, i64 4
  %42 = load i32, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %26, i64 4
  store i32 %42, i32* %40, align 4
  %44 = getelementptr inbounds i32, i32* %31, i64 5
  %45 = load i32, i32* %41, align 4
  %46 = getelementptr inbounds i32, i32* %26, i64 5
  store i32 %45, i32* %43, align 4
  %47 = getelementptr inbounds i32, i32* %31, i64 6
  %48 = load i32, i32* %44, align 4
  %49 = getelementptr inbounds i32, i32* %26, i64 6
  store i32 %48, i32* %46, align 4
  %50 = getelementptr inbounds i32, i32* %31, i64 7
  %51 = load i32, i32* %47, align 4
  %52 = getelementptr inbounds i32, i32* %26, i64 7
  store i32 %51, i32* %49, align 4
  %53 = load i32, i32* %50, align 4
  %54 = getelementptr inbounds i32, i32* %26, i64 8
  store i32 %53, i32* %52, align 4
  %55 = add i32 %24, -8
  %56 = icmp ugt i32 %55, 7
  br i1 %56, label %23, label %57

57:                                               ; preds = %23, %19
  %58 = phi i32* [ %21, %19 ], [ %54, %23 ]
  %59 = phi i8* [ %20, %19 ], [ %27, %23 ]
  %60 = phi i32 [ %4, %19 ], [ %18, %23 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %107, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  %64 = load i8, i8* %59, align 1
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds i32*, i32** %11, i64 %65
  %67 = load i32*, i32** %66, align 8
  switch i32 %60, label %107 [
    i32 7, label %68
    i32 6, label %72
    i32 5, label %78
    i32 4, label %84
    i32 3, label %90
    i32 2, label %96
    i32 1, label %102
  ]

68:                                               ; preds = %62
  %69 = getelementptr inbounds i32, i32* %67, i64 1
  %70 = load i32, i32* %67, align 4
  %71 = getelementptr inbounds i32, i32* %58, i64 1
  store i32 %70, i32* %58, align 4
  br label %72

72:                                               ; preds = %62, %68
  %73 = phi i32* [ %58, %62 ], [ %71, %68 ]
  %74 = phi i32* [ %67, %62 ], [ %69, %68 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 1
  %76 = load i32, i32* %74, align 4
  %77 = getelementptr inbounds i32, i32* %73, i64 1
  store i32 %76, i32* %73, align 4
  br label %78

78:                                               ; preds = %62, %72
  %79 = phi i32* [ %58, %62 ], [ %77, %72 ]
  %80 = phi i32* [ %67, %62 ], [ %75, %72 ]
  %81 = getelementptr inbounds i32, i32* %80, i64 1
  %82 = load i32, i32* %80, align 4
  %83 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 %82, i32* %79, align 4
  br label %84

84:                                               ; preds = %62, %78
  %85 = phi i32* [ %58, %62 ], [ %83, %78 ]
  %86 = phi i32* [ %67, %62 ], [ %81, %78 ]
  %87 = getelementptr inbounds i32, i32* %86, i64 1
  %88 = load i32, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %85, i64 1
  store i32 %88, i32* %85, align 4
  br label %90

90:                                               ; preds = %62, %84
  %91 = phi i32* [ %58, %62 ], [ %89, %84 ]
  %92 = phi i32* [ %67, %62 ], [ %87, %84 ]
  %93 = getelementptr inbounds i32, i32* %92, i64 1
  %94 = load i32, i32* %92, align 4
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  store i32 %94, i32* %91, align 4
  br label %96

96:                                               ; preds = %62, %90
  %97 = phi i32* [ %58, %62 ], [ %95, %90 ]
  %98 = phi i32* [ %67, %62 ], [ %93, %90 ]
  %99 = getelementptr inbounds i32, i32* %98, i64 1
  %100 = load i32, i32* %98, align 4
  %101 = getelementptr inbounds i32, i32* %97, i64 1
  store i32 %100, i32* %97, align 4
  br label %102

102:                                              ; preds = %62, %96
  %103 = phi i32* [ %58, %62 ], [ %101, %96 ]
  %104 = phi i32* [ %67, %62 ], [ %99, %96 ]
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  store i32 %105, i32* %103, align 4
  br label %107

107:                                              ; preds = %57, %62, %102
  %108 = phi i32* [ %58, %62 ], [ %106, %102 ], [ %58, %57 ]
  %109 = phi i8* [ %63, %62 ], [ %63, %102 ], [ %59, %57 ]
  %110 = getelementptr inbounds i32, i32* %108, i64 %16
  %111 = getelementptr inbounds i8, i8* %109, i64 %17
  %112 = add i32 %22, -1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %19

114:                                              ; preds = %107, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put16bitbwtile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i64
  %13 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp eq i32 %5, 0
  br i1 %15, label %81, label %16

16:                                               ; preds = %9
  %17 = icmp eq i32 %4, 0
  %18 = sext i32 %7 to i64
  %19 = sext i32 %6 to i64
  %20 = add i32 %4, -1
  %21 = zext i32 %20 to i64
  %22 = shl nuw nsw i64 %21, 1
  %23 = add nuw nsw i64 %22, 2
  %24 = mul nuw nsw i64 %23, %12
  %25 = and i32 %4, 1
  %26 = icmp eq i32 %25, 0
  %27 = add i32 %4, -1
  %28 = icmp eq i32 %20, 0
  br label %29

29:                                               ; preds = %16, %74
  %30 = phi i8* [ %8, %16 ], [ %78, %74 ]
  %31 = phi i32* [ %1, %16 ], [ %77, %74 ]
  %32 = phi i32 [ %5, %16 ], [ %79, %74 ]
  br i1 %17, label %74, label %33

33:                                               ; preds = %29
  %34 = bitcast i8* %30 to i16*
  br i1 %26, label %44, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = lshr i16 %36, 8
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds i32*, i32** %14, i64 %38
  %40 = load i32*, i32** %39, align 8
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 %41, i32* %31, align 4
  %43 = getelementptr inbounds i16, i16* %34, i64 %12
  br label %44

44:                                               ; preds = %35, %33
  %45 = phi i32* [ %42, %35 ], [ undef, %33 ]
  %46 = phi i16* [ %43, %35 ], [ %34, %33 ]
  %47 = phi i32* [ %42, %35 ], [ %31, %33 ]
  %48 = phi i32 [ %27, %35 ], [ %4, %33 ]
  br i1 %28, label %71, label %49

49:                                               ; preds = %44, %49
  %50 = phi i16* [ %68, %49 ], [ %46, %44 ]
  %51 = phi i32* [ %67, %49 ], [ %47, %44 ]
  %52 = phi i32 [ %69, %49 ], [ %48, %44 ]
  %53 = load i16, i16* %50, align 2
  %54 = lshr i16 %53, 8
  %55 = zext i16 %54 to i64
  %56 = getelementptr inbounds i32*, i32** %14, i64 %55
  %57 = load i32*, i32** %56, align 8
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i32, i32* %51, i64 1
  store i32 %58, i32* %51, align 4
  %60 = getelementptr inbounds i16, i16* %50, i64 %12
  %61 = load i16, i16* %60, align 2
  %62 = lshr i16 %61, 8
  %63 = zext i16 %62 to i64
  %64 = getelementptr inbounds i32*, i32** %14, i64 %63
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i32, i32* %51, i64 2
  store i32 %66, i32* %59, align 4
  %68 = getelementptr inbounds i16, i16* %60, i64 %12
  %69 = add i32 %52, -2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %49

71:                                               ; preds = %49, %44
  %72 = phi i32* [ %45, %44 ], [ %67, %49 ]
  %73 = getelementptr i8, i8* %30, i64 %24
  br label %74

74:                                               ; preds = %71, %29
  %75 = phi i32* [ %31, %29 ], [ %72, %71 ]
  %76 = phi i8* [ %30, %29 ], [ %73, %71 ]
  %77 = getelementptr inbounds i32, i32* %75, i64 %18
  %78 = getelementptr inbounds i8, i8* %76, i64 %19
  %79 = add i32 %32, -1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %29

81:                                               ; preds = %74, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putagreytile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %88, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i32 %4, 0
  %17 = zext i16 %15 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %6 to i64
  %20 = and i32 %4, 1
  %21 = icmp eq i32 %20, 0
  %22 = add i32 %4, -1
  %23 = icmp eq i32 %4, 1
  br label %24

24:                                               ; preds = %13, %81
  %25 = phi i8* [ %8, %13 ], [ %85, %81 ]
  %26 = phi i32* [ %1, %13 ], [ %84, %81 ]
  %27 = phi i32 [ %5, %13 ], [ %86, %81 ]
  br i1 %16, label %81, label %28

28:                                               ; preds = %24
  br i1 %21, label %43, label %29

29:                                               ; preds = %28
  %30 = load i8, i8* %25, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds i32*, i32** %11, i64 %31
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %25, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw i32 %37, 24
  %39 = or i32 %38, 16777215
  %40 = and i32 %39, %34
  %41 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %40, i32* %26, align 4
  %42 = getelementptr inbounds i8, i8* %25, i64 %17
  br label %43

43:                                               ; preds = %29, %28
  %44 = phi i32* [ %41, %29 ], [ undef, %28 ]
  %45 = phi i8* [ %42, %29 ], [ undef, %28 ]
  %46 = phi i8* [ %42, %29 ], [ %25, %28 ]
  %47 = phi i32* [ %41, %29 ], [ %26, %28 ]
  %48 = phi i32 [ %22, %29 ], [ %4, %28 ]
  br i1 %23, label %81, label %49

49:                                               ; preds = %43, %49
  %50 = phi i8* [ %78, %49 ], [ %46, %43 ]
  %51 = phi i32* [ %77, %49 ], [ %47, %43 ]
  %52 = phi i32 [ %79, %49 ], [ %48, %43 ]
  %53 = load i8, i8* %50, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds i32*, i32** %11, i64 %54
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds i8, i8* %50, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw i32 %60, 24
  %62 = or i32 %61, 16777215
  %63 = and i32 %62, %57
  %64 = getelementptr inbounds i32, i32* %51, i64 1
  store i32 %63, i32* %51, align 4
  %65 = getelementptr inbounds i8, i8* %50, i64 %17
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds i32*, i32** %11, i64 %67
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds i8, i8* %65, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw i32 %73, 24
  %75 = or i32 %74, 16777215
  %76 = and i32 %75, %70
  %77 = getelementptr inbounds i32, i32* %51, i64 2
  store i32 %76, i32* %64, align 4
  %78 = getelementptr inbounds i8, i8* %65, i64 %17
  %79 = add i32 %52, -2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %49

81:                                               ; preds = %43, %49, %24
  %82 = phi i32* [ %26, %24 ], [ %44, %43 ], [ %77, %49 ]
  %83 = phi i8* [ %25, %24 ], [ %45, %43 ], [ %78, %49 ]
  %84 = getelementptr inbounds i32, i32* %82, i64 %18
  %85 = getelementptr inbounds i8, i8* %83, i64 %19
  %86 = add i32 %27, -1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %24

88:                                               ; preds = %81, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putgreytile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %91, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i32 %4, 0
  %17 = zext i16 %15 to i64
  %18 = sext i32 %7 to i64
  %19 = sext i32 %6 to i64
  %20 = add i32 %4, -1
  %21 = and i32 %4, 3
  %22 = icmp eq i32 %21, 0
  %23 = icmp ult i32 %20, 3
  br label %24

24:                                               ; preds = %13, %84
  %25 = phi i8* [ %8, %13 ], [ %88, %84 ]
  %26 = phi i32* [ %1, %13 ], [ %87, %84 ]
  %27 = phi i32 [ %5, %13 ], [ %89, %84 ]
  br i1 %16, label %84, label %28

28:                                               ; preds = %24
  br i1 %22, label %44, label %29

29:                                               ; preds = %28, %29
  %30 = phi i8* [ %40, %29 ], [ %25, %28 ]
  %31 = phi i32* [ %39, %29 ], [ %26, %28 ]
  %32 = phi i32 [ %41, %29 ], [ %4, %28 ]
  %33 = phi i32 [ %42, %29 ], [ %21, %28 ]
  %34 = load i8, i8* %30, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds i32*, i32** %11, i64 %35
  %37 = load i32*, i32** %36, align 8
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 %38, i32* %31, align 4
  %40 = getelementptr inbounds i8, i8* %30, i64 %17
  %41 = add i32 %32, -1
  %42 = add i32 %33, -1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %29, !llvm.loop !20

44:                                               ; preds = %29, %28
  %45 = phi i32* [ undef, %28 ], [ %39, %29 ]
  %46 = phi i8* [ undef, %28 ], [ %40, %29 ]
  %47 = phi i8* [ %25, %28 ], [ %40, %29 ]
  %48 = phi i32* [ %26, %28 ], [ %39, %29 ]
  %49 = phi i32 [ %4, %28 ], [ %41, %29 ]
  br i1 %23, label %84, label %50

50:                                               ; preds = %44, %50
  %51 = phi i8* [ %81, %50 ], [ %47, %44 ]
  %52 = phi i32* [ %80, %50 ], [ %48, %44 ]
  %53 = phi i32 [ %82, %50 ], [ %49, %44 ]
  %54 = load i8, i8* %51, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i32*, i32** %11, i64 %55
  %57 = load i32*, i32** %56, align 8
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 %58, i32* %52, align 4
  %60 = getelementptr inbounds i8, i8* %51, i64 %17
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds i32*, i32** %11, i64 %62
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i32, i32* %52, i64 2
  store i32 %65, i32* %59, align 4
  %67 = getelementptr inbounds i8, i8* %60, i64 %17
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds i32*, i32** %11, i64 %69
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds i32, i32* %52, i64 3
  store i32 %72, i32* %66, align 4
  %74 = getelementptr inbounds i8, i8* %67, i64 %17
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds i32*, i32** %11, i64 %76
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds i32, i32* %52, i64 4
  store i32 %79, i32* %73, align 4
  %81 = getelementptr inbounds i8, i8* %74, i64 %17
  %82 = add i32 %53, -4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %50

84:                                               ; preds = %44, %50, %24
  %85 = phi i32* [ %26, %24 ], [ %45, %44 ], [ %80, %50 ]
  %86 = phi i8* [ %25, %24 ], [ %46, %44 ], [ %81, %50 ]
  %87 = getelementptr inbounds i32, i32* %85, i64 %18
  %88 = getelementptr inbounds i8, i8* %86, i64 %19
  %89 = add i32 %27, -1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %24

91:                                               ; preds = %84, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put4bitbwtile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %92, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 2
  %15 = icmp ugt i32 %4, 1
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 1
  %19 = add i32 %4, -2
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = add i32 %4, -2
  %23 = icmp ult i32 %19, 2
  br label %24

24:                                               ; preds = %13, %85
  %25 = phi i8* [ %8, %13 ], [ %89, %85 ]
  %26 = phi i32* [ %1, %13 ], [ %88, %85 ]
  %27 = phi i32 [ %5, %13 ], [ %90, %85 ]
  br i1 %15, label %28, label %72

28:                                               ; preds = %24
  br i1 %21, label %29, label %40

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = load i8, i8* %25, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i32*, i32** %11, i64 %32
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %34, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %36, i32* %26, align 4
  %38 = load i32, i32* %35, align 4
  %39 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %38, i32* %37, align 4
  br label %40

40:                                               ; preds = %29, %28
  %41 = phi i32 [ %22, %29 ], [ %4, %28 ]
  %42 = phi i8* [ %30, %29 ], [ %25, %28 ]
  %43 = phi i32* [ %39, %29 ], [ %26, %28 ]
  %44 = phi i8* [ %30, %29 ], [ undef, %28 ]
  %45 = phi i32* [ %39, %29 ], [ undef, %28 ]
  br i1 %23, label %72, label %46

46:                                               ; preds = %40, %46
  %47 = phi i32 [ %70, %46 ], [ %41, %40 ]
  %48 = phi i8* [ %60, %46 ], [ %42, %40 ]
  %49 = phi i32* [ %69, %46 ], [ %43, %40 ]
  %50 = getelementptr inbounds i8, i8* %48, i64 1
  %51 = load i8, i8* %48, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds i32*, i32** %11, i64 %52
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 1
  %56 = load i32, i32* %54, align 4
  %57 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 %56, i32* %49, align 4
  %58 = load i32, i32* %55, align 4
  %59 = getelementptr inbounds i32, i32* %49, i64 2
  store i32 %58, i32* %57, align 4
  %60 = getelementptr inbounds i8, i8* %48, i64 2
  %61 = load i8, i8* %50, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds i32*, i32** %11, i64 %62
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  %66 = load i32, i32* %64, align 4
  %67 = getelementptr inbounds i32, i32* %49, i64 3
  store i32 %66, i32* %59, align 4
  %68 = load i32, i32* %65, align 4
  %69 = getelementptr inbounds i32, i32* %49, i64 4
  store i32 %68, i32* %67, align 4
  %70 = add i32 %47, -4
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %46, label %72

72:                                               ; preds = %40, %46, %24
  %73 = phi i32* [ %26, %24 ], [ %45, %40 ], [ %69, %46 ]
  %74 = phi i8* [ %25, %24 ], [ %44, %40 ], [ %60, %46 ]
  %75 = phi i32 [ %4, %24 ], [ %18, %46 ], [ %18, %40 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  %79 = load i8, i8* %74, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds i32*, i32** %11, i64 %80
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds i32, i32* %73, i64 1
  store i32 %83, i32* %73, align 4
  br label %85

85:                                               ; preds = %72, %77
  %86 = phi i32* [ %84, %77 ], [ %73, %72 ]
  %87 = phi i8* [ %78, %77 ], [ %74, %72 ]
  %88 = getelementptr inbounds i32, i32* %86, i64 %16
  %89 = getelementptr inbounds i8, i8* %87, i64 %17
  %90 = add i32 %27, -1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %24

92:                                               ; preds = %85, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put2bitbwtile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %123, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 4
  %15 = icmp ugt i32 %4, 3
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 3
  %19 = add i32 %4, -4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  %22 = add i32 %4, -4
  %23 = icmp ult i32 %19, 4
  br label %24

24:                                               ; preds = %13, %116
  %25 = phi i8* [ %8, %13 ], [ %120, %116 ]
  %26 = phi i32* [ %1, %13 ], [ %119, %116 ]
  %27 = phi i32 [ %5, %13 ], [ %121, %116 ]
  br i1 %15, label %28, label %90

28:                                               ; preds = %24
  br i1 %21, label %29, label %46

29:                                               ; preds = %28
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = load i8, i8* %25, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds i32*, i32** %11, i64 %32
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %34, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %36, i32* %26, align 4
  %38 = getelementptr inbounds i32, i32* %34, i64 2
  %39 = load i32, i32* %35, align 4
  %40 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %39, i32* %37, align 4
  %41 = getelementptr inbounds i32, i32* %34, i64 3
  %42 = load i32, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %26, i64 3
  store i32 %42, i32* %40, align 4
  %44 = load i32, i32* %41, align 4
  %45 = getelementptr inbounds i32, i32* %26, i64 4
  store i32 %44, i32* %43, align 4
  br label %46

46:                                               ; preds = %29, %28
  %47 = phi i32 [ %22, %29 ], [ %4, %28 ]
  %48 = phi i8* [ %30, %29 ], [ %25, %28 ]
  %49 = phi i32* [ %45, %29 ], [ %26, %28 ]
  %50 = phi i8* [ %30, %29 ], [ undef, %28 ]
  %51 = phi i32* [ %45, %29 ], [ undef, %28 ]
  br i1 %23, label %90, label %52

52:                                               ; preds = %46, %52
  %53 = phi i32 [ %88, %52 ], [ %47, %46 ]
  %54 = phi i8* [ %72, %52 ], [ %48, %46 ]
  %55 = phi i32* [ %87, %52 ], [ %49, %46 ]
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = load i8, i8* %54, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds i32*, i32** %11, i64 %58
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 1
  %62 = load i32, i32* %60, align 4
  %63 = getelementptr inbounds i32, i32* %55, i64 1
  store i32 %62, i32* %55, align 4
  %64 = getelementptr inbounds i32, i32* %60, i64 2
  %65 = load i32, i32* %61, align 4
  %66 = getelementptr inbounds i32, i32* %55, i64 2
  store i32 %65, i32* %63, align 4
  %67 = getelementptr inbounds i32, i32* %60, i64 3
  %68 = load i32, i32* %64, align 4
  %69 = getelementptr inbounds i32, i32* %55, i64 3
  store i32 %68, i32* %66, align 4
  %70 = load i32, i32* %67, align 4
  %71 = getelementptr inbounds i32, i32* %55, i64 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds i8, i8* %54, i64 2
  %73 = load i8, i8* %56, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds i32*, i32** %11, i64 %74
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 1
  %78 = load i32, i32* %76, align 4
  %79 = getelementptr inbounds i32, i32* %55, i64 5
  store i32 %78, i32* %71, align 4
  %80 = getelementptr inbounds i32, i32* %76, i64 2
  %81 = load i32, i32* %77, align 4
  %82 = getelementptr inbounds i32, i32* %55, i64 6
  store i32 %81, i32* %79, align 4
  %83 = getelementptr inbounds i32, i32* %76, i64 3
  %84 = load i32, i32* %80, align 4
  %85 = getelementptr inbounds i32, i32* %55, i64 7
  store i32 %84, i32* %82, align 4
  %86 = load i32, i32* %83, align 4
  %87 = getelementptr inbounds i32, i32* %55, i64 8
  store i32 %86, i32* %85, align 4
  %88 = add i32 %53, -8
  %89 = icmp ugt i32 %88, 3
  br i1 %89, label %52, label %90

90:                                               ; preds = %46, %52, %24
  %91 = phi i32* [ %26, %24 ], [ %51, %46 ], [ %87, %52 ]
  %92 = phi i8* [ %25, %24 ], [ %50, %46 ], [ %72, %52 ]
  %93 = phi i32 [ %4, %24 ], [ %18, %52 ], [ %18, %46 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %116, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = load i8, i8* %92, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds i32*, i32** %11, i64 %98
  %100 = load i32*, i32** %99, align 8
  switch i32 %93, label %116 [
    i32 3, label %101
    i32 2, label %105
    i32 1, label %111
  ]

101:                                              ; preds = %95
  %102 = getelementptr inbounds i32, i32* %100, i64 1
  %103 = load i32, i32* %100, align 4
  %104 = getelementptr inbounds i32, i32* %91, i64 1
  store i32 %103, i32* %91, align 4
  br label %105

105:                                              ; preds = %95, %101
  %106 = phi i32* [ %91, %95 ], [ %104, %101 ]
  %107 = phi i32* [ %100, %95 ], [ %102, %101 ]
  %108 = getelementptr inbounds i32, i32* %107, i64 1
  %109 = load i32, i32* %107, align 4
  %110 = getelementptr inbounds i32, i32* %106, i64 1
  store i32 %109, i32* %106, align 4
  br label %111

111:                                              ; preds = %95, %105
  %112 = phi i32* [ %91, %95 ], [ %110, %105 ]
  %113 = phi i32* [ %100, %95 ], [ %108, %105 ]
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %112, i64 1
  store i32 %114, i32* %112, align 4
  br label %116

116:                                              ; preds = %90, %95, %111
  %117 = phi i32* [ %91, %95 ], [ %115, %111 ], [ %91, %90 ]
  %118 = phi i8* [ %96, %95 ], [ %96, %111 ], [ %92, %90 ]
  %119 = getelementptr inbounds i32, i32* %117, i64 %16
  %120 = getelementptr inbounds i8, i8* %118, i64 %17
  %121 = add i32 %27, -1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %24

123:                                              ; preds = %116, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @put1bitbwtile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #4 {
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 17
  %11 = load i32**, i32*** %10, align 8
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %114, label %13

13:                                               ; preds = %9
  %14 = sdiv i32 %6, 8
  %15 = icmp ugt i32 %4, 7
  %16 = sext i32 %7 to i64
  %17 = sext i32 %14 to i64
  %18 = and i32 %4, 7
  br label %19

19:                                               ; preds = %13, %107
  %20 = phi i8* [ %8, %13 ], [ %111, %107 ]
  %21 = phi i32* [ %1, %13 ], [ %110, %107 ]
  %22 = phi i32 [ %5, %13 ], [ %112, %107 ]
  br i1 %15, label %23, label %57

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %55, %23 ], [ %4, %19 ]
  %25 = phi i8* [ %27, %23 ], [ %20, %19 ]
  %26 = phi i32* [ %54, %23 ], [ %21, %19 ]
  %27 = getelementptr inbounds i8, i8* %25, i64 1
  %28 = load i8, i8* %25, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds i32*, i32** %11, i64 %29
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  %33 = load i32, i32* %31, align 4
  %34 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %33, i32* %26, align 4
  %35 = getelementptr inbounds i32, i32* %31, i64 2
  %36 = load i32, i32* %32, align 4
  %37 = getelementptr inbounds i32, i32* %26, i64 2
  store i32 %36, i32* %34, align 4
  %38 = getelementptr inbounds i32, i32* %31, i64 3
  %39 = load i32, i32* %35, align 4
  %40 = getelementptr inbounds i32, i32* %26, i64 3
  store i32 %39, i32* %37, align 4
  %41 = getelementptr inbounds i32, i32* %31, i64 4
  %42 = load i32, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %26, i64 4
  store i32 %42, i32* %40, align 4
  %44 = getelementptr inbounds i32, i32* %31, i64 5
  %45 = load i32, i32* %41, align 4
  %46 = getelementptr inbounds i32, i32* %26, i64 5
  store i32 %45, i32* %43, align 4
  %47 = getelementptr inbounds i32, i32* %31, i64 6
  %48 = load i32, i32* %44, align 4
  %49 = getelementptr inbounds i32, i32* %26, i64 6
  store i32 %48, i32* %46, align 4
  %50 = getelementptr inbounds i32, i32* %31, i64 7
  %51 = load i32, i32* %47, align 4
  %52 = getelementptr inbounds i32, i32* %26, i64 7
  store i32 %51, i32* %49, align 4
  %53 = load i32, i32* %50, align 4
  %54 = getelementptr inbounds i32, i32* %26, i64 8
  store i32 %53, i32* %52, align 4
  %55 = add i32 %24, -8
  %56 = icmp ugt i32 %55, 7
  br i1 %56, label %23, label %57

57:                                               ; preds = %23, %19
  %58 = phi i32* [ %21, %19 ], [ %54, %23 ]
  %59 = phi i8* [ %20, %19 ], [ %27, %23 ]
  %60 = phi i32 [ %4, %19 ], [ %18, %23 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %107, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  %64 = load i8, i8* %59, align 1
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds i32*, i32** %11, i64 %65
  %67 = load i32*, i32** %66, align 8
  switch i32 %60, label %107 [
    i32 7, label %68
    i32 6, label %72
    i32 5, label %78
    i32 4, label %84
    i32 3, label %90
    i32 2, label %96
    i32 1, label %102
  ]

68:                                               ; preds = %62
  %69 = getelementptr inbounds i32, i32* %67, i64 1
  %70 = load i32, i32* %67, align 4
  %71 = getelementptr inbounds i32, i32* %58, i64 1
  store i32 %70, i32* %58, align 4
  br label %72

72:                                               ; preds = %62, %68
  %73 = phi i32* [ %58, %62 ], [ %71, %68 ]
  %74 = phi i32* [ %67, %62 ], [ %69, %68 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 1
  %76 = load i32, i32* %74, align 4
  %77 = getelementptr inbounds i32, i32* %73, i64 1
  store i32 %76, i32* %73, align 4
  br label %78

78:                                               ; preds = %62, %72
  %79 = phi i32* [ %58, %62 ], [ %77, %72 ]
  %80 = phi i32* [ %67, %62 ], [ %75, %72 ]
  %81 = getelementptr inbounds i32, i32* %80, i64 1
  %82 = load i32, i32* %80, align 4
  %83 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 %82, i32* %79, align 4
  br label %84

84:                                               ; preds = %62, %78
  %85 = phi i32* [ %58, %62 ], [ %83, %78 ]
  %86 = phi i32* [ %67, %62 ], [ %81, %78 ]
  %87 = getelementptr inbounds i32, i32* %86, i64 1
  %88 = load i32, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %85, i64 1
  store i32 %88, i32* %85, align 4
  br label %90

90:                                               ; preds = %62, %84
  %91 = phi i32* [ %58, %62 ], [ %89, %84 ]
  %92 = phi i32* [ %67, %62 ], [ %87, %84 ]
  %93 = getelementptr inbounds i32, i32* %92, i64 1
  %94 = load i32, i32* %92, align 4
  %95 = getelementptr inbounds i32, i32* %91, i64 1
  store i32 %94, i32* %91, align 4
  br label %96

96:                                               ; preds = %62, %90
  %97 = phi i32* [ %58, %62 ], [ %95, %90 ]
  %98 = phi i32* [ %67, %62 ], [ %93, %90 ]
  %99 = getelementptr inbounds i32, i32* %98, i64 1
  %100 = load i32, i32* %98, align 4
  %101 = getelementptr inbounds i32, i32* %97, i64 1
  store i32 %100, i32* %97, align 4
  br label %102

102:                                              ; preds = %62, %96
  %103 = phi i32* [ %58, %62 ], [ %101, %96 ]
  %104 = phi i32* [ %67, %62 ], [ %99, %96 ]
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  store i32 %105, i32* %103, align 4
  br label %107

107:                                              ; preds = %57, %62, %102
  %108 = phi i32* [ %58, %62 ], [ %106, %102 ], [ %58, %57 ]
  %109 = phi i8* [ %63, %62 ], [ %63, %102 ], [ %59, %57 ]
  %110 = getelementptr inbounds i32, i32* %108, i64 %16
  %111 = getelementptr inbounds i8, i8* %109, i64 %17
  %112 = add i32 %22, -1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %19

114:                                              ; preds = %107, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @initYCbCrConversion(%struct._TIFFRGBAImage* nocapture) unnamed_addr #0 {
  %2 = alloca float*, align 8
  %3 = alloca float*, align 8
  %4 = bitcast float** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store float* inttoptr (i64 -6148914691236517206 to float*), float** %2, align 8
  %5 = bitcast float** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  store float* inttoptr (i64 -6148914691236517206 to float*), float** %3, align 8
  %6 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %7 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %6, align 8
  %8 = icmp eq %struct.TIFFYCbCrToRGB* %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %1
  %10 = tail call i8* @_TIFFmalloc(i64 6192) #6
  %11 = bitcast %struct.TIFFYCbCrToRGB** %6 to i8**
  store i8* %10, i8** %11, align 8
  %12 = icmp eq i8* %10, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %15 = load %struct.tiff*, %struct.tiff** %14, align 8
  %16 = getelementptr inbounds %struct.tiff, %struct.tiff* %15, i64 0, i32 55
  %17 = load i8*, i8** %16, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @initYCbCrConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i64 0, i64 0)) #6
  br label %84

18:                                               ; preds = %9, %1
  %19 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %20 = load %struct.tiff*, %struct.tiff** %19, align 8
  %21 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %20, i32 529, float** nonnull %2) #6
  %22 = load %struct.tiff*, %struct.tiff** %19, align 8
  %23 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %22, i32 532, float** nonnull %3) #6
  %24 = load float*, float** %2, align 8
  %25 = load float, float* %24, align 4
  %26 = fcmp uno float %25, 0.000000e+00
  br i1 %26, label %35, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds float, float* %24, i64 1
  %29 = load float, float* %28, align 4
  %30 = fcmp ueq float %29, 0.000000e+00
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds float, float* %24, i64 2
  %33 = load float, float* %32, align 4
  %34 = fcmp uno float %33, 0.000000e+00
  br i1 %34, label %35, label %39

35:                                               ; preds = %31, %27, %18
  %36 = load %struct.tiff*, %struct.tiff** %19, align 8
  %37 = getelementptr inbounds %struct.tiff, %struct.tiff* %36, i64 0, i32 55
  %38 = load i8*, i8** %37, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %38, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @initYCbCrConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)) #6
  br label %84

39:                                               ; preds = %31
  %40 = load float*, float** %3, align 8
  %41 = load float, float* %40, align 4
  %42 = fcmp ule float %41, 0xC1DFFFFFE0000000
  %43 = fcmp uge float %41, 0x41E0000000000000
  %44 = or i1 %43, %42
  br i1 %44, label %75, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds float, float* %40, i64 1
  %47 = load float, float* %46, align 4
  %48 = fcmp ule float %47, 0xC1DFFFFFE0000000
  %49 = fcmp uge float %47, 0x41E0000000000000
  %50 = or i1 %49, %48
  br i1 %50, label %75, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds float, float* %40, i64 2
  %53 = load float, float* %52, align 4
  %54 = fcmp ule float %53, 0xC1DFFFFFE0000000
  %55 = fcmp uge float %53, 0x41E0000000000000
  %56 = or i1 %55, %54
  br i1 %56, label %75, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds float, float* %40, i64 3
  %59 = load float, float* %58, align 4
  %60 = fcmp ule float %59, 0xC1DFFFFFE0000000
  %61 = fcmp uge float %59, 0x41E0000000000000
  %62 = or i1 %61, %60
  br i1 %62, label %75, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds float, float* %40, i64 4
  %65 = load float, float* %64, align 4
  %66 = fcmp ule float %65, 0xC1DFFFFFE0000000
  %67 = fcmp uge float %65, 0x41E0000000000000
  %68 = or i1 %67, %66
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds float, float* %40, i64 5
  %71 = load float, float* %70, align 4
  %72 = fcmp ule float %71, 0xC1DFFFFFE0000000
  %73 = fcmp uge float %71, 0x41E0000000000000
  %74 = or i1 %73, %72
  br i1 %74, label %75, label %79

75:                                               ; preds = %69, %63, %57, %51, %45, %39
  %76 = load %struct.tiff*, %struct.tiff** %19, align 8
  %77 = getelementptr inbounds %struct.tiff, %struct.tiff* %76, i64 0, i32 55
  %78 = load i8*, i8** %77, align 8
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %78, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @initYCbCrConversion.module, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0)) #6
  br label %84

79:                                               ; preds = %69
  %80 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %6, align 8
  %81 = call i32 @TIFFYCbCrToRGBInit(%struct.TIFFYCbCrToRGB* %80, float* %24, float* %40) #6
  %82 = lshr i32 %81, 31
  %83 = xor i32 %82, 1
  br label %84

84:                                               ; preds = %79, %75, %35, %13
  %85 = phi i32 [ 0, %13 ], [ 0, %35 ], [ 0, %75 ], [ %83, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr44tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = alloca i32, align 4
  %86 = alloca i32, align 4
  %87 = alloca i32, align 4
  %88 = alloca i32, align 4
  %89 = alloca i32, align 4
  %90 = alloca i32, align 4
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca i32, align 4
  %95 = alloca i32, align 4
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca i32, align 4
  %100 = alloca i32, align 4
  %101 = alloca i32, align 4
  %102 = alloca i32, align 4
  %103 = alloca i32, align 4
  %104 = alloca i32, align 4
  %105 = alloca i32, align 4
  %106 = zext i32 %4 to i64
  %107 = getelementptr inbounds i32, i32* %1, i64 %106
  %108 = sext i32 %7 to i64
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = getelementptr inbounds i32, i32* %109, i64 %106
  %111 = getelementptr inbounds i32, i32* %110, i64 %108
  %112 = getelementptr inbounds i32, i32* %111, i64 %106
  %113 = getelementptr inbounds i32, i32* %112, i64 %108
  %114 = mul i32 %4, 3
  %115 = shl nsw i32 %7, 2
  %116 = add i32 %115, %114
  %117 = sdiv i32 %6, 4
  %118 = mul nsw i32 %117, 10
  %119 = or i32 %5, %4
  %120 = and i32 %119, 3
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %177, label %122

122:                                              ; preds = %9
  %123 = icmp eq i32 %5, 0
  br i1 %123, label %743, label %124

124:                                              ; preds = %122
  %125 = icmp eq i32 %4, 0
  %126 = bitcast i32* %58 to i8*
  %127 = bitcast i32* %59 to i8*
  %128 = bitcast i32* %60 to i8*
  %129 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %130 = bitcast i32* %61 to i8*
  %131 = bitcast i32* %62 to i8*
  %132 = bitcast i32* %63 to i8*
  %133 = bitcast i32* %64 to i8*
  %134 = bitcast i32* %65 to i8*
  %135 = bitcast i32* %66 to i8*
  %136 = bitcast i32* %67 to i8*
  %137 = bitcast i32* %68 to i8*
  %138 = bitcast i32* %69 to i8*
  %139 = bitcast i32* %70 to i8*
  %140 = bitcast i32* %71 to i8*
  %141 = bitcast i32* %72 to i8*
  %142 = bitcast i32* %73 to i8*
  %143 = bitcast i32* %74 to i8*
  %144 = bitcast i32* %75 to i8*
  %145 = bitcast i32* %76 to i8*
  %146 = bitcast i32* %77 to i8*
  %147 = bitcast i32* %78 to i8*
  %148 = bitcast i32* %79 to i8*
  %149 = bitcast i32* %80 to i8*
  %150 = bitcast i32* %81 to i8*
  %151 = bitcast i32* %82 to i8*
  %152 = bitcast i32* %83 to i8*
  %153 = bitcast i32* %84 to i8*
  %154 = bitcast i32* %85 to i8*
  %155 = bitcast i32* %86 to i8*
  %156 = bitcast i32* %87 to i8*
  %157 = bitcast i32* %88 to i8*
  %158 = bitcast i32* %89 to i8*
  %159 = bitcast i32* %90 to i8*
  %160 = bitcast i32* %91 to i8*
  %161 = bitcast i32* %92 to i8*
  %162 = bitcast i32* %93 to i8*
  %163 = bitcast i32* %94 to i8*
  %164 = bitcast i32* %95 to i8*
  %165 = bitcast i32* %96 to i8*
  %166 = bitcast i32* %97 to i8*
  %167 = bitcast i32* %98 to i8*
  %168 = bitcast i32* %99 to i8*
  %169 = bitcast i32* %100 to i8*
  %170 = bitcast i32* %101 to i8*
  %171 = bitcast i32* %102 to i8*
  %172 = bitcast i32* %103 to i8*
  %173 = bitcast i32* %104 to i8*
  %174 = bitcast i32* %105 to i8*
  %175 = sext i32 %116 to i64
  %176 = sext i32 %118 to i64
  br label %470

177:                                              ; preds = %9
  %178 = icmp ugt i32 %5, 3
  br i1 %178, label %179, label %743

179:                                              ; preds = %177
  %180 = lshr i32 %4, 2
  %181 = bitcast i32* %10 to i8*
  %182 = bitcast i32* %11 to i8*
  %183 = bitcast i32* %12 to i8*
  %184 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %185 = bitcast i32* %13 to i8*
  %186 = bitcast i32* %14 to i8*
  %187 = bitcast i32* %15 to i8*
  %188 = bitcast i32* %16 to i8*
  %189 = bitcast i32* %17 to i8*
  %190 = bitcast i32* %18 to i8*
  %191 = bitcast i32* %19 to i8*
  %192 = bitcast i32* %20 to i8*
  %193 = bitcast i32* %21 to i8*
  %194 = bitcast i32* %22 to i8*
  %195 = bitcast i32* %23 to i8*
  %196 = bitcast i32* %24 to i8*
  %197 = bitcast i32* %25 to i8*
  %198 = bitcast i32* %26 to i8*
  %199 = bitcast i32* %27 to i8*
  %200 = bitcast i32* %28 to i8*
  %201 = bitcast i32* %29 to i8*
  %202 = bitcast i32* %30 to i8*
  %203 = bitcast i32* %31 to i8*
  %204 = bitcast i32* %32 to i8*
  %205 = bitcast i32* %33 to i8*
  %206 = bitcast i32* %34 to i8*
  %207 = bitcast i32* %35 to i8*
  %208 = bitcast i32* %36 to i8*
  %209 = bitcast i32* %37 to i8*
  %210 = bitcast i32* %38 to i8*
  %211 = bitcast i32* %39 to i8*
  %212 = bitcast i32* %40 to i8*
  %213 = bitcast i32* %41 to i8*
  %214 = bitcast i32* %42 to i8*
  %215 = bitcast i32* %43 to i8*
  %216 = bitcast i32* %44 to i8*
  %217 = bitcast i32* %45 to i8*
  %218 = bitcast i32* %46 to i8*
  %219 = bitcast i32* %47 to i8*
  %220 = bitcast i32* %48 to i8*
  %221 = bitcast i32* %49 to i8*
  %222 = bitcast i32* %50 to i8*
  %223 = bitcast i32* %51 to i8*
  %224 = bitcast i32* %52 to i8*
  %225 = bitcast i32* %53 to i8*
  %226 = bitcast i32* %54 to i8*
  %227 = bitcast i32* %55 to i8*
  %228 = bitcast i32* %56 to i8*
  %229 = bitcast i32* %57 to i8*
  %230 = sext i32 %116 to i64
  %231 = sext i32 %118 to i64
  br label %232

232:                                              ; preds = %179, %462
  %233 = phi i32* [ %1, %179 ], [ %463, %462 ]
  %234 = phi i32* [ %113, %179 ], [ %466, %462 ]
  %235 = phi i32* [ %111, %179 ], [ %465, %462 ]
  %236 = phi i32* [ %109, %179 ], [ %464, %462 ]
  %237 = phi i8* [ %8, %179 ], [ %467, %462 ]
  %238 = phi i32 [ %5, %179 ], [ %468, %462 ]
  br label %239

239:                                              ; preds = %239, %232
  %240 = phi i8* [ %237, %232 ], [ %459, %239 ]
  %241 = phi i32* [ %236, %232 ], [ %456, %239 ]
  %242 = phi i32* [ %235, %232 ], [ %457, %239 ]
  %243 = phi i32* [ %234, %232 ], [ %458, %239 ]
  %244 = phi i32 [ %180, %232 ], [ %460, %239 ]
  %245 = phi i32* [ %233, %232 ], [ %455, %239 ]
  %246 = getelementptr inbounds i8, i8* %240, i64 16
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = getelementptr inbounds i8, i8* %240, i64 17
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #6
  store i32 -1431655766, i32* %12, align 4
  %252 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %253 = load i8, i8* %240, align 1
  %254 = zext i8 %253 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %252, i32 %254, i32 %248, i32 %251, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %255 = load i32, i32* %10, align 4
  %256 = load i32, i32* %11, align 4
  %257 = shl i32 %256, 8
  %258 = load i32, i32* %12, align 4
  %259 = shl i32 %258, 16
  %260 = or i32 %255, %257
  %261 = or i32 %260, %259
  %262 = or i32 %261, -16777216
  store i32 %262, i32* %245, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #6
  store i32 -1431655766, i32* %15, align 4
  %263 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %264 = getelementptr inbounds i8, i8* %240, i64 1
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %263, i32 %266, i32 %248, i32 %251, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %267 = load i32, i32* %13, align 4
  %268 = load i32, i32* %14, align 4
  %269 = shl i32 %268, 8
  %270 = load i32, i32* %15, align 4
  %271 = shl i32 %270, 16
  %272 = or i32 %267, %269
  %273 = or i32 %272, %271
  %274 = or i32 %273, -16777216
  %275 = getelementptr inbounds i32, i32* %245, i64 1
  store i32 %274, i32* %275, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #6
  store i32 -1431655766, i32* %18, align 4
  %276 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %277 = getelementptr inbounds i8, i8* %240, i64 2
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %276, i32 %279, i32 %248, i32 %251, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %280 = load i32, i32* %16, align 4
  %281 = load i32, i32* %17, align 4
  %282 = shl i32 %281, 8
  %283 = load i32, i32* %18, align 4
  %284 = shl i32 %283, 16
  %285 = or i32 %280, %282
  %286 = or i32 %285, %284
  %287 = or i32 %286, -16777216
  %288 = getelementptr inbounds i32, i32* %245, i64 2
  store i32 %287, i32* %288, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #6
  store i32 -1431655766, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #6
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #6
  store i32 -1431655766, i32* %21, align 4
  %289 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %290 = getelementptr inbounds i8, i8* %240, i64 3
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %289, i32 %292, i32 %248, i32 %251, i32* nonnull %19, i32* nonnull %20, i32* nonnull %21) #6
  %293 = load i32, i32* %19, align 4
  %294 = load i32, i32* %20, align 4
  %295 = shl i32 %294, 8
  %296 = load i32, i32* %21, align 4
  %297 = shl i32 %296, 16
  %298 = or i32 %293, %295
  %299 = or i32 %298, %297
  %300 = or i32 %299, -16777216
  %301 = getelementptr inbounds i32, i32* %245, i64 3
  store i32 %300, i32* %301, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #6
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %195) #6
  store i32 -1431655766, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %196) #6
  store i32 -1431655766, i32* %24, align 4
  %302 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %303 = getelementptr inbounds i8, i8* %240, i64 4
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %302, i32 %305, i32 %248, i32 %251, i32* nonnull %22, i32* nonnull %23, i32* nonnull %24) #6
  %306 = load i32, i32* %22, align 4
  %307 = load i32, i32* %23, align 4
  %308 = shl i32 %307, 8
  %309 = load i32, i32* %24, align 4
  %310 = shl i32 %309, 16
  %311 = or i32 %306, %308
  %312 = or i32 %311, %310
  %313 = or i32 %312, -16777216
  store i32 %313, i32* %241, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %196) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %195) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #6
  store i32 -1431655766, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198) #6
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #6
  store i32 -1431655766, i32* %27, align 4
  %314 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %315 = getelementptr inbounds i8, i8* %240, i64 5
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %314, i32 %317, i32 %248, i32 %251, i32* nonnull %25, i32* nonnull %26, i32* nonnull %27) #6
  %318 = load i32, i32* %25, align 4
  %319 = load i32, i32* %26, align 4
  %320 = shl i32 %319, 8
  %321 = load i32, i32* %27, align 4
  %322 = shl i32 %321, 16
  %323 = or i32 %318, %320
  %324 = or i32 %323, %322
  %325 = or i32 %324, -16777216
  %326 = getelementptr inbounds i32, i32* %241, i64 1
  store i32 %325, i32* %326, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #6
  store i32 -1431655766, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %201) #6
  store i32 -1431655766, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #6
  store i32 -1431655766, i32* %30, align 4
  %327 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %328 = getelementptr inbounds i8, i8* %240, i64 6
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %327, i32 %330, i32 %248, i32 %251, i32* nonnull %28, i32* nonnull %29, i32* nonnull %30) #6
  %331 = load i32, i32* %28, align 4
  %332 = load i32, i32* %29, align 4
  %333 = shl i32 %332, 8
  %334 = load i32, i32* %30, align 4
  %335 = shl i32 %334, 16
  %336 = or i32 %331, %333
  %337 = or i32 %336, %335
  %338 = or i32 %337, -16777216
  %339 = getelementptr inbounds i32, i32* %241, i64 2
  store i32 %338, i32* %339, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %202) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %201) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #6
  store i32 -1431655766, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #6
  store i32 -1431655766, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #6
  store i32 -1431655766, i32* %33, align 4
  %340 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %341 = getelementptr inbounds i8, i8* %240, i64 7
  %342 = load i8, i8* %341, align 1
  %343 = zext i8 %342 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %340, i32 %343, i32 %248, i32 %251, i32* nonnull %31, i32* nonnull %32, i32* nonnull %33) #6
  %344 = load i32, i32* %31, align 4
  %345 = load i32, i32* %32, align 4
  %346 = shl i32 %345, 8
  %347 = load i32, i32* %33, align 4
  %348 = shl i32 %347, 16
  %349 = or i32 %344, %346
  %350 = or i32 %349, %348
  %351 = or i32 %350, -16777216
  %352 = getelementptr inbounds i32, i32* %241, i64 3
  store i32 %351, i32* %352, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206) #6
  store i32 -1431655766, i32* %34, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #6
  store i32 -1431655766, i32* %35, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208) #6
  store i32 -1431655766, i32* %36, align 4
  %353 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %354 = getelementptr inbounds i8, i8* %240, i64 8
  %355 = load i8, i8* %354, align 1
  %356 = zext i8 %355 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %353, i32 %356, i32 %248, i32 %251, i32* nonnull %34, i32* nonnull %35, i32* nonnull %36) #6
  %357 = load i32, i32* %34, align 4
  %358 = load i32, i32* %35, align 4
  %359 = shl i32 %358, 8
  %360 = load i32, i32* %36, align 4
  %361 = shl i32 %360, 16
  %362 = or i32 %357, %359
  %363 = or i32 %362, %361
  %364 = or i32 %363, -16777216
  store i32 %364, i32* %242, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %209) #6
  store i32 -1431655766, i32* %37, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210) #6
  store i32 -1431655766, i32* %38, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211) #6
  store i32 -1431655766, i32* %39, align 4
  %365 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %366 = getelementptr inbounds i8, i8* %240, i64 9
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %365, i32 %368, i32 %248, i32 %251, i32* nonnull %37, i32* nonnull %38, i32* nonnull %39) #6
  %369 = load i32, i32* %37, align 4
  %370 = load i32, i32* %38, align 4
  %371 = shl i32 %370, 8
  %372 = load i32, i32* %39, align 4
  %373 = shl i32 %372, 16
  %374 = or i32 %369, %371
  %375 = or i32 %374, %373
  %376 = or i32 %375, -16777216
  %377 = getelementptr inbounds i32, i32* %242, i64 1
  store i32 %376, i32* %377, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %209) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %212) #6
  store i32 -1431655766, i32* %40, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %213) #6
  store i32 -1431655766, i32* %41, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %214) #6
  store i32 -1431655766, i32* %42, align 4
  %378 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %379 = getelementptr inbounds i8, i8* %240, i64 10
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %378, i32 %381, i32 %248, i32 %251, i32* nonnull %40, i32* nonnull %41, i32* nonnull %42) #6
  %382 = load i32, i32* %40, align 4
  %383 = load i32, i32* %41, align 4
  %384 = shl i32 %383, 8
  %385 = load i32, i32* %42, align 4
  %386 = shl i32 %385, 16
  %387 = or i32 %382, %384
  %388 = or i32 %387, %386
  %389 = or i32 %388, -16777216
  %390 = getelementptr inbounds i32, i32* %242, i64 2
  store i32 %389, i32* %390, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %214) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %213) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %212) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #6
  store i32 -1431655766, i32* %43, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %216) #6
  store i32 -1431655766, i32* %44, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217) #6
  store i32 -1431655766, i32* %45, align 4
  %391 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %392 = getelementptr inbounds i8, i8* %240, i64 11
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %391, i32 %394, i32 %248, i32 %251, i32* nonnull %43, i32* nonnull %44, i32* nonnull %45) #6
  %395 = load i32, i32* %43, align 4
  %396 = load i32, i32* %44, align 4
  %397 = shl i32 %396, 8
  %398 = load i32, i32* %45, align 4
  %399 = shl i32 %398, 16
  %400 = or i32 %395, %397
  %401 = or i32 %400, %399
  %402 = or i32 %401, -16777216
  %403 = getelementptr inbounds i32, i32* %242, i64 3
  store i32 %402, i32* %403, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %218) #6
  store i32 -1431655766, i32* %46, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219) #6
  store i32 -1431655766, i32* %47, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #6
  store i32 -1431655766, i32* %48, align 4
  %404 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %405 = getelementptr inbounds i8, i8* %240, i64 12
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %404, i32 %407, i32 %248, i32 %251, i32* nonnull %46, i32* nonnull %47, i32* nonnull %48) #6
  %408 = load i32, i32* %46, align 4
  %409 = load i32, i32* %47, align 4
  %410 = shl i32 %409, 8
  %411 = load i32, i32* %48, align 4
  %412 = shl i32 %411, 16
  %413 = or i32 %408, %410
  %414 = or i32 %413, %412
  %415 = or i32 %414, -16777216
  store i32 %415, i32* %243, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %219) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %218) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #6
  store i32 -1431655766, i32* %49, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #6
  store i32 -1431655766, i32* %50, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #6
  store i32 -1431655766, i32* %51, align 4
  %416 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %417 = getelementptr inbounds i8, i8* %240, i64 13
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %416, i32 %419, i32 %248, i32 %251, i32* nonnull %49, i32* nonnull %50, i32* nonnull %51) #6
  %420 = load i32, i32* %49, align 4
  %421 = load i32, i32* %50, align 4
  %422 = shl i32 %421, 8
  %423 = load i32, i32* %51, align 4
  %424 = shl i32 %423, 16
  %425 = or i32 %420, %422
  %426 = or i32 %425, %424
  %427 = or i32 %426, -16777216
  %428 = getelementptr inbounds i32, i32* %243, i64 1
  store i32 %427, i32* %428, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224) #6
  store i32 -1431655766, i32* %52, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %225) #6
  store i32 -1431655766, i32* %53, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %226) #6
  store i32 -1431655766, i32* %54, align 4
  %429 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %430 = getelementptr inbounds i8, i8* %240, i64 14
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %429, i32 %432, i32 %248, i32 %251, i32* nonnull %52, i32* nonnull %53, i32* nonnull %54) #6
  %433 = load i32, i32* %52, align 4
  %434 = load i32, i32* %53, align 4
  %435 = shl i32 %434, 8
  %436 = load i32, i32* %54, align 4
  %437 = shl i32 %436, 16
  %438 = or i32 %433, %435
  %439 = or i32 %438, %437
  %440 = or i32 %439, -16777216
  %441 = getelementptr inbounds i32, i32* %243, i64 2
  store i32 %440, i32* %441, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %226) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %225) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %224) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %227) #6
  store i32 -1431655766, i32* %55, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %228) #6
  store i32 -1431655766, i32* %56, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229) #6
  store i32 -1431655766, i32* %57, align 4
  %442 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %184, align 8
  %443 = getelementptr inbounds i8, i8* %240, i64 15
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %442, i32 %445, i32 %248, i32 %251, i32* nonnull %55, i32* nonnull %56, i32* nonnull %57) #6
  %446 = load i32, i32* %55, align 4
  %447 = load i32, i32* %56, align 4
  %448 = shl i32 %447, 8
  %449 = load i32, i32* %57, align 4
  %450 = shl i32 %449, 16
  %451 = or i32 %446, %448
  %452 = or i32 %451, %450
  %453 = or i32 %452, -16777216
  %454 = getelementptr inbounds i32, i32* %243, i64 3
  store i32 %453, i32* %454, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %228) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %227) #6
  %455 = getelementptr inbounds i32, i32* %245, i64 4
  %456 = getelementptr inbounds i32, i32* %241, i64 4
  %457 = getelementptr inbounds i32, i32* %242, i64 4
  %458 = getelementptr inbounds i32, i32* %243, i64 4
  %459 = getelementptr inbounds i8, i8* %240, i64 18
  %460 = add i32 %244, -1
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %239

462:                                              ; preds = %239
  %463 = getelementptr inbounds i32, i32* %455, i64 %230
  %464 = getelementptr inbounds i32, i32* %456, i64 %230
  %465 = getelementptr inbounds i32, i32* %457, i64 %230
  %466 = getelementptr inbounds i32, i32* %458, i64 %230
  %467 = getelementptr inbounds i8, i8* %459, i64 %231
  %468 = add i32 %238, -4
  %469 = icmp ugt i32 %468, 3
  br i1 %469, label %232, label %743

470:                                              ; preds = %736, %124
  %471 = phi i32* [ %1, %124 ], [ %738, %736 ]
  %472 = phi i32* [ %113, %124 ], [ %741, %736 ]
  %473 = phi i32* [ %111, %124 ], [ %740, %736 ]
  %474 = phi i32* [ %109, %124 ], [ %739, %736 ]
  %475 = phi i8* [ %8, %124 ], [ %742, %736 ]
  %476 = phi i32 [ %5, %124 ], [ %737, %736 ]
  br i1 %125, label %729, label %477

477:                                              ; preds = %470, %721
  %478 = phi i32* [ %722, %721 ], [ %471, %470 ]
  %479 = phi i32 [ %726, %721 ], [ %4, %470 ]
  %480 = phi i32* [ %725, %721 ], [ %472, %470 ]
  %481 = phi i32* [ %724, %721 ], [ %473, %470 ]
  %482 = phi i32* [ %723, %721 ], [ %474, %470 ]
  %483 = phi i8* [ %727, %721 ], [ %475, %470 ]
  %484 = getelementptr inbounds i8, i8* %483, i64 16
  %485 = load i8, i8* %484, align 1
  %486 = zext i8 %485 to i32
  %487 = getelementptr inbounds i8, i8* %483, i64 17
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  switch i32 %479, label %490 [
    i32 3, label %547
    i32 2, label %604
    i32 1, label %661
  ]

490:                                              ; preds = %477
  switch i32 %476, label %491 [
    i32 3, label %505
    i32 2, label %519
    i32 1, label %533
  ]

491:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #6
  store i32 -1431655766, i32* %58, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #6
  store i32 -1431655766, i32* %59, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #6
  store i32 -1431655766, i32* %60, align 4
  %492 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %493 = getelementptr inbounds i8, i8* %483, i64 15
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %492, i32 %495, i32 %486, i32 %489, i32* nonnull %58, i32* nonnull %59, i32* nonnull %60) #6
  %496 = load i32, i32* %58, align 4
  %497 = load i32, i32* %59, align 4
  %498 = shl i32 %497, 8
  %499 = load i32, i32* %60, align 4
  %500 = shl i32 %499, 16
  %501 = or i32 %496, %498
  %502 = or i32 %501, %500
  %503 = or i32 %502, -16777216
  %504 = getelementptr inbounds i32, i32* %480, i64 3
  store i32 %503, i32* %504, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #6
  br label %505

505:                                              ; preds = %490, %491
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #6
  store i32 -1431655766, i32* %61, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #6
  store i32 -1431655766, i32* %62, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #6
  store i32 -1431655766, i32* %63, align 4
  %506 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %507 = getelementptr inbounds i8, i8* %483, i64 11
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %506, i32 %509, i32 %486, i32 %489, i32* nonnull %61, i32* nonnull %62, i32* nonnull %63) #6
  %510 = load i32, i32* %61, align 4
  %511 = load i32, i32* %62, align 4
  %512 = shl i32 %511, 8
  %513 = load i32, i32* %63, align 4
  %514 = shl i32 %513, 16
  %515 = or i32 %510, %512
  %516 = or i32 %515, %514
  %517 = or i32 %516, -16777216
  %518 = getelementptr inbounds i32, i32* %481, i64 3
  store i32 %517, i32* %518, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #6
  br label %519

519:                                              ; preds = %490, %505
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #6
  store i32 -1431655766, i32* %64, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #6
  store i32 -1431655766, i32* %65, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #6
  store i32 -1431655766, i32* %66, align 4
  %520 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %521 = getelementptr inbounds i8, i8* %483, i64 7
  %522 = load i8, i8* %521, align 1
  %523 = zext i8 %522 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %520, i32 %523, i32 %486, i32 %489, i32* nonnull %64, i32* nonnull %65, i32* nonnull %66) #6
  %524 = load i32, i32* %64, align 4
  %525 = load i32, i32* %65, align 4
  %526 = shl i32 %525, 8
  %527 = load i32, i32* %66, align 4
  %528 = shl i32 %527, 16
  %529 = or i32 %524, %526
  %530 = or i32 %529, %528
  %531 = or i32 %530, -16777216
  %532 = getelementptr inbounds i32, i32* %482, i64 3
  store i32 %531, i32* %532, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #6
  br label %533

533:                                              ; preds = %490, %519
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #6
  store i32 -1431655766, i32* %67, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #6
  store i32 -1431655766, i32* %68, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #6
  store i32 -1431655766, i32* %69, align 4
  %534 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %535 = getelementptr inbounds i8, i8* %483, i64 3
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %534, i32 %537, i32 %486, i32 %489, i32* nonnull %67, i32* nonnull %68, i32* nonnull %69) #6
  %538 = load i32, i32* %67, align 4
  %539 = load i32, i32* %68, align 4
  %540 = shl i32 %539, 8
  %541 = load i32, i32* %69, align 4
  %542 = shl i32 %541, 16
  %543 = or i32 %538, %540
  %544 = or i32 %543, %542
  %545 = or i32 %544, -16777216
  %546 = getelementptr inbounds i32, i32* %478, i64 3
  store i32 %545, i32* %546, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #6
  br label %547

547:                                              ; preds = %477, %533
  switch i32 %476, label %548 [
    i32 3, label %562
    i32 2, label %576
    i32 1, label %590
  ]

548:                                              ; preds = %547
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #6
  store i32 -1431655766, i32* %70, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #6
  store i32 -1431655766, i32* %71, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #6
  store i32 -1431655766, i32* %72, align 4
  %549 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %550 = getelementptr inbounds i8, i8* %483, i64 14
  %551 = load i8, i8* %550, align 1
  %552 = zext i8 %551 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %549, i32 %552, i32 %486, i32 %489, i32* nonnull %70, i32* nonnull %71, i32* nonnull %72) #6
  %553 = load i32, i32* %70, align 4
  %554 = load i32, i32* %71, align 4
  %555 = shl i32 %554, 8
  %556 = load i32, i32* %72, align 4
  %557 = shl i32 %556, 16
  %558 = or i32 %553, %555
  %559 = or i32 %558, %557
  %560 = or i32 %559, -16777216
  %561 = getelementptr inbounds i32, i32* %480, i64 2
  store i32 %560, i32* %561, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #6
  br label %562

562:                                              ; preds = %547, %548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #6
  store i32 -1431655766, i32* %73, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #6
  store i32 -1431655766, i32* %74, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #6
  store i32 -1431655766, i32* %75, align 4
  %563 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %564 = getelementptr inbounds i8, i8* %483, i64 10
  %565 = load i8, i8* %564, align 1
  %566 = zext i8 %565 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %563, i32 %566, i32 %486, i32 %489, i32* nonnull %73, i32* nonnull %74, i32* nonnull %75) #6
  %567 = load i32, i32* %73, align 4
  %568 = load i32, i32* %74, align 4
  %569 = shl i32 %568, 8
  %570 = load i32, i32* %75, align 4
  %571 = shl i32 %570, 16
  %572 = or i32 %567, %569
  %573 = or i32 %572, %571
  %574 = or i32 %573, -16777216
  %575 = getelementptr inbounds i32, i32* %481, i64 2
  store i32 %574, i32* %575, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #6
  br label %576

576:                                              ; preds = %547, %562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #6
  store i32 -1431655766, i32* %76, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #6
  store i32 -1431655766, i32* %77, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #6
  store i32 -1431655766, i32* %78, align 4
  %577 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %578 = getelementptr inbounds i8, i8* %483, i64 6
  %579 = load i8, i8* %578, align 1
  %580 = zext i8 %579 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %577, i32 %580, i32 %486, i32 %489, i32* nonnull %76, i32* nonnull %77, i32* nonnull %78) #6
  %581 = load i32, i32* %76, align 4
  %582 = load i32, i32* %77, align 4
  %583 = shl i32 %582, 8
  %584 = load i32, i32* %78, align 4
  %585 = shl i32 %584, 16
  %586 = or i32 %581, %583
  %587 = or i32 %586, %585
  %588 = or i32 %587, -16777216
  %589 = getelementptr inbounds i32, i32* %482, i64 2
  store i32 %588, i32* %589, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #6
  br label %590

590:                                              ; preds = %547, %576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #6
  store i32 -1431655766, i32* %79, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #6
  store i32 -1431655766, i32* %80, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #6
  store i32 -1431655766, i32* %81, align 4
  %591 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %592 = getelementptr inbounds i8, i8* %483, i64 2
  %593 = load i8, i8* %592, align 1
  %594 = zext i8 %593 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %591, i32 %594, i32 %486, i32 %489, i32* nonnull %79, i32* nonnull %80, i32* nonnull %81) #6
  %595 = load i32, i32* %79, align 4
  %596 = load i32, i32* %80, align 4
  %597 = shl i32 %596, 8
  %598 = load i32, i32* %81, align 4
  %599 = shl i32 %598, 16
  %600 = or i32 %595, %597
  %601 = or i32 %600, %599
  %602 = or i32 %601, -16777216
  %603 = getelementptr inbounds i32, i32* %478, i64 2
  store i32 %602, i32* %603, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #6
  br label %604

604:                                              ; preds = %477, %590
  switch i32 %476, label %605 [
    i32 3, label %619
    i32 2, label %633
    i32 1, label %647
  ]

605:                                              ; preds = %604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #6
  store i32 -1431655766, i32* %82, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #6
  store i32 -1431655766, i32* %83, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #6
  store i32 -1431655766, i32* %84, align 4
  %606 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %607 = getelementptr inbounds i8, i8* %483, i64 13
  %608 = load i8, i8* %607, align 1
  %609 = zext i8 %608 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %606, i32 %609, i32 %486, i32 %489, i32* nonnull %82, i32* nonnull %83, i32* nonnull %84) #6
  %610 = load i32, i32* %82, align 4
  %611 = load i32, i32* %83, align 4
  %612 = shl i32 %611, 8
  %613 = load i32, i32* %84, align 4
  %614 = shl i32 %613, 16
  %615 = or i32 %610, %612
  %616 = or i32 %615, %614
  %617 = or i32 %616, -16777216
  %618 = getelementptr inbounds i32, i32* %480, i64 1
  store i32 %617, i32* %618, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #6
  br label %619

619:                                              ; preds = %604, %605
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #6
  store i32 -1431655766, i32* %85, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #6
  store i32 -1431655766, i32* %86, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #6
  store i32 -1431655766, i32* %87, align 4
  %620 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %621 = getelementptr inbounds i8, i8* %483, i64 9
  %622 = load i8, i8* %621, align 1
  %623 = zext i8 %622 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %620, i32 %623, i32 %486, i32 %489, i32* nonnull %85, i32* nonnull %86, i32* nonnull %87) #6
  %624 = load i32, i32* %85, align 4
  %625 = load i32, i32* %86, align 4
  %626 = shl i32 %625, 8
  %627 = load i32, i32* %87, align 4
  %628 = shl i32 %627, 16
  %629 = or i32 %624, %626
  %630 = or i32 %629, %628
  %631 = or i32 %630, -16777216
  %632 = getelementptr inbounds i32, i32* %481, i64 1
  store i32 %631, i32* %632, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #6
  br label %633

633:                                              ; preds = %604, %619
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #6
  store i32 -1431655766, i32* %88, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #6
  store i32 -1431655766, i32* %89, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159) #6
  store i32 -1431655766, i32* %90, align 4
  %634 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %635 = getelementptr inbounds i8, i8* %483, i64 5
  %636 = load i8, i8* %635, align 1
  %637 = zext i8 %636 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %634, i32 %637, i32 %486, i32 %489, i32* nonnull %88, i32* nonnull %89, i32* nonnull %90) #6
  %638 = load i32, i32* %88, align 4
  %639 = load i32, i32* %89, align 4
  %640 = shl i32 %639, 8
  %641 = load i32, i32* %90, align 4
  %642 = shl i32 %641, 16
  %643 = or i32 %638, %640
  %644 = or i32 %643, %642
  %645 = or i32 %644, -16777216
  %646 = getelementptr inbounds i32, i32* %482, i64 1
  store i32 %645, i32* %646, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #6
  br label %647

647:                                              ; preds = %604, %633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160) #6
  store i32 -1431655766, i32* %91, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #6
  store i32 -1431655766, i32* %92, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162) #6
  store i32 -1431655766, i32* %93, align 4
  %648 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %649 = getelementptr inbounds i8, i8* %483, i64 1
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %648, i32 %651, i32 %486, i32 %489, i32* nonnull %91, i32* nonnull %92, i32* nonnull %93) #6
  %652 = load i32, i32* %91, align 4
  %653 = load i32, i32* %92, align 4
  %654 = shl i32 %653, 8
  %655 = load i32, i32* %93, align 4
  %656 = shl i32 %655, 16
  %657 = or i32 %652, %654
  %658 = or i32 %657, %656
  %659 = or i32 %658, -16777216
  %660 = getelementptr inbounds i32, i32* %478, i64 1
  store i32 %659, i32* %660, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160) #6
  br label %661

661:                                              ; preds = %477, %647
  switch i32 %476, label %662 [
    i32 3, label %675
    i32 2, label %688
    i32 1, label %701
  ]

662:                                              ; preds = %661
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #6
  store i32 -1431655766, i32* %94, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #6
  store i32 -1431655766, i32* %95, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #6
  store i32 -1431655766, i32* %96, align 4
  %663 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %664 = getelementptr inbounds i8, i8* %483, i64 12
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %663, i32 %666, i32 %486, i32 %489, i32* nonnull %94, i32* nonnull %95, i32* nonnull %96) #6
  %667 = load i32, i32* %94, align 4
  %668 = load i32, i32* %95, align 4
  %669 = shl i32 %668, 8
  %670 = load i32, i32* %96, align 4
  %671 = shl i32 %670, 16
  %672 = or i32 %667, %669
  %673 = or i32 %672, %671
  %674 = or i32 %673, -16777216
  store i32 %674, i32* %480, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #6
  br label %675

675:                                              ; preds = %661, %662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #6
  store i32 -1431655766, i32* %97, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #6
  store i32 -1431655766, i32* %98, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168) #6
  store i32 -1431655766, i32* %99, align 4
  %676 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %677 = getelementptr inbounds i8, i8* %483, i64 8
  %678 = load i8, i8* %677, align 1
  %679 = zext i8 %678 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %676, i32 %679, i32 %486, i32 %489, i32* nonnull %97, i32* nonnull %98, i32* nonnull %99) #6
  %680 = load i32, i32* %97, align 4
  %681 = load i32, i32* %98, align 4
  %682 = shl i32 %681, 8
  %683 = load i32, i32* %99, align 4
  %684 = shl i32 %683, 16
  %685 = or i32 %680, %682
  %686 = or i32 %685, %684
  %687 = or i32 %686, -16777216
  store i32 %687, i32* %481, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #6
  br label %688

688:                                              ; preds = %661, %675
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #6
  store i32 -1431655766, i32* %100, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170) #6
  store i32 -1431655766, i32* %101, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #6
  store i32 -1431655766, i32* %102, align 4
  %689 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %690 = getelementptr inbounds i8, i8* %483, i64 4
  %691 = load i8, i8* %690, align 1
  %692 = zext i8 %691 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %689, i32 %692, i32 %486, i32 %489, i32* nonnull %100, i32* nonnull %101, i32* nonnull %102) #6
  %693 = load i32, i32* %100, align 4
  %694 = load i32, i32* %101, align 4
  %695 = shl i32 %694, 8
  %696 = load i32, i32* %102, align 4
  %697 = shl i32 %696, 16
  %698 = or i32 %693, %695
  %699 = or i32 %698, %697
  %700 = or i32 %699, -16777216
  store i32 %700, i32* %482, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #6
  br label %701

701:                                              ; preds = %661, %688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #6
  store i32 -1431655766, i32* %103, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #6
  store i32 -1431655766, i32* %104, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #6
  store i32 -1431655766, i32* %105, align 4
  %702 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %129, align 8
  %703 = load i8, i8* %483, align 1
  %704 = zext i8 %703 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %702, i32 %704, i32 %486, i32 %489, i32* nonnull %103, i32* nonnull %104, i32* nonnull %105) #6
  %705 = load i32, i32* %103, align 4
  %706 = load i32, i32* %104, align 4
  %707 = shl i32 %706, 8
  %708 = load i32, i32* %105, align 4
  %709 = shl i32 %708, 16
  %710 = or i32 %705, %707
  %711 = or i32 %710, %709
  %712 = or i32 %711, -16777216
  store i32 %712, i32* %478, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #6
  %713 = icmp ult i32 %479, 4
  br i1 %713, label %714, label %721

714:                                              ; preds = %701
  %715 = zext i32 %479 to i64
  %716 = getelementptr inbounds i32, i32* %478, i64 %715
  %717 = getelementptr inbounds i32, i32* %482, i64 %715
  %718 = getelementptr inbounds i32, i32* %481, i64 %715
  %719 = getelementptr inbounds i32, i32* %480, i64 %715
  %720 = getelementptr inbounds i8, i8* %483, i64 18
  br label %729

721:                                              ; preds = %701
  %722 = getelementptr inbounds i32, i32* %478, i64 4
  %723 = getelementptr inbounds i32, i32* %482, i64 4
  %724 = getelementptr inbounds i32, i32* %481, i64 4
  %725 = getelementptr inbounds i32, i32* %480, i64 4
  %726 = add i32 %479, -4
  %727 = getelementptr inbounds i8, i8* %483, i64 18
  %728 = icmp eq i32 %726, 0
  br i1 %728, label %729, label %477

729:                                              ; preds = %721, %714, %470
  %730 = phi i8* [ %475, %470 ], [ %720, %714 ], [ %727, %721 ]
  %731 = phi i32* [ %474, %470 ], [ %717, %714 ], [ %723, %721 ]
  %732 = phi i32* [ %473, %470 ], [ %718, %714 ], [ %724, %721 ]
  %733 = phi i32* [ %472, %470 ], [ %719, %714 ], [ %725, %721 ]
  %734 = phi i32* [ %471, %470 ], [ %716, %714 ], [ %722, %721 ]
  %735 = icmp ult i32 %476, 5
  br i1 %735, label %743, label %736

736:                                              ; preds = %729
  %737 = add i32 %476, -4
  %738 = getelementptr inbounds i32, i32* %734, i64 %175
  %739 = getelementptr inbounds i32, i32* %731, i64 %175
  %740 = getelementptr inbounds i32, i32* %732, i64 %175
  %741 = getelementptr inbounds i32, i32* %733, i64 %175
  %742 = getelementptr inbounds i8, i8* %730, i64 %176
  br label %470

743:                                              ; preds = %729, %462, %122, %177
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr42tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = zext i32 %4 to i64
  %59 = getelementptr inbounds i32, i32* %1, i64 %58
  %60 = sext i32 %7 to i64
  %61 = getelementptr inbounds i32, i32* %59, i64 %60
  %62 = shl nsw i32 %7, 1
  %63 = add i32 %62, %4
  %64 = sdiv i32 %6, 4
  %65 = mul nsw i32 %64, 10
  %66 = and i32 %4, 3
  %67 = and i32 %5, 1
  %68 = or i32 %67, %66
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %101, label %70

70:                                               ; preds = %9
  %71 = icmp eq i32 %5, 0
  br i1 %71, label %410, label %72

72:                                               ; preds = %70
  %73 = icmp eq i32 %4, 0
  %74 = bitcast i32* %34 to i8*
  %75 = bitcast i32* %35 to i8*
  %76 = bitcast i32* %36 to i8*
  %77 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %78 = bitcast i32* %37 to i8*
  %79 = bitcast i32* %38 to i8*
  %80 = bitcast i32* %39 to i8*
  %81 = bitcast i32* %40 to i8*
  %82 = bitcast i32* %41 to i8*
  %83 = bitcast i32* %42 to i8*
  %84 = bitcast i32* %43 to i8*
  %85 = bitcast i32* %44 to i8*
  %86 = bitcast i32* %45 to i8*
  %87 = bitcast i32* %46 to i8*
  %88 = bitcast i32* %47 to i8*
  %89 = bitcast i32* %48 to i8*
  %90 = bitcast i32* %49 to i8*
  %91 = bitcast i32* %50 to i8*
  %92 = bitcast i32* %51 to i8*
  %93 = bitcast i32* %52 to i8*
  %94 = bitcast i32* %53 to i8*
  %95 = bitcast i32* %54 to i8*
  %96 = bitcast i32* %55 to i8*
  %97 = bitcast i32* %56 to i8*
  %98 = bitcast i32* %57 to i8*
  %99 = sext i32 %63 to i64
  %100 = sext i32 %65 to i64
  br label %260

101:                                              ; preds = %9
  %102 = icmp ugt i32 %5, 1
  br i1 %102, label %103, label %410

103:                                              ; preds = %101
  %104 = lshr i32 %4, 2
  %105 = bitcast i32* %10 to i8*
  %106 = bitcast i32* %11 to i8*
  %107 = bitcast i32* %12 to i8*
  %108 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %109 = bitcast i32* %13 to i8*
  %110 = bitcast i32* %14 to i8*
  %111 = bitcast i32* %15 to i8*
  %112 = bitcast i32* %16 to i8*
  %113 = bitcast i32* %17 to i8*
  %114 = bitcast i32* %18 to i8*
  %115 = bitcast i32* %19 to i8*
  %116 = bitcast i32* %20 to i8*
  %117 = bitcast i32* %21 to i8*
  %118 = bitcast i32* %22 to i8*
  %119 = bitcast i32* %23 to i8*
  %120 = bitcast i32* %24 to i8*
  %121 = bitcast i32* %25 to i8*
  %122 = bitcast i32* %26 to i8*
  %123 = bitcast i32* %27 to i8*
  %124 = bitcast i32* %28 to i8*
  %125 = bitcast i32* %29 to i8*
  %126 = bitcast i32* %30 to i8*
  %127 = bitcast i32* %31 to i8*
  %128 = bitcast i32* %32 to i8*
  %129 = bitcast i32* %33 to i8*
  %130 = sext i32 %63 to i64
  %131 = sext i32 %65 to i64
  br label %132

132:                                              ; preds = %103, %254
  %133 = phi i32* [ %1, %103 ], [ %255, %254 ]
  %134 = phi i32* [ %61, %103 ], [ %256, %254 ]
  %135 = phi i8* [ %8, %103 ], [ %257, %254 ]
  %136 = phi i32 [ %5, %103 ], [ %258, %254 ]
  br label %137

137:                                              ; preds = %137, %132
  %138 = phi i8* [ %135, %132 ], [ %251, %137 ]
  %139 = phi i32* [ %134, %132 ], [ %250, %137 ]
  %140 = phi i32 [ %104, %132 ], [ %252, %137 ]
  %141 = phi i32* [ %133, %132 ], [ %249, %137 ]
  %142 = getelementptr inbounds i8, i8* %138, i64 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds i8, i8* %138, i64 9
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #6
  store i32 -1431655766, i32* %12, align 4
  %148 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %149 = load i8, i8* %138, align 1
  %150 = zext i8 %149 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %148, i32 %150, i32 %144, i32 %147, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %151 = load i32, i32* %10, align 4
  %152 = load i32, i32* %11, align 4
  %153 = shl i32 %152, 8
  %154 = load i32, i32* %12, align 4
  %155 = shl i32 %154, 16
  %156 = or i32 %151, %153
  %157 = or i32 %156, %155
  %158 = or i32 %157, -16777216
  store i32 %158, i32* %141, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #6
  store i32 -1431655766, i32* %15, align 4
  %159 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %160 = getelementptr inbounds i8, i8* %138, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %159, i32 %162, i32 %144, i32 %147, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %163 = load i32, i32* %13, align 4
  %164 = load i32, i32* %14, align 4
  %165 = shl i32 %164, 8
  %166 = load i32, i32* %15, align 4
  %167 = shl i32 %166, 16
  %168 = or i32 %163, %165
  %169 = or i32 %168, %167
  %170 = or i32 %169, -16777216
  %171 = getelementptr inbounds i32, i32* %141, i64 1
  store i32 %170, i32* %171, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #6
  store i32 -1431655766, i32* %18, align 4
  %172 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %173 = getelementptr inbounds i8, i8* %138, i64 2
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %172, i32 %175, i32 %144, i32 %147, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %176 = load i32, i32* %16, align 4
  %177 = load i32, i32* %17, align 4
  %178 = shl i32 %177, 8
  %179 = load i32, i32* %18, align 4
  %180 = shl i32 %179, 16
  %181 = or i32 %176, %178
  %182 = or i32 %181, %180
  %183 = or i32 %182, -16777216
  %184 = getelementptr inbounds i32, i32* %141, i64 2
  store i32 %183, i32* %184, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #6
  store i32 -1431655766, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #6
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #6
  store i32 -1431655766, i32* %21, align 4
  %185 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %186 = getelementptr inbounds i8, i8* %138, i64 3
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %185, i32 %188, i32 %144, i32 %147, i32* nonnull %19, i32* nonnull %20, i32* nonnull %21) #6
  %189 = load i32, i32* %19, align 4
  %190 = load i32, i32* %20, align 4
  %191 = shl i32 %190, 8
  %192 = load i32, i32* %21, align 4
  %193 = shl i32 %192, 16
  %194 = or i32 %189, %191
  %195 = or i32 %194, %193
  %196 = or i32 %195, -16777216
  %197 = getelementptr inbounds i32, i32* %141, i64 3
  store i32 %196, i32* %197, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #6
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #6
  store i32 -1431655766, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #6
  store i32 -1431655766, i32* %24, align 4
  %198 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %199 = getelementptr inbounds i8, i8* %138, i64 4
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %198, i32 %201, i32 %144, i32 %147, i32* nonnull %22, i32* nonnull %23, i32* nonnull %24) #6
  %202 = load i32, i32* %22, align 4
  %203 = load i32, i32* %23, align 4
  %204 = shl i32 %203, 8
  %205 = load i32, i32* %24, align 4
  %206 = shl i32 %205, 16
  %207 = or i32 %202, %204
  %208 = or i32 %207, %206
  %209 = or i32 %208, -16777216
  store i32 %209, i32* %139, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #6
  store i32 -1431655766, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #6
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #6
  store i32 -1431655766, i32* %27, align 4
  %210 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %211 = getelementptr inbounds i8, i8* %138, i64 5
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %210, i32 %213, i32 %144, i32 %147, i32* nonnull %25, i32* nonnull %26, i32* nonnull %27) #6
  %214 = load i32, i32* %25, align 4
  %215 = load i32, i32* %26, align 4
  %216 = shl i32 %215, 8
  %217 = load i32, i32* %27, align 4
  %218 = shl i32 %217, 16
  %219 = or i32 %214, %216
  %220 = or i32 %219, %218
  %221 = or i32 %220, -16777216
  %222 = getelementptr inbounds i32, i32* %139, i64 1
  store i32 %221, i32* %222, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #6
  store i32 -1431655766, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #6
  store i32 -1431655766, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #6
  store i32 -1431655766, i32* %30, align 4
  %223 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %224 = getelementptr inbounds i8, i8* %138, i64 6
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %223, i32 %226, i32 %144, i32 %147, i32* nonnull %28, i32* nonnull %29, i32* nonnull %30) #6
  %227 = load i32, i32* %28, align 4
  %228 = load i32, i32* %29, align 4
  %229 = shl i32 %228, 8
  %230 = load i32, i32* %30, align 4
  %231 = shl i32 %230, 16
  %232 = or i32 %227, %229
  %233 = or i32 %232, %231
  %234 = or i32 %233, -16777216
  %235 = getelementptr inbounds i32, i32* %139, i64 2
  store i32 %234, i32* %235, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #6
  store i32 -1431655766, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #6
  store i32 -1431655766, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #6
  store i32 -1431655766, i32* %33, align 4
  %236 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %108, align 8
  %237 = getelementptr inbounds i8, i8* %138, i64 7
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %236, i32 %239, i32 %144, i32 %147, i32* nonnull %31, i32* nonnull %32, i32* nonnull %33) #6
  %240 = load i32, i32* %31, align 4
  %241 = load i32, i32* %32, align 4
  %242 = shl i32 %241, 8
  %243 = load i32, i32* %33, align 4
  %244 = shl i32 %243, 16
  %245 = or i32 %240, %242
  %246 = or i32 %245, %244
  %247 = or i32 %246, -16777216
  %248 = getelementptr inbounds i32, i32* %139, i64 3
  store i32 %247, i32* %248, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #6
  %249 = getelementptr inbounds i32, i32* %141, i64 4
  %250 = getelementptr inbounds i32, i32* %139, i64 4
  %251 = getelementptr inbounds i8, i8* %138, i64 10
  %252 = add i32 %140, -1
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %137

254:                                              ; preds = %137
  %255 = getelementptr inbounds i32, i32* %249, i64 %130
  %256 = getelementptr inbounds i32, i32* %250, i64 %130
  %257 = getelementptr inbounds i8, i8* %251, i64 %131
  %258 = add i32 %136, -2
  %259 = icmp ugt i32 %258, 1
  br i1 %259, label %132, label %410

260:                                              ; preds = %405, %72
  %261 = phi i32* [ %1, %72 ], [ %407, %405 ]
  %262 = phi i32* [ %61, %72 ], [ %408, %405 ]
  %263 = phi i8* [ %8, %72 ], [ %409, %405 ]
  %264 = phi i32 [ %5, %72 ], [ %406, %405 ]
  br i1 %73, label %400, label %265

265:                                              ; preds = %260
  %266 = icmp eq i32 %264, 1
  br label %267

267:                                              ; preds = %265, %379
  %268 = phi i32* [ %261, %265 ], [ %398, %379 ]
  %269 = phi i32 [ %4, %265 ], [ %397, %379 ]
  %270 = phi i32* [ %262, %265 ], [ %396, %379 ]
  %271 = phi i8* [ %263, %265 ], [ %393, %379 ]
  %272 = getelementptr inbounds i8, i8* %271, i64 8
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i32
  %275 = getelementptr inbounds i8, i8* %271, i64 9
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  switch i32 %269, label %278 [
    i32 3, label %307
    i32 2, label %336
    i32 1, label %365
  ]

278:                                              ; preds = %267
  br i1 %266, label %293, label %279

279:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #6
  store i32 -1431655766, i32* %34, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #6
  store i32 -1431655766, i32* %35, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #6
  store i32 -1431655766, i32* %36, align 4
  %280 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %281 = getelementptr inbounds i8, i8* %271, i64 7
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %280, i32 %283, i32 %274, i32 %277, i32* nonnull %34, i32* nonnull %35, i32* nonnull %36) #6
  %284 = load i32, i32* %34, align 4
  %285 = load i32, i32* %35, align 4
  %286 = shl i32 %285, 8
  %287 = load i32, i32* %36, align 4
  %288 = shl i32 %287, 16
  %289 = or i32 %284, %286
  %290 = or i32 %289, %288
  %291 = or i32 %290, -16777216
  %292 = getelementptr inbounds i32, i32* %270, i64 3
  store i32 %291, i32* %292, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #6
  br label %293

293:                                              ; preds = %278, %279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #6
  store i32 -1431655766, i32* %37, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #6
  store i32 -1431655766, i32* %38, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #6
  store i32 -1431655766, i32* %39, align 4
  %294 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %295 = getelementptr inbounds i8, i8* %271, i64 3
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %294, i32 %297, i32 %274, i32 %277, i32* nonnull %37, i32* nonnull %38, i32* nonnull %39) #6
  %298 = load i32, i32* %37, align 4
  %299 = load i32, i32* %38, align 4
  %300 = shl i32 %299, 8
  %301 = load i32, i32* %39, align 4
  %302 = shl i32 %301, 16
  %303 = or i32 %298, %300
  %304 = or i32 %303, %302
  %305 = or i32 %304, -16777216
  %306 = getelementptr inbounds i32, i32* %268, i64 3
  store i32 %305, i32* %306, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #6
  br label %307

307:                                              ; preds = %267, %293
  br i1 %266, label %322, label %308

308:                                              ; preds = %307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #6
  store i32 -1431655766, i32* %40, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #6
  store i32 -1431655766, i32* %41, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #6
  store i32 -1431655766, i32* %42, align 4
  %309 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %310 = getelementptr inbounds i8, i8* %271, i64 6
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %309, i32 %312, i32 %274, i32 %277, i32* nonnull %40, i32* nonnull %41, i32* nonnull %42) #6
  %313 = load i32, i32* %40, align 4
  %314 = load i32, i32* %41, align 4
  %315 = shl i32 %314, 8
  %316 = load i32, i32* %42, align 4
  %317 = shl i32 %316, 16
  %318 = or i32 %313, %315
  %319 = or i32 %318, %317
  %320 = or i32 %319, -16777216
  %321 = getelementptr inbounds i32, i32* %270, i64 2
  store i32 %320, i32* %321, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #6
  br label %322

322:                                              ; preds = %307, %308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #6
  store i32 -1431655766, i32* %43, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #6
  store i32 -1431655766, i32* %44, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #6
  store i32 -1431655766, i32* %45, align 4
  %323 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %324 = getelementptr inbounds i8, i8* %271, i64 2
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %323, i32 %326, i32 %274, i32 %277, i32* nonnull %43, i32* nonnull %44, i32* nonnull %45) #6
  %327 = load i32, i32* %43, align 4
  %328 = load i32, i32* %44, align 4
  %329 = shl i32 %328, 8
  %330 = load i32, i32* %45, align 4
  %331 = shl i32 %330, 16
  %332 = or i32 %327, %329
  %333 = or i32 %332, %331
  %334 = or i32 %333, -16777216
  %335 = getelementptr inbounds i32, i32* %268, i64 2
  store i32 %334, i32* %335, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #6
  br label %336

336:                                              ; preds = %267, %322
  br i1 %266, label %351, label %337

337:                                              ; preds = %336
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #6
  store i32 -1431655766, i32* %46, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #6
  store i32 -1431655766, i32* %47, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #6
  store i32 -1431655766, i32* %48, align 4
  %338 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %339 = getelementptr inbounds i8, i8* %271, i64 5
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %338, i32 %341, i32 %274, i32 %277, i32* nonnull %46, i32* nonnull %47, i32* nonnull %48) #6
  %342 = load i32, i32* %46, align 4
  %343 = load i32, i32* %47, align 4
  %344 = shl i32 %343, 8
  %345 = load i32, i32* %48, align 4
  %346 = shl i32 %345, 16
  %347 = or i32 %342, %344
  %348 = or i32 %347, %346
  %349 = or i32 %348, -16777216
  %350 = getelementptr inbounds i32, i32* %270, i64 1
  store i32 %349, i32* %350, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #6
  br label %351

351:                                              ; preds = %336, %337
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #6
  store i32 -1431655766, i32* %49, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #6
  store i32 -1431655766, i32* %50, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #6
  store i32 -1431655766, i32* %51, align 4
  %352 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %353 = getelementptr inbounds i8, i8* %271, i64 1
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %352, i32 %355, i32 %274, i32 %277, i32* nonnull %49, i32* nonnull %50, i32* nonnull %51) #6
  %356 = load i32, i32* %49, align 4
  %357 = load i32, i32* %50, align 4
  %358 = shl i32 %357, 8
  %359 = load i32, i32* %51, align 4
  %360 = shl i32 %359, 16
  %361 = or i32 %356, %358
  %362 = or i32 %361, %360
  %363 = or i32 %362, -16777216
  %364 = getelementptr inbounds i32, i32* %268, i64 1
  store i32 %363, i32* %364, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #6
  br label %365

365:                                              ; preds = %267, %351
  br i1 %266, label %379, label %366

366:                                              ; preds = %365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #6
  store i32 -1431655766, i32* %52, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #6
  store i32 -1431655766, i32* %53, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #6
  store i32 -1431655766, i32* %54, align 4
  %367 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %368 = getelementptr inbounds i8, i8* %271, i64 4
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %367, i32 %370, i32 %274, i32 %277, i32* nonnull %52, i32* nonnull %53, i32* nonnull %54) #6
  %371 = load i32, i32* %52, align 4
  %372 = load i32, i32* %53, align 4
  %373 = shl i32 %372, 8
  %374 = load i32, i32* %54, align 4
  %375 = shl i32 %374, 16
  %376 = or i32 %371, %373
  %377 = or i32 %376, %375
  %378 = or i32 %377, -16777216
  store i32 %378, i32* %270, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  br label %379

379:                                              ; preds = %365, %366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #6
  store i32 -1431655766, i32* %55, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #6
  store i32 -1431655766, i32* %56, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #6
  store i32 -1431655766, i32* %57, align 4
  %380 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %77, align 8
  %381 = load i8, i8* %271, align 1
  %382 = zext i8 %381 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %380, i32 %382, i32 %274, i32 %277, i32* nonnull %55, i32* nonnull %56, i32* nonnull %57) #6
  %383 = load i32, i32* %55, align 4
  %384 = load i32, i32* %56, align 4
  %385 = shl i32 %384, 8
  %386 = load i32, i32* %57, align 4
  %387 = shl i32 %386, 16
  %388 = or i32 %383, %385
  %389 = or i32 %388, %387
  %390 = or i32 %389, -16777216
  store i32 %390, i32* %268, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #6
  %391 = icmp ult i32 %269, 4
  %392 = add i32 %269, -4
  %393 = getelementptr inbounds i8, i8* %271, i64 10
  %394 = select i1 %391, i32 %269, i32 4
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i32, i32* %270, i64 %395
  %397 = select i1 %391, i32 0, i32 %392
  %398 = getelementptr inbounds i32, i32* %268, i64 %395
  %399 = icmp eq i32 %397, 0
  br i1 %399, label %400, label %267

400:                                              ; preds = %379, %260
  %401 = phi i8* [ %263, %260 ], [ %393, %379 ]
  %402 = phi i32* [ %262, %260 ], [ %396, %379 ]
  %403 = phi i32* [ %261, %260 ], [ %398, %379 ]
  %404 = icmp ult i32 %264, 3
  br i1 %404, label %410, label %405

405:                                              ; preds = %400
  %406 = add i32 %264, -2
  %407 = getelementptr inbounds i32, i32* %403, i64 %99
  %408 = getelementptr inbounds i32, i32* %402, i64 %99
  %409 = getelementptr inbounds i8, i8* %401, i64 %100
  br label %260

410:                                              ; preds = %400, %254, %70, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr41tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = sdiv i32 %6, 4
  %32 = mul nsw i32 %31, 6
  %33 = lshr i32 %4, 2
  %34 = icmp eq i32 %33, 0
  %35 = bitcast i32* %10 to i8*
  %36 = bitcast i32* %11 to i8*
  %37 = bitcast i32* %12 to i8*
  %38 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %39 = bitcast i32* %13 to i8*
  %40 = bitcast i32* %14 to i8*
  %41 = bitcast i32* %15 to i8*
  %42 = bitcast i32* %16 to i8*
  %43 = bitcast i32* %17 to i8*
  %44 = bitcast i32* %18 to i8*
  %45 = bitcast i32* %19 to i8*
  %46 = bitcast i32* %20 to i8*
  %47 = bitcast i32* %21 to i8*
  %48 = and i32 %4, 3
  %49 = icmp eq i32 %48, 0
  %50 = bitcast i32* %22 to i8*
  %51 = bitcast i32* %23 to i8*
  %52 = bitcast i32* %24 to i8*
  %53 = bitcast i32* %25 to i8*
  %54 = bitcast i32* %26 to i8*
  %55 = bitcast i32* %27 to i8*
  %56 = bitcast i32* %28 to i8*
  %57 = bitcast i32* %29 to i8*
  %58 = bitcast i32* %30 to i8*
  %59 = zext i32 %48 to i64
  %60 = sext i32 %7 to i64
  %61 = sext i32 %32 to i64
  br label %62

62:                                               ; preds = %183, %9
  %63 = phi i32 [ %5, %9 ], [ %188, %183 ]
  %64 = phi i8* [ %8, %9 ], [ %187, %183 ]
  %65 = phi i32* [ %1, %9 ], [ %186, %183 ]
  br i1 %34, label %130, label %66

66:                                               ; preds = %62, %66
  %67 = phi i32* [ %126, %66 ], [ %65, %62 ]
  %68 = phi i32 [ %128, %66 ], [ %33, %62 ]
  %69 = phi i8* [ %127, %66 ], [ %64, %62 ]
  %70 = getelementptr inbounds i8, i8* %69, i64 4
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds i8, i8* %69, i64 5
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  store i32 -1431655766, i32* %12, align 4
  %76 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %77 = load i8, i8* %69, align 1
  %78 = zext i8 %77 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %76, i32 %78, i32 %72, i32 %75, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* %11, align 4
  %81 = shl i32 %80, 8
  %82 = load i32, i32* %12, align 4
  %83 = shl i32 %82, 16
  %84 = or i32 %79, %81
  %85 = or i32 %84, %83
  %86 = or i32 %85, -16777216
  store i32 %86, i32* %67, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #6
  store i32 -1431655766, i32* %15, align 4
  %87 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %88 = getelementptr inbounds i8, i8* %69, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %87, i32 %90, i32 %72, i32 %75, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %14, align 4
  %93 = shl i32 %92, 8
  %94 = load i32, i32* %15, align 4
  %95 = shl i32 %94, 16
  %96 = or i32 %91, %93
  %97 = or i32 %96, %95
  %98 = or i32 %97, -16777216
  %99 = getelementptr inbounds i32, i32* %67, i64 1
  store i32 %98, i32* %99, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #6
  store i32 -1431655766, i32* %18, align 4
  %100 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %101 = getelementptr inbounds i8, i8* %69, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %100, i32 %103, i32 %72, i32 %75, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %104 = load i32, i32* %16, align 4
  %105 = load i32, i32* %17, align 4
  %106 = shl i32 %105, 8
  %107 = load i32, i32* %18, align 4
  %108 = shl i32 %107, 16
  %109 = or i32 %104, %106
  %110 = or i32 %109, %108
  %111 = or i32 %110, -16777216
  %112 = getelementptr inbounds i32, i32* %67, i64 2
  store i32 %111, i32* %112, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #6
  store i32 -1431655766, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #6
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #6
  store i32 -1431655766, i32* %21, align 4
  %113 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %114 = getelementptr inbounds i8, i8* %69, i64 3
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %113, i32 %116, i32 %72, i32 %75, i32* nonnull %19, i32* nonnull %20, i32* nonnull %21) #6
  %117 = load i32, i32* %19, align 4
  %118 = load i32, i32* %20, align 4
  %119 = shl i32 %118, 8
  %120 = load i32, i32* %21, align 4
  %121 = shl i32 %120, 16
  %122 = or i32 %117, %119
  %123 = or i32 %122, %121
  %124 = or i32 %123, -16777216
  %125 = getelementptr inbounds i32, i32* %67, i64 3
  store i32 %124, i32* %125, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #6
  %126 = getelementptr inbounds i32, i32* %67, i64 4
  %127 = getelementptr inbounds i8, i8* %69, i64 6
  %128 = add nsw i32 %68, -1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %66

130:                                              ; preds = %66, %62
  %131 = phi i8* [ %64, %62 ], [ %127, %66 ]
  %132 = phi i32* [ %65, %62 ], [ %126, %66 ]
  br i1 %49, label %183, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds i8, i8* %131, i64 4
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = getelementptr inbounds i8, i8* %131, i64 5
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  switch i32 %48, label %180 [
    i32 3, label %140
    i32 2, label %154
    i32 1, label %168
  ]

140:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #6
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #6
  store i32 -1431655766, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #6
  store i32 -1431655766, i32* %24, align 4
  %141 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %142 = getelementptr inbounds i8, i8* %131, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %141, i32 %144, i32 %136, i32 %139, i32* nonnull %22, i32* nonnull %23, i32* nonnull %24) #6
  %145 = load i32, i32* %22, align 4
  %146 = load i32, i32* %23, align 4
  %147 = shl i32 %146, 8
  %148 = load i32, i32* %24, align 4
  %149 = shl i32 %148, 16
  %150 = or i32 %145, %147
  %151 = or i32 %150, %149
  %152 = or i32 %151, -16777216
  %153 = getelementptr inbounds i32, i32* %132, i64 2
  store i32 %152, i32* %153, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #6
  br label %154

154:                                              ; preds = %133, %140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #6
  store i32 -1431655766, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #6
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #6
  store i32 -1431655766, i32* %27, align 4
  %155 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %156 = getelementptr inbounds i8, i8* %131, i64 1
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %155, i32 %158, i32 %136, i32 %139, i32* nonnull %25, i32* nonnull %26, i32* nonnull %27) #6
  %159 = load i32, i32* %25, align 4
  %160 = load i32, i32* %26, align 4
  %161 = shl i32 %160, 8
  %162 = load i32, i32* %27, align 4
  %163 = shl i32 %162, 16
  %164 = or i32 %159, %161
  %165 = or i32 %164, %163
  %166 = or i32 %165, -16777216
  %167 = getelementptr inbounds i32, i32* %132, i64 1
  store i32 %166, i32* %167, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #6
  br label %168

168:                                              ; preds = %133, %154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #6
  store i32 -1431655766, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #6
  store i32 -1431655766, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #6
  store i32 -1431655766, i32* %30, align 4
  %169 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %38, align 8
  %170 = load i8, i8* %131, align 1
  %171 = zext i8 %170 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %169, i32 %171, i32 %136, i32 %139, i32* nonnull %28, i32* nonnull %29, i32* nonnull %30) #6
  %172 = load i32, i32* %28, align 4
  %173 = load i32, i32* %29, align 4
  %174 = shl i32 %173, 8
  %175 = load i32, i32* %30, align 4
  %176 = shl i32 %175, 16
  %177 = or i32 %172, %174
  %178 = or i32 %177, %176
  %179 = or i32 %178, -16777216
  store i32 %179, i32* %132, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #6
  br label %180

180:                                              ; preds = %133, %168
  %181 = getelementptr inbounds i32, i32* %132, i64 %59
  %182 = getelementptr inbounds i8, i8* %131, i64 6
  br label %183

183:                                              ; preds = %130, %180
  %184 = phi i8* [ %182, %180 ], [ %131, %130 ]
  %185 = phi i32* [ %181, %180 ], [ %132, %130 ]
  %186 = getelementptr inbounds i32, i32* %185, i64 %60
  %187 = getelementptr inbounds i8, i8* %184, i64 %61
  %188 = add i32 %63, -1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %62

190:                                              ; preds = %183
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr22tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = icmp ugt i32 %5, 1
  br i1 %37, label %38, label %190

38:                                               ; preds = %9
  %39 = zext i32 %4 to i64
  %40 = getelementptr inbounds i32, i32* %1, i64 %39
  %41 = sext i32 %7 to i64
  %42 = getelementptr inbounds i32, i32* %40, i64 %41
  %43 = sdiv i32 %6, 2
  %44 = mul nsw i32 %43, 6
  %45 = shl i32 %7, 1
  %46 = add i32 %45, %4
  %47 = icmp ugt i32 %4, 1
  %48 = bitcast i32* %10 to i8*
  %49 = bitcast i32* %11 to i8*
  %50 = bitcast i32* %12 to i8*
  %51 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %52 = bitcast i32* %13 to i8*
  %53 = bitcast i32* %14 to i8*
  %54 = bitcast i32* %15 to i8*
  %55 = bitcast i32* %16 to i8*
  %56 = bitcast i32* %17 to i8*
  %57 = bitcast i32* %18 to i8*
  %58 = bitcast i32* %19 to i8*
  %59 = bitcast i32* %20 to i8*
  %60 = bitcast i32* %21 to i8*
  %61 = bitcast i32* %22 to i8*
  %62 = bitcast i32* %23 to i8*
  %63 = bitcast i32* %24 to i8*
  %64 = bitcast i32* %25 to i8*
  %65 = bitcast i32* %26 to i8*
  %66 = bitcast i32* %27 to i8*
  %67 = sext i32 %46 to i64
  %68 = sext i32 %44 to i64
  %69 = and i32 %4, 1
  br label %70

70:                                               ; preds = %38, %179
  %71 = phi i32* [ %1, %38 ], [ %183, %179 ]
  %72 = phi i32 [ %5, %38 ], [ %186, %179 ]
  %73 = phi i8* [ %8, %38 ], [ %185, %179 ]
  %74 = phi i32* [ %42, %38 ], [ %184, %179 ]
  br i1 %47, label %75, label %140

75:                                               ; preds = %70, %75
  %76 = phi i32* [ %135, %75 ], [ %71, %70 ]
  %77 = phi i32 [ %138, %75 ], [ %4, %70 ]
  %78 = phi i8* [ %137, %75 ], [ %73, %70 ]
  %79 = phi i32* [ %136, %75 ], [ %74, %70 ]
  %80 = getelementptr inbounds i8, i8* %78, i64 4
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = getelementptr inbounds i8, i8* %78, i64 5
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #6
  store i32 -1431655766, i32* %12, align 4
  %86 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %87 = load i8, i8* %78, align 1
  %88 = zext i8 %87 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %86, i32 %88, i32 %82, i32 %85, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* %11, align 4
  %91 = shl i32 %90, 8
  %92 = load i32, i32* %12, align 4
  %93 = shl i32 %92, 16
  %94 = or i32 %89, %91
  %95 = or i32 %94, %93
  %96 = or i32 %95, -16777216
  store i32 %96, i32* %76, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #6
  store i32 -1431655766, i32* %15, align 4
  %97 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %98 = getelementptr inbounds i8, i8* %78, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %97, i32 %100, i32 %82, i32 %85, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %101 = load i32, i32* %13, align 4
  %102 = load i32, i32* %14, align 4
  %103 = shl i32 %102, 8
  %104 = load i32, i32* %15, align 4
  %105 = shl i32 %104, 16
  %106 = or i32 %101, %103
  %107 = or i32 %106, %105
  %108 = or i32 %107, -16777216
  %109 = getelementptr inbounds i32, i32* %76, i64 1
  store i32 %108, i32* %109, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #6
  store i32 -1431655766, i32* %18, align 4
  %110 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %111 = getelementptr inbounds i8, i8* %78, i64 2
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %110, i32 %113, i32 %82, i32 %85, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %114 = load i32, i32* %16, align 4
  %115 = load i32, i32* %17, align 4
  %116 = shl i32 %115, 8
  %117 = load i32, i32* %18, align 4
  %118 = shl i32 %117, 16
  %119 = or i32 %114, %116
  %120 = or i32 %119, %118
  %121 = or i32 %120, -16777216
  store i32 %121, i32* %79, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #6
  store i32 -1431655766, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #6
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #6
  store i32 -1431655766, i32* %21, align 4
  %122 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %123 = getelementptr inbounds i8, i8* %78, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %122, i32 %125, i32 %82, i32 %85, i32* nonnull %19, i32* nonnull %20, i32* nonnull %21) #6
  %126 = load i32, i32* %19, align 4
  %127 = load i32, i32* %20, align 4
  %128 = shl i32 %127, 8
  %129 = load i32, i32* %21, align 4
  %130 = shl i32 %129, 16
  %131 = or i32 %126, %128
  %132 = or i32 %131, %130
  %133 = or i32 %132, -16777216
  %134 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 %133, i32* %134, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #6
  %135 = getelementptr inbounds i32, i32* %76, i64 2
  %136 = getelementptr inbounds i32, i32* %79, i64 2
  %137 = getelementptr inbounds i8, i8* %78, i64 6
  %138 = add i32 %77, -2
  %139 = icmp ugt i32 %138, 1
  br i1 %139, label %75, label %140

140:                                              ; preds = %75, %70
  %141 = phi i32* [ %74, %70 ], [ %136, %75 ]
  %142 = phi i8* [ %73, %70 ], [ %137, %75 ]
  %143 = phi i32 [ %4, %70 ], [ %69, %75 ]
  %144 = phi i32* [ %71, %70 ], [ %135, %75 ]
  %145 = icmp eq i32 %143, 1
  br i1 %145, label %146, label %179

146:                                              ; preds = %140
  %147 = getelementptr inbounds i8, i8* %142, i64 4
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = getelementptr inbounds i8, i8* %142, i64 5
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #6
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #6
  store i32 -1431655766, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #6
  store i32 -1431655766, i32* %24, align 4
  %153 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %154 = load i8, i8* %142, align 1
  %155 = zext i8 %154 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %153, i32 %155, i32 %149, i32 %152, i32* nonnull %22, i32* nonnull %23, i32* nonnull %24) #6
  %156 = load i32, i32* %22, align 4
  %157 = load i32, i32* %23, align 4
  %158 = shl i32 %157, 8
  %159 = load i32, i32* %24, align 4
  %160 = shl i32 %159, 16
  %161 = or i32 %156, %158
  %162 = or i32 %161, %160
  %163 = or i32 %162, -16777216
  store i32 %163, i32* %144, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #6
  store i32 -1431655766, i32* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #6
  store i32 -1431655766, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #6
  store i32 -1431655766, i32* %27, align 4
  %164 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %51, align 8
  %165 = getelementptr inbounds i8, i8* %142, i64 2
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %164, i32 %167, i32 %149, i32 %152, i32* nonnull %25, i32* nonnull %26, i32* nonnull %27) #6
  %168 = load i32, i32* %25, align 4
  %169 = load i32, i32* %26, align 4
  %170 = shl i32 %169, 8
  %171 = load i32, i32* %27, align 4
  %172 = shl i32 %171, 16
  %173 = or i32 %168, %170
  %174 = or i32 %173, %172
  %175 = or i32 %174, -16777216
  store i32 %175, i32* %141, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #6
  %176 = getelementptr inbounds i32, i32* %144, i64 1
  %177 = getelementptr inbounds i32, i32* %141, i64 1
  %178 = getelementptr inbounds i8, i8* %142, i64 6
  br label %179

179:                                              ; preds = %146, %140
  %180 = phi i32* [ %177, %146 ], [ %141, %140 ]
  %181 = phi i8* [ %178, %146 ], [ %142, %140 ]
  %182 = phi i32* [ %176, %146 ], [ %144, %140 ]
  %183 = getelementptr inbounds i32, i32* %182, i64 %67
  %184 = getelementptr inbounds i32, i32* %180, i64 %67
  %185 = getelementptr inbounds i8, i8* %181, i64 %68
  %186 = add i32 %72, -2
  %187 = icmp ugt i32 %186, 1
  br i1 %187, label %70, label %188

188:                                              ; preds = %179
  %189 = and i32 %5, 1
  br label %190

190:                                              ; preds = %188, %9
  %191 = phi i8* [ %8, %9 ], [ %185, %188 ]
  %192 = phi i32 [ %5, %9 ], [ %189, %188 ]
  %193 = phi i32* [ %1, %9 ], [ %183, %188 ]
  %194 = icmp eq i32 %192, 1
  br i1 %194, label %195, label %272

195:                                              ; preds = %190
  %196 = icmp ugt i32 %4, 1
  br i1 %196, label %197, label %245

197:                                              ; preds = %195
  %198 = bitcast i32* %28 to i8*
  %199 = bitcast i32* %29 to i8*
  %200 = bitcast i32* %30 to i8*
  %201 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %202 = bitcast i32* %31 to i8*
  %203 = bitcast i32* %32 to i8*
  %204 = bitcast i32* %33 to i8*
  br label %205

205:                                              ; preds = %197, %205
  %206 = phi i32* [ %193, %197 ], [ %239, %205 ]
  %207 = phi i32 [ %4, %197 ], [ %241, %205 ]
  %208 = phi i8* [ %191, %197 ], [ %240, %205 ]
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds i8, i8* %208, i64 5
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198) #6
  store i32 -1431655766, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #6
  store i32 -1431655766, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #6
  store i32 -1431655766, i32* %30, align 4
  %215 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %201, align 8
  %216 = load i8, i8* %208, align 1
  %217 = zext i8 %216 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %215, i32 %217, i32 %211, i32 %214, i32* nonnull %28, i32* nonnull %29, i32* nonnull %30) #6
  %218 = load i32, i32* %28, align 4
  %219 = load i32, i32* %29, align 4
  %220 = shl i32 %219, 8
  %221 = load i32, i32* %30, align 4
  %222 = shl i32 %221, 16
  %223 = or i32 %218, %220
  %224 = or i32 %223, %222
  %225 = or i32 %224, -16777216
  store i32 %225, i32* %206, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %202) #6
  store i32 -1431655766, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #6
  store i32 -1431655766, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #6
  store i32 -1431655766, i32* %33, align 4
  %226 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %201, align 8
  %227 = getelementptr inbounds i8, i8* %208, i64 1
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %226, i32 %229, i32 %211, i32 %214, i32* nonnull %31, i32* nonnull %32, i32* nonnull %33) #6
  %230 = load i32, i32* %31, align 4
  %231 = load i32, i32* %32, align 4
  %232 = shl i32 %231, 8
  %233 = load i32, i32* %33, align 4
  %234 = shl i32 %233, 16
  %235 = or i32 %230, %232
  %236 = or i32 %235, %234
  %237 = or i32 %236, -16777216
  %238 = getelementptr inbounds i32, i32* %206, i64 1
  store i32 %237, i32* %238, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %202) #6
  %239 = getelementptr inbounds i32, i32* %206, i64 2
  %240 = getelementptr inbounds i8, i8* %208, i64 6
  %241 = add i32 %207, -2
  %242 = icmp ugt i32 %241, 1
  br i1 %242, label %205, label %243

243:                                              ; preds = %205
  %244 = and i32 %4, 1
  br label %245

245:                                              ; preds = %243, %195
  %246 = phi i8* [ %191, %195 ], [ %240, %243 ]
  %247 = phi i32 [ %4, %195 ], [ %244, %243 ]
  %248 = phi i32* [ %193, %195 ], [ %239, %243 ]
  %249 = icmp eq i32 %247, 1
  br i1 %249, label %250, label %272

250:                                              ; preds = %245
  %251 = getelementptr inbounds i8, i8* %246, i64 4
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds i8, i8* %246, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #6
  store i32 -1431655766, i32* %34, align 4
  %258 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %258) #6
  store i32 -1431655766, i32* %35, align 4
  %259 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %259) #6
  store i32 -1431655766, i32* %36, align 4
  %260 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %261 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %260, align 8
  %262 = load i8, i8* %246, align 1
  %263 = zext i8 %262 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %261, i32 %263, i32 %253, i32 %256, i32* nonnull %34, i32* nonnull %35, i32* nonnull %36) #6
  %264 = load i32, i32* %34, align 4
  %265 = load i32, i32* %35, align 4
  %266 = shl i32 %265, 8
  %267 = load i32, i32* %36, align 4
  %268 = shl i32 %267, 16
  %269 = or i32 %264, %266
  %270 = or i32 %269, %268
  %271 = or i32 %270, -16777216
  store i32 %271, i32* %248, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %259) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %258) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #6
  br label %272

272:                                              ; preds = %245, %250, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr21tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = sdiv i32 %6, 2
  %20 = shl nsw i32 %19, 2
  %21 = lshr i32 %4, 1
  %22 = icmp eq i32 %21, 0
  %23 = bitcast i32* %10 to i8*
  %24 = bitcast i32* %11 to i8*
  %25 = bitcast i32* %12 to i8*
  %26 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %27 = bitcast i32* %13 to i8*
  %28 = bitcast i32* %14 to i8*
  %29 = bitcast i32* %15 to i8*
  %30 = and i32 %4, 1
  %31 = icmp eq i32 %30, 0
  %32 = bitcast i32* %16 to i8*
  %33 = bitcast i32* %17 to i8*
  %34 = bitcast i32* %18 to i8*
  %35 = sext i32 %7 to i64
  %36 = sext i32 %20 to i64
  br label %37

37:                                               ; preds = %102, %9
  %38 = phi i8* [ %8, %9 ], [ %106, %102 ]
  %39 = phi i32 [ %5, %9 ], [ %107, %102 ]
  %40 = phi i32* [ %1, %9 ], [ %105, %102 ]
  br i1 %22, label %79, label %41

41:                                               ; preds = %37, %41
  %42 = phi i32* [ %75, %41 ], [ %40, %37 ]
  %43 = phi i32 [ %77, %41 ], [ %21, %37 ]
  %44 = phi i8* [ %76, %41 ], [ %38, %37 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %44, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #6
  store i32 -1431655766, i32* %12, align 4
  %51 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %26, align 8
  %52 = load i8, i8* %44, align 1
  %53 = zext i8 %52 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %51, i32 %53, i32 %47, i32 %50, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %54 = load i32, i32* %10, align 4
  %55 = load i32, i32* %11, align 4
  %56 = shl i32 %55, 8
  %57 = load i32, i32* %12, align 4
  %58 = shl i32 %57, 16
  %59 = or i32 %54, %56
  %60 = or i32 %59, %58
  %61 = or i32 %60, -16777216
  store i32 %61, i32* %42, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6
  store i32 -1431655766, i32* %15, align 4
  %62 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %26, align 8
  %63 = getelementptr inbounds i8, i8* %44, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %62, i32 %65, i32 %47, i32 %50, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %66 = load i32, i32* %13, align 4
  %67 = load i32, i32* %14, align 4
  %68 = shl i32 %67, 8
  %69 = load i32, i32* %15, align 4
  %70 = shl i32 %69, 16
  %71 = or i32 %66, %68
  %72 = or i32 %71, %70
  %73 = or i32 %72, -16777216
  %74 = getelementptr inbounds i32, i32* %42, i64 1
  store i32 %73, i32* %74, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #6
  %75 = getelementptr inbounds i32, i32* %42, i64 2
  %76 = getelementptr inbounds i8, i8* %44, i64 4
  %77 = add nsw i32 %43, -1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %41

79:                                               ; preds = %41, %37
  %80 = phi i8* [ %38, %37 ], [ %76, %41 ]
  %81 = phi i32* [ %40, %37 ], [ %75, %41 ]
  br i1 %31, label %102, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %80, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds i8, i8* %80, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store i32 -1431655766, i32* %18, align 4
  %89 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %26, align 8
  %90 = load i8, i8* %80, align 1
  %91 = zext i8 %90 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %89, i32 %91, i32 %85, i32 %88, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %92 = load i32, i32* %16, align 4
  %93 = load i32, i32* %17, align 4
  %94 = shl i32 %93, 8
  %95 = load i32, i32* %18, align 4
  %96 = shl i32 %95, 16
  %97 = or i32 %92, %94
  %98 = or i32 %97, %96
  %99 = or i32 %98, -16777216
  store i32 %99, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  %100 = getelementptr inbounds i32, i32* %81, i64 1
  %101 = getelementptr inbounds i8, i8* %80, i64 4
  br label %102

102:                                              ; preds = %79, %82
  %103 = phi i8* [ %101, %82 ], [ %80, %79 ]
  %104 = phi i32* [ %100, %82 ], [ %81, %79 ]
  %105 = getelementptr inbounds i32, i32* %104, i64 %35
  %106 = getelementptr inbounds i8, i8* %103, i64 %36
  %107 = add i32 %39, -1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %37

109:                                              ; preds = %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr12tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = icmp ugt i32 %5, 1
  br i1 %19, label %20, label %89

20:                                               ; preds = %9
  %21 = zext i32 %4 to i64
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = sext i32 %7 to i64
  %24 = getelementptr inbounds i32, i32* %22, i64 %23
  %25 = shl nsw i32 %6, 2
  %26 = shl i32 %7, 1
  %27 = add i32 %26, %4
  %28 = bitcast i32* %10 to i8*
  %29 = bitcast i32* %11 to i8*
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %32 = bitcast i32* %13 to i8*
  %33 = bitcast i32* %14 to i8*
  %34 = bitcast i32* %15 to i8*
  %35 = sext i32 %27 to i64
  %36 = sext i32 %25 to i64
  br label %37

37:                                               ; preds = %20, %81
  %38 = phi i32* [ %1, %20 ], [ %82, %81 ]
  %39 = phi i32 [ %5, %20 ], [ %85, %81 ]
  %40 = phi i32* [ %24, %20 ], [ %83, %81 ]
  %41 = phi i8* [ %8, %20 ], [ %84, %81 ]
  br label %42

42:                                               ; preds = %37, %42
  %43 = phi i8* [ %78, %42 ], [ %41, %37 ]
  %44 = phi i32* [ %77, %42 ], [ %40, %37 ]
  %45 = phi i32 [ %79, %42 ], [ %4, %37 ]
  %46 = phi i32* [ %76, %42 ], [ %38, %37 ]
  %47 = getelementptr inbounds i8, i8* %43, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %43, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #6
  store i32 -1431655766, i32* %12, align 4
  %53 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %31, align 8
  %54 = load i8, i8* %43, align 1
  %55 = zext i8 %54 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %53, i32 %55, i32 %49, i32 %52, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %11, align 4
  %58 = shl i32 %57, 8
  %59 = load i32, i32* %12, align 4
  %60 = shl i32 %59, 16
  %61 = or i32 %56, %58
  %62 = or i32 %61, %60
  %63 = or i32 %62, -16777216
  store i32 %63, i32* %46, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store i32 -1431655766, i32* %15, align 4
  %64 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %31, align 8
  %65 = getelementptr inbounds i8, i8* %43, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %64, i32 %67, i32 %49, i32 %52, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %68 = load i32, i32* %13, align 4
  %69 = load i32, i32* %14, align 4
  %70 = shl i32 %69, 8
  %71 = load i32, i32* %15, align 4
  %72 = shl i32 %71, 16
  %73 = or i32 %68, %70
  %74 = or i32 %73, %72
  %75 = or i32 %74, -16777216
  store i32 %75, i32* %44, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  %76 = getelementptr inbounds i32, i32* %46, i64 1
  %77 = getelementptr inbounds i32, i32* %44, i64 1
  %78 = getelementptr inbounds i8, i8* %43, i64 4
  %79 = add i32 %45, -1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %42

81:                                               ; preds = %42
  %82 = getelementptr inbounds i32, i32* %76, i64 %35
  %83 = getelementptr inbounds i32, i32* %77, i64 %35
  %84 = getelementptr inbounds i8, i8* %78, i64 %36
  %85 = add i32 %39, -2
  %86 = icmp ugt i32 %85, 1
  br i1 %86, label %37, label %87

87:                                               ; preds = %81
  %88 = and i32 %5, 1
  br label %89

89:                                               ; preds = %87, %9
  %90 = phi i8* [ %8, %9 ], [ %84, %87 ]
  %91 = phi i32 [ %5, %9 ], [ %88, %87 ]
  %92 = phi i32* [ %1, %9 ], [ %82, %87 ]
  %93 = icmp eq i32 %91, 1
  br i1 %93, label %94, label %124

94:                                               ; preds = %89
  %95 = bitcast i32* %16 to i8*
  %96 = bitcast i32* %17 to i8*
  %97 = bitcast i32* %18 to i8*
  %98 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  br label %99

99:                                               ; preds = %94, %99
  %100 = phi i8* [ %121, %99 ], [ %90, %94 ]
  %101 = phi i32 [ %122, %99 ], [ %4, %94 ]
  %102 = phi i32* [ %120, %99 ], [ %92, %94 ]
  %103 = getelementptr inbounds i8, i8* %100, i64 2
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i8, i8* %100, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #6
  store i32 -1431655766, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #6
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #6
  store i32 -1431655766, i32* %18, align 4
  %109 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %98, align 8
  %110 = load i8, i8* %100, align 1
  %111 = zext i8 %110 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %109, i32 %111, i32 %105, i32 %108, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18) #6
  %112 = load i32, i32* %16, align 4
  %113 = load i32, i32* %17, align 4
  %114 = shl i32 %113, 8
  %115 = load i32, i32* %18, align 4
  %116 = shl i32 %115, 16
  %117 = or i32 %112, %114
  %118 = or i32 %117, %116
  %119 = or i32 %118, -16777216
  store i32 %119, i32* %102, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #6
  %120 = getelementptr inbounds i32, i32* %102, i64 1
  %121 = getelementptr inbounds i8, i8* %100, i64 4
  %122 = add i32 %101, -1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %99

124:                                              ; preds = %99, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitYCbCr11tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = mul nsw i32 %6, 3
  %14 = sext i32 %7 to i64
  %15 = bitcast i32* %10 to i8*
  %16 = bitcast i32* %11 to i8*
  %17 = bitcast i32* %12 to i8*
  %18 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %19 = sext i32 %13 to i64
  br label %20

20:                                               ; preds = %49, %9
  %21 = phi i32 [ %5, %9 ], [ %52, %49 ]
  %22 = phi i8* [ %8, %9 ], [ %51, %49 ]
  %23 = phi i32* [ %1, %9 ], [ %50, %49 ]
  br label %24

24:                                               ; preds = %24, %20
  %25 = phi i8* [ %22, %20 ], [ %46, %24 ]
  %26 = phi i32 [ %4, %20 ], [ %47, %24 ]
  %27 = phi i32* [ %23, %20 ], [ %45, %24 ]
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds i8, i8* %25, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #6
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #6
  store i32 -1431655766, i32* %12, align 4
  %34 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %18, align 8
  %35 = load i8, i8* %25, align 1
  %36 = zext i8 %35 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %34, i32 %36, i32 %30, i32 %33, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12) #6
  %37 = load i32, i32* %10, align 4
  %38 = load i32, i32* %11, align 4
  %39 = shl i32 %38, 8
  %40 = load i32, i32* %12, align 4
  %41 = shl i32 %40, 16
  %42 = or i32 %37, %39
  %43 = or i32 %42, %41
  %44 = or i32 %43, -16777216
  %45 = getelementptr inbounds i32, i32* %27, i64 1
  store i32 %44, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  %46 = getelementptr inbounds i8, i8* %25, i64 3
  %47 = add i32 %26, -1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %24

49:                                               ; preds = %24
  %50 = getelementptr inbounds i32, i32* %45, i64 %14
  %51 = getelementptr inbounds i8, i8* %46, i64 %19
  %52 = add i32 %21, -1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %20

54:                                               ; preds = %49
  ret void
}

declare i64 @TIFFTileSize(%struct.tiff*) local_unnamed_addr #3

declare i64 @_TIFFReadTileAndAllocBuffer(%struct.tiff*, i8**, i64, i32, i32, i32, i16 zeroext) local_unnamed_addr #3

declare i64 @TIFFTileRowSize(%struct.tiff*) local_unnamed_addr #3

declare i64 @TIFFStripSize(%struct.tiff*) local_unnamed_addr #3

declare i64 @TIFFScanlineSize(%struct.tiff*) local_unnamed_addr #3

declare i64 @_TIFFReadEncodedStripAndAllocBuffer(%struct.tiff*, i32, i8**, i64, i64) local_unnamed_addr #3

declare i32 @TIFFComputeStrip(%struct.tiff*, i32, i16 zeroext) local_unnamed_addr #3

declare void @TIFFWarningExt(i8*, i8*, i8*, ...) local_unnamed_addr #3

declare i32 @TIFFYCbCrToRGBInit(%struct.TIFFYCbCrToRGB*, float*, float*) local_unnamed_addr #3

declare void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB*, i32, i32, i32, i32*, i32*, i32*) local_unnamed_addr #3

declare i32 @TIFFCIELabToRGBInit(%struct.TIFFCIELabToRGB*, %struct.TIFFDisplay*, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @putcontig8bitCIELab(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) #0 {
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #6
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %17 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #6
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %18 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #6
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %19 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #6
  store i32 -1431655766, i32* %13, align 4
  %20 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  store i32 -1431655766, i32* %14, align 4
  %21 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #6
  store i32 -1431655766, i32* %15, align 4
  %22 = icmp eq i32 %5, 0
  br i1 %22, label %69, label %23

23:                                               ; preds = %9
  %24 = mul nsw i32 %6, 3
  %25 = icmp eq i32 %4, 0
  %26 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 20
  %27 = sext i32 %7 to i64
  %28 = sext i32 %24 to i64
  br label %29

29:                                               ; preds = %23, %62
  %30 = phi i8* [ %8, %23 ], [ %66, %62 ]
  %31 = phi i32* [ %1, %23 ], [ %65, %62 ]
  %32 = phi i32 [ %5, %23 ], [ %67, %62 ]
  br i1 %25, label %62, label %33

33:                                               ; preds = %29, %33
  %34 = phi i8* [ %59, %33 ], [ %30, %29 ]
  %35 = phi i32* [ %58, %33 ], [ %31, %29 ]
  %36 = phi i32 [ %60, %33 ], [ %4, %29 ]
  %37 = load %struct.TIFFCIELabToRGB*, %struct.TIFFCIELabToRGB** %26, align 8
  %38 = load i8, i8* %34, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %34, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  call void @TIFFCIELabToXYZ(%struct.TIFFCIELabToRGB* %37, i32 %39, i32 %42, i32 %45, float* nonnull %10, float* nonnull %11, float* nonnull %12) #6
  %46 = load %struct.TIFFCIELabToRGB*, %struct.TIFFCIELabToRGB** %26, align 8
  %47 = load float, float* %10, align 4
  %48 = load float, float* %11, align 4
  %49 = load float, float* %12, align 4
  call void @TIFFXYZToRGB(%struct.TIFFCIELabToRGB* %46, float %47, float %48, float %49, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %50 = load i32, i32* %13, align 4
  %51 = load i32, i32* %14, align 4
  %52 = shl i32 %51, 8
  %53 = load i32, i32* %15, align 4
  %54 = shl i32 %53, 16
  %55 = or i32 %50, %52
  %56 = or i32 %55, %54
  %57 = or i32 %56, -16777216
  %58 = getelementptr inbounds i32, i32* %35, i64 1
  store i32 %57, i32* %35, align 4
  %59 = getelementptr inbounds i8, i8* %34, i64 3
  %60 = add i32 %36, -1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %33

62:                                               ; preds = %33, %29
  %63 = phi i32* [ %31, %29 ], [ %58, %33 ]
  %64 = phi i8* [ %30, %29 ], [ %59, %33 ]
  %65 = getelementptr inbounds i32, i32* %63, i64 %27
  %66 = getelementptr inbounds i8, i8* %64, i64 %28
  %67 = add i32 %32, -1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %29

69:                                               ; preds = %62, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #6
  ret void
}

declare void @TIFFCIELabToXYZ(%struct.TIFFCIELabToRGB*, i32, i32, i32, float*, float*, float*) local_unnamed_addr #3

declare void @TIFFXYZToRGB(%struct.TIFFCIELabToRGB*, float, float, float, i32*, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @gtTileSeparate(%struct._TIFFRGBAImage*, i32*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %9 = load %struct.tiff*, %struct.tiff** %8, align 8
  %10 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %11 = bitcast %union.anon.1* %10 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)**
  %12 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %11, align 8
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %6, align 4
  %15 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  store i8* null, i8** %7, align 8
  %16 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = tail call i64 @TIFFTileSize(%struct.tiff* %9) #6
  %19 = icmp ne i32 %17, 0
  %20 = select i1 %19, i64 4, i64 3
  %21 = tail call i64 @_TIFFMultiplySSize(%struct.tiff* %9, i64 %20, i64 %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)) #6
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %291, label %23

23:                                               ; preds = %4
  %24 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %9, i32 322, i32* nonnull %5) #6
  %25 = call i32 (%struct.tiff*, i32, ...) @TIFFGetField(%struct.tiff* %9, i32 323, i32* nonnull %6) #6
  %26 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 8
  %27 = load i16, i16* %26, align 8
  switch i16 %27, label %54 [
    i16 1, label %28
    i16 5, label %28
    i16 2, label %33
    i16 6, label %33
    i16 3, label %38
    i16 7, label %38
    i16 4, label %43
    i16 8, label %43
  ]

28:                                               ; preds = %23, %23
  %29 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %30 = load i16, i16* %29, align 2
  switch i16 %30, label %32 [
    i16 2, label %54
    i16 6, label %54
    i16 3, label %48
    i16 7, label %48
    i16 4, label %31
    i16 8, label %31
  ]

31:                                               ; preds = %28, %28
  br label %48

32:                                               ; preds = %28
  br label %54

33:                                               ; preds = %23, %23
  %34 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %35 = load i16, i16* %34, align 2
  switch i16 %35, label %37 [
    i16 1, label %54
    i16 5, label %54
    i16 3, label %48
    i16 7, label %48
    i16 4, label %36
    i16 8, label %36
  ]

36:                                               ; preds = %33, %33
  br label %48

37:                                               ; preds = %33
  br label %54

38:                                               ; preds = %23, %23
  %39 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %40 = load i16, i16* %39, align 2
  switch i16 %40, label %42 [
    i16 1, label %48
    i16 5, label %48
    i16 2, label %41
    i16 6, label %41
    i16 4, label %54
    i16 8, label %54
  ]

41:                                               ; preds = %38, %38
  br label %48

42:                                               ; preds = %38
  br label %54

43:                                               ; preds = %23, %23
  %44 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %45 = load i16, i16* %44, align 2
  switch i16 %45, label %47 [
    i16 1, label %48
    i16 5, label %48
    i16 2, label %46
    i16 6, label %46
    i16 3, label %54
    i16 7, label %54
  ]

46:                                               ; preds = %43, %43
  br label %48

47:                                               ; preds = %43
  br label %54

48:                                               ; preds = %33, %33, %28, %28, %46, %41, %36, %31, %38, %38, %43, %43
  %49 = phi i32 [ 1, %43 ], [ 1, %43 ], [ 3, %38 ], [ 3, %38 ], [ 1, %31 ], [ 3, %36 ], [ 1, %41 ], [ 3, %46 ], [ 3, %28 ], [ 3, %28 ], [ 1, %33 ], [ 1, %33 ]
  %50 = add i32 %3, -1
  %51 = load i32, i32* %5, align 4
  %52 = add i32 %51, %2
  %53 = sub nsw i32 0, %52
  br label %58

54:                                               ; preds = %43, %43, %38, %38, %47, %42, %37, %32, %28, %28, %33, %33, %23
  %55 = phi i32 [ 0, %23 ], [ 2, %33 ], [ 2, %33 ], [ 2, %28 ], [ 2, %28 ], [ 0, %32 ], [ 0, %37 ], [ 0, %42 ], [ 0, %47 ], [ 2, %38 ], [ 2, %38 ], [ 2, %43 ], [ 2, %43 ]
  %56 = load i32, i32* %5, align 4
  %57 = sub i32 %2, %56
  br label %58

58:                                               ; preds = %54, %48
  %59 = phi i32 [ %51, %48 ], [ %56, %54 ]
  %60 = phi i1 [ true, %48 ], [ false, %54 ]
  %61 = phi i32 [ %49, %48 ], [ %55, %54 ]
  %62 = phi i32 [ %50, %48 ], [ 0, %54 ]
  %63 = phi i32 [ %53, %48 ], [ %57, %54 ]
  %64 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 10
  %65 = load i16, i16* %64, align 4
  %66 = icmp ult i16 %65, 4
  %67 = zext i16 %65 to i64
  %68 = shl nuw nsw i64 %67, 4
  %69 = lshr i64 281487861678081, %68
  %70 = trunc i64 %69 to i16
  %71 = select i1 %66, i16 %70, i16 3
  %72 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 24
  %73 = load i32, i32* %72, align 4
  %74 = urem i32 %73, %59
  %75 = sub i32 %59, %74
  %76 = add nsw i32 %74, %63
  %77 = icmp eq i32 %3, 0
  br i1 %77, label %288, label %78

78:                                               ; preds = %58
  %79 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 23
  %80 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 1
  %81 = icmp eq i32 %2, 0
  %82 = icmp eq i16 %71, 1
  %83 = mul nsw i64 %18, 3
  %84 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  br label %85

85:                                               ; preds = %78, %216
  %86 = phi i32 [ 1, %78 ], [ %221, %216 ]
  %87 = phi i8* [ null, %78 ], [ %220, %216 ]
  %88 = phi i8* [ null, %78 ], [ %219, %216 ]
  %89 = phi i8* [ null, %78 ], [ %218, %216 ]
  %90 = phi i8* [ null, %78 ], [ %217, %216 ]
  %91 = phi i32 [ %62, %78 ], [ %224, %216 ]
  %92 = phi i32 [ 0, %78 ], [ %225, %216 ]
  %93 = load i32, i32* %6, align 4
  %94 = load i32, i32* %79, align 8
  %95 = add i32 %94, %92
  %96 = urem i32 %95, %93
  %97 = sub i32 %93, %96
  %98 = add i32 %97, %92
  %99 = icmp ugt i32 %98, %3
  %100 = sub i32 %3, %92
  %101 = select i1 %99, i32 %100, i32 %97
  br i1 %81, label %216, label %102

102:                                              ; preds = %85
  %103 = load i32, i32* %72, align 4
  %104 = mul i32 %91, %2
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i32, i32* %1, i64 %105
  br label %107

107:                                              ; preds = %212, %102
  %108 = phi i32 [ %94, %102 ], [ %215, %212 ]
  %109 = phi i32 [ %76, %102 ], [ %63, %212 ]
  %110 = phi i32 [ 0, %102 ], [ %200, %212 ]
  %111 = phi i32 [ %75, %102 ], [ %213, %212 ]
  %112 = phi i32 [ %74, %102 ], [ 0, %212 ]
  %113 = phi i8* [ %87, %102 ], [ %167, %212 ]
  %114 = phi i8* [ %88, %102 ], [ %168, %212 ]
  %115 = phi i8* [ %89, %102 ], [ %169, %212 ]
  %116 = phi i8* [ %90, %102 ], [ %170, %212 ]
  %117 = phi i32 [ %103, %102 ], [ %214, %212 ]
  %118 = load i8*, i8** %7, align 8
  %119 = icmp eq i8* %118, null
  %120 = add i32 %108, %92
  br i1 %119, label %121, label %139

121:                                              ; preds = %107
  %122 = call i64 @_TIFFReadTileAndAllocBuffer(%struct.tiff* %9, i8** nonnull %7, i64 %21, i32 %117, i32 %120, i32 0, i16 zeroext 0) #6
  %123 = icmp eq i64 %122, -1
  %124 = load i8*, i8** %7, align 8
  br i1 %123, label %125, label %130

125:                                              ; preds = %121
  %126 = icmp eq i8* %124, null
  br i1 %126, label %216, label %127

127:                                              ; preds = %125
  %128 = load i32, i32* %80, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %216

130:                                              ; preds = %121, %127
  br i1 %82, label %131, label %134

131:                                              ; preds = %130
  %132 = getelementptr inbounds i8, i8* %124, i64 %83
  %133 = select i1 %19, i8* %132, i8* null
  br label %166

134:                                              ; preds = %130
  %135 = getelementptr inbounds i8, i8* %124, i64 %18
  %136 = getelementptr inbounds i8, i8* %135, i64 %18
  %137 = getelementptr inbounds i8, i8* %136, i64 %18
  %138 = select i1 %19, i8* %137, i8* null
  br label %146

139:                                              ; preds = %107
  %140 = call i64 @TIFFReadTile(%struct.tiff* %9, i8* %116, i32 %117, i32 %120, i32 0, i16 zeroext 0) #6
  %141 = icmp eq i64 %140, -1
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load i32, i32* %80, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %216

145:                                              ; preds = %142, %139
  br i1 %82, label %166, label %146

146:                                              ; preds = %145, %134
  %147 = phi i8* [ %138, %134 ], [ %113, %145 ]
  %148 = phi i8* [ %136, %134 ], [ %114, %145 ]
  %149 = phi i8* [ %135, %134 ], [ %115, %145 ]
  %150 = phi i8* [ %124, %134 ], [ %116, %145 ]
  %151 = load i32, i32* %79, align 8
  %152 = add i32 %151, %92
  %153 = call i64 @TIFFReadTile(%struct.tiff* %9, i8* %149, i32 %117, i32 %152, i32 0, i16 zeroext 1) #6
  %154 = icmp eq i64 %153, -1
  br i1 %154, label %155, label %158

155:                                              ; preds = %146
  %156 = load i32, i32* %80, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %216

158:                                              ; preds = %146, %155
  %159 = load i32, i32* %79, align 8
  %160 = add i32 %159, %92
  %161 = call i64 @TIFFReadTile(%struct.tiff* %9, i8* %148, i32 %117, i32 %160, i32 0, i16 zeroext 2) #6
  %162 = icmp eq i64 %161, -1
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = load i32, i32* %80, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %216

166:                                              ; preds = %145, %131, %163, %158
  %167 = phi i8* [ %113, %145 ], [ %147, %163 ], [ %147, %158 ], [ %133, %131 ]
  %168 = phi i8* [ %114, %145 ], [ %148, %163 ], [ %148, %158 ], [ %124, %131 ]
  %169 = phi i8* [ %115, %145 ], [ %149, %163 ], [ %149, %158 ], [ %124, %131 ]
  %170 = phi i8* [ %116, %145 ], [ %150, %163 ], [ %150, %158 ], [ %124, %131 ]
  br i1 %19, label %171, label %179

171:                                              ; preds = %166
  %172 = load i32, i32* %79, align 8
  %173 = add i32 %172, %92
  %174 = call i64 @TIFFReadTile(%struct.tiff* %9, i8* %167, i32 %117, i32 %173, i32 0, i16 zeroext %71) #6
  %175 = icmp eq i64 %174, -1
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = load i32, i32* %80, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %216

179:                                              ; preds = %176, %171, %166
  %180 = load i32, i32* %79, align 8
  %181 = add i32 %180, %92
  %182 = load i32, i32* %6, align 4
  %183 = urem i32 %181, %182
  %184 = zext i32 %183 to i64
  %185 = call i64 @TIFFTileRowSize(%struct.tiff* %9) #6
  %186 = mul nsw i64 %185, %184
  %187 = sext i32 %112 to i64
  %188 = load i16, i16* %84, align 2
  %189 = zext i16 %188 to i64
  %190 = mul nsw i64 %189, %187
  %191 = add nsw i64 %190, %186
  %192 = add i32 %110, %111
  %193 = icmp ugt i32 %192, %2
  br i1 %193, label %194, label %199

194:                                              ; preds = %179
  %195 = load i32, i32* %5, align 4
  %196 = sub i32 %2, %110
  %197 = sub i32 %195, %196
  %198 = add nsw i32 %197, %63
  br label %199

199:                                              ; preds = %194, %179
  %200 = phi i32 [ %2, %194 ], [ %192, %179 ]
  %201 = phi i32 [ %197, %194 ], [ %112, %179 ]
  %202 = phi i32 [ %196, %194 ], [ %111, %179 ]
  %203 = phi i32 [ %198, %194 ], [ %109, %179 ]
  %204 = zext i32 %110 to i64
  %205 = getelementptr inbounds i32, i32* %106, i64 %204
  %206 = getelementptr inbounds i8, i8* %170, i64 %191
  %207 = getelementptr inbounds i8, i8* %169, i64 %191
  %208 = getelementptr inbounds i8, i8* %168, i64 %191
  %209 = getelementptr inbounds i8, i8* %167, i64 %191
  %210 = select i1 %19, i8* %209, i8* null
  call void %12(%struct._TIFFRGBAImage* %0, i32* %205, i32 %110, i32 %91, i32 %202, i32 %101, i32 %201, i32 %203, i8* %206, i8* %207, i8* %208, i8* %210) #6
  %211 = icmp ult i32 %200, %2
  br i1 %211, label %212, label %216

212:                                              ; preds = %199
  %213 = load i32, i32* %5, align 4
  %214 = add i32 %202, %117
  %215 = load i32, i32* %79, align 8
  br label %107

216:                                              ; preds = %199, %127, %125, %142, %155, %163, %176, %85
  %217 = phi i8* [ %90, %85 ], [ %170, %176 ], [ %150, %163 ], [ %150, %155 ], [ %116, %142 ], [ %116, %125 ], [ %116, %127 ], [ %170, %199 ]
  %218 = phi i8* [ %89, %85 ], [ %169, %176 ], [ %149, %163 ], [ %149, %155 ], [ %115, %142 ], [ %115, %125 ], [ %115, %127 ], [ %169, %199 ]
  %219 = phi i8* [ %88, %85 ], [ %168, %176 ], [ %148, %163 ], [ %148, %155 ], [ %114, %142 ], [ %114, %125 ], [ %114, %127 ], [ %168, %199 ]
  %220 = phi i8* [ %87, %85 ], [ %167, %176 ], [ %147, %163 ], [ %147, %155 ], [ %113, %142 ], [ %113, %125 ], [ %113, %127 ], [ %167, %199 ]
  %221 = phi i32 [ %86, %85 ], [ 0, %176 ], [ 0, %163 ], [ 0, %155 ], [ 0, %142 ], [ 0, %125 ], [ 0, %127 ], [ %86, %199 ]
  %222 = sub nsw i32 0, %101
  %223 = select i1 %60, i32 %222, i32 %101
  %224 = add i32 %223, %91
  %225 = add i32 %101, %92
  %226 = icmp ne i32 %221, 0
  %227 = icmp ult i32 %225, %3
  %228 = and i1 %227, %226
  br i1 %228, label %85, label %229

229:                                              ; preds = %216
  %230 = and i32 %61, 2
  %231 = icmp ne i32 %230, 0
  %232 = icmp ne i32 %3, 0
  %233 = and i1 %231, %232
  br i1 %233, label %234, label %288

234:                                              ; preds = %229
  %235 = zext i32 %2 to i64
  %236 = zext i32 %3 to i64
  %237 = and i64 %236, 1
  %238 = icmp eq i32 %3, 1
  br i1 %238, label %270, label %239

239:                                              ; preds = %234
  %240 = sub nsw i64 %236, %237
  br label %241

241:                                              ; preds = %301, %239
  %242 = phi i64 [ 0, %239 ], [ %302, %301 ]
  %243 = phi i64 [ %240, %239 ], [ %303, %301 ]
  %244 = trunc i64 %242 to i32
  %245 = mul i32 %244, %2
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %1, i64 %246
  %248 = getelementptr inbounds i32, i32* %247, i64 -1
  %249 = getelementptr inbounds i32, i32* %248, i64 %235
  %250 = icmp ult i32* %247, %249
  br i1 %250, label %251, label %259

251:                                              ; preds = %241, %251
  %252 = phi i32* [ %257, %251 ], [ %249, %241 ]
  %253 = phi i32* [ %256, %251 ], [ %247, %241 ]
  %254 = load i32, i32* %253, align 4
  %255 = load i32, i32* %252, align 4
  store i32 %255, i32* %253, align 4
  store i32 %254, i32* %252, align 4
  %256 = getelementptr inbounds i32, i32* %253, i64 1
  %257 = getelementptr inbounds i32, i32* %252, i64 -1
  %258 = icmp ult i32* %256, %257
  br i1 %258, label %251, label %259

259:                                              ; preds = %251, %241
  %260 = trunc i64 %242 to i32
  %261 = or i32 %260, 1
  %262 = mul i32 %261, %2
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i32, i32* %1, i64 %263
  %265 = getelementptr inbounds i32, i32* %264, i64 -1
  %266 = getelementptr inbounds i32, i32* %265, i64 %235
  %267 = icmp ult i32* %264, %266
  br i1 %267, label %293, label %301

268:                                              ; preds = %301
  %269 = trunc i64 %302 to i32
  br label %270

270:                                              ; preds = %268, %234
  %271 = phi i32 [ 0, %234 ], [ %269, %268 ]
  %272 = icmp eq i64 %237, 0
  br i1 %272, label %288, label %273

273:                                              ; preds = %270
  %274 = mul i32 %271, %2
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i32, i32* %1, i64 %275
  %277 = getelementptr inbounds i32, i32* %276, i64 -1
  %278 = getelementptr inbounds i32, i32* %277, i64 %235
  %279 = icmp ult i32* %276, %278
  br i1 %279, label %280, label %288

280:                                              ; preds = %273, %280
  %281 = phi i32* [ %286, %280 ], [ %278, %273 ]
  %282 = phi i32* [ %285, %280 ], [ %276, %273 ]
  %283 = load i32, i32* %282, align 4
  %284 = load i32, i32* %281, align 4
  store i32 %284, i32* %282, align 4
  store i32 %283, i32* %281, align 4
  %285 = getelementptr inbounds i32, i32* %282, i64 1
  %286 = getelementptr inbounds i32, i32* %281, i64 -1
  %287 = icmp ult i32* %285, %286
  br i1 %287, label %280, label %288

288:                                              ; preds = %270, %273, %280, %58, %229
  %289 = phi i32 [ %221, %229 ], [ 1, %58 ], [ %221, %280 ], [ %221, %273 ], [ %221, %270 ]
  %290 = load i8*, i8** %7, align 8
  call void @_TIFFfree(i8* %290) #6
  br label %291

291:                                              ; preds = %4, %288
  %292 = phi i32 [ %289, %288 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  ret i32 %292

293:                                              ; preds = %259, %293
  %294 = phi i32* [ %299, %293 ], [ %266, %259 ]
  %295 = phi i32* [ %298, %293 ], [ %264, %259 ]
  %296 = load i32, i32* %295, align 4
  %297 = load i32, i32* %294, align 4
  store i32 %297, i32* %295, align 4
  store i32 %296, i32* %294, align 4
  %298 = getelementptr inbounds i32, i32* %295, i64 1
  %299 = getelementptr inbounds i32, i32* %294, i64 -1
  %300 = icmp ult i32* %298, %299
  br i1 %300, label %293, label %301

301:                                              ; preds = %293, %259
  %302 = add nuw nsw i64 %242, 2
  %303 = add i64 %243, -2
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %268, label %241
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gtStripSeparate(%struct._TIFFRGBAImage*, i32*, i32, i32) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 0
  %8 = load %struct.tiff*, %struct.tiff** %7, align 8
  %9 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 15
  %10 = bitcast %union.anon.1* %9 to void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)**
  %11 = load void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)*, void (%struct._TIFFRGBAImage*, i32*, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*)** %10, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  store i8* null, i8** %5, align 8
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 -1431655766, i32* %6, align 4
  %14 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = tail call i64 @TIFFStripSize(%struct.tiff* %8) #6
  %19 = icmp ne i32 %17, 0
  %20 = select i1 %19, i64 4, i64 3
  %21 = tail call i64 @_TIFFMultiplySSize(%struct.tiff* %8, i64 %20, i64 %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0)) #6
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %248, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 8
  %25 = load i16, i16* %24, align 8
  switch i16 %25, label %51 [
    i16 1, label %26
    i16 5, label %26
    i16 2, label %31
    i16 6, label %31
    i16 3, label %36
    i16 7, label %36
    i16 4, label %41
    i16 8, label %41
  ]

26:                                               ; preds = %23, %23
  %27 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %28 = load i16, i16* %27, align 2
  switch i16 %28, label %30 [
    i16 2, label %51
    i16 6, label %51
    i16 3, label %46
    i16 7, label %46
    i16 4, label %29
    i16 8, label %29
  ]

29:                                               ; preds = %26, %26
  br label %46

30:                                               ; preds = %26
  br label %51

31:                                               ; preds = %23, %23
  %32 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %33 = load i16, i16* %32, align 2
  switch i16 %33, label %35 [
    i16 1, label %51
    i16 5, label %51
    i16 3, label %46
    i16 7, label %46
    i16 4, label %34
    i16 8, label %34
  ]

34:                                               ; preds = %31, %31
  br label %46

35:                                               ; preds = %31
  br label %51

36:                                               ; preds = %23, %23
  %37 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %38 = load i16, i16* %37, align 2
  switch i16 %38, label %40 [
    i16 1, label %46
    i16 5, label %46
    i16 2, label %39
    i16 6, label %39
    i16 4, label %51
    i16 8, label %51
  ]

39:                                               ; preds = %36, %36
  br label %46

40:                                               ; preds = %36
  br label %51

41:                                               ; preds = %23, %23
  %42 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 9
  %43 = load i16, i16* %42, align 2
  switch i16 %43, label %45 [
    i16 1, label %46
    i16 5, label %46
    i16 2, label %44
    i16 6, label %44
    i16 3, label %51
    i16 7, label %51
  ]

44:                                               ; preds = %41, %41
  br label %46

45:                                               ; preds = %41
  br label %51

46:                                               ; preds = %31, %31, %26, %26, %44, %39, %34, %29, %36, %36, %41, %41
  %47 = phi i32 [ 1, %41 ], [ 1, %41 ], [ 3, %36 ], [ 3, %36 ], [ 1, %29 ], [ 3, %34 ], [ 1, %39 ], [ 3, %44 ], [ 3, %26 ], [ 3, %26 ], [ 1, %31 ], [ 1, %31 ]
  %48 = add i32 %3, -1
  %49 = shl i32 %2, 1
  %50 = sub nsw i32 0, %49
  br label %51

51:                                               ; preds = %41, %41, %36, %36, %23, %31, %31, %26, %26, %30, %35, %40, %45, %46
  %52 = phi i1 [ true, %46 ], [ false, %45 ], [ false, %40 ], [ false, %35 ], [ false, %30 ], [ false, %26 ], [ false, %26 ], [ false, %31 ], [ false, %31 ], [ false, %23 ], [ false, %36 ], [ false, %36 ], [ false, %41 ], [ false, %41 ]
  %53 = phi i32 [ %47, %46 ], [ 0, %45 ], [ 0, %40 ], [ 0, %35 ], [ 0, %30 ], [ 2, %26 ], [ 2, %26 ], [ 2, %31 ], [ 2, %31 ], [ 0, %23 ], [ 2, %36 ], [ 2, %36 ], [ 2, %41 ], [ 2, %41 ]
  %54 = phi i32 [ %48, %46 ], [ 0, %45 ], [ 0, %40 ], [ 0, %35 ], [ 0, %30 ], [ 0, %26 ], [ 0, %26 ], [ 0, %31 ], [ 0, %31 ], [ 0, %23 ], [ 0, %36 ], [ 0, %36 ], [ 0, %41 ], [ 0, %41 ]
  %55 = phi i32 [ %50, %46 ], [ 0, %45 ], [ 0, %40 ], [ 0, %35 ], [ 0, %30 ], [ 0, %26 ], [ 0, %26 ], [ 0, %31 ], [ 0, %31 ], [ 0, %23 ], [ 0, %36 ], [ 0, %36 ], [ 0, %41 ], [ 0, %41 ]
  %56 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 10
  %57 = load i16, i16* %56, align 4
  %58 = icmp ult i16 %57, 4
  %59 = zext i16 %57 to i64
  %60 = shl nuw nsw i64 %59, 4
  %61 = lshr i64 281487861678081, %60
  %62 = trunc i64 %61 to i16
  %63 = select i1 %58, i16 %62, i16 3
  %64 = call i32 (%struct.tiff*, i32, ...) @TIFFGetFieldDefaulted(%struct.tiff* %8, i32 278, i32* nonnull %6) #6
  %65 = call i64 @TIFFScanlineSize(%struct.tiff* %8) #6
  %66 = call i32 @llvm.usub.sat.i32(i32 %15, i32 %2)
  %67 = icmp eq i32 %3, 0
  br i1 %67, label %245, label %68

68:                                               ; preds = %51
  %69 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 23
  %70 = icmp sgt i64 %65, 0
  %71 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 1
  %72 = icmp eq i16 %63, 1
  %73 = mul nsw i64 %18, 3
  %74 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 24
  %75 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 7
  br label %76

76:                                               ; preds = %68, %161
  %77 = phi i32 [ %54, %68 ], [ %184, %161 ]
  %78 = phi i32 [ 0, %68 ], [ %185, %161 ]
  %79 = phi i8* [ null, %68 ], [ %150, %161 ]
  %80 = phi i8* [ null, %68 ], [ %151, %161 ]
  %81 = phi i8* [ null, %68 ], [ %152, %161 ]
  %82 = phi i8* [ null, %68 ], [ %153, %161 ]
  %83 = load i32, i32* %6, align 4
  %84 = load i32, i32* %69, align 8
  %85 = add i32 %84, %78
  %86 = urem i32 %85, %83
  %87 = sub i32 %83, %86
  %88 = add i32 %87, %78
  %89 = icmp ugt i32 %88, %3
  %90 = sub i32 %3, %78
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = add i32 %91, %86
  %93 = zext i32 %92 to i64
  br i1 %70, label %94, label %101

94:                                               ; preds = %76
  %95 = udiv i64 9223372036854775807, %65
  %96 = icmp ult i64 %95, %93
  br i1 %96, label %97, label %101

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.tiff, %struct.tiff* %8, i64 0, i32 55
  %99 = load i8*, i8** %98, align 8
  %100 = call i8* @TIFFFileName(%struct.tiff* %8) #6
  call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %99, i8* %100, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.47, i64 0, i64 0)) #6
  br label %248

101:                                              ; preds = %76, %94
  %102 = load i8*, i8** %5, align 8
  %103 = icmp eq i8* %102, null
  %104 = call i32 @TIFFComputeStrip(%struct.tiff* %8, i32 %85, i16 zeroext 0) #6
  %105 = mul nsw i64 %65, %93
  br i1 %103, label %106, label %124

106:                                              ; preds = %101
  %107 = call i64 @_TIFFReadEncodedStripAndAllocBuffer(%struct.tiff* %8, i32 %104, i8** nonnull %5, i64 %21, i64 %105) #6
  %108 = icmp eq i64 %107, -1
  %109 = load i8*, i8** %5, align 8
  br i1 %108, label %110, label %115

110:                                              ; preds = %106
  %111 = icmp eq i8* %109, null
  br i1 %111, label %187, label %112

112:                                              ; preds = %110
  %113 = load i32, i32* %71, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %187

115:                                              ; preds = %106, %112
  br i1 %72, label %116, label %119

116:                                              ; preds = %115
  %117 = getelementptr inbounds i8, i8* %109, i64 %73
  %118 = select i1 %19, i8* %117, i8* null
  br label %149

119:                                              ; preds = %115
  %120 = getelementptr inbounds i8, i8* %109, i64 %18
  %121 = getelementptr inbounds i8, i8* %120, i64 %18
  %122 = getelementptr inbounds i8, i8* %121, i64 %18
  %123 = select i1 %19, i8* %122, i8* null
  br label %131

124:                                              ; preds = %101
  %125 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %8, i32 %104, i8* %82, i64 %105) #6
  %126 = icmp eq i64 %125, -1
  br i1 %126, label %127, label %130

127:                                              ; preds = %124
  %128 = load i32, i32* %71, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %187

130:                                              ; preds = %127, %124
  br i1 %72, label %149, label %131

131:                                              ; preds = %130, %119
  %132 = phi i8* [ %123, %119 ], [ %79, %130 ]
  %133 = phi i8* [ %121, %119 ], [ %80, %130 ]
  %134 = phi i8* [ %120, %119 ], [ %81, %130 ]
  %135 = phi i8* [ %109, %119 ], [ %82, %130 ]
  %136 = call i32 @TIFFComputeStrip(%struct.tiff* %8, i32 %85, i16 zeroext 1) #6
  %137 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %8, i32 %136, i8* %134, i64 %105) #6
  %138 = icmp eq i64 %137, -1
  br i1 %138, label %139, label %142

139:                                              ; preds = %131
  %140 = load i32, i32* %71, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %187

142:                                              ; preds = %131, %139
  %143 = call i32 @TIFFComputeStrip(%struct.tiff* %8, i32 %85, i16 zeroext 2) #6
  %144 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %8, i32 %143, i8* %133, i64 %105) #6
  %145 = icmp eq i64 %144, -1
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = load i32, i32* %71, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %187

149:                                              ; preds = %130, %116, %146, %142
  %150 = phi i8* [ %79, %130 ], [ %132, %146 ], [ %132, %142 ], [ %118, %116 ]
  %151 = phi i8* [ %80, %130 ], [ %133, %146 ], [ %133, %142 ], [ %109, %116 ]
  %152 = phi i8* [ %81, %130 ], [ %134, %146 ], [ %134, %142 ], [ %109, %116 ]
  %153 = phi i8* [ %82, %130 ], [ %135, %146 ], [ %135, %142 ], [ %109, %116 ]
  br i1 %19, label %154, label %161

154:                                              ; preds = %149
  %155 = call i32 @TIFFComputeStrip(%struct.tiff* %8, i32 %85, i16 zeroext %63) #6
  %156 = call i64 @TIFFReadEncodedStrip(%struct.tiff* %8, i32 %155, i8* %150, i64 %105) #6
  %157 = icmp eq i64 %156, -1
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = load i32, i32* %71, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %187

161:                                              ; preds = %158, %154, %149
  %162 = load i32, i32* %69, align 8
  %163 = add i32 %162, %78
  %164 = load i32, i32* %6, align 4
  %165 = urem i32 %163, %164
  %166 = zext i32 %165 to i64
  %167 = mul nsw i64 %65, %166
  %168 = load i32, i32* %74, align 4
  %169 = sext i32 %168 to i64
  %170 = load i16, i16* %75, align 2
  %171 = zext i16 %170 to i64
  %172 = mul nsw i64 %171, %169
  %173 = add nsw i64 %172, %167
  %174 = mul i32 %77, %2
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %1, i64 %175
  %177 = getelementptr inbounds i8, i8* %153, i64 %173
  %178 = getelementptr inbounds i8, i8* %152, i64 %173
  %179 = getelementptr inbounds i8, i8* %151, i64 %173
  %180 = getelementptr inbounds i8, i8* %150, i64 %173
  %181 = select i1 %19, i8* %180, i8* null
  call void %11(%struct._TIFFRGBAImage* %0, i32* %176, i32 0, i32 %77, i32 %2, i32 %91, i32 %66, i32 %55, i8* %177, i8* %178, i8* %179, i8* %181) #6
  %182 = sub nsw i32 0, %91
  %183 = select i1 %52, i32 %182, i32 %91
  %184 = add i32 %183, %77
  %185 = add i32 %91, %78
  %186 = icmp ult i32 %185, %3
  br i1 %186, label %76, label %187

187:                                              ; preds = %161, %112, %110, %127, %139, %146, %158
  %188 = phi i32 [ 1, %161 ], [ 0, %112 ], [ 0, %110 ], [ 0, %127 ], [ 0, %139 ], [ 0, %146 ], [ 0, %158 ]
  %189 = and i32 %53, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %245, label %191

191:                                              ; preds = %187
  %192 = zext i32 %2 to i64
  %193 = zext i32 %3 to i64
  %194 = and i64 %193, 1
  %195 = icmp eq i32 %3, 1
  br i1 %195, label %227, label %196

196:                                              ; preds = %191
  %197 = sub nsw i64 %193, %194
  br label %198

198:                                              ; preds = %258, %196
  %199 = phi i64 [ 0, %196 ], [ %259, %258 ]
  %200 = phi i64 [ %197, %196 ], [ %260, %258 ]
  %201 = trunc i64 %199 to i32
  %202 = mul i32 %201, %2
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = getelementptr inbounds i32, i32* %204, i64 -1
  %206 = getelementptr inbounds i32, i32* %205, i64 %192
  %207 = icmp ult i32* %204, %206
  br i1 %207, label %208, label %216

208:                                              ; preds = %198, %208
  %209 = phi i32* [ %214, %208 ], [ %206, %198 ]
  %210 = phi i32* [ %213, %208 ], [ %204, %198 ]
  %211 = load i32, i32* %210, align 4
  %212 = load i32, i32* %209, align 4
  store i32 %212, i32* %210, align 4
  store i32 %211, i32* %209, align 4
  %213 = getelementptr inbounds i32, i32* %210, i64 1
  %214 = getelementptr inbounds i32, i32* %209, i64 -1
  %215 = icmp ult i32* %213, %214
  br i1 %215, label %208, label %216

216:                                              ; preds = %208, %198
  %217 = trunc i64 %199 to i32
  %218 = or i32 %217, 1
  %219 = mul i32 %218, %2
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds i32, i32* %1, i64 %220
  %222 = getelementptr inbounds i32, i32* %221, i64 -1
  %223 = getelementptr inbounds i32, i32* %222, i64 %192
  %224 = icmp ult i32* %221, %223
  br i1 %224, label %250, label %258

225:                                              ; preds = %258
  %226 = trunc i64 %259 to i32
  br label %227

227:                                              ; preds = %225, %191
  %228 = phi i32 [ 0, %191 ], [ %226, %225 ]
  %229 = icmp eq i64 %194, 0
  br i1 %229, label %245, label %230

230:                                              ; preds = %227
  %231 = mul i32 %228, %2
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i32, i32* %1, i64 %232
  %234 = getelementptr inbounds i32, i32* %233, i64 -1
  %235 = getelementptr inbounds i32, i32* %234, i64 %192
  %236 = icmp ult i32* %233, %235
  br i1 %236, label %237, label %245

237:                                              ; preds = %230, %237
  %238 = phi i32* [ %243, %237 ], [ %235, %230 ]
  %239 = phi i32* [ %242, %237 ], [ %233, %230 ]
  %240 = load i32, i32* %239, align 4
  %241 = load i32, i32* %238, align 4
  store i32 %241, i32* %239, align 4
  store i32 %240, i32* %238, align 4
  %242 = getelementptr inbounds i32, i32* %239, i64 1
  %243 = getelementptr inbounds i32, i32* %238, i64 -1
  %244 = icmp ult i32* %242, %243
  br i1 %244, label %237, label %245

245:                                              ; preds = %227, %230, %237, %187, %51
  %246 = phi i32 [ %188, %187 ], [ 1, %51 ], [ %188, %237 ], [ %188, %230 ], [ %188, %227 ]
  %247 = load i8*, i8** %5, align 8
  call void @_TIFFfree(i8* %247) #6
  br label %248

248:                                              ; preds = %97, %4, %245
  %249 = phi i32 [ %246, %245 ], [ 0, %4 ], [ 0, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  ret i32 %249

250:                                              ; preds = %216, %250
  %251 = phi i32* [ %256, %250 ], [ %223, %216 ]
  %252 = phi i32* [ %255, %250 ], [ %221, %216 ]
  %253 = load i32, i32* %252, align 4
  %254 = load i32, i32* %251, align 4
  store i32 %254, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 1
  %256 = getelementptr inbounds i32, i32* %251, i64 -1
  %257 = icmp ult i32* %255, %256
  br i1 %257, label %250, label %258

258:                                              ; preds = %250, %216
  %259 = add nuw nsw i64 %199, 2
  %260 = add i64 %200, -2
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %225, label %198
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBAAseparate8bittile(%struct._TIFFRGBAImage* nocapture readnone, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %377, label %14

14:                                               ; preds = %12
  %15 = icmp ugt i32 %4, 7
  %16 = sext i32 %6 to i64
  %17 = sext i32 %7 to i64
  %18 = and i32 %4, 7
  br label %19

19:                                               ; preds = %14, %364
  %20 = phi i8* [ %11, %14 ], [ %373, %364 ]
  %21 = phi i8* [ %10, %14 ], [ %372, %364 ]
  %22 = phi i8* [ %9, %14 ], [ %371, %364 ]
  %23 = phi i8* [ %8, %14 ], [ %370, %364 ]
  %24 = phi i32* [ %1, %14 ], [ %374, %364 ]
  %25 = phi i32 [ %5, %14 ], [ %375, %364 ]
  br i1 %15, label %26, label %187

26:                                               ; preds = %19, %26
  %27 = phi i32 [ %185, %26 ], [ %4, %19 ]
  %28 = phi i8* [ %179, %26 ], [ %20, %19 ]
  %29 = phi i8* [ %174, %26 ], [ %21, %19 ]
  %30 = phi i8* [ %169, %26 ], [ %22, %19 ]
  %31 = phi i8* [ %166, %26 ], [ %23, %19 ]
  %32 = phi i32* [ %184, %26 ], [ %24, %19 ]
  %33 = getelementptr inbounds i8, i8* %31, i64 1
  %34 = load i8, i8* %31, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds i8, i8* %30, i64 1
  %37 = load i8, i8* %30, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 8
  %40 = or i32 %39, %35
  %41 = getelementptr inbounds i8, i8* %29, i64 1
  %42 = load i8, i8* %29, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %40, %44
  %46 = getelementptr inbounds i8, i8* %28, i64 1
  %47 = load i8, i8* %28, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw i32 %48, 24
  %50 = or i32 %45, %49
  %51 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 %50, i32* %32, align 4
  %52 = getelementptr inbounds i8, i8* %31, i64 2
  %53 = load i8, i8* %33, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %30, i64 2
  %56 = load i8, i8* %36, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %58, %54
  %60 = getelementptr inbounds i8, i8* %29, i64 2
  %61 = load i8, i8* %41, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %59, %63
  %65 = getelementptr inbounds i8, i8* %28, i64 2
  %66 = load i8, i8* %46, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw i32 %67, 24
  %69 = or i32 %64, %68
  %70 = getelementptr inbounds i32, i32* %32, i64 2
  store i32 %69, i32* %51, align 4
  %71 = getelementptr inbounds i8, i8* %31, i64 3
  %72 = load i8, i8* %52, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds i8, i8* %30, i64 3
  %75 = load i8, i8* %55, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 8
  %78 = or i32 %77, %73
  %79 = getelementptr inbounds i8, i8* %29, i64 3
  %80 = load i8, i8* %60, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 16
  %83 = or i32 %78, %82
  %84 = getelementptr inbounds i8, i8* %28, i64 3
  %85 = load i8, i8* %65, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = or i32 %83, %87
  %89 = getelementptr inbounds i32, i32* %32, i64 3
  store i32 %88, i32* %70, align 4
  %90 = getelementptr inbounds i8, i8* %31, i64 4
  %91 = load i8, i8* %71, align 1
  %92 = zext i8 %91 to i32
  %93 = getelementptr inbounds i8, i8* %30, i64 4
  %94 = load i8, i8* %74, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %96, %92
  %98 = getelementptr inbounds i8, i8* %29, i64 4
  %99 = load i8, i8* %79, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %97, %101
  %103 = getelementptr inbounds i8, i8* %28, i64 4
  %104 = load i8, i8* %84, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw i32 %105, 24
  %107 = or i32 %102, %106
  %108 = getelementptr inbounds i32, i32* %32, i64 4
  store i32 %107, i32* %89, align 4
  %109 = getelementptr inbounds i8, i8* %31, i64 5
  %110 = load i8, i8* %90, align 1
  %111 = zext i8 %110 to i32
  %112 = getelementptr inbounds i8, i8* %30, i64 5
  %113 = load i8, i8* %93, align 1
  %114 = zext i8 %113 to i32
  %115 = shl nuw nsw i32 %114, 8
  %116 = or i32 %115, %111
  %117 = getelementptr inbounds i8, i8* %29, i64 5
  %118 = load i8, i8* %98, align 1
  %119 = zext i8 %118 to i32
  %120 = shl nuw nsw i32 %119, 16
  %121 = or i32 %116, %120
  %122 = getelementptr inbounds i8, i8* %28, i64 5
  %123 = load i8, i8* %103, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw i32 %124, 24
  %126 = or i32 %121, %125
  %127 = getelementptr inbounds i32, i32* %32, i64 5
  store i32 %126, i32* %108, align 4
  %128 = getelementptr inbounds i8, i8* %31, i64 6
  %129 = load i8, i8* %109, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds i8, i8* %30, i64 6
  %132 = load i8, i8* %112, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds i8, i8* %29, i64 6
  %137 = load i8, i8* %117, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw nsw i32 %138, 16
  %140 = or i32 %135, %139
  %141 = getelementptr inbounds i8, i8* %28, i64 6
  %142 = load i8, i8* %122, align 1
  %143 = zext i8 %142 to i32
  %144 = shl nuw i32 %143, 24
  %145 = or i32 %140, %144
  %146 = getelementptr inbounds i32, i32* %32, i64 6
  store i32 %145, i32* %127, align 4
  %147 = getelementptr inbounds i8, i8* %31, i64 7
  %148 = load i8, i8* %128, align 1
  %149 = zext i8 %148 to i32
  %150 = getelementptr inbounds i8, i8* %30, i64 7
  %151 = load i8, i8* %131, align 1
  %152 = zext i8 %151 to i32
  %153 = shl nuw nsw i32 %152, 8
  %154 = or i32 %153, %149
  %155 = getelementptr inbounds i8, i8* %29, i64 7
  %156 = load i8, i8* %136, align 1
  %157 = zext i8 %156 to i32
  %158 = shl nuw nsw i32 %157, 16
  %159 = or i32 %154, %158
  %160 = getelementptr inbounds i8, i8* %28, i64 7
  %161 = load i8, i8* %141, align 1
  %162 = zext i8 %161 to i32
  %163 = shl nuw i32 %162, 24
  %164 = or i32 %159, %163
  %165 = getelementptr inbounds i32, i32* %32, i64 7
  store i32 %164, i32* %146, align 4
  %166 = getelementptr inbounds i8, i8* %31, i64 8
  %167 = load i8, i8* %147, align 1
  %168 = zext i8 %167 to i32
  %169 = getelementptr inbounds i8, i8* %30, i64 8
  %170 = load i8, i8* %150, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 8
  %173 = or i32 %172, %168
  %174 = getelementptr inbounds i8, i8* %29, i64 8
  %175 = load i8, i8* %155, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 16
  %178 = or i32 %173, %177
  %179 = getelementptr inbounds i8, i8* %28, i64 8
  %180 = load i8, i8* %160, align 1
  %181 = zext i8 %180 to i32
  %182 = shl nuw i32 %181, 24
  %183 = or i32 %178, %182
  %184 = getelementptr inbounds i32, i32* %32, i64 8
  store i32 %183, i32* %165, align 4
  %185 = add i32 %27, -8
  %186 = icmp ugt i32 %185, 7
  br i1 %186, label %26, label %187

187:                                              ; preds = %26, %19
  %188 = phi i32* [ %24, %19 ], [ %184, %26 ]
  %189 = phi i8* [ %23, %19 ], [ %166, %26 ]
  %190 = phi i8* [ %22, %19 ], [ %169, %26 ]
  %191 = phi i8* [ %21, %19 ], [ %174, %26 ]
  %192 = phi i8* [ %20, %19 ], [ %179, %26 ]
  %193 = phi i32 [ %4, %19 ], [ %18, %26 ]
  switch i32 %193, label %364 [
    i32 1, label %339
    i32 7, label %194
    i32 6, label %214
    i32 5, label %239
    i32 4, label %264
    i32 3, label %289
    i32 2, label %314
  ]

194:                                              ; preds = %187
  %195 = getelementptr inbounds i8, i8* %189, i64 1
  %196 = load i8, i8* %189, align 1
  %197 = zext i8 %196 to i32
  %198 = getelementptr inbounds i8, i8* %190, i64 1
  %199 = load i8, i8* %190, align 1
  %200 = zext i8 %199 to i32
  %201 = shl nuw nsw i32 %200, 8
  %202 = or i32 %201, %197
  %203 = getelementptr inbounds i8, i8* %191, i64 1
  %204 = load i8, i8* %191, align 1
  %205 = zext i8 %204 to i32
  %206 = shl nuw nsw i32 %205, 16
  %207 = or i32 %202, %206
  %208 = getelementptr inbounds i8, i8* %192, i64 1
  %209 = load i8, i8* %192, align 1
  %210 = zext i8 %209 to i32
  %211 = shl nuw i32 %210, 24
  %212 = or i32 %207, %211
  %213 = getelementptr inbounds i32, i32* %188, i64 1
  store i32 %212, i32* %188, align 4
  br label %214

214:                                              ; preds = %187, %194
  %215 = phi i32* [ %213, %194 ], [ %188, %187 ]
  %216 = phi i8* [ %195, %194 ], [ %189, %187 ]
  %217 = phi i8* [ %198, %194 ], [ %190, %187 ]
  %218 = phi i8* [ %203, %194 ], [ %191, %187 ]
  %219 = phi i8* [ %208, %194 ], [ %192, %187 ]
  %220 = getelementptr inbounds i8, i8* %216, i64 1
  %221 = load i8, i8* %216, align 1
  %222 = zext i8 %221 to i32
  %223 = getelementptr inbounds i8, i8* %217, i64 1
  %224 = load i8, i8* %217, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 8
  %227 = or i32 %226, %222
  %228 = getelementptr inbounds i8, i8* %218, i64 1
  %229 = load i8, i8* %218, align 1
  %230 = zext i8 %229 to i32
  %231 = shl nuw nsw i32 %230, 16
  %232 = or i32 %227, %231
  %233 = getelementptr inbounds i8, i8* %219, i64 1
  %234 = load i8, i8* %219, align 1
  %235 = zext i8 %234 to i32
  %236 = shl nuw i32 %235, 24
  %237 = or i32 %232, %236
  %238 = getelementptr inbounds i32, i32* %215, i64 1
  store i32 %237, i32* %215, align 4
  br label %239

239:                                              ; preds = %187, %214
  %240 = phi i32* [ %238, %214 ], [ %188, %187 ]
  %241 = phi i8* [ %220, %214 ], [ %189, %187 ]
  %242 = phi i8* [ %223, %214 ], [ %190, %187 ]
  %243 = phi i8* [ %228, %214 ], [ %191, %187 ]
  %244 = phi i8* [ %233, %214 ], [ %192, %187 ]
  %245 = getelementptr inbounds i8, i8* %241, i64 1
  %246 = load i8, i8* %241, align 1
  %247 = zext i8 %246 to i32
  %248 = getelementptr inbounds i8, i8* %242, i64 1
  %249 = load i8, i8* %242, align 1
  %250 = zext i8 %249 to i32
  %251 = shl nuw nsw i32 %250, 8
  %252 = or i32 %251, %247
  %253 = getelementptr inbounds i8, i8* %243, i64 1
  %254 = load i8, i8* %243, align 1
  %255 = zext i8 %254 to i32
  %256 = shl nuw nsw i32 %255, 16
  %257 = or i32 %252, %256
  %258 = getelementptr inbounds i8, i8* %244, i64 1
  %259 = load i8, i8* %244, align 1
  %260 = zext i8 %259 to i32
  %261 = shl nuw i32 %260, 24
  %262 = or i32 %257, %261
  %263 = getelementptr inbounds i32, i32* %240, i64 1
  store i32 %262, i32* %240, align 4
  br label %264

264:                                              ; preds = %187, %239
  %265 = phi i32* [ %263, %239 ], [ %188, %187 ]
  %266 = phi i8* [ %245, %239 ], [ %189, %187 ]
  %267 = phi i8* [ %248, %239 ], [ %190, %187 ]
  %268 = phi i8* [ %253, %239 ], [ %191, %187 ]
  %269 = phi i8* [ %258, %239 ], [ %192, %187 ]
  %270 = getelementptr inbounds i8, i8* %266, i64 1
  %271 = load i8, i8* %266, align 1
  %272 = zext i8 %271 to i32
  %273 = getelementptr inbounds i8, i8* %267, i64 1
  %274 = load i8, i8* %267, align 1
  %275 = zext i8 %274 to i32
  %276 = shl nuw nsw i32 %275, 8
  %277 = or i32 %276, %272
  %278 = getelementptr inbounds i8, i8* %268, i64 1
  %279 = load i8, i8* %268, align 1
  %280 = zext i8 %279 to i32
  %281 = shl nuw nsw i32 %280, 16
  %282 = or i32 %277, %281
  %283 = getelementptr inbounds i8, i8* %269, i64 1
  %284 = load i8, i8* %269, align 1
  %285 = zext i8 %284 to i32
  %286 = shl nuw i32 %285, 24
  %287 = or i32 %282, %286
  %288 = getelementptr inbounds i32, i32* %265, i64 1
  store i32 %287, i32* %265, align 4
  br label %289

289:                                              ; preds = %187, %264
  %290 = phi i32* [ %288, %264 ], [ %188, %187 ]
  %291 = phi i8* [ %270, %264 ], [ %189, %187 ]
  %292 = phi i8* [ %273, %264 ], [ %190, %187 ]
  %293 = phi i8* [ %278, %264 ], [ %191, %187 ]
  %294 = phi i8* [ %283, %264 ], [ %192, %187 ]
  %295 = getelementptr inbounds i8, i8* %291, i64 1
  %296 = load i8, i8* %291, align 1
  %297 = zext i8 %296 to i32
  %298 = getelementptr inbounds i8, i8* %292, i64 1
  %299 = load i8, i8* %292, align 1
  %300 = zext i8 %299 to i32
  %301 = shl nuw nsw i32 %300, 8
  %302 = or i32 %301, %297
  %303 = getelementptr inbounds i8, i8* %293, i64 1
  %304 = load i8, i8* %293, align 1
  %305 = zext i8 %304 to i32
  %306 = shl nuw nsw i32 %305, 16
  %307 = or i32 %302, %306
  %308 = getelementptr inbounds i8, i8* %294, i64 1
  %309 = load i8, i8* %294, align 1
  %310 = zext i8 %309 to i32
  %311 = shl nuw i32 %310, 24
  %312 = or i32 %307, %311
  %313 = getelementptr inbounds i32, i32* %290, i64 1
  store i32 %312, i32* %290, align 4
  br label %314

314:                                              ; preds = %187, %289
  %315 = phi i32* [ %313, %289 ], [ %188, %187 ]
  %316 = phi i8* [ %295, %289 ], [ %189, %187 ]
  %317 = phi i8* [ %298, %289 ], [ %190, %187 ]
  %318 = phi i8* [ %303, %289 ], [ %191, %187 ]
  %319 = phi i8* [ %308, %289 ], [ %192, %187 ]
  %320 = getelementptr inbounds i8, i8* %316, i64 1
  %321 = load i8, i8* %316, align 1
  %322 = zext i8 %321 to i32
  %323 = getelementptr inbounds i8, i8* %317, i64 1
  %324 = load i8, i8* %317, align 1
  %325 = zext i8 %324 to i32
  %326 = shl nuw nsw i32 %325, 8
  %327 = or i32 %326, %322
  %328 = getelementptr inbounds i8, i8* %318, i64 1
  %329 = load i8, i8* %318, align 1
  %330 = zext i8 %329 to i32
  %331 = shl nuw nsw i32 %330, 16
  %332 = or i32 %327, %331
  %333 = getelementptr inbounds i8, i8* %319, i64 1
  %334 = load i8, i8* %319, align 1
  %335 = zext i8 %334 to i32
  %336 = shl nuw i32 %335, 24
  %337 = or i32 %332, %336
  %338 = getelementptr inbounds i32, i32* %315, i64 1
  store i32 %337, i32* %315, align 4
  br label %339

339:                                              ; preds = %187, %314
  %340 = phi i32* [ %338, %314 ], [ %188, %187 ]
  %341 = phi i8* [ %320, %314 ], [ %189, %187 ]
  %342 = phi i8* [ %323, %314 ], [ %190, %187 ]
  %343 = phi i8* [ %328, %314 ], [ %191, %187 ]
  %344 = phi i8* [ %333, %314 ], [ %192, %187 ]
  %345 = getelementptr inbounds i8, i8* %341, i64 1
  %346 = load i8, i8* %341, align 1
  %347 = zext i8 %346 to i32
  %348 = getelementptr inbounds i8, i8* %342, i64 1
  %349 = load i8, i8* %342, align 1
  %350 = zext i8 %349 to i32
  %351 = shl nuw nsw i32 %350, 8
  %352 = or i32 %351, %347
  %353 = getelementptr inbounds i8, i8* %343, i64 1
  %354 = load i8, i8* %343, align 1
  %355 = zext i8 %354 to i32
  %356 = shl nuw nsw i32 %355, 16
  %357 = or i32 %352, %356
  %358 = getelementptr inbounds i8, i8* %344, i64 1
  %359 = load i8, i8* %344, align 1
  %360 = zext i8 %359 to i32
  %361 = shl nuw i32 %360, 24
  %362 = or i32 %357, %361
  %363 = getelementptr inbounds i32, i32* %340, i64 1
  store i32 %362, i32* %340, align 4
  br label %364

364:                                              ; preds = %187, %339
  %365 = phi i32* [ %363, %339 ], [ %188, %187 ]
  %366 = phi i8* [ %345, %339 ], [ %189, %187 ]
  %367 = phi i8* [ %348, %339 ], [ %190, %187 ]
  %368 = phi i8* [ %353, %339 ], [ %191, %187 ]
  %369 = phi i8* [ %358, %339 ], [ %192, %187 ]
  %370 = getelementptr inbounds i8, i8* %366, i64 %16
  %371 = getelementptr inbounds i8, i8* %367, i64 %16
  %372 = getelementptr inbounds i8, i8* %368, i64 %16
  %373 = getelementptr inbounds i8, i8* %369, i64 %16
  %374 = getelementptr inbounds i32, i32* %365, i64 %17
  %375 = add i32 %25, -1
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %19

377:                                              ; preds = %364, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBUAseparate8bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %80, label %14

14:                                               ; preds = %12
  %15 = icmp eq i32 %4, 0
  %16 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %17 = sext i32 %6 to i64
  %18 = sext i32 %7 to i64
  br label %19

19:                                               ; preds = %14, %67
  %20 = phi i8* [ %11, %14 ], [ %76, %67 ]
  %21 = phi i8* [ %10, %14 ], [ %75, %67 ]
  %22 = phi i8* [ %9, %14 ], [ %74, %67 ]
  %23 = phi i8* [ %8, %14 ], [ %73, %67 ]
  %24 = phi i32* [ %1, %14 ], [ %77, %67 ]
  %25 = phi i32 [ %5, %14 ], [ %78, %67 ]
  br i1 %15, label %67, label %26

26:                                               ; preds = %19, %26
  %27 = phi i8* [ %33, %26 ], [ %20, %19 ]
  %28 = phi i8* [ %52, %26 ], [ %21, %19 ]
  %29 = phi i8* [ %46, %26 ], [ %22, %19 ]
  %30 = phi i8* [ %40, %26 ], [ %23, %19 ]
  %31 = phi i32* [ %64, %26 ], [ %24, %19 ]
  %32 = phi i32 [ %65, %26 ], [ %4, %19 ]
  %33 = getelementptr inbounds i8, i8* %27, i64 1
  %34 = load i8, i8* %27, align 1
  %35 = zext i8 %34 to i32
  %36 = load i8*, i8** %16, align 8
  %37 = zext i8 %34 to i64
  %38 = shl nuw nsw i64 %37, 8
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = getelementptr inbounds i8, i8* %30, i64 1
  %41 = load i8, i8* %30, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %29, i64 1
  %47 = load i8, i8* %29, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds i8, i8* %39, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %28, i64 1
  %53 = load i8, i8* %28, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds i8, i8* %39, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %51, 8
  %59 = shl nuw nsw i32 %57, 16
  %60 = shl nuw i32 %35, 24
  %61 = or i32 %60, %45
  %62 = or i32 %61, %58
  %63 = or i32 %62, %59
  %64 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 %63, i32* %31, align 4
  %65 = add i32 %32, -1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %26

67:                                               ; preds = %26, %19
  %68 = phi i32* [ %24, %19 ], [ %64, %26 ]
  %69 = phi i8* [ %23, %19 ], [ %40, %26 ]
  %70 = phi i8* [ %22, %19 ], [ %46, %26 ]
  %71 = phi i8* [ %21, %19 ], [ %52, %26 ]
  %72 = phi i8* [ %20, %19 ], [ %33, %26 ]
  %73 = getelementptr inbounds i8, i8* %69, i64 %17
  %74 = getelementptr inbounds i8, i8* %70, i64 %17
  %75 = getelementptr inbounds i8, i8* %71, i64 %17
  %76 = getelementptr inbounds i8, i8* %72, i64 %17
  %77 = getelementptr inbounds i32, i32* %68, i64 %18
  %78 = add i32 %25, -1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %19

80:                                               ; preds = %67, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBseparate8bittile(%struct._TIFFRGBAImage* nocapture readnone, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readnone) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %306, label %14

14:                                               ; preds = %12
  %15 = icmp ugt i32 %4, 7
  %16 = sext i32 %6 to i64
  %17 = sext i32 %7 to i64
  %18 = and i32 %4, 7
  br label %19

19:                                               ; preds = %14, %295
  %20 = phi i32* [ %1, %14 ], [ %303, %295 ]
  %21 = phi i8* [ %10, %14 ], [ %302, %295 ]
  %22 = phi i8* [ %9, %14 ], [ %301, %295 ]
  %23 = phi i8* [ %8, %14 ], [ %300, %295 ]
  %24 = phi i32 [ %5, %14 ], [ %304, %295 ]
  br i1 %15, label %25, label %153

25:                                               ; preds = %19, %25
  %26 = phi i32 [ %151, %25 ], [ %4, %19 ]
  %27 = phi i32* [ %150, %25 ], [ %20, %19 ]
  %28 = phi i8* [ %143, %25 ], [ %21, %19 ]
  %29 = phi i8* [ %139, %25 ], [ %22, %19 ]
  %30 = phi i8* [ %136, %25 ], [ %23, %19 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8, i8* %29, i64 1
  %35 = load i8, i8* %29, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = getelementptr inbounds i8, i8* %28, i64 1
  %39 = load i8, i8* %28, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 16
  %42 = or i32 %37, %33
  %43 = or i32 %42, %41
  %44 = or i32 %43, -16777216
  %45 = getelementptr inbounds i32, i32* %27, i64 1
  store i32 %44, i32* %27, align 4
  %46 = getelementptr inbounds i8, i8* %30, i64 2
  %47 = load i8, i8* %31, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %29, i64 2
  %50 = load i8, i8* %34, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = getelementptr inbounds i8, i8* %28, i64 2
  %54 = load i8, i8* %38, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 16
  %57 = or i32 %52, %48
  %58 = or i32 %57, %56
  %59 = or i32 %58, -16777216
  %60 = getelementptr inbounds i32, i32* %27, i64 2
  store i32 %59, i32* %45, align 4
  %61 = getelementptr inbounds i8, i8* %30, i64 3
  %62 = load i8, i8* %46, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %29, i64 3
  %65 = load i8, i8* %49, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = getelementptr inbounds i8, i8* %28, i64 3
  %69 = load i8, i8* %53, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 16
  %72 = or i32 %67, %63
  %73 = or i32 %72, %71
  %74 = or i32 %73, -16777216
  %75 = getelementptr inbounds i32, i32* %27, i64 3
  store i32 %74, i32* %60, align 4
  %76 = getelementptr inbounds i8, i8* %30, i64 4
  %77 = load i8, i8* %61, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds i8, i8* %29, i64 4
  %80 = load i8, i8* %64, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 8
  %83 = getelementptr inbounds i8, i8* %28, i64 4
  %84 = load i8, i8* %68, align 1
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = or i32 %82, %78
  %88 = or i32 %87, %86
  %89 = or i32 %88, -16777216
  %90 = getelementptr inbounds i32, i32* %27, i64 4
  store i32 %89, i32* %75, align 4
  %91 = getelementptr inbounds i8, i8* %30, i64 5
  %92 = load i8, i8* %76, align 1
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i8, i8* %29, i64 5
  %95 = load i8, i8* %79, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 8
  %98 = getelementptr inbounds i8, i8* %28, i64 5
  %99 = load i8, i8* %83, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %97, %93
  %103 = or i32 %102, %101
  %104 = or i32 %103, -16777216
  %105 = getelementptr inbounds i32, i32* %27, i64 5
  store i32 %104, i32* %90, align 4
  %106 = getelementptr inbounds i8, i8* %30, i64 6
  %107 = load i8, i8* %91, align 1
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds i8, i8* %29, i64 6
  %110 = load i8, i8* %94, align 1
  %111 = zext i8 %110 to i32
  %112 = shl nuw nsw i32 %111, 8
  %113 = getelementptr inbounds i8, i8* %28, i64 6
  %114 = load i8, i8* %98, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 16
  %117 = or i32 %112, %108
  %118 = or i32 %117, %116
  %119 = or i32 %118, -16777216
  %120 = getelementptr inbounds i32, i32* %27, i64 6
  store i32 %119, i32* %105, align 4
  %121 = getelementptr inbounds i8, i8* %30, i64 7
  %122 = load i8, i8* %106, align 1
  %123 = zext i8 %122 to i32
  %124 = getelementptr inbounds i8, i8* %29, i64 7
  %125 = load i8, i8* %109, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 8
  %128 = getelementptr inbounds i8, i8* %28, i64 7
  %129 = load i8, i8* %113, align 1
  %130 = zext i8 %129 to i32
  %131 = shl nuw nsw i32 %130, 16
  %132 = or i32 %127, %123
  %133 = or i32 %132, %131
  %134 = or i32 %133, -16777216
  %135 = getelementptr inbounds i32, i32* %27, i64 7
  store i32 %134, i32* %120, align 4
  %136 = getelementptr inbounds i8, i8* %30, i64 8
  %137 = load i8, i8* %121, align 1
  %138 = zext i8 %137 to i32
  %139 = getelementptr inbounds i8, i8* %29, i64 8
  %140 = load i8, i8* %124, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 8
  %143 = getelementptr inbounds i8, i8* %28, i64 8
  %144 = load i8, i8* %128, align 1
  %145 = zext i8 %144 to i32
  %146 = shl nuw nsw i32 %145, 16
  %147 = or i32 %142, %138
  %148 = or i32 %147, %146
  %149 = or i32 %148, -16777216
  %150 = getelementptr inbounds i32, i32* %27, i64 8
  store i32 %149, i32* %135, align 4
  %151 = add i32 %26, -8
  %152 = icmp ugt i32 %151, 7
  br i1 %152, label %25, label %153

153:                                              ; preds = %25, %19
  %154 = phi i8* [ %23, %19 ], [ %136, %25 ]
  %155 = phi i8* [ %22, %19 ], [ %139, %25 ]
  %156 = phi i8* [ %21, %19 ], [ %143, %25 ]
  %157 = phi i32* [ %20, %19 ], [ %150, %25 ]
  %158 = phi i32 [ %4, %19 ], [ %18, %25 ]
  switch i32 %158, label %295 [
    i32 1, label %275
    i32 7, label %159
    i32 6, label %175
    i32 5, label %195
    i32 4, label %215
    i32 3, label %235
    i32 2, label %255
  ]

159:                                              ; preds = %153
  %160 = getelementptr inbounds i8, i8* %154, i64 1
  %161 = load i8, i8* %154, align 1
  %162 = zext i8 %161 to i32
  %163 = getelementptr inbounds i8, i8* %155, i64 1
  %164 = load i8, i8* %155, align 1
  %165 = zext i8 %164 to i32
  %166 = shl nuw nsw i32 %165, 8
  %167 = getelementptr inbounds i8, i8* %156, i64 1
  %168 = load i8, i8* %156, align 1
  %169 = zext i8 %168 to i32
  %170 = shl nuw nsw i32 %169, 16
  %171 = or i32 %166, %162
  %172 = or i32 %171, %170
  %173 = or i32 %172, -16777216
  %174 = getelementptr inbounds i32, i32* %157, i64 1
  store i32 %173, i32* %157, align 4
  br label %175

175:                                              ; preds = %153, %159
  %176 = phi i8* [ %160, %159 ], [ %154, %153 ]
  %177 = phi i8* [ %163, %159 ], [ %155, %153 ]
  %178 = phi i8* [ %167, %159 ], [ %156, %153 ]
  %179 = phi i32* [ %174, %159 ], [ %157, %153 ]
  %180 = getelementptr inbounds i8, i8* %176, i64 1
  %181 = load i8, i8* %176, align 1
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds i8, i8* %177, i64 1
  %184 = load i8, i8* %177, align 1
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = getelementptr inbounds i8, i8* %178, i64 1
  %188 = load i8, i8* %178, align 1
  %189 = zext i8 %188 to i32
  %190 = shl nuw nsw i32 %189, 16
  %191 = or i32 %186, %182
  %192 = or i32 %191, %190
  %193 = or i32 %192, -16777216
  %194 = getelementptr inbounds i32, i32* %179, i64 1
  store i32 %193, i32* %179, align 4
  br label %195

195:                                              ; preds = %153, %175
  %196 = phi i8* [ %180, %175 ], [ %154, %153 ]
  %197 = phi i8* [ %183, %175 ], [ %155, %153 ]
  %198 = phi i8* [ %187, %175 ], [ %156, %153 ]
  %199 = phi i32* [ %194, %175 ], [ %157, %153 ]
  %200 = getelementptr inbounds i8, i8* %196, i64 1
  %201 = load i8, i8* %196, align 1
  %202 = zext i8 %201 to i32
  %203 = getelementptr inbounds i8, i8* %197, i64 1
  %204 = load i8, i8* %197, align 1
  %205 = zext i8 %204 to i32
  %206 = shl nuw nsw i32 %205, 8
  %207 = getelementptr inbounds i8, i8* %198, i64 1
  %208 = load i8, i8* %198, align 1
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 16
  %211 = or i32 %206, %202
  %212 = or i32 %211, %210
  %213 = or i32 %212, -16777216
  %214 = getelementptr inbounds i32, i32* %199, i64 1
  store i32 %213, i32* %199, align 4
  br label %215

215:                                              ; preds = %153, %195
  %216 = phi i8* [ %200, %195 ], [ %154, %153 ]
  %217 = phi i8* [ %203, %195 ], [ %155, %153 ]
  %218 = phi i8* [ %207, %195 ], [ %156, %153 ]
  %219 = phi i32* [ %214, %195 ], [ %157, %153 ]
  %220 = getelementptr inbounds i8, i8* %216, i64 1
  %221 = load i8, i8* %216, align 1
  %222 = zext i8 %221 to i32
  %223 = getelementptr inbounds i8, i8* %217, i64 1
  %224 = load i8, i8* %217, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 8
  %227 = getelementptr inbounds i8, i8* %218, i64 1
  %228 = load i8, i8* %218, align 1
  %229 = zext i8 %228 to i32
  %230 = shl nuw nsw i32 %229, 16
  %231 = or i32 %226, %222
  %232 = or i32 %231, %230
  %233 = or i32 %232, -16777216
  %234 = getelementptr inbounds i32, i32* %219, i64 1
  store i32 %233, i32* %219, align 4
  br label %235

235:                                              ; preds = %153, %215
  %236 = phi i8* [ %220, %215 ], [ %154, %153 ]
  %237 = phi i8* [ %223, %215 ], [ %155, %153 ]
  %238 = phi i8* [ %227, %215 ], [ %156, %153 ]
  %239 = phi i32* [ %234, %215 ], [ %157, %153 ]
  %240 = getelementptr inbounds i8, i8* %236, i64 1
  %241 = load i8, i8* %236, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds i8, i8* %237, i64 1
  %244 = load i8, i8* %237, align 1
  %245 = zext i8 %244 to i32
  %246 = shl nuw nsw i32 %245, 8
  %247 = getelementptr inbounds i8, i8* %238, i64 1
  %248 = load i8, i8* %238, align 1
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 16
  %251 = or i32 %246, %242
  %252 = or i32 %251, %250
  %253 = or i32 %252, -16777216
  %254 = getelementptr inbounds i32, i32* %239, i64 1
  store i32 %253, i32* %239, align 4
  br label %255

255:                                              ; preds = %153, %235
  %256 = phi i8* [ %240, %235 ], [ %154, %153 ]
  %257 = phi i8* [ %243, %235 ], [ %155, %153 ]
  %258 = phi i8* [ %247, %235 ], [ %156, %153 ]
  %259 = phi i32* [ %254, %235 ], [ %157, %153 ]
  %260 = getelementptr inbounds i8, i8* %256, i64 1
  %261 = load i8, i8* %256, align 1
  %262 = zext i8 %261 to i32
  %263 = getelementptr inbounds i8, i8* %257, i64 1
  %264 = load i8, i8* %257, align 1
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 8
  %267 = getelementptr inbounds i8, i8* %258, i64 1
  %268 = load i8, i8* %258, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw nsw i32 %269, 16
  %271 = or i32 %266, %262
  %272 = or i32 %271, %270
  %273 = or i32 %272, -16777216
  %274 = getelementptr inbounds i32, i32* %259, i64 1
  store i32 %273, i32* %259, align 4
  br label %275

275:                                              ; preds = %153, %255
  %276 = phi i8* [ %260, %255 ], [ %154, %153 ]
  %277 = phi i8* [ %263, %255 ], [ %155, %153 ]
  %278 = phi i8* [ %267, %255 ], [ %156, %153 ]
  %279 = phi i32* [ %274, %255 ], [ %157, %153 ]
  %280 = getelementptr inbounds i8, i8* %276, i64 1
  %281 = load i8, i8* %276, align 1
  %282 = zext i8 %281 to i32
  %283 = getelementptr inbounds i8, i8* %277, i64 1
  %284 = load i8, i8* %277, align 1
  %285 = zext i8 %284 to i32
  %286 = shl nuw nsw i32 %285, 8
  %287 = getelementptr inbounds i8, i8* %278, i64 1
  %288 = load i8, i8* %278, align 1
  %289 = zext i8 %288 to i32
  %290 = shl nuw nsw i32 %289, 16
  %291 = or i32 %286, %282
  %292 = or i32 %291, %290
  %293 = or i32 %292, -16777216
  %294 = getelementptr inbounds i32, i32* %279, i64 1
  store i32 %293, i32* %279, align 4
  br label %295

295:                                              ; preds = %153, %275
  %296 = phi i8* [ %280, %275 ], [ %154, %153 ]
  %297 = phi i8* [ %283, %275 ], [ %155, %153 ]
  %298 = phi i8* [ %287, %275 ], [ %156, %153 ]
  %299 = phi i32* [ %294, %275 ], [ %157, %153 ]
  %300 = getelementptr inbounds i8, i8* %296, i64 %16
  %301 = getelementptr inbounds i8, i8* %297, i64 %16
  %302 = getelementptr inbounds i8, i8* %298, i64 %16
  %303 = getelementptr inbounds i32, i32* %299, i64 %17
  %304 = add i32 %24, -1
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %19

306:                                              ; preds = %295, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBAAseparate16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %12
  %15 = bitcast i8* %11 to i16*
  %16 = bitcast i8* %10 to i16*
  %17 = bitcast i8* %9 to i16*
  %18 = bitcast i8* %8 to i16*
  %19 = icmp eq i32 %4, 0
  %20 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %21 = sext i32 %6 to i64
  %22 = sext i32 %7 to i64
  br label %23

23:                                               ; preds = %14, %71
  %24 = phi i16* [ %15, %14 ], [ %80, %71 ]
  %25 = phi i16* [ %16, %14 ], [ %79, %71 ]
  %26 = phi i16* [ %17, %14 ], [ %78, %71 ]
  %27 = phi i16* [ %18, %14 ], [ %77, %71 ]
  %28 = phi i32* [ %1, %14 ], [ %81, %71 ]
  %29 = phi i32 [ %5, %14 ], [ %82, %71 ]
  br i1 %19, label %71, label %30

30:                                               ; preds = %23, %30
  %31 = phi i16* [ %60, %30 ], [ %24, %23 ]
  %32 = phi i16* [ %52, %30 ], [ %25, %23 ]
  %33 = phi i16* [ %44, %30 ], [ %26, %23 ]
  %34 = phi i16* [ %38, %30 ], [ %27, %23 ]
  %35 = phi i32* [ %68, %30 ], [ %28, %23 ]
  %36 = phi i32 [ %69, %30 ], [ 0, %23 ]
  %37 = load i8*, i8** %20, align 8
  %38 = getelementptr inbounds i16, i16* %34, i64 1
  %39 = load i16, i16* %34, align 2
  %40 = zext i16 %39 to i64
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i16, i16* %33, i64 1
  %45 = load i16, i16* %33, align 2
  %46 = zext i16 %45 to i64
  %47 = getelementptr inbounds i8, i8* %37, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = or i32 %50, %43
  %52 = getelementptr inbounds i16, i16* %32, i64 1
  %53 = load i16, i16* %32, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds i8, i8* %37, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 16
  %59 = or i32 %51, %58
  %60 = getelementptr inbounds i16, i16* %31, i64 1
  %61 = load i16, i16* %31, align 2
  %62 = zext i16 %61 to i64
  %63 = getelementptr inbounds i8, i8* %37, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw i32 %65, 24
  %67 = or i32 %59, %66
  %68 = getelementptr inbounds i32, i32* %35, i64 1
  store i32 %67, i32* %35, align 4
  %69 = add nuw i32 %36, 1
  %70 = icmp eq i32 %69, %4
  br i1 %70, label %71, label %30

71:                                               ; preds = %30, %23
  %72 = phi i32* [ %28, %23 ], [ %68, %30 ]
  %73 = phi i16* [ %27, %23 ], [ %38, %30 ]
  %74 = phi i16* [ %26, %23 ], [ %44, %30 ]
  %75 = phi i16* [ %25, %23 ], [ %52, %30 ]
  %76 = phi i16* [ %24, %23 ], [ %60, %30 ]
  %77 = getelementptr inbounds i16, i16* %73, i64 %21
  %78 = getelementptr inbounds i16, i16* %74, i64 %21
  %79 = getelementptr inbounds i16, i16* %75, i64 %21
  %80 = getelementptr inbounds i16, i16* %76, i64 %21
  %81 = getelementptr inbounds i32, i32* %72, i64 %22
  %82 = add i32 %29, -1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %23

84:                                               ; preds = %71, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBUAseparate16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %98, label %14

14:                                               ; preds = %12
  %15 = bitcast i8* %11 to i16*
  %16 = bitcast i8* %10 to i16*
  %17 = bitcast i8* %9 to i16*
  %18 = bitcast i8* %8 to i16*
  %19 = icmp eq i32 %4, 0
  %20 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %21 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 21
  %22 = sext i32 %6 to i64
  %23 = sext i32 %7 to i64
  br label %24

24:                                               ; preds = %14, %85
  %25 = phi i16* [ %15, %14 ], [ %94, %85 ]
  %26 = phi i16* [ %16, %14 ], [ %93, %85 ]
  %27 = phi i16* [ %17, %14 ], [ %92, %85 ]
  %28 = phi i16* [ %18, %14 ], [ %91, %85 ]
  %29 = phi i32* [ %1, %14 ], [ %95, %85 ]
  %30 = phi i32 [ %5, %14 ], [ %96, %85 ]
  br i1 %19, label %85, label %31

31:                                               ; preds = %24, %31
  %32 = phi i16* [ %39, %31 ], [ %25, %24 ]
  %33 = phi i16* [ %67, %31 ], [ %26, %24 ]
  %34 = phi i16* [ %58, %31 ], [ %27, %24 ]
  %35 = phi i16* [ %49, %31 ], [ %28, %24 ]
  %36 = phi i32* [ %82, %31 ], [ %29, %24 ]
  %37 = phi i32 [ %83, %31 ], [ %4, %24 ]
  %38 = load i8*, i8** %20, align 8
  %39 = getelementptr inbounds i16, i16* %32, i64 1
  %40 = load i16, i16* %32, align 2
  %41 = zext i16 %40 to i64
  %42 = getelementptr inbounds i8, i8* %38, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = load i8*, i8** %21, align 8
  %46 = zext i8 %43 to i64
  %47 = shl nuw nsw i64 %46, 8
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = getelementptr inbounds i16, i16* %35, i64 1
  %50 = load i16, i16* %35, align 2
  %51 = zext i16 %50 to i64
  %52 = getelementptr inbounds i8, i8* %38, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds i8, i8* %48, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds i16, i16* %34, i64 1
  %59 = load i16, i16* %34, align 2
  %60 = zext i16 %59 to i64
  %61 = getelementptr inbounds i8, i8* %38, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds i8, i8* %48, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i16, i16* %33, i64 1
  %68 = load i16, i16* %33, align 2
  %69 = zext i16 %68 to i64
  %70 = getelementptr inbounds i8, i8* %38, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds i8, i8* %48, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %66, 8
  %77 = shl nuw nsw i32 %75, 16
  %78 = shl nuw i32 %44, 24
  %79 = or i32 %78, %57
  %80 = or i32 %79, %76
  %81 = or i32 %80, %77
  %82 = getelementptr inbounds i32, i32* %36, i64 1
  store i32 %81, i32* %36, align 4
  %83 = add i32 %37, -1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %31

85:                                               ; preds = %31, %24
  %86 = phi i32* [ %29, %24 ], [ %82, %31 ]
  %87 = phi i16* [ %28, %24 ], [ %49, %31 ]
  %88 = phi i16* [ %27, %24 ], [ %58, %31 ]
  %89 = phi i16* [ %26, %24 ], [ %67, %31 ]
  %90 = phi i16* [ %25, %24 ], [ %39, %31 ]
  %91 = getelementptr inbounds i16, i16* %87, i64 %22
  %92 = getelementptr inbounds i16, i16* %88, i64 %22
  %93 = getelementptr inbounds i16, i16* %89, i64 %22
  %94 = getelementptr inbounds i16, i16* %90, i64 %22
  %95 = getelementptr inbounds i32, i32* %86, i64 %23
  %96 = add i32 %30, -1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %24

98:                                               ; preds = %85, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putRGBseparate16bittile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readnone) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %72, label %14

14:                                               ; preds = %12
  %15 = bitcast i8* %10 to i16*
  %16 = bitcast i8* %9 to i16*
  %17 = bitcast i8* %8 to i16*
  %18 = icmp eq i32 %4, 0
  %19 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 22
  %20 = sext i32 %6 to i64
  %21 = sext i32 %7 to i64
  br label %22

22:                                               ; preds = %14, %61
  %23 = phi i16* [ %15, %14 ], [ %68, %61 ]
  %24 = phi i16* [ %16, %14 ], [ %67, %61 ]
  %25 = phi i16* [ %17, %14 ], [ %66, %61 ]
  %26 = phi i32* [ %1, %14 ], [ %69, %61 ]
  %27 = phi i32 [ %5, %14 ], [ %70, %61 ]
  br i1 %18, label %61, label %28

28:                                               ; preds = %22, %28
  %29 = phi i16* [ %48, %28 ], [ %23, %22 ]
  %30 = phi i16* [ %41, %28 ], [ %24, %22 ]
  %31 = phi i16* [ %35, %28 ], [ %25, %22 ]
  %32 = phi i32* [ %58, %28 ], [ %26, %22 ]
  %33 = phi i32 [ %59, %28 ], [ 0, %22 ]
  %34 = load i8*, i8** %19, align 8
  %35 = getelementptr inbounds i16, i16* %31, i64 1
  %36 = load i16, i16* %31, align 2
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i16, i16* %30, i64 1
  %42 = load i16, i16* %30, align 2
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds i8, i8* %34, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  %48 = getelementptr inbounds i16, i16* %29, i64 1
  %49 = load i16, i16* %29, align 2
  %50 = zext i16 %49 to i64
  %51 = getelementptr inbounds i8, i8* %34, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 16
  %55 = or i32 %47, %40
  %56 = or i32 %55, %54
  %57 = or i32 %56, -16777216
  %58 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 %57, i32* %32, align 4
  %59 = add nuw i32 %33, 1
  %60 = icmp eq i32 %59, %4
  br i1 %60, label %61, label %28

61:                                               ; preds = %28, %22
  %62 = phi i32* [ %26, %22 ], [ %58, %28 ]
  %63 = phi i16* [ %25, %22 ], [ %35, %28 ]
  %64 = phi i16* [ %24, %22 ], [ %41, %28 ]
  %65 = phi i16* [ %23, %22 ], [ %48, %28 ]
  %66 = getelementptr inbounds i16, i16* %63, i64 %20
  %67 = getelementptr inbounds i16, i16* %64, i64 %20
  %68 = getelementptr inbounds i16, i16* %65, i64 %20
  %69 = getelementptr inbounds i32, i32* %62, i64 %21
  %70 = add i32 %27, -1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %22

72:                                               ; preds = %61, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @putCMYKseparate8bittile(%struct._TIFFRGBAImage* nocapture readnone, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #4 {
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %172, label %14

14:                                               ; preds = %12
  %15 = icmp eq i32 %4, 0
  %16 = sext i32 %6 to i64
  %17 = sext i32 %7 to i64
  %18 = add i32 %4, -1
  %19 = zext i32 %18 to i64
  %20 = add nuw nsw i64 %19, 1
  %21 = zext i32 %18 to i64
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i64 %20, 4
  %24 = and i64 %20, 8589934588
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %4, %25
  %27 = icmp eq i64 %20, %24
  br label %28

28:                                               ; preds = %14, %159
  %29 = phi i8* [ %11, %14 ], [ %168, %159 ]
  %30 = phi i8* [ %10, %14 ], [ %167, %159 ]
  %31 = phi i8* [ %9, %14 ], [ %166, %159 ]
  %32 = phi i8* [ %8, %14 ], [ %165, %159 ]
  %33 = phi i32* [ %1, %14 ], [ %169, %159 ]
  %34 = phi i32 [ %5, %14 ], [ %170, %159 ]
  %35 = bitcast i32* %33 to i8*
  br i1 %15, label %159, label %36

36:                                               ; preds = %28
  br i1 %23, label %109, label %37

37:                                               ; preds = %36
  %38 = getelementptr i32, i32* %33, i64 %22
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr i8, i8* %29, i64 %22
  %41 = getelementptr i8, i8* %32, i64 %22
  %42 = getelementptr i8, i8* %31, i64 %22
  %43 = getelementptr i8, i8* %30, i64 %22
  %44 = icmp ugt i8* %40, %35
  %45 = icmp ult i8* %29, %39
  %46 = and i1 %44, %45
  %47 = icmp ugt i8* %41, %35
  %48 = icmp ult i8* %32, %39
  %49 = and i1 %47, %48
  %50 = or i1 %46, %49
  %51 = icmp ugt i8* %42, %35
  %52 = icmp ult i8* %31, %39
  %53 = and i1 %51, %52
  %54 = or i1 %50, %53
  %55 = icmp ugt i8* %43, %35
  %56 = icmp ult i8* %30, %39
  %57 = and i1 %55, %56
  %58 = or i1 %54, %57
  br i1 %58, label %109, label %59

59:                                               ; preds = %37
  %60 = getelementptr i8, i8* %29, i64 %24
  %61 = getelementptr i8, i8* %30, i64 %24
  %62 = getelementptr i8, i8* %31, i64 %24
  %63 = getelementptr i8, i8* %32, i64 %24
  %64 = getelementptr i32, i32* %33, i64 %24
  br label %65

65:                                               ; preds = %65, %59
  %66 = phi i64 [ 0, %59 ], [ %106, %65 ]
  %67 = getelementptr i8, i8* %29, i64 %66
  %68 = getelementptr i8, i8* %30, i64 %66
  %69 = getelementptr i8, i8* %31, i64 %66
  %70 = getelementptr i8, i8* %32, i64 %66
  %71 = getelementptr i32, i32* %33, i64 %66
  %72 = bitcast i8* %67 to <4 x i8>*
  %73 = load <4 x i8>, <4 x i8>* %72, align 1, !alias.scope !21
  %74 = xor <4 x i8> %73, <i8 -1, i8 -1, i8 -1, i8 -1>
  %75 = zext <4 x i8> %74 to <4 x i32>
  %76 = bitcast i8* %70 to <4 x i8>*
  %77 = load <4 x i8>, <4 x i8>* %76, align 1, !alias.scope !24
  %78 = xor <4 x i8> %77, <i8 -1, i8 -1, i8 -1, i8 -1>
  %79 = zext <4 x i8> %78 to <4 x i32>
  %80 = mul nuw nsw <4 x i32> %79, %75
  %81 = trunc <4 x i32> %80 to <4 x i16>
  %82 = udiv <4 x i16> %81, <i16 255, i16 255, i16 255, i16 255>
  %83 = zext <4 x i16> %82 to <4 x i32>
  %84 = bitcast i8* %69 to <4 x i8>*
  %85 = load <4 x i8>, <4 x i8>* %84, align 1, !alias.scope !26
  %86 = xor <4 x i8> %85, <i8 -1, i8 -1, i8 -1, i8 -1>
  %87 = zext <4 x i8> %86 to <4 x i32>
  %88 = mul nuw nsw <4 x i32> %87, %75
  %89 = trunc <4 x i32> %88 to <4 x i16>
  %90 = udiv <4 x i16> %89, <i16 255, i16 255, i16 255, i16 255>
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = bitcast i8* %68 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1, !alias.scope !28
  %94 = xor <4 x i8> %93, <i8 -1, i8 -1, i8 -1, i8 -1>
  %95 = zext <4 x i8> %94 to <4 x i32>
  %96 = mul nuw nsw <4 x i32> %95, %75
  %97 = trunc <4 x i32> %96 to <4 x i16>
  %98 = udiv <4 x i16> %97, <i16 255, i16 255, i16 255, i16 255>
  %99 = zext <4 x i16> %98 to <4 x i32>
  %100 = shl nuw nsw <4 x i32> %91, <i32 8, i32 8, i32 8, i32 8>
  %101 = shl nuw nsw <4 x i32> %99, <i32 16, i32 16, i32 16, i32 16>
  %102 = or <4 x i32> %100, %83
  %103 = or <4 x i32> %102, %101
  %104 = or <4 x i32> %103, <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>
  %105 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %105, align 4, !alias.scope !30, !noalias !32
  %106 = add i64 %66, 4
  %107 = icmp eq i64 %106, %24
  br i1 %107, label %108, label %65, !llvm.loop !33

108:                                              ; preds = %65
  br i1 %27, label %159, label %109

109:                                              ; preds = %108, %37, %36
  %110 = phi i8* [ %29, %37 ], [ %29, %36 ], [ %60, %108 ]
  %111 = phi i8* [ %30, %37 ], [ %30, %36 ], [ %61, %108 ]
  %112 = phi i8* [ %31, %37 ], [ %31, %36 ], [ %62, %108 ]
  %113 = phi i8* [ %32, %37 ], [ %32, %36 ], [ %63, %108 ]
  %114 = phi i32* [ %33, %37 ], [ %33, %36 ], [ %64, %108 ]
  %115 = phi i32 [ %4, %37 ], [ %4, %36 ], [ %26, %108 ]
  br label %116

116:                                              ; preds = %109, %116
  %117 = phi i8* [ %123, %116 ], [ %110, %109 ]
  %118 = phi i8* [ %143, %116 ], [ %111, %109 ]
  %119 = phi i8* [ %135, %116 ], [ %112, %109 ]
  %120 = phi i8* [ %127, %116 ], [ %113, %109 ]
  %121 = phi i32* [ %156, %116 ], [ %114, %109 ]
  %122 = phi i32 [ %157, %116 ], [ %115, %109 ]
  %123 = getelementptr inbounds i8, i8* %117, i64 1
  %124 = load i8, i8* %117, align 1
  %125 = xor i8 %124, -1
  %126 = zext i8 %125 to i32
  %127 = getelementptr inbounds i8, i8* %120, i64 1
  %128 = load i8, i8* %120, align 1
  %129 = xor i8 %128, -1
  %130 = zext i8 %129 to i32
  %131 = mul nuw nsw i32 %130, %126
  %132 = trunc i32 %131 to i16
  %133 = udiv i16 %132, 255
  %134 = zext i16 %133 to i32
  %135 = getelementptr inbounds i8, i8* %119, i64 1
  %136 = load i8, i8* %119, align 1
  %137 = xor i8 %136, -1
  %138 = zext i8 %137 to i32
  %139 = mul nuw nsw i32 %138, %126
  %140 = trunc i32 %139 to i16
  %141 = udiv i16 %140, 255
  %142 = zext i16 %141 to i32
  %143 = getelementptr inbounds i8, i8* %118, i64 1
  %144 = load i8, i8* %118, align 1
  %145 = xor i8 %144, -1
  %146 = zext i8 %145 to i32
  %147 = mul nuw nsw i32 %146, %126
  %148 = trunc i32 %147 to i16
  %149 = udiv i16 %148, 255
  %150 = zext i16 %149 to i32
  %151 = shl nuw nsw i32 %142, 8
  %152 = shl nuw nsw i32 %150, 16
  %153 = or i32 %151, %134
  %154 = or i32 %153, %152
  %155 = or i32 %154, -16777216
  %156 = getelementptr inbounds i32, i32* %121, i64 1
  store i32 %155, i32* %121, align 4
  %157 = add i32 %122, -1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %116, !llvm.loop !34

159:                                              ; preds = %116, %108, %28
  %160 = phi i32* [ %33, %28 ], [ %64, %108 ], [ %156, %116 ]
  %161 = phi i8* [ %32, %28 ], [ %63, %108 ], [ %127, %116 ]
  %162 = phi i8* [ %31, %28 ], [ %62, %108 ], [ %135, %116 ]
  %163 = phi i8* [ %30, %28 ], [ %61, %108 ], [ %143, %116 ]
  %164 = phi i8* [ %29, %28 ], [ %60, %108 ], [ %123, %116 ]
  %165 = getelementptr inbounds i8, i8* %161, i64 %16
  %166 = getelementptr inbounds i8, i8* %162, i64 %16
  %167 = getelementptr inbounds i8, i8* %163, i64 %16
  %168 = getelementptr inbounds i8, i8* %164, i64 %16
  %169 = getelementptr inbounds i32, i32* %160, i64 %17
  %170 = add i32 %34, -1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %28

172:                                              ; preds = %159, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @putseparate8bitYCbCr11tile(%struct._TIFFRGBAImage* nocapture readonly, i32* nocapture, i32, i32, i32, i32, i32, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readnone) #0 {
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %64, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %13 to i8*
  %19 = bitcast i32* %14 to i8*
  %20 = bitcast i32* %15 to i8*
  %21 = getelementptr inbounds %struct._TIFFRGBAImage, %struct._TIFFRGBAImage* %0, i64 0, i32 19
  %22 = sext i32 %6 to i64
  %23 = sext i32 %7 to i64
  br label %24

24:                                               ; preds = %17, %57
  %25 = phi i32* [ %1, %17 ], [ %61, %57 ]
  %26 = phi i8* [ %10, %17 ], [ %60, %57 ]
  %27 = phi i8* [ %9, %17 ], [ %59, %57 ]
  %28 = phi i8* [ %8, %17 ], [ %58, %57 ]
  %29 = phi i32 [ %5, %17 ], [ %62, %57 ]
  br label %30

30:                                               ; preds = %24, %30
  %31 = phi i32 [ %55, %30 ], [ %4, %24 ]
  %32 = phi i8* [ %37, %30 ], [ %28, %24 ]
  %33 = phi i8* [ %40, %30 ], [ %27, %24 ]
  %34 = phi i8* [ %43, %30 ], [ %26, %24 ]
  %35 = phi i32* [ %54, %30 ], [ %25, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #6
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #6
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  store i32 -1431655766, i32* %15, align 4
  %36 = load %struct.TIFFYCbCrToRGB*, %struct.TIFFYCbCrToRGB** %21, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  %38 = load i8, i8* %32, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %33, i64 1
  %41 = load i8, i8* %33, align 1
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %34, i64 1
  %44 = load i8, i8* %34, align 1
  %45 = zext i8 %44 to i32
  call void @TIFFYCbCrtoRGB(%struct.TIFFYCbCrToRGB* %36, i32 %39, i32 %42, i32 %45, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #6
  %46 = load i32, i32* %13, align 4
  %47 = load i32, i32* %14, align 4
  %48 = shl i32 %47, 8
  %49 = load i32, i32* %15, align 4
  %50 = shl i32 %49, 16
  %51 = or i32 %46, %48
  %52 = or i32 %51, %50
  %53 = or i32 %52, -16777216
  %54 = getelementptr inbounds i32, i32* %35, i64 1
  store i32 %53, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #6
  %55 = add i32 %31, -1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %30

57:                                               ; preds = %30
  %58 = getelementptr inbounds i8, i8* %37, i64 %22
  %59 = getelementptr inbounds i8, i8* %40, i64 %22
  %60 = getelementptr inbounds i8, i8* %43, i64 %22
  %61 = getelementptr inbounds i32, i32* %54, i64 %23
  %62 = add i32 %29, -1
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %24

64:                                               ; preds = %57, %12
  ret void
}

declare i64 @_TIFFMultiplySSize(%struct.tiff*, i64, i64, i8*) local_unnamed_addr #3

declare i64 @TIFFReadTile(%struct.tiff*, i8*, i32, i32, i32, i16 zeroext) local_unnamed_addr #3

declare i64 @TIFFReadEncodedStrip(%struct.tiff*, i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12, !13}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = !{!12}
!15 = !{!13}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = !{!27}
!27 = distinct !{!27, !23}
!28 = !{!29}
!29 = distinct !{!29, !23}
!30 = !{!31}
!31 = distinct !{!31, !23}
!32 = !{!22, !25, !27, !29}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
