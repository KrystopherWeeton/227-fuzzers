; ModuleID = '../../third_party/pdfium/core/fxcrt/fx_system.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/fx_system.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZN12_GLOBAL__N_112g_last_errorE = internal unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @FXSYS_roundf(float) local_unnamed_addr #0 {
  %2 = fcmp uno float %0, 0.000000e+00
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = fcmp olt float %0, 0xC1E0000000000000
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = fcmp ult float %0, 0x41E0000000000000
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call float @llvm.round.f32(float %0) #12
  %9 = fptosi float %8 to i32
  br label %10

10:                                               ; preds = %5, %3, %1, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %1 ], [ -2147483648, %3 ], [ 2147483647, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @FXSYS_round(double) local_unnamed_addr #0 {
  %2 = fcmp uno double %0, 0.000000e+00
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = fcmp olt double %0, 0xC1E0000000000000
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = fcmp ult double %0, 0x41DFFFFFFFC00000
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call double @llvm.round.f64(double %0)
  %9 = fptosi double %8 to i32
  br label %10

10:                                               ; preds = %5, %3, %1, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %1 ], [ -2147483648, %3 ], [ 2147483647, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FXSYS_atoi(i8* readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 45
  %6 = icmp eq i8 %4, 43
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = select i1 %7, i8* %8, i8* %0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 1
  br i1 %11, label %31, label %12

12:                                               ; preds = %3, %25
  %13 = phi i8 [ %29, %25 ], [ %10, %3 ]
  %14 = phi i32 [ %27, %25 ], [ 0, %3 ]
  %15 = phi i8* [ %28, %25 ], [ %9, %3 ]
  %16 = sext i8 %13 to i32
  %17 = add nsw i32 %16, -48
  %18 = icmp ult i32 %17, 10
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = sub nuw i32 -2147483601, %16
  %21 = sdiv i32 %20, 10
  %22 = icmp sgt i32 %14, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = select i1 %5, i32 -2147483648, i32 2147483647
  br label %35

25:                                               ; preds = %19
  %26 = mul nsw i32 %14, 10
  %27 = add nsw i32 %17, %26
  %28 = getelementptr inbounds i8, i8* %15, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 1
  br i1 %30, label %31, label %12

31:                                               ; preds = %25, %12, %3
  %32 = phi i32 [ 0, %3 ], [ %14, %12 ], [ %27, %25 ]
  %33 = sub i32 0, %32
  %34 = select i1 %5, i32 %33, i32 %32
  br label %35

35:                                               ; preds = %1, %31, %23
  %36 = phi i32 [ %24, %23 ], [ 0, %1 ], [ %34, %31 ]
  ret i32 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FXSYS_atoui(i8* readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 45
  %6 = icmp eq i8 %4, 43
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = select i1 %7, i8* %8, i8* %0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %3, %23
  %13 = phi i8 [ %27, %23 ], [ %10, %3 ]
  %14 = phi i32 [ %25, %23 ], [ 0, %3 ]
  %15 = phi i8* [ %26, %23 ], [ %9, %3 ]
  %16 = sext i8 %13 to i32
  %17 = add nsw i32 %16, -48
  %18 = icmp ult i32 %17, 10
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = xor i32 %17, -2
  %21 = udiv i32 %20, 10
  %22 = icmp ugt i32 %14, %21
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = mul i32 %14, 10
  %25 = add i32 %17, %24
  %26 = getelementptr inbounds i8, i8* %15, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 1
  br i1 %28, label %29, label %12

29:                                               ; preds = %23, %12, %3
  %30 = phi i32 [ 0, %3 ], [ %14, %12 ], [ %25, %23 ]
  %31 = sub i32 0, %30
  %32 = select i1 %5, i32 %31, i32 %30
  br label %33

33:                                               ; preds = %19, %1, %29
  %34 = phi i32 [ 0, %1 ], [ %32, %29 ], [ -1, %19 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FXSYS_wtoi(i32* readonly) local_unnamed_addr #3 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %1
  %4 = load i32, i32* %0, align 4
  %5 = icmp eq i32 %4, 45
  %6 = icmp eq i32 %4, 43
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds i32, i32* %0, i64 1
  %9 = select i1 %7, i32* %8, i32* %0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = icmp ugt i32 %11, 126
  br i1 %12, label %41, label %13

13:                                               ; preds = %3, %34
  %14 = phi i32 [ %38, %34 ], [ %10, %3 ]
  %15 = phi i32 [ %36, %34 ], [ 0, %3 ]
  %16 = phi i32* [ %37, %34 ], [ %9, %3 ]
  %17 = tail call i32 @iswdigit(i32 %14) #12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %13
  %20 = load i32, i32* %16, align 4
  %21 = icmp ugt i32 %20, 127
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @iswdigit(i32 %20) #12
  %24 = icmp eq i32 %23, 0
  %25 = add nsw i32 %20, -48
  %26 = select i1 %24, i32 0, i32 %25
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i32 [ %26, %22 ], [ 0, %19 ]
  %29 = sub nsw i32 2147483647, %28
  %30 = sdiv i32 %29, 10
  %31 = icmp sgt i32 %15, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = select i1 %5, i32 -2147483648, i32 2147483647
  br label %45

34:                                               ; preds = %27
  %35 = mul nsw i32 %15, 10
  %36 = add nsw i32 %28, %35
  %37 = getelementptr inbounds i32, i32* %16, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, -1
  %40 = icmp ugt i32 %39, 126
  br i1 %40, label %41, label %13

41:                                               ; preds = %34, %13, %3
  %42 = phi i32 [ 0, %3 ], [ %36, %34 ], [ %15, %13 ]
  %43 = sub i32 0, %42
  %44 = select i1 %5, i32 %43, i32 %42
  br label %45

45:                                               ; preds = %1, %41, %32
  %46 = phi i32 [ %33, %32 ], [ 0, %1 ], [ %44, %41 ]
  ret i32 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @FXSYS_atoi64(i8* readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 45
  %6 = icmp eq i8 %4, 43
  %7 = or i1 %5, %6
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = select i1 %7, i8* %8, i8* %0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 1
  br i1 %11, label %32, label %12

12:                                               ; preds = %3, %26
  %13 = phi i8 [ %30, %26 ], [ %10, %3 ]
  %14 = phi i64 [ %28, %26 ], [ 0, %3 ]
  %15 = phi i8* [ %29, %26 ], [ %9, %3 ]
  %16 = sext i8 %13 to i32
  %17 = add nsw i32 %16, -48
  %18 = icmp ult i32 %17, 10
  br i1 %18, label %19, label %32

19:                                               ; preds = %12
  %20 = sext i32 %17 to i64
  %21 = sub nuw nsw i64 9223372036854775807, %20
  %22 = sdiv i64 %21, 10
  %23 = icmp sgt i64 %14, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = select i1 %5, i64 -9223372036854775808, i64 9223372036854775807
  br label %36

26:                                               ; preds = %19
  %27 = mul nsw i64 %14, 10
  %28 = add nsw i64 %27, %20
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 1
  br i1 %31, label %32, label %12

32:                                               ; preds = %26, %12, %3
  %33 = phi i64 [ 0, %3 ], [ %14, %12 ], [ %28, %26 ]
  %34 = sub i64 0, %33
  %35 = select i1 %5, i64 %34, i64 %33
  br label %36

36:                                               ; preds = %1, %32, %24
  %37 = phi i64 [ %25, %24 ], [ 0, %1 ], [ %35, %32 ]
  ret i64 %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @FXSYS_i64toa(i64, i8* returned, i32) local_unnamed_addr #4 {
  %4 = add i32 %2, -2
  %5 = icmp ugt i32 %4, 14
  br i1 %5, label %45, label %6

6:                                                ; preds = %3
  %7 = icmp eq i64 %0, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  store i8 48, i8* %1, align 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  br label %45

10:                                               ; preds = %6
  %11 = icmp slt i64 %0, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  store i8 45, i8* %1, align 1
  %13 = sub i64 0, %0
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi i32 [ 1, %12 ], [ 0, %10 ]
  %16 = phi i64 [ %13, %12 ], [ %0, %10 ]
  %17 = sext i32 %2 to i64
  %18 = udiv i64 %16, %17
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %24, %14
  %21 = phi i32 [ 1, %14 ], [ %27, %24 ]
  %22 = sext i32 %21 to i64
  %23 = zext i32 %15 to i64
  br label %34

24:                                               ; preds = %14, %24
  %25 = phi i64 [ %28, %24 ], [ %18, %14 ]
  %26 = phi i32 [ %27, %24 ], [ 1, %14 ]
  %27 = add nuw nsw i32 %26, 1
  %28 = sdiv i64 %25, %17
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %24, label %20

30:                                               ; preds = %34
  %31 = add nuw nsw i32 %21, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  br label %45

34:                                               ; preds = %34, %20
  %35 = phi i64 [ %22, %20 ], [ %37, %34 ]
  %36 = phi i64 [ %16, %20 ], [ %43, %34 ]
  %37 = add nsw i64 %35, -1
  %38 = urem i64 %36, %17
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = add nsw i64 %37, %23
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  store i8 %40, i8* %42, align 1
  %43 = udiv i64 %36, %17
  %44 = icmp sgt i64 %37, 0
  br i1 %44, label %34, label %30

45:                                               ; preds = %3, %8, %30
  %46 = phi i8* [ %9, %8 ], [ %33, %30 ], [ %1, %3 ]
  store i8 0, i8* %46, align 1
  ret i8* %1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @FXSYS_GetACP() local_unnamed_addr #5 {
  ret i32 0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @FXSYS_strlwr(i8*) local_unnamed_addr #6 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %3, %18
  %7 = phi i8 [ %22, %18 ], [ %4, %3 ]
  %8 = phi i8* [ %21, %18 ], [ %0, %3 ]
  %9 = sext i8 %7 to i32
  %10 = add nsw i32 %9, 128
  %11 = icmp ult i32 %10, 384
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = tail call i32** @__ctype_tolower_loc() #13
  %14 = load i32*, i32** %13, align 8
  %15 = sext i8 %7 to i64
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %17, %12 ], [ %9, %6 ]
  %20 = trunc i32 %19 to i8
  store i8 %20, i8* %8, align 1
  %21 = getelementptr inbounds i8, i8* %8, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %6

24:                                               ; preds = %18, %3, %1
  ret i8* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @FXSYS_strupr(i8*) local_unnamed_addr #6 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %3, %18
  %7 = phi i8 [ %22, %18 ], [ %4, %3 ]
  %8 = phi i8* [ %21, %18 ], [ %0, %3 ]
  %9 = sext i8 %7 to i32
  %10 = add nsw i32 %9, 128
  %11 = icmp ult i32 %10, 384
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = tail call i32** @__ctype_toupper_loc() #13
  %14 = load i32*, i32** %13, align 8
  %15 = sext i8 %7 to i64
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i32 [ %17, %12 ], [ %9, %6 ]
  %20 = trunc i32 %19 to i8
  store i8 %20, i8* %8, align 1
  %21 = getelementptr inbounds i8, i8* %8, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %6

24:                                               ; preds = %18, %3, %1
  ret i8* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @FXSYS_wcslwr(i32*) local_unnamed_addr #3 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = load i32, i32* %0, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %11, %6 ], [ %4, %3 ]
  %8 = phi i32* [ %10, %6 ], [ %0, %3 ]
  %9 = tail call i32 @u_tolower_69(i32 %7) #12
  store i32 %9, i32* %8, align 4
  %10 = getelementptr inbounds i32, i32* %8, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %6

13:                                               ; preds = %6, %3, %1
  ret i32* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @FXSYS_wcsupr(i32*) local_unnamed_addr #3 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = load i32, i32* %0, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %11, %6 ], [ %4, %3 ]
  %8 = phi i32* [ %10, %6 ], [ %0, %3 ]
  %9 = tail call i32 @u_toupper_69(i32 %7) #12
  store i32 %9, i32* %8, align 4
  %10 = getelementptr inbounds i32, i32* %8, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %6

13:                                               ; preds = %6, %3, %1
  ret i32* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @FXSYS_stricmp(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #7 {
  br label %3

3:                                                ; preds = %31, %2
  %4 = phi i8* [ %0, %2 ], [ %33, %31 ]
  %5 = phi i8* [ %1, %2 ], [ %32, %31 ]
  %6 = load i8, i8* %4, align 1
  %7 = sext i8 %6 to i32
  %8 = add nsw i32 %7, 128
  %9 = icmp ult i32 %8, 384
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = tail call i32** @__ctype_toupper_loc() #13
  %12 = load i32*, i32** %11, align 8
  %13 = sext i8 %6 to i64
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i32 [ %15, %10 ], [ %7, %3 ]
  %18 = load i8, i8* %5, align 1
  %19 = sext i8 %18 to i32
  %20 = add nsw i32 %19, 128
  %21 = icmp ult i32 %20, 384
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = tail call i32** @__ctype_toupper_loc() #13
  %24 = load i32*, i32** %23, align 8
  %25 = sext i8 %18 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %16, %22
  %29 = phi i32 [ %27, %22 ], [ %19, %16 ]
  %30 = icmp eq i32 %17, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %5, i64 1
  %33 = getelementptr inbounds i8, i8* %4, i64 1
  %34 = icmp eq i32 %17, %29
  br i1 %34, label %3, label %35

35:                                               ; preds = %28, %31
  %36 = sub nsw i32 %17, %29
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FXSYS_wcsicmp(i32* nocapture readonly, i32* nocapture readonly) local_unnamed_addr #3 {
  br label %3

3:                                                ; preds = %11, %2
  %4 = phi i32* [ %0, %2 ], [ %13, %11 ]
  %5 = phi i32* [ %1, %2 ], [ %12, %11 ]
  %6 = load i32, i32* %4, align 4
  %7 = tail call i32 @u_toupper_69(i32 %6) #12
  %8 = load i32, i32* %5, align 4
  %9 = tail call i32 @u_toupper_69(i32 %8) #12
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = getelementptr inbounds i32, i32* %4, i64 1
  %14 = icmp eq i32 %7, %9
  br i1 %14, label %3, label %15

15:                                               ; preds = %3, %11
  %16 = sub nsw i32 %7, %9
  ret i32 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @FXSYS_itoa(i32, i8* returned, i32) local_unnamed_addr #4 {
  %4 = add i32 %2, -2
  %5 = icmp ugt i32 %4, 14
  br i1 %5, label %45, label %6

6:                                                ; preds = %3
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  store i8 48, i8* %1, align 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  br label %45

10:                                               ; preds = %6
  %11 = icmp slt i32 %0, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  store i8 45, i8* %1, align 1
  %13 = sub i32 0, %0
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi i32 [ 1, %12 ], [ 0, %10 ]
  %16 = phi i32 [ %13, %12 ], [ %0, %10 ]
  %17 = udiv i32 %16, %2
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %23, %14
  %20 = phi i32 [ 1, %14 ], [ %26, %23 ]
  %21 = sext i32 %20 to i64
  %22 = zext i32 %15 to i64
  br label %33

23:                                               ; preds = %14, %23
  %24 = phi i32 [ %27, %23 ], [ %17, %14 ]
  %25 = phi i32 [ %26, %23 ], [ 1, %14 ]
  %26 = add nuw nsw i32 %25, 1
  %27 = sdiv i32 %24, %2
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %23, label %19

29:                                               ; preds = %33
  %30 = add nuw nsw i32 %20, %15
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  br label %45

33:                                               ; preds = %33, %19
  %34 = phi i64 [ %21, %19 ], [ %36, %33 ]
  %35 = phi i32 [ %16, %19 ], [ %43, %33 ]
  %36 = add nsw i64 %34, -1
  %37 = urem i32 %35, %2
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = add nsw i64 %36, %22
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  store i8 %40, i8* %42, align 1
  %43 = udiv i32 %35, %2
  %44 = icmp sgt i64 %36, 0
  br i1 %44, label %33, label %29

45:                                               ; preds = %3, %8, %29
  %46 = phi i8* [ %9, %8 ], [ %32, %29 ], [ %1, %3 ]
  store i8 0, i8* %46, align 1
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FXSYS_WideCharToMultiByte(i32, i32, i32* nocapture readonly, i32, i8*, i32, i8* nocapture readnone, i32* nocapture readnone) local_unnamed_addr #8 {
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %8
  %11 = icmp ne i8* %4, null
  %12 = zext i32 %3 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %3, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = sub nsw i64 %12, %13
  br label %37

17:                                               ; preds = %68, %10
  %18 = phi i32 [ undef, %10 ], [ %69, %68 ]
  %19 = phi i64 [ 0, %10 ], [ %70, %68 ]
  %20 = phi i32 [ 0, %10 ], [ %69, %68 ]
  %21 = icmp eq i64 %13, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i32, i32* %2, i64 %19
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 256
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = icmp slt i32 %20, %5
  %28 = and i1 %11, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = trunc i32 %24 to i8
  %31 = sext i32 %20 to i64
  %32 = getelementptr inbounds i8, i8* %4, i64 %31
  store i8 %30, i8* %32, align 1
  br label %33

33:                                               ; preds = %29, %26
  %34 = add nsw i32 %20, 1
  br label %35

35:                                               ; preds = %17, %22, %33, %8
  %36 = phi i32 [ 0, %8 ], [ %18, %17 ], [ %34, %33 ], [ %20, %22 ]
  ret i32 %36

37:                                               ; preds = %68, %15
  %38 = phi i64 [ 0, %15 ], [ %70, %68 ]
  %39 = phi i32 [ 0, %15 ], [ %69, %68 ]
  %40 = phi i64 [ %16, %15 ], [ %71, %68 ]
  %41 = getelementptr inbounds i32, i32* %2, i64 %38
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 256
  br i1 %43, label %44, label %53

44:                                               ; preds = %37
  %45 = icmp slt i32 %39, %5
  %46 = and i1 %11, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = trunc i32 %42 to i8
  %49 = sext i32 %39 to i64
  %50 = getelementptr inbounds i8, i8* %4, i64 %49
  store i8 %48, i8* %50, align 1
  br label %51

51:                                               ; preds = %44, %47
  %52 = add nsw i32 %39, 1
  br label %53

53:                                               ; preds = %37, %51
  %54 = phi i32 [ %52, %51 ], [ %39, %37 ]
  %55 = or i64 %38, 1
  %56 = getelementptr inbounds i32, i32* %2, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 256
  br i1 %58, label %59, label %68

59:                                               ; preds = %53
  %60 = icmp slt i32 %54, %5
  %61 = and i1 %11, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %59
  %63 = trunc i32 %57 to i8
  %64 = sext i32 %54 to i64
  %65 = getelementptr inbounds i8, i8* %4, i64 %64
  store i8 %63, i8* %65, align 1
  br label %66

66:                                               ; preds = %62, %59
  %67 = add nsw i32 %54, 1
  br label %68

68:                                               ; preds = %66, %53
  %69 = phi i32 [ %67, %66 ], [ %54, %53 ]
  %70 = add nuw nsw i64 %38, 2
  %71 = add i64 %40, -2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %17, label %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FXSYS_MultiByteToWideChar(i32, i32, i8* nocapture readonly, i32, i32*, i32) local_unnamed_addr #8 {
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %6
  %9 = icmp ne i32* %4, null
  %10 = sext i32 %5 to i64
  %11 = zext i32 %3 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i32 %3, 1
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = sub nsw i64 %11, %12
  br label %29

16:                                               ; preds = %48, %8
  %17 = phi i64 [ 0, %8 ], [ %49, %48 ]
  %18 = icmp ne i64 %12, 0
  %19 = icmp slt i64 %17, %10
  %20 = and i1 %9, %19
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %2, i64 %17
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i32, i32* %4, i64 %17
  store i32 %25, i32* %26, align 4
  br label %27

27:                                               ; preds = %16, %22, %6
  %28 = phi i32 [ 0, %6 ], [ %3, %22 ], [ %3, %16 ]
  ret i32 %28

29:                                               ; preds = %48, %14
  %30 = phi i64 [ 0, %14 ], [ %49, %48 ]
  %31 = phi i64 [ %15, %14 ], [ %50, %48 ]
  %32 = icmp slt i64 %30, %10
  %33 = and i1 %9, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %2, i64 %30
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i32, i32* %4, i64 %30
  store i32 %37, i32* %38, align 4
  br label %39

39:                                               ; preds = %29, %34
  %40 = or i64 %30, 1
  %41 = icmp slt i64 %40, %10
  %42 = and i1 %9, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %2, i64 %40
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i32, i32* %4, i64 %40
  store i32 %46, i32* %47, align 4
  br label %48

48:                                               ; preds = %43, %39
  %49 = add nuw nsw i64 %30, 2
  %50 = add i64 %31, -2
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %16, label %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FXSYS_SetLastError(i32) local_unnamed_addr #4 {
  store i32 %0, i32* @_ZN12_GLOBAL__N_112g_last_errorE, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FXSYS_GetLastError() local_unnamed_addr #2 {
  %1 = load i32, i32* @_ZN12_GLOBAL__N_112g_last_errorE, align 4
  ret i32 %1
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #1

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #9

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() local_unnamed_addr #9

declare i32 @u_tolower_69(i32) local_unnamed_addr #10

declare i32 @u_toupper_69(i32) local_unnamed_addr #10

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #11

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
