; ModuleID = '../../ui/events/gestures/fling_curve.cc'
source_filename = "../../ui/events/gestures/fling_curve.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::FlingCurve" = type { %"class.ui::GestureCurve", float, %"class.base::TimeTicks", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.base::TimeTicks", float, float }
%"class.ui::GestureCurve" = type { i32 (...)** }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZZN7logging15CheckOpValueStrIfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_ = comdat any

@_ZTVN2ui10FlingCurveE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::FlingCurve"*)* @_ZN2ui10FlingCurveD2Ev to i8*), i8* bitcast (void (%"class.ui::FlingCurve"*)* @_ZN2ui10FlingCurveD0Ev to i8*), i8* bitcast (i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)* @_ZN2ui10FlingCurve19ComputeScrollOffsetEN4base9TimeTicksEPN3gfx9Vector2dFES5_ to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"max_start_velocity > 0\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"../../ui/events/gestures/fling_curve.cc\00", align 1

@_ZN2ui10FlingCurveC1ERKN3gfx9Vector2dFEN4base9TimeTicksE = hidden unnamed_addr alias void (%"class.ui::FlingCurve"*, %"class.gfx::Vector2dF"*, i64), void (%"class.ui::FlingCurve"*, %"class.gfx::Vector2dF"*, i64)* @_ZN2ui10FlingCurveC2ERKN3gfx9Vector2dFEN4base9TimeTicksE
@_ZN2ui10FlingCurveD1Ev = hidden unnamed_addr alias void (%"class.ui::FlingCurve"*), void (%"class.ui::FlingCurve"*)* @_ZN2ui10FlingCurveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10FlingCurveC2ERKN3gfx9Vector2dFEN4base9TimeTicksE(%"class.ui::FlingCurve"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca float, align 4
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui10FlingCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 1
  store float 0x3FF4CD3D00000000, float* %9, align 8
  %10 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = bitcast float* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 16, i1 false)
  store i64 %2, i64* %13, align 8
  %15 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %15, align 8
  %16 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %19 = bitcast %"class.gfx::Vector2dF"* %1 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %20)
  %22 = extractelement <2 x float> %21, i32 0
  %23 = extractelement <2 x float> %21, i32 1
  %24 = fcmp olt float %22, %23
  %25 = select i1 %24, float %23, float %22
  %26 = fcmp ogt float %25, 0x40D4748C80000000
  %27 = select i1 %26, float 0x40D4748C80000000, float %25
  %28 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store float %27, float* %5, align 4
  %32 = fcmp ogt float %27, 0.000000e+00
  br i1 %32, label %33, label %34

33:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  store i8* null, i8** %29, align 8
  br label %43

34:                                               ; preds = %3
  %35 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %31, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #10
  %36 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %35, i8* %36) #10
  %37 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  store i8* %38, i8** %29, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i32 48, %"class.logging::CheckOpResult"* nonnull %6) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  br label %43

43:                                               ; preds = %33, %34, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %44 = load float, float* %17, align 4
  %45 = fdiv float %44, %27
  %46 = load float, float* %18, align 4
  %47 = fdiv float %46, %27
  store float %45, float* %11, align 8
  store float %47, float* %12, align 4
  %48 = fpext float %27 to double
  %49 = fadd double %48, 1.720000e+02
  %50 = fdiv double %49, 0x40D49F8C80000000
  %51 = call double @log(double %50) #10
  %52 = fdiv double %51, 0xC00D9999A0000000
  %53 = fptrunc double %52 to float
  store float %53, float* %15, align 8
  %54 = fpext float %53 to double
  %55 = fmul double %54, 0xC00D9999A0000000
  %56 = call double @exp(double %55) #10
  %57 = fmul double %56, 0xC0B64B9EC0000000
  %58 = fmul double %54, 1.720000e+02
  %59 = fsub double %57, %58
  %60 = fadd double %59, 0x40B64B9EC0000000
  %61 = fptrunc double %60 to float
  store float %61, float* %16, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui10FlingCurveD2Ev(%"class.ui::FlingCurve"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui10FlingCurveD0Ev(%"class.ui::FlingCurve"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::FlingCurve"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui10FlingCurve19ComputeScrollOffsetEN4base9TimeTicksEPN3gfx9Vector2dFES5_(%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"* nocapture, %"class.gfx::Vector2dF"* nocapture) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %1, %6
  %8 = icmp slt i64 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = bitcast %"class.gfx::Vector2dF"* %2 to i32*
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %2, i64 0, i32 1
  %12 = bitcast float* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = bitcast %"class.gfx::Vector2dF"* %3 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %3, i64 0, i32 1
  %15 = bitcast float* %14 to i32*
  store i32 0, i32* %15, align 4
  br label %68

16:                                               ; preds = %4
  %17 = add nsw i64 %7, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = sitofp i64 %7 to double
  %21 = fdiv double %20, 1.000000e+06
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi double [ %21, %19 ], [ 0x7FF0000000000000, %16 ]
  %24 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 6
  %25 = load float, float* %24, align 8
  %26 = fpext float %25 to double
  %27 = fadd double %23, %26
  %28 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 1
  %29 = load float, float* %28, align 8
  %30 = fpext float %29 to double
  %31 = fcmp olt double %27, %30
  br i1 %31, label %32, label %47

32:                                               ; preds = %22
  %33 = fmul double %27, 0xC00D9999A0000000
  %34 = tail call double @exp(double %33) #10
  %35 = fmul double %34, 0xC0B64B9EC0000000
  %36 = fmul double %27, 1.720000e+02
  %37 = fsub double %35, %36
  %38 = fadd double %37, 0x40B64B9EC0000000
  %39 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 7
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  %42 = fsub double %38, %41
  %43 = tail call double @exp(double %33) #10
  %44 = fmul double %43, 0x40D49F8C80000000
  %45 = fadd double %44, -1.720000e+02
  %46 = fptrunc double %45 to float
  br label %58

47:                                               ; preds = %22
  %48 = fmul double %30, 0xC00D9999A0000000
  %49 = tail call double @exp(double %48) #10
  %50 = fmul double %49, 0xC0B64B9EC0000000
  %51 = fmul double %30, 1.720000e+02
  %52 = fsub double %50, %51
  %53 = fadd double %52, 0x40B64B9EC0000000
  %54 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 7
  %55 = load float, float* %54, align 4
  %56 = fpext float %55 to double
  %57 = fsub double %53, %56
  br label %58

58:                                               ; preds = %47, %32
  %59 = phi i1 [ true, %32 ], [ false, %47 ]
  %60 = phi double [ %42, %32 ], [ %57, %47 ]
  %61 = phi float [ %46, %32 ], [ 0.000000e+00, %47 ]
  %62 = fptrunc double %60 to float
  %63 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 3
  %64 = tail call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8) %63, float %62, float %62) #10
  %65 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  store <2 x float> %64, <2 x float>* %65, align 4
  %66 = tail call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8) %63, float %61, float %61) #10
  %67 = bitcast %"class.gfx::Vector2dF"* %3 to <2 x float>*
  store <2 x float> %66, <2 x float>* %67, align 4
  br label %68

68:                                               ; preds = %58, %9
  %69 = phi i1 [ true, %9 ], [ %59, %58 ]
  ret i1 %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui10FlingCurve24ComputeScrollDeltaAtTimeEN4base9TimeTicksEPN3gfx9Vector2dFE(%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"* nocapture) local_unnamed_addr #6 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Vector2dF"*
  %8 = alloca %"class.gfx::Vector2dF", align 4
  %9 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.gfx::Vector2dF"* %2 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %2, i64 0, i32 1
  %15 = bitcast float* %14 to i32*
  store i32 0, i32* %15, align 4
  br label %41

16:                                               ; preds = %3
  store i64 %1, i64* %9, align 8
  %17 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = bitcast i64* %6 to float*
  %19 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %18, align 8
  store float 0.000000e+00, float* %19, align 4
  %20 = bitcast %"class.gfx::Vector2dF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 0
  %22 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 1
  store float 0.000000e+00, float* %21, align 4
  store float 0.000000e+00, float* %22, align 4
  %23 = bitcast %"class.ui::FlingCurve"* %0 to i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)***
  %24 = load i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)**, i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*, i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)** %24, i64 2
  %26 = load i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)*, i1 (%"class.ui::FlingCurve"*, i64, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)** %25, align 8
  %27 = call zeroext i1 %26(%"class.ui::FlingCurve"* %0, i64 %1, %"class.gfx::Vector2dF"* nonnull %7, %"class.gfx::Vector2dF"* nonnull %8) #10
  %28 = getelementptr inbounds %"class.ui::FlingCurve", %"class.ui::FlingCurve"* %0, i64 0, i32 4
  %29 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %31 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %32 = load i64, i64* %6, align 8
  store i64 %32, i64* %4, align 8
  %33 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = bitcast %"class.gfx::Vector2dF"* %28 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %35
  store <2 x float> %36, <2 x float>* %5, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %30, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %31) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %37 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %38 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  store i64 %37, i64* %38, align 4
  %39 = bitcast %"class.gfx::Vector2dF"* %28 to i64*
  %40 = load i64, i64* %6, align 8
  store i64 %40, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %41

41:                                               ; preds = %16, %12
  %42 = phi i1 [ true, %12 ], [ %27, %16 ]
  ret i1 %42
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to float*
  %4 = load float, float* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %0, float %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"*, float) local_unnamed_addr #2

declare <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8), float, float) local_unnamed_addr #2

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
