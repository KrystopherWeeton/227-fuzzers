; ModuleID = '../../third_party/re2/src/re2/simplify.cc'
source_filename = "../../third_party/re2/src/re2/simplify.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::RegexpStatus" = type { i32, %"class.re2::StringPiece", %"class.std::__1::basic_string"* }
%"class.re2::Regexp" = type { i8, i8, i16, i16, i16, %union.anon.1, %"class.re2::Regexp"*, %union.anon.2 }
%union.anon.1 = type { %"class.re2::Regexp"** }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.re2::CoalesceWalker" = type { %"class.re2::Regexp::Walker" }
%"class.re2::Regexp::Walker" = type { i32 (...)**, %"class.std::__1::stack", i8, i32 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::__split_buffer" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.15" }
%"struct.re2::WalkState" = type { %"class.re2::Regexp"*, i32, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"** }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.re2::WalkState"** }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.re2::SimplifyWalker" = type { %"class.re2::Regexp::Walker" }
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.re2::CharClassBuilder" = type { i32, i32, i32, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.re2::CharClass" = type <{ i8, [3 x i8], i32, %"struct.re2::RuneRange"*, i32, [4 x i8] }>
%"struct.re2::RuneRange" = type { i32, i32 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%struct.anon.3 = type { i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.30" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::allocator.18"* }
%"class.std::__1::allocator.18" = type { i8 }

$_ZN10LogMessageD2Ev = comdat any

$_ZN3re214CoalesceWalkerD0Ev = comdat any

$_ZN3re26Regexp6WalkerIPS0_E8PreVisitES2_S2_Pb = comdat any

$_ZN3re214SimplifyWalkerD0Ev = comdat any

$_ZN3re26Regexp6WalkerIPS0_ED2Ev = comdat any

$_ZN3re26Regexp6WalkerIPS0_ED0Ev = comdat any

$_ZN3re26Regexp6WalkerIPS0_E9PostVisitES2_S2_S2_PS2_i = comdat any

$_ZN3re26Regexp6WalkerIPS0_E4CopyES2_ = comdat any

$_ZN3re26Regexp6WalkerIPS0_E5ResetEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3re26Regexp6WalkerIPS0_E12WalkInternalES2_S2_b = comdat any

$_ZNSt3__15dequeIN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEERNS_9allocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZTVN3re26Regexp6WalkerIPS0_EE = comdat any

@.str = private unnamed_addr constant [42 x i8] c"../../third_party/re2/src/re2/simplify.cc\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"Case not handled in ComputeSimple: \00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"CoalesceWalker::ShortVisit called\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"DoCoalesce failed: r1->op() is \00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"DoCoalesce failed: r2->op() is \00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"SimplifyWalker::ShortVisit called\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Simplify case not handled: \00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Malformed repeat \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZTVN3re214CoalesceWalkerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPS0_ED2Ev to i8*), i8* bitcast (void (%"class.re2::CoalesceWalker"*)* @_ZN3re214CoalesceWalkerD0Ev to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)* @_ZN3re26Regexp6WalkerIPS0_E8PreVisitES2_S2_Pb to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::CoalesceWalker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)* @_ZN3re214CoalesceWalker9PostVisitEPNS_6RegexpES2_S2_PS2_i to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::CoalesceWalker"*, %"class.re2::Regexp"*)* @_ZN3re214CoalesceWalker4CopyEPNS_6RegexpE to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::CoalesceWalker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)* @_ZN3re214CoalesceWalker10ShortVisitEPNS_6RegexpES2_ to i8*)] }, align 8
@_ZTVN3re214SimplifyWalkerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPS0_ED2Ev to i8*), i8* bitcast (void (%"class.re2::SimplifyWalker"*)* @_ZN3re214SimplifyWalkerD0Ev to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::SimplifyWalker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)* @_ZN3re214SimplifyWalker8PreVisitEPNS_6RegexpES2_Pb to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::SimplifyWalker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)* @_ZN3re214SimplifyWalker9PostVisitEPNS_6RegexpES2_S2_PS2_i to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::SimplifyWalker"*, %"class.re2::Regexp"*)* @_ZN3re214SimplifyWalker4CopyEPNS_6RegexpE to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::SimplifyWalker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)* @_ZN3re214SimplifyWalker10ShortVisitEPNS_6RegexpES2_ to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN3re26Regexp6WalkerIPS0_EE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPS0_ED2Ev to i8*), i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPS0_ED0Ev to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)* @_ZN3re26Regexp6WalkerIPS0_E8PreVisitES2_S2_Pb to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)* @_ZN3re26Regexp6WalkerIPS0_E9PostVisitES2_S2_S2_PS2_i to i8*), i8* bitcast (%"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)* @_ZN3re26Regexp6WalkerIPS0_E4CopyES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/walker-inl.h\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"Stack not empty.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.15 = private unnamed_addr constant [10 x i8] c"Walk NULL\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp14SimplifyRegexpERKNS_11StringPieceENS0_10ParseFlagsEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS_12RegexpStatusE(%"class.re2::StringPiece"* dereferenceable(16), i32, %"class.std::__1::basic_string"* nocapture, %"class.re2::RegexpStatus"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp5ParseERKNS_11StringPieceENS0_10ParseFlagsEPNS_12RegexpStatusE(%"class.re2::StringPiece"* dereferenceable(16) %0, i32 %1, %"class.re2::RegexpStatus"* %3) #10
  %7 = icmp eq %"class.re2::Regexp"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"* nonnull %6)
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %6) #10
  %10 = icmp eq %"class.re2::Regexp"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %8
  %12 = icmp eq %"class.re2::RegexpStatus"* %3, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.re2::RegexpStatus", %"class.re2::RegexpStatus"* %3, i64 0, i32 1
  %16 = bitcast %"class.re2::StringPiece"* %15 to i8*
  %17 = bitcast %"class.re2::StringPiece"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #10
  br label %29

18:                                               ; preds = %8
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  call void @_ZN3re26Regexp8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.re2::Regexp"* nonnull %9) #10
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %18
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %19, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %9) #10
  br label %29

29:                                               ; preds = %27, %11, %13, %4
  %30 = phi i1 [ false, %4 ], [ true, %27 ], [ false, %11 ], [ false, %13 ]
  ret i1 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.re2::Regexp"* @_ZN3re26Regexp5ParseERKNS_11StringPieceENS0_10ParseFlagsEPNS_12RegexpStatusE(%"class.re2::StringPiece"* dereferenceable(16), i32, %"class.re2::RegexpStatus"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.re2::CoalesceWalker", align 8
  %3 = alloca %"class.re2::SimplifyWalker", align 8
  %4 = bitcast %"class.re2::CoalesceWalker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 64, i1 false)
  %5 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::stack"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 49, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re214CoalesceWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %2, i64 0, i32 0, i32 3
  store i32 1000000, i32* %9, align 4
  %10 = call %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E12WalkInternalES2_S2_b(%"class.re2::Regexp::Walker"* nonnull %8, %"class.re2::Regexp"* %0, %"class.re2::Regexp"* null, i1 zeroext true) #10
  %11 = icmp eq %"class.re2::Regexp"* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %2, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %10) #10
  br label %33

17:                                               ; preds = %12
  %18 = bitcast %"class.re2::SimplifyWalker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  %19 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %3, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::stack"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 49, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re214SimplifyWalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %22 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %3, i64 0, i32 0, i32 3
  store i32 1000000, i32* %23, align 4
  %24 = call %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E12WalkInternalES2_S2_b(%"class.re2::Regexp::Walker"* nonnull %22, %"class.re2::Regexp"* nonnull %10, %"class.re2::Regexp"* null, i1 zeroext true) #10
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %10) #10
  %25 = icmp eq %"class.re2::Regexp"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %3, i64 0, i32 0, i32 2
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %24) #10
  br label %31

31:                                               ; preds = %26, %17, %30
  %32 = phi %"class.re2::Regexp"* [ null, %30 ], [ null, %17 ], [ %24, %26 ]
  call void @_ZN3re26Regexp6WalkerIPS0_ED2Ev(%"class.re2::Regexp::Walker"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #10
  br label %33

33:                                               ; preds = %1, %31, %16
  %34 = phi %"class.re2::Regexp"* [ null, %16 ], [ %32, %31 ], [ null, %1 ]
  call void @_ZN3re26Regexp6WalkerIPS0_ED2Ev(%"class.re2::Regexp::Walker"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #10
  ret %"class.re2::Regexp"* %34
}

declare void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"*) local_unnamed_addr #2

declare void @_ZN3re26Regexp8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.re2::Regexp"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re26Regexp13ComputeSimpleEv(%"class.re2::Regexp"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %class.LogMessage, align 8
  %4 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %95 [
    i8 1, label %35
    i8 2, label %35
    i8 3, label %35
    i8 4, label %35
    i8 14, label %35
    i8 15, label %35
    i8 18, label %35
    i8 16, label %35
    i8 17, label %35
    i8 19, label %35
    i8 12, label %35
    i8 13, label %35
    i8 21, label %35
    i8 5, label %6
    i8 6, label %6
    i8 20, label %37
    i8 11, label %57
    i8 7, label %73
    i8 8, label %73
    i8 9, label %73
    i8 10, label %94
  ]

6:                                                ; preds = %1, %1
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %8 = load i16, i16* %7, align 2
  %9 = icmp ult i16 %8, 2
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %9, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %union.anon.1, %union.anon.1* %10, i64 0, i32 0
  %13 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %12, align 8
  br label %17

14:                                               ; preds = %6
  %15 = bitcast %union.anon.1* %10 to %"class.re2::Regexp"**
  %16 = icmp eq i16 %8, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %11, %14
  %18 = phi %"class.re2::Regexp"** [ %13, %11 ], [ %15, %14 ]
  %19 = zext i16 %8 to i64
  br label %22

20:                                               ; preds = %22
  %21 = icmp eq i64 %29, %19
  br i1 %21, label %35, label %22

22:                                               ; preds = %20, %17
  %23 = phi i64 [ 0, %17 ], [ %29, %20 ]
  %24 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %18, i64 %23
  %25 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %24, align 8
  %26 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %25, i64 0, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  %29 = add nuw nsw i64 %23, 1
  br i1 %28, label %35, label %20

30:                                               ; preds = %89
  %31 = zext i8 %92 to i9
  %32 = lshr i9 60, %31
  %33 = and i9 %32, 1
  %34 = icmp ne i9 %33, 0
  ret i1 %34

35:                                               ; preds = %22, %20, %89, %14, %42, %83, %67, %94, %95, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %36 = phi i1 [ false, %95 ], [ false, %94 ], [ %72, %67 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ false, %83 ], [ %47, %42 ], [ true, %14 ], [ true, %89 ], [ true, %20 ], [ false, %22 ]
  ret i1 %36

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"** %38 to %"class.re2::CharClassBuilder"**
  %40 = load %"class.re2::CharClassBuilder"*, %"class.re2::CharClassBuilder"** %39, align 8
  %41 = icmp eq %"class.re2::CharClassBuilder"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.re2::CharClassBuilder", %"class.re2::CharClassBuilder"* %40, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp ne i32 %44, 0
  %46 = icmp ne i32 %44, 1114112
  %47 = and i1 %45, %46
  br label %35

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7
  %50 = bitcast %union.anon.2* %49 to %"class.re2::CharClass"**
  %51 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %50, align 8
  %52 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  %55 = icmp ne i32 %53, 1114112
  %56 = and i1 %54, %55
  ret i1 %56

57:                                               ; preds = %1
  %58 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %59 = load i16, i16* %58, align 2
  %60 = icmp ult i16 %59, 2
  %61 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %60, label %62, label %64

62:                                               ; preds = %57
  %63 = bitcast %union.anon.1* %61 to %"class.re2::Regexp"**
  br label %67

64:                                               ; preds = %57
  %65 = getelementptr inbounds %union.anon.1, %union.anon.1* %61, i64 0, i32 0
  %66 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %65, align 8
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi %"class.re2::Regexp"** [ %63, %62 ], [ %66, %64 ]
  %69 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %68, align 8
  %70 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp ne i8 %71, 0
  br label %35

73:                                               ; preds = %1, %1, %1
  %74 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %75 = load i16, i16* %74, align 2
  %76 = icmp ult i16 %75, 2
  %77 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %76, label %78, label %80

78:                                               ; preds = %73
  %79 = bitcast %union.anon.1* %77 to %"class.re2::Regexp"**
  br label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds %union.anon.1, %union.anon.1* %77, i64 0, i32 0
  %82 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %81, align 8
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi %"class.re2::Regexp"** [ %79, %78 ], [ %82, %80 ]
  %85 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %84, align 8
  %86 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %35, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %85, i64 0, i32 0
  %91 = load i8, i8* %90, align 8
  %92 = add i8 %91, -1
  %93 = icmp ult i8 %92, 9
  br i1 %93, label %30, label %35

94:                                               ; preds = %1
  br label %35

95:                                               ; preds = %1
  %96 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %96) #10
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1
  %98 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 2, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %97, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %98, align 8
  %100 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1
  %101 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %100, i64 0, i32 0
  %102 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %103 = bitcast %"class.std::__1::basic_ostringstream"* %97 to i64*
  store i64 %102, i64* %103, align 8
  %104 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %105 = bitcast %"class.std::__1::basic_ostringstream"* %97 to i8**
  %106 = inttoptr i64 %102 to i8*
  %107 = getelementptr i8, i8* %106, i64 -24
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::basic_ostringstream"* %97 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 %109
  %112 = bitcast i8* %111 to i64*
  store i64 %104, i64* %112, align 8
  %113 = load i8*, i8** %105, align 8
  %114 = getelementptr i8, i8* %113, i64 -24
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds i8, i8* %110, i64 %116
  %118 = bitcast i8* %117 to %"class.std::__1::ios_base"*
  %119 = bitcast %"class.std::__1::basic_stringbuf"* %100 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %118, i8* %119) #10
  %120 = getelementptr inbounds i8, i8* %117, i64 136
  %121 = bitcast i8* %120 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %121, align 8
  %122 = getelementptr inbounds i8, i8* %117, i64 144
  %123 = bitcast i8* %122 to i32*
  store i32 -1, i32* %123, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %99, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %98, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %101) #10
  %124 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %100, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 1
  %126 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 3
  %127 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %126, align 8
  %128 = bitcast %"class.std::__1::basic_ostringstream"* %97 to %"class.std::__1::basic_ostream"*
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %128, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %130 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %130, i32 97) #10
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %128, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i64 35) #10
  %134 = load i8, i8* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  store i8 %134, i8* %2, align 1
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* nonnull %2, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %96) #10
  br label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #10
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #10
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #12
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #10
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #10
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214CoalesceWalker4CopyEPNS_6RegexpE(%"class.re2::CoalesceWalker"* nocapture readnone, %"class.re2::Regexp"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  ret %"class.re2::Regexp"* %3
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214CoalesceWalker10ShortVisitEPNS_6RegexpES2_(%"class.re2::CoalesceWalker"* nocapture readnone, %"class.re2::Regexp"*, %"class.re2::Regexp"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #10
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #10
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 225) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #10
  %43 = call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  ret %"class.re2::Regexp"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214CoalesceWalker9PostVisitEPNS_6RegexpES2_S2_PS2_i(%"class.re2::CoalesceWalker"* nocapture readnone, %"class.re2::Regexp"*, %"class.re2::Regexp"* nocapture readnone, %"class.re2::Regexp"* nocapture readnone, %"class.re2::Regexp"** nocapture, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %323

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 5
  br i1 %15, label %100, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  %18 = getelementptr inbounds %union.anon.1, %union.anon.1* %17, i64 0, i32 0
  %19 = bitcast %union.anon.1* %17 to %"class.re2::Regexp"**
  %20 = icmp eq i16 %8, 1
  %21 = zext i16 %8 to i64
  br label %24

22:                                               ; preds = %28
  %23 = icmp eq i64 %35, %21
  br i1 %23, label %36, label %24

24:                                               ; preds = %22, %16
  %25 = phi i64 [ 0, %16 ], [ %35, %22 ]
  br i1 %20, label %28, label %26

26:                                               ; preds = %24
  %27 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %18, align 8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi %"class.re2::Regexp"** [ %27, %26 ], [ %19, %24 ]
  %30 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %29, i64 %25
  %31 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %30, align 8
  %32 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %25
  %33 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %32, align 8
  %34 = icmp eq %"class.re2::Regexp"* %33, %31
  %35 = add nuw nsw i64 %25, 1
  br i1 %34, label %22, label %46

36:                                               ; preds = %22, %36
  %37 = phi i64 [ %40, %36 ], [ 0, %22 ]
  %38 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %37
  %39 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %38, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %39) #10
  %40 = add nuw nsw i64 %37, 1
  %41 = load i16, i16* %7, align 2
  %42 = zext i16 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %36, label %44

44:                                               ; preds = %36
  %45 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %323

46:                                               ; preds = %28
  %47 = tail call i8* @_Znwm(i64 40) #11
  %48 = bitcast i8* %47 to %"class.re2::Regexp"*
  %49 = zext i8 %14 to i32
  %50 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %48, i32 %49, i32 %52) #10
  %53 = load i16, i16* %7, align 2
  %54 = icmp ugt i16 %53, 1
  br i1 %54, label %55, label %63

55:                                               ; preds = %46
  %56 = zext i16 %53 to i64
  %57 = shl nuw nsw i64 %56, 3
  %58 = tail call i8* @_Znam(i64 %57) #11
  %59 = getelementptr inbounds i8, i8* %47, i64 8
  %60 = bitcast i8* %59 to i8**
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %47, i64 6
  %62 = bitcast i8* %61 to i16*
  store i16 %53, i16* %62, align 2
  br label %68

63:                                               ; preds = %46
  %64 = getelementptr inbounds i8, i8* %47, i64 6
  %65 = bitcast i8* %64 to i16*
  store i16 %53, i16* %65, align 2
  %66 = getelementptr inbounds i8, i8* %47, i64 8
  %67 = icmp eq i16 %53, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %55, %63
  %69 = phi i8* [ %58, %55 ], [ %66, %63 ]
  %70 = bitcast i8* %69 to %"class.re2::Regexp"**
  %71 = load i16, i16* %7, align 2
  %72 = zext i16 %71 to i64
  br label %75

73:                                               ; preds = %75, %63
  %74 = load i8, i8* %13, align 8
  switch i8 %74, label %323 [
    i8 10, label %84
    i8 11, label %95
  ]

75:                                               ; preds = %68, %75
  %76 = phi i64 [ 0, %68 ], [ %82, %75 ]
  %77 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %76
  %78 = bitcast %"class.re2::Regexp"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %70, i64 %76
  %81 = bitcast %"class.re2::Regexp"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = add nuw nsw i64 %76, 1
  %83 = icmp ult i64 %82, %72
  br i1 %83, label %75, label %73

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %86 = bitcast %union.anon.2* %85 to %struct.anon.3*
  %87 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds i8, i8* %47, i64 24
  %90 = getelementptr inbounds i8, i8* %47, i64 28
  %91 = bitcast i8* %90 to i32*
  store i32 %88, i32* %91, align 4
  %92 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = bitcast i8* %89 to i32*
  store i32 %93, i32* %94, align 8
  br label %323

95:                                               ; preds = %73
  %96 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds i8, i8* %47, i64 24
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 8
  br label %323

100:                                              ; preds = %12, %115
  %101 = phi i16 [ %116, %115 ], [ %8, %12 ]
  %102 = phi i64 [ %103, %115 ], [ 0, %12 ]
  %103 = add nuw nsw i64 %102, 1
  %104 = zext i16 %101 to i64
  %105 = icmp ult i64 %103, %104
  br i1 %105, label %106, label %115

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %102
  %108 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %107, align 8
  %109 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %103
  %110 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %109, align 8
  %111 = tail call zeroext i1 @_ZN3re214CoalesceWalker11CanCoalesceEPNS_6RegexpES2_(%"class.re2::Regexp"* %108, %"class.re2::Regexp"* %110)
  %112 = load i16, i16* %7, align 2
  br i1 %111, label %113, label %115

113:                                              ; preds = %106
  %114 = icmp eq i16 %112, 0
  br i1 %114, label %233, label %197

115:                                              ; preds = %106, %100
  %116 = phi i16 [ %101, %100 ], [ %112, %106 ]
  %117 = zext i16 %116 to i64
  %118 = icmp ult i64 %103, %117
  br i1 %118, label %100, label %119

119:                                              ; preds = %115
  %120 = icmp eq i16 %116, 0
  br i1 %120, label %149, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  %123 = getelementptr inbounds %union.anon.1, %union.anon.1* %122, i64 0, i32 0
  %124 = bitcast %union.anon.1* %122 to %"class.re2::Regexp"**
  %125 = icmp eq i16 %116, 1
  %126 = zext i16 %116 to i64
  br label %129

127:                                              ; preds = %133
  %128 = icmp eq i64 %140, %126
  br i1 %128, label %141, label %129

129:                                              ; preds = %127, %121
  %130 = phi i64 [ 0, %121 ], [ %140, %127 ]
  br i1 %125, label %133, label %131

131:                                              ; preds = %129
  %132 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %123, align 8
  br label %133

133:                                              ; preds = %131, %129
  %134 = phi %"class.re2::Regexp"** [ %132, %131 ], [ %124, %129 ]
  %135 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %134, i64 %130
  %136 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %135, align 8
  %137 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %130
  %138 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %137, align 8
  %139 = icmp eq %"class.re2::Regexp"* %138, %136
  %140 = add nuw nsw i64 %130, 1
  br i1 %139, label %127, label %151

141:                                              ; preds = %127, %141
  %142 = phi i64 [ %145, %141 ], [ 0, %127 ]
  %143 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %142
  %144 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %143, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %144) #10
  %145 = add nuw nsw i64 %142, 1
  %146 = load i16, i16* %7, align 2
  %147 = zext i16 %146 to i64
  %148 = icmp ult i64 %145, %147
  br i1 %148, label %141, label %149

149:                                              ; preds = %141, %119
  %150 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %323

151:                                              ; preds = %133
  %152 = tail call i8* @_Znwm(i64 40) #11
  %153 = bitcast i8* %152 to %"class.re2::Regexp"*
  %154 = load i8, i8* %13, align 8
  %155 = zext i8 %154 to i32
  %156 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %157 = load i16, i16* %156, align 2
  %158 = zext i16 %157 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %153, i32 %155, i32 %158) #10
  %159 = load i16, i16* %7, align 2
  %160 = icmp ugt i16 %159, 1
  br i1 %160, label %161, label %169

161:                                              ; preds = %151
  %162 = zext i16 %159 to i64
  %163 = shl nuw nsw i64 %162, 3
  %164 = tail call i8* @_Znam(i64 %163) #11
  %165 = getelementptr inbounds i8, i8* %152, i64 8
  %166 = bitcast i8* %165 to i8**
  store i8* %164, i8** %166, align 8
  %167 = getelementptr inbounds i8, i8* %152, i64 6
  %168 = bitcast i8* %167 to i16*
  store i16 %159, i16* %168, align 2
  br label %174

169:                                              ; preds = %151
  %170 = getelementptr inbounds i8, i8* %152, i64 6
  %171 = bitcast i8* %170 to i16*
  store i16 %159, i16* %171, align 2
  %172 = getelementptr inbounds i8, i8* %152, i64 8
  %173 = icmp eq i16 %159, 0
  br i1 %173, label %323, label %174

174:                                              ; preds = %161, %169
  %175 = phi i8* [ %164, %161 ], [ %172, %169 ]
  %176 = bitcast i8* %175 to %"class.re2::Regexp"**
  %177 = load i16, i16* %7, align 2
  %178 = zext i16 %177 to i64
  br label %179

179:                                              ; preds = %174, %179
  %180 = phi i64 [ 0, %174 ], [ %186, %179 ]
  %181 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %180
  %182 = bitcast %"class.re2::Regexp"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %176, i64 %180
  %185 = bitcast %"class.re2::Regexp"** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = add nuw nsw i64 %180, 1
  %187 = icmp ult i64 %186, %178
  br i1 %187, label %179, label %323

188:                                              ; preds = %210
  %189 = icmp eq i16 %211, 0
  br i1 %189, label %233, label %190

190:                                              ; preds = %188
  %191 = zext i16 %211 to i64
  %192 = add nsw i64 %191, -1
  %193 = and i64 %191, 3
  %194 = icmp ult i64 %192, 3
  br i1 %194, label %214, label %195

195:                                              ; preds = %190
  %196 = sub nsw i64 %191, %193
  br label %266

197:                                              ; preds = %113, %210
  %198 = phi i64 [ %200, %210 ], [ 0, %113 ]
  %199 = phi i16 [ %211, %210 ], [ %112, %113 ]
  %200 = add nuw nsw i64 %198, 1
  %201 = zext i16 %199 to i64
  %202 = icmp ult i64 %200, %201
  br i1 %202, label %203, label %210

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %198
  %205 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %204, align 8
  %206 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %200
  %207 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %206, align 8
  %208 = tail call zeroext i1 @_ZN3re214CoalesceWalker11CanCoalesceEPNS_6RegexpES2_(%"class.re2::Regexp"* %205, %"class.re2::Regexp"* %207)
  br i1 %208, label %209, label %210

209:                                              ; preds = %203
  tail call void @_ZN3re214CoalesceWalker10DoCoalesceEPPNS_6RegexpES3_(%"class.re2::Regexp"** %204, %"class.re2::Regexp"** %206)
  br label %210

210:                                              ; preds = %197, %203, %209
  %211 = load i16, i16* %7, align 2
  %212 = zext i16 %211 to i64
  %213 = icmp ult i64 %200, %212
  br i1 %213, label %197, label %188

214:                                              ; preds = %266, %190
  %215 = phi i32 [ undef, %190 ], [ %300, %266 ]
  %216 = phi i64 [ 0, %190 ], [ %301, %266 ]
  %217 = phi i32 [ 0, %190 ], [ %300, %266 ]
  %218 = icmp eq i64 %193, 0
  br i1 %218, label %233, label %219

219:                                              ; preds = %214, %219
  %220 = phi i64 [ %230, %219 ], [ %216, %214 ]
  %221 = phi i32 [ %229, %219 ], [ %217, %214 ]
  %222 = phi i64 [ %231, %219 ], [ %193, %214 ]
  %223 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %220
  %224 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %223, align 8
  %225 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %224, i64 0, i32 0
  %226 = load i8, i8* %225, align 8
  %227 = icmp eq i8 %226, 2
  %228 = zext i1 %227 to i32
  %229 = add nuw nsw i32 %221, %228
  %230 = add nuw nsw i64 %220, 1
  %231 = add i64 %222, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %219, !llvm.loop !3

233:                                              ; preds = %214, %219, %113, %188
  %234 = phi i32 [ 0, %188 ], [ 0, %113 ], [ %215, %214 ], [ %229, %219 ]
  %235 = tail call i8* @_Znwm(i64 40) #11
  %236 = bitcast i8* %235 to %"class.re2::Regexp"*
  %237 = load i8, i8* %13, align 8
  %238 = zext i8 %237 to i32
  %239 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %240 = load i16, i16* %239, align 2
  %241 = zext i16 %240 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %236, i32 %238, i32 %241) #10
  %242 = load i16, i16* %7, align 2
  %243 = zext i16 %242 to i32
  %244 = sub nsw i32 %243, %234
  %245 = icmp sgt i32 %244, 1
  br i1 %245, label %246, label %252

246:                                              ; preds = %233
  %247 = sext i32 %244 to i64
  %248 = shl nuw nsw i64 %247, 3
  %249 = tail call i8* @_Znam(i64 %248) #11
  %250 = getelementptr inbounds i8, i8* %235, i64 8
  %251 = bitcast i8* %250 to i8**
  store i8* %249, i8** %251, align 8
  br label %252

252:                                              ; preds = %233, %246
  %253 = trunc i32 %244 to i16
  %254 = getelementptr inbounds i8, i8* %235, i64 6
  %255 = bitcast i8* %254 to i16*
  store i16 %253, i16* %255, align 2
  %256 = icmp ult i16 %253, 2
  %257 = getelementptr inbounds i8, i8* %235, i64 8
  br i1 %256, label %258, label %260

258:                                              ; preds = %252
  %259 = bitcast i8* %257 to %"class.re2::Regexp"**
  br label %263

260:                                              ; preds = %252
  %261 = bitcast i8* %257 to %"class.re2::Regexp"***
  %262 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %261, align 8
  br label %263

263:                                              ; preds = %258, %260
  %264 = phi %"class.re2::Regexp"** [ %259, %258 ], [ %262, %260 ]
  %265 = icmp eq i16 %242, 0
  br i1 %265, label %323, label %304

266:                                              ; preds = %266, %195
  %267 = phi i64 [ 0, %195 ], [ %301, %266 ]
  %268 = phi i32 [ 0, %195 ], [ %300, %266 ]
  %269 = phi i64 [ %196, %195 ], [ %302, %266 ]
  %270 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %267
  %271 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %270, align 8
  %272 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %271, i64 0, i32 0
  %273 = load i8, i8* %272, align 8
  %274 = icmp eq i8 %273, 2
  %275 = zext i1 %274 to i32
  %276 = add nuw nsw i32 %268, %275
  %277 = or i64 %267, 1
  %278 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %277
  %279 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %278, align 8
  %280 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %279, i64 0, i32 0
  %281 = load i8, i8* %280, align 8
  %282 = icmp eq i8 %281, 2
  %283 = zext i1 %282 to i32
  %284 = add nuw nsw i32 %276, %283
  %285 = or i64 %267, 2
  %286 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %285
  %287 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %286, align 8
  %288 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %287, i64 0, i32 0
  %289 = load i8, i8* %288, align 8
  %290 = icmp eq i8 %289, 2
  %291 = zext i1 %290 to i32
  %292 = add nuw nsw i32 %284, %291
  %293 = or i64 %267, 3
  %294 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %293
  %295 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %294, align 8
  %296 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %295, i64 0, i32 0
  %297 = load i8, i8* %296, align 8
  %298 = icmp eq i8 %297, 2
  %299 = zext i1 %298 to i32
  %300 = add nuw nsw i32 %292, %299
  %301 = add nuw nsw i64 %267, 4
  %302 = add i64 %269, -4
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %214, label %266

304:                                              ; preds = %263, %317
  %305 = phi i64 [ %319, %317 ], [ 0, %263 ]
  %306 = phi i32 [ %318, %317 ], [ 0, %263 ]
  %307 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %305
  %308 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %307, align 8
  %309 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %308, i64 0, i32 0
  %310 = load i8, i8* %309, align 8
  %311 = icmp eq i8 %310, 2
  br i1 %311, label %312, label %313

312:                                              ; preds = %304
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %308) #10
  br label %317

313:                                              ; preds = %304
  %314 = sext i32 %306 to i64
  %315 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %264, i64 %314
  store %"class.re2::Regexp"* %308, %"class.re2::Regexp"** %315, align 8
  %316 = add nsw i32 %306, 1
  br label %317

317:                                              ; preds = %313, %312
  %318 = phi i32 [ %306, %312 ], [ %316, %313 ]
  %319 = add nuw nsw i64 %305, 1
  %320 = load i16, i16* %7, align 2
  %321 = zext i16 %320 to i64
  %322 = icmp ult i64 %319, %321
  br i1 %322, label %304, label %323

323:                                              ; preds = %179, %317, %263, %169, %73, %149, %84, %95, %44, %10
  %324 = phi %"class.re2::Regexp"* [ %11, %10 ], [ %45, %44 ], [ %48, %95 ], [ %48, %84 ], [ %150, %149 ], [ %48, %73 ], [ %236, %263 ], [ %153, %169 ], [ %236, %317 ], [ %153, %179 ]
  ret %"class.re2::Regexp"* %324
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re214CoalesceWalker11CanCoalesceEPNS_6RegexpES2_(%"class.re2::Regexp"* readonly, %"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = zext i8 %4 to i32
  %6 = add nsw i32 %5, -7
  %7 = icmp ult i32 %6, 4
  br i1 %7, label %8, label %157

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 4
  %10 = load i16, i16* %9, align 2
  %11 = icmp ult i16 %10, 2
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 5
  br i1 %11, label %13, label %15

13:                                               ; preds = %8
  %14 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %17 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %16, align 8
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi %"class.re2::Regexp"** [ %14, %13 ], [ %17, %15 ]
  %20 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %19, align 8
  %21 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %20, i64 0, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 3
  br i1 %23, label %60, label %24

24:                                               ; preds = %18
  br i1 %11, label %25, label %27

25:                                               ; preds = %24
  %26 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %29 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %28, align 8
  br label %30

30:                                               ; preds = %25, %27
  %31 = phi %"class.re2::Regexp"** [ %26, %25 ], [ %29, %27 ]
  %32 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %31, align 8
  %33 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %32, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 20
  br i1 %35, label %60, label %36

36:                                               ; preds = %30
  br i1 %11, label %37, label %39

37:                                               ; preds = %36
  %38 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %42

39:                                               ; preds = %36
  %40 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %41 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %40, align 8
  br label %42

42:                                               ; preds = %37, %39
  %43 = phi %"class.re2::Regexp"** [ %38, %37 ], [ %41, %39 ]
  %44 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %43, align 8
  %45 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %44, i64 0, i32 0
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 12
  br i1 %47, label %60, label %48

48:                                               ; preds = %42
  br i1 %11, label %49, label %51

49:                                               ; preds = %48
  %50 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %54

51:                                               ; preds = %48
  %52 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %53 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %52, align 8
  br label %54

54:                                               ; preds = %49, %51
  %55 = phi %"class.re2::Regexp"** [ %50, %49 ], [ %53, %51 ]
  %56 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %55, align 8
  %57 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %56, i64 0, i32 0
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 13
  br i1 %59, label %60, label %157

60:                                               ; preds = %54, %42, %30, %18
  %61 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %62 = load i8, i8* %61, align 8
  %63 = zext i8 %62 to i32
  %64 = add nsw i32 %63, -7
  %65 = icmp ult i32 %64, 4
  br i1 %65, label %66, label %96

66:                                               ; preds = %60
  br i1 %11, label %67, label %69

67:                                               ; preds = %66
  %68 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %72

69:                                               ; preds = %66
  %70 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %71 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %70, align 8
  br label %72

72:                                               ; preds = %67, %69
  %73 = phi %"class.re2::Regexp"** [ %68, %67 ], [ %71, %69 ]
  %74 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %73, align 8
  %75 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %76 = load i16, i16* %75, align 2
  %77 = icmp ult i16 %76, 2
  %78 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  br i1 %77, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %union.anon.1* %78 to %"class.re2::Regexp"**
  br label %84

81:                                               ; preds = %72
  %82 = getelementptr inbounds %union.anon.1, %union.anon.1* %78, i64 0, i32 0
  %83 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %82, align 8
  br label %84

84:                                               ; preds = %79, %81
  %85 = phi %"class.re2::Regexp"** [ %80, %79 ], [ %83, %81 ]
  %86 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %85, align 8
  %87 = tail call zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"* %74, %"class.re2::Regexp"* %86) #10
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %92 = load i16, i16* %91, align 2
  %93 = xor i16 %92, %90
  %94 = and i16 %93, 64
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %158, label %96

96:                                               ; preds = %60, %88, %84
  %97 = load i16, i16* %9, align 2
  %98 = icmp ult i16 %97, 2
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %103 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %102, align 8
  br label %104

104:                                              ; preds = %99, %101
  %105 = phi %"class.re2::Regexp"** [ %100, %99 ], [ %103, %101 ]
  %106 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %105, align 8
  %107 = tail call zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"* %106, %"class.re2::Regexp"* %1) #10
  br i1 %107, label %158, label %108

108:                                              ; preds = %104
  %109 = load i16, i16* %9, align 2
  %110 = icmp ult i16 %109, 2
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %115 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %114, align 8
  br label %116

116:                                              ; preds = %111, %113
  %117 = phi %"class.re2::Regexp"** [ %112, %111 ], [ %115, %113 ]
  %118 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %117, align 8
  %119 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %118, i64 0, i32 0
  %120 = load i8, i8* %119, align 8
  %121 = icmp eq i8 %120, 3
  br i1 %121, label %122, label %157

122:                                              ; preds = %116
  %123 = load i8, i8* %61, align 8
  %124 = icmp eq i8 %123, 4
  br i1 %124, label %125, label %157

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %127 = bitcast %"class.std::__1::basic_string"** %126 to i32**
  %128 = load i32*, i32** %127, align 8
  %129 = load i32, i32* %128, align 4
  br i1 %110, label %130, label %132

130:                                              ; preds = %125
  %131 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %134 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %133, align 8
  br label %135

135:                                              ; preds = %130, %132
  %136 = phi %"class.re2::Regexp"** [ %131, %130 ], [ %134, %132 ]
  %137 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %136, align 8
  %138 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %137, i64 0, i32 7, i32 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %129, %139
  br i1 %140, label %141, label %157

141:                                              ; preds = %135
  br i1 %110, label %142, label %144

142:                                              ; preds = %141
  %143 = bitcast %union.anon.1* %12 to %"class.re2::Regexp"**
  br label %147

144:                                              ; preds = %141
  %145 = getelementptr inbounds %union.anon.1, %union.anon.1* %12, i64 0, i32 0
  %146 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %145, align 8
  br label %147

147:                                              ; preds = %142, %144
  %148 = phi %"class.re2::Regexp"** [ %143, %142 ], [ %146, %144 ]
  %149 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %148, align 8
  %150 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %149, i64 0, i32 2
  %151 = load i16, i16* %150, align 2
  %152 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %153 = load i16, i16* %152, align 2
  %154 = xor i16 %153, %151
  %155 = and i16 %154, 1
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %158, label %157

157:                                              ; preds = %2, %116, %122, %135, %147, %54
  br label %158

158:                                              ; preds = %147, %104, %88, %157
  %159 = phi i1 [ false, %157 ], [ true, %88 ], [ true, %104 ], [ true, %147 ]
  ret i1 %159
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re214CoalesceWalker10DoCoalesceEPPNS_6RegexpES3_(%"class.re2::Regexp"** nocapture, %"class.re2::Regexp"** nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.LogMessage, align 8
  %4 = alloca %class.LogMessage, align 8
  %5 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, align 8
  %6 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %1, align 8
  %7 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 4
  %8 = load i16, i16* %7, align 2
  %9 = icmp ult i16 %8, 2
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 5
  br i1 %9, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %union.anon.1* %10 to %"class.re2::Regexp"**
  br label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %union.anon.1, %union.anon.1* %10, i64 0, i32 0
  %15 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.re2::Regexp"** [ %12, %11 ], [ %15, %13 ]
  %18 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %17, align 8
  %19 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %18) #10
  %20 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 2
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6RepeatEPS0_NS0_10ParseFlagsEii(%"class.re2::Regexp"* %19, i32 %22, i32 0, i32 0) #10
  %24 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  switch i8 %25, label %48 [
    i8 7, label %26
    i8 8, label %30
    i8 9, label %34
    i8 10, label %38
  ]

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %28 = bitcast %union.anon.2* %27 to %struct.anon.3*
  %29 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %28, i64 0, i32 1
  store i32 0, i32* %29, align 4
  br label %90

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %32 = bitcast %union.anon.2* %31 to %struct.anon.3*
  %33 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %32, i64 0, i32 1
  store i32 1, i32* %33, align 4
  br label %90

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %36 = bitcast %union.anon.2* %35 to %struct.anon.3*
  %37 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %36, i64 0, i32 1
  store i32 0, i32* %37, align 4
  br label %90

38:                                               ; preds = %16
  %39 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 7
  %40 = bitcast %union.anon.2* %39 to %struct.anon.3*
  %41 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %44 = bitcast %union.anon.2* %43 to %struct.anon.3*
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %44, i64 0, i32 1
  store i32 %42, i32* %45, align 4
  %46 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %5, i64 0, i32 7, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  br label %90

48:                                               ; preds = %16
  %49 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %49) #10
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1
  %51 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 2, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %50, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %51, align 8
  %53 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %53, i64 0, i32 0
  %55 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %56 = bitcast %"class.std::__1::basic_ostringstream"* %50 to i64*
  store i64 %55, i64* %56, align 8
  %57 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %58 = bitcast %"class.std::__1::basic_ostringstream"* %50 to i8**
  %59 = inttoptr i64 %55 to i8*
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::basic_ostringstream"* %50 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = bitcast i8* %64 to i64*
  store i64 %57, i64* %65, align 8
  %66 = load i8*, i8** %58, align 8
  %67 = getelementptr i8, i8* %66, i64 -24
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %63, i64 %69
  %71 = bitcast i8* %70 to %"class.std::__1::ios_base"*
  %72 = bitcast %"class.std::__1::basic_stringbuf"* %53 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %71, i8* %72) #10
  %73 = getelementptr inbounds i8, i8* %70, i64 136
  %74 = bitcast i8* %73 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %74, align 8
  %75 = getelementptr inbounds i8, i8* %70, i64 144
  %76 = bitcast i8* %75 to i32*
  store i32 -1, i32* %76, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %51, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %54) #10
  %77 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %53, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 1
  %79 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 3
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %79, align 8
  %81 = bitcast %"class.std::__1::basic_ostringstream"* %50 to %"class.std::__1::basic_ostream"*
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %83, i32 374) #10
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i64 31) #10
  %87 = load i8, i8* %24, align 8
  %88 = zext i8 %87 to i32
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %86, i32 %88) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %49) #10
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %23) #10
  br label %243

90:                                               ; preds = %38, %34, %30, %26
  %91 = phi i32 [ %47, %38 ], [ 1, %34 ], [ -1, %30 ], [ -1, %26 ]
  %92 = phi i32 [ %42, %38 ], [ 0, %34 ], [ 1, %30 ], [ 0, %26 ]
  %93 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7, i32 0, i32 0
  store i32 %91, i32* %93, align 8
  %94 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 0
  %95 = load i8, i8* %94, align 8
  switch i8 %95, label %199 [
    i8 7, label %96
    i8 8, label %98
    i8 9, label %104
    i8 10, label %109
    i8 3, label %128
    i8 20, label %128
    i8 12, label %128
    i8 13, label %128
    i8 4, label %141
  ]

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7, i32 0, i32 0
  store i32 -1, i32* %97, align 8
  br label %137

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %100 = bitcast %union.anon.2* %99 to %struct.anon.3*
  %101 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %100, i64 0, i32 1
  %102 = add nsw i32 %92, 1
  store i32 %102, i32* %101, align 4
  %103 = getelementptr inbounds %union.anon.2, %union.anon.2* %99, i64 0, i32 0, i32 0
  store i32 -1, i32* %103, align 8
  br label %137

104:                                              ; preds = %90
  %105 = icmp eq i32 %91, -1
  br i1 %105, label %137, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7, i32 0, i32 0
  %108 = add nuw nsw i32 %91, 1
  store i32 %108, i32* %107, align 8
  br label %137

109:                                              ; preds = %90
  %110 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 7
  %111 = bitcast %union.anon.2* %110 to %struct.anon.3*
  %112 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %111, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %115 = bitcast %union.anon.2* %114 to %struct.anon.3*
  %116 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %115, i64 0, i32 1
  %117 = add nsw i32 %92, %113
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 7, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %121, label %123

121:                                              ; preds = %109
  %122 = getelementptr inbounds %union.anon.2, %union.anon.2* %114, i64 0, i32 0, i32 0
  store i32 -1, i32* %122, align 8
  br label %137

123:                                              ; preds = %109
  %124 = icmp eq i32 %91, -1
  br i1 %124, label %137, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %union.anon.2, %union.anon.2* %114, i64 0, i32 0, i32 0
  %127 = add nsw i32 %91, %119
  store i32 %127, i32* %126, align 8
  br label %137

128:                                              ; preds = %90, %90, %90, %90
  %129 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %130 = bitcast %union.anon.2* %129 to %struct.anon.3*
  %131 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %130, i64 0, i32 1
  %132 = add nsw i32 %92, 1
  store i32 %132, i32* %131, align 4
  %133 = icmp eq i32 %91, -1
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %union.anon.2, %union.anon.2* %129, i64 0, i32 0, i32 0
  %136 = add nuw nsw i32 %91, 1
  store i32 %136, i32* %135, align 8
  br label %137

137:                                              ; preds = %184, %104, %123, %128, %134, %121, %125, %106, %98, %96
  %138 = tail call i8* @_Znwm(i64 40) #11
  %139 = bitcast i8* %138 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %139, i32 2, i32 0) #10
  %140 = bitcast %"class.re2::Regexp"** %0 to i8**
  store i8* %138, i8** %140, align 8
  br label %241

141:                                              ; preds = %90
  %142 = load i16, i16* %7, align 2
  %143 = icmp ult i16 %142, 2
  br i1 %143, label %144, label %146

144:                                              ; preds = %141
  %145 = bitcast %union.anon.1* %10 to %"class.re2::Regexp"**
  br label %149

146:                                              ; preds = %141
  %147 = getelementptr inbounds %union.anon.1, %union.anon.1* %10, i64 0, i32 0
  %148 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %147, align 8
  br label %149

149:                                              ; preds = %144, %146
  %150 = phi %"class.re2::Regexp"** [ %145, %144 ], [ %148, %146 ]
  %151 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %150, align 8
  %152 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %151, i64 0, i32 7, i32 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 7, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp sgt i32 %155, 1
  br i1 %156, label %157, label %174

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 7, i32 0, i32 1
  %159 = bitcast %"class.std::__1::basic_string"** %158 to i32**
  %160 = load i32*, i32** %159, align 8
  %161 = sext i32 %155 to i64
  br label %162

162:                                              ; preds = %157, %168
  %163 = phi i64 [ 1, %157 ], [ %169, %168 ]
  %164 = phi i32 [ 1, %157 ], [ %170, %168 ]
  %165 = getelementptr inbounds i32, i32* %160, i64 %163
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, %153
  br i1 %167, label %168, label %172

168:                                              ; preds = %162
  %169 = add nuw nsw i64 %163, 1
  %170 = add nuw nsw i32 %164, 1
  %171 = icmp slt i64 %169, %161
  br i1 %171, label %162, label %174

172:                                              ; preds = %162
  %173 = trunc i64 %163 to i32
  br label %174

174:                                              ; preds = %168, %172, %149
  %175 = phi i32 [ 1, %149 ], [ %173, %172 ], [ %170, %168 ]
  %176 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %23, i64 0, i32 7
  %177 = bitcast %union.anon.2* %176 to %struct.anon.3*
  %178 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %177, i64 0, i32 1
  %179 = add nsw i32 %92, %175
  store i32 %179, i32* %178, align 4
  %180 = icmp eq i32 %91, -1
  br i1 %180, label %184, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %union.anon.2, %union.anon.2* %176, i64 0, i32 0, i32 0
  %183 = add nsw i32 %91, %175
  store i32 %183, i32* %182, align 8
  br label %184

184:                                              ; preds = %174, %181
  %185 = load i32, i32* %154, align 8
  %186 = icmp eq i32 %175, %185
  br i1 %186, label %137, label %187

187:                                              ; preds = %184
  store %"class.re2::Regexp"* %23, %"class.re2::Regexp"** %0, align 8
  %188 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 7, i32 0, i32 1
  %189 = bitcast %"class.std::__1::basic_string"** %188 to i32**
  %190 = load i32*, i32** %189, align 8
  %191 = zext i32 %175 to i64
  %192 = getelementptr inbounds i32, i32* %190, i64 %191
  %193 = load i32, i32* %154, align 8
  %194 = sub nsw i32 %193, %175
  %195 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %6, i64 0, i32 2
  %196 = load i16, i16* %195, align 2
  %197 = zext i16 %196 to i32
  %198 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32* %192, i32 %194, i32 %197) #10
  br label %241

199:                                              ; preds = %90
  %200 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %200) #10
  store i8 0, i8* %200, align 8
  %201 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %202 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %203 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %201, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %202, align 8
  %204 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %205 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %204, i64 0, i32 0
  %206 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %207 = bitcast %"class.std::__1::basic_ostringstream"* %201 to i64*
  store i64 %206, i64* %207, align 8
  %208 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %209 = bitcast %"class.std::__1::basic_ostringstream"* %201 to i8**
  %210 = inttoptr i64 %206 to i8*
  %211 = getelementptr i8, i8* %210, i64 -24
  %212 = bitcast i8* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.std::__1::basic_ostringstream"* %201 to i8*
  %215 = getelementptr inbounds i8, i8* %214, i64 %213
  %216 = bitcast i8* %215 to i64*
  store i64 %208, i64* %216, align 8
  %217 = load i8*, i8** %209, align 8
  %218 = getelementptr i8, i8* %217, i64 -24
  %219 = bitcast i8* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds i8, i8* %214, i64 %220
  %222 = bitcast i8* %221 to %"class.std::__1::ios_base"*
  %223 = bitcast %"class.std::__1::basic_stringbuf"* %204 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %222, i8* %223) #10
  %224 = getelementptr inbounds i8, i8* %221, i64 136
  %225 = bitcast i8* %224 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %225, align 8
  %226 = getelementptr inbounds i8, i8* %221, i64 144
  %227 = bitcast i8* %226 to i32*
  store i32 -1, i32* %227, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %203, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %202, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %205) #10
  %228 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %204, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %228, align 8
  %229 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %230 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %231 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %230, align 8
  %232 = bitcast %"class.std::__1::basic_ostringstream"* %201 to %"class.std::__1::basic_ostream"*
  %233 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %232, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %234 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %233, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %235 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %234, i32 435) #10
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %235, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %232, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i64 31) #10
  %238 = load i8, i8* %94, align 8
  %239 = zext i8 %238 to i32
  %240 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %237, i32 %239) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %200) #10
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %23) #10
  br label %243

241:                                              ; preds = %187, %137
  %242 = phi %"class.re2::Regexp"* [ %198, %187 ], [ %23, %137 ]
  store %"class.re2::Regexp"* %242, %"class.re2::Regexp"** %1, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %5) #10
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %6) #10
  br label %243

243:                                              ; preds = %241, %199, %48
  ret void
}

declare zeroext i1 @_ZN3re26Regexp5EqualEPS0_S1_(%"class.re2::Regexp"*, %"class.re2::Regexp"*) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp6RepeatEPS0_NS0_10ParseFlagsEii(%"class.re2::Regexp"*, i32, i32, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker4CopyEPNS_6RegexpE(%"class.re2::SimplifyWalker"* nocapture readnone, %"class.re2::Regexp"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  ret %"class.re2::Regexp"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker10ShortVisitEPNS_6RegexpES2_(%"class.re2::SimplifyWalker"* nocapture readnone, %"class.re2::Regexp"*, %"class.re2::Regexp"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %class.LogMessage, align 8
  %5 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #10
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = load i8*, i8** %14, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #10
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %39, i32 451) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #10
  %43 = call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  ret %"class.re2::Regexp"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker8PreVisitEPNS_6RegexpES2_Pb(%"class.re2::SimplifyWalker"* nocapture readnone, %"class.re2::Regexp"*, %"class.re2::Regexp"* nocapture readnone, i8* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  store i8 1, i8* %3, align 1
  %9 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %10

10:                                               ; preds = %4, %8
  %11 = phi %"class.re2::Regexp"* [ %9, %8 ], [ null, %4 ]
  ret %"class.re2::Regexp"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker9PostVisitEPNS_6RegexpES2_S2_PS2_i(%"class.re2::SimplifyWalker"* nocapture readnone, %"class.re2::Regexp"*, %"class.re2::Regexp"* nocapture readnone, %"class.re2::Regexp"* nocapture readnone, %"class.re2::Regexp"** nocapture readonly, i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.LogMessage, align 8
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = zext i8 %9 to i32
  switch i8 %9, label %200 [
    i8 1, label %11
    i8 2, label %11
    i8 3, label %11
    i8 4, label %11
    i8 14, label %11
    i8 15, label %11
    i8 18, label %11
    i8 16, label %11
    i8 17, label %11
    i8 19, label %11
    i8 12, label %11
    i8 13, label %11
    i8 21, label %11
    i8 5, label %14
    i8 6, label %14
    i8 11, label %86
    i8 7, label %119
    i8 8, label %119
    i8 9, label %119
    i8 10, label %160
    i8 20, label %177
  ]

11:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6
  %12 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 1
  store i8 1, i8* %12, align 1
  %13 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %243

14:                                               ; preds = %6, %6
  %15 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  %20 = getelementptr inbounds %union.anon.1, %union.anon.1* %19, i64 0, i32 0
  %21 = bitcast %union.anon.1* %19 to %"class.re2::Regexp"**
  %22 = icmp eq i16 %16, 1
  %23 = zext i16 %16 to i64
  br label %26

24:                                               ; preds = %30
  %25 = icmp eq i64 %37, %23
  br i1 %25, label %38, label %26

26:                                               ; preds = %24, %18
  %27 = phi i64 [ 0, %18 ], [ %37, %24 ]
  br i1 %22, label %30, label %28

28:                                               ; preds = %26
  %29 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi %"class.re2::Regexp"** [ %29, %28 ], [ %21, %26 ]
  %32 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %31, i64 %27
  %33 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %32, align 8
  %34 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %27
  %35 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %34, align 8
  %36 = icmp eq %"class.re2::Regexp"* %35, %33
  %37 = add nuw nsw i64 %27, 1
  br i1 %36, label %24, label %49

38:                                               ; preds = %24, %38
  %39 = phi i64 [ %42, %38 ], [ 0, %24 ]
  %40 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %39
  %41 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %40, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %41) #10
  %42 = add nuw nsw i64 %39, 1
  %43 = load i16, i16* %15, align 2
  %44 = zext i16 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %38, label %46

46:                                               ; preds = %38, %14
  %47 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 1
  store i8 1, i8* %47, align 1
  %48 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %243

49:                                               ; preds = %30
  %50 = tail call i8* @_Znwm(i64 40) #11
  %51 = bitcast i8* %50 to %"class.re2::Regexp"*
  %52 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %51, i32 %10, i32 %54) #10
  %55 = load i16, i16* %15, align 2
  %56 = icmp ugt i16 %55, 1
  br i1 %56, label %57, label %65

57:                                               ; preds = %49
  %58 = zext i16 %55 to i64
  %59 = shl nuw nsw i64 %58, 3
  %60 = tail call i8* @_Znam(i64 %59) #11
  %61 = getelementptr inbounds i8, i8* %50, i64 8
  %62 = bitcast i8* %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds i8, i8* %50, i64 6
  %64 = bitcast i8* %63 to i16*
  store i16 %55, i16* %64, align 2
  br label %70

65:                                               ; preds = %49
  %66 = getelementptr inbounds i8, i8* %50, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %55, i16* %67, align 2
  %68 = getelementptr inbounds i8, i8* %50, i64 8
  %69 = icmp eq i16 %55, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %57, %65
  %71 = phi i8* [ %60, %57 ], [ %68, %65 ]
  %72 = bitcast i8* %71 to %"class.re2::Regexp"**
  %73 = load i16, i16* %15, align 2
  %74 = zext i16 %73 to i64
  br label %77

75:                                               ; preds = %77, %65
  %76 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 1, i8* %76, align 1
  br label %243

77:                                               ; preds = %70, %77
  %78 = phi i64 [ 0, %70 ], [ %84, %77 ]
  %79 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, i64 %78
  %80 = bitcast %"class.re2::Regexp"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %72, i64 %78
  %83 = bitcast %"class.re2::Regexp"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = add nuw nsw i64 %78, 1
  %85 = icmp ult i64 %84, %74
  br i1 %85, label %77, label %75

86:                                               ; preds = %6
  %87 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, align 8
  %88 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %89 = load i16, i16* %88, align 2
  %90 = icmp ult i16 %89, 2
  %91 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  br i1 %90, label %92, label %94

92:                                               ; preds = %86
  %93 = bitcast %union.anon.1* %91 to %"class.re2::Regexp"**
  br label %97

94:                                               ; preds = %86
  %95 = getelementptr inbounds %union.anon.1, %union.anon.1* %91, i64 0, i32 0
  %96 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %95, align 8
  br label %97

97:                                               ; preds = %92, %94
  %98 = phi %"class.re2::Regexp"** [ %93, %92 ], [ %96, %94 ]
  %99 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %98, align 8
  %100 = icmp eq %"class.re2::Regexp"* %87, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %87) #10
  %102 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 1
  store i8 1, i8* %102, align 1
  %103 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %243

104:                                              ; preds = %97
  %105 = tail call i8* @_Znwm(i64 40) #11
  %106 = bitcast i8* %105 to %"class.re2::Regexp"*
  %107 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %108 = load i16, i16* %107, align 2
  %109 = zext i16 %108 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %106, i32 11, i32 %109) #10
  %110 = getelementptr inbounds i8, i8* %105, i64 6
  %111 = bitcast i8* %110 to i16*
  store i16 1, i16* %111, align 2
  %112 = getelementptr inbounds i8, i8* %105, i64 8
  %113 = bitcast i8* %112 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %87, %"class.re2::Regexp"** %113, align 8
  %114 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds i8, i8* %105, i64 24
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %105, i64 1
  store i8 1, i8* %118, align 1
  br label %243

119:                                              ; preds = %6, %6, %6
  %120 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, align 8
  %121 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %120, i64 0, i32 0
  %122 = load i8, i8* %121, align 8
  %123 = icmp eq i8 %122, 2
  br i1 %123, label %243, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 4
  %126 = load i16, i16* %125, align 2
  %127 = icmp ult i16 %126, 2
  %128 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 5
  br i1 %127, label %129, label %131

129:                                              ; preds = %124
  %130 = bitcast %union.anon.1* %128 to %"class.re2::Regexp"**
  br label %134

131:                                              ; preds = %124
  %132 = getelementptr inbounds %union.anon.1, %union.anon.1* %128, i64 0, i32 0
  %133 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %132, align 8
  br label %134

134:                                              ; preds = %129, %131
  %135 = phi %"class.re2::Regexp"** [ %130, %129 ], [ %133, %131 ]
  %136 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %135, align 8
  %137 = icmp eq %"class.re2::Regexp"* %120, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %134
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %120) #10
  %139 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 1
  store i8 1, i8* %139, align 1
  %140 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %243

141:                                              ; preds = %134
  %142 = icmp eq i8 %9, %122
  br i1 %142, label %143, label %149

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %145 = load i16, i16* %144, align 2
  %146 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %120, i64 0, i32 2
  %147 = load i16, i16* %146, align 2
  %148 = icmp eq i16 %145, %147
  br i1 %148, label %243, label %149

149:                                              ; preds = %143, %141
  %150 = tail call i8* @_Znwm(i64 40) #11
  %151 = bitcast i8* %150 to %"class.re2::Regexp"*
  %152 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %151, i32 %10, i32 %154) #10
  %155 = getelementptr inbounds i8, i8* %150, i64 6
  %156 = bitcast i8* %155 to i16*
  store i16 1, i16* %156, align 2
  %157 = getelementptr inbounds i8, i8* %150, i64 8
  %158 = bitcast i8* %157 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %120, %"class.re2::Regexp"** %158, align 8
  %159 = getelementptr inbounds i8, i8* %150, i64 1
  store i8 1, i8* %159, align 1
  br label %243

160:                                              ; preds = %6
  %161 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, align 8
  %162 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %161, i64 0, i32 0
  %163 = load i8, i8* %162, align 8
  %164 = icmp eq i8 %163, 2
  br i1 %164, label %243, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %167 = bitcast %union.anon.2* %166 to %struct.anon.3*
  %168 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %167, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %union.anon.2, %union.anon.2* %166, i64 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %173 = load i16, i16* %172, align 2
  %174 = zext i16 %173 to i32
  %175 = tail call %"class.re2::Regexp"* @_ZN3re214SimplifyWalker14SimplifyRepeatEPNS_6RegexpEiiNS1_10ParseFlagsE(%"class.re2::Regexp"* %161, i32 %169, i32 %171, i32 %174)
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %161) #10
  %176 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %175, i64 0, i32 1
  store i8 1, i8* %176, align 1
  br label %243

177:                                              ; preds = %6
  %178 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %179 = bitcast %union.anon.2* %178 to %"class.re2::CharClass"**
  %180 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %179, align 8
  %181 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %180, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  switch i32 %182, label %195 [
    i32 0, label %183
    i32 1114112, label %189
  ]

183:                                              ; preds = %177
  %184 = tail call i8* @_Znwm(i64 40) #11
  %185 = bitcast i8* %184 to %"class.re2::Regexp"*
  %186 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %185, i32 1, i32 %188) #10
  br label %197

189:                                              ; preds = %177
  %190 = tail call i8* @_Znwm(i64 40) #11
  %191 = bitcast i8* %190 to %"class.re2::Regexp"*
  %192 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %193 = load i16, i16* %192, align 2
  %194 = zext i16 %193 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %191, i32 12, i32 %194) #10
  br label %197

195:                                              ; preds = %177
  %196 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %197

197:                                              ; preds = %183, %189, %195
  %198 = phi %"class.re2::Regexp"* [ %185, %183 ], [ %191, %189 ], [ %196, %195 ]
  %199 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %198, i64 0, i32 1
  store i8 1, i8* %199, align 1
  br label %243

200:                                              ; preds = %6
  %201 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %201) #10
  store i8 0, i8* %201, align 8
  %202 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1
  %203 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 2, i32 0, i32 0
  %204 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %202, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %203, align 8
  %205 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1
  %206 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %205, i64 0, i32 0
  %207 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %208 = bitcast %"class.std::__1::basic_ostringstream"* %202 to i64*
  store i64 %207, i64* %208, align 8
  %209 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %210 = bitcast %"class.std::__1::basic_ostringstream"* %202 to i8**
  %211 = inttoptr i64 %207 to i8*
  %212 = getelementptr i8, i8* %211, i64 -24
  %213 = bitcast i8* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.std::__1::basic_ostringstream"* %202 to i8*
  %216 = getelementptr inbounds i8, i8* %215, i64 %214
  %217 = bitcast i8* %216 to i64*
  store i64 %209, i64* %217, align 8
  %218 = load i8*, i8** %210, align 8
  %219 = getelementptr i8, i8* %218, i64 -24
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds i8, i8* %215, i64 %221
  %223 = bitcast i8* %222 to %"class.std::__1::ios_base"*
  %224 = bitcast %"class.std::__1::basic_stringbuf"* %205 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %223, i8* %224) #10
  %225 = getelementptr inbounds i8, i8* %222, i64 136
  %226 = bitcast i8* %225 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %226, align 8
  %227 = getelementptr inbounds i8, i8* %222, i64 144
  %228 = bitcast i8* %227 to i32*
  store i32 -1, i32* %228, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %204, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %203, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %206) #10
  %229 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %205, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 1
  %231 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 3
  %232 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %231, align 8
  %233 = bitcast %"class.std::__1::basic_ostringstream"* %202 to %"class.std::__1::basic_ostream"*
  %234 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %233, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %235 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %235, i32 567) #10
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %236, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %238 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %233, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i64 27) #10
  %239 = load i8, i8* %8, align 8
  %240 = zext i8 %239 to i32
  %241 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %238, i32 %240) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %201) #10
  %242 = call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %1) #10
  br label %243

243:                                              ; preds = %165, %160, %138, %149, %119, %143, %101, %104, %200, %197, %75, %46, %11
  %244 = phi %"class.re2::Regexp"* [ %242, %200 ], [ %198, %197 ], [ %51, %75 ], [ %48, %46 ], [ %13, %11 ], [ %103, %101 ], [ %106, %104 ], [ %140, %138 ], [ %151, %149 ], [ %120, %119 ], [ %120, %143 ], [ %175, %165 ], [ %161, %160 ]
  ret %"class.re2::Regexp"* %244
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker14SimplifyRepeatEPNS_6RegexpEiiNS1_10ParseFlagsE(%"class.re2::Regexp"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.LogMessage, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = icmp eq i32 %2, -1
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  switch i32 %1, label %15 [
    i32 0, label %9
    i32 1, label %12
  ]

9:                                                ; preds = %8
  %10 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %11 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp4StarEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"* %10, i32 %3) #10
  br label %171

12:                                               ; preds = %8
  %13 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %14 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp4PlusEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"* %13, i32 %3) #10
  br label %171

15:                                               ; preds = %8
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #13
  unreachable

18:                                               ; preds = %15
  %19 = sext i32 %1 to i64
  %20 = shl nsw i64 %19, 3
  %21 = tail call i8* @_Znwm(i64 %20) #11
  %22 = add nsw i32 %1, -1
  %23 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %24 = bitcast i8* %21 to %"class.re2::Regexp"**
  %25 = zext i32 %22 to i64
  br label %31

26:                                               ; preds = %31
  %27 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp4PlusEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"* %36, i32 %3) #10
  %28 = sext i32 %22 to i64
  %29 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %24, i64 %28
  store %"class.re2::Regexp"* %27, %"class.re2::Regexp"** %29, align 8
  %30 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %24, i32 %1, i32 %3) #10
  tail call void @_ZdlPv(i8* nonnull %21) #11
  br label %171

31:                                               ; preds = %31, %18
  %32 = phi i64 [ 0, %18 ], [ %35, %31 ]
  %33 = phi %"class.re2::Regexp"* [ %23, %18 ], [ %36, %31 ]
  %34 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %24, i64 %32
  store %"class.re2::Regexp"* %33, %"class.re2::Regexp"** %34, align 8
  %35 = add nuw nsw i64 %32, 1
  %36 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %37 = icmp eq i64 %35, %25
  br i1 %37, label %26, label %31

38:                                               ; preds = %4
  %39 = or i32 %2, %1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = tail call i8* @_Znwm(i64 40) #11
  %43 = bitcast i8* %42 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %43, i32 2, i32 %3) #10
  br label %171

44:                                               ; preds = %38
  %45 = icmp eq i32 %1, 1
  %46 = icmp eq i32 %2, 1
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  br label %171

50:                                               ; preds = %44
  %51 = icmp sgt i32 %1, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %50
  %53 = sext i32 %1 to i64
  %54 = shl nsw i64 %53, 3
  %55 = tail call i8* @_Znwm(i64 %54) #11
  %56 = bitcast i8* %55 to %"class.re2::Regexp"**
  %57 = zext i32 %1 to i64
  br label %60

58:                                               ; preds = %60
  %59 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %56, i32 %1, i32 %3) #10
  tail call void @_ZdlPv(i8* nonnull %55) #11
  br label %66

60:                                               ; preds = %60, %52
  %61 = phi i64 [ 0, %52 ], [ %64, %60 ]
  %62 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %63 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %56, i64 %61
  store %"class.re2::Regexp"* %62, %"class.re2::Regexp"** %63, align 8
  %64 = add nuw nsw i64 %61, 1
  %65 = icmp eq i64 %64, %57
  br i1 %65, label %58, label %60

66:                                               ; preds = %58, %50
  %67 = phi %"class.re2::Regexp"* [ %59, %58 ], [ null, %50 ]
  %68 = icmp sgt i32 %2, %1
  br i1 %68, label %69, label %105

69:                                               ; preds = %66
  %70 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %71 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp5QuestEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"* %70, i32 %3) #10
  %72 = add nsw i32 %1, 1
  %73 = icmp slt i32 %72, %2
  br i1 %73, label %77, label %74

74:                                               ; preds = %77, %69
  %75 = phi %"class.re2::Regexp"* [ %71, %69 ], [ %91, %77 ]
  %76 = icmp eq %"class.re2::Regexp"* %67, null
  br i1 %76, label %105, label %94

77:                                               ; preds = %69, %77
  %78 = phi i32 [ %92, %77 ], [ %72, %69 ]
  %79 = phi %"class.re2::Regexp"* [ %91, %77 ], [ %71, %69 ]
  %80 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  %81 = tail call i8* @_Znwm(i64 40) #11
  %82 = bitcast i8* %81 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %82, i32 5, i32 %3) #10
  %83 = tail call i8* @_Znam(i64 16) #11
  %84 = getelementptr inbounds i8, i8* %81, i64 8
  %85 = bitcast i8* %84 to i8**
  store i8* %83, i8** %85, align 8
  %86 = getelementptr inbounds i8, i8* %81, i64 6
  %87 = bitcast i8* %86 to i16*
  store i16 2, i16* %87, align 2
  %88 = bitcast i8* %83 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %80, %"class.re2::Regexp"** %88, align 8
  %89 = getelementptr inbounds i8, i8* %83, i64 8
  %90 = bitcast i8* %89 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %79, %"class.re2::Regexp"** %90, align 8
  %91 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp5QuestEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %82, i32 %3) #10
  %92 = add i32 %78, 1
  %93 = icmp eq i32 %92, %2
  br i1 %93, label %74, label %77

94:                                               ; preds = %74
  %95 = tail call i8* @_Znwm(i64 40) #11
  %96 = bitcast i8* %95 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %96, i32 5, i32 %3) #10
  %97 = tail call i8* @_Znam(i64 16) #11
  %98 = getelementptr inbounds i8, i8* %95, i64 8
  %99 = bitcast i8* %98 to i8**
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 6
  %101 = bitcast i8* %100 to i16*
  store i16 2, i16* %101, align 2
  %102 = bitcast i8* %97 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %67, %"class.re2::Regexp"** %102, align 8
  %103 = getelementptr inbounds i8, i8* %97, i64 8
  %104 = bitcast i8* %103 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %75, %"class.re2::Regexp"** %104, align 8
  br label %171

105:                                              ; preds = %74, %66
  %106 = phi %"class.re2::Regexp"* [ %67, %66 ], [ %75, %74 ]
  %107 = icmp eq %"class.re2::Regexp"* %106, null
  br i1 %107, label %108, label %171

108:                                              ; preds = %105
  %109 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %109) #10
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %111 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %110, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %111, align 8
  %113 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %114 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %113, i64 0, i32 0
  %115 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %116 = bitcast %"class.std::__1::basic_ostringstream"* %110 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %118 = bitcast %"class.std::__1::basic_ostringstream"* %110 to i8**
  %119 = inttoptr i64 %115 to i8*
  %120 = getelementptr i8, i8* %119, i64 -24
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::basic_ostringstream"* %110 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  %125 = bitcast i8* %124 to i64*
  store i64 %117, i64* %125, align 8
  %126 = load i8*, i8** %118, align 8
  %127 = getelementptr i8, i8* %126, i64 -24
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %123, i64 %129
  %131 = bitcast i8* %130 to %"class.std::__1::ios_base"*
  %132 = bitcast %"class.std::__1::basic_stringbuf"* %113 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %131, i8* %132) #10
  %133 = getelementptr inbounds i8, i8* %130, i64 136
  %134 = bitcast i8* %133 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %134, align 8
  %135 = getelementptr inbounds i8, i8* %130, i64 144
  %136 = bitcast i8* %135 to i32*
  store i32 -1, i32* %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %112, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %111, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %114) #10
  %137 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %113, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %138 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %139 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %140 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %139, align 8
  %141 = bitcast %"class.std::__1::basic_ostringstream"* %110 to %"class.std::__1::basic_ostream"*
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %141, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #10
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %144 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %143, i32 644) #10
  %145 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %144, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %146 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i64 17) #10
  %147 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  call void @_ZN3re26Regexp8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.re2::Regexp"* %0) #10
  %148 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = zext i8 %150 to i64
  %157 = select i1 %151, i8* %153, i8* %147
  %158 = select i1 %151, i64 %155, i64 %156
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %146, i8* %157, i64 %158) #10
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %159, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #10
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %160, i32 %1) #10
  %162 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #10
  %163 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %162, i32 %2) #10
  %164 = load i8, i8* %149, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %108
  %167 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %167) #11
  br label %168

168:                                              ; preds = %108, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %109) #10
  %169 = call i8* @_Znwm(i64 40) #11
  %170 = bitcast i8* %169 to %"class.re2::Regexp"*
  call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %170, i32 1, i32 %3) #10
  br label %171

171:                                              ; preds = %94, %168, %105, %48, %41, %26, %12, %9
  %172 = phi %"class.re2::Regexp"* [ %11, %9 ], [ %14, %12 ], [ %30, %26 ], [ %43, %41 ], [ %49, %48 ], [ %170, %168 ], [ %106, %105 ], [ %96, %94 ]
  ret %"class.re2::Regexp"* %172
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Regexp"* @_ZN3re214SimplifyWalker17SimplifyCharClassEPNS_6RegexpE(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 7
  %3 = bitcast %union.anon.2* %2 to %"class.re2::CharClass"**
  %4 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %3, align 8
  %5 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %19 [
    i32 0, label %7
    i32 1114112, label %13
  ]

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 40) #11
  %9 = bitcast i8* %8 to %"class.re2::Regexp"*
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %9, i32 1, i32 %12) #10
  br label %21

13:                                               ; preds = %1
  %14 = tail call i8* @_Znwm(i64 40) #11
  %15 = bitcast i8* %14 to %"class.re2::Regexp"*
  %16 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %15, i32 12, i32 %18) #10
  br label %21

19:                                               ; preds = %1
  %20 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %0) #10
  br label %21

21:                                               ; preds = %19, %13, %7
  %22 = phi %"class.re2::Regexp"* [ %9, %7 ], [ %15, %13 ], [ %20, %19 ]
  ret %"class.re2::Regexp"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Regexp"* @_ZN3re214SimplifyWalker7Concat2EPNS_6RegexpES2_NS1_10ParseFlagsE(%"class.re2::Regexp"*, %"class.re2::Regexp"*, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #11
  %5 = bitcast i8* %4 to %"class.re2::Regexp"*
  tail call void @_ZN3re26RegexpC1ENS_8RegexpOpENS0_10ParseFlagsE(%"class.re2::Regexp"* nonnull %5, i32 5, i32 %2) #10
  %6 = tail call i8* @_Znam(i64 16) #11
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 6
  %10 = bitcast i8* %9 to i16*
  store i16 2, i16* %10, align 2
  %11 = bitcast i8* %6 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %0, %"class.re2::Regexp"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %13, align 8
  ret %"class.re2::Regexp"* %5
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp4StarEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp4PlusEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp5QuestEPS0_NS0_10ParseFlagsE(%"class.re2::Regexp"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re214CoalesceWalkerD0Ev(%"class.re2::CoalesceWalker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::CoalesceWalker", %"class.re2::CoalesceWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIPS0_ED2Ev(%"class.re2::Regexp::Walker"* %2) #10
  %3 = bitcast %"class.re2::CoalesceWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E8PreVisitES2_S2_Pb(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Regexp"* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re214SimplifyWalkerD0Ev(%"class.re2::SimplifyWalker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::SimplifyWalker", %"class.re2::SimplifyWalker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIPS0_ED2Ev(%"class.re2::Regexp::Walker"* %2) #10
  %3 = bitcast %"class.re2::SimplifyWalker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #5

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPS0_ED2Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerIPS0_EE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerIPS0_E5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = udiv i64 %6, 85
  %8 = urem i64 %6, 85
  %9 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %7
  %10 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = icmp eq %"struct.re2::WalkState"** %11, %4
  %13 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %14 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %9, align 8
  %19 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %18, i64 %8
  %20 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = udiv i64 %22, 85
  %24 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %23
  %25 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %24, align 8
  %26 = urem i64 %22, 85
  %27 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %25, i64 %26
  %28 = icmp eq %"struct.re2::WalkState"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %17, %15
  %30 = phi i64* [ %16, %15 ], [ %20, %17 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  %32 = sub i64 %13, %14
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %17, %48
  %36 = phi %"struct.re2::WalkState"* [ %51, %48 ], [ %19, %17 ]
  %37 = phi %"struct.re2::WalkState"** [ %50, %48 ], [ %9, %17 ]
  %38 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %36, i64 1
  %39 = ptrtoint %"struct.re2::WalkState"* %38 to i64
  %40 = bitcast %"struct.re2::WalkState"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4080
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %37, i64 1
  %46 = bitcast %"struct.re2::WalkState"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.re2::WalkState"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.re2::WalkState"*
  %52 = icmp eq %"struct.re2::WalkState"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.re2::WalkState"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.re2::WalkState"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #11
  %57 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %58 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %57, i64 1
  store %"struct.re2::WalkState"** %58, %"struct.re2::WalkState"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.re2::WalkState"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.re2::WalkState"** [ %11, %29 ], [ %65, %64 ]
  %68 = phi %"struct.re2::WalkState"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 85, %70 ], [ 42, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.re2::WalkState"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.re2::WalkState"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.re2::WalkState"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #11
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %76, i64 1
  %80 = icmp eq %"struct.re2::WalkState"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %83 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %84 = icmp eq %"struct.re2::WalkState"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.re2::WalkState"** %82 to i64
  %87 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 -1
  %88 = ptrtoint %"struct.re2::WalkState"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 %91
  store %"struct.re2::WalkState"** %92, %"struct.re2::WalkState"*** %10, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %94, align 8
  %96 = icmp eq %"struct.re2::WalkState"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.re2::WalkState"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPS0_ED0Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E9PostVisitES2_S2_S2_PS2_i(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Regexp"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E4CopyES2_(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Regexp"* %1
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPS0_E5ResetEv(%"class.re2::Regexp::Walker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %100, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #10
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #10
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #10
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i64 42) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 149) #10
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i64 16) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #10
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %100, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.re2::WalkState"*** %50 to i64*
  %52 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  br label %53

53:                                               ; preds = %47, %97
  %54 = phi i64 [ %45, %47 ], [ %98, %97 ]
  %55 = load i64, i64* %48, align 8
  %56 = add i64 %54, -1
  %57 = add i64 %56, %55
  %58 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %59 = udiv i64 %57, 85
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %58, i64 %59
  %61 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, align 8
  %62 = urem i64 %57, 85
  %63 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %61, i64 %62, i32 5
  %64 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %63, align 8
  %65 = icmp eq %"class.re2::Regexp"** %64, null
  %66 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  br i1 %65, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast %"class.re2::Regexp"** %64 to i8*
  call void @_ZdaPv(i8* %68) #11
  %69 = load i64, i64* %3, align 8
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %52, align 8
  %72 = add i64 %69, -1
  br label %73

73:                                               ; preds = %67, %53
  %74 = phi i64 [ %72, %67 ], [ %56, %53 ]
  %75 = phi i64 [ %71, %67 ], [ %66, %53 ]
  %76 = phi i64 [ %70, %67 ], [ %55, %53 ]
  %77 = phi i64 [ %69, %67 ], [ %54, %53 ]
  store i64 %74, i64* %3, align 8
  %78 = load i64, i64* %51, align 8
  %79 = sub i64 %78, %75
  %80 = ashr exact i64 %79, 3
  %81 = icmp eq i64 %79, 0
  %82 = mul i64 %80, 85
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = sub i64 1, %77
  %86 = sub i64 %85, %76
  %87 = add i64 %86, %84
  %88 = icmp ult i64 %87, 170
  br i1 %88, label %97, label %89

89:                                               ; preds = %73
  %90 = inttoptr i64 %78 to %"struct.re2::WalkState"**
  %91 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 -1
  %92 = bitcast %"struct.re2::WalkState"** %91 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #11
  %94 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %50, align 8
  %95 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %94, i64 -1
  store %"struct.re2::WalkState"** %95, %"struct.re2::WalkState"*** %50, align 8
  %96 = load i64, i64* %3, align 8
  br label %97

97:                                               ; preds = %73, %89
  %98 = phi i64 [ %74, %73 ], [ %96, %89 ]
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %53

100:                                              ; preds = %97, %6, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Regexp"* @_ZN3re26Regexp6WalkerIPS0_E12WalkInternalES2_S2_b(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.LogMessage, align 8
  %6 = alloca { %"class.re2::Regexp"*, %"class.re2::Regexp"* }, align 8
  %7 = alloca i8, align 1
  %8 = alloca { %"class.re2::Regexp"*, %"class.re2::Regexp"* }, align 8
  tail call void @_ZN3re26Regexp6WalkerIPS0_E5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %9 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %11) #10
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8**
  %21 = inttoptr i64 %17 to i8*
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = bitcast i8* %26 to i64*
  store i64 %19, i64* %27, align 8
  %28 = load i8*, i8** %20, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 %31
  %33 = bitcast i8* %32 to %"class.std::__1::ios_base"*
  %34 = bitcast %"class.std::__1::basic_stringbuf"* %15 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %33, i8* %34) #10
  %35 = getelementptr inbounds i8, i8* %32, i64 136
  %36 = bitcast i8* %35 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 144
  %38 = bitcast i8* %37 to i32*
  store i32 -1, i32* %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %41 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i64 42) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #10
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %45, i32 162) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i64 9) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %11) #10
  br label %335

49:                                               ; preds = %4
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %51 = bitcast { %"class.re2::Regexp"*, %"class.re2::Regexp"* }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %"struct.re2::WalkState"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"struct.re2::WalkState"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp eq i64 %58, 0
  %61 = mul i64 %59, 85
  %62 = add i64 %61, -1
  %63 = select i1 %60, i64 0, i64 %62
  %64 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %65
  %69 = icmp eq i64 %63, %68
  %70 = inttoptr i64 %57 to %"struct.re2::WalkState"**
  %71 = inttoptr i64 %54 to %"struct.re2::WalkState"**
  br i1 %69, label %72, label %79

72:                                               ; preds = %49
  %73 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %50, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %73) #10
  %74 = load i64, i64* %66, align 8
  %75 = load i64, i64* %64, align 8
  %76 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %77 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %78 = add i64 %75, %74
  br label %79

79:                                               ; preds = %72, %49
  %80 = phi i64 [ %78, %72 ], [ %68, %49 ]
  %81 = phi %"struct.re2::WalkState"** [ %77, %72 ], [ %71, %49 ]
  %82 = phi %"struct.re2::WalkState"** [ %76, %72 ], [ %70, %49 ]
  %83 = icmp eq %"struct.re2::WalkState"** %81, %82
  br i1 %83, label %91, label %84

84:                                               ; preds = %79
  %85 = udiv i64 %80, 85
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %82, i64 %85
  %87 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %86, align 8
  %88 = urem i64 %80, 85
  %89 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %87, i64 %88
  %90 = bitcast %"struct.re2::WalkState"* %89 to i8*
  br label %91

91:                                               ; preds = %79, %84
  %92 = phi i8* [ %90, %84 ], [ null, %79 ]
  %93 = bitcast i8* %92 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %93, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to i32*
  store i32 -1, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %92, i64 16
  %97 = bitcast i8* %96 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %2, %"class.re2::Regexp"** %97, align 8
  %98 = getelementptr inbounds i8, i8* %92, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %51, i64 16, i1 false)
  %99 = getelementptr inbounds i8, i8* %92, i64 40
  %100 = bitcast i8* %99 to %"class.re2::Regexp"***
  store %"class.re2::Regexp"** null, %"class.re2::Regexp"*** %100, align 8
  %101 = load i64, i64* %66, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51)
  %103 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 3
  %104 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)***
  %105 = bitcast { %"class.re2::Regexp"*, %"class.re2::Regexp"* }* %8 to i8*
  %106 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %50, i64 0, i32 0
  %107 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)***
  %108 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)***
  %109 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 2
  %110 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)***
  br label %111

111:                                              ; preds = %333, %91
  %112 = phi i64 [ %334, %333 ], [ %102, %91 ]
  %113 = load i64, i64* %64, align 8
  %114 = add i64 %112, -1
  %115 = add i64 %114, %113
  %116 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %117 = udiv i64 %115, 85
  %118 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %116, i64 %117
  %119 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %118, align 8
  %120 = urem i64 %115, 85
  %121 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 0
  %122 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %121, align 8
  %123 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %160

126:                                              ; preds = %111
  %127 = load i32, i32* %103, align 4
  %128 = add nsw i32 %127, -1
  store i32 %128, i32* %103, align 4
  %129 = icmp slt i32 %127, 1
  br i1 %129, label %130, label %137

130:                                              ; preds = %126
  store i8 1, i8* %109, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %132 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %131, align 8
  %133 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)**, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)*** %110, align 8
  %134 = getelementptr inbounds %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)** %133, i64 5
  %135 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*)** %134, align 8
  %136 = call %"class.re2::Regexp"* %135(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Regexp"* %132) #10
  br label %281

137:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 0, i8* %7, align 1
  %138 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %139 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %138, align 8
  %140 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)**, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)*** %104, align 8
  %141 = getelementptr inbounds %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)** %140, i64 2
  %142 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, i8*)** %141, align 8
  %143 = call %"class.re2::Regexp"* %142(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Regexp"* %139, i8* nonnull %7) #10
  %144 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  store %"class.re2::Regexp"* %143, %"class.re2::Regexp"** %144, align 8
  %145 = load i8, i8* %7, align 1, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %137
  store i32 0, i32* %123, align 8
  %148 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  store %"class.re2::Regexp"** null, %"class.re2::Regexp"*** %148, align 8
  %149 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 4
  %150 = load i16, i16* %149, align 2
  switch i16 %150, label %153 [
    i16 1, label %151
    i16 0, label %158
  ]

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 4
  store %"class.re2::Regexp"** %152, %"class.re2::Regexp"*** %148, align 8
  br label %158

153:                                              ; preds = %147
  %154 = zext i16 %150 to i64
  %155 = shl nuw nsw i64 %154, 3
  %156 = call i8* @_Znam(i64 %155) #11
  %157 = bitcast %"class.re2::Regexp"*** %148 to i8**
  store i8* %156, i8** %157, align 8
  br label %158

158:                                              ; preds = %147, %153, %151
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %160

159:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %281

160:                                              ; preds = %158, %111
  %161 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 4
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = load i32, i32* %123, align 8
  br label %262

166:                                              ; preds = %160
  %167 = icmp eq i16 %162, 1
  %168 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 5
  br i1 %167, label %169, label %171

169:                                              ; preds = %166
  %170 = bitcast %union.anon.1* %168 to %"class.re2::Regexp"**
  br label %174

171:                                              ; preds = %166
  %172 = getelementptr inbounds %union.anon.1, %union.anon.1* %168, i64 0, i32 0
  %173 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %172, align 8
  br label %174

174:                                              ; preds = %169, %171
  %175 = phi %"class.re2::Regexp"** [ %170, %169 ], [ %173, %171 ]
  %176 = load i32, i32* %123, align 8
  %177 = zext i16 %162 to i32
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %179, label %262

179:                                              ; preds = %174
  %180 = icmp sgt i32 %176, 0
  %181 = and i1 %180, %3
  br i1 %181, label %187, label %182

182:                                              ; preds = %179
  %183 = sext i32 %176 to i64
  %184 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %183
  %185 = bitcast %"class.re2::Regexp"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  br label %213

187:                                              ; preds = %179
  %188 = add nsw i32 %176, -1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %189
  %191 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %190, align 8
  %192 = sext i32 %176 to i64
  %193 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %192
  %194 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %193, align 8
  %195 = icmp eq %"class.re2::Regexp"* %191, %194
  br i1 %195, label %198, label %196

196:                                              ; preds = %187
  %197 = ptrtoint %"class.re2::Regexp"* %194 to i64
  br label %213

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  %200 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %199, align 8
  %201 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %200, i64 %189
  %202 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %201, align 8
  %203 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)**, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)*** %107, align 8
  %204 = getelementptr inbounds %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)** %203, i64 4
  %205 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*)** %204, align 8
  %206 = call %"class.re2::Regexp"* %205(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %202) #10
  %207 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %199, align 8
  %208 = load i32, i32* %123, align 8
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %207, i64 %209
  store %"class.re2::Regexp"* %206, %"class.re2::Regexp"** %210, align 8
  %211 = load i32, i32* %123, align 8
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %123, align 8
  br label %333

213:                                              ; preds = %196, %182
  %214 = phi i64 [ %186, %182 ], [ %197, %196 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105)
  %215 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  %216 = bitcast %"class.re2::Regexp"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %53, align 8
  %219 = load i64, i64* %56, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = icmp eq i64 %220, 0
  %223 = mul i64 %221, 85
  %224 = add i64 %223, -1
  %225 = select i1 %222, i64 0, i64 %224
  %226 = load i64, i64* %64, align 8
  %227 = load i64, i64* %66, align 8
  %228 = add i64 %227, %226
  %229 = icmp eq i64 %225, %228
  %230 = inttoptr i64 %219 to %"struct.re2::WalkState"**
  %231 = inttoptr i64 %218 to %"struct.re2::WalkState"**
  br i1 %229, label %232, label %238

232:                                              ; preds = %213
  call void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %106) #10
  %233 = load i64, i64* %66, align 8
  %234 = load i64, i64* %64, align 8
  %235 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %236 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %237 = add i64 %234, %233
  br label %238

238:                                              ; preds = %232, %213
  %239 = phi i64 [ %237, %232 ], [ %228, %213 ]
  %240 = phi %"struct.re2::WalkState"** [ %236, %232 ], [ %231, %213 ]
  %241 = phi %"struct.re2::WalkState"** [ %235, %232 ], [ %230, %213 ]
  %242 = icmp eq %"struct.re2::WalkState"** %240, %241
  br i1 %242, label %250, label %243

243:                                              ; preds = %238
  %244 = udiv i64 %239, 85
  %245 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %241, i64 %244
  %246 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %245, align 8
  %247 = urem i64 %239, 85
  %248 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %246, i64 %247
  %249 = bitcast %"struct.re2::WalkState"* %248 to i8*
  br label %250

250:                                              ; preds = %238, %243
  %251 = phi i8* [ %249, %243 ], [ null, %238 ]
  %252 = bitcast i8* %251 to i64*
  store i64 %214, i64* %252, align 8
  %253 = getelementptr inbounds i8, i8* %251, i64 8
  %254 = bitcast i8* %253 to i32*
  store i32 -1, i32* %254, align 8
  %255 = getelementptr inbounds i8, i8* %251, i64 16
  %256 = bitcast i8* %255 to i64*
  store i64 %217, i64* %256, align 8
  %257 = getelementptr inbounds i8, i8* %251, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* nonnull align 8 %105, i64 16, i1 false)
  %258 = getelementptr inbounds i8, i8* %251, i64 40
  %259 = bitcast i8* %258 to %"class.re2::Regexp"***
  store %"class.re2::Regexp"** null, %"class.re2::Regexp"*** %259, align 8
  %260 = load i64, i64* %66, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105)
  br label %333

262:                                              ; preds = %164, %174
  %263 = phi i32 [ %165, %164 ], [ %176, %174 ]
  %264 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %265 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %264, align 8
  %266 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  %267 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %266, align 8
  %268 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  %269 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %268, align 8
  %270 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)**, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)*** %108, align 8
  %271 = getelementptr inbounds %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)** %270, i64 3
  %272 = load %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)*, %"class.re2::Regexp"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"*, %"class.re2::Regexp"**, i32)** %271, align 8
  %273 = call %"class.re2::Regexp"* %272(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Regexp"* %265, %"class.re2::Regexp"* %267, %"class.re2::Regexp"** %269, i32 %263) #10
  %274 = load i16, i16* %161, align 2
  %275 = icmp ugt i16 %274, 1
  br i1 %275, label %276, label %281

276:                                              ; preds = %262
  %277 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %268, align 8
  %278 = icmp eq %"class.re2::Regexp"** %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = bitcast %"class.re2::Regexp"** %277 to i8*
  call void @_ZdaPv(i8* %280) #11
  br label %281

281:                                              ; preds = %159, %262, %279, %276, %130
  %282 = phi %"class.re2::Regexp"* [ %136, %130 ], [ %273, %276 ], [ %273, %279 ], [ %273, %262 ], [ %143, %159 ]
  %283 = load i64, i64* %66, align 8
  %284 = load i64, i64* %64, align 8
  %285 = add i64 %283, -1
  store i64 %285, i64* %66, align 8
  %286 = load i64, i64* %53, align 8
  %287 = load i64, i64* %56, align 8
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 3
  %290 = icmp eq i64 %288, 0
  %291 = mul i64 %289, 85
  %292 = add i64 %291, -1
  %293 = select i1 %290, i64 0, i64 %292
  %294 = sub i64 1, %283
  %295 = sub i64 %294, %284
  %296 = add i64 %295, %293
  %297 = icmp ult i64 %296, 170
  br i1 %297, label %306, label %298

298:                                              ; preds = %281
  %299 = inttoptr i64 %286 to %"struct.re2::WalkState"**
  %300 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %299, i64 -1
  %301 = bitcast %"struct.re2::WalkState"** %300 to i8**
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #11
  %303 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %304 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %303, i64 -1
  store %"struct.re2::WalkState"** %304, %"struct.re2::WalkState"*** %52, align 8
  %305 = load i64, i64* %66, align 8
  br label %306

306:                                              ; preds = %281, %298
  %307 = phi i64 [ %285, %281 ], [ %305, %298 ]
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %335, label %309

309:                                              ; preds = %306
  %310 = load i64, i64* %64, align 8
  %311 = add i64 %307, -1
  %312 = add i64 %311, %310
  %313 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %314 = udiv i64 %312, 85
  %315 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %313, i64 %314
  %316 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %315, align 8
  %317 = urem i64 %312, 85
  %318 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 5
  %319 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %318, align 8
  %320 = icmp eq %"class.re2::Regexp"** %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %309
  %322 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 1
  %323 = load i32, i32* %322, align 8
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %319, i64 %324
  br label %328

326:                                              ; preds = %309
  %327 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 4
  br label %328

328:                                              ; preds = %326, %321
  %329 = phi %"class.re2::Regexp"** [ %327, %326 ], [ %325, %321 ]
  store %"class.re2::Regexp"* %282, %"class.re2::Regexp"** %329, align 8
  %330 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 1
  %331 = load i32, i32* %330, align 8
  %332 = add nsw i32 %331, 1
  store i32 %332, i32* %330, align 8
  br label %333

333:                                              ; preds = %198, %250, %328
  %334 = load i64, i64* %66, align 8
  br label %111

335:                                              ; preds = %306, %10
  %336 = phi %"class.re2::Regexp"* [ %2, %10 ], [ %282, %306 ]
  ret %"class.re2::Regexp"* %336
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.re2::WalkState"*, align 8
  %3 = alloca %"struct.re2::WalkState"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.30", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 84
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -85
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = bitcast %"struct.re2::WalkState"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  store %"struct.re2::WalkState"** %14, %"struct.re2::WalkState"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %17, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %16, %18
  %20 = ptrtoint %"struct.re2::WalkState"** %18 to i64
  %21 = bitcast %"struct.re2::WalkState"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  %25 = icmp ugt %"struct.re2::WalkState"** %14, %24
  %26 = ptrtoint %"struct.re2::WalkState"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %14, i64 %32
  %34 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.re2::WalkState"** %33 to i8*
  %40 = bitcast %"struct.re2::WalkState"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.re2::WalkState"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  store %"struct.re2::WalkState"** %44, %"struct.re2::WalkState"*** %15, align 8
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %43, i64 %32
  store %"struct.re2::WalkState"** %45, %"struct.re2::WalkState"*** %10, align 8
  %46 = bitcast %"struct.re2::WalkState"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.re2::WalkState"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"struct.re2::WalkState"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %57
  %63 = ptrtoint %"struct.re2::WalkState"** %62 to i64
  %64 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %53
  %65 = ptrtoint %"struct.re2::WalkState"** %64 to i64
  %66 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %67 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.re2::WalkState"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.re2::WalkState"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.re2::WalkState"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %79, i64 1
  %87 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  %88 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !5

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.re2::WalkState"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.re2::WalkState"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.re2::WalkState"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.re2::WalkState"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 1
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 1
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 2
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 2
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 3
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 3
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 4
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 4
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 5
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 5
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 6
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 6
  %132 = bitcast %"struct.re2::WalkState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.re2::WalkState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 7
  %136 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 7
  %137 = bitcast %"struct.re2::WalkState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.re2::WalkState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 8
  %141 = ptrtoint %"struct.re2::WalkState"** %140 to i64
  %142 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 8
  %143 = icmp eq %"struct.re2::WalkState"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.re2::WalkState"** %70 to i64
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.re2::WalkState"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.re2::WalkState"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.re2::WalkState"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"struct.re2::WalkState"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %160, i64 1
  store %"struct.re2::WalkState"** %161, %"struct.re2::WalkState"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.re2::WalkState"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.re2::WalkState"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.re2::WalkState"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.re2::WalkState"**
  %181 = inttoptr i64 %169 to %"struct.re2::WalkState"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.re2::WalkState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4080) #11
  %187 = bitcast %"struct.re2::WalkState"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.re2::WalkState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4080) #11
  %191 = bitcast %"struct.re2::WalkState"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %193 = bitcast %"struct.re2::WalkState"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %192, i64 1
  store %"struct.re2::WalkState"** %195, %"struct.re2::WalkState"*** %167, align 8
  %196 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %197 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %172, align 8
  %198 = icmp eq %"struct.re2::WalkState"** %196, %197
  %199 = ptrtoint %"struct.re2::WalkState"** %197 to i64
  %200 = bitcast %"struct.re2::WalkState"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  %204 = icmp ugt %"struct.re2::WalkState"** %195, %203
  %205 = ptrtoint %"struct.re2::WalkState"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %195, i64 %211
  %213 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.re2::WalkState"** %212 to i8*
  %219 = bitcast %"struct.re2::WalkState"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.re2::WalkState"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %212, i64 %215
  store %"struct.re2::WalkState"** %223, %"struct.re2::WalkState"*** %164, align 8
  %224 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %222, i64 %211
  store %"struct.re2::WalkState"** %224, %"struct.re2::WalkState"*** %167, align 8
  %225 = bitcast %"struct.re2::WalkState"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"struct.re2::WalkState"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %234
  %240 = ptrtoint %"struct.re2::WalkState"** %239 to i64
  %241 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %230
  %242 = ptrtoint %"struct.re2::WalkState"** %241 to i64
  %243 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %244 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.re2::WalkState"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.re2::WalkState"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.re2::WalkState"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %256, i64 1
  %264 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  %265 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !6

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.re2::WalkState"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.re2::WalkState"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.re2::WalkState"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.re2::WalkState"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.re2::WalkState"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 1
  %283 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 1
  %284 = bitcast %"struct.re2::WalkState"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.re2::WalkState"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 2
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 2
  %289 = bitcast %"struct.re2::WalkState"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.re2::WalkState"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 3
  %293 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 3
  %294 = bitcast %"struct.re2::WalkState"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.re2::WalkState"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 4
  %298 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 4
  %299 = bitcast %"struct.re2::WalkState"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.re2::WalkState"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 5
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 5
  %304 = bitcast %"struct.re2::WalkState"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.re2::WalkState"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 6
  %308 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 6
  %309 = bitcast %"struct.re2::WalkState"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.re2::WalkState"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 7
  %313 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 7
  %314 = bitcast %"struct.re2::WalkState"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.re2::WalkState"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 8
  %318 = ptrtoint %"struct.re2::WalkState"** %317 to i64
  %319 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 8
  %320 = icmp eq %"struct.re2::WalkState"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.re2::WalkState"** %247 to i64
  %323 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.re2::WalkState"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.re2::WalkState"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.re2::WalkState"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"struct.re2::WalkState"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %336 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %335, i64 1
  store %"struct.re2::WalkState"** %336, %"struct.re2::WalkState"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.re2::WalkState"** null, %"struct.re2::WalkState"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.18"** %342 to %"class.std::__1::__compressed_pair.15"**
  store %"class.std::__1::__compressed_pair.15"* %346, %"class.std::__1::__compressed_pair.15"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"struct.re2::WalkState"**
  %355 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %171
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %339, align 8
  %357 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %345
  store %"struct.re2::WalkState"** %357, %"struct.re2::WalkState"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4080) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.re2::WalkState"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.re2::WalkState"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.re2::WalkState"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %356, i64 %370
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %339, align 8
  %372 = ptrtoint %"struct.re2::WalkState"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i64*
  %382 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"struct.re2::WalkState"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %383
  %389 = ptrtoint %"struct.re2::WalkState"** %388 to i64
  %390 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %377
  %391 = ptrtoint %"struct.re2::WalkState"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %395 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %396 = ptrtoint %"struct.re2::WalkState"** %395 to i64
  %397 = ptrtoint %"struct.re2::WalkState"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.re2::WalkState"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.re2::WalkState"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.re2::WalkState"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.re2::WalkState"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %406, i64 1
  store %"struct.re2::WalkState"** %408, %"struct.re2::WalkState"*** %340, align 8
  %409 = icmp eq %"struct.re2::WalkState"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.re2::WalkState"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i64*
  %413 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %414 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %415 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.re2::WalkState"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.30"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.re2::WalkState"**
  %441 = inttoptr i64 %434 to %"struct.re2::WalkState"**
  %442 = icmp eq %"struct.re2::WalkState"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 -1
  %445 = ptrtoint %"struct.re2::WalkState"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 %448
  store %"struct.re2::WalkState"** %449, %"struct.re2::WalkState"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.re2::WalkState"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEERNS_9allocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.30"* nonnull %4, %"struct.re2::WalkState"** dereferenceable(8) %457)
  %458 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %459 = icmp eq %"struct.re2::WalkState"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  %9 = bitcast %"struct.re2::WalkState"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  %15 = icmp ugt %"struct.re2::WalkState"** %12, %14
  %16 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %12, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.re2::WalkState"** %23 to i8*
  %30 = bitcast %"struct.re2::WalkState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.re2::WalkState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %26
  store %"struct.re2::WalkState"** %34, %"struct.re2::WalkState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %22
  store %"struct.re2::WalkState"** %35, %"struct.re2::WalkState"*** %11, align 8
  %36 = bitcast %"struct.re2::WalkState"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.re2::WalkState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"struct.re2::WalkState"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %47
  %53 = ptrtoint %"struct.re2::WalkState"** %52 to i64
  %54 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %43
  %55 = ptrtoint %"struct.re2::WalkState"** %54 to i64
  %56 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.re2::WalkState"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.re2::WalkState"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.re2::WalkState"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %69, i64 1
  %77 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  %78 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !7

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.re2::WalkState"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.re2::WalkState"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.re2::WalkState"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.re2::WalkState"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.re2::WalkState"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 1
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 1
  %97 = bitcast %"struct.re2::WalkState"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.re2::WalkState"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 2
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 2
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.re2::WalkState"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 3
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 3
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 4
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 4
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 5
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 5
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 6
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 6
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 7
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 7
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 8
  %131 = ptrtoint %"struct.re2::WalkState"** %130 to i64
  %132 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 8
  %133 = icmp eq %"struct.re2::WalkState"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.re2::WalkState"** %60 to i64
  %136 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.re2::WalkState"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.re2::WalkState"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.re2::WalkState"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.re2::WalkState"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"struct.re2::WalkState"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %152, i64 1
  store %"struct.re2::WalkState"** %153, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !8

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_6RegexpEEERNS_9allocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.30"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.30"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !9

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { cold nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
!9 = distinct !{!9, !4}
