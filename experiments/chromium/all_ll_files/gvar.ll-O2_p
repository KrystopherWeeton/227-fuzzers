; ModuleID = '../../third_party/ots/src/src/gvar.cc'
source_filename = "../../third_party/ots/src/src/gvar.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeGVAR" = type { %"class.ots::Table.base", i8*, i64 }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OpenTypeFVAR" = type <{ %"class.ots::Table.base", i8, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i8], %"class.std::__1::vector", %"class.std::__1::vector.29", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"class.std::__1::__compressed_pair.24" }
%"struct.ots::OpenTypeFVAR::VariationAxisRecord" = type { i32, i32, i32, i32, i16, i16 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"class.std::__1::__compressed_pair.38" }
%"struct.ots::OpenTypeFVAR::InstanceRecord" = type <{ i16, i16, [4 x i8], %"class.std::__1::vector.31", i16, [6 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"* }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots5TableD2Ev = comdat any

$_ZN3ots12OpenTypeGVARD0Ev = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Unknown table version\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Required fvar table is missing\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Axis count mismatch\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Required maxp table is missing\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Glyph count mismatch\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Invalid sharedTuplesOffset\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"Failed to parse shared tuples\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Invalid glyphVariationDataArrayOffset\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"Failed to read glyph variation data array\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"Failed to write gvar table\00", align 1
@_ZTVN3ots12OpenTypeGVARE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::Table"*)* @_ZN3ots5TableD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeGVAR"*)* @_ZN3ots12OpenTypeGVARD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGVAR"*, i8*, i64)* @_ZN3ots12OpenTypeGVAR5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGVAR"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeGVAR9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [45 x i8] c"gvar: Failed to read shared tuple coordinate\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"gvar: Failed to read GlyphVariationData offset\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"gvar: Invalid GlyphVariationData offset\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"gvar: Failed to parse GlyphVariationData\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGVAR5ParseEPKhm(%"class.ots::OpenTypeGVAR"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 2
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %1 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = icmp ult i64 %2, 6
  br i1 %8, label %38, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %1, i64 4
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #6
  %14 = icmp ult i64 %2, 8
  br i1 %14, label %38, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %1, i64 6
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #6
  %20 = icmp ult i64 %2, 12
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #6
  %26 = icmp ult i64 %2, 14
  br i1 %26, label %38, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %1, i64 12
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #6
  %32 = icmp ult i64 %2, 16
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %1, i64 14
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = icmp ult i64 %2, 20
  br i1 %37, label %38, label %41

38:                                               ; preds = %5, %33, %27, %21, %15, %9, %3
  %39 = bitcast %"class.ots::OpenTypeGVAR"* %0 to %"class.ots::Table"*
  %40 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #6
  br label %216

41:                                               ; preds = %33
  %42 = getelementptr inbounds i8, i8* %1, i64 16
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = tail call i32 @llvm.bswap.i32(i32 %44) #6
  %46 = icmp eq i16 %7, 256
  %47 = bitcast %"class.ots::OpenTypeGVAR"* %0 to %"class.ots::Table"*
  br i1 %46, label %50, label %48

48:                                               ; preds = %41
  %49 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %216

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.ots::OpenTypeGVAR", %"class.ots::OpenTypeGVAR"* %0, i64 0, i32 0, i32 3
  %52 = load %"struct.ots::Font"*, %"struct.ots::Font"** %51, align 8
  %53 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %52, i32 1719034226) #6
  %54 = icmp eq %"class.ots::Table"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %216

57:                                               ; preds = %50
  %58 = bitcast %"class.ots::Table"* %53 to %"class.ots::OpenTypeFVAR"*
  %59 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %58, i64 0, i32 6
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %13, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %216

64:                                               ; preds = %57
  %65 = load %"struct.ots::Font"*, %"struct.ots::Font"** %51, align 8
  %66 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %65, i32 1835104368) #6
  %67 = icmp eq %"class.ots::Table"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %216

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %66, i64 0, i32 5, i64 1
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %31, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %216

77:                                               ; preds = %70
  %78 = icmp eq i16 %18, 0
  br i1 %78, label %119, label %79

79:                                               ; preds = %77
  %80 = zext i32 %25 to i64
  %81 = icmp ult i32 %25, 20
  %82 = icmp ugt i64 %80, %2
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %216

86:                                               ; preds = %79
  %87 = load %"struct.ots::Font"*, %"struct.ots::Font"** %51, align 8
  %88 = sub i64 %2, %80
  %89 = zext i16 %19 to i64
  %90 = zext i16 %13 to i64
  %91 = icmp eq i16 %12, 0
  br label %92

92:                                               ; preds = %104, %86
  %93 = phi i32 [ 0, %86 ], [ %106, %104 ]
  %94 = phi i64 [ 0, %86 ], [ %105, %104 ]
  br i1 %91, label %104, label %98

95:                                               ; preds = %98
  %96 = zext i32 %103 to i64
  %97 = icmp ult i64 %96, %90
  br i1 %97, label %98, label %104

98:                                               ; preds = %92, %95
  %99 = phi i32 [ %103, %95 ], [ 0, %92 ]
  %100 = phi i64 [ %101, %95 ], [ %94, %92 ]
  %101 = add i64 %100, 2
  %102 = icmp ugt i64 %101, %88
  %103 = add i32 %99, 1
  br i1 %102, label %109, label %95

104:                                              ; preds = %95, %92
  %105 = phi i64 [ %94, %92 ], [ %101, %95 ]
  %106 = add i32 %93, 1
  %107 = zext i32 %106 to i64
  %108 = icmp ult i64 %107, %89
  br i1 %108, label %92, label %119

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"struct.ots::Font", %"struct.ots::Font"* %87, i64 0, i32 0
  %111 = load %"struct.ots::FontFile"*, %"struct.ots::FontFile"** %110, align 8
  %112 = getelementptr inbounds %"struct.ots::FontFile", %"struct.ots::FontFile"* %111, i64 0, i32 0
  %113 = load %"class.ots::OTSContext"*, %"class.ots::OTSContext"** %112, align 8
  %114 = bitcast %"class.ots::OTSContext"* %113 to void (%"class.ots::OTSContext"*, i32, i8*, ...)***
  %115 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)**, void (%"class.ots::OTSContext"*, i32, i8*, ...)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %115, i64 2
  %117 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %116, align 8
  tail call void (%"class.ots::OTSContext"*, i32, i8*, ...) %117(%"class.ots::OTSContext"* %113, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #6
  %118 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %216

119:                                              ; preds = %104, %77
  %120 = icmp eq i32 %44, 0
  br i1 %120, label %213, label %121

121:                                              ; preds = %119
  %122 = zext i32 %45 to i64
  %123 = icmp ugt i64 %122, %2
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %216

126:                                              ; preds = %121
  %127 = load %"struct.ots::Font"*, %"struct.ots::Font"** %51, align 8
  %128 = getelementptr inbounds i8, i8* %1, i64 20
  %129 = add i64 %2, -20
  %130 = zext i16 %31 to i64
  %131 = zext i16 %13 to i64
  %132 = zext i16 %19 to i64
  %133 = getelementptr inbounds i8, i8* %1, i64 %122
  %134 = sub i64 %2, %122
  %135 = and i16 %36, 256
  %136 = icmp eq i16 %135, 0
  br label %137

137:                                              ; preds = %208, %126
  %138 = phi i64 [ %209, %208 ], [ 0, %126 ]
  %139 = phi i32 [ %179, %208 ], [ 0, %126 ]
  %140 = phi i64 [ %178, %208 ], [ 0, %126 ]
  br i1 %136, label %158, label %141

141:                                              ; preds = %137
  %142 = add i64 %140, 4
  %143 = icmp ugt i64 %142, %129
  br i1 %143, label %149, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds i8, i8* %128, i64 %140
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 1
  %148 = tail call i32 @llvm.bswap.i32(i32 %147) #6
  br label %177

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"struct.ots::Font", %"struct.ots::Font"* %127, i64 0, i32 0
  %151 = load %"struct.ots::FontFile"*, %"struct.ots::FontFile"** %150, align 8
  %152 = getelementptr inbounds %"struct.ots::FontFile", %"struct.ots::FontFile"* %151, i64 0, i32 0
  %153 = load %"class.ots::OTSContext"*, %"class.ots::OTSContext"** %152, align 8
  %154 = bitcast %"class.ots::OTSContext"* %153 to void (%"class.ots::OTSContext"*, i32, i8*, ...)***
  %155 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)**, void (%"class.ots::OTSContext"*, i32, i8*, ...)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %155, i64 2
  %157 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %156, align 8
  tail call void (%"class.ots::OTSContext"*, i32, i8*, ...) %157(%"class.ots::OTSContext"* %153, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %211

158:                                              ; preds = %137
  %159 = add i64 %140, 2
  %160 = icmp ugt i64 %159, %129
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %128, i64 %140
  %163 = bitcast i8* %162 to i16*
  %164 = load i16, i16* %163, align 1
  %165 = tail call i16 @llvm.bswap.i16(i16 %164) #6
  %166 = zext i16 %165 to i32
  %167 = shl nuw nsw i32 %166, 1
  br label %177

168:                                              ; preds = %158
  %169 = getelementptr inbounds %"struct.ots::Font", %"struct.ots::Font"* %127, i64 0, i32 0
  %170 = load %"struct.ots::FontFile"*, %"struct.ots::FontFile"** %169, align 8
  %171 = getelementptr inbounds %"struct.ots::FontFile", %"struct.ots::FontFile"* %170, i64 0, i32 0
  %172 = load %"class.ots::OTSContext"*, %"class.ots::OTSContext"** %171, align 8
  %173 = bitcast %"class.ots::OTSContext"* %172 to void (%"class.ots::OTSContext"*, i32, i8*, ...)***
  %174 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)**, void (%"class.ots::OTSContext"*, i32, i8*, ...)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %174, i64 2
  %176 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %175, align 8
  tail call void (%"class.ots::OTSContext"*, i32, i8*, ...) %176(%"class.ots::OTSContext"* %172, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %211

177:                                              ; preds = %161, %144
  %178 = phi i64 [ %142, %144 ], [ %159, %161 ]
  %179 = phi i32 [ %148, %144 ], [ %167, %161 ]
  %180 = icmp ne i64 %138, 0
  %181 = icmp ugt i32 %179, %139
  %182 = and i1 %180, %181
  br i1 %182, label %183, label %208

183:                                              ; preds = %177
  %184 = zext i32 %139 to i64
  %185 = icmp ult i64 %134, %184
  br i1 %185, label %186, label %195

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"struct.ots::Font", %"struct.ots::Font"* %127, i64 0, i32 0
  %188 = load %"struct.ots::FontFile"*, %"struct.ots::FontFile"** %187, align 8
  %189 = getelementptr inbounds %"struct.ots::FontFile", %"struct.ots::FontFile"* %188, i64 0, i32 0
  %190 = load %"class.ots::OTSContext"*, %"class.ots::OTSContext"** %189, align 8
  %191 = bitcast %"class.ots::OTSContext"* %190 to void (%"class.ots::OTSContext"*, i32, i8*, ...)***
  %192 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)**, void (%"class.ots::OTSContext"*, i32, i8*, ...)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %192, i64 2
  %194 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %193, align 8
  tail call void (%"class.ots::OTSContext"*, i32, i8*, ...) %194(%"class.ots::OTSContext"* %190, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #6
  br label %211

195:                                              ; preds = %183
  %196 = getelementptr inbounds i8, i8* %133, i64 %184
  %197 = sub i64 %134, %184
  %198 = tail call zeroext i1 @_ZN3ots18ParseVariationDataEPKNS_4FontEPKhmmm(%"struct.ots::Font"* %127, i8* %196, i64 %197, i64 %131, i64 %132) #6
  br i1 %198, label %208, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.ots::Font", %"struct.ots::Font"* %127, i64 0, i32 0
  %201 = load %"struct.ots::FontFile"*, %"struct.ots::FontFile"** %200, align 8
  %202 = getelementptr inbounds %"struct.ots::FontFile", %"struct.ots::FontFile"* %201, i64 0, i32 0
  %203 = load %"class.ots::OTSContext"*, %"class.ots::OTSContext"** %202, align 8
  %204 = bitcast %"class.ots::OTSContext"* %203 to void (%"class.ots::OTSContext"*, i32, i8*, ...)***
  %205 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)**, void (%"class.ots::OTSContext"*, i32, i8*, ...)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %205, i64 2
  %207 = load void (%"class.ots::OTSContext"*, i32, i8*, ...)*, void (%"class.ots::OTSContext"*, i32, i8*, ...)** %206, align 8
  tail call void (%"class.ots::OTSContext"*, i32, i8*, ...) %207(%"class.ots::OTSContext"* %203, i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0)) #6
  br label %211

208:                                              ; preds = %195, %177
  %209 = add nuw nsw i64 %138, 1
  %210 = icmp eq i64 %138, %130
  br i1 %210, label %213, label %137

211:                                              ; preds = %186, %199, %149, %168
  %212 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %47, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0)) #6
  br label %216

213:                                              ; preds = %208, %119
  %214 = getelementptr inbounds %"class.ots::OpenTypeGVAR", %"class.ots::OpenTypeGVAR"* %0, i64 0, i32 1
  store i8* %1, i8** %214, align 8
  %215 = getelementptr inbounds %"class.ots::OpenTypeGVAR", %"class.ots::OpenTypeGVAR"* %0, i64 0, i32 2
  store i64 %2, i64* %215, align 8
  br label %216

216:                                              ; preds = %55, %62, %213, %211, %124, %109, %84, %75, %68, %48, %38
  %217 = phi i1 [ %49, %48 ], [ %40, %38 ], [ %63, %62 ], [ %56, %55 ], [ %76, %75 ], [ %85, %84 ], [ %125, %124 ], [ true, %213 ], [ %212, %211 ], [ %118, %109 ], [ %69, %68 ]
  ret i1 %217
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGVAR9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeGVAR"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ots::OpenTypeGVAR", %"class.ots::OpenTypeGVAR"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.ots::OpenTypeGVAR", %"class.ots::OpenTypeGVAR"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %113, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %12 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %12, i64 4
  %14 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %13, align 8
  %15 = tail call i64 %14(%"class.ots::OTSStream"* %1) #6
  %16 = and i64 %15, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = sub nuw nsw i64 4, %16
  %20 = icmp ult i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  %22 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #6
  store i32 0, i32* %3, align 4
  %23 = getelementptr inbounds i8, i8* %22, i64 %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %6, i64 %21, i1 false) #6
  %24 = load i32, i32* %3, align 4
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #6
  %26 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, %25
  store i32 %28, i32* %26, align 8
  %29 = sub i64 %8, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #6
  br label %30

30:                                               ; preds = %18, %10
  %31 = phi i64 [ %8, %10 ], [ %29, %18 ]
  %32 = phi i64 [ 0, %10 ], [ %21, %18 ]
  %33 = icmp ugt i64 %31, 3
  br i1 %33, label %34, label %95

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = add i64 %31, -4
  %38 = lshr i64 %37, 2
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %34, %42
  %43 = phi i32 [ %51, %42 ], [ %36, %34 ]
  %44 = phi i64 [ %53, %42 ], [ %32, %34 ]
  %45 = phi i64 [ %52, %42 ], [ %31, %34 ]
  %46 = phi i64 [ %54, %42 ], [ %40, %34 ]
  %47 = getelementptr inbounds i8, i8* %6, i64 %44
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #6
  %51 = add i32 %50, %43
  store i32 %51, i32* %35, align 8
  %52 = add i64 %45, -4
  %53 = add i64 %44, 4
  %54 = add i64 %46, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %42, !llvm.loop !2

56:                                               ; preds = %42, %34
  %57 = phi i32 [ %36, %34 ], [ %51, %42 ]
  %58 = phi i64 [ %32, %34 ], [ %53, %42 ]
  %59 = phi i64 [ %31, %34 ], [ %52, %42 ]
  %60 = phi i64 [ undef, %34 ], [ %53, %42 ]
  %61 = icmp ult i64 %37, 12
  br i1 %61, label %92, label %62

62:                                               ; preds = %56, %62
  %63 = phi i32 [ %88, %62 ], [ %57, %56 ]
  %64 = phi i64 [ %90, %62 ], [ %58, %56 ]
  %65 = phi i64 [ %89, %62 ], [ %59, %56 ]
  %66 = getelementptr inbounds i8, i8* %6, i64 %64
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = tail call i32 @llvm.bswap.i32(i32 %68) #6
  %70 = add i32 %69, %63
  store i32 %70, i32* %35, align 8
  %71 = add i64 %64, 4
  %72 = getelementptr inbounds i8, i8* %6, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  %75 = tail call i32 @llvm.bswap.i32(i32 %74) #6
  %76 = add i32 %75, %70
  store i32 %76, i32* %35, align 8
  %77 = add i64 %64, 8
  %78 = getelementptr inbounds i8, i8* %6, i64 %77
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = tail call i32 @llvm.bswap.i32(i32 %80) #6
  %82 = add i32 %81, %76
  store i32 %82, i32* %35, align 8
  %83 = add i64 %64, 12
  %84 = getelementptr inbounds i8, i8* %6, i64 %83
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  %87 = tail call i32 @llvm.bswap.i32(i32 %86) #6
  %88 = add i32 %87, %82
  store i32 %88, i32* %35, align 8
  %89 = add i64 %65, -16
  %90 = add i64 %64, 16
  %91 = icmp ugt i64 %89, 3
  br i1 %91, label %62, label %92

92:                                               ; preds = %62, %56
  %93 = phi i64 [ %60, %56 ], [ %90, %62 ]
  %94 = and i64 %31, 3
  br label %95

95:                                               ; preds = %92, %30
  %96 = phi i64 [ %31, %30 ], [ %94, %92 ]
  %97 = phi i64 [ %32, %30 ], [ %93, %92 ]
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 0, i32* %4, align 4
  %101 = getelementptr inbounds i8, i8* %6, i64 %97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 1 %101, i64 %96, i1 false) #6
  %102 = load i32, i32* %4, align 4
  %103 = tail call i32 @llvm.bswap.i32(i32 %102) #6
  %104 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, %103
  store i32 %106, i32* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  br label %107

107:                                              ; preds = %95, %99
  %108 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %109 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %109, i64 2
  %111 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.ots::OTSStream"* %1, i8* %6, i64 %8) #6
  br i1 %112, label %116, label %113

113:                                              ; preds = %2, %107
  %114 = bitcast %"class.ots::OpenTypeGVAR"* %0 to %"class.ots::Table"*
  %115 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %114, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #6
  br label %116

116:                                              ; preds = %107, %113
  %117 = phi i1 [ %115, %113 ], [ true, %107 ]
  ret i1 %117
}

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots5TableD2Ev(%"class.ots::Table"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGVARD0Ev(%"class.ots::OpenTypeGVAR"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ots::OpenTypeGVAR"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3ots18ParseVariationDataEPKNS_4FontEPKhmmm(%"struct.ots::Font"*, i8*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
