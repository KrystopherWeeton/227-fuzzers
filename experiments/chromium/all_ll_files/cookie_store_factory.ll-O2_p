; ModuleID = '../../content/browser/net/cookie_store_factory.cc'
source_filename = "../../content/browser/net/cookie_store_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.content::CookieStoreConfig" = type { %"class.base::FilePath", i8, i8, %"class.net::CookieCryptoDelegate"*, %class.scoped_refptr, %class.scoped_refptr, %"class.std::__1::vector" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::CookieCryptoDelegate" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.net::CookieStore" = type { i32 (...)**, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.net::CookieAccessDelegate"* }
%"class.net::CookieAccessDelegate" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.16", %"class.std::__1::vector.23" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.18" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.25" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"class.base::OnceCallback.84" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.73", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.73" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::CookieMonster" = type { %"class.net::CookieStore", %"class.std::__1::set", i64, %"class.std::__1::multimap", %"class.net::CookieMonsterChangeDispatcher", i8, i8, i8, %"class.std::__1::set", %"class.std::__1::map.63", %"class.base::circular_deque", i8, %"class.net::NetLogWithSource", %class.scoped_refptr.74, %"class.base::TimeDelta", %"class.base::Time", %"class.std::__1::vector", %"class.base::Time", i8, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.77" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"class.net::CookieMonsterChangeDispatcher" = type { %"class.net::CookieChangeDispatcher", %"class.net::CookieMonster"*, %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.net::CookieChangeDispatcher" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.48" }
%"class.std::__1::__tree.48" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.57", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.58" }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::map.63" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.74 = type { %"class.net::CookieMonster::PersistentCookieStore"* }
%"class.net::CookieMonster::PersistentCookieStore" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.75", [4 x i8] }>
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.76" }
%"class.base::time_internal::TimeBase.76" = type { i64 }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.77" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.net::SQLitePersistentCookieStore" = type { %"class.net::CookieMonster::PersistentCookieStore.base", %class.scoped_refptr.83, %"class.net::NetLogWithSource" }
%"class.net::CookieMonster::PersistentCookieStore.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.75" }>
%class.scoped_refptr.83 = type { %"class.net::SQLitePersistentCookieStore::Backend"* }
%"class.net::SQLitePersistentCookieStore::Backend" = type opaque

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [50 x i8] c"../../content/browser/net/cookie_store_factory.cc\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"!path.empty() || (!restore_old_session_cookies && !persist_session_cookies)\00", align 1
@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1

@_ZN7content17CookieStoreConfigC1Ev = hidden unnamed_addr alias void (%"struct.content::CookieStoreConfig"*), void (%"struct.content::CookieStoreConfig"*)* @_ZN7content17CookieStoreConfigC2Ev
@_ZN7content17CookieStoreConfigC1ERKN4base8FilePathEbb = hidden unnamed_addr alias void (%"struct.content::CookieStoreConfig"*, %"class.base::FilePath"*, i1, i1), void (%"struct.content::CookieStoreConfig"*, %"class.base::FilePath"*, i1, i1)* @_ZN7content17CookieStoreConfigC2ERKN4base8FilePathEbb
@_ZN7content17CookieStoreConfigD1Ev = hidden unnamed_addr alias void (%"struct.content::CookieStoreConfig"*), void (%"struct.content::CookieStoreConfig"*)* @_ZN7content17CookieStoreConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17CookieStoreConfigC2Ev(%"struct.content::CookieStoreConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %2) #6
  %3 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 3
  %6 = bitcast %"class.net::CookieCryptoDelegate"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17CookieStoreConfigC2ERKN4base8FilePathEbb(%"struct.content::CookieStoreConfig"*, %"class.base::FilePath"* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i1 %2 to i8
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %8, %"class.base::FilePath"* dereferenceable(24) %1) #6
  %9 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 1
  store i8 %6, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 2
  store i8 %7, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 3
  %12 = bitcast %"class.base::FilePath"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast %"class.net::CookieCryptoDelegate"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 0
  %22 = or i1 %2, %3
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %27

24:                                               ; preds = %4
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0)) #6
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %27

27:                                               ; preds = %4, %24
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17CookieStoreConfigD2Ev(%"struct.content::CookieStoreConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #7
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 5, i32 0
  %30 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %29, align 8
  %31 = icmp eq %"class.base::SequencedTaskRunner"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %30, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %38 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %39) #6
  br label %40

40:                                               ; preds = %28, %32, %37
  %41 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 4, i32 0
  %42 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %41, align 8
  %43 = icmp eq %"class.base::SequencedTaskRunner"* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %42, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %50 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %51) #6
  br label %52

52:                                               ; preds = %40, %44, %49
  %53 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %53) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CookieStore"* @_ZN7content17CreateCookieStoreERKNS_17CookieStoreConfigEPN3net6NetLogE(%"struct.content::CookieStoreConfig"* dereferenceable(80), %"class.net::NetLog"*) local_unnamed_addr #0 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca %class.scoped_refptr, align 8
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"class.base::OnceCallback.84", align 8
  %7 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 0
  %8 = bitcast %"struct.content::CookieStoreConfig"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = tail call i8* @_Znwm(i64 328) #7
  %19 = bitcast i8* %18 to %"class.net::CookieMonster"*
  tail call void @_ZN3net13CookieMonsterC1E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE(%"class.net::CookieMonster"* nonnull %19, %"class.net::CookieMonster::PersistentCookieStore"* null, %"class.net::NetLog"* %1) #6
  br label %110

20:                                               ; preds = %2
  %21 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 4, i32 0
  %24 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %23, align 8
  store %"class.base::SequencedTaskRunner"* %24, %"class.base::SequencedTaskRunner"** %22, align 8
  %25 = icmp eq %"class.base::SequencedTaskRunner"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %24, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %class.scoped_refptr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 5, i32 0
  %33 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %32, align 8
  store %"class.base::SequencedTaskRunner"* %33, %"class.base::SequencedTaskRunner"** %31, align 8
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %29, %35
  br i1 %25, label %39, label %43

39:                                               ; preds = %38
  %40 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #6
  %41 = ptrtoint %"class.base::SingleThreadTaskRunner"* %40 to i64
  %42 = bitcast %class.scoped_refptr* %3 to i64*
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %39, %38
  br i1 %34, label %44, label %69

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %45) #6
  %46 = tail call zeroext i8 @_ZN3net40GetCookieStoreBackgroundSequencePriorityEv() #6
  store i8 0, i8* %45, align 1, !alias.scope !2
  %47 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 1, !alias.scope !2
  %49 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  store i8 %46, i8* %49, align 1
  %50 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  store i8 -126, i8* %50, align 1
  %51 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 4
  store i8 1, i8* %52, align 1
  %53 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 5
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 6
  store i8 0, i8* %54, align 1
  %55 = call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #6
  %56 = ptrtoint %"class.base::SequencedTaskRunner"* %55 to i64
  %57 = bitcast %class.scoped_refptr* %4 to i64*
  %58 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %31, align 8
  store i64 %56, i64* %57, align 8
  %59 = icmp eq %"class.base::SequencedTaskRunner"* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %58, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe"* %66 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %67) #6
  br label %68

68:                                               ; preds = %44, %60, %65
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %45) #6
  br label %69

69:                                               ; preds = %43, %68
  %70 = call i8* @_Znwm(i64 48) #7
  %71 = bitcast i8* %70 to %"class.net::SQLitePersistentCookieStore"*
  %72 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 1
  %73 = load i8, i8* %72, align 8, !range !5
  %74 = icmp ne i8 %73, 0
  %75 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 3
  %76 = load %"class.net::CookieCryptoDelegate"*, %"class.net::CookieCryptoDelegate"** %75, align 8
  call void @_ZN3net27SQLitePersistentCookieStoreC1ERKN4base8FilePathERK13scoped_refptrINS1_19SequencedTaskRunnerEES9_bPNS_20CookieCryptoDelegateE(%"class.net::SQLitePersistentCookieStore"* nonnull %71, %"class.base::FilePath"* dereferenceable(24) %7, %class.scoped_refptr* nonnull dereferenceable(8) %3, %class.scoped_refptr* nonnull dereferenceable(8) %4, i1 zeroext %74, %"class.net::CookieCryptoDelegate"* %76) #6
  %77 = getelementptr inbounds i8, i8* %70, i64 8
  %78 = bitcast i8* %77 to i32*
  %79 = atomicrmw add i32* %78, i32 1 monotonic
  %80 = call i8* @_Znwm(i64 328) #7
  %81 = bitcast i8* %80 to %"class.net::CookieMonster"*
  %82 = bitcast i8* %70 to %"class.net::CookieMonster::PersistentCookieStore"*
  call void @_ZN3net13CookieMonsterC1E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE(%"class.net::CookieMonster"* nonnull %81, %"class.net::CookieMonster::PersistentCookieStore"* nonnull %82, %"class.net::NetLog"* %1) #6
  %83 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 2
  %84 = load i8, i8* %83, align 1, !range !5
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %69
  call void @_ZN3net13CookieMonster24SetPersistSessionCookiesEb(%"class.net::CookieMonster"* nonnull %81, i1 zeroext true) #6
  br label %87

87:                                               ; preds = %86, %69
  %88 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %31, align 8
  %89 = icmp eq %"class.base::SequencedTaskRunner"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %88, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 -2
  %97 = bitcast %"class.base::RefCountedThreadSafe"* %96 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %97) #6
  br label %98

98:                                               ; preds = %87, %90, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6
  %99 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %100 = icmp eq %"class.base::SequencedTaskRunner"* %99, null
  br i1 %100, label %109, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %99, i64 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %102, i64 -2
  %108 = bitcast %"class.base::RefCountedThreadSafe"* %107 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %108) #6
  br label %109

109:                                              ; preds = %98, %101, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %110

110:                                              ; preds = %109, %17
  %111 = phi i8* [ %18, %17 ], [ %80, %109 ]
  %112 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 6
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %113, align 8
  %115 = getelementptr inbounds %"struct.content::CookieStoreConfig", %"struct.content::CookieStoreConfig"* %0, i64 0, i32 6, i32 0, i32 1
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %115, align 8
  %117 = icmp eq %"class.std::__1::basic_string"* %114, %116
  br i1 %117, label %128, label %118

118:                                              ; preds = %110
  %119 = bitcast i8* %111 to %"class.net::CookieMonster"*
  %120 = call i8* @_Znwm(i64 40) #7, !noalias !6
  %121 = bitcast i8* %120 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %121, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !6
  %122 = bitcast %"class.base::OnceCallback.84"* %6 to i8**
  store i8* %120, i8** %122, align 8, !alias.scope !6
  %123 = bitcast i8* %111 to void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)***
  %124 = load void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)**, void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)*, void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)** %124, i64 14
  %126 = load void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)*, void (%"class.net::CookieMonster"*, %"class.std::__1::vector"*, %"class.base::OnceCallback.84"*)** %125, align 8
  call void %126(%"class.net::CookieMonster"* %119, %"class.std::__1::vector"* dereferenceable(24) %112, %"class.base::OnceCallback.84"* nonnull %6) #6
  %127 = getelementptr inbounds %"class.base::OnceCallback.84", %"class.base::OnceCallback.84"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %127) #6
  br label %128

128:                                              ; preds = %110, %118
  %129 = bitcast i8* %111 to %"class.net::CookieStore"*
  ret %"class.net::CookieStore"* %129
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare zeroext i8 @_ZN3net40GetCookieStoreBackgroundSequencePriorityEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3net27SQLitePersistentCookieStoreC1ERKN4base8FilePathERK13scoped_refptrINS1_19SequencedTaskRunnerEES9_bPNS_20CookieCryptoDelegateE(%"class.net::SQLitePersistentCookieStore"*, %"class.base::FilePath"* dereferenceable(24), %class.scoped_refptr* dereferenceable(8), %class.scoped_refptr* dereferenceable(8), i1 zeroext, %"class.net::CookieCryptoDelegate"*) unnamed_addr #1

declare void @_ZN3net13CookieMonster24SetPersistSessionCookiesEb(%"class.net::CookieMonster"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3net13CookieMonsterC1E13scoped_refptrINS0_21PersistentCookieStoreEEPNS_6NetLogE(%"class.net::CookieMonster"*, %"class.net::CookieMonster::PersistentCookieStore"*, %"class.net::NetLog"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityENS_20TaskShutdownBehaviorEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!4 = distinct !{!4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityENS_20TaskShutdownBehaviorEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9, !11, !13}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!11 = distinct !{!11, !12, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!12 = distinct !{!12, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv"}
!13 = distinct !{!13, !14, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv"}
