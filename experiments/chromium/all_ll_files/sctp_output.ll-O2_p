; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sack_track = type { i8, i8, i8, i8, [4 x %struct.sctp_gap_ack_block] }
%struct.sctp_gap_ack_block = type { i16, i16 }
%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.46, %struct.anon.47, %struct.anon.48, %struct.anon.49, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon.12, %struct.anon.13, %struct.anon.14, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.19, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon.12 = type { %struct.socket*, %struct.socket** }
%struct.anon.13 = type { %struct.socket*, %struct.socket** }
%struct.anon.14 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.15, %union.anon.17, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.15 = type { i64 }
%union.anon.17 = type { i64 }
%struct.sigio = type opaque
%struct.anon.19 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.4 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.pkthdr, %union.anon.7 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.6, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.6 = type { %struct.m_tag* }
%union.anon.7 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.8, %struct.sctp_readhead, %struct.anon.32, %struct.anon.33, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.8 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.9, %struct.anon.10, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.22, %struct.anon.23, %struct.anon.24, %struct.inpcbport*, %struct.mtx }
%struct.anon.9 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.10 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.20, %union.anon.21 }
%union.anon.20 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.21 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.22 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.23 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.24 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.11, %struct.inpcbhead, i16 }
%struct.anon.11 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.28, %struct.anon.29, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.25, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.25 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.27, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.27 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon, %struct.anon.0, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.0 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.2, %struct.anon.3, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.1, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.1 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.2 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.3 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.28 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.29 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.30, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.31, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.30 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.31 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.32 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.33 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctp_laddr = type { %struct.anon.34, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.34 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.35, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.35 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctp_iterator = type { %struct.anon.36, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.36 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.46 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.47 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.48 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.49 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.37, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.37 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.43 }
%union.anon.43 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.44, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.44 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.38, %struct.anon.39, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.38 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.39 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.41, i16 }
%struct.anon.41 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.45, i32, i32, i32, [0 x i16] }
%struct.anon.45 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.50, [15 x %struct.sctp_timewait] }
%struct.anon.50 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.26, i32, i8*, void (i8*)*, i32 }
%struct.anon.26 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%struct.sctp_route = type { %struct.sctp_rtentry*, %struct.sockaddr }
%struct.sctp_init_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_init }
%struct.sctp_init = type { i32, i32, i16, i16, i32 }
%struct.sctp_auth_chunk = type { %struct.sctp_chunkhdr, i16, i16, [0 x i8] }
%struct.sctphdr = type { i16, i16, i32, i32 }
%struct.sctp_asconf_chunk = type { %struct.sctp_chunkhdr, i32 }
%struct.chk_id = type { i8, i8 }
%struct.sctp_shutdown_ack_chunk = type { %struct.sctp_chunkhdr }
%struct.sctp_shutdown_chunk = type { %struct.sctp_chunkhdr, i32 }
%struct.sctp_sack_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_sack }
%struct.sctp_sack = type { i32, i32, i16, i16 }
%struct.sctp_nr_sack_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_nr_sack }
%struct.sctp_nr_sack = type { i32, i32, i16, i16, i16, i16 }
%struct.sctp_data_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_data }
%struct.sctp_data = type { i32, i16, i16, i32 }
%struct.sctp_idata_chunk = type { %struct.sctp_chunkhdr, %struct.sctp_idata }
%struct.sctp_idata = type { i32, i16, i16, i32, %union.anon.51 }
%union.anon.51 = type { i32 }
%struct.proc = type { i32 }
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32, i32 }
%struct.iovec = type { i8*, i64 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%struct.sctp_sndinfo = type { i16, i16, i32, i32, i32 }
%struct.sctp_authinfo = type { i16 }
%struct.sctp_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16, [92 x i8] }
%struct.sctp_prinfo = type { i16, i32 }
%struct.sctp_forward_tsn_chunk = type { %struct.sctp_chunkhdr, i32 }
%struct.sctp_strseq_mid = type { i16, i16, i32 }
%struct.sctp_strseq = type { i16, i16 }
%struct.sctp_abort_chunk = type { %struct.sctp_chunkhdr }
%struct.sctp_shutdown_complete_chunk = type { %struct.sctp_chunkhdr }
%struct.sctp_ecne_chunk = type { %struct.sctp_chunkhdr, i32, i32 }
%struct.sctp_cwr_chunk = type { %struct.sctp_chunkhdr, i32 }
%struct.sctp_initmsg = type { i16, i16, i16, i16 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }

@sack_array = hidden local_unnamed_addr constant [256 x %struct.sack_track] [%struct.sack_track zeroinitializer, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] zeroinitializer }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 4 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 5 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 0, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 6 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 4 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 5 }, %struct.sctp_gap_ack_block { i16 7, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 4, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 4 }, %struct.sctp_gap_ack_block { i16 6, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 3 }, %struct.sctp_gap_ack_block { i16 5, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 3, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 2 }, %struct.sctp_gap_ack_block { i16 4, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 3, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 3, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 1 }, %struct.sctp_gap_ack_block { i16 3, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 2, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 2, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block { i16 2, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 0, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 1, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }, %struct.sack_track { i8 1, i8 1, i8 1, i8 0, [4 x %struct.sctp_gap_ack_block] [%struct.sctp_gap_ack_block { i16 0, i16 7 }, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer, %struct.sctp_gap_ack_block zeroinitializer] }], align 16
@.str = private unnamed_addr constant [3 x i8] c"lo\00", align 1
@system_base_info = external global %struct.sctp_base_info, align 8
@.str.1 = private unnamed_addr constant [34 x i8] c"Remote encapsulation port changed\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"%s:%d at %s\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_output.c\00", align 1
@__func__.sctp_send_initiate_ack = private unnamed_addr constant [23 x i8] c"sctp_send_initiate_ack\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"KAME-BSD 1.1\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Huh-3? create lock should have been on??\0A\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"Warning: Last msg marked incomplete, yet nothing left?\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"Huh no sp TSNH?\0A\00", align 1
@__func__.sctp_lower_sosend = private unnamed_addr constant [18 x i8] c"sctp_lower_sosend\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"Address added\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Partial parameter\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"Parameter length too small\00", align 1
@.str.11 = private unnamed_addr constant [61 x i8] c"Warning chunk of %d bytes > mtu:%d and yet PMTU disc missed\0A\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Exceeding mtu of %d out size is %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"Huh? Stream:%d lm_in_c=%d but queue is NULL\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Gak, put out entire msg with NO end!-1\0A\00", align 1
@.str.15 = private unnamed_addr constant [64 x i8] c"sender_done:%d len:%d msg_comp:%d put_last_out:%d send_lock:%d\0A\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"Huh, freeing tail? - TSNH\0A\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Huh, how can to_move be larger?\0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"prepend fails HELP?\0A\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"Gak, put out entire msg with NO end!-2\0A\00", align 1
@.str.20 = private unnamed_addr constant [62 x i8] c"TSN:%x chk->snd_count:%d chk->sent:%d can't retran - no data\0A\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"TSN %8.8x retransmitted %d times, giving up\00", align 1
@max_linkhdr = external local_unnamed_addr global i32, align 4
@__func__.sctp_sendall_iterator = private unnamed_addr constant [22 x i8] c"sctp_sendall_iterator\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sctp_is_address_in_scope(%struct.sctp_ifa* nocapture readonly, %struct.sctp_scoping* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %1, i64 0, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %0, i64 0, i32 2
  %9 = load %struct.sctp_ifn*, %struct.sctp_ifn** %8, align 8
  %10 = icmp eq %struct.sctp_ifn* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %9, i64 0, i32 13, i64 0
  %13 = tail call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %7, %11, %3
  %16 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %0, i64 0, i32 4, i32 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 123
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %1, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 0
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %15, %19, %11
  %25 = phi i32 [ 0, %11 ], [ %23, %19 ], [ 0, %15 ]
  ret i32 %25
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_add_addresses_to_i_ia(%struct.sctp_inpcb* nocapture readonly, %struct.sctp_tcb* readonly, %struct.sctp_scoping* nocapture readonly, %struct.mbuf*, i32, i16*, i16*) local_unnamed_addr #2 {
  %8 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 38
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #13
  %11 = tail call %struct.sctp_vrf* @sctp_find_vrf(i32 %9) #13
  %12 = icmp eq %struct.sctp_vrf* %11, null
  br i1 %12, label %128, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %114, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %11, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, 40
  %22 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %11, i64 0, i32 2, i32 0
  %23 = load %struct.sctp_ifn*, %struct.sctp_ifn** %22, align 8
  br i1 %21, label %72, label %24

24:                                               ; preds = %18
  %25 = icmp eq %struct.sctp_ifn* %23, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %2, i64 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  %30 = icmp eq %struct.sctp_tcb* %1, null
  %31 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  %32 = icmp sgt i32 %4, 1080
  br label %33

33:                                               ; preds = %26, %64
  %34 = phi %struct.sctp_ifn* [ %23, %26 ], [ %66, %64 ]
  br i1 %29, label %35, label %39

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %34, i64 0, i32 13, i64 0
  %37 = tail call i32 @strncmp(i8* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %35, %33
  %40 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %34, i64 0, i32 0, i32 0
  %41 = load %struct.sctp_ifa*, %struct.sctp_ifa** %40, align 8
  %42 = icmp eq %struct.sctp_ifa* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %39, %59
  %44 = phi %struct.sctp_ifa* [ %61, %59 ], [ %41, %39 ]
  br i1 %30, label %59, label %45

45:                                               ; preds = %43
  %46 = load %struct.sctp_laddr*, %struct.sctp_laddr** %31, align 8
  %47 = icmp eq %struct.sctp_laddr* %46, null
  br i1 %47, label %59, label %52

48:                                               ; preds = %52
  %49 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %53, i64 0, i32 0, i32 0
  %50 = load %struct.sctp_laddr*, %struct.sctp_laddr** %49, align 8
  %51 = icmp eq %struct.sctp_laddr* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %45, %48
  %53 = phi %struct.sctp_laddr* [ %50, %48 ], [ %46, %45 ]
  %54 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %53, i64 0, i32 1
  %55 = load %struct.sctp_ifa*, %struct.sctp_ifa** %54, align 8
  %56 = icmp ne %struct.sctp_ifa* %55, null
  %57 = icmp eq %struct.sctp_ifa* %55, %44
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %48

59:                                               ; preds = %48, %52, %45, %43
  %60 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %44, i64 0, i32 0, i32 0
  %61 = load %struct.sctp_ifa*, %struct.sctp_ifa** %60, align 8
  %62 = icmp eq %struct.sctp_ifa* %61, null
  br i1 %62, label %63, label %43

63:                                               ; preds = %59, %39
  br i1 %32, label %72, label %64

64:                                               ; preds = %63, %35
  %65 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %34, i64 0, i32 2, i32 0
  %66 = load %struct.sctp_ifn*, %struct.sctp_ifn** %65, align 8
  %67 = icmp eq %struct.sctp_ifn* %66, null
  br i1 %67, label %68, label %33

68:                                               ; preds = %64, %24
  %69 = icmp slt i32 %4, 2
  %70 = icmp eq %struct.sctp_ifn* %23, null
  %71 = or i1 %69, %70
  br i1 %71, label %128, label %74

72:                                               ; preds = %63, %18
  %73 = icmp eq %struct.sctp_ifn* %23, null
  br i1 %73, label %128, label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %2, i64 0, i32 3
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  %78 = icmp eq %struct.sctp_tcb* %1, null
  %79 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  br label %80

80:                                               ; preds = %74, %110
  %81 = phi %struct.sctp_ifn* [ %23, %74 ], [ %112, %110 ]
  br i1 %77, label %82, label %86

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %81, i64 0, i32 13, i64 0
  %84 = tail call i32 @strncmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %110, label %86

86:                                               ; preds = %82, %80
  %87 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %81, i64 0, i32 0, i32 0
  %88 = load %struct.sctp_ifa*, %struct.sctp_ifa** %87, align 8
  %89 = icmp eq %struct.sctp_ifa* %88, null
  br i1 %89, label %110, label %90

90:                                               ; preds = %86, %106
  %91 = phi %struct.sctp_ifa* [ %108, %106 ], [ %88, %86 ]
  br i1 %78, label %106, label %92

92:                                               ; preds = %90
  %93 = load %struct.sctp_laddr*, %struct.sctp_laddr** %79, align 8
  %94 = icmp eq %struct.sctp_laddr* %93, null
  br i1 %94, label %106, label %99

95:                                               ; preds = %99
  %96 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %100, i64 0, i32 0, i32 0
  %97 = load %struct.sctp_laddr*, %struct.sctp_laddr** %96, align 8
  %98 = icmp eq %struct.sctp_laddr* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %92, %95
  %100 = phi %struct.sctp_laddr* [ %97, %95 ], [ %93, %92 ]
  %101 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %100, i64 0, i32 1
  %102 = load %struct.sctp_ifa*, %struct.sctp_ifa** %101, align 8
  %103 = icmp ne %struct.sctp_ifa* %102, null
  %104 = icmp eq %struct.sctp_ifa* %102, %91
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %95

106:                                              ; preds = %95, %99, %92, %90
  %107 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %91, i64 0, i32 0, i32 0
  %108 = load %struct.sctp_ifa*, %struct.sctp_ifa** %107, align 8
  %109 = icmp eq %struct.sctp_ifa* %108, null
  br i1 %109, label %110, label %90

110:                                              ; preds = %106, %86, %82
  %111 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %81, i64 0, i32 2, i32 0
  %112 = load %struct.sctp_ifn*, %struct.sctp_ifn** %111, align 8
  %113 = icmp eq %struct.sctp_ifn* %112, null
  br i1 %113, label %128, label %80

114:                                              ; preds = %13
  %115 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi %struct.sctp_laddr** [ %115, %114 ], [ %120, %116 ]
  %118 = load %struct.sctp_laddr*, %struct.sctp_laddr** %117, align 8
  %119 = icmp eq %struct.sctp_laddr* %118, null
  %120 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %118, i64 0, i32 0, i32 0
  br i1 %119, label %121, label %116

121:                                              ; preds = %116
  %122 = icmp sgt i32 %4, 1
  br i1 %122, label %123, label %128

123:                                              ; preds = %121, %123
  %124 = phi %struct.sctp_laddr** [ %127, %123 ], [ %115, %121 ]
  %125 = load %struct.sctp_laddr*, %struct.sctp_laddr** %124, align 8
  %126 = icmp eq %struct.sctp_laddr* %125, null
  %127 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %125, i64 0, i32 0, i32 0
  br i1 %126, label %128, label %123

128:                                              ; preds = %110, %123, %121, %72, %68, %7
  %129 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #13
  ret %struct.mbuf* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare %struct.sctp_vrf* @sctp_find_vrf(i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_is_addr_restricted(%struct.sctp_tcb* readonly, %struct.sctp_ifa* readnone) local_unnamed_addr #6 {
  %3 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 13, i32 0
  %6 = load %struct.sctp_laddr*, %struct.sctp_laddr** %5, align 8
  %7 = icmp eq %struct.sctp_laddr* %6, null
  br i1 %7, label %19, label %12

8:                                                ; preds = %12
  %9 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %13, i64 0, i32 0, i32 0
  %10 = load %struct.sctp_laddr*, %struct.sctp_laddr** %9, align 8
  %11 = icmp eq %struct.sctp_laddr* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4, %8
  %13 = phi %struct.sctp_laddr* [ %10, %8 ], [ %6, %4 ]
  %14 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %13, i64 0, i32 1
  %15 = load %struct.sctp_ifa*, %struct.sctp_ifa** %14, align 8
  %16 = icmp ne %struct.sctp_ifa* %15, null
  %17 = icmp eq %struct.sctp_ifa* %15, %1
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %8

19:                                               ; preds = %12, %8, %4, %2
  %20 = phi i32 [ 0, %2 ], [ 0, %4 ], [ 1, %12 ], [ 0, %8 ]
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_is_addr_in_ep(%struct.sctp_inpcb* nocapture readonly, %struct.sctp_ifa* readnone) local_unnamed_addr #6 {
  %3 = icmp eq %struct.sctp_ifa* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %6 = load %struct.sctp_laddr*, %struct.sctp_laddr** %5, align 8
  %7 = icmp eq %struct.sctp_laddr* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4, %19
  %9 = phi %struct.sctp_laddr* [ %21, %19 ], [ %6, %4 ]
  %10 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %9, i64 0, i32 1
  %11 = load %struct.sctp_ifa*, %struct.sctp_ifa** %10, align 8
  %12 = icmp ne %struct.sctp_ifa* %11, null
  %13 = icmp eq %struct.sctp_ifa* %11, %1
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %9, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %8, %15
  %20 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %9, i64 0, i32 0, i32 0
  %21 = load %struct.sctp_laddr*, %struct.sctp_laddr** %20, align 8
  %22 = icmp eq %struct.sctp_laddr* %21, null
  br i1 %22, label %23, label %8

23:                                               ; preds = %15, %19, %4, %2
  %24 = phi i32 [ 0, %2 ], [ 0, %4 ], [ 1, %15 ], [ 0, %19 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_ifa* @sctp_source_address_selection(%struct.sctp_inpcb* nocapture, %struct.sctp_tcb*, %struct.sctp_route* nocapture, %struct.sctp_nets*, i32, i32) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %struct.sctp_route, %struct.sctp_route* %2, i64 0, i32 0
  %8 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %7, align 8
  %9 = icmp eq %struct.sctp_rtentry* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = tail call noalias i8* @malloc(i64 40) #13
  %12 = bitcast %struct.sctp_route* %2 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %727, label %14

14:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #13
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 1, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 1500, i32* %18, align 8
  br label %19

19:                                               ; preds = %14, %6
  %20 = getelementptr inbounds %struct.sctp_route, %struct.sctp_route* %2, i64 0, i32 1, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #13
  %23 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %268, label %27

27:                                               ; preds = %19
  %28 = tail call %struct.sctp_vrf* @sctp_find_vrf(i32 %5) #13
  %29 = icmp eq %struct.sctp_vrf* %28, null
  br i1 %29, label %724, label %30

30:                                               ; preds = %27
  %31 = bitcast %struct.sctp_route* %2 to i8***
  %32 = load i8**, i8*** %31, align 8
  %33 = load i8*, i8** %32, align 8
  %34 = tail call %struct.sctp_ifn* @sctp_find_ifn(i8* %33, i32 1) #13
  %35 = icmp eq %struct.sctp_ifn* %34, null
  br i1 %35, label %58, label %36

36:                                               ; preds = %30
  %37 = icmp ne %struct.sctp_nets* %3, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 48
  %40 = load i8, i8* %39, align 4
  %41 = zext i8 %40 to i32
  br label %42

42:                                               ; preds = %38, %36
  %43 = phi i32 [ %41, %38 ], [ 0, %36 ]
  %44 = tail call fastcc i32 @sctp_count_num_preferred_boundall(%struct.sctp_ifn* nonnull %34, %struct.sctp_tcb* %1, i32 %4, i16 zeroext %21) #13
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = icmp slt i32 %43, %44
  %48 = select i1 %47, i32 %43, i32 0
  %49 = tail call fastcc %struct.sctp_ifa* @sctp_select_nth_preferred_addr_from_ifn_boundall(%struct.sctp_ifn* nonnull %34, %struct.sctp_tcb* %1, i32 %4, i32 %48, i16 zeroext %21) #13
  %50 = icmp eq %struct.sctp_ifa* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %49, i64 0, i32 5
  %53 = atomicrmw add i32* %52, i32 1 seq_cst
  br i1 %37, label %54, label %724

54:                                               ; preds = %51
  %55 = trunc i32 %48 to i8
  %56 = add i8 %55, 1
  %57 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 48
  store i8 %56, i8* %57, align 4
  br label %724

58:                                               ; preds = %46, %42, %30
  %59 = phi i32 [ 0, %30 ], [ %43, %42 ], [ %48, %46 ]
  %60 = getelementptr inbounds %struct.sctp_vrf, %struct.sctp_vrf* %28, i64 0, i32 2, i32 0
  %61 = load %struct.sctp_ifn*, %struct.sctp_ifn** %60, align 8
  %62 = icmp eq %struct.sctp_ifn* %61, null
  br i1 %62, label %96, label %63

63:                                               ; preds = %58
  %64 = icmp ne %struct.sctp_ifn* %34, null
  br label %65

65:                                               ; preds = %91, %63
  %66 = phi %struct.sctp_ifn* [ %61, %63 ], [ %94, %91 ]
  %67 = phi i32 [ %59, %63 ], [ %92, %91 ]
  %68 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %66, i64 0, i32 13, i64 0
  %69 = tail call i32 @strncmp(i8* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %70 = icmp eq i32 %69, 0
  %71 = icmp eq %struct.sctp_ifn* %66, %34
  %72 = and i1 %64, %71
  %73 = or i1 %72, %70
  br i1 %73, label %91, label %74

74:                                               ; preds = %65
  %75 = tail call fastcc i32 @sctp_count_num_preferred_boundall(%struct.sctp_ifn* nonnull %66, %struct.sctp_tcb* %1, i32 %4, i16 zeroext %21) #13
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  %78 = icmp slt i32 %67, %75
  %79 = select i1 %78, i32 %67, i32 0
  %80 = tail call fastcc %struct.sctp_ifa* @sctp_select_nth_preferred_addr_from_ifn_boundall(%struct.sctp_ifn* nonnull %66, %struct.sctp_tcb* %1, i32 %4, i32 %79, i16 zeroext %21) #13
  %81 = icmp eq %struct.sctp_ifa* %80, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = icmp eq %struct.sctp_nets* %3, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %82
  %85 = trunc i32 %79 to i8
  %86 = add i8 %85, 1
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %3, i64 0, i32 48
  store i8 %86, i8* %87, align 4
  br label %88

88:                                               ; preds = %84, %82
  %89 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %80, i64 0, i32 5
  %90 = atomicrmw add i32* %89, i32 1 seq_cst
  br label %724

91:                                               ; preds = %77, %74, %65
  %92 = phi i32 [ %67, %65 ], [ %67, %74 ], [ %79, %77 ]
  %93 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %66, i64 0, i32 2, i32 0
  %94 = load %struct.sctp_ifn*, %struct.sctp_ifn** %93, align 8
  %95 = icmp eq %struct.sctp_ifn* %94, null
  br i1 %95, label %96, label %65

96:                                               ; preds = %91, %58
  br i1 %35, label %178, label %97

97:                                               ; preds = %96
  %98 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %34, i64 0, i32 0, i32 0
  %99 = load %struct.sctp_ifa*, %struct.sctp_ifa** %98, align 8
  %100 = icmp eq %struct.sctp_ifa* %99, null
  br i1 %100, label %178, label %101

101:                                              ; preds = %97
  %102 = icmp eq i32 %4, 0
  %103 = icmp eq %struct.sctp_tcb* %1, null
  %104 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 3
  %105 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  %106 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  %107 = icmp eq i16 %21, 123
  %108 = xor i1 %107, true
  br label %109

109:                                              ; preds = %174, %101
  %110 = phi %struct.sctp_ifa* [ %99, %101 ], [ %176, %174 ]
  %111 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 7
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 4
  %114 = icmp ne i32 %113, 0
  %115 = and i1 %102, %114
  br i1 %115, label %174, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 4, i32 0, i32 0
  %118 = load i16, i16* %117, align 8
  %119 = icmp eq i16 %118, %21
  br i1 %119, label %120, label %174

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 9
  %122 = load i8, i8* %121, align 8
  %123 = icmp eq i8 %122, 1
  br i1 %123, label %174, label %124

124:                                              ; preds = %120
  br i1 %103, label %171, label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %104, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %137

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 2
  %130 = load %struct.sctp_ifn*, %struct.sctp_ifn** %129, align 8
  %131 = icmp eq %struct.sctp_ifn* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %130, i64 0, i32 13, i64 0
  %134 = tail call i32 @strncmp(i8* %133, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %135 = icmp eq i32 %134, 0
  %136 = or i1 %135, %108
  br i1 %136, label %174, label %138

137:                                              ; preds = %128, %125
  br i1 %107, label %138, label %174

138:                                              ; preds = %137, %132
  %139 = load i8, i8* %105, align 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %174, label %141

141:                                              ; preds = %138
  %142 = load %struct.sctp_laddr*, %struct.sctp_laddr** %106, align 8
  %143 = icmp eq %struct.sctp_laddr* %142, null
  br i1 %102, label %144, label %156

144:                                              ; preds = %141
  br i1 %143, label %171, label %149

145:                                              ; preds = %149
  %146 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %150, i64 0, i32 0, i32 0
  %147 = load %struct.sctp_laddr*, %struct.sctp_laddr** %146, align 8
  %148 = icmp eq %struct.sctp_laddr* %147, null
  br i1 %148, label %171, label %149

149:                                              ; preds = %144, %145
  %150 = phi %struct.sctp_laddr* [ %147, %145 ], [ %142, %144 ]
  %151 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %150, i64 0, i32 1
  %152 = load %struct.sctp_ifa*, %struct.sctp_ifa** %151, align 8
  %153 = icmp ne %struct.sctp_ifa* %152, null
  %154 = icmp eq %struct.sctp_ifa* %152, %110
  %155 = and i1 %153, %154
  br i1 %155, label %174, label %145

156:                                              ; preds = %141
  br i1 %143, label %171, label %161

157:                                              ; preds = %161
  %158 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %162, i64 0, i32 0, i32 0
  %159 = load %struct.sctp_laddr*, %struct.sctp_laddr** %158, align 8
  %160 = icmp eq %struct.sctp_laddr* %159, null
  br i1 %160, label %171, label %161

161:                                              ; preds = %156, %157
  %162 = phi %struct.sctp_laddr* [ %159, %157 ], [ %142, %156 ]
  %163 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %162, i64 0, i32 1
  %164 = load %struct.sctp_ifa*, %struct.sctp_ifa** %163, align 8
  %165 = icmp ne %struct.sctp_ifa* %164, null
  %166 = icmp eq %struct.sctp_ifa* %164, %110
  %167 = and i1 %165, %166
  br i1 %167, label %168, label %157

168:                                              ; preds = %161
  %169 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %110) #13
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %168, %156, %144, %124, %157, %145
  %172 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 5
  %173 = atomicrmw add i32* %172, i32 1 seq_cst
  br label %724

174:                                              ; preds = %149, %168, %138, %137, %132, %120, %116, %109
  %175 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %110, i64 0, i32 0, i32 0
  %176 = load %struct.sctp_ifa*, %struct.sctp_ifa** %175, align 8
  %177 = icmp eq %struct.sctp_ifa* %176, null
  br i1 %177, label %178, label %109

178:                                              ; preds = %174, %97, %96
  %179 = load %struct.sctp_ifn*, %struct.sctp_ifn** %60, align 8
  %180 = icmp eq %struct.sctp_ifn* %179, null
  br i1 %180, label %724, label %181

181:                                              ; preds = %178
  %182 = icmp eq i32 %4, 0
  %183 = icmp eq %struct.sctp_tcb* %1, null
  %184 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 3
  %185 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  %187 = icmp eq i16 %21, 123
  %188 = xor i1 %187, true
  br label %189

189:                                              ; preds = %264, %181
  %190 = phi %struct.sctp_ifn* [ %179, %181 ], [ %266, %264 ]
  %191 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %190, i64 0, i32 13, i64 0
  %192 = tail call i32 @strncmp(i8* %191, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %264, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %190, i64 0, i32 0, i32 0
  %196 = load %struct.sctp_ifa*, %struct.sctp_ifa** %195, align 8
  %197 = icmp eq %struct.sctp_ifa* %196, null
  br i1 %197, label %264, label %198

198:                                              ; preds = %194, %260
  %199 = phi %struct.sctp_ifa* [ %262, %260 ], [ %196, %194 ]
  %200 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %199, i64 0, i32 7
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 4
  %203 = icmp ne i32 %202, 0
  %204 = and i1 %182, %203
  br i1 %204, label %260, label %205

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %199, i64 0, i32 4, i32 0, i32 0
  %207 = load i16, i16* %206, align 8
  %208 = icmp eq i16 %207, %21
  br i1 %208, label %209, label %260

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %199, i64 0, i32 9
  %211 = load i8, i8* %210, align 8
  %212 = icmp eq i8 %211, 1
  br i1 %212, label %260, label %213

213:                                              ; preds = %209
  br i1 %183, label %724, label %214

214:                                              ; preds = %213
  %215 = load i8, i8* %184, align 1
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %226

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %199, i64 0, i32 2
  %219 = load %struct.sctp_ifn*, %struct.sctp_ifn** %218, align 8
  %220 = icmp eq %struct.sctp_ifn* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %219, i64 0, i32 13, i64 0
  %223 = tail call i32 @strncmp(i8* %222, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %224 = icmp eq i32 %223, 0
  %225 = or i1 %224, %188
  br i1 %225, label %260, label %227

226:                                              ; preds = %217, %214
  br i1 %187, label %227, label %260

227:                                              ; preds = %226, %221
  %228 = load i8, i8* %185, align 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %260, label %230

230:                                              ; preds = %227
  %231 = load %struct.sctp_laddr*, %struct.sctp_laddr** %186, align 8
  %232 = icmp eq %struct.sctp_laddr* %231, null
  br i1 %182, label %233, label %245

233:                                              ; preds = %230
  br i1 %232, label %724, label %238

234:                                              ; preds = %238
  %235 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %239, i64 0, i32 0, i32 0
  %236 = load %struct.sctp_laddr*, %struct.sctp_laddr** %235, align 8
  %237 = icmp eq %struct.sctp_laddr* %236, null
  br i1 %237, label %724, label %238

238:                                              ; preds = %233, %234
  %239 = phi %struct.sctp_laddr* [ %236, %234 ], [ %231, %233 ]
  %240 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %239, i64 0, i32 1
  %241 = load %struct.sctp_ifa*, %struct.sctp_ifa** %240, align 8
  %242 = icmp ne %struct.sctp_ifa* %241, null
  %243 = icmp eq %struct.sctp_ifa* %241, %199
  %244 = and i1 %242, %243
  br i1 %244, label %260, label %234

245:                                              ; preds = %230
  br i1 %232, label %724, label %250

246:                                              ; preds = %250
  %247 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %251, i64 0, i32 0, i32 0
  %248 = load %struct.sctp_laddr*, %struct.sctp_laddr** %247, align 8
  %249 = icmp eq %struct.sctp_laddr* %248, null
  br i1 %249, label %724, label %250

250:                                              ; preds = %245, %246
  %251 = phi %struct.sctp_laddr* [ %248, %246 ], [ %231, %245 ]
  %252 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %251, i64 0, i32 1
  %253 = load %struct.sctp_ifa*, %struct.sctp_ifa** %252, align 8
  %254 = icmp ne %struct.sctp_ifa* %253, null
  %255 = icmp eq %struct.sctp_ifa* %253, %199
  %256 = and i1 %254, %255
  br i1 %256, label %257, label %246

257:                                              ; preds = %250
  %258 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %199) #13
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %724

260:                                              ; preds = %238, %257, %227, %226, %221, %209, %205, %198
  %261 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %199, i64 0, i32 0, i32 0
  %262 = load %struct.sctp_ifa*, %struct.sctp_ifa** %261, align 8
  %263 = icmp eq %struct.sctp_ifa* %262, null
  br i1 %263, label %264, label %198

264:                                              ; preds = %260, %194, %189
  %265 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %190, i64 0, i32 2, i32 0
  %266 = load %struct.sctp_ifn*, %struct.sctp_ifn** %265, align 8
  %267 = icmp eq %struct.sctp_ifn* %266, null
  br i1 %267, label %724, label %189

268:                                              ; preds = %19
  %269 = icmp eq %struct.sctp_tcb* %1, null
  %270 = tail call %struct.sctp_vrf* @sctp_find_vrf(i32 %5) #13
  %271 = icmp eq %struct.sctp_vrf* %270, null
  br i1 %269, label %583, label %272

272:                                              ; preds = %268
  br i1 %271, label %724, label %273

273:                                              ; preds = %272
  %274 = bitcast %struct.sctp_route* %2 to i8***
  %275 = load i8**, i8*** %274, align 8
  %276 = load i8*, i8** %275, align 8
  %277 = tail call %struct.sctp_ifn* @sctp_find_ifn(i8* %276, i32 1) #13
  %278 = icmp eq %struct.sctp_ifn* %277, null
  br i1 %278, label %434, label %279

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %277, i64 0, i32 0, i32 0
  %281 = load %struct.sctp_ifa*, %struct.sctp_ifa** %280, align 8
  %282 = icmp eq %struct.sctp_ifa* %281, null
  br i1 %282, label %434, label %283

283:                                              ; preds = %279
  %284 = icmp eq i32 %4, 0
  %285 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %286 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  br label %290

287:                                              ; preds = %360
  %288 = load %struct.sctp_ifa*, %struct.sctp_ifa** %280, align 8
  %289 = icmp eq %struct.sctp_ifa* %288, null
  br i1 %289, label %434, label %364

290:                                              ; preds = %360, %283
  %291 = phi %struct.sctp_ifa* [ %281, %283 ], [ %362, %360 ]
  %292 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 7
  %293 = load i32, i32* %292, align 8
  %294 = and i32 %293, 4
  %295 = icmp ne i32 %294, 0
  %296 = and i1 %284, %295
  br i1 %296, label %360, label %297

297:                                              ; preds = %290
  %298 = load %struct.sctp_laddr*, %struct.sctp_laddr** %285, align 8
  %299 = icmp eq %struct.sctp_laddr* %298, null
  br i1 %299, label %360, label %300

300:                                              ; preds = %297, %311
  %301 = phi %struct.sctp_laddr* [ %313, %311 ], [ %298, %297 ]
  %302 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %301, i64 0, i32 1
  %303 = load %struct.sctp_ifa*, %struct.sctp_ifa** %302, align 8
  %304 = icmp ne %struct.sctp_ifa* %303, null
  %305 = icmp eq %struct.sctp_ifa* %303, %291
  %306 = and i1 %304, %305
  br i1 %306, label %307, label %311

307:                                              ; preds = %300
  %308 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %301, i64 0, i32 2
  %309 = load i32, i32* %308, align 8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %307, %300
  %312 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %301, i64 0, i32 0, i32 0
  %313 = load %struct.sctp_laddr*, %struct.sctp_laddr** %312, align 8
  %314 = icmp eq %struct.sctp_laddr* %313, null
  br i1 %314, label %360, label %300

315:                                              ; preds = %307
  %316 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 4, i32 0, i32 0
  %317 = load i16, i16* %316, align 8
  %318 = icmp eq i16 %317, %21
  br i1 %318, label %319, label %360

319:                                              ; preds = %315
  %320 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 9
  %321 = load i8, i8* %320, align 8
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %323, label %360

323:                                              ; preds = %319
  %324 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 10
  %325 = load i8, i8* %324, align 1
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %327, label %360

327:                                              ; preds = %323
  %328 = load %struct.sctp_laddr*, %struct.sctp_laddr** %286, align 8
  %329 = icmp eq %struct.sctp_laddr* %328, null
  br i1 %284, label %330, label %342

330:                                              ; preds = %327
  br i1 %329, label %357, label %335

331:                                              ; preds = %335
  %332 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %336, i64 0, i32 0, i32 0
  %333 = load %struct.sctp_laddr*, %struct.sctp_laddr** %332, align 8
  %334 = icmp eq %struct.sctp_laddr* %333, null
  br i1 %334, label %357, label %335

335:                                              ; preds = %330, %331
  %336 = phi %struct.sctp_laddr* [ %333, %331 ], [ %328, %330 ]
  %337 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %336, i64 0, i32 1
  %338 = load %struct.sctp_ifa*, %struct.sctp_ifa** %337, align 8
  %339 = icmp ne %struct.sctp_ifa* %338, null
  %340 = icmp eq %struct.sctp_ifa* %338, %291
  %341 = and i1 %339, %340
  br i1 %341, label %360, label %331

342:                                              ; preds = %327
  br i1 %329, label %357, label %347

343:                                              ; preds = %347
  %344 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %348, i64 0, i32 0, i32 0
  %345 = load %struct.sctp_laddr*, %struct.sctp_laddr** %344, align 8
  %346 = icmp eq %struct.sctp_laddr* %345, null
  br i1 %346, label %357, label %347

347:                                              ; preds = %342, %343
  %348 = phi %struct.sctp_laddr* [ %345, %343 ], [ %328, %342 ]
  %349 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %348, i64 0, i32 1
  %350 = load %struct.sctp_ifa*, %struct.sctp_ifa** %349, align 8
  %351 = icmp ne %struct.sctp_ifa* %350, null
  %352 = icmp eq %struct.sctp_ifa* %350, %291
  %353 = and i1 %351, %352
  br i1 %353, label %354, label %343

354:                                              ; preds = %347
  %355 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %291) #13
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %360, label %357

357:                                              ; preds = %354, %342, %330, %343, %331
  %358 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 5
  %359 = atomicrmw add i32* %358, i32 1 seq_cst
  br label %724

360:                                              ; preds = %311, %335, %354, %323, %319, %315, %297, %290
  %361 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %291, i64 0, i32 0, i32 0
  %362 = load %struct.sctp_ifa*, %struct.sctp_ifa** %361, align 8
  %363 = icmp eq %struct.sctp_ifa* %362, null
  br i1 %363, label %287, label %290

364:                                              ; preds = %287, %430
  %365 = phi %struct.sctp_ifa* [ %432, %430 ], [ %288, %287 ]
  %366 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %365, i64 0, i32 7
  %367 = load i32, i32* %366, align 8
  %368 = and i32 %367, 4
  %369 = icmp ne i32 %368, 0
  %370 = and i1 %284, %369
  br i1 %370, label %430, label %371

371:                                              ; preds = %364
  %372 = load %struct.sctp_laddr*, %struct.sctp_laddr** %285, align 8
  %373 = icmp eq %struct.sctp_laddr* %372, null
  br i1 %373, label %430, label %374

374:                                              ; preds = %371, %385
  %375 = phi %struct.sctp_laddr* [ %387, %385 ], [ %372, %371 ]
  %376 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %375, i64 0, i32 1
  %377 = load %struct.sctp_ifa*, %struct.sctp_ifa** %376, align 8
  %378 = icmp ne %struct.sctp_ifa* %377, null
  %379 = icmp eq %struct.sctp_ifa* %377, %365
  %380 = and i1 %378, %379
  br i1 %380, label %381, label %385

381:                                              ; preds = %374
  %382 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %375, i64 0, i32 2
  %383 = load i32, i32* %382, align 8
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %389, label %385

385:                                              ; preds = %381, %374
  %386 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %375, i64 0, i32 0, i32 0
  %387 = load %struct.sctp_laddr*, %struct.sctp_laddr** %386, align 8
  %388 = icmp eq %struct.sctp_laddr* %387, null
  br i1 %388, label %430, label %374

389:                                              ; preds = %381
  %390 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %365, i64 0, i32 4, i32 0, i32 0
  %391 = load i16, i16* %390, align 8
  %392 = icmp eq i16 %391, %21
  br i1 %392, label %393, label %430

393:                                              ; preds = %389
  %394 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %365, i64 0, i32 9
  %395 = load i8, i8* %394, align 8
  %396 = icmp eq i8 %395, 1
  br i1 %396, label %430, label %397

397:                                              ; preds = %393
  %398 = load %struct.sctp_laddr*, %struct.sctp_laddr** %286, align 8
  %399 = icmp eq %struct.sctp_laddr* %398, null
  br i1 %284, label %400, label %412

400:                                              ; preds = %397
  br i1 %399, label %427, label %405

401:                                              ; preds = %405
  %402 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %406, i64 0, i32 0, i32 0
  %403 = load %struct.sctp_laddr*, %struct.sctp_laddr** %402, align 8
  %404 = icmp eq %struct.sctp_laddr* %403, null
  br i1 %404, label %427, label %405

405:                                              ; preds = %400, %401
  %406 = phi %struct.sctp_laddr* [ %403, %401 ], [ %398, %400 ]
  %407 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %406, i64 0, i32 1
  %408 = load %struct.sctp_ifa*, %struct.sctp_ifa** %407, align 8
  %409 = icmp ne %struct.sctp_ifa* %408, null
  %410 = icmp eq %struct.sctp_ifa* %408, %365
  %411 = and i1 %409, %410
  br i1 %411, label %430, label %401

412:                                              ; preds = %397
  br i1 %399, label %427, label %417

413:                                              ; preds = %417
  %414 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %418, i64 0, i32 0, i32 0
  %415 = load %struct.sctp_laddr*, %struct.sctp_laddr** %414, align 8
  %416 = icmp eq %struct.sctp_laddr* %415, null
  br i1 %416, label %427, label %417

417:                                              ; preds = %412, %413
  %418 = phi %struct.sctp_laddr* [ %415, %413 ], [ %398, %412 ]
  %419 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %418, i64 0, i32 1
  %420 = load %struct.sctp_ifa*, %struct.sctp_ifa** %419, align 8
  %421 = icmp ne %struct.sctp_ifa* %420, null
  %422 = icmp eq %struct.sctp_ifa* %420, %365
  %423 = and i1 %421, %422
  br i1 %423, label %424, label %413

424:                                              ; preds = %417
  %425 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %365) #13
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %424, %412, %400, %413, %401
  %428 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %365, i64 0, i32 5
  %429 = atomicrmw add i32* %428, i32 1 seq_cst
  br label %724

430:                                              ; preds = %385, %405, %424, %393, %389, %371, %364
  %431 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %365, i64 0, i32 0, i32 0
  %432 = load %struct.sctp_ifa*, %struct.sctp_ifa** %431, align 8
  %433 = icmp eq %struct.sctp_ifa* %432, null
  br i1 %433, label %434, label %364

434:                                              ; preds = %430, %287, %279, %273
  %435 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 26
  %436 = bitcast %struct.sctp_laddr** %435 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = icmp eq i64 %437, 0
  %439 = inttoptr i64 %437 to %struct.sctp_laddr*
  br i1 %438, label %440, label %445

440:                                              ; preds = %512, %434
  %441 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %442 = bitcast %struct.sctp_laddr** %441 to i64*
  %443 = load i64, i64* %442, align 8
  store i64 %443, i64* %436, align 8
  %444 = inttoptr i64 %443 to %struct.sctp_laddr*
  br label %445

445:                                              ; preds = %440, %434
  %446 = phi %struct.sctp_laddr* [ %444, %440 ], [ %439, %434 ]
  %447 = phi i8 [ 1, %440 ], [ 0, %434 ]
  %448 = icmp eq %struct.sctp_laddr* %446, null
  br i1 %448, label %510, label %449

449:                                              ; preds = %445
  %450 = icmp eq i32 %4, 0
  %451 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  br label %452

452:                                              ; preds = %506, %449
  %453 = phi %struct.sctp_laddr* [ %446, %449 ], [ %508, %506 ]
  %454 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %453, i64 0, i32 1
  %455 = load %struct.sctp_ifa*, %struct.sctp_ifa** %454, align 8
  %456 = icmp eq %struct.sctp_ifa* %455, null
  br i1 %456, label %506, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %453, i64 0, i32 2
  %459 = load i32, i32* %458, align 8
  %460 = icmp eq i32 %459, 49154
  br i1 %460, label %506, label %461

461:                                              ; preds = %457
  %462 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %455, i64 0, i32 4, i32 0, i32 0
  %463 = load i16, i16* %462, align 8
  %464 = icmp eq i16 %463, %21
  br i1 %464, label %465, label %506

465:                                              ; preds = %461
  %466 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %455, i64 0, i32 9
  %467 = load i8, i8* %466, align 8
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %469, label %506

469:                                              ; preds = %465
  %470 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %455, i64 0, i32 10
  %471 = load i8, i8* %470, align 1
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %473, label %506

473:                                              ; preds = %469
  %474 = load %struct.sctp_laddr*, %struct.sctp_laddr** %451, align 8
  %475 = icmp eq %struct.sctp_laddr* %474, null
  br i1 %450, label %476, label %488

476:                                              ; preds = %473
  br i1 %475, label %503, label %481

477:                                              ; preds = %481
  %478 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %482, i64 0, i32 0, i32 0
  %479 = load %struct.sctp_laddr*, %struct.sctp_laddr** %478, align 8
  %480 = icmp eq %struct.sctp_laddr* %479, null
  br i1 %480, label %503, label %481

481:                                              ; preds = %476, %477
  %482 = phi %struct.sctp_laddr* [ %479, %477 ], [ %474, %476 ]
  %483 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %482, i64 0, i32 1
  %484 = load %struct.sctp_ifa*, %struct.sctp_ifa** %483, align 8
  %485 = icmp ne %struct.sctp_ifa* %484, null
  %486 = icmp eq %struct.sctp_ifa* %484, %455
  %487 = and i1 %485, %486
  br i1 %487, label %506, label %477

488:                                              ; preds = %473
  br i1 %475, label %503, label %493

489:                                              ; preds = %493
  %490 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %494, i64 0, i32 0, i32 0
  %491 = load %struct.sctp_laddr*, %struct.sctp_laddr** %490, align 8
  %492 = icmp eq %struct.sctp_laddr* %491, null
  br i1 %492, label %503, label %493

493:                                              ; preds = %488, %489
  %494 = phi %struct.sctp_laddr* [ %491, %489 ], [ %474, %488 ]
  %495 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %494, i64 0, i32 1
  %496 = load %struct.sctp_ifa*, %struct.sctp_ifa** %495, align 8
  %497 = icmp ne %struct.sctp_ifa* %496, null
  %498 = icmp eq %struct.sctp_ifa* %496, %455
  %499 = and i1 %497, %498
  br i1 %499, label %500, label %489

500:                                              ; preds = %493
  %501 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %455) #13
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %506, label %503

503:                                              ; preds = %500, %488, %476, %489, %477
  store %struct.sctp_laddr* %453, %struct.sctp_laddr** %435, align 8
  %504 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %455, i64 0, i32 5
  %505 = atomicrmw add i32* %504, i32 1 seq_cst
  br label %724

506:                                              ; preds = %481, %500, %469, %465, %461, %457, %452
  %507 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %453, i64 0, i32 0, i32 0
  %508 = load %struct.sctp_laddr*, %struct.sctp_laddr** %507, align 8
  %509 = icmp eq %struct.sctp_laddr* %508, null
  br i1 %509, label %510, label %452

510:                                              ; preds = %506, %445
  %511 = icmp eq i8 %447, 0
  br i1 %511, label %512, label %513

512:                                              ; preds = %510
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %435, align 8
  br label %440

513:                                              ; preds = %510
  store i64 %437, i64* %436, align 8
  br i1 %438, label %514, label %519

514:                                              ; preds = %582, %513
  %515 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %516 = bitcast %struct.sctp_laddr** %515 to i64*
  %517 = load i64, i64* %516, align 8
  store i64 %517, i64* %436, align 8
  %518 = inttoptr i64 %517 to %struct.sctp_laddr*
  br label %519

519:                                              ; preds = %514, %513
  %520 = phi %struct.sctp_laddr* [ %518, %514 ], [ %439, %513 ]
  %521 = phi i8 [ 1, %514 ], [ 0, %513 ]
  %522 = icmp eq %struct.sctp_laddr* %520, null
  br i1 %522, label %580, label %523

523:                                              ; preds = %519
  %524 = icmp eq i32 %4, 0
  %525 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  br label %526

526:                                              ; preds = %576, %523
  %527 = phi %struct.sctp_laddr* [ %520, %523 ], [ %578, %576 ]
  %528 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %527, i64 0, i32 1
  %529 = load %struct.sctp_ifa*, %struct.sctp_ifa** %528, align 8
  %530 = icmp eq %struct.sctp_ifa* %529, null
  br i1 %530, label %576, label %531

531:                                              ; preds = %526
  %532 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %527, i64 0, i32 2
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %533, 49154
  br i1 %534, label %576, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %529, i64 0, i32 4, i32 0, i32 0
  %537 = load i16, i16* %536, align 8
  %538 = icmp eq i16 %537, %21
  br i1 %538, label %539, label %576

539:                                              ; preds = %535
  %540 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %529, i64 0, i32 9
  %541 = load i8, i8* %540, align 8
  %542 = icmp eq i8 %541, 1
  br i1 %542, label %576, label %543

543:                                              ; preds = %539
  %544 = load %struct.sctp_laddr*, %struct.sctp_laddr** %525, align 8
  %545 = icmp eq %struct.sctp_laddr* %544, null
  br i1 %524, label %546, label %558

546:                                              ; preds = %543
  br i1 %545, label %573, label %551

547:                                              ; preds = %551
  %548 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %552, i64 0, i32 0, i32 0
  %549 = load %struct.sctp_laddr*, %struct.sctp_laddr** %548, align 8
  %550 = icmp eq %struct.sctp_laddr* %549, null
  br i1 %550, label %573, label %551

551:                                              ; preds = %546, %547
  %552 = phi %struct.sctp_laddr* [ %549, %547 ], [ %544, %546 ]
  %553 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %552, i64 0, i32 1
  %554 = load %struct.sctp_ifa*, %struct.sctp_ifa** %553, align 8
  %555 = icmp ne %struct.sctp_ifa* %554, null
  %556 = icmp eq %struct.sctp_ifa* %554, %529
  %557 = and i1 %555, %556
  br i1 %557, label %576, label %547

558:                                              ; preds = %543
  br i1 %545, label %573, label %563

559:                                              ; preds = %563
  %560 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %564, i64 0, i32 0, i32 0
  %561 = load %struct.sctp_laddr*, %struct.sctp_laddr** %560, align 8
  %562 = icmp eq %struct.sctp_laddr* %561, null
  br i1 %562, label %573, label %563

563:                                              ; preds = %558, %559
  %564 = phi %struct.sctp_laddr* [ %561, %559 ], [ %544, %558 ]
  %565 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %564, i64 0, i32 1
  %566 = load %struct.sctp_ifa*, %struct.sctp_ifa** %565, align 8
  %567 = icmp ne %struct.sctp_ifa* %566, null
  %568 = icmp eq %struct.sctp_ifa* %566, %529
  %569 = and i1 %567, %568
  br i1 %569, label %570, label %559

570:                                              ; preds = %563
  %571 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %529) #13
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %576, label %573

573:                                              ; preds = %570, %558, %546, %559, %547
  store %struct.sctp_laddr* %527, %struct.sctp_laddr** %435, align 8
  %574 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %529, i64 0, i32 5
  %575 = atomicrmw add i32* %574, i32 1 seq_cst
  br label %724

576:                                              ; preds = %551, %570, %539, %535, %531, %526
  %577 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %527, i64 0, i32 0, i32 0
  %578 = load %struct.sctp_laddr*, %struct.sctp_laddr** %577, align 8
  %579 = icmp eq %struct.sctp_laddr* %578, null
  br i1 %579, label %580, label %526

580:                                              ; preds = %576, %519
  %581 = icmp eq i8 %521, 0
  br i1 %581, label %582, label %724

582:                                              ; preds = %580
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %435, align 8
  br label %514

583:                                              ; preds = %268
  br i1 %271, label %724, label %584

584:                                              ; preds = %583
  %585 = bitcast %struct.sctp_route* %2 to i8***
  %586 = load i8**, i8*** %585, align 8
  %587 = load i8*, i8** %586, align 8
  %588 = tail call %struct.sctp_ifn* @sctp_find_ifn(i8* %587, i32 1) #13
  %589 = icmp eq %struct.sctp_ifn* %588, null
  br i1 %589, label %641, label %590

590:                                              ; preds = %584
  %591 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %588, i64 0, i32 0, i32 0
  %592 = load %struct.sctp_ifa*, %struct.sctp_ifa** %591, align 8
  %593 = icmp eq %struct.sctp_ifa* %592, null
  br i1 %593, label %641, label %594

594:                                              ; preds = %590
  %595 = icmp eq i32 %4, 0
  %596 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  br label %597

597:                                              ; preds = %637, %594
  %598 = phi %struct.sctp_ifa* [ %592, %594 ], [ %639, %637 ]
  %599 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 7
  %600 = load i32, i32* %599, align 8
  %601 = and i32 %600, 4
  %602 = icmp ne i32 %601, 0
  %603 = and i1 %595, %602
  br i1 %603, label %637, label %604

604:                                              ; preds = %597
  %605 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 4, i32 0, i32 0
  %606 = load i16, i16* %605, align 8
  %607 = icmp eq i16 %606, %21
  br i1 %607, label %608, label %637

608:                                              ; preds = %604
  %609 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 9
  %610 = load i8, i8* %609, align 8
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %612, label %637

612:                                              ; preds = %608
  %613 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 10
  %614 = load i8, i8* %613, align 1
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %616, label %637

616:                                              ; preds = %612
  %617 = load %struct.sctp_laddr*, %struct.sctp_laddr** %596, align 8
  %618 = icmp eq %struct.sctp_laddr* %617, null
  br i1 %618, label %637, label %619

619:                                              ; preds = %616, %630
  %620 = phi %struct.sctp_laddr* [ %632, %630 ], [ %617, %616 ]
  %621 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %620, i64 0, i32 1
  %622 = load %struct.sctp_ifa*, %struct.sctp_ifa** %621, align 8
  %623 = icmp ne %struct.sctp_ifa* %622, null
  %624 = icmp eq %struct.sctp_ifa* %622, %598
  %625 = and i1 %623, %624
  br i1 %625, label %626, label %630

626:                                              ; preds = %619
  %627 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %620, i64 0, i32 2
  %628 = load i32, i32* %627, align 8
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %634, label %630

630:                                              ; preds = %626, %619
  %631 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %620, i64 0, i32 0, i32 0
  %632 = load %struct.sctp_laddr*, %struct.sctp_laddr** %631, align 8
  %633 = icmp eq %struct.sctp_laddr* %632, null
  br i1 %633, label %637, label %619

634:                                              ; preds = %626
  %635 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 5
  %636 = atomicrmw add i32* %635, i32 1 seq_cst
  br label %724

637:                                              ; preds = %630, %616, %612, %608, %604, %597
  %638 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %598, i64 0, i32 0, i32 0
  %639 = load %struct.sctp_ifa*, %struct.sctp_ifa** %638, align 8
  %640 = icmp eq %struct.sctp_ifa* %639, null
  br i1 %640, label %641, label %597

641:                                              ; preds = %637, %590, %584
  %642 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 6
  %643 = bitcast %struct.sctp_laddr** %642 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = icmp eq i64 %644, 0
  %646 = inttoptr i64 %644 to %struct.sctp_laddr*
  br i1 %645, label %647, label %652

647:                                              ; preds = %686, %641
  %648 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %649 = bitcast %struct.sctp_laddr** %648 to i64*
  %650 = load i64, i64* %649, align 8
  store i64 %650, i64* %643, align 8
  %651 = inttoptr i64 %650 to %struct.sctp_laddr*
  br label %652

652:                                              ; preds = %647, %641
  %653 = phi %struct.sctp_laddr* [ %651, %647 ], [ %646, %641 ]
  %654 = phi i32 [ 1, %647 ], [ 0, %641 ]
  %655 = icmp eq %struct.sctp_laddr* %653, null
  br i1 %655, label %684, label %656

656:                                              ; preds = %652, %680
  %657 = phi %struct.sctp_laddr* [ %682, %680 ], [ %653, %652 ]
  %658 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %657, i64 0, i32 1
  %659 = load %struct.sctp_ifa*, %struct.sctp_ifa** %658, align 8
  %660 = icmp eq %struct.sctp_ifa* %659, null
  br i1 %660, label %680, label %661

661:                                              ; preds = %656
  %662 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %657, i64 0, i32 2
  %663 = load i32, i32* %662, align 8
  %664 = icmp eq i32 %663, 49154
  br i1 %664, label %680, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %659, i64 0, i32 4, i32 0, i32 0
  %667 = load i16, i16* %666, align 8
  %668 = icmp eq i16 %667, %21
  br i1 %668, label %669, label %680

669:                                              ; preds = %665
  %670 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %659, i64 0, i32 9
  %671 = load i8, i8* %670, align 8
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %673, label %680

673:                                              ; preds = %669
  %674 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %659, i64 0, i32 10
  %675 = load i8, i8* %674, align 1
  %676 = icmp eq i8 %675, 0
  br i1 %676, label %677, label %680

677:                                              ; preds = %673
  %678 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %659, i64 0, i32 5
  %679 = atomicrmw add i32* %678, i32 1 seq_cst
  br label %724

680:                                              ; preds = %673, %669, %665, %661, %656
  %681 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %657, i64 0, i32 0, i32 0
  %682 = load %struct.sctp_laddr*, %struct.sctp_laddr** %681, align 8
  %683 = icmp eq %struct.sctp_laddr* %682, null
  br i1 %683, label %684, label %656

684:                                              ; preds = %680, %652
  %685 = icmp eq i32 %654, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %684
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %642, align 8
  br label %647

687:                                              ; preds = %684
  store i64 %644, i64* %643, align 8
  br i1 %645, label %688, label %693

688:                                              ; preds = %723, %687
  %689 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 5, i32 0
  %690 = bitcast %struct.sctp_laddr** %689 to i64*
  %691 = load i64, i64* %690, align 8
  store i64 %691, i64* %643, align 8
  %692 = inttoptr i64 %691 to %struct.sctp_laddr*
  br label %693

693:                                              ; preds = %688, %687
  %694 = phi %struct.sctp_laddr* [ %692, %688 ], [ %646, %687 ]
  %695 = phi i32 [ 1, %688 ], [ 0, %687 ]
  %696 = icmp eq %struct.sctp_laddr* %694, null
  br i1 %696, label %721, label %697

697:                                              ; preds = %693, %717
  %698 = phi %struct.sctp_laddr* [ %719, %717 ], [ %694, %693 ]
  %699 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %698, i64 0, i32 1
  %700 = load %struct.sctp_ifa*, %struct.sctp_ifa** %699, align 8
  %701 = icmp eq %struct.sctp_ifa* %700, null
  br i1 %701, label %717, label %702

702:                                              ; preds = %697
  %703 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %698, i64 0, i32 2
  %704 = load i32, i32* %703, align 8
  %705 = icmp eq i32 %704, 49154
  br i1 %705, label %717, label %706

706:                                              ; preds = %702
  %707 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %700, i64 0, i32 4, i32 0, i32 0
  %708 = load i16, i16* %707, align 8
  %709 = icmp eq i16 %708, %21
  br i1 %709, label %710, label %717

710:                                              ; preds = %706
  %711 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %700, i64 0, i32 9
  %712 = load i8, i8* %711, align 8
  %713 = icmp eq i8 %712, 1
  br i1 %713, label %717, label %714

714:                                              ; preds = %710
  %715 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %700, i64 0, i32 5
  %716 = atomicrmw add i32* %715, i32 1 seq_cst
  br label %724

717:                                              ; preds = %710, %706, %702, %697
  %718 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %698, i64 0, i32 0, i32 0
  %719 = load %struct.sctp_laddr*, %struct.sctp_laddr** %718, align 8
  %720 = icmp eq %struct.sctp_laddr* %719, null
  br i1 %720, label %721, label %697

721:                                              ; preds = %717, %693
  %722 = icmp eq i32 %695, 0
  br i1 %722, label %723, label %724

723:                                              ; preds = %721
  store %struct.sctp_laddr* null, %struct.sctp_laddr** %642, align 8
  br label %688

724:                                              ; preds = %264, %257, %245, %233, %213, %246, %234, %272, %357, %427, %503, %573, %580, %583, %634, %677, %714, %721, %178, %171, %88, %54, %51, %27
  %725 = phi %struct.sctp_ifa* [ %80, %88 ], [ null, %27 ], [ %49, %54 ], [ %49, %51 ], [ %110, %171 ], [ null, %178 ], [ %291, %357 ], [ %365, %427 ], [ %455, %503 ], [ %529, %573 ], [ null, %272 ], [ null, %580 ], [ %598, %634 ], [ %659, %677 ], [ %700, %714 ], [ null, %583 ], [ null, %721 ], [ %199, %234 ], [ %199, %246 ], [ %199, %213 ], [ %199, %233 ], [ %199, %245 ], [ %199, %257 ], [ null, %264 ]
  %726 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 23)) #13
  br label %727

727:                                              ; preds = %724, %10
  %728 = phi %struct.sctp_ifa* [ null, %10 ], [ %725, %724 ]
  ret %struct.sctp_ifa* %728
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_initiate(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32) local_unnamed_addr #2 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #13
  store i16 -21846, i16* %4, align 2
  %7 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #13
  store i16 -21846, i16* %5, align 2
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %9 = load %struct.sctp_nets*, %struct.sctp_nets** %8, align 8
  %10 = icmp eq %struct.sctp_nets* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 0
  %13 = load %struct.sctp_nets*, %struct.sctp_nets** %12, align 8
  %14 = icmp eq %struct.sctp_nets* %13, null
  br i1 %14, label %459, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %13, i64 0, i32 37
  %17 = load i16, i16* %16, align 4
  %18 = and i16 %17, -513
  store i16 %18, i16* %16, align 4
  %19 = tail call i32 @sctp_set_primary_addr(%struct.sctp_tcb* %1, %struct.sockaddr* null, %struct.sctp_nets* nonnull %13) #13
  br label %24

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %9, i64 0, i32 37
  %22 = load i16, i16* %21, align 4
  %23 = and i16 %22, -513
  store i16 %23, i16* %21, align 4
  br label %24

24:                                               ; preds = %20, %15
  %25 = phi %struct.sctp_nets* [ %13, %15 ], [ %9, %20 ]
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %25, i64 0, i32 14, i32 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %459

30:                                               ; preds = %24
  tail call void @sctp_timer_start(i32 2, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %25) #13
  %31 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 1, i32 1, i32 1, i32 1) #13
  %32 = icmp eq %struct.mbuf* %31, null
  br i1 %32, label %459, label %33

33:                                               ; preds = %30
  store i16 20, i16* %4, align 2
  store i16 0, i16* %5, align 2
  %34 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %31, i64 0, i32 0, i32 2
  %35 = bitcast i8** %34 to %struct.sctp_init_chunk**
  %36 = load %struct.sctp_init_chunk*, %struct.sctp_init_chunk** %35, align 8
  %37 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 0, i32 0
  store i8 1, i8* %37, align 1
  %38 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 0, i32 1
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 0, i32 2
  store i16 0, i16* %39, align 1
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 48
  %41 = load i32, i32* %40, align 8
  %42 = tail call i32 @llvm.bswap.i32(i32 %41) #13
  %43 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 1, i32 0
  store i32 %42, i32* %43, align 1
  %44 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %45 = load %struct.socket*, %struct.socket** %44, align 8
  %46 = icmp eq %struct.socket* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.socket, %struct.socket* %45, i64 0, i32 21, i32 9
  %49 = load i32, i32* %48, align 8
  %50 = icmp ugt i32 %49, 4096
  %51 = select i1 %50, i32 %49, i32 4096
  br label %52

52:                                               ; preds = %47, %33
  %53 = phi i32 [ 4096, %33 ], [ %51, %47 ]
  %54 = tail call i32 @llvm.bswap.i32(i32 %53) #13
  %55 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 1, i32 1
  store i32 %54, i32* %55, align 1
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 101
  %57 = load i32, i32* %56, align 8
  %58 = trunc i32 %57 to i16
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #13
  %60 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 1, i32 2
  store i16 %59, i16* %60, align 1
  %61 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 102
  %62 = load i32, i32* %61, align 4
  %63 = trunc i32 %62 to i16
  %64 = tail call i16 @llvm.bswap.i16(i16 %63) #13
  %65 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 1, i32 3
  store i16 %64, i16* %65, align 1
  %66 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 57
  %67 = load i32, i32* %66, align 4
  %68 = tail call i32 @llvm.bswap.i32(i32 %67) #13
  %69 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %36, i64 0, i32 1, i32 4
  store i32 %68, i32* %69, align 1
  %70 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 32
  %71 = load i8, i8* %70, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %88, label %73

73:                                               ; preds = %52
  %74 = load i8*, i8** %34, align 8
  %75 = load i16, i16* %4, align 2
  %76 = zext i16 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = bitcast i8* %77 to i16*
  store i16 1728, i16* %78, align 1
  %79 = getelementptr inbounds i8, i8* %77, i64 2
  %80 = bitcast i8* %79 to i16*
  store i16 2048, i16* %80, align 1
  %81 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 31
  %82 = load i32, i32* %81, align 4
  %83 = tail call i32 @llvm.bswap.i32(i32 %82) #13
  %84 = getelementptr inbounds i8, i8* %77, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 %83, i32* %85, align 1
  %86 = load i16, i16* %4, align 2
  %87 = add i16 %86, 8
  store i16 %87, i16* %4, align 2
  br label %88

88:                                               ; preds = %52, %73
  %89 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 161
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %102

92:                                               ; preds = %88
  %93 = load i8*, i8** %34, align 8
  %94 = load i16, i16* %4, align 2
  %95 = zext i16 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = bitcast i8* %96 to i16*
  store i16 128, i16* %97, align 1
  %98 = getelementptr inbounds i8, i8* %96, i64 2
  %99 = bitcast i8* %98 to i16*
  store i16 1024, i16* %99, align 1
  %100 = load i16, i16* %4, align 2
  %101 = add i16 %100, 4
  store i16 %101, i16* %4, align 2
  br label %102

102:                                              ; preds = %92, %88
  %103 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 162
  %104 = load i8, i8* %103, align 4
  %105 = icmp eq i8 %104, 1
  br i1 %105, label %106, label %116

106:                                              ; preds = %102
  %107 = load i8*, i8** %34, align 8
  %108 = load i16, i16* %4, align 2
  %109 = zext i16 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = bitcast i8* %110 to i16*
  store i16 192, i16* %111, align 1
  %112 = getelementptr inbounds i8, i8* %110, i64 2
  %113 = bitcast i8* %112 to i16*
  store i16 1024, i16* %113, align 1
  %114 = load i16, i16* %4, align 2
  %115 = add i16 %114, 4
  store i16 %115, i16* %4, align 2
  br label %116

116:                                              ; preds = %106, %102
  %117 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 57), align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = load i16, i16* %4, align 2
  br label %131

121:                                              ; preds = %116
  %122 = load i8*, i8** %34, align 8
  %123 = load i16, i16* %4, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = bitcast i8* %125 to i16*
  store i16 1984, i16* %126, align 1
  %127 = getelementptr inbounds i8, i8* %125, i64 2
  %128 = bitcast i8* %127 to i16*
  store i16 1024, i16* %128, align 1
  %129 = load i16, i16* %4, align 2
  %130 = add i16 %129, 4
  store i16 %130, i16* %4, align 2
  br label %131

131:                                              ; preds = %119, %121
  %132 = phi i16 [ %120, %119 ], [ %130, %121 ]
  %133 = load i8*, i8** %34, align 8
  %134 = zext i16 %132 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = load i8, i8* %103, align 4
  %137 = icmp eq i8 %136, 1
  br i1 %137, label %138, label %145

138:                                              ; preds = %131
  %139 = getelementptr inbounds i8, i8* %135, i64 4
  store i8 -64, i8* %139, align 1
  %140 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %141 = load i8, i8* %140, align 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds i8, i8* %139, i64 1
  store i8 -62, i8* %144, align 1
  br label %145

145:                                              ; preds = %138, %143, %131
  %146 = phi i16 [ 2, %143 ], [ 1, %138 ], [ 0, %131 ]
  %147 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 1
  br i1 %149, label %150, label %155

150:                                              ; preds = %145
  %151 = getelementptr inbounds i8, i8* %135, i64 4
  %152 = add nuw nsw i16 %146, 1
  %153 = zext i16 %146 to i64
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  store i8 15, i8* %154, align 1
  br label %155

155:                                              ; preds = %150, %145
  %156 = phi i16 [ %152, %150 ], [ %146, %145 ]
  %157 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 164
  %158 = load i8, i8* %157, align 2
  %159 = icmp eq i8 %158, 1
  br i1 %159, label %160, label %168

160:                                              ; preds = %155
  %161 = getelementptr inbounds i8, i8* %135, i64 4
  %162 = add nuw nsw i16 %156, 1
  %163 = zext i16 %156 to i64
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  store i8 -63, i8* %164, align 1
  %165 = add nuw nsw i16 %156, 2
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds i8, i8* %161, i64 %166
  store i8 -128, i8* %167, align 1
  br label %168

168:                                              ; preds = %160, %155
  %169 = phi i16 [ %165, %160 ], [ %156, %155 ]
  %170 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 165
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 1
  br i1 %172, label %173, label %178

173:                                              ; preds = %168
  %174 = getelementptr inbounds i8, i8* %135, i64 4
  %175 = add nuw nsw i16 %169, 1
  %176 = zext i16 %169 to i64
  %177 = getelementptr inbounds i8, i8* %174, i64 %176
  store i8 -126, i8* %177, align 1
  br label %178

178:                                              ; preds = %173, %168
  %179 = phi i16 [ %175, %173 ], [ %169, %168 ]
  %180 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %181 = load i8, i8* %180, align 2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds i8, i8* %135, i64 4
  %185 = add nuw nsw i16 %179, 1
  %186 = zext i16 %179 to i64
  %187 = getelementptr inbounds i8, i8* %184, i64 %186
  store i8 64, i8* %187, align 1
  br label %188

188:                                              ; preds = %178, %183
  %189 = phi i16 [ %185, %183 ], [ %179, %178 ]
  %190 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 166
  %191 = load i8, i8* %190, align 8
  %192 = icmp eq i8 %191, 1
  br i1 %192, label %193, label %198

193:                                              ; preds = %188
  %194 = getelementptr inbounds i8, i8* %135, i64 4
  %195 = add nuw nsw i16 %189, 1
  %196 = zext i16 %189 to i64
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  store i8 16, i8* %197, align 1
  br label %198

198:                                              ; preds = %193, %188
  %199 = phi i16 [ %195, %193 ], [ %189, %188 ]
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 167
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 1
  br i1 %202, label %203, label %208

203:                                              ; preds = %198
  %204 = getelementptr inbounds i8, i8* %135, i64 4
  %205 = add nuw nsw i16 %199, 1
  %206 = zext i16 %199 to i64
  %207 = getelementptr inbounds i8, i8* %204, i64 %206
  store i8 -127, i8* %207, align 1
  br label %210

208:                                              ; preds = %198
  %209 = icmp eq i16 %199, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %203, %208
  %211 = phi i16 [ %205, %203 ], [ %199, %208 ]
  %212 = add nuw nsw i16 %211, 4
  %213 = bitcast i8* %135 to i16*
  store i16 2176, i16* %213, align 1
  %214 = tail call i16 @llvm.bswap.i16(i16 %212) #13
  %215 = getelementptr inbounds i8, i8* %135, i64 2
  %216 = bitcast i8* %215 to i16*
  store i16 %214, i16* %216, align 1
  %217 = add nuw nsw i16 %211, 7
  %218 = and i16 %217, -4
  %219 = sub nsw i16 %218, %212
  store i16 %219, i16* %5, align 2
  %220 = load i16, i16* %4, align 2
  %221 = add i16 %220, %212
  store i16 %221, i16* %4, align 2
  br label %222

222:                                              ; preds = %208, %210
  %223 = load i8, i8* %147, align 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %335, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 0
  %227 = load %struct.sctp_key*, %struct.sctp_key** %226, align 8
  %228 = icmp eq %struct.sctp_key* %227, null
  br i1 %228, label %258, label %229

229:                                              ; preds = %225
  %230 = load i16, i16* %5, align 2
  %231 = icmp eq i16 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %229
  %233 = load i16, i16* %4, align 2
  br label %242

234:                                              ; preds = %229
  %235 = load i8*, i8** %34, align 8
  %236 = load i16, i16* %4, align 2
  %237 = zext i16 %236 to i64
  %238 = getelementptr inbounds i8, i8* %235, i64 %237
  %239 = zext i16 %230 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %238, i8 0, i64 %239, i1 false)
  %240 = add i16 %236, %230
  store i16 %240, i16* %4, align 2
  store i16 0, i16* %5, align 2
  %241 = load %struct.sctp_key*, %struct.sctp_key** %226, align 8
  br label %242

242:                                              ; preds = %232, %234
  %243 = phi %struct.sctp_key* [ %227, %232 ], [ %241, %234 ]
  %244 = phi i16 [ %233, %232 ], [ %240, %234 ]
  %245 = load i8*, i8** %34, align 8
  %246 = zext i16 %244 to i64
  %247 = getelementptr inbounds i8, i8* %245, i64 %246
  %248 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 1
  %249 = load i32, i32* %248, align 8
  %250 = trunc i32 %249 to i16
  %251 = add i16 %250, 4
  %252 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %243, i64 0, i32 1, i64 0
  %253 = zext i16 %251 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %247, i8* align 4 %252, i64 %253, i1 false)
  %254 = add i16 %250, 7
  %255 = and i16 %254, -4
  %256 = sub i16 %255, %251
  store i16 %256, i16* %5, align 2
  %257 = add i16 %244, %251
  store i16 %257, i16* %4, align 2
  br label %258

258:                                              ; preds = %225, %242
  %259 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 116
  %260 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %259, align 8
  %261 = icmp eq %struct.sctp_hmaclist* %260, null
  br i1 %261, label %297, label %262

262:                                              ; preds = %258
  %263 = load i16, i16* %5, align 2
  %264 = icmp eq i16 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = load i16, i16* %4, align 2
  br label %275

267:                                              ; preds = %262
  %268 = load i8*, i8** %34, align 8
  %269 = load i16, i16* %4, align 2
  %270 = zext i16 %269 to i64
  %271 = getelementptr inbounds i8, i8* %268, i64 %270
  %272 = zext i16 %263 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %271, i8 0, i64 %272, i1 false)
  %273 = add i16 %269, %263
  store i16 %273, i16* %4, align 2
  store i16 0, i16* %5, align 2
  %274 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %259, align 8
  br label %275

275:                                              ; preds = %265, %267
  %276 = phi %struct.sctp_hmaclist* [ %260, %265 ], [ %274, %267 ]
  %277 = phi i16 [ %266, %265 ], [ %273, %267 ]
  %278 = load i8*, i8** %34, align 8
  %279 = zext i16 %277 to i64
  %280 = getelementptr inbounds i8, i8* %278, i64 %279
  %281 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %276, i64 0, i32 1
  %282 = load i16, i16* %281, align 2
  %283 = shl i16 %282, 1
  %284 = add i16 %283, 4
  %285 = bitcast i8* %280 to i16*
  store i16 1152, i16* %285, align 1
  %286 = tail call i16 @llvm.bswap.i16(i16 %284) #13
  %287 = getelementptr inbounds i8, i8* %280, i64 2
  %288 = bitcast i8* %287 to i16*
  store i16 %286, i16* %288, align 1
  %289 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %259, align 8
  %290 = getelementptr inbounds i8, i8* %280, i64 4
  %291 = tail call i32 @sctp_serialize_hmaclist(%struct.sctp_hmaclist* %289, i8* %290) #13
  %292 = add i16 %283, 7
  %293 = and i16 %292, -4
  %294 = sub i16 %293, %284
  store i16 %294, i16* %5, align 2
  %295 = load i16, i16* %4, align 2
  %296 = add i16 %295, %284
  store i16 %296, i16* %4, align 2
  br label %297

297:                                              ; preds = %258, %275
  %298 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 114
  %299 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %298, align 8
  %300 = icmp eq %struct.sctp_auth_chklist* %299, null
  br i1 %300, label %335, label %301

301:                                              ; preds = %297
  %302 = load i16, i16* %5, align 2
  %303 = icmp eq i16 %302, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %301
  %305 = load i16, i16* %4, align 2
  br label %314

306:                                              ; preds = %301
  %307 = load i8*, i8** %34, align 8
  %308 = load i16, i16* %4, align 2
  %309 = zext i16 %308 to i64
  %310 = getelementptr inbounds i8, i8* %307, i64 %309
  %311 = zext i16 %302 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %310, i8 0, i64 %311, i1 false)
  %312 = add i16 %308, %302
  store i16 %312, i16* %4, align 2
  store i16 0, i16* %5, align 2
  %313 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %298, align 8
  br label %314

314:                                              ; preds = %304, %306
  %315 = phi %struct.sctp_auth_chklist* [ %299, %304 ], [ %313, %306 ]
  %316 = phi i16 [ %305, %304 ], [ %312, %306 ]
  %317 = load i8*, i8** %34, align 8
  %318 = zext i16 %316 to i64
  %319 = getelementptr inbounds i8, i8* %317, i64 %318
  %320 = tail call i64 @sctp_auth_get_chklist_size(%struct.sctp_auth_chklist* %315) #13
  %321 = trunc i64 %320 to i16
  %322 = add i16 %321, 4
  %323 = bitcast i8* %319 to i16*
  store i16 896, i16* %323, align 1
  %324 = tail call i16 @llvm.bswap.i16(i16 %322) #13
  %325 = getelementptr inbounds i8, i8* %319, i64 2
  %326 = bitcast i8* %325 to i16*
  store i16 %324, i16* %326, align 1
  %327 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %298, align 8
  %328 = getelementptr inbounds i8, i8* %319, i64 4
  %329 = tail call i32 @sctp_serialize_auth_chunks(%struct.sctp_auth_chklist* %327, i8* %328) #13
  %330 = add i16 %321, 7
  %331 = and i16 %330, -4
  %332 = sub i16 %331, %322
  store i16 %332, i16* %5, align 2
  %333 = load i16, i16* %4, align 2
  %334 = add i16 %333, %322
  store i16 %334, i16* %4, align 2
  br label %335

335:                                              ; preds = %297, %222, %314
  %336 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 42
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %365, label %339

339:                                              ; preds = %335
  %340 = load i16, i16* %5, align 2
  %341 = icmp eq i16 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %339
  %343 = load i16, i16* %4, align 2
  br label %351

344:                                              ; preds = %339
  %345 = load i8*, i8** %34, align 8
  %346 = load i16, i16* %4, align 2
  %347 = zext i16 %346 to i64
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  %349 = zext i16 %340 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %348, i8 0, i64 %349, i1 false)
  %350 = add i16 %346, %340
  store i16 %350, i16* %4, align 2
  store i16 0, i16* %5, align 2
  br label %351

351:                                              ; preds = %342, %344
  %352 = phi i16 [ %343, %342 ], [ %350, %344 ]
  %353 = load i8*, i8** %34, align 8
  %354 = zext i16 %352 to i64
  %355 = getelementptr inbounds i8, i8* %353, i64 %354
  %356 = bitcast i8* %355 to i16*
  store i16 2304, i16* %356, align 1
  %357 = getelementptr inbounds i8, i8* %355, i64 2
  %358 = bitcast i8* %357 to i16*
  store i16 2048, i16* %358, align 1
  %359 = load i32, i32* %336, align 8
  %360 = tail call i32 @llvm.bswap.i32(i32 %359) #13
  %361 = getelementptr inbounds i8, i8* %355, i64 4
  %362 = bitcast i8* %361 to i32*
  store i32 %360, i32* %362, align 1
  store i32 0, i32* %336, align 8
  %363 = load i16, i16* %4, align 2
  %364 = add i16 %363, 8
  store i16 %364, i16* %4, align 2
  br label %365

365:                                              ; preds = %335, %351
  %366 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172
  %367 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %366, i64 0, i32 0
  %368 = load i8, i8* %367, align 2
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %370, label %376

370:                                              ; preds = %365
  %371 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 1
  %372 = load i8, i8* %371, align 1
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %370
  %375 = load i16, i16* %4, align 2
  br label %428

376:                                              ; preds = %370, %365
  %377 = load i16, i16* %5, align 2
  %378 = icmp eq i16 %377, 0
  br i1 %378, label %379, label %381

379:                                              ; preds = %376
  %380 = load i16, i16* %4, align 2
  br label %389

381:                                              ; preds = %376
  %382 = load i8*, i8** %34, align 8
  %383 = load i16, i16* %4, align 2
  %384 = zext i16 %383 to i64
  %385 = getelementptr inbounds i8, i8* %382, i64 %384
  %386 = zext i16 %377 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %385, i8 0, i64 %386, i1 false)
  %387 = add i16 %383, %377
  store i16 %387, i16* %4, align 2
  store i16 0, i16* %5, align 2
  %388 = load i8, i8* %367, align 2
  br label %389

389:                                              ; preds = %379, %381
  %390 = phi i16 [ %380, %379 ], [ %387, %381 ]
  %391 = phi i8 [ %368, %379 ], [ %388, %381 ]
  %392 = icmp eq i8 %391, 0
  %393 = select i1 %392, i16 4, i16 6
  %394 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 1
  %395 = load i8, i8* %394, align 1
  %396 = icmp eq i8 %395, 0
  %397 = add nuw nsw i16 %393, 2
  %398 = select i1 %396, i16 %393, i16 %397
  %399 = load i8*, i8** %34, align 8
  %400 = zext i16 %390 to i64
  %401 = getelementptr inbounds i8, i8* %399, i64 %400
  %402 = bitcast i8* %401 to i16*
  store i16 3072, i16* %402, align 1
  %403 = tail call i16 @llvm.bswap.i16(i16 %398) #13
  %404 = getelementptr inbounds i8, i8* %401, i64 2
  %405 = bitcast i8* %404 to i16*
  store i16 %403, i16* %405, align 1
  %406 = load i8, i8* %367, align 2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %411, label %408

408:                                              ; preds = %389
  %409 = getelementptr inbounds i8, i8* %401, i64 4
  %410 = bitcast i8* %409 to i16*
  store i16 1280, i16* %410, align 1
  br label %411

411:                                              ; preds = %389, %408
  %412 = phi i8 [ 1, %408 ], [ 0, %389 ]
  %413 = load i8, i8* %394, align 1
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %421, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds i8, i8* %401, i64 4
  %417 = bitcast i8* %416 to [2 x i16]*
  %418 = add nuw nsw i8 %412, 1
  %419 = zext i8 %412 to i64
  %420 = getelementptr inbounds [2 x i16], [2 x i16]* %417, i64 0, i64 %419
  store i16 1536, i16* %420, align 1
  br label %421

421:                                              ; preds = %411, %415
  %422 = phi i8 [ %418, %415 ], [ %412, %411 ]
  %423 = zext i8 %422 to i16
  %424 = shl nuw nsw i16 %423, 1
  %425 = sub nuw nsw i16 4, %424
  store i16 %425, i16* %5, align 2
  %426 = load i16, i16* %4, align 2
  %427 = add i16 %426, %398
  store i16 %427, i16* %4, align 2
  br label %428

428:                                              ; preds = %374, %421
  %429 = phi i16 [ %375, %374 ], [ %427, %421 ]
  %430 = zext i16 %429 to i32
  %431 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %31, i64 0, i32 0, i32 3
  store i32 %430, i32* %431, align 8
  %432 = call %struct.mbuf* @sctp_add_addresses_to_i_ia(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_scoping* %366, %struct.mbuf* nonnull %31, i32 0, i16* nonnull %5, i16* nonnull %4)
  %433 = load i16, i16* %4, align 2
  %434 = call i16 @llvm.bswap.i16(i16 %433) #13
  store i16 %434, i16* %39, align 1
  %435 = load i16, i16* %5, align 2
  %436 = icmp eq i16 %435, 0
  br i1 %436, label %442, label %437

437:                                              ; preds = %428
  %438 = zext i16 %435 to i32
  %439 = call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %432, i32 %438) #13
  %440 = icmp eq %struct.mbuf* %439, null
  br i1 %440, label %441, label %442

441:                                              ; preds = %437
  call void @m_freem(%struct.mbuf* nonnull %31) #13
  br label %459

442:                                              ; preds = %428, %437
  %443 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %25, i64 0, i32 3, i32 1
  %444 = bitcast %union.sctp_sockstore* %443 to %struct.sockaddr*
  %445 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %446 = load i16, i16* %445, align 2
  %447 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 12
  %448 = load i16, i16* %447, align 8
  %449 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %25, %struct.sockaddr* %444, %struct.mbuf* nonnull %31, i32 0, %struct.sctp_auth_chunk* null, i16 zeroext 0, i32 0, i32 0, i16 zeroext %446, i16 zeroext %448, i32 0)
  switch i32 %449, label %455 [
    i32 0, label %453
    i32 105, label %450
  ]

450:                                              ; preds = %442
  %451 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 181
  store i8 1, i8* %451, align 1
  %452 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %455

453:                                              ; preds = %442
  %454 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 181
  store i8 0, i8* %454, align 1
  br label %455

455:                                              ; preds = %442, %450, %453
  %456 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %457 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %25, i64 0, i32 15
  %458 = call i32 @gettimeofday(%struct.timeval* %457, i8* null) #13
  br label %459

459:                                              ; preds = %30, %24, %11, %455, %441
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #13
  ret void
}

declare i32 @sctp_set_primary_addr(%struct.sctp_tcb*, %struct.sockaddr*, %struct.sctp_nets*) local_unnamed_addr #5

declare void @sctp_timer_start(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #5

declare %struct.mbuf* @sctp_get_mbuf_for_msg(i32, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @sctp_serialize_hmaclist(%struct.sctp_hmaclist*, i8*) local_unnamed_addr #5

declare i64 @sctp_auth_get_chklist_size(%struct.sctp_auth_chklist*) local_unnamed_addr #5

declare i32 @sctp_serialize_auth_chunks(%struct.sctp_auth_chklist*, i8*) local_unnamed_addr #5

declare %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf*, i32) local_unnamed_addr #5

declare void @m_freem(%struct.mbuf*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* nocapture readonly, %struct.sctp_tcb*, %struct.sctp_nets* readonly, %struct.sockaddr* nocapture readonly, %struct.mbuf*, i32, %struct.sctp_auth_chunk*, i16 zeroext, i32, i32, i16 zeroext, i16 zeroext, i32) unnamed_addr #2 {
  %14 = icmp ne %struct.sctp_nets* %2, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %17 = load i16, i16* %16, align 4
  %18 = trunc i16 %17 to i8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @m_freem(%struct.mbuf* %4) #13
  br label %108

21:                                               ; preds = %15, %13
  %22 = icmp ne %struct.sctp_auth_chunk* %6, null
  %23 = icmp ne %struct.sctp_tcb* %1, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void @sctp_fill_hmac_digest_m(%struct.mbuf* %4, i32 %5, %struct.sctp_auth_chunk* nonnull %6, %struct.sctp_tcb* nonnull %1, i16 zeroext %7) #13
  br label %26

26:                                               ; preds = %25, %21
  br i1 %14, label %27, label %29

27:                                               ; preds = %26
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 32
  br label %34

29:                                               ; preds = %26
  br i1 %23, label %30, label %32

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 158
  br label %34

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 36
  br label %34

34:                                               ; preds = %30, %32, %27
  %35 = phi i8* [ %28, %27 ], [ %31, %30 ], [ %33, %32 ]
  %36 = load i8, i8* %35, align 4
  %37 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 123
  br i1 %39, label %40, label %107

40:                                               ; preds = %34
  %41 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 12, i32 1, i32 1, i32 1, i32 1) #13
  %42 = icmp eq %struct.mbuf* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @m_freem(%struct.mbuf* %4) #13
  br label %108

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %41, i64 0, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = and i32 %46, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %49, %44
  %53 = phi i64 [ 160, %44 ], [ 200, %49 ]
  %54 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %41, i64 0, i32 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  store i8* %56, i8** %54, align 8
  br label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %41, i64 0, i32 0, i32 3
  store i32 12, i32* %58, align 8
  %59 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %41, i64 0, i32 0, i32 0
  store %struct.mbuf* %4, %struct.mbuf** %59, align 8
  %60 = tail call i32 @sctp_calculate_len(%struct.mbuf* nonnull %41) #13
  %61 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %41, i64 0, i32 0, i32 2
  %62 = bitcast i8** %61 to %struct.sctphdr**
  %63 = load %struct.sctphdr*, %struct.sctphdr** %62, align 8
  %64 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %63, i64 0, i32 0
  store i16 %10, i16* %64, align 1
  %65 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %63, i64 0, i32 1
  store i16 %11, i16* %65, align 1
  %66 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %63, i64 0, i32 2
  store i32 %12, i32* %66, align 1
  %67 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %63, i64 0, i32 3
  store i32 0, i32* %67, align 1
  %68 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 13), align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %57
  %71 = tail call i32 @sctp_calculate_cksum(%struct.mbuf* nonnull %41, i32 0) #13
  store i32 %71, i32* %67, align 1
  br label %72

72:                                               ; preds = %57, %70
  %73 = phi i32* [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 50), %70 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 51), %57 ]
  %74 = atomicrmw add i32* %73, i32 1 seq_cst
  %75 = icmp eq i8 %36, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 16, i32 0
  %78 = load i8, i8* %77, align 8
  br label %79

79:                                               ; preds = %76, %72
  %80 = phi i8 [ %78, %76 ], [ %36, %72 ]
  %81 = and i8 %80, -4
  %82 = icmp eq i32 %9, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %79
  %84 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 161
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 1
  br i1 %88, label %90, label %89

89:                                               ; preds = %85, %83
  br label %90

90:                                               ; preds = %85, %89
  %91 = phi i8 [ 0, %89 ], [ 2, %85 ]
  %92 = or i8 %91, %81
  br label %93

93:                                               ; preds = %79, %90
  %94 = phi i8 [ %92, %90 ], [ %81, %79 ]
  %95 = sext i32 %60 to i64
  %96 = tail call noalias i8* @malloc(i64 %95) #13
  %97 = icmp eq i8* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %93
  tail call void @m_copydata(%struct.mbuf* nonnull %41, i32 0, i32 %60, i8* nonnull %96) #13
  %99 = load i32 (i8*, i8*, i64, i8, i8)*, i32 (i8*, i8*, i64, i8, i8)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 11), align 8
  %100 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i64 0, i32 1, i64 6
  %101 = bitcast i8* %100 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = trunc i32 %8 to i8
  %104 = tail call i32 %99(i8* %102, i8* nonnull %96, i64 %95, i8 zeroext %94, i8 zeroext %103) #13
  tail call void @free(i8* nonnull %96) #13
  br label %105

105:                                              ; preds = %93, %98
  %106 = phi i32 [ %104, %98 ], [ 12, %93 ]
  tail call void @m_freem(%struct.mbuf* nonnull %41) #13
  br label %108

107:                                              ; preds = %34
  tail call void @m_freem(%struct.mbuf* %4) #13
  br label %108

108:                                              ; preds = %43, %105, %107, %20
  %109 = phi i32 [ 14, %20 ], [ 14, %107 ], [ 12, %43 ], [ %106, %105 ]
  ret i32 %109
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_arethere_unrecognized_parameters(%struct.mbuf*, i32, i32* nocapture, %struct.sctp_chunkhdr* nocapture readonly, i32* nocapture, i32*) local_unnamed_addr #2 {
  %7 = alloca %struct.sctp_paramhdr, align 2
  %8 = bitcast %struct.sctp_paramhdr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %7, i64 0, i32 0
  store i16 -21846, i16* %9, align 2
  %10 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %7, i64 0, i32 1
  store i16 -21846, i16* %10, align 2
  store i32 0, i32* %2, align 4
  %11 = icmp ne i32* %5, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %12, %6
  %14 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %3, i64 0, i32 2
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #13
  %17 = zext i16 %16 to i32
  %18 = add nsw i32 %17, -20
  %19 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %1, %struct.sctp_paramhdr* nonnull %7, i32 4) #13
  %20 = icmp ne %struct.sctp_paramhdr* %19, null
  %21 = icmp ugt i32 %18, 3
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %238

23:                                               ; preds = %13, %213
  %24 = phi %struct.sctp_paramhdr* [ %219, %213 ], [ %19, %13 ]
  %25 = phi i32 [ %217, %213 ], [ 0, %13 ]
  %26 = phi i32 [ %43, %213 ], [ %18, %13 ]
  %27 = phi i32 [ %218, %213 ], [ %1, %13 ]
  %28 = phi %struct.mbuf* [ %215, %213 ], [ null, %13 ]
  %29 = phi %struct.mbuf* [ %214, %213 ], [ null, %13 ]
  %30 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %24, i64 0, i32 0
  %31 = load i16, i16* %30, align 1
  %32 = call i16 @llvm.bswap.i16(i16 %31) #13
  %33 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %24, i64 0, i32 1
  %34 = load i16, i16* %33, align 1
  %35 = call i16 @llvm.bswap.i16(i16 %34) #13
  %36 = zext i16 %35 to i32
  %37 = icmp slt i32 %26, %36
  %38 = icmp ult i16 %35, 4
  %39 = or i1 %38, %37
  br i1 %39, label %223, label %40

40:                                               ; preds = %23
  %41 = add nuw nsw i32 %36, 3
  %42 = and i32 %41, 131068
  %43 = sub nsw i32 %26, %42
  switch i16 %32, label %101 [
    i16 1, label %44
    i16 8, label %44
    i16 -16381, label %44
    i16 7, label %46
    i16 -32765, label %50
    i16 -32760, label %50
    i16 12, label %53
    i16 -32766, label %56
    i16 -16380, label %59
    i16 -16382, label %59
    i16 -16383, label %59
    i16 5, label %62
    i16 6, label %65
    i16 9, label %68
    i16 -16377, label %71
    i16 -16384, label %72
    i16 -32768, label %75
    i16 -16378, label %78
    i16 -16379, label %81
    i16 11, label %84
  ]

44:                                               ; preds = %40, %40, %40
  %45 = and i32 %41, 65532
  br label %213

46:                                               ; preds = %40
  br i1 %11, label %47, label %48

47:                                               ; preds = %46
  store i32 1, i32* %5, align 4
  br label %48

48:                                               ; preds = %47, %46
  %49 = and i32 %41, 65532
  br label %213

50:                                               ; preds = %40, %40
  %51 = and i32 %41, 65532
  %52 = icmp ugt i32 %51, 260
  br i1 %52, label %223, label %213

53:                                               ; preds = %40
  %54 = and i32 %41, 65532
  %55 = icmp ugt i32 %54, 12
  br i1 %55, label %223, label %213

56:                                               ; preds = %40
  %57 = and i32 %41, 65532
  %58 = icmp ugt i32 %57, 260
  br i1 %58, label %223, label %213

59:                                               ; preds = %40, %40, %40
  %60 = and i32 %41, 65532
  %61 = trunc i32 %60 to i16
  switch i16 %61, label %223 [
    i16 16, label %213
    i16 28, label %213
  ]

62:                                               ; preds = %40
  %63 = and i32 %41, 65532
  %64 = icmp eq i32 %63, 8
  br i1 %64, label %213, label %223

65:                                               ; preds = %40
  %66 = and i32 %41, 65532
  %67 = icmp eq i32 %66, 20
  br i1 %67, label %213, label %223

68:                                               ; preds = %40
  %69 = and i32 %41, 65532
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %213, label %223

71:                                               ; preds = %40
  store i32 1, i32* %4, align 4
  br label %72

72:                                               ; preds = %40, %71
  %73 = and i32 %41, 65532
  %74 = icmp eq i32 %73, 4
  br i1 %74, label %213, label %223

75:                                               ; preds = %40
  %76 = and i32 %41, 65532
  %77 = icmp eq i32 %76, 4
  br i1 %77, label %213, label %223

78:                                               ; preds = %40
  %79 = and i32 %41, 65532
  %80 = icmp eq i32 %79, 8
  br i1 %80, label %213, label %223

81:                                               ; preds = %40
  %82 = and i32 %41, 65532
  %83 = icmp eq i32 %82, 8
  br i1 %83, label %213, label %223

84:                                               ; preds = %40
  store i32 1, i32* %2, align 4
  call void @m_freem(%struct.mbuf* %29) #13
  %85 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 40, i32 0, i32 1, i32 1, i32 1) #13
  %86 = icmp eq %struct.mbuf* %85, null
  br i1 %86, label %238, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %85, i64 0, i32 0, i32 2
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 36
  store i8* %90, i8** %88, align 8
  %91 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %85, i64 0, i32 0, i32 3
  store i32 4, i32* %91, align 8
  %92 = bitcast i8* %90 to i16*
  store i16 1280, i16* %92, align 1
  %93 = add i16 %35, 4
  %94 = call i16 @llvm.bswap.i16(i16 %93) #13
  %95 = getelementptr inbounds i8, i8* %89, i64 38
  %96 = bitcast i8* %95 to i16*
  store i16 %94, i16* %96, align 1
  %97 = call %struct.mbuf* @m_copym(%struct.mbuf* %0, i32 %27, i32 %36, i32 1) #13
  %98 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %85, i64 0, i32 0, i32 0
  store %struct.mbuf* %97, %struct.mbuf** %98, align 8
  %99 = icmp eq %struct.mbuf* %97, null
  br i1 %99, label %100, label %238

100:                                              ; preds = %87
  call void @m_freem(%struct.mbuf* nonnull %85) #13
  br label %238

101:                                              ; preds = %40
  %102 = and i16 %32, 16384
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %208, label %104

104:                                              ; preds = %101
  %105 = icmp eq %struct.mbuf* %29, null
  br i1 %105, label %106, label %114

106:                                              ; preds = %104
  %107 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 40, i32 0, i32 1, i32 1, i32 1) #13
  %108 = icmp eq %struct.mbuf* %107, null
  br i1 %108, label %208, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %107, i64 0, i32 0, i32 3
  store i32 0, i32* %110, align 8
  %111 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %107, i64 0, i32 0, i32 2
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 36
  store i8* %113, i8** %111, align 8
  br label %114

114:                                              ; preds = %104, %109
  %115 = phi %struct.mbuf* [ %107, %109 ], [ %29, %104 ]
  %116 = phi %struct.mbuf* [ %107, %109 ], [ %28, %104 ]
  %117 = icmp sgt i32 %25, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %116, i32 %25) #13
  br label %120

120:                                              ; preds = %118, %114
  %121 = phi %struct.mbuf* [ %119, %118 ], [ %116, %114 ]
  %122 = icmp eq %struct.mbuf* %121, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @m_freem(%struct.mbuf* nonnull %115) #13
  br label %208

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 4
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %151, label %129

129:                                              ; preds = %124
  %130 = and i32 %126, 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %169

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %134 = load i32*, i32** %133, align 8
  %135 = load volatile i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %169

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %139, i64 %142
  %144 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 2
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %145, i64 %148
  %150 = ptrtoint i8* %143 to i64
  br label %161

151:                                              ; preds = %124
  %152 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 1
  %153 = getelementptr inbounds %union.anon.4, %union.anon.4* %152, i64 1
  %154 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 2
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 3
  %157 = load i32, i32* %156, align 8
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  %160 = ptrtoint %union.anon.4* %153 to i64
  br label %161

161:                                              ; preds = %137, %151
  %162 = phi i8* [ %149, %137 ], [ %159, %151 ]
  %163 = phi i64 [ %150, %137 ], [ %160, %151 ]
  %164 = phi i32 [ %147, %137 ], [ %157, %151 ]
  %165 = phi i8* [ %145, %137 ], [ %155, %151 ]
  %166 = ptrtoint i8* %162 to i64
  %167 = sub i64 %163, %166
  %168 = icmp slt i64 %167, 4
  br i1 %168, label %169, label %180

169:                                              ; preds = %129, %132, %161
  %170 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %171 = icmp eq %struct.mbuf* %170, null
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @m_freem(%struct.mbuf* nonnull %115) #13
  br label %208

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %170, i64 0, i32 0, i32 3
  store i32 0, i32* %174, align 8
  %175 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %170, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %175, align 8
  %176 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %121, i64 0, i32 0, i32 0
  store %struct.mbuf* %170, %struct.mbuf** %176, align 8
  %177 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %170, i64 0, i32 0, i32 2
  %178 = load i8*, i8** %177, align 8
  %179 = load i32, i32* %174, align 8
  br label %180

180:                                              ; preds = %173, %161
  %181 = phi i32 [ %179, %173 ], [ %164, %161 ]
  %182 = phi i8* [ %178, %173 ], [ %165, %161 ]
  %183 = phi %struct.mbuf* [ %170, %173 ], [ %121, %161 ]
  %184 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %183, i64 0, i32 0, i32 3
  %185 = sext i32 %181 to i64
  %186 = getelementptr inbounds i8, i8* %182, i64 %185
  %187 = bitcast i8* %186 to i16*
  store i16 2048, i16* %187, align 1
  %188 = add i16 %35, 4
  %189 = call i16 @llvm.bswap.i16(i16 %188) #13
  %190 = getelementptr inbounds i8, i8* %186, i64 2
  %191 = bitcast i8* %190 to i16*
  store i16 %189, i16* %191, align 1
  %192 = load i32, i32* %184, align 8
  %193 = add i32 %192, 4
  store i32 %193, i32* %184, align 8
  %194 = call %struct.mbuf* @m_copym(%struct.mbuf* %0, i32 %27, i32 %36, i32 1) #13
  %195 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %183, i64 0, i32 0, i32 0
  store %struct.mbuf* %194, %struct.mbuf** %195, align 8
  %196 = icmp eq %struct.mbuf* %194, null
  br i1 %196, label %197, label %198

197:                                              ; preds = %180
  call void @m_freem(%struct.mbuf* nonnull %115) #13
  br label %208

198:                                              ; preds = %180, %198
  %199 = phi %struct.mbuf* [ %201, %198 ], [ %194, %180 ]
  %200 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %199, i64 0, i32 0, i32 0
  %201 = load %struct.mbuf*, %struct.mbuf** %200, align 8
  %202 = icmp eq %struct.mbuf* %201, null
  br i1 %202, label %203, label %198

203:                                              ; preds = %198
  %204 = and i32 %36, 3
  %205 = icmp eq i32 %204, 0
  %206 = sub nuw nsw i32 4, %204
  %207 = select i1 %205, i32 0, i32 %206
  br label %208

208:                                              ; preds = %123, %172, %197, %203, %106, %101
  %209 = phi %struct.mbuf* [ %29, %101 ], [ null, %106 ], [ null, %123 ], [ null, %172 ], [ null, %197 ], [ %115, %203 ]
  %210 = phi %struct.mbuf* [ %28, %101 ], [ %28, %106 ], [ null, %123 ], [ null, %172 ], [ null, %197 ], [ %199, %203 ]
  %211 = phi i32 [ %25, %101 ], [ %25, %106 ], [ %25, %123 ], [ %25, %172 ], [ %25, %197 ], [ %207, %203 ]
  %212 = icmp sgt i16 %32, -1
  br i1 %212, label %238, label %213

213:                                              ; preds = %81, %78, %75, %72, %68, %65, %62, %59, %59, %56, %50, %208, %53, %48, %44
  %214 = phi %struct.mbuf* [ %29, %48 ], [ %29, %44 ], [ %29, %53 ], [ %209, %208 ], [ %29, %50 ], [ %29, %56 ], [ %29, %59 ], [ %29, %59 ], [ %29, %62 ], [ %29, %65 ], [ %29, %68 ], [ %29, %72 ], [ %29, %75 ], [ %29, %78 ], [ %29, %81 ]
  %215 = phi %struct.mbuf* [ %28, %48 ], [ %28, %44 ], [ %28, %53 ], [ %210, %208 ], [ %28, %50 ], [ %28, %56 ], [ %28, %59 ], [ %28, %59 ], [ %28, %62 ], [ %28, %65 ], [ %28, %68 ], [ %28, %72 ], [ %28, %75 ], [ %28, %78 ], [ %28, %81 ]
  %216 = phi i32 [ %49, %48 ], [ %45, %44 ], [ %54, %53 ], [ %42, %208 ], [ %51, %50 ], [ %57, %56 ], [ %60, %59 ], [ %60, %59 ], [ 8, %62 ], [ 20, %65 ], [ 8, %68 ], [ 4, %72 ], [ 4, %75 ], [ 8, %78 ], [ 8, %81 ]
  %217 = phi i32 [ %25, %48 ], [ %25, %44 ], [ %25, %53 ], [ %211, %208 ], [ %25, %50 ], [ %25, %56 ], [ %25, %59 ], [ %25, %59 ], [ %25, %62 ], [ %25, %65 ], [ %25, %68 ], [ %25, %72 ], [ %25, %75 ], [ %25, %78 ], [ %25, %81 ]
  %218 = add nsw i32 %216, %27
  %219 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %218, %struct.sctp_paramhdr* nonnull %7, i32 4) #13
  %220 = icmp ne %struct.sctp_paramhdr* %219, null
  %221 = icmp ugt i32 %43, 3
  %222 = and i1 %221, %220
  br i1 %222, label %23, label %238

223:                                              ; preds = %23, %50, %53, %56, %81, %78, %75, %72, %68, %65, %62, %59
  store i32 1, i32* %2, align 4
  call void @m_freem(%struct.mbuf* %29) #13
  %224 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 44, i32 0, i32 1, i32 1, i32 1) #13
  %225 = icmp eq %struct.mbuf* %224, null
  br i1 %225, label %238, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %224, i64 0, i32 0, i32 3
  %228 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %224, i64 0, i32 0, i32 2
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 36
  store i8* %230, i8** %228, align 8
  store i32 8, i32* %227, align 8
  %231 = bitcast i8* %230 to i16*
  store i16 3328, i16* %231, align 1
  %232 = getelementptr inbounds i8, i8* %229, i64 38
  %233 = bitcast i8* %232 to i16*
  store i16 2048, i16* %233, align 1
  %234 = getelementptr inbounds i8, i8* %229, i64 40
  %235 = bitcast i8* %234 to i16*
  store i16 %31, i16* %235, align 1
  %236 = getelementptr inbounds i8, i8* %229, i64 42
  %237 = bitcast i8* %236 to i16*
  store i16 %34, i16* %237, align 1
  br label %238

238:                                              ; preds = %208, %213, %13, %223, %226, %100, %87, %84
  %239 = phi %struct.mbuf* [ null, %100 ], [ %85, %87 ], [ null, %84 ], [ null, %223 ], [ %224, %226 ], [ null, %13 ], [ %209, %208 ], [ %214, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret %struct.mbuf* %239
}

declare %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf*, i32, %struct.sctp_paramhdr*, i32) local_unnamed_addr #5

declare %struct.mbuf* @m_copym(%struct.mbuf*, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_initiate_ack(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets* readonly, %struct.mbuf*, i32, i32, %struct.sockaddr* nocapture readonly, %struct.sockaddr* nocapture readonly, %struct.sctphdr* nocapture readonly, %struct.sctp_init_chunk* nocapture readonly, i32, i16 zeroext) local_unnamed_addr #2 {
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.sctp_paramhdr, align 2
  %17 = alloca %struct.sctp_scoping, align 1
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %struct.timeval*
  %20 = alloca [16 x i8], align 1
  %21 = alloca [5 x i8], align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i16, align 2
  %25 = alloca i16, align 2
  %26 = alloca [256 x i8], align 16
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %29) #13
  %30 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 1
  %31 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 2
  %32 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 3
  %33 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 4
  %34 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 5
  %35 = getelementptr inbounds %struct.sctp_scoping, %struct.sctp_scoping* %17, i64 0, i32 6
  %36 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 -86, i64 7, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #13
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %20, i64 0, i64 0
  %38 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  %39 = getelementptr inbounds [5 x i8], [5 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %39)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 -86, i64 5, i1 false)
  %40 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #13
  store i32 -1431655766, i32* %22, align 4
  %41 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #13
  store i32 0, i32* %23, align 4
  %42 = bitcast i16* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %42) #13
  store i16 -21846, i16* %24, align 2
  %43 = bitcast i16* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %43) #13
  store i16 -21846, i16* %25, align 2
  %44 = icmp eq %struct.sctp_tcb* %1, null
  %45 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %46 = select i1 %44, %struct.sctp_association* null, %struct.sctp_association* %45
  %47 = icmp ne %struct.sctp_association* %46, null
  br i1 %47, label %48, label %151

48:                                               ; preds = %12
  %49 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 127
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %151, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %9, i64 0, i32 0, i32 2
  %55 = load i16, i16* %54, align 1
  %56 = tail call i16 @llvm.bswap.i16(i16 %55) #13
  %57 = zext i16 %56 to i32
  %58 = add nsw i32 %57, %5
  %59 = bitcast %struct.sctp_paramhdr* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #13
  %60 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %16, i64 0, i32 0
  store i16 -21846, i16* %60, align 2
  %61 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %16, i64 0, i32 1
  store i16 -21846, i16* %61, align 2
  %62 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i64 0, i32 0
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, 123
  br i1 %64, label %65, label %94

65:                                               ; preds = %53
  %66 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 172, i32 2
  %67 = load i8, i8* %66, align 2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %94, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 16, i32 0
  %71 = load %struct.sctp_nets*, %struct.sctp_nets** %70, align 8
  %72 = icmp eq %struct.sctp_nets* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i64 0, i32 1, i64 6
  %75 = bitcast i8* %74 to i8**
  br label %76

76:                                               ; preds = %86, %73
  %77 = phi %struct.sctp_nets* [ %71, %73 ], [ %88, %86 ]
  %78 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %77, i64 0, i32 3, i32 1, i32 0, i32 0
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 123
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %77, i64 0, i32 3, i32 1, i32 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = load i8*, i8** %75, align 8
  %85 = icmp eq i8* %83, %84
  br i1 %85, label %94, label %86

86:                                               ; preds = %81, %76
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %77, i64 0, i32 0, i32 0
  %88 = load %struct.sctp_nets*, %struct.sctp_nets** %87, align 8
  %89 = icmp eq %struct.sctp_nets* %88, null
  br i1 %89, label %90, label %76

90:                                               ; preds = %86, %69
  %91 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %92 = trunc i32 %91 to i16
  %93 = tail call %struct.mbuf* @sctp_generate_cause(i16 zeroext %92, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #13
  br label %121

94:                                               ; preds = %81, %65, %53
  %95 = add i32 %5, 20
  %96 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %3, i32 %95, %struct.sctp_paramhdr* nonnull %16, i32 4) #13
  %97 = icmp eq %struct.sctp_paramhdr* %96, null
  br i1 %97, label %132, label %98

98:                                               ; preds = %94, %118
  %99 = phi %struct.sctp_paramhdr* [ %119, %118 ], [ %96, %94 ]
  %100 = phi i32 [ %116, %118 ], [ %95, %94 ]
  %101 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %99, i64 0, i32 1
  %102 = load i16, i16* %101, align 1
  %103 = call i16 @llvm.bswap.i16(i16 %102) #13
  %104 = zext i16 %103 to i32
  %105 = add nsw i32 %100, %104
  %106 = icmp sgt i32 %105, %58
  br i1 %106, label %107, label %109

107:                                              ; preds = %98
  %108 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext 13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)) #13
  br label %121

109:                                              ; preds = %98
  %110 = icmp ult i16 %103, 4
  br i1 %110, label %111, label %113

111:                                              ; preds = %109
  %112 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext 13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #13
  br label %121

113:                                              ; preds = %109
  %114 = add nuw nsw i32 %104, 3
  %115 = and i32 %114, 131068
  %116 = add nsw i32 %115, %100
  %117 = icmp slt i32 %116, %58
  br i1 %117, label %118, label %132

118:                                              ; preds = %113
  %119 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %3, i32 %116, %struct.sctp_paramhdr* nonnull %16, i32 4) #13
  %120 = icmp eq %struct.sctp_paramhdr* %119, null
  br i1 %120, label %132, label %98

121:                                              ; preds = %107, %111, %90
  %122 = phi %struct.mbuf* [ %93, %90 ], [ %112, %111 ], [ %108, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #13
  %123 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123)
  store i32 0, i32* %15, align 4
  %124 = call i32 @sctp_is_there_an_abort_here(%struct.mbuf* %3, i32 %4, i32* nonnull %15) #13
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %121
  %127 = icmp eq %struct.mbuf* %122, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %126
  call void @m_freem(%struct.mbuf* nonnull %122) #13
  br label %131

129:                                              ; preds = %121
  %130 = load i32, i32* %15, align 4
  call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %6, %struct.sockaddr* %7, %struct.sctphdr* %8, i32 %130, i8 zeroext 6, %struct.mbuf* %122) #13
  br label %131

131:                                              ; preds = %126, %128, %129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123)
  br label %916

132:                                              ; preds = %118, %113, %94
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #13
  %133 = icmp eq %struct.sctp_nets* %2, null
  br i1 %133, label %151, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 41
  %136 = load i16, i16* %135, align 4
  %137 = icmp eq i16 %136, %11
  br i1 %137, label %151, label %138

138:                                              ; preds = %134
  %139 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %140 = trunc i32 %139 to i16
  %141 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext %140, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0)) #13
  %142 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142)
  store i32 0, i32* %14, align 4
  %143 = call i32 @sctp_is_there_an_abort_here(%struct.mbuf* %3, i32 %4, i32* nonnull %14) #13
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %138
  %146 = icmp eq %struct.mbuf* %141, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %145
  call void @m_freem(%struct.mbuf* nonnull %141) #13
  br label %150

148:                                              ; preds = %138
  %149 = load i32, i32* %14, align 4
  call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %6, %struct.sockaddr* %7, %struct.sctphdr* %8, i32 %149, i8 zeroext 6, %struct.mbuf* %141) #13
  br label %150

150:                                              ; preds = %145, %147, %148
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142)
  br label %916

151:                                              ; preds = %134, %132, %48, %12
  store i32 0, i32* %22, align 4
  %152 = add i32 %5, 20
  %153 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %9, i64 0, i32 0
  %154 = call %struct.mbuf* @sctp_arethere_unrecognized_parameters(%struct.mbuf* %3, i32 %152, i32* nonnull %22, %struct.sctp_chunkhdr* %153, i32* nonnull %23, i32* null)
  %155 = ptrtoint %struct.mbuf* %154 to i64
  %156 = load i32, i32* %22, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %184, label %158

158:                                              ; preds = %151, %230
  %159 = icmp eq %struct.mbuf* %154, null
  br i1 %159, label %160, label %170

160:                                              ; preds = %158
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %161) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %161, i8 -86, i64 256, i1 false)
  %162 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %161, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 6029, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.sctp_send_initiate_ack, i64 0, i64 0)) #13
  %163 = icmp slt i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %160
  store i8 0, i8* %161, align 16
  br label %165

165:                                              ; preds = %164, %160
  %166 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %167 = trunc i32 %166 to i16
  %168 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext %167, i8* nonnull %161) #13
  %169 = ptrtoint %struct.mbuf* %168 to i64
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %161) #13
  br label %170

170:                                              ; preds = %165, %158
  %171 = phi i64 [ %169, %165 ], [ %155, %158 ]
  %172 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %9, i64 0, i32 1, i32 0
  %173 = load i32, i32* %172, align 1
  %174 = inttoptr i64 %171 to %struct.mbuf*
  %175 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175)
  store i32 %173, i32* %13, align 4
  %176 = call i32 @sctp_is_there_an_abort_here(%struct.mbuf* %3, i32 %4, i32* nonnull %13) #13
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %170
  %179 = icmp eq i64 %171, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %178
  call void @m_freem(%struct.mbuf* nonnull %174) #13
  br label %183

181:                                              ; preds = %170
  %182 = load i32, i32* %13, align 4
  call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %6, %struct.sockaddr* %7, %struct.sctphdr* %8, i32 %182, i8 zeroext 6, %struct.mbuf* %174) #13
  br label %183

183:                                              ; preds = %178, %180, %181
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175)
  br label %916

184:                                              ; preds = %151
  %185 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %186 = icmp eq %struct.mbuf* %185, null
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @m_freem(%struct.mbuf* %154) #13
  br label %916

188:                                              ; preds = %184
  store i16 20, i16* %24, align 2
  store i16 0, i16* %25, align 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 5, i1 false)
  %189 = call i32 @gettimeofday(%struct.timeval* nonnull %19, i8* null) #13
  %190 = load <2 x i64>, <2 x i64>* %18, align 16
  br i1 %47, label %191, label %199

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 50
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 51
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 103
  %197 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 30
  %198 = load %struct.sctp_nets*, %struct.sctp_nets** %197, align 8
  br label %201

199:                                              ; preds = %188
  %200 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 28
  br label %201

201:                                              ; preds = %199, %191
  %202 = phi i32* [ %196, %191 ], [ %200, %199 ]
  %203 = phi i32 [ %193, %191 ], [ 0, %199 ]
  %204 = phi i32 [ %195, %191 ], [ 0, %199 ]
  %205 = phi %struct.sctp_nets* [ %198, %191 ], [ null, %199 ]
  %206 = load i32, i32* %202, align 8
  %207 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %8, i64 0, i32 1
  %208 = load i16, i16* %207, align 1
  %209 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %8, i64 0, i32 0
  %210 = load i16, i16* %209, align 1
  %211 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 9
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, 67108864
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %201
  %216 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 6
  %217 = load i32, i32* %216, align 4
  %218 = trunc i32 %217 to i16
  %219 = lshr i16 %218, 15
  %220 = trunc i16 %219 to i8
  br label %224

221:                                              ; preds = %201
  %222 = lshr i32 %212, 31
  %223 = trunc i32 %222 to i8
  br label %224

224:                                              ; preds = %221, %215
  %225 = phi i8 [ %220, %215 ], [ %223, %221 ]
  %226 = phi i8 [ 1, %215 ], [ 0, %221 ]
  %227 = phi i8 [ 0, %215 ], [ %223, %221 ]
  %228 = xor i8 %225, 1
  %229 = icmp eq %struct.sctp_nets* %205, null
  br i1 %229, label %230, label %243

230:                                              ; preds = %224
  %231 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i64 0, i32 0
  %232 = load i16, i16* %231, align 2
  %233 = icmp eq i16 %232, 123
  br i1 %233, label %234, label %158

234:                                              ; preds = %230
  %235 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i64 0, i32 1, i64 6
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = lshr i64 %237, 32
  %239 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i64 0, i32 1, i64 6
  %240 = bitcast i8* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = lshr i64 %241, 32
  br label %262

243:                                              ; preds = %224
  %244 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 172, i32 3
  %245 = load i8, i8* %244, align 1
  %246 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 172, i32 4
  %247 = load i8, i8* %246, align 2
  %248 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 172, i32 6
  %249 = load i8, i8* %248, align 2
  %250 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 172, i32 5
  %251 = load i8, i8* %250, align 1
  %252 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %205, i64 0, i32 3, i32 1
  %253 = bitcast %union.sctp_sockstore* %252 to %struct.sockaddr*
  %254 = getelementptr inbounds %union.sctp_sockstore, %union.sctp_sockstore* %252, i64 0, i32 0, i32 0
  %255 = load i16, i16* %254, align 2
  %256 = icmp eq i16 %255, 123
  br i1 %256, label %257, label %262

257:                                              ; preds = %243
  %258 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %205, i64 0, i32 3, i32 1, i32 0, i32 2
  %259 = bitcast i8** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = lshr i64 %260, 32
  br label %262

262:                                              ; preds = %257, %243, %234
  %263 = phi i64 [ %237, %234 ], [ %260, %257 ], [ 0, %243 ]
  %264 = phi i64 [ %238, %234 ], [ %261, %257 ], [ 0, %243 ]
  %265 = phi i32 [ 4, %234 ], [ 4, %257 ], [ 0, %243 ]
  %266 = phi i64 [ %241, %234 ], [ %260, %257 ], [ 0, %243 ]
  %267 = phi i64 [ %242, %234 ], [ %261, %257 ], [ 0, %243 ]
  %268 = phi i8 [ 0, %234 ], [ %251, %257 ], [ %251, %243 ]
  %269 = phi i8 [ 0, %234 ], [ %249, %257 ], [ %249, %243 ]
  %270 = phi i8 [ 0, %234 ], [ %247, %257 ], [ %247, %243 ]
  %271 = phi i8 [ 0, %234 ], [ %245, %257 ], [ %245, %243 ]
  %272 = phi %struct.sockaddr* [ %6, %234 ], [ %253, %257 ], [ %253, %243 ]
  %273 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %185, i64 0, i32 0, i32 2
  %274 = bitcast i8** %273 to %struct.sctp_init_chunk**
  %275 = load %struct.sctp_init_chunk*, %struct.sctp_init_chunk** %274, align 8
  %276 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %9, i64 0, i32 1, i32 0
  %277 = load i32, i32* %276, align 1
  %278 = call i32 @llvm.bswap.i32(i32 %277) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 5, i1 false)
  %279 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 0, i32 0
  store i8 2, i8* %279, align 1
  %280 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 0, i32 1
  store i8 0, i8* %280, align 1
  %281 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 0, i32 2
  store i16 0, i16* %281, align 1
  br i1 %47, label %282, label %321

282:                                              ; preds = %262
  %283 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 127
  switch i32 %285, label %295 [
    i32 2, label %286
    i32 1, label %286
    i32 4, label %286
  ]

286:                                              ; preds = %282, %282, %282
  %287 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 48
  %288 = load i32, i32* %287, align 8
  %289 = call i32 @llvm.bswap.i32(i32 %288) #13
  %290 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 0
  store i32 %289, i32* %290, align 1
  %291 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 57
  %292 = load i32, i32* %291, align 4
  %293 = call i32 @llvm.bswap.i32(i32 %292) #13
  %294 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 4
  store i32 %293, i32* %294, align 1
  br label %338

295:                                              ; preds = %282
  %296 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 120
  %297 = atomicrmw add i32* %296, i32 1 seq_cst
  %298 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 14
  %299 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %298) #13
  %300 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 48
  %301 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %302 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 171
  br label %303

303:                                              ; preds = %309, %295
  %304 = load i16, i16* %301, align 2
  %305 = load i16, i16* %209, align 1
  %306 = call i32 @sctp_select_a_tag(%struct.sctp_inpcb* %0, i16 zeroext %304, i16 zeroext %305, i32 1) #13
  %307 = load i8, i8* %302, align 1
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %303
  %310 = load i32, i32* %300, align 8
  %311 = icmp eq i32 %306, %310
  br i1 %311, label %303, label %312

312:                                              ; preds = %303, %309
  %313 = call i32 @llvm.bswap.i32(i32 %306) #13
  %314 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 0
  store i32 %313, i32* %314, align 1
  %315 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11
  %316 = call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %315) #13
  %317 = call i32 @llvm.bswap.i32(i32 %316) #13
  %318 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 4
  store i32 %317, i32* %318, align 1
  %319 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %298) #13
  %320 = atomicrmw add i32* %296, i32 -1 seq_cst
  br label %338

321:                                              ; preds = %262
  %322 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 37
  %323 = atomicrmw add i32* %322, i32 1 seq_cst
  %324 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 34
  %325 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %324) #13
  %326 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %327 = load i16, i16* %326, align 2
  %328 = load i16, i16* %209, align 1
  %329 = call i32 @sctp_select_a_tag(%struct.sctp_inpcb* %0, i16 zeroext %327, i16 zeroext %328, i32 1) #13
  %330 = call i32 @llvm.bswap.i32(i32 %329) #13
  %331 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 0
  store i32 %330, i32* %331, align 1
  %332 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11
  %333 = call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %332) #13
  %334 = call i32 @llvm.bswap.i32(i32 %333) #13
  %335 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 4
  store i32 %334, i32* %335, align 1
  %336 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %324) #13
  %337 = atomicrmw add i32* %322, i32 -1 seq_cst
  br label %338

338:                                              ; preds = %312, %321, %286
  %339 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 0
  %340 = load i32, i32* %339, align 1
  %341 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %342 = load %struct.socket*, %struct.socket** %341, align 8
  %343 = icmp eq %struct.socket* %342, null
  br i1 %343, label %344, label %345

344:                                              ; preds = %338
  call void @m_freem(%struct.mbuf* %154) #13
  call void @m_freem(%struct.mbuf* nonnull %185) #13
  br label %916

345:                                              ; preds = %338
  %346 = getelementptr inbounds %struct.socket, %struct.socket* %342, i64 0, i32 21, i32 9
  %347 = load i32, i32* %346, align 8
  %348 = icmp ugt i32 %347, 4096
  %349 = select i1 %348, i32 %347, i32 4096
  %350 = call i32 @llvm.bswap.i32(i32 %349) #13
  %351 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 1
  store i32 %350, i32* %351, align 1
  %352 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %9, i64 0, i32 1, i32 3
  %353 = load i16, i16* %352, align 1
  %354 = call i16 @llvm.bswap.i16(i16 %353) #13
  br i1 %47, label %355, label %364

355:                                              ; preds = %345
  %356 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 129
  %357 = load i16, i16* %356, align 2
  %358 = zext i16 %357 to i32
  %359 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 101
  %360 = load i32, i32* %359, align 8
  %361 = icmp ult i32 %360, %358
  %362 = trunc i32 %360 to i16
  %363 = select i1 %361, i16 %357, i16 %362
  br label %367

364:                                              ; preds = %345
  %365 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 22
  %366 = load i16, i16* %365, align 8
  br label %367

367:                                              ; preds = %355, %364
  %368 = phi i16 [ %366, %364 ], [ %363, %355 ]
  %369 = icmp ult i16 %354, %368
  %370 = call i16 @llvm.bswap.i16(i16 %368) #13
  %371 = select i1 %369, i16 %353, i16 %370
  %372 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 2
  store i16 %371, i16* %372, align 1
  %373 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 23
  %374 = load i16, i16* %373, align 2
  %375 = call i16 @llvm.bswap.i16(i16 %374) #13
  %376 = getelementptr inbounds %struct.sctp_init_chunk, %struct.sctp_init_chunk* %275, i64 0, i32 1, i32 3
  store i16 %375, i16* %376, align 1
  %377 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 32
  %378 = load i8, i8* %377, align 8
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %395, label %380

380:                                              ; preds = %367
  %381 = load i8*, i8** %273, align 8
  %382 = load i16, i16* %24, align 2
  %383 = zext i16 %382 to i64
  %384 = getelementptr inbounds i8, i8* %381, i64 %383
  %385 = bitcast i8* %384 to i16*
  store i16 1728, i16* %385, align 1
  %386 = getelementptr inbounds i8, i8* %384, i64 2
  %387 = bitcast i8* %386 to i16*
  store i16 2048, i16* %387, align 1
  %388 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 31
  %389 = load i32, i32* %388, align 4
  %390 = call i32 @llvm.bswap.i32(i32 %389) #13
  %391 = getelementptr inbounds i8, i8* %384, i64 4
  %392 = bitcast i8* %391 to i32*
  store i32 %390, i32* %392, align 1
  %393 = load i16, i16* %24, align 2
  %394 = add i16 %393, 8
  store i16 %394, i16* %24, align 2
  br label %395

395:                                              ; preds = %367, %380
  br i1 %47, label %396, label %400

396:                                              ; preds = %395
  %397 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 161
  %398 = load i8, i8* %397, align 1
  %399 = icmp eq i8 %398, 1
  br i1 %399, label %404, label %414

400:                                              ; preds = %395
  %401 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 22
  %402 = load i8, i8* %401, align 8
  %403 = icmp eq i8 %402, 1
  br i1 %403, label %404, label %418

404:                                              ; preds = %396, %400
  %405 = load i8*, i8** %273, align 8
  %406 = load i16, i16* %24, align 2
  %407 = zext i16 %406 to i64
  %408 = getelementptr inbounds i8, i8* %405, i64 %407
  %409 = bitcast i8* %408 to i16*
  store i16 128, i16* %409, align 1
  %410 = getelementptr inbounds i8, i8* %408, i64 2
  %411 = bitcast i8* %410 to i16*
  store i16 1024, i16* %411, align 1
  %412 = load i16, i16* %24, align 2
  %413 = add i16 %412, 4
  store i16 %413, i16* %24, align 2
  br i1 %47, label %414, label %418

414:                                              ; preds = %396, %404
  %415 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 162
  %416 = load i8, i8* %415, align 4
  %417 = icmp eq i8 %416, 1
  br i1 %417, label %422, label %432

418:                                              ; preds = %400, %404
  %419 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 23
  %420 = load i8, i8* %419, align 1
  %421 = icmp eq i8 %420, 1
  br i1 %421, label %422, label %432

422:                                              ; preds = %418, %414
  %423 = load i8*, i8** %273, align 8
  %424 = load i16, i16* %24, align 2
  %425 = zext i16 %424 to i64
  %426 = getelementptr inbounds i8, i8* %423, i64 %425
  %427 = bitcast i8* %426 to i16*
  store i16 192, i16* %427, align 1
  %428 = getelementptr inbounds i8, i8* %426, i64 2
  %429 = bitcast i8* %428 to i16*
  store i16 1024, i16* %429, align 1
  %430 = load i16, i16* %24, align 2
  %431 = add i16 %430, 4
  store i16 %431, i16* %24, align 2
  br label %432

432:                                              ; preds = %414, %422, %418
  %433 = load i32, i32* %23, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %437

435:                                              ; preds = %432
  %436 = load i16, i16* %24, align 2
  br label %447

437:                                              ; preds = %432
  %438 = load i8*, i8** %273, align 8
  %439 = load i16, i16* %24, align 2
  %440 = zext i16 %439 to i64
  %441 = getelementptr inbounds i8, i8* %438, i64 %440
  %442 = bitcast i8* %441 to i16*
  store i16 1984, i16* %442, align 1
  %443 = getelementptr inbounds i8, i8* %441, i64 2
  %444 = bitcast i8* %443 to i16*
  store i16 1024, i16* %444, align 1
  %445 = load i16, i16* %24, align 2
  %446 = add i16 %445, 4
  store i16 %446, i16* %24, align 2
  br label %447

447:                                              ; preds = %435, %437
  %448 = phi i16 [ %436, %435 ], [ %446, %437 ]
  %449 = load i8*, i8** %273, align 8
  %450 = zext i16 %448 to i64
  %451 = getelementptr inbounds i8, i8* %449, i64 %450
  br i1 %47, label %452, label %456

452:                                              ; preds = %447
  %453 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 162
  %454 = load i8, i8* %453, align 4
  %455 = icmp eq i8 %454, 1
  br i1 %455, label %460, label %474

456:                                              ; preds = %447
  %457 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 23
  %458 = load i8, i8* %457, align 1
  %459 = icmp eq i8 %458, 1
  br i1 %459, label %467, label %484

460:                                              ; preds = %452
  %461 = getelementptr inbounds i8, i8* %451, i64 4
  store i8 -64, i8* %461, align 1
  %462 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 168
  %463 = load i8, i8* %462, align 2
  %464 = icmp eq i8 %463, 1
  br i1 %464, label %465, label %474

465:                                              ; preds = %460
  %466 = getelementptr inbounds i8, i8* %461, i64 1
  store i8 -62, i8* %466, align 1
  br label %474

467:                                              ; preds = %456
  %468 = getelementptr inbounds i8, i8* %451, i64 4
  store i8 -64, i8* %468, align 1
  %469 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 25
  %470 = load i8, i8* %469, align 1
  %471 = icmp eq i8 %470, 1
  br i1 %471, label %472, label %484

472:                                              ; preds = %467
  %473 = getelementptr inbounds i8, i8* %468, i64 1
  store i8 -62, i8* %473, align 1
  br label %484

474:                                              ; preds = %452, %460, %465
  %475 = phi i16 [ 2, %465 ], [ 1, %460 ], [ 0, %452 ]
  %476 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 163
  %477 = load i8, i8* %476, align 1
  %478 = icmp eq i8 %477, 1
  br i1 %478, label %479, label %494

479:                                              ; preds = %474
  %480 = getelementptr inbounds i8, i8* %451, i64 4
  %481 = add nuw nsw i16 %475, 1
  %482 = zext i16 %475 to i64
  %483 = getelementptr inbounds i8, i8* %480, i64 %482
  store i8 15, i8* %483, align 1
  br label %494

484:                                              ; preds = %456, %467, %472
  %485 = phi i16 [ 2, %472 ], [ 0, %456 ], [ 1, %467 ]
  %486 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 24
  %487 = load i8, i8* %486, align 2
  %488 = icmp eq i8 %487, 1
  br i1 %488, label %489, label %499

489:                                              ; preds = %484
  %490 = getelementptr inbounds i8, i8* %451, i64 4
  %491 = add nuw nsw i16 %485, 1
  %492 = zext i16 %485 to i64
  %493 = getelementptr inbounds i8, i8* %490, i64 %492
  store i8 15, i8* %493, align 1
  br label %499

494:                                              ; preds = %474, %479
  %495 = phi i16 [ %481, %479 ], [ %475, %474 ]
  %496 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 164
  %497 = load i8, i8* %496, align 2
  %498 = icmp eq i8 %497, 1
  br i1 %498, label %504, label %513

499:                                              ; preds = %484, %489
  %500 = phi i16 [ %491, %489 ], [ %485, %484 ]
  %501 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 26
  %502 = load i8, i8* %501, align 4
  %503 = icmp eq i8 %502, 1
  br i1 %503, label %504, label %523

504:                                              ; preds = %494, %499
  %505 = phi i16 [ %500, %499 ], [ %495, %494 ]
  %506 = getelementptr inbounds i8, i8* %451, i64 4
  %507 = add nuw nsw i16 %505, 1
  %508 = zext i16 %505 to i64
  %509 = getelementptr inbounds i8, i8* %506, i64 %508
  store i8 -63, i8* %509, align 1
  %510 = add nuw nsw i16 %505, 2
  %511 = zext i16 %507 to i64
  %512 = getelementptr inbounds i8, i8* %506, i64 %511
  store i8 -128, i8* %512, align 1
  br i1 %47, label %513, label %523

513:                                              ; preds = %494, %504
  %514 = phi i16 [ %510, %504 ], [ %495, %494 ]
  %515 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 165
  %516 = load i8, i8* %515, align 1
  %517 = icmp eq i8 %516, 1
  br i1 %517, label %518, label %533

518:                                              ; preds = %513
  %519 = getelementptr inbounds i8, i8* %451, i64 4
  %520 = add nuw nsw i16 %514, 1
  %521 = zext i16 %514 to i64
  %522 = getelementptr inbounds i8, i8* %519, i64 %521
  store i8 -126, i8* %522, align 1
  br label %533

523:                                              ; preds = %499, %504
  %524 = phi i16 [ %510, %504 ], [ %500, %499 ]
  %525 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 27
  %526 = load i8, i8* %525, align 1
  %527 = icmp eq i8 %526, 1
  br i1 %527, label %528, label %543

528:                                              ; preds = %523
  %529 = getelementptr inbounds i8, i8* %451, i64 4
  %530 = add nuw nsw i16 %524, 1
  %531 = zext i16 %524 to i64
  %532 = getelementptr inbounds i8, i8* %529, i64 %531
  store i8 -126, i8* %532, align 1
  br label %543

533:                                              ; preds = %513, %518
  %534 = phi i16 [ %520, %518 ], [ %514, %513 ]
  %535 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 168
  %536 = load i8, i8* %535, align 2
  %537 = icmp eq i8 %536, 1
  br i1 %537, label %538, label %553

538:                                              ; preds = %533
  %539 = getelementptr inbounds i8, i8* %451, i64 4
  %540 = add nuw nsw i16 %534, 1
  %541 = zext i16 %534 to i64
  %542 = getelementptr inbounds i8, i8* %539, i64 %541
  store i8 64, i8* %542, align 1
  br label %553

543:                                              ; preds = %523, %528
  %544 = phi i16 [ %530, %528 ], [ %524, %523 ]
  %545 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 25
  %546 = load i8, i8* %545, align 1
  %547 = icmp eq i8 %546, 1
  br i1 %547, label %548, label %563

548:                                              ; preds = %543
  %549 = getelementptr inbounds i8, i8* %451, i64 4
  %550 = add nuw nsw i16 %544, 1
  %551 = zext i16 %544 to i64
  %552 = getelementptr inbounds i8, i8* %549, i64 %551
  store i8 64, i8* %552, align 1
  br label %563

553:                                              ; preds = %533, %538
  %554 = phi i16 [ %540, %538 ], [ %534, %533 ]
  %555 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 166
  %556 = load i8, i8* %555, align 8
  %557 = icmp eq i8 %556, 1
  br i1 %557, label %558, label %573

558:                                              ; preds = %553
  %559 = getelementptr inbounds i8, i8* %451, i64 4
  %560 = add nuw nsw i16 %554, 1
  %561 = zext i16 %554 to i64
  %562 = getelementptr inbounds i8, i8* %559, i64 %561
  store i8 16, i8* %562, align 1
  br label %573

563:                                              ; preds = %543, %548
  %564 = phi i16 [ %550, %548 ], [ %544, %543 ]
  %565 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 28
  %566 = load i8, i8* %565, align 2
  %567 = icmp eq i8 %566, 1
  br i1 %567, label %568, label %578

568:                                              ; preds = %563
  %569 = getelementptr inbounds i8, i8* %451, i64 4
  %570 = add nuw nsw i16 %564, 1
  %571 = zext i16 %564 to i64
  %572 = getelementptr inbounds i8, i8* %569, i64 %571
  store i8 16, i8* %572, align 1
  br label %578

573:                                              ; preds = %553, %558
  %574 = phi i16 [ %560, %558 ], [ %554, %553 ]
  %575 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 167
  %576 = load i8, i8* %575, align 1
  %577 = icmp eq i8 %576, 1
  br i1 %577, label %583, label %589

578:                                              ; preds = %563, %568
  %579 = phi i16 [ %570, %568 ], [ %564, %563 ]
  %580 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 29
  %581 = load i8, i8* %580, align 1
  %582 = icmp eq i8 %581, 1
  br i1 %582, label %583, label %589

583:                                              ; preds = %573, %578
  %584 = phi i16 [ %579, %578 ], [ %574, %573 ]
  %585 = getelementptr inbounds i8, i8* %451, i64 4
  %586 = add nuw nsw i16 %584, 1
  %587 = zext i16 %584 to i64
  %588 = getelementptr inbounds i8, i8* %585, i64 %587
  store i8 -127, i8* %588, align 1
  br label %592

589:                                              ; preds = %573, %578
  %590 = phi i16 [ %579, %578 ], [ %574, %573 ]
  %591 = icmp eq i16 %590, 0
  br i1 %591, label %604, label %592

592:                                              ; preds = %583, %589
  %593 = phi i16 [ %586, %583 ], [ %590, %589 ]
  %594 = add nuw nsw i16 %593, 4
  %595 = bitcast i8* %451 to i16*
  store i16 2176, i16* %595, align 1
  %596 = call i16 @llvm.bswap.i16(i16 %594) #13
  %597 = getelementptr inbounds i8, i8* %451, i64 2
  %598 = bitcast i8* %597 to i16*
  store i16 %596, i16* %598, align 1
  %599 = add nuw nsw i16 %593, 7
  %600 = and i16 %599, -4
  %601 = sub nsw i16 %600, %594
  store i16 %601, i16* %25, align 2
  %602 = load i16, i16* %24, align 2
  %603 = add i16 %602, %594
  store i16 %603, i16* %24, align 2
  br label %604

604:                                              ; preds = %589, %592
  br i1 %47, label %605, label %609

605:                                              ; preds = %604
  %606 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 163
  %607 = load i8, i8* %606, align 1
  %608 = icmp eq i8 %607, 1
  br i1 %608, label %613, label %685

609:                                              ; preds = %604
  %610 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 24
  %611 = load i8, i8* %610, align 2
  %612 = icmp eq i8 %611, 1
  br i1 %612, label %613, label %685

613:                                              ; preds = %609, %605
  %614 = load i16, i16* %25, align 2
  %615 = icmp eq i16 %614, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %613
  %617 = load i16, i16* %24, align 2
  br label %627

618:                                              ; preds = %613
  %619 = load i8*, i8** %273, align 8
  %620 = load i16, i16* %24, align 2
  %621 = zext i16 %620 to i64
  %622 = getelementptr inbounds i8, i8* %619, i64 %621
  %623 = zext i16 %614 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %622, i8 0, i64 %623, i1 false)
  %624 = load i16, i16* %25, align 2
  %625 = load i16, i16* %24, align 2
  %626 = add i16 %625, %624
  store i16 %626, i16* %24, align 2
  store i16 0, i16* %25, align 2
  br label %627

627:                                              ; preds = %616, %618
  %628 = phi i16 [ %617, %616 ], [ %626, %618 ]
  %629 = load i8*, i8** %273, align 8
  %630 = zext i16 %628 to i64
  %631 = getelementptr inbounds i8, i8* %629, i64 %630
  %632 = bitcast i8* %631 to i16*
  store i16 640, i16* %632, align 1
  %633 = getelementptr inbounds i8, i8* %631, i64 2
  %634 = bitcast i8* %633 to i16*
  store i16 9216, i16* %634, align 1
  %635 = getelementptr inbounds i8, i8* %631, i64 4
  call void @read_random(i8* %635, i64 32) #13
  store i16 0, i16* %25, align 2
  %636 = load i16, i16* %24, align 2
  %637 = add i16 %636, 36
  store i16 %637, i16* %24, align 2
  %638 = load i8*, i8** %273, align 8
  %639 = zext i16 %637 to i64
  %640 = getelementptr inbounds i8, i8* %638, i64 %639
  %641 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 15
  %642 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %641, align 8
  %643 = getelementptr inbounds i8, i8* %640, i64 4
  %644 = call i32 @sctp_serialize_hmaclist(%struct.sctp_hmaclist* %642, i8* %643) #13
  %645 = trunc i32 %644 to i16
  %646 = add i16 %645, 4
  %647 = bitcast i8* %640 to i16*
  store i16 1152, i16* %647, align 1
  %648 = call i16 @llvm.bswap.i16(i16 %646) #13
  %649 = getelementptr inbounds i8, i8* %640, i64 2
  %650 = bitcast i8* %649 to i16*
  store i16 %648, i16* %650, align 1
  %651 = add i16 %645, 7
  %652 = and i16 %651, -4
  %653 = sub i16 %652, %646
  store i16 %653, i16* %25, align 2
  %654 = load i16, i16* %24, align 2
  %655 = add i16 %654, %646
  store i16 %655, i16* %24, align 2
  %656 = icmp eq i16 %653, 0
  br i1 %656, label %665, label %657

657:                                              ; preds = %627
  %658 = load i8*, i8** %273, align 8
  %659 = zext i16 %655 to i64
  %660 = getelementptr inbounds i8, i8* %658, i64 %659
  %661 = zext i16 %653 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %660, i8 0, i64 %661, i1 false)
  %662 = load i16, i16* %25, align 2
  %663 = load i16, i16* %24, align 2
  %664 = add i16 %663, %662
  store i16 %664, i16* %24, align 2
  store i16 0, i16* %25, align 2
  br label %665

665:                                              ; preds = %627, %657
  %666 = phi i16 [ %655, %627 ], [ %664, %657 ]
  %667 = load i8*, i8** %273, align 8
  %668 = zext i16 %666 to i64
  %669 = getelementptr inbounds i8, i8* %667, i64 %668
  %670 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 14
  %671 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %670, align 8
  %672 = getelementptr inbounds i8, i8* %669, i64 4
  %673 = call i32 @sctp_serialize_auth_chunks(%struct.sctp_auth_chklist* %671, i8* %672) #13
  %674 = trunc i32 %673 to i16
  %675 = add i16 %674, 4
  %676 = bitcast i8* %669 to i16*
  store i16 896, i16* %676, align 1
  %677 = call i16 @llvm.bswap.i16(i16 %675) #13
  %678 = getelementptr inbounds i8, i8* %669, i64 2
  %679 = bitcast i8* %678 to i16*
  store i16 %677, i16* %679, align 1
  %680 = add i16 %674, 7
  %681 = and i16 %680, -4
  %682 = sub i16 %681, %675
  store i16 %682, i16* %25, align 2
  %683 = load i16, i16* %24, align 2
  %684 = add i16 %683, %675
  store i16 %684, i16* %24, align 2
  br label %685

685:                                              ; preds = %605, %665, %609
  %686 = load i16, i16* %24, align 2
  %687 = zext i16 %686 to i32
  %688 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %185, i64 0, i32 0, i32 3
  store i32 %687, i32* %688, align 8
  store i8 %228, i8* %29, align 1
  store i8 %226, i8* %30, align 1
  store i8 %227, i8* %31, align 1
  store i8 %271, i8* %32, align 1
  store i8 %270, i8* %33, align 1
  store i8 %268, i8* %34, align 1
  store i8 %269, i8* %35, align 1
  %689 = call %struct.mbuf* @sctp_add_addresses_to_i_ia(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_scoping* nonnull %17, %struct.mbuf* nonnull %185, i32 0, i16* nonnull %25, i16* nonnull %24)
  %690 = load i16, i16* %25, align 2
  %691 = icmp eq i16 %690, 0
  br i1 %691, label %704, label %692

692:                                              ; preds = %685
  %693 = load i8*, i8** %273, align 8
  %694 = load i16, i16* %24, align 2
  %695 = zext i16 %694 to i64
  %696 = getelementptr inbounds i8, i8* %693, i64 %695
  %697 = zext i16 %690 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %696, i8 0, i64 %697, i1 false)
  %698 = load i16, i16* %25, align 2
  %699 = load i16, i16* %24, align 2
  %700 = add i16 %699, %698
  store i16 %700, i16* %24, align 2
  %701 = zext i16 %698 to i32
  %702 = load i32, i32* %688, align 8
  %703 = add nsw i32 %702, %701
  store i32 %703, i32* %688, align 8
  store i16 0, i16* %25, align 2
  br label %704

704:                                              ; preds = %685, %692
  %705 = icmp eq %struct.mbuf* %154, null
  br i1 %705, label %741, label %706

706:                                              ; preds = %704, %706
  %707 = phi i32 [ %714, %706 ], [ 0, %704 ]
  %708 = phi %struct.mbuf* [ %713, %706 ], [ %154, %704 ]
  %709 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %708, i64 0, i32 0, i32 3
  %710 = load i32, i32* %709, align 8
  %711 = add nsw i32 %710, %707
  %712 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %708, i64 0, i32 0, i32 0
  %713 = load %struct.mbuf*, %struct.mbuf** %712, align 8
  %714 = and i32 %711, 65535
  %715 = icmp eq %struct.mbuf* %713, null
  br i1 %715, label %716, label %706

716:                                              ; preds = %706
  %717 = add i32 %711, 3
  %718 = and i32 %717, 65532
  %719 = sub i32 %718, %711
  %720 = trunc i32 %719 to i16
  store i16 %720, i16* %25, align 2
  %721 = bitcast %struct.mbuf* %689 to i64*
  store i64 %155, i64* %721, align 8
  br label %722

722:                                              ; preds = %722, %716
  %723 = phi %struct.mbuf* [ %689, %716 ], [ %725, %722 ]
  %724 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %723, i64 0, i32 0, i32 0
  %725 = load %struct.mbuf*, %struct.mbuf** %724, align 8
  %726 = icmp eq %struct.mbuf* %725, null
  br i1 %726, label %727, label %722

727:                                              ; preds = %722
  %728 = load i16, i16* %24, align 2
  %729 = trunc i32 %711 to i16
  %730 = add i16 %728, %729
  store i16 %730, i16* %24, align 2
  %731 = icmp eq i16 %720, 0
  br i1 %731, label %741, label %732

732:                                              ; preds = %727
  %733 = and i32 %719, 65535
  %734 = call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %723, i32 %733) #13
  %735 = icmp eq %struct.mbuf* %734, null
  br i1 %735, label %736, label %737

736:                                              ; preds = %732
  call void @m_freem(%struct.mbuf* nonnull %185) #13
  br label %916

737:                                              ; preds = %732
  %738 = load i16, i16* %25, align 2
  %739 = load i16, i16* %24, align 2
  %740 = add i16 %739, %738
  store i16 %740, i16* %24, align 2
  store i16 0, i16* %25, align 2
  br label %741

741:                                              ; preds = %704, %727, %737
  %742 = phi %struct.mbuf* [ %734, %737 ], [ %723, %727 ], [ %689, %704 ]
  %743 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 116, i32 0, i32 1, i32 1, i32 1) #13
  %744 = icmp eq %struct.mbuf* %743, null
  br i1 %744, label %862, label %745

745:                                              ; preds = %741
  %746 = call %struct.mbuf* @m_copym(%struct.mbuf* %3, i32 %5, i32 1000000000, i32 1) #13
  %747 = icmp eq %struct.mbuf* %746, null
  br i1 %747, label %860, label %748

748:                                              ; preds = %745
  %749 = call %struct.mbuf* @m_copym(%struct.mbuf* nonnull %185, i32 0, i32 1000000000, i32 1) #13
  %750 = icmp eq %struct.mbuf* %749, null
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @m_freem(%struct.mbuf* nonnull %743) #13
  br label %860

752:                                              ; preds = %748
  %753 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %743, i64 0, i32 0, i32 2
  %754 = load i8*, i8** %753, align 8
  %755 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %743, i64 0, i32 0, i32 3
  store i32 116, i32* %755, align 8
  %756 = bitcast i8* %754 to i16*
  store i16 1792, i16* %756, align 1
  %757 = getelementptr inbounds i8, i8* %754, i64 2
  %758 = bitcast i8* %757 to i16*
  store i16 0, i16* %758, align 1
  %759 = getelementptr inbounds i8, i8* %754, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %759, i8* nonnull align 1 %37, i64 16, i1 false)
  %760 = getelementptr inbounds i8, i8* %754, i64 20
  %761 = bitcast i8* %760 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %761, align 1
  %762 = getelementptr inbounds i8, i8* %754, i64 36
  %763 = bitcast i8* %762 to i32*
  store i32 %206, i32* %763, align 1
  %764 = getelementptr inbounds i8, i8* %754, i64 40
  %765 = bitcast i8* %764 to i32*
  store i32 %203, i32* %765, align 1
  %766 = getelementptr inbounds i8, i8* %754, i64 44
  %767 = bitcast i8* %766 to i32*
  store i32 %204, i32* %767, align 1
  %768 = getelementptr inbounds i8, i8* %754, i64 48
  %769 = bitcast i8* %768 to i32*
  store i32 %278, i32* %769, align 1
  %770 = getelementptr inbounds i8, i8* %754, i64 52
  %771 = bitcast i8* %770 to i32*
  store i32 %340, i32* %771, align 1
  %772 = getelementptr inbounds i8, i8* %754, i64 56
  %773 = bitcast i8* %772 to i64*
  %774 = shl nuw i64 %264, 32
  %775 = and i64 %263, 4294967295
  %776 = or i64 %774, %775
  store i64 %776, i64* %773, align 1
  %777 = getelementptr inbounds i8, i8* %754, i64 64
  %778 = bitcast i8* %777 to i32*
  store i32 0, i32* %778, align 1
  %779 = getelementptr inbounds i8, i8* %754, i64 68
  %780 = bitcast i8* %779 to i32*
  store i32 0, i32* %780, align 1
  %781 = getelementptr inbounds i8, i8* %754, i64 72
  %782 = bitcast i8* %781 to i32*
  store i32 %265, i32* %782, align 1
  %783 = getelementptr inbounds i8, i8* %754, i64 76
  %784 = bitcast i8* %783 to i64*
  %785 = shl nuw i64 %267, 32
  %786 = and i64 %266, 4294967295
  %787 = or i64 %785, %786
  store i64 %787, i64* %784, align 1
  %788 = getelementptr inbounds i8, i8* %754, i64 84
  %789 = bitcast i8* %788 to i32*
  store i32 0, i32* %789, align 1
  %790 = getelementptr inbounds i8, i8* %754, i64 88
  %791 = bitcast i8* %790 to i32*
  store i32 0, i32* %791, align 1
  %792 = getelementptr inbounds i8, i8* %754, i64 92
  %793 = bitcast i8* %792 to i32*
  store i32 %265, i32* %793, align 1
  %794 = getelementptr inbounds i8, i8* %754, i64 96
  %795 = bitcast i8* %794 to i32*
  store i32 0, i32* %795, align 1
  %796 = getelementptr inbounds i8, i8* %754, i64 100
  %797 = bitcast i8* %796 to i16*
  store i16 %210, i16* %797, align 1
  %798 = getelementptr inbounds i8, i8* %754, i64 102
  %799 = bitcast i8* %798 to i16*
  store i16 %208, i16* %799, align 1
  %800 = getelementptr inbounds i8, i8* %754, i64 104
  store i8 %228, i8* %800, align 1
  %801 = getelementptr inbounds i8, i8* %754, i64 105
  store i8 %226, i8* %801, align 1
  %802 = getelementptr inbounds i8, i8* %754, i64 106
  store i8 %227, i8* %802, align 1
  %803 = getelementptr inbounds i8, i8* %754, i64 107
  store i8 %268, i8* %803, align 1
  %804 = getelementptr inbounds i8, i8* %754, i64 108
  store i8 %269, i8* %804, align 1
  %805 = getelementptr inbounds i8, i8* %754, i64 109
  store i8 %270, i8* %805, align 1
  %806 = getelementptr inbounds i8, i8* %754, i64 110
  store i8 %271, i8* %806, align 1
  %807 = getelementptr inbounds i8, i8* %754, i64 111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %807, i8* nonnull align 1 %39, i64 5, i1 false)
  br label %808

808:                                              ; preds = %808, %752
  %809 = phi %struct.mbuf* [ %743, %752 ], [ %816, %808 ]
  %810 = phi i16 [ 0, %752 ], [ %814, %808 ]
  %811 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %809, i64 0, i32 0, i32 3
  %812 = load i32, i32* %811, align 8
  %813 = trunc i32 %812 to i16
  %814 = add i16 %810, %813
  %815 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %809, i64 0, i32 0, i32 0
  %816 = load %struct.mbuf*, %struct.mbuf** %815, align 8
  %817 = icmp eq %struct.mbuf* %816, null
  br i1 %817, label %818, label %808

818:                                              ; preds = %808
  %819 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %809, i64 0, i32 0, i32 0
  store %struct.mbuf* %746, %struct.mbuf** %819, align 8
  br label %820

820:                                              ; preds = %824, %818
  %821 = phi %struct.mbuf* [ %746, %818 ], [ %830, %824 ]
  %822 = phi i16 [ %814, %818 ], [ %828, %824 ]
  %823 = icmp eq %struct.mbuf* %821, null
  br i1 %823, label %834, label %824

824:                                              ; preds = %820
  %825 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %821, i64 0, i32 0, i32 3
  %826 = load i32, i32* %825, align 8
  %827 = trunc i32 %826 to i16
  %828 = add i16 %822, %827
  %829 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %821, i64 0, i32 0, i32 0
  %830 = load %struct.mbuf*, %struct.mbuf** %829, align 8
  %831 = icmp eq %struct.mbuf* %830, null
  br i1 %831, label %832, label %820

832:                                              ; preds = %824
  %833 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %821, i64 0, i32 0, i32 0
  store %struct.mbuf* %749, %struct.mbuf** %833, align 8
  br label %834

834:                                              ; preds = %820, %832
  %835 = phi i16 [ %828, %832 ], [ %822, %820 ]
  br label %836

836:                                              ; preds = %834, %840
  %837 = phi %struct.mbuf* [ %846, %840 ], [ %749, %834 ]
  %838 = phi i16 [ %844, %840 ], [ %835, %834 ]
  %839 = icmp eq %struct.mbuf* %837, null
  br i1 %839, label %848, label %840

840:                                              ; preds = %836
  %841 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %837, i64 0, i32 0, i32 3
  %842 = load i32, i32* %841, align 8
  %843 = trunc i32 %842 to i16
  %844 = add i16 %838, %843
  %845 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %837, i64 0, i32 0, i32 0
  %846 = load %struct.mbuf*, %struct.mbuf** %845, align 8
  %847 = icmp eq %struct.mbuf* %846, null
  br i1 %847, label %848, label %836

848:                                              ; preds = %840, %836
  %849 = phi i16 [ %844, %840 ], [ %838, %836 ]
  %850 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 20, i32 0, i32 1, i32 1, i32 1) #13
  %851 = icmp eq %struct.mbuf* %850, null
  br i1 %851, label %860, label %852

852:                                              ; preds = %848
  %853 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %837, i64 0, i32 0, i32 0
  store %struct.mbuf* %850, %struct.mbuf** %853, align 8
  %854 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %850, i64 0, i32 0, i32 3
  store i32 20, i32* %854, align 8
  %855 = add i16 %849, 20
  %856 = call i16 @llvm.bswap.i16(i16 %855) #13
  store i16 %856, i16* %758, align 1
  %857 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %850, i64 0, i32 0, i32 2
  %858 = load i8*, i8** %857, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %858, i8 0, i64 20, i1 false) #13
  %859 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %742, i64 0, i32 0, i32 0
  store %struct.mbuf* %743, %struct.mbuf** %859, align 8
  br label %863

860:                                              ; preds = %848, %745, %751
  %861 = phi %struct.mbuf* [ %746, %751 ], [ %743, %745 ], [ %743, %848 ]
  call void @m_freem(%struct.mbuf* nonnull %861) #13
  br label %862

862:                                              ; preds = %860, %741
  call void @m_freem(%struct.mbuf* nonnull %185) #13
  br label %916

863:                                              ; preds = %852, %863
  %864 = phi i32 [ %872, %863 ], [ 0, %852 ]
  %865 = phi %struct.mbuf* [ %870, %863 ], [ %743, %852 ]
  %866 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %865, i64 0, i32 0, i32 3
  %867 = load i32, i32* %866, align 8
  %868 = add nsw i32 %867, %864
  %869 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %865, i64 0, i32 0, i32 0
  %870 = load %struct.mbuf*, %struct.mbuf** %869, align 8
  %871 = icmp eq %struct.mbuf* %870, null
  %872 = and i32 %868, 65535
  br i1 %871, label %873, label %863

873:                                              ; preds = %863
  %874 = add i32 %868, 3
  %875 = and i32 %874, 65532
  %876 = sub i32 %875, %868
  %877 = trunc i32 %876 to i16
  store i16 %877, i16* %25, align 2
  %878 = load i16, i16* %24, align 2
  %879 = trunc i32 %868 to i16
  %880 = add i16 %878, %879
  store i16 %880, i16* %24, align 2
  %881 = call i16 @llvm.bswap.i16(i16 %880) #13
  store i16 %881, i16* %281, align 1
  %882 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 37
  %883 = load i8, i8* %882, align 1
  %884 = sext i8 %883 to i64
  %885 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 1, i64 %884, i64 0
  %886 = bitcast i32* %885 to i8*
  %887 = call i32 @sctp_hmac_m(i16 zeroext 1, i8* %886, i32 32, %struct.mbuf* nonnull %743, i32 4, i8* %858, i32 20) #13
  %888 = icmp eq i32 %265, 4
  br i1 %888, label %889, label %892

889:                                              ; preds = %873
  %890 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %890) #13
  store i8* null, i8** %27, align 8
  call void @m_copyback(%struct.mbuf* nonnull %743, i32 56, i32 8, i8* nonnull %890) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %890) #13
  %891 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %891) #13
  store i8* null, i8** %28, align 8
  call void @m_copyback(%struct.mbuf* nonnull %743, i32 76, i32 8, i8* nonnull %891) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %891) #13
  br label %892

892:                                              ; preds = %873, %889
  %893 = load i16, i16* %25, align 2
  %894 = icmp eq i16 %893, 0
  br i1 %894, label %900, label %895

895:                                              ; preds = %892
  %896 = zext i16 %893 to i32
  %897 = call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %865, i32 %896) #13
  %898 = icmp eq %struct.mbuf* %897, null
  br i1 %898, label %899, label %900

899:                                              ; preds = %895
  call void @m_freem(%struct.mbuf* nonnull %185) #13
  br label %916

900:                                              ; preds = %895, %892
  %901 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %902 = load i16, i16* %901, align 2
  %903 = load i16, i16* %209, align 1
  %904 = load i32, i32* %276, align 1
  %905 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* null, %struct.sctp_nets* null, %struct.sockaddr* %272, %struct.mbuf* nonnull %185, i32 0, %struct.sctp_auth_chunk* null, i16 zeroext 0, i32 0, i32 0, i16 zeroext %902, i16 zeroext %903, i32 %904)
  switch i32 %905, label %914 [
    i32 0, label %911
    i32 105, label %906
  ]

906:                                              ; preds = %900
  br i1 %47, label %907, label %909

907:                                              ; preds = %906
  %908 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 181
  store i8 1, i8* %908, align 1
  br label %909

909:                                              ; preds = %907, %906
  %910 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %914

911:                                              ; preds = %900
  br i1 %47, label %912, label %914

912:                                              ; preds = %911
  %913 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %46, i64 0, i32 181
  store i8 0, i8* %913, align 1
  br label %914

914:                                              ; preds = %900, %911, %912, %909
  %915 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %916

916:                                              ; preds = %914, %899, %862, %736, %344, %187, %183, %150, %131
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %29) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_abort(%struct.mbuf*, i32, %struct.sockaddr* nocapture readonly, %struct.sockaddr* nocapture readonly, %struct.sctphdr* nocapture readonly, i32, %struct.mbuf*, i32, i16 zeroext) local_unnamed_addr #2 {
  %10 = alloca i32, align 4
  store i32 %5, i32* %10, align 4
  %11 = call i32 @sctp_is_there_an_abort_here(%struct.mbuf* %0, i32 %1, i32* nonnull %10) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = icmp eq %struct.mbuf* %6, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  call void @m_freem(%struct.mbuf* nonnull %6) #13
  br label %18

16:                                               ; preds = %9
  %17 = load i32, i32* %10, align 4
  call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %2, %struct.sockaddr* %3, %struct.sctphdr* %4, i32 %17, i8 zeroext 6, %struct.mbuf* %6)
  br label %18

18:                                               ; preds = %13, %15, %16
  ret void
}

declare %struct.mbuf* @sctp_generate_cause(i16 zeroext, i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #7

declare i32 @sctp_select_a_tag(%struct.sctp_inpcb*, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #5

declare i32 @sctp_select_initial_TSN(%struct.sctp_pcb*) local_unnamed_addr #5

declare void @read_random(i8*, i64) local_unnamed_addr #5

declare i32 @sctp_hmac_m(i16 zeroext, i8*, i32, %struct.mbuf*, i32, i8*, i32) local_unnamed_addr #5

declare void @m_copyback(%struct.mbuf*, i32, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_get_frag_point(%struct.sctp_tcb* nocapture readonly, %struct.sctp_association* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %4 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %3, align 8
  %5 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %4, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -2080374784
  %8 = icmp eq i32 %7, -2147483648
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 77
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 53
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %13, %15
  %17 = select i1 %16, i32 %15, i32 %13
  %18 = select i1 %8, i32 -12, i32 -32
  %19 = select i1 %11, i32 -16, i32 -20
  %20 = add nsw i32 %18, %19
  %21 = add i32 %20, %17
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 115
  %23 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %22, align 8
  %24 = icmp eq %struct.sctp_auth_chklist* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %23, i64 0, i32 0, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 124
  %31 = load i16, i16* %30, align 8
  %32 = tail call i32 @sctp_get_auth_chunk_len(i16 zeroext %31) #13
  %33 = sub i32 %21, %32
  br label %34

34:                                               ; preds = %25, %2, %29
  %35 = phi i32 [ %21, %2 ], [ %33, %29 ], [ %21, %25 ]
  %36 = srem i32 %35, 4
  %37 = sub nsw i32 %35, %36
  ret i32 %37
}

declare i32 @sctp_get_auth_chunk_len(i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_toss_old_cookies(%struct.sctp_tcb*, %struct.sctp_association* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 0
  %4 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %3, align 8
  %5 = icmp eq %struct.sctp_tmit_chunk* %4, null
  br i1 %5, label %117, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 1
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 83
  %9 = icmp eq %struct.sctp_tcb* %0, null
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %12 = bitcast %struct.sctp_tmit_chunk*** %11 to i64*
  br label %13

13:                                               ; preds = %6, %115
  %14 = phi %struct.sctp_tmit_chunk* [ %4, %6 ], [ %16, %115 ]
  %15 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 6, i32 0
  %16 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %15, align 8
  %17 = bitcast %struct.sctp_tmit_chunk* %14 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 10
  br i1 %19, label %20, label %115

20:                                               ; preds = %13
  %21 = icmp eq %struct.sctp_tmit_chunk* %16, null
  %22 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 6, i32 1
  %23 = bitcast %struct.sctp_tmit_chunk*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %16, i64 0, i32 6, i32 1
  %26 = select i1 %21, %struct.sctp_tmit_chunk*** %7, %struct.sctp_tmit_chunk*** %25
  %27 = bitcast %struct.sctp_tmit_chunk*** %26 to i64*
  store i64 %24, i64* %27, align 8
  %28 = bitcast %struct.sctp_tmit_chunk** %15 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %struct.sctp_tmit_chunk*** %22 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  %32 = load i32, i32* %8, align 8
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %8, align 8
  %34 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 3
  %35 = load %struct.mbuf*, %struct.mbuf** %34, align 8
  %36 = icmp eq %struct.mbuf* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %20
  tail call void @m_freem(%struct.mbuf* nonnull %35) #13
  store %struct.mbuf* null, %struct.mbuf** %34, align 8
  br label %38

38:                                               ; preds = %20, %37
  %39 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 14
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 13
  %44 = load i16, i16* %43, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %44, i32 0) #13
  store i8 0, i8* %39, align 8
  br label %45

45:                                               ; preds = %38, %42
  br i1 %9, label %113, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 5
  %48 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %49 = icmp eq %struct.sctp_nets* %48, null
  br i1 %49, label %96, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %48, i64 0, i32 17
  %52 = atomicrmw add i32* %51, i32 -1 seq_cst
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %95

54:                                               ; preds = %50
  %55 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %56 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %55, i64 0, i32 3, i32 0
  %57 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %56, align 8
  %58 = icmp eq %struct.sctp_rtentry* %57, null
  br i1 %58, label %74, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %57, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = icmp sgt i64 %61, 1
  %63 = add nsw i64 %61, -1
  store i64 %63, i64* %60, align 8
  %64 = icmp sgt i64 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  %67 = bitcast %struct.sctp_rtentry* %57 to i8*
  tail call void @free(i8* %67) #13
  br label %68

68:                                               ; preds = %59, %66
  %69 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %70 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %69, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %70, align 8
  %71 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %72 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %71, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %72, align 8
  %73 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  br label %74

74:                                               ; preds = %54, %68
  %75 = phi %struct.sctp_nets* [ %55, %54 ], [ %73, %68 ]
  %76 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %75, i64 0, i32 47
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %75, i64 0, i32 3, i32 2
  %81 = load %struct.sctp_ifa*, %struct.sctp_ifa** %80, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %81) #13
  %82 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %83 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %82, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %83, align 8
  %84 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  br label %85

85:                                               ; preds = %74, %79
  %86 = phi %struct.sctp_nets* [ %75, %74 ], [ %84, %79 ]
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %86, i64 0, i32 47
  store i8 0, i8* %87, align 1
  %88 = load %struct.sctp_nets*, %struct.sctp_nets** %47, align 8
  %89 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %88, i64 0, i32 37
  %90 = load i16, i16* %89, align 4
  %91 = and i16 %90, -2
  store i16 %91, i16* %89, align 4
  %92 = bitcast %struct.sctp_nets** %47 to i8**
  %93 = load i8*, i8** %92, align 8
  tail call void @free(i8* %93) #13
  %94 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %95

95:                                               ; preds = %50, %85
  store %struct.sctp_nets* null, %struct.sctp_nets** %47, align 8
  br label %96

96:                                               ; preds = %46, %95
  %97 = load i16, i16* %10, align 2
  %98 = zext i16 %97 to i32
  %99 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %100 = icmp ult i32 %99, %98
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %103 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %104 = icmp ugt i32 %102, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %101, %96
  tail call void @free(i8* %17) #13
  %106 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %115

107:                                              ; preds = %101
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %15, align 8
  %108 = load i64, i64* %12, align 8
  store i64 %108, i64* %23, align 8
  %109 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %11, align 8
  store %struct.sctp_tmit_chunk* %14, %struct.sctp_tmit_chunk** %109, align 8
  store %struct.sctp_tmit_chunk** %15, %struct.sctp_tmit_chunk*** %11, align 8
  %110 = load i16, i16* %10, align 2
  %111 = add i16 %110, 1
  store i16 %111, i16* %10, align 2
  %112 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %115

113:                                              ; preds = %45
  tail call void @free(i8* %17) #13
  %114 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %115

115:                                              ; preds = %13, %105, %107, %113
  %116 = icmp eq %struct.sctp_tmit_chunk* %16, null
  br i1 %116, label %117, label %13

117:                                              ; preds = %115, %2
  ret void
}

declare void @sctp_auth_key_release(%struct.sctp_tcb*, i16 zeroext, i32) local_unnamed_addr #5

declare void @sctp_free_ifa(%struct.sctp_ifa*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_toss_old_asconf(%struct.sctp_tcb*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 19, i32 0
  %3 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2, align 8
  %4 = icmp eq %struct.sctp_tmit_chunk* %3, null
  br i1 %4, label %137, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 44
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 19, i32 1
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %9 = icmp eq %struct.sctp_tcb* %0, null
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %12 = bitcast %struct.sctp_tmit_chunk*** %11 to i64*
  br label %13

13:                                               ; preds = %5, %135
  %14 = phi %struct.sctp_tmit_chunk* [ %3, %5 ], [ %16, %135 ]
  %15 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 6, i32 0
  %16 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %15, align 8
  %17 = bitcast %struct.sctp_tmit_chunk* %14 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, -63
  br i1 %19, label %20, label %135

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 3
  %22 = load %struct.mbuf*, %struct.mbuf** %21, align 8
  %23 = icmp eq %struct.mbuf* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 2
  %26 = bitcast i8** %25 to %struct.sctp_asconf_chunk**
  %27 = load %struct.sctp_asconf_chunk*, %struct.sctp_asconf_chunk** %26, align 8
  %28 = getelementptr inbounds %struct.sctp_asconf_chunk, %struct.sctp_asconf_chunk* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 1
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #13
  %31 = load i32, i32* %6, align 8
  %32 = icmp ult i32 %30, %31
  %33 = sub i32 %31, %30
  %34 = icmp ugt i32 %33, -2147483648
  %35 = and i1 %32, %34
  br i1 %35, label %137, label %36

36:                                               ; preds = %24
  %37 = icmp ugt i32 %30, %31
  %38 = sub i32 %30, %31
  %39 = icmp sgt i32 %38, -1
  %40 = and i1 %37, %39
  br i1 %40, label %137, label %41

41:                                               ; preds = %20, %36
  %42 = icmp eq %struct.sctp_tmit_chunk* %16, null
  %43 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 6, i32 1
  %44 = bitcast %struct.sctp_tmit_chunk*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %16, i64 0, i32 6, i32 1
  %47 = select i1 %42, %struct.sctp_tmit_chunk*** %7, %struct.sctp_tmit_chunk*** %46
  %48 = bitcast %struct.sctp_tmit_chunk*** %47 to i64*
  store i64 %45, i64* %48, align 8
  %49 = bitcast %struct.sctp_tmit_chunk** %15 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %struct.sctp_tmit_chunk*** %43 to i64**
  %52 = load i64*, i64** %51, align 8
  store i64 %50, i64* %52, align 8
  %53 = load i32, i32* %8, align 8
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %8, align 8
  %55 = load %struct.mbuf*, %struct.mbuf** %21, align 8
  %56 = icmp eq %struct.mbuf* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %41
  tail call void @m_freem(%struct.mbuf* nonnull %55) #13
  store %struct.mbuf* null, %struct.mbuf** %21, align 8
  br label %58

58:                                               ; preds = %41, %57
  %59 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 14
  %60 = load i8, i8* %59, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 13
  %64 = load i16, i16* %63, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %64, i32 0) #13
  store i8 0, i8* %59, align 8
  br label %65

65:                                               ; preds = %58, %62
  br i1 %9, label %133, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %14, i64 0, i32 5
  %68 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %69 = icmp eq %struct.sctp_nets* %68, null
  br i1 %69, label %116, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %68, i64 0, i32 17
  %72 = atomicrmw add i32* %71, i32 -1 seq_cst
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %115

74:                                               ; preds = %70
  %75 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %76 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %75, i64 0, i32 3, i32 0
  %77 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %76, align 8
  %78 = icmp eq %struct.sctp_rtentry* %77, null
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %77, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = icmp sgt i64 %81, 1
  %83 = add nsw i64 %81, -1
  store i64 %83, i64* %80, align 8
  %84 = icmp sgt i64 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = bitcast %struct.sctp_rtentry* %77 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %79, %86
  %89 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %90 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %89, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %90, align 8
  %91 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %92 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %91, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %92, align 8
  %93 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  br label %94

94:                                               ; preds = %74, %88
  %95 = phi %struct.sctp_nets* [ %75, %74 ], [ %93, %88 ]
  %96 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %95, i64 0, i32 47
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %95, i64 0, i32 3, i32 2
  %101 = load %struct.sctp_ifa*, %struct.sctp_ifa** %100, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %101) #13
  %102 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %103 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %102, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %103, align 8
  %104 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  br label %105

105:                                              ; preds = %94, %99
  %106 = phi %struct.sctp_nets* [ %95, %94 ], [ %104, %99 ]
  %107 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %106, i64 0, i32 47
  store i8 0, i8* %107, align 1
  %108 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %109 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %108, i64 0, i32 37
  %110 = load i16, i16* %109, align 4
  %111 = and i16 %110, -2
  store i16 %111, i16* %109, align 4
  %112 = bitcast %struct.sctp_nets** %67 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @free(i8* %113) #13
  %114 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %115

115:                                              ; preds = %70, %105
  store %struct.sctp_nets* null, %struct.sctp_nets** %67, align 8
  br label %116

116:                                              ; preds = %66, %115
  %117 = load i16, i16* %10, align 2
  %118 = zext i16 %117 to i32
  %119 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %120 = icmp ult i32 %119, %118
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %123 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %124 = icmp ugt i32 %122, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %121, %116
  tail call void @free(i8* %17) #13
  %126 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %135

127:                                              ; preds = %121
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %15, align 8
  %128 = load i64, i64* %12, align 8
  store i64 %128, i64* %44, align 8
  %129 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %11, align 8
  store %struct.sctp_tmit_chunk* %14, %struct.sctp_tmit_chunk** %129, align 8
  store %struct.sctp_tmit_chunk** %15, %struct.sctp_tmit_chunk*** %11, align 8
  %130 = load i16, i16* %10, align 2
  %131 = add i16 %130, 1
  store i16 %131, i16* %10, align 2
  %132 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %135

133:                                              ; preds = %65
  tail call void @free(i8* %17) #13
  %134 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %135

135:                                              ; preds = %13, %125, %127, %133
  %136 = icmp eq %struct.sctp_tmit_chunk* %16, null
  br i1 %136, label %137, label %13

137:                                              ; preds = %135, %24, %36, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_fix_ecn_echo(%struct.sctp_association* nocapture readonly) local_unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 18, i32 0
  %3 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2, align 8
  %4 = icmp eq %struct.sctp_tmit_chunk* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1, %12
  %6 = phi %struct.sctp_tmit_chunk* [ %14, %12 ], [ %3, %1 ]
  %7 = bitcast %struct.sctp_tmit_chunk* %6 to i8*
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 12
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %6, i64 0, i32 7
  store i32 0, i32* %11, align 8
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %6, i64 0, i32 6, i32 0
  %14 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %13, align 8
  %15 = icmp eq %struct.sctp_tmit_chunk* %14, null
  br i1 %15, label %16, label %5

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_move_chunks_from_net(%struct.sctp_tcb* nocapture readonly, %struct.sctp_nets* readnone) local_unnamed_addr #2 {
  %3 = icmp eq %struct.sctp_nets* %1, null
  br i1 %3, label %136, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %10 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  br label %11

11:                                               ; preds = %8, %71
  %12 = phi i64 [ 0, %8 ], [ %72, %71 ]
  %13 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %9, align 8
  %14 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %13, i64 %12, i32 0, i32 0
  %15 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %14, align 8
  %16 = icmp eq %struct.sctp_stream_queue_pending* %15, null
  br i1 %16, label %71, label %17

17:                                               ; preds = %11, %67
  %18 = phi %struct.sctp_stream_queue_pending* [ %69, %67 ], [ %15, %11 ]
  %19 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %18, i64 0, i32 3
  %20 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %21 = icmp eq %struct.sctp_nets* %20, %1
  br i1 %21, label %22, label %67

22:                                               ; preds = %17
  %23 = atomicrmw add i32* %10, i32 -1 seq_cst
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %66

25:                                               ; preds = %22
  %26 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %27 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %26, i64 0, i32 3, i32 0
  %28 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %27, align 8
  %29 = icmp eq %struct.sctp_rtentry* %28, null
  br i1 %29, label %45, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %28, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp sgt i64 %32, 1
  %34 = add nsw i64 %32, -1
  store i64 %34, i64* %31, align 8
  %35 = icmp sgt i64 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = bitcast %struct.sctp_rtentry* %28 to i8*
  tail call void @free(i8* %38) #13
  br label %39

39:                                               ; preds = %30, %37
  %40 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %41 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %40, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %41, align 8
  %42 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %43 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %42, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %43, align 8
  %44 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  br label %45

45:                                               ; preds = %25, %39
  %46 = phi %struct.sctp_nets* [ %26, %25 ], [ %44, %39 ]
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %46, i64 0, i32 47
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %46, i64 0, i32 3, i32 2
  %52 = load %struct.sctp_ifa*, %struct.sctp_ifa** %51, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %52) #13
  %53 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %54 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %53, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %54, align 8
  %55 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  br label %56

56:                                               ; preds = %45, %50
  %57 = phi %struct.sctp_nets* [ %46, %45 ], [ %55, %50 ]
  %58 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %57, i64 0, i32 47
  store i8 0, i8* %58, align 1
  %59 = load %struct.sctp_nets*, %struct.sctp_nets** %19, align 8
  %60 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %59, i64 0, i32 37
  %61 = load i16, i16* %60, align 4
  %62 = and i16 %61, -2
  store i16 %62, i16* %60, align 4
  %63 = bitcast %struct.sctp_nets** %19 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @free(i8* %64) #13
  %65 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %66

66:                                               ; preds = %22, %56
  store %struct.sctp_nets* null, %struct.sctp_nets** %19, align 8
  br label %67

67:                                               ; preds = %17, %66
  %68 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %18, i64 0, i32 4, i32 0
  %69 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %68, align 8
  %70 = icmp eq %struct.sctp_stream_queue_pending* %69, null
  br i1 %70, label %71, label %17

71:                                               ; preds = %67, %11
  %72 = add nuw nsw i64 %12, 1
  %73 = load i16, i16* %5, align 2
  %74 = zext i16 %73 to i64
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %11, label %76

76:                                               ; preds = %71, %4
  %77 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 21, i32 0
  %78 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %77, align 8
  %79 = icmp eq %struct.sctp_tmit_chunk* %78, null
  br i1 %79, label %136, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  br label %82

82:                                               ; preds = %80, %132
  %83 = phi %struct.sctp_tmit_chunk* [ %134, %132 ], [ %78, %80 ]
  %84 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %83, i64 0, i32 5
  %85 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %86 = icmp eq %struct.sctp_nets* %85, %1
  br i1 %86, label %87, label %132

87:                                               ; preds = %82
  %88 = atomicrmw add i32* %81, i32 -1 seq_cst
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %131

90:                                               ; preds = %87
  %91 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %92 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %91, i64 0, i32 3, i32 0
  %93 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %92, align 8
  %94 = icmp eq %struct.sctp_rtentry* %93, null
  br i1 %94, label %110, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %93, i64 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = icmp sgt i64 %97, 1
  %99 = add nsw i64 %97, -1
  store i64 %99, i64* %96, align 8
  %100 = icmp sgt i64 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %95
  %103 = bitcast %struct.sctp_rtentry* %93 to i8*
  tail call void @free(i8* %103) #13
  br label %104

104:                                              ; preds = %95, %102
  %105 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %106 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %105, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %106, align 8
  %107 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %108 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %107, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %108, align 8
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  br label %110

110:                                              ; preds = %90, %104
  %111 = phi %struct.sctp_nets* [ %91, %90 ], [ %109, %104 ]
  %112 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %111, i64 0, i32 47
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %121, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %111, i64 0, i32 3, i32 2
  %117 = load %struct.sctp_ifa*, %struct.sctp_ifa** %116, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %117) #13
  %118 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %119 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %118, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %119, align 8
  %120 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  br label %121

121:                                              ; preds = %110, %115
  %122 = phi %struct.sctp_nets* [ %111, %110 ], [ %120, %115 ]
  %123 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %122, i64 0, i32 47
  store i8 0, i8* %123, align 1
  %124 = load %struct.sctp_nets*, %struct.sctp_nets** %84, align 8
  %125 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %124, i64 0, i32 37
  %126 = load i16, i16* %125, align 4
  %127 = and i16 %126, -2
  store i16 %127, i16* %125, align 4
  %128 = bitcast %struct.sctp_nets** %84 to i8**
  %129 = load i8*, i8** %128, align 8
  tail call void @free(i8* %129) #13
  %130 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %131

131:                                              ; preds = %87, %121
  store %struct.sctp_nets* null, %struct.sctp_nets** %84, align 8
  br label %132

132:                                              ; preds = %82, %131
  %133 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %83, i64 0, i32 6, i32 0
  %134 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %133, align 8
  %135 = icmp eq %struct.sctp_tmit_chunk* %134, null
  br i1 %135, label %136, label %82

136:                                              ; preds = %132, %76, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_queue_op_err(%struct.sctp_tcb*, %struct.mbuf*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = and i32 %4, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %12 = load i32*, i32** %11, align 8
  %13 = load volatile i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %46

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  br label %35

23:                                               ; preds = %2
  %24 = and i32 %4, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 2
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 1, i32 0, i32 1
  %31 = ptrtoint %union.anon.7* %30 to i64
  %32 = ptrtoint %union.anon.4* %29 to i64
  %33 = select i1 %25, i64 %32, i64 %31
  %34 = sub i64 %28, %33
  br label %35

35:                                               ; preds = %23, %15
  %36 = phi i64 [ %18, %15 ], [ %28, %23 ]
  %37 = phi i64 [ %22, %15 ], [ %34, %23 ]
  %38 = icmp sgt i64 %37, 3
  br i1 %38, label %39, label %46

39:                                               ; preds = %35
  %40 = inttoptr i64 %36 to i8*
  %41 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 2
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  store i8* %42, i8** %41, align 8
  %43 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1, i64 0, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 4
  store i32 %45, i32* %43, align 8
  br label %48

46:                                               ; preds = %7, %10, %35
  %47 = tail call %struct.mbuf* @m_prepend(%struct.mbuf* %1, i32 4, i32 1) #13
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi %struct.mbuf* [ %1, %39 ], [ %47, %46 ]
  %50 = icmp eq %struct.mbuf* %49, null
  br i1 %50, label %157, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %49, i64 0, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %49, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 4
  store i32 %59, i32* %57, align 8
  br label %60

60:                                               ; preds = %56, %51
  br label %61

61:                                               ; preds = %60, %61
  %62 = phi i32 [ %66, %61 ], [ 0, %60 ]
  %63 = phi %struct.mbuf* [ %68, %61 ], [ %49, %60 ]
  %64 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %63, i64 0, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, %62
  %67 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %63, i64 0, i32 0, i32 0
  %68 = load %struct.mbuf*, %struct.mbuf** %67, align 8
  %69 = icmp eq %struct.mbuf* %68, null
  br i1 %69, label %70, label %61

70:                                               ; preds = %61
  %71 = icmp ugt i32 %66, 65535
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @m_freem(%struct.mbuf* nonnull %49) #13
  br label %157

73:                                               ; preds = %70
  %74 = trunc i32 %66 to i16
  %75 = and i16 %74, 3
  %76 = icmp eq i16 %75, 0
  %77 = sub nuw nsw i16 4, %75
  %78 = icmp eq i16 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = zext i16 %77 to i32
  %82 = tail call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %63, i32 %81) #13
  %83 = icmp eq %struct.mbuf* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  tail call void @m_freem(%struct.mbuf* nonnull %49) #13
  br label %157

85:                                               ; preds = %73, %80
  %86 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %87 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %88 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %87, align 8
  %89 = icmp eq %struct.sctp_tmit_chunk* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %92 = tail call noalias i8* @malloc(i64 %91) #13
  %93 = icmp eq i8* %92, null
  br i1 %93, label %121, label %115

94:                                               ; preds = %85
  %95 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %88, i64 0, i32 6, i32 0
  %96 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %95, align 8
  %97 = icmp eq %struct.sctp_tmit_chunk* %96, null
  %98 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %88, i64 0, i32 6, i32 1
  %99 = bitcast %struct.sctp_tmit_chunk*** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %96, i64 0, i32 6, i32 1
  %102 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %103 = select i1 %97, %struct.sctp_tmit_chunk*** %102, %struct.sctp_tmit_chunk*** %101
  %104 = bitcast %struct.sctp_tmit_chunk*** %103 to i64*
  store i64 %100, i64* %104, align 8
  %105 = bitcast %struct.sctp_tmit_chunk** %95 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %struct.sctp_tmit_chunk*** %98 to i64**
  %108 = load i64*, i64** %107, align 8
  store i64 %106, i64* %108, align 8
  %109 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %110 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %88, i64 0, i32 14
  store i8 0, i8* %110, align 8
  %111 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %112 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %113 = load i16, i16* %112, align 2
  %114 = add i16 %113, -1
  store i16 %114, i16* %112, align 2
  br label %122

115:                                              ; preds = %90
  %116 = bitcast i8* %92 to %struct.sctp_tmit_chunk*
  %117 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %118 = getelementptr inbounds i8, i8* %92, i64 104
  %119 = bitcast i8* %118 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %119, align 8
  %120 = getelementptr inbounds i8, i8* %92, i64 144
  store i8 0, i8* %120, align 8
  br label %122

121:                                              ; preds = %90
  tail call void @m_freem(%struct.mbuf* nonnull %49) #13
  br label %157

122:                                              ; preds = %115, %94
  %123 = phi %struct.sctp_tmit_chunk* [ %88, %94 ], [ %116, %115 ]
  %124 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 19
  store i8 0, i8* %124, align 1
  %125 = bitcast %struct.sctp_tmit_chunk* %123 to %struct.chk_id*
  %126 = bitcast %struct.sctp_tmit_chunk* %123 to i8*
  store i8 9, i8* %126, align 8
  %127 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %125, i64 0, i32 1
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 9
  store i16 0, i16* %128, align 2
  %129 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 10
  store i16 %74, i16* %129, align 8
  %130 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 7
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 8
  store i16 0, i16* %131, align 4
  %132 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 1
  store %struct.sctp_association* %86, %struct.sctp_association** %132, align 8
  %133 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 3
  store %struct.mbuf* %49, %struct.mbuf** %133, align 8
  %134 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 5
  store %struct.sctp_nets* null, %struct.sctp_nets** %134, align 8
  %135 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %49, i64 0, i32 0, i32 2
  %136 = bitcast i8** %135 to %struct.sctp_chunkhdr**
  %137 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %136, align 8
  %138 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %137, i64 0, i32 0
  store i8 9, i8* %138, align 1
  %139 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %137, i64 0, i32 1
  store i8 0, i8* %139, align 1
  %140 = load i16, i16* %129, align 8
  %141 = tail call i16 @llvm.bswap.i16(i16 %140) #13
  %142 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %137, i64 0, i32 2
  store i16 %141, i16* %142, align 1
  %143 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %143, align 8
  %144 = load %struct.sctp_association*, %struct.sctp_association** %132, align 8
  %145 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %144, i64 0, i32 18, i32 1
  %146 = bitcast %struct.sctp_tmit_chunk*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %123, i64 0, i32 6, i32 1
  %149 = bitcast %struct.sctp_tmit_chunk*** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %145, align 8
  store %struct.sctp_tmit_chunk* %123, %struct.sctp_tmit_chunk** %150, align 8
  %151 = load %struct.sctp_association*, %struct.sctp_association** %132, align 8
  %152 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %151, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %143, %struct.sctp_tmit_chunk*** %152, align 8
  %153 = load %struct.sctp_association*, %struct.sctp_association** %132, align 8
  %154 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %153, i64 0, i32 83
  %155 = load i32, i32* %154, align 8
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %154, align 8
  br label %157

157:                                              ; preds = %48, %122, %121, %84, %72
  ret void
}

declare %struct.mbuf* @m_prepend(%struct.mbuf*, i32, i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_send_cookie_echo(%struct.mbuf*, i32, i32, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %6 = alloca %struct.sctp_paramhdr, align 2
  %7 = bitcast %struct.sctp_paramhdr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  %8 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %6, i64 0, i32 0
  store i16 -21846, i16* %8, align 2
  %9 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %6, i64 0, i32 1
  store i16 -21846, i16* %9, align 2
  %10 = add i32 %1, 20
  %11 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %10, %struct.sctp_paramhdr* nonnull %6, i32 4) #13
  %12 = icmp eq %struct.sctp_paramhdr* %11, null
  br i1 %12, label %125, label %13

13:                                               ; preds = %5, %40
  %14 = phi %struct.sctp_paramhdr* [ %44, %40 ], [ %11, %5 ]
  %15 = phi i32 [ %43, %40 ], [ %10, %5 ]
  %16 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %14, i64 0, i32 1
  %17 = load i16, i16* %16, align 1
  %18 = call i16 @llvm.bswap.i16(i16 %17) #13
  %19 = icmp ult i16 %18, 4
  br i1 %19, label %125, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %14, i64 0, i32 0
  %22 = load i16, i16* %21, align 1
  %23 = icmp eq i16 %22, 1792
  %24 = zext i16 %18 to i32
  br i1 %23, label %25, label %40

25:                                               ; preds = %20
  %26 = add nsw i32 %15, %24
  %27 = icmp sgt i32 %26, %2
  br i1 %27, label %125, label %28

28:                                               ; preds = %25
  %29 = call %struct.mbuf* @m_copym(%struct.mbuf* %0, i32 %15, i32 %24, i32 1) #13
  %30 = icmp eq %struct.mbuf* %29, null
  br i1 %30, label %125, label %31

31:                                               ; preds = %28
  %32 = and i32 %24, 3
  %33 = icmp eq i32 %32, 0
  %34 = sub nuw nsw i32 4, %32
  %35 = icmp eq i32 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %46, label %37

37:                                               ; preds = %31
  %38 = call %struct.mbuf* @sctp_pad_lastmbuf(%struct.mbuf* nonnull %29, i32 %34, %struct.mbuf* null) #13
  %39 = icmp eq %struct.mbuf* %38, null
  br i1 %39, label %125, label %46

40:                                               ; preds = %20
  %41 = add nuw nsw i32 %24, 3
  %42 = and i32 %41, 131068
  %43 = add nsw i32 %42, %15
  %44 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %43, %struct.sctp_paramhdr* nonnull %6, i32 4) #13
  %45 = icmp eq %struct.sctp_paramhdr* %44, null
  br i1 %45, label %125, label %13

46:                                               ; preds = %31, %37
  %47 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %29, i64 0, i32 0, i32 2
  %48 = bitcast i8** %47 to %struct.sctp_chunkhdr**
  %49 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %48, align 8
  %50 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %49, i64 0, i32 0
  store i8 10, i8* %50, align 1
  %51 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %49, i64 0, i32 1
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 17, i32 0
  %54 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %53, align 8
  %55 = icmp eq %struct.sctp_tmit_chunk* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %46
  %57 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %58 = call noalias i8* @malloc(i64 %57) #13
  %59 = icmp eq i8* %58, null
  br i1 %59, label %87, label %81

60:                                               ; preds = %46
  %61 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %54, i64 0, i32 6, i32 0
  %62 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %61, align 8
  %63 = icmp eq %struct.sctp_tmit_chunk* %62, null
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %54, i64 0, i32 6, i32 1
  %65 = bitcast %struct.sctp_tmit_chunk*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 1
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 17, i32 1
  %69 = select i1 %63, %struct.sctp_tmit_chunk*** %68, %struct.sctp_tmit_chunk*** %67
  %70 = bitcast %struct.sctp_tmit_chunk*** %69 to i64*
  store i64 %66, i64* %70, align 8
  %71 = bitcast %struct.sctp_tmit_chunk** %61 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %struct.sctp_tmit_chunk*** %64 to i64**
  %74 = load i64*, i64** %73, align 8
  store i64 %72, i64* %74, align 8
  %75 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %76 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %54, i64 0, i32 14
  store i8 0, i8* %76, align 8
  %77 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %78 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 143
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -1
  store i16 %80, i16* %78, align 2
  br label %88

81:                                               ; preds = %56
  %82 = bitcast i8* %58 to %struct.sctp_tmit_chunk*
  %83 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %84 = getelementptr inbounds i8, i8* %58, i64 104
  %85 = bitcast i8* %84 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %85, align 8
  %86 = getelementptr inbounds i8, i8* %58, i64 144
  store i8 0, i8* %86, align 8
  br label %88

87:                                               ; preds = %56
  call void @m_freem(%struct.mbuf* nonnull %29) #13
  br label %125

88:                                               ; preds = %81, %60
  %89 = phi %struct.sctp_tmit_chunk* [ %54, %60 ], [ %82, %81 ]
  %90 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 19
  store i8 0, i8* %90, align 1
  %91 = bitcast %struct.sctp_tmit_chunk* %89 to %struct.chk_id*
  %92 = bitcast %struct.sctp_tmit_chunk* %89 to i8*
  store i8 10, i8* %92, align 8
  %93 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %91, i64 0, i32 1
  store i8 0, i8* %93, align 1
  %94 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 9
  store i16 256, i16* %94, align 2
  %95 = add i16 %18, 3
  %96 = and i16 %95, -4
  %97 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 10
  store i16 %96, i16* %97, align 8
  %98 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 7
  store i32 0, i32* %98, align 8
  %99 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 8
  store i16 0, i16* %99, align 4
  %100 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 1
  store %struct.sctp_association* %52, %struct.sctp_association** %100, align 8
  %101 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 3
  store %struct.mbuf* %29, %struct.mbuf** %101, align 8
  %102 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 5
  store %struct.sctp_nets* %4, %struct.sctp_nets** %102, align 8
  %103 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %4, i64 0, i32 17
  %104 = atomicrmw add i32* %103, i32 1 seq_cst
  %105 = load %struct.sctp_association*, %struct.sctp_association** %100, align 8
  %106 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %105, i64 0, i32 18, i32 0
  %107 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %106, align 8
  %108 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* %107, %struct.sctp_tmit_chunk** %108, align 8
  %109 = icmp eq %struct.sctp_tmit_chunk* %107, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %88
  %111 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %106, align 8
  %112 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %111, i64 0, i32 6, i32 1
  br label %115

113:                                              ; preds = %88
  %114 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %105, i64 0, i32 18, i32 1
  br label %115

115:                                              ; preds = %113, %110
  %116 = phi %struct.sctp_tmit_chunk*** [ %114, %113 ], [ %112, %110 ]
  store %struct.sctp_tmit_chunk** %108, %struct.sctp_tmit_chunk*** %116, align 8
  %117 = load %struct.sctp_association*, %struct.sctp_association** %100, align 8
  %118 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %117, i64 0, i32 18, i32 0
  store %struct.sctp_tmit_chunk* %89, %struct.sctp_tmit_chunk** %118, align 8
  %119 = load %struct.sctp_association*, %struct.sctp_association** %100, align 8
  %120 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %119, i64 0, i32 18, i32 0
  %121 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %89, i64 0, i32 6, i32 1
  store %struct.sctp_tmit_chunk** %120, %struct.sctp_tmit_chunk*** %121, align 8
  %122 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %119, i64 0, i32 83
  %123 = load i32, i32* %122, align 8
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 8
  br label %125

125:                                              ; preds = %40, %13, %5, %37, %28, %25, %115, %87
  %126 = phi i32 [ -5, %87 ], [ 0, %115 ], [ -8, %37 ], [ -2, %28 ], [ -7, %25 ], [ -3, %5 ], [ -3, %40 ], [ -6, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret i32 %126
}

declare %struct.mbuf* @sctp_pad_lastmbuf(%struct.mbuf*, i32, %struct.mbuf*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_heartbeat_ack(%struct.sctp_tcb*, %struct.mbuf*, i32, i32, %struct.sctp_nets*) local_unnamed_addr #2 {
  %6 = icmp eq %struct.sctp_nets* %4, null
  br i1 %6, label %88, label %7

7:                                                ; preds = %5
  %8 = tail call %struct.mbuf* @m_copym(%struct.mbuf* %1, i32 %2, i32 %3, i32 1) #13
  %9 = icmp eq %struct.mbuf* %8, null
  br i1 %9, label %88, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %8, i64 0, i32 0, i32 2
  %12 = bitcast i8** %11 to %struct.sctp_chunkhdr**
  %13 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %12, align 8
  %14 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %13, i64 0, i32 0
  store i8 5, i8* %14, align 1
  %15 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %13, i64 0, i32 1
  store i8 0, i8* %15, align 1
  %16 = srem i32 %3, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = sub nsw i32 4, %16
  %20 = tail call %struct.mbuf* @sctp_pad_lastmbuf(%struct.mbuf* nonnull %8, i32 %19, %struct.mbuf* null) #13
  br label %21

21:                                               ; preds = %10, %18
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %24 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %23, align 8
  %25 = icmp eq %struct.sctp_tmit_chunk* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %28 = tail call noalias i8* @malloc(i64 %27) #13
  %29 = icmp eq i8* %28, null
  br i1 %29, label %57, label %51

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %24, i64 0, i32 6, i32 0
  %32 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %31, align 8
  %33 = icmp eq %struct.sctp_tmit_chunk* %32, null
  %34 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %24, i64 0, i32 6, i32 1
  %35 = bitcast %struct.sctp_tmit_chunk*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %32, i64 0, i32 6, i32 1
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %39 = select i1 %33, %struct.sctp_tmit_chunk*** %38, %struct.sctp_tmit_chunk*** %37
  %40 = bitcast %struct.sctp_tmit_chunk*** %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = bitcast %struct.sctp_tmit_chunk** %31 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.sctp_tmit_chunk*** %34 to i64**
  %44 = load i64*, i64** %43, align 8
  store i64 %42, i64* %44, align 8
  %45 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %46 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %24, i64 0, i32 14
  store i8 0, i8* %46, align 8
  %47 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %49 = load i16, i16* %48, align 2
  %50 = add i16 %49, -1
  store i16 %50, i16* %48, align 2
  br label %58

51:                                               ; preds = %26
  %52 = bitcast i8* %28 to %struct.sctp_tmit_chunk*
  %53 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %54 = getelementptr inbounds i8, i8* %28, i64 104
  %55 = bitcast i8* %54 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %55, align 8
  %56 = getelementptr inbounds i8, i8* %28, i64 144
  store i8 0, i8* %56, align 8
  br label %58

57:                                               ; preds = %26
  tail call void @m_freem(%struct.mbuf* nonnull %8) #13
  br label %88

58:                                               ; preds = %51, %30
  %59 = phi %struct.sctp_tmit_chunk* [ %24, %30 ], [ %52, %51 ]
  %60 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 19
  store i8 0, i8* %60, align 1
  %61 = bitcast %struct.sctp_tmit_chunk* %59 to %struct.chk_id*
  %62 = bitcast %struct.sctp_tmit_chunk* %59 to i8*
  store i8 5, i8* %62, align 8
  %63 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %61, i64 0, i32 1
  store i8 1, i8* %63, align 1
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 9
  store i16 0, i16* %64, align 2
  %65 = trunc i32 %3 to i16
  %66 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 10
  store i16 %65, i16* %66, align 8
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 7
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 8
  store i16 0, i16* %68, align 4
  %69 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 1
  store %struct.sctp_association* %22, %struct.sctp_association** %69, align 8
  %70 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 3
  store %struct.mbuf* %8, %struct.mbuf** %70, align 8
  %71 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 5
  store %struct.sctp_nets* %4, %struct.sctp_nets** %71, align 8
  %72 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %4, i64 0, i32 17
  %73 = atomicrmw add i32* %72, i32 1 seq_cst
  %74 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %74, align 8
  %75 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  %76 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %75, i64 0, i32 18, i32 1
  %77 = bitcast %struct.sctp_tmit_chunk*** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %59, i64 0, i32 6, i32 1
  %80 = bitcast %struct.sctp_tmit_chunk*** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %76, align 8
  store %struct.sctp_tmit_chunk* %59, %struct.sctp_tmit_chunk** %81, align 8
  %82 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  %83 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %82, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %74, %struct.sctp_tmit_chunk*** %83, align 8
  %84 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  %85 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %84, i64 0, i32 83
  %86 = load i32, i32* %85, align 8
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %85, align 8
  br label %88

88:                                               ; preds = %7, %5, %58, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_cookie_ack(%struct.sctp_tcb*) local_unnamed_addr #2 {
  %2 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %3 = icmp eq %struct.mbuf* %2, null
  br i1 %3, label %89, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  store i8* %7, i8** %5, align 8
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %10 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %9, align 8
  %11 = icmp eq %struct.sctp_tmit_chunk* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %14 = tail call noalias i8* @malloc(i64 %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %43, label %37

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 0
  %18 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %17, align 8
  %19 = icmp eq %struct.sctp_tmit_chunk* %18, null
  %20 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 1
  %21 = bitcast %struct.sctp_tmit_chunk*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %18, i64 0, i32 6, i32 1
  %24 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %25 = select i1 %19, %struct.sctp_tmit_chunk*** %24, %struct.sctp_tmit_chunk*** %23
  %26 = bitcast %struct.sctp_tmit_chunk*** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %struct.sctp_tmit_chunk** %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.sctp_tmit_chunk*** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %32 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 14
  store i8 0, i8* %32, align 8
  %33 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %35 = load i16, i16* %34, align 2
  %36 = add i16 %35, -1
  store i16 %36, i16* %34, align 2
  br label %44

37:                                               ; preds = %12
  %38 = bitcast i8* %14 to %struct.sctp_tmit_chunk*
  %39 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %40 = getelementptr inbounds i8, i8* %14, i64 104
  %41 = bitcast i8* %40 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %41, align 8
  %42 = getelementptr inbounds i8, i8* %14, i64 144
  store i8 0, i8* %42, align 8
  br label %44

43:                                               ; preds = %12
  tail call void @m_freem(%struct.mbuf* nonnull %2) #13
  br label %89

44:                                               ; preds = %37, %16
  %45 = phi %struct.sctp_tmit_chunk* [ %10, %16 ], [ %38, %37 ]
  %46 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 19
  store i8 0, i8* %46, align 1
  %47 = bitcast %struct.sctp_tmit_chunk* %45 to %struct.chk_id*
  %48 = bitcast %struct.sctp_tmit_chunk* %45 to i8*
  store i8 11, i8* %48, align 8
  %49 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %47, i64 0, i32 1
  store i8 1, i8* %49, align 1
  %50 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 9
  store i16 0, i16* %50, align 2
  %51 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 10
  store i16 4, i16* %51, align 8
  %52 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 7
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 8
  store i16 0, i16* %53, align 4
  %54 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 1
  store %struct.sctp_association* %8, %struct.sctp_association** %54, align 8
  %55 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 3
  store %struct.mbuf* %2, %struct.mbuf** %55, align 8
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 34
  %57 = load %struct.sctp_nets*, %struct.sctp_nets** %56, align 8
  %58 = icmp eq %struct.sctp_nets* %57, null
  %59 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  br i1 %58, label %63, label %60

60:                                               ; preds = %44
  store %struct.sctp_nets* %57, %struct.sctp_nets** %59, align 8
  %61 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %57, i64 0, i32 17
  %62 = atomicrmw add i32* %61, i32 1 seq_cst
  br label %64

63:                                               ; preds = %44
  store %struct.sctp_nets* null, %struct.sctp_nets** %59, align 8
  br label %64

64:                                               ; preds = %63, %60
  %65 = bitcast i8** %5 to %struct.sctp_chunkhdr**
  %66 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %65, align 8
  %67 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %66, i64 0, i32 0
  store i8 11, i8* %67, align 1
  %68 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %66, i64 0, i32 1
  store i8 0, i8* %68, align 1
  %69 = load i16, i16* %51, align 8
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #13
  %71 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %66, i64 0, i32 2
  store i16 %70, i16* %71, align 1
  %72 = load i16, i16* %51, align 8
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2, i64 0, i32 0, i32 3
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %75, align 8
  %76 = load %struct.sctp_association*, %struct.sctp_association** %54, align 8
  %77 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %76, i64 0, i32 18, i32 1
  %78 = bitcast %struct.sctp_tmit_chunk*** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 1
  %81 = bitcast %struct.sctp_tmit_chunk*** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %77, align 8
  store %struct.sctp_tmit_chunk* %45, %struct.sctp_tmit_chunk** %82, align 8
  %83 = load %struct.sctp_association*, %struct.sctp_association** %54, align 8
  %84 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %83, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %75, %struct.sctp_tmit_chunk*** %84, align 8
  %85 = load %struct.sctp_association*, %struct.sctp_association** %54, align 8
  %86 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %85, i64 0, i32 83
  %87 = load i32, i32* %86, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %86, align 8
  br label %89

89:                                               ; preds = %1, %64, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_shutdown_ack(%struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %3 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %4 = icmp eq %struct.mbuf* %3, null
  br i1 %4, label %87, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %3, i64 0, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 32
  store i8* %8, i8** %6, align 8
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %11 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %10, align 8
  %12 = icmp eq %struct.sctp_tmit_chunk* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %15 = tail call noalias i8* @malloc(i64 %14) #13
  %16 = icmp eq i8* %15, null
  br i1 %16, label %44, label %38

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 6, i32 0
  %19 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %18, align 8
  %20 = icmp eq %struct.sctp_tmit_chunk* %19, null
  %21 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 6, i32 1
  %22 = bitcast %struct.sctp_tmit_chunk*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %19, i64 0, i32 6, i32 1
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %26 = select i1 %20, %struct.sctp_tmit_chunk*** %25, %struct.sctp_tmit_chunk*** %24
  %27 = bitcast %struct.sctp_tmit_chunk*** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %struct.sctp_tmit_chunk** %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %struct.sctp_tmit_chunk*** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  %32 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %33 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 14
  store i8 0, i8* %33, align 8
  %34 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %35 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %36 = load i16, i16* %35, align 2
  %37 = add i16 %36, -1
  store i16 %37, i16* %35, align 2
  br label %45

38:                                               ; preds = %13
  %39 = bitcast i8* %15 to %struct.sctp_tmit_chunk*
  %40 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %41 = getelementptr inbounds i8, i8* %15, i64 104
  %42 = bitcast i8* %41 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %42, align 8
  %43 = getelementptr inbounds i8, i8* %15, i64 144
  store i8 0, i8* %43, align 8
  br label %45

44:                                               ; preds = %13
  tail call void @m_freem(%struct.mbuf* nonnull %3) #13
  br label %87

45:                                               ; preds = %38, %17
  %46 = phi %struct.sctp_tmit_chunk* [ %11, %17 ], [ %39, %38 ]
  %47 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 19
  store i8 0, i8* %47, align 1
  %48 = bitcast %struct.sctp_tmit_chunk* %46 to %struct.chk_id*
  %49 = bitcast %struct.sctp_tmit_chunk* %46 to i8*
  store i8 8, i8* %49, align 8
  %50 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %48, i64 0, i32 1
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 9
  store i16 0, i16* %51, align 2
  %52 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 10
  store i16 4, i16* %52, align 8
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 7
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 8
  store i16 0, i16* %54, align 4
  %55 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 1
  store %struct.sctp_association* %9, %struct.sctp_association** %55, align 8
  %56 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 3
  store %struct.mbuf* %3, %struct.mbuf** %56, align 8
  %57 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %57, align 8
  %58 = icmp eq %struct.sctp_nets* %1, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %61 = atomicrmw add i32* %60, i32 1 seq_cst
  br label %62

62:                                               ; preds = %45, %59
  %63 = bitcast i8** %6 to %struct.sctp_shutdown_ack_chunk**
  %64 = load %struct.sctp_shutdown_ack_chunk*, %struct.sctp_shutdown_ack_chunk** %63, align 8
  %65 = getelementptr inbounds %struct.sctp_shutdown_ack_chunk, %struct.sctp_shutdown_ack_chunk* %64, i64 0, i32 0, i32 0
  store i8 8, i8* %65, align 1
  %66 = getelementptr inbounds %struct.sctp_shutdown_ack_chunk, %struct.sctp_shutdown_ack_chunk* %64, i64 0, i32 0, i32 1
  store i8 0, i8* %66, align 1
  %67 = load i16, i16* %52, align 8
  %68 = tail call i16 @llvm.bswap.i16(i16 %67) #13
  %69 = getelementptr inbounds %struct.sctp_shutdown_ack_chunk, %struct.sctp_shutdown_ack_chunk* %64, i64 0, i32 0, i32 2
  store i16 %68, i16* %69, align 1
  %70 = load i16, i16* %52, align 8
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %3, i64 0, i32 0, i32 3
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %73, align 8
  %74 = load %struct.sctp_association*, %struct.sctp_association** %55, align 8
  %75 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %74, i64 0, i32 18, i32 1
  %76 = bitcast %struct.sctp_tmit_chunk*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %46, i64 0, i32 6, i32 1
  %79 = bitcast %struct.sctp_tmit_chunk*** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %75, align 8
  store %struct.sctp_tmit_chunk* %46, %struct.sctp_tmit_chunk** %80, align 8
  %81 = load %struct.sctp_association*, %struct.sctp_association** %55, align 8
  %82 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %81, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %73, %struct.sctp_tmit_chunk*** %82, align 8
  %83 = load %struct.sctp_association*, %struct.sctp_association** %55, align 8
  %84 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %83, i64 0, i32 83
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %84, align 8
  br label %87

87:                                               ; preds = %2, %62, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_shutdown(%struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 0
  %5 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %6 = icmp eq %struct.sctp_tmit_chunk* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2, %62
  %8 = phi %struct.sctp_tmit_chunk* [ %64, %62 ], [ %5, %2 ]
  %9 = bitcast %struct.sctp_tmit_chunk* %8 to i8*
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 7
  br i1 %11, label %12, label %62

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 5
  %14 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %15 = icmp eq %struct.sctp_nets* %14, null
  br i1 %15, label %154, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %14, i64 0, i32 17
  %18 = atomicrmw add i32* %17, i32 -1 seq_cst
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %61

20:                                               ; preds = %16
  %21 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %21, i64 0, i32 3, i32 0
  %23 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %22, align 8
  %24 = icmp eq %struct.sctp_rtentry* %23, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %23, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = icmp sgt i64 %27, 1
  %29 = add nsw i64 %27, -1
  store i64 %29, i64* %26, align 8
  %30 = icmp sgt i64 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = bitcast %struct.sctp_rtentry* %23 to i8*
  tail call void @free(i8* %33) #13
  br label %34

34:                                               ; preds = %25, %32
  %35 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %36 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %35, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %36, align 8
  %37 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %38 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %37, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %38, align 8
  %39 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  br label %40

40:                                               ; preds = %20, %34
  %41 = phi %struct.sctp_nets* [ %21, %20 ], [ %39, %34 ]
  %42 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %41, i64 0, i32 47
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %41, i64 0, i32 3, i32 2
  %47 = load %struct.sctp_ifa*, %struct.sctp_ifa** %46, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %47) #13
  %48 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %49 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %48, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %49, align 8
  %50 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  br label %51

51:                                               ; preds = %40, %45
  %52 = phi %struct.sctp_nets* [ %41, %40 ], [ %50, %45 ]
  %53 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %52, i64 0, i32 47
  store i8 0, i8* %53, align 1
  %54 = load %struct.sctp_nets*, %struct.sctp_nets** %13, align 8
  %55 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %54, i64 0, i32 37
  %56 = load i16, i16* %55, align 4
  %57 = and i16 %56, -2
  store i16 %57, i16* %55, align 4
  %58 = bitcast %struct.sctp_nets** %13 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @free(i8* %59) #13
  %60 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %61

61:                                               ; preds = %16, %51
  store %struct.sctp_nets* null, %struct.sctp_nets** %13, align 8
  br label %154

62:                                               ; preds = %7
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 6, i32 0
  %64 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %63, align 8
  %65 = icmp eq %struct.sctp_tmit_chunk* %64, null
  br i1 %65, label %66, label %7

66:                                               ; preds = %62, %2
  %67 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %68 = icmp eq %struct.mbuf* %67, null
  br i1 %68, label %187, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %67, i64 0, i32 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 32
  store i8* %72, i8** %70, align 8
  %73 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %74 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %73, align 8
  %75 = icmp eq %struct.sctp_tmit_chunk* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %78 = tail call noalias i8* @malloc(i64 %77) #13
  %79 = icmp eq i8* %78, null
  br i1 %79, label %107, label %101

80:                                               ; preds = %69
  %81 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %74, i64 0, i32 6, i32 0
  %82 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %81, align 8
  %83 = icmp eq %struct.sctp_tmit_chunk* %82, null
  %84 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %74, i64 0, i32 6, i32 1
  %85 = bitcast %struct.sctp_tmit_chunk*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %82, i64 0, i32 6, i32 1
  %88 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %89 = select i1 %83, %struct.sctp_tmit_chunk*** %88, %struct.sctp_tmit_chunk*** %87
  %90 = bitcast %struct.sctp_tmit_chunk*** %89 to i64*
  store i64 %86, i64* %90, align 8
  %91 = bitcast %struct.sctp_tmit_chunk** %81 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %struct.sctp_tmit_chunk*** %84 to i64**
  %94 = load i64*, i64** %93, align 8
  store i64 %92, i64* %94, align 8
  %95 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %96 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %74, i64 0, i32 14
  store i8 0, i8* %96, align 8
  %97 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %98 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %99 = load i16, i16* %98, align 2
  %100 = add i16 %99, -1
  store i16 %100, i16* %98, align 2
  br label %108

101:                                              ; preds = %76
  %102 = bitcast i8* %78 to %struct.sctp_tmit_chunk*
  %103 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %104 = getelementptr inbounds i8, i8* %78, i64 104
  %105 = bitcast i8* %104 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %105, align 8
  %106 = getelementptr inbounds i8, i8* %78, i64 144
  store i8 0, i8* %106, align 8
  br label %108

107:                                              ; preds = %76
  tail call void @m_freem(%struct.mbuf* nonnull %67) #13
  br label %187

108:                                              ; preds = %101, %80
  %109 = phi %struct.sctp_tmit_chunk* [ %74, %80 ], [ %102, %101 ]
  %110 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 19
  store i8 0, i8* %110, align 1
  %111 = bitcast %struct.sctp_tmit_chunk* %109 to %struct.chk_id*
  %112 = bitcast %struct.sctp_tmit_chunk* %109 to i8*
  store i8 7, i8* %112, align 8
  %113 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %111, i64 0, i32 1
  store i8 1, i8* %113, align 1
  %114 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 9
  store i16 0, i16* %114, align 2
  %115 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 10
  store i16 8, i16* %115, align 8
  %116 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 7
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 8
  store i16 0, i16* %117, align 4
  %118 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 1
  store %struct.sctp_association* %3, %struct.sctp_association** %118, align 8
  %119 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 3
  store %struct.mbuf* %67, %struct.mbuf** %119, align 8
  %120 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %120, align 8
  %121 = icmp eq %struct.sctp_nets* %1, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %108
  %123 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %124 = atomicrmw add i32* %123, i32 1 seq_cst
  br label %125

125:                                              ; preds = %108, %122
  %126 = bitcast i8** %70 to %struct.sctp_shutdown_chunk**
  %127 = load %struct.sctp_shutdown_chunk*, %struct.sctp_shutdown_chunk** %126, align 8
  %128 = getelementptr inbounds %struct.sctp_shutdown_chunk, %struct.sctp_shutdown_chunk* %127, i64 0, i32 0, i32 0
  store i8 7, i8* %128, align 1
  %129 = getelementptr inbounds %struct.sctp_shutdown_chunk, %struct.sctp_shutdown_chunk* %127, i64 0, i32 0, i32 1
  store i8 0, i8* %129, align 1
  %130 = load i16, i16* %115, align 8
  %131 = tail call i16 @llvm.bswap.i16(i16 %130) #13
  %132 = getelementptr inbounds %struct.sctp_shutdown_chunk, %struct.sctp_shutdown_chunk* %127, i64 0, i32 0, i32 2
  store i16 %131, i16* %132, align 1
  %133 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 59
  %134 = load i32, i32* %133, align 4
  %135 = tail call i32 @llvm.bswap.i32(i32 %134) #13
  %136 = getelementptr inbounds %struct.sctp_shutdown_chunk, %struct.sctp_shutdown_chunk* %127, i64 0, i32 1
  store i32 %135, i32* %136, align 1
  %137 = load i16, i16* %115, align 8
  %138 = zext i16 %137 to i32
  %139 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %67, i64 0, i32 0, i32 3
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %140, align 8
  %141 = load %struct.sctp_association*, %struct.sctp_association** %118, align 8
  %142 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %141, i64 0, i32 18, i32 1
  %143 = bitcast %struct.sctp_tmit_chunk*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %109, i64 0, i32 6, i32 1
  %146 = bitcast %struct.sctp_tmit_chunk*** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %142, align 8
  store %struct.sctp_tmit_chunk* %109, %struct.sctp_tmit_chunk** %147, align 8
  %148 = load %struct.sctp_association*, %struct.sctp_association** %118, align 8
  %149 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %148, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %140, %struct.sctp_tmit_chunk*** %149, align 8
  %150 = load %struct.sctp_association*, %struct.sctp_association** %118, align 8
  %151 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %150, i64 0, i32 83
  %152 = load i32, i32* %151, align 8
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %151, align 8
  br label %187

154:                                              ; preds = %61, %12
  %155 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 6, i32 0
  %156 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %155, align 8
  %157 = icmp eq %struct.sctp_tmit_chunk* %156, null
  %158 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 6, i32 1
  %159 = bitcast %struct.sctp_tmit_chunk*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %162 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %156, i64 0, i32 6, i32 1
  %163 = select i1 %157, %struct.sctp_tmit_chunk*** %161, %struct.sctp_tmit_chunk*** %162
  %164 = bitcast %struct.sctp_tmit_chunk*** %163 to i64*
  store i64 %160, i64* %164, align 8
  %165 = bitcast %struct.sctp_tmit_chunk** %155 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %struct.sctp_tmit_chunk*** %158 to i64**
  %168 = load i64*, i64** %167, align 8
  store i64 %166, i64* %168, align 8
  store %struct.sctp_nets* %1, %struct.sctp_nets** %13, align 8
  %169 = icmp eq %struct.sctp_nets* %1, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %154
  %171 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %172 = atomicrmw add i32* %171, i32 1 seq_cst
  br label %173

173:                                              ; preds = %154, %170
  %174 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 3
  %175 = load %struct.mbuf*, %struct.mbuf** %174, align 8
  %176 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %175, i64 0, i32 0, i32 2
  %177 = bitcast i8** %176 to %struct.sctp_shutdown_chunk**
  %178 = load %struct.sctp_shutdown_chunk*, %struct.sctp_shutdown_chunk** %177, align 8
  %179 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 59
  %180 = load i32, i32* %179, align 4
  %181 = tail call i32 @llvm.bswap.i32(i32 %180) #13
  %182 = getelementptr inbounds %struct.sctp_shutdown_chunk, %struct.sctp_shutdown_chunk* %178, i64 0, i32 1
  store i32 %181, i32* %182, align 1
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %155, align 8
  %183 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %184 = bitcast %struct.sctp_tmit_chunk*** %183 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %159, align 8
  %186 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %183, align 8
  store %struct.sctp_tmit_chunk* %8, %struct.sctp_tmit_chunk** %186, align 8
  store %struct.sctp_tmit_chunk** %155, %struct.sctp_tmit_chunk*** %183, align 8
  br label %187

187:                                              ; preds = %125, %173, %66, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_asconf(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13
  store i32 -1431655766, i32* %4, align 4
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 19, i32 0
  %8 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %7, align 8
  %9 = icmp eq %struct.sctp_tmit_chunk* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %12 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %11, align 8
  %13 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %12, i64 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 16777216
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %91, label %17

17:                                               ; preds = %10, %3
  %18 = call %struct.mbuf* @sctp_compose_asconf(%struct.sctp_tcb* %0, i32* nonnull %4, i32 %2) #13
  %19 = icmp eq %struct.mbuf* %18, null
  br i1 %19, label %91, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %22 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %21, align 8
  %23 = icmp eq %struct.sctp_tmit_chunk* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %26 = call noalias i8* @malloc(i64 %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %55, label %49

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %22, i64 0, i32 6, i32 0
  %30 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %29, align 8
  %31 = icmp eq %struct.sctp_tmit_chunk* %30, null
  %32 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %22, i64 0, i32 6, i32 1
  %33 = bitcast %struct.sctp_tmit_chunk*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %30, i64 0, i32 6, i32 1
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %37 = select i1 %31, %struct.sctp_tmit_chunk*** %36, %struct.sctp_tmit_chunk*** %35
  %38 = bitcast %struct.sctp_tmit_chunk*** %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = bitcast %struct.sctp_tmit_chunk** %29 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %struct.sctp_tmit_chunk*** %32 to i64**
  %42 = load i64*, i64** %41, align 8
  store i64 %40, i64* %42, align 8
  %43 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %44 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %22, i64 0, i32 14
  store i8 0, i8* %44, align 8
  %45 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %46 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -1
  store i16 %48, i16* %46, align 2
  br label %56

49:                                               ; preds = %24
  %50 = bitcast i8* %26 to %struct.sctp_tmit_chunk*
  %51 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %52 = getelementptr inbounds i8, i8* %26, i64 104
  %53 = bitcast i8* %52 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %53, align 8
  %54 = getelementptr inbounds i8, i8* %26, i64 144
  store i8 0, i8* %54, align 8
  br label %56

55:                                               ; preds = %24
  call void @m_freem(%struct.mbuf* nonnull %18) #13
  br label %91

56:                                               ; preds = %49, %28
  %57 = phi %struct.sctp_tmit_chunk* [ %22, %28 ], [ %50, %49 ]
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 19
  store i8 0, i8* %58, align 1
  %59 = bitcast %struct.sctp_tmit_chunk* %57 to %struct.chk_id*
  %60 = bitcast %struct.sctp_tmit_chunk* %57 to i8*
  store i8 -63, i8* %60, align 8
  %61 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %59, i64 0, i32 1
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 9
  store i16 256, i16* %62, align 2
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 3
  store %struct.mbuf* %18, %struct.mbuf** %63, align 8
  %64 = load i32, i32* %4, align 4
  %65 = trunc i32 %64 to i16
  %66 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 10
  store i16 %65, i16* %66, align 8
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 7
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 8
  store i16 0, i16* %68, align 4
  %69 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 1
  store %struct.sctp_association* %6, %struct.sctp_association** %69, align 8
  %70 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %70, align 8
  %71 = icmp eq %struct.sctp_nets* %1, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %56
  %73 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %74 = atomicrmw add i32* %73, i32 1 seq_cst
  %75 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  br label %76

76:                                               ; preds = %56, %72
  %77 = phi %struct.sctp_association* [ %6, %56 ], [ %75, %72 ]
  %78 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %78, align 8
  %79 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %77, i64 0, i32 19, i32 1
  %80 = bitcast %struct.sctp_tmit_chunk*** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 1
  %83 = bitcast %struct.sctp_tmit_chunk*** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %79, align 8
  store %struct.sctp_tmit_chunk* %57, %struct.sctp_tmit_chunk** %84, align 8
  %85 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  %86 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %85, i64 0, i32 19, i32 1
  store %struct.sctp_tmit_chunk** %78, %struct.sctp_tmit_chunk*** %86, align 8
  %87 = load %struct.sctp_association*, %struct.sctp_association** %69, align 8
  %88 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %87, i64 0, i32 83
  %89 = load i32, i32* %88, align 8
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %88, align 8
  br label %91

91:                                               ; preds = %17, %10, %76, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13
  ret void
}

declare %struct.mbuf* @sctp_compose_asconf(%struct.sctp_tcb*, i32*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_asconf_ack(%struct.sctp_tcb*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 24, i32 1
  %4 = bitcast %struct.sctp_asconf_ack*** %3 to %struct.sctp_asconf_ackhead**
  %5 = load %struct.sctp_asconf_ackhead*, %struct.sctp_asconf_ackhead** %4, align 8
  %6 = getelementptr inbounds %struct.sctp_asconf_ackhead, %struct.sctp_asconf_ackhead* %5, i64 0, i32 1
  %7 = load %struct.sctp_asconf_ack**, %struct.sctp_asconf_ack*** %6, align 8
  %8 = load %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** %7, align 8
  %9 = icmp eq %struct.sctp_asconf_ack* %8, null
  br i1 %9, label %127, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.sctp_asconf_ack, %struct.sctp_asconf_ack* %8, i64 0, i32 2
  %12 = load %struct.sctp_nets*, %struct.sctp_nets** %11, align 8
  %13 = icmp ne %struct.sctp_nets* %12, null
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 34
  %15 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %16 = icmp eq %struct.sctp_nets* %12, %15
  %17 = and i1 %13, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %10
  %19 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %0, %struct.sctp_nets* nonnull %12, i32 0) #13
  %20 = icmp eq %struct.sctp_nets* %19, null
  br i1 %20, label %21, label %40

21:                                               ; preds = %18
  %22 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %23 = icmp eq %struct.sctp_nets* %22, null
  br i1 %23, label %24, label %40

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %26 = load %struct.sctp_nets*, %struct.sctp_nets** %25, align 8
  %27 = icmp eq %struct.sctp_nets* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %30 = load %struct.sctp_nets*, %struct.sctp_nets** %29, align 8
  br label %40

31:                                               ; preds = %10
  %32 = icmp eq %struct.sctp_nets* %15, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %35 = load %struct.sctp_nets*, %struct.sctp_nets** %34, align 8
  %36 = icmp eq %struct.sctp_nets* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %39 = load %struct.sctp_nets*, %struct.sctp_nets** %38, align 8
  br label %40

40:                                               ; preds = %31, %33, %21, %24, %37, %18, %28
  %41 = phi %struct.sctp_nets* [ %30, %28 ], [ %19, %18 ], [ %39, %37 ], [ %26, %24 ], [ %22, %21 ], [ %35, %33 ], [ %15, %31 ]
  store %struct.sctp_nets* %41, %struct.sctp_nets** %11, align 8
  %42 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 24, i32 0
  %43 = load %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** %42, align 8
  %44 = icmp eq %struct.sctp_asconf_ack* %43, null
  br i1 %44, label %127, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %49 = icmp eq %struct.sctp_nets* %41, null
  %50 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %41, i64 0, i32 17
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %52 = bitcast %struct.sctp_tmit_chunk*** %51 to i64*
  br label %53

53:                                               ; preds = %45, %123
  %54 = phi %struct.sctp_asconf_ack* [ %43, %45 ], [ %125, %123 ]
  %55 = getelementptr inbounds %struct.sctp_asconf_ack, %struct.sctp_asconf_ack* %54, i64 0, i32 3
  %56 = load %struct.mbuf*, %struct.mbuf** %55, align 8
  %57 = icmp eq %struct.mbuf* %56, null
  br i1 %57, label %123, label %58

58:                                               ; preds = %53
  %59 = tail call %struct.mbuf* @m_copym(%struct.mbuf* nonnull %56, i32 0, i32 1000000000, i32 1) #13
  %60 = icmp eq %struct.mbuf* %59, null
  br i1 %60, label %127, label %61

61:                                               ; preds = %58
  %62 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %46, align 8
  %63 = icmp eq %struct.sctp_tmit_chunk* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %66 = tail call noalias i8* @malloc(i64 %65) #13
  %67 = icmp eq i8* %66, null
  br i1 %67, label %93, label %87

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 0
  %70 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %69, align 8
  %71 = icmp eq %struct.sctp_tmit_chunk* %70, null
  %72 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 1
  %73 = bitcast %struct.sctp_tmit_chunk*** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %70, i64 0, i32 6, i32 1
  %76 = select i1 %71, %struct.sctp_tmit_chunk*** %47, %struct.sctp_tmit_chunk*** %75
  %77 = bitcast %struct.sctp_tmit_chunk*** %76 to i64*
  store i64 %74, i64* %77, align 8
  %78 = bitcast %struct.sctp_tmit_chunk** %69 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %struct.sctp_tmit_chunk*** %72 to i64**
  %81 = load i64*, i64** %80, align 8
  store i64 %79, i64* %81, align 8
  %82 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %83 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 14
  store i8 0, i8* %83, align 8
  %84 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %85 = load i16, i16* %48, align 2
  %86 = add i16 %85, -1
  store i16 %86, i16* %48, align 2
  br label %94

87:                                               ; preds = %64
  %88 = bitcast i8* %66 to %struct.sctp_tmit_chunk*
  %89 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %90 = getelementptr inbounds i8, i8* %66, i64 104
  %91 = bitcast i8* %90 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %91, align 8
  %92 = getelementptr inbounds i8, i8* %66, i64 144
  store i8 0, i8* %92, align 8
  br label %94

93:                                               ; preds = %64
  tail call void @m_freem(%struct.mbuf* nonnull %59) #13
  br label %127

94:                                               ; preds = %87, %68
  %95 = phi %struct.sctp_tmit_chunk* [ %62, %68 ], [ %88, %87 ]
  %96 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 19
  store i8 0, i8* %96, align 1
  %97 = bitcast %struct.sctp_tmit_chunk* %95 to %struct.chk_id*
  %98 = bitcast %struct.sctp_tmit_chunk* %95 to i8*
  store i8 -128, i8* %98, align 8
  %99 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %97, i64 0, i32 1
  store i8 1, i8* %99, align 1
  %100 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 9
  store i16 256, i16* %100, align 2
  %101 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 5
  store %struct.sctp_nets* %41, %struct.sctp_nets** %101, align 8
  br i1 %49, label %104, label %102

102:                                              ; preds = %94
  %103 = atomicrmw add i32* %50, i32 1 seq_cst
  br label %104

104:                                              ; preds = %94, %102
  %105 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 3
  store %struct.mbuf* %59, %struct.mbuf** %105, align 8
  %106 = getelementptr inbounds %struct.sctp_asconf_ack, %struct.sctp_asconf_ack* %54, i64 0, i32 4
  %107 = load i16, i16* %106, align 8
  %108 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 10
  store i16 %107, i16* %108, align 8
  %109 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 7
  store i32 0, i32* %109, align 8
  %110 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 8
  store i16 0, i16* %110, align 4
  %111 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 1
  store %struct.sctp_association* %2, %struct.sctp_association** %111, align 8
  %112 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %112, align 8
  %113 = load i64, i64* %52, align 8
  %114 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %95, i64 0, i32 6, i32 1
  %115 = bitcast %struct.sctp_tmit_chunk*** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %51, align 8
  store %struct.sctp_tmit_chunk* %95, %struct.sctp_tmit_chunk** %116, align 8
  %117 = load %struct.sctp_association*, %struct.sctp_association** %111, align 8
  %118 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %117, i64 0, i32 18, i32 1
  store %struct.sctp_tmit_chunk** %112, %struct.sctp_tmit_chunk*** %118, align 8
  %119 = load %struct.sctp_association*, %struct.sctp_association** %111, align 8
  %120 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %119, i64 0, i32 83
  %121 = load i32, i32* %120, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %53, %104
  %124 = getelementptr inbounds %struct.sctp_asconf_ack, %struct.sctp_asconf_ack* %54, i64 0, i32 0, i32 0
  %125 = load %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** %124, align 8
  %126 = icmp eq %struct.sctp_asconf_ack* %125, null
  br i1 %126, label %127, label %53

127:                                              ; preds = %58, %123, %40, %1, %93
  ret void
}

declare %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_chunk_output(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32) local_unnamed_addr #2 {
  %5 = alloca [256 x %struct.sctp_tmit_chunk*], align 16
  %6 = alloca %struct.mbuf*, align 8
  %7 = alloca %struct.sctp_auth_chunk*, align 8
  %8 = alloca i32, align 4
  %9 = alloca [256 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.timeval, align 8
  %13 = alloca i32, align 4
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #13
  store i32 -1431655766, i32* %10, align 4
  %15 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  store i32 -1431655766, i32* %11, align 4
  %16 = bitcast %struct.timeval* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = bitcast i32* %13 to i8*
  %18 = bitcast %struct.timeval* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #13
  store i32 0, i32* %13, align 4
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %21 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %20, align 8
  %22 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %21, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, -2080374784
  %25 = icmp eq i32 %24, -2147483648
  %26 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 0
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 77
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 53
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %30, %32
  %34 = select i1 %33, i32 %32, i32 %30
  %35 = select i1 %25, i32 -12, i32 -32
  %36 = select i1 %28, i32 -16, i32 -20
  %37 = add nsw i32 %35, %36
  %38 = add i32 %37, %34
  %39 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 115
  %40 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %39, align 8
  %41 = icmp eq %struct.sctp_auth_chklist* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %4
  %43 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %40, i64 0, i32 0, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 124
  %48 = load i16, i16* %47, align 8
  %49 = tail call i32 @sctp_get_auth_chunk_len(i16 zeroext %48) #13
  %50 = sub i32 %38, %49
  br label %51

51:                                               ; preds = %4, %42, %46
  %52 = phi i32 [ %38, %4 ], [ %50, %46 ], [ %38, %42 ]
  %53 = srem i32 %52, 4
  %54 = sub nsw i32 %52, %53
  %55 = icmp eq i32 %2, 0
  %56 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 8
  %57 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  %58 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  %60 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 19, i32 0
  %61 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %62 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 160
  %63 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 7, i32 0, i32 4
  %64 = bitcast [256 x %struct.sctp_tmit_chunk*]* %5 to i8*
  %65 = bitcast %struct.mbuf** %6 to i8*
  %66 = bitcast %struct.sctp_auth_chunk** %7 to i8*
  %67 = bitcast i32* %8 to i8*
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 5
  %69 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 25
  %71 = icmp eq %struct.sctp_tcb* %1, null
  %72 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 163
  %73 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 124
  %74 = bitcast %struct.sctp_auth_chunk** %7 to i8**
  %75 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %76 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 12
  %77 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 49
  %78 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 181
  %79 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %80 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 74
  %81 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 55
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %83 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  %84 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 14
  %85 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %5, i64 0, i64 0
  %86 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 4
  %87 = bitcast %struct.timeval* %86 to i8*
  %88 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 93
  %89 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 86
  %90 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 87
  %91 = icmp eq i32 %2, 1
  %92 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 148
  %93 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 0
  %94 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 147
  %95 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 37, i32 7
  %96 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  %97 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %98 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 151
  %99 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 142
  br label %100

100:                                              ; preds = %928, %51
  %101 = phi i32 [ 0, %51 ], [ %903, %928 ]
  %102 = phi i32 [ 0, %51 ], [ %774, %928 ]
  br i1 %55, label %103, label %109

103:                                              ; preds = %100
  %104 = load i64, i64* %56, align 8
  %105 = lshr i64 %104, 8
  %106 = trunc i64 %105 to i32
  %107 = and i32 %106, 1
  %108 = xor i32 %107, 1
  br label %109

109:                                              ; preds = %100, %103
  %110 = phi i32 [ %108, %103 ], [ 0, %100 ]
  %111 = load i32, i32* %57, align 4
  %112 = load i32, i32* %58, align 4
  %113 = sub i32 %111, %112
  %114 = icmp slt i32 %113, 1
  br i1 %114, label %115, label %127

115:                                              ; preds = %109
  %116 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %117 = icmp eq %struct.sctp_tmit_chunk* %116, null
  br i1 %117, label %118, label %127

118:                                              ; preds = %115
  %119 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %60, align 8
  %120 = icmp eq %struct.sctp_tmit_chunk* %119, null
  br i1 %120, label %121, label %127

121:                                              ; preds = %118
  %122 = load i32, i32* %61, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load i8, i8* %62, align 2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %931, label %127

127:                                              ; preds = %124, %121, %118, %115, %109
  %128 = load i32, i32* %63, align 8
  %129 = and i32 %128, 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  call void @sctp_send_sack(%struct.sctp_tcb* %1, i32 %3)
  %132 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %20, align 8
  call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %132, %struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 -1879048189) #13
  br label %133

133:                                              ; preds = %127, %131
  br label %134

134:                                              ; preds = %133, %769
  %135 = phi i32 [ %735, %769 ], [ %102, %133 ]
  %136 = load i32, i32* %61, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %773, label %138

138:                                              ; preds = %134
  switch i32 %2, label %141 [
    i32 14, label %139
    i32 6, label %737
  ]

139:                                              ; preds = %138
  %140 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_association* %19, i32* nonnull %10, i32* nonnull %11, i32 1, i32 14, %struct.timeval* nonnull %12, i32* nonnull %13, i32 %54, i32 %3)
  br label %931

141:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %64) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 2048, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #13
  store i32 0, i32* %8, align 4
  store i32 0, i32* %10, align 4
  store %struct.mbuf* null, %struct.mbuf** %6, align 8
  %142 = load i16, i16* %68, align 8
  %143 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %69, align 8
  %144 = icmp eq %struct.sctp_tmit_chunk* %143, null
  %145 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %146 = icmp eq %struct.sctp_tmit_chunk* %145, null
  br i1 %144, label %147, label %149

147:                                              ; preds = %141
  br i1 %146, label %148, label %150

148:                                              ; preds = %147
  store i32 0, i32* %89, align 4
  store i32 0, i32* %90, align 8
  store i32 0, i32* %10, align 4
  br label %730

149:                                              ; preds = %141
  br i1 %146, label %261, label %150

150:                                              ; preds = %149, %147
  br label %151

151:                                              ; preds = %150, %208
  %152 = phi %struct.sctp_tmit_chunk* [ %210, %208 ], [ %145, %150 ]
  %153 = bitcast %struct.sctp_tmit_chunk* %152 to i8*
  %154 = load i8, i8* %153, align 8
  switch i8 %154, label %208 [
    i8 10, label %155
    i8 -126, label %155
    i8 -64, label %155
  ]

155:                                              ; preds = %151, %151, %151
  %156 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 7
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 4
  br i1 %158, label %159, label %208

159:                                              ; preds = %155
  %160 = icmp eq i8 %154, -126
  br i1 %160, label %161, label %164

161:                                              ; preds = %159
  %162 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %70, align 8
  %163 = icmp eq %struct.sctp_tmit_chunk* %152, %162
  br i1 %163, label %164, label %208

164:                                              ; preds = %161, %159
  %165 = bitcast %struct.sctp_tmit_chunk* %152 to i8*
  %166 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 7
  %167 = icmp eq i8 %154, -64
  %168 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %39, align 8
  %169 = icmp eq %struct.sctp_auth_chklist* %168, null
  br i1 %169, label %212, label %170

170:                                              ; preds = %164
  %171 = zext i8 %154 to i64
  %172 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %168, i64 0, i32 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %212, label %175

175:                                              ; preds = %170
  br i1 %71, label %205, label %176

176:                                              ; preds = %175
  %177 = load i8, i8* %72, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %205, label %179

179:                                              ; preds = %176
  %180 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %181 = icmp eq %struct.mbuf* %180, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %180, i64 0, i32 0, i32 2
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 32
  store i8* %185, i8** %183, align 8
  %186 = bitcast i8* %185 to i64*
  store i64 15, i64* %186, align 1
  %187 = load i16, i16* %73, align 8
  %188 = call i32 @sctp_get_hmac_digest_len(i16 zeroext %187) #13
  %189 = add i32 %188, 8
  %190 = trunc i32 %189 to i16
  %191 = call i16 @llvm.bswap.i16(i16 %190) #13
  %192 = getelementptr inbounds i8, i8* %184, i64 34
  %193 = bitcast i8* %192 to i16*
  store i16 %191, i16* %193, align 1
  %194 = load i16, i16* %73, align 8
  %195 = call i16 @llvm.bswap.i16(i16 %194) #13
  %196 = getelementptr inbounds i8, i8* %184, i64 38
  %197 = bitcast i8* %196 to i16*
  store i16 %195, i16* %197, align 1
  store i32 0, i32* %8, align 4
  %198 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %180, i64 0, i32 0, i32 3
  store i32 %189, i32* %198, align 8
  br label %199

199:                                              ; preds = %199, %182
  %200 = phi %struct.mbuf* [ %202, %199 ], [ %180, %182 ]
  %201 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %200, i64 0, i32 0, i32 0
  %202 = load %struct.mbuf*, %struct.mbuf** %201, align 8
  %203 = icmp eq %struct.mbuf* %202, null
  br i1 %203, label %204, label %199

204:                                              ; preds = %199
  store %struct.mbuf* %200, %struct.mbuf** %6, align 8
  store i8* %185, i8** %74, align 8
  br label %205

205:                                              ; preds = %204, %179, %176, %175
  %206 = phi %struct.mbuf* [ null, %175 ], [ null, %176 ], [ null, %179 ], [ %180, %204 ]
  %207 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %212

208:                                              ; preds = %161, %155, %151
  %209 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 6, i32 0
  %210 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %209, align 8
  %211 = icmp eq %struct.sctp_tmit_chunk* %210, null
  br i1 %211, label %258, label %151

212:                                              ; preds = %205, %170, %164
  %213 = phi %struct.mbuf* [ null, %164 ], [ %206, %205 ], [ null, %170 ]
  %214 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 3
  %215 = load %struct.mbuf*, %struct.mbuf** %214, align 8
  %216 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 10
  %217 = load i16, i16* %216, align 8
  %218 = zext i16 %217 to i32
  %219 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 19
  %220 = load i8, i8* %219, align 1
  %221 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %215, %struct.mbuf* %213, %struct.mbuf** nonnull %6, i32 0, i32 %218, i8 zeroext %220) #13
  %222 = icmp eq %struct.mbuf* %221, null
  br i1 %222, label %223, label %225

223:                                              ; preds = %212
  %224 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %69, align 8
  br label %258

225:                                              ; preds = %212
  %226 = load i8, i8* %165, align 8
  switch i8 %226, label %232 [
    i8 10, label %228
    i8 -63, label %227
  ]

227:                                              ; preds = %225
  br label %228

228:                                              ; preds = %225, %227
  %229 = phi i32 [ 10, %227 ], [ 6, %225 ]
  %230 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 5
  %231 = load %struct.sctp_nets*, %struct.sctp_nets** %230, align 8
  call void @sctp_timer_start(i32 %229, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %231) #13
  br label %232

232:                                              ; preds = %228, %225
  %233 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 8
  %234 = load i16, i16* %233, align 4
  %235 = add i16 %234, 1
  store i16 %235, i16* %233, align 4
  %236 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %152, i64 0, i32 5
  %237 = load %struct.sctp_nets*, %struct.sctp_nets** %236, align 8
  %238 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %237, i64 0, i32 3, i32 1
  %239 = bitcast %union.sctp_sockstore* %238 to %struct.sockaddr*
  %240 = load i32, i32* %8, align 4
  %241 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %242 = load i16, i16* %68, align 8
  %243 = load i16, i16* %75, align 2
  %244 = load i16, i16* %76, align 8
  %245 = load i32, i32* %77, align 4
  %246 = call i32 @llvm.bswap.i32(i32 %245) #13
  %247 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %237, %struct.sockaddr* %239, %struct.mbuf* nonnull %221, i32 %240, %struct.sctp_auth_chunk* %241, i16 zeroext %242, i32 1, i32 0, i16 zeroext %243, i16 zeroext %244, i32 %246) #13
  switch i32 %247, label %730 [
    i32 0, label %250
    i32 105, label %248
  ]

248:                                              ; preds = %232
  store i8 1, i8* %78, align 1
  %249 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %730

250:                                              ; preds = %232
  store i8 0, i8* %78, align 1
  store %struct.mbuf* null, %struct.mbuf** %6, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %7, align 8
  store i32 0, i32* %8, align 4
  %251 = load i32, i32* %10, align 4
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* %10, align 4
  store i32 1, i32* %166, align 8
  %253 = load i32, i32* %61, align 4
  %254 = icmp eq i32 %253, 0
  %255 = add i32 %253, -1
  %256 = select i1 %254, i32 0, i32 %255
  store i32 %256, i32* %61, align 4
  br i1 %167, label %257, label %730

257:                                              ; preds = %250
  call fastcc void @sctp_clean_up_ctl(%struct.sctp_tcb* %1, %struct.sctp_association* %19, i32 %3) #13
  br label %730

258:                                              ; preds = %208, %223
  %259 = phi %struct.sctp_tmit_chunk* [ %224, %223 ], [ %143, %208 ]
  %260 = icmp eq %struct.sctp_tmit_chunk* %259, null
  br i1 %260, label %730, label %261

261:                                              ; preds = %258, %149
  %262 = phi %struct.sctp_tmit_chunk* [ %259, %258 ], [ %143, %149 ]
  %263 = load i32, i32* %79, align 8
  %264 = and i32 %263, 127
  switch i32 %264, label %265 [
    i32 4, label %730
    i32 2, label %730
  ]

265:                                              ; preds = %261
  %266 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %39, align 8
  %267 = icmp eq %struct.sctp_auth_chklist* %266, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %266, i64 0, i32 0, i64 0
  %270 = load i8, i8* %269, align 1
  %271 = icmp ne i8 %270, 0
  %272 = zext i1 %271 to i32
  br label %273

273:                                              ; preds = %268, %265
  %274 = phi i32 [ %272, %268 ], [ 0, %265 ]
  br label %275

275:                                              ; preds = %723, %273
  %276 = phi %struct.sctp_tmit_chunk* [ %262, %273 ], [ %726, %723 ]
  %277 = phi i32 [ 0, %273 ], [ %724, %723 ]
  %278 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 7
  %279 = load i32, i32* %278, align 8
  %280 = icmp eq i32 %279, 4
  br i1 %280, label %281, label %723

281:                                              ; preds = %275
  %282 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 3
  %283 = load %struct.mbuf*, %struct.mbuf** %282, align 8
  %284 = icmp eq %struct.mbuf* %283, null
  br i1 %284, label %285, label %294

285:                                              ; preds = %281
  %286 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %287 = icmp eq void (i8*, ...)* %286, null
  br i1 %287, label %723, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 0, i32 0, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 8
  %292 = load i16, i16* %291, align 4
  %293 = zext i16 %292 to i32
  call void (i8*, ...) %286(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20, i64 0, i64 0), i32 %290, i32 %293, i32 4) #13
  br label %723

294:                                              ; preds = %281
  %295 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 50), align 8
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %319, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 8
  %299 = load i16, i16* %298, align 4
  %300 = zext i16 %299 to i32
  %301 = icmp ugt i32 %295, %300
  br i1 %301, label %319, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 8
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %82) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %82, i8 -86, i64 256, i1 false) #13
  %304 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 0, i32 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = load i16, i16* %303, align 4
  %307 = zext i16 %306 to i32
  %308 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %82, i64 256, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i32 %305, i32 %307) #13
  %309 = icmp slt i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %302
  store i8 0, i8* %82, align 16
  br label %311

311:                                              ; preds = %310, %302
  %312 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %313 = trunc i32 %312 to i16
  %314 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext %313, i8* nonnull %82) #13
  %315 = atomicrmw add i32* %83, i32 1 seq_cst
  %316 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %20, align 8
  call void @sctp_abort_an_association(%struct.sctp_inpcb* %316, %struct.sctp_tcb* %1, %struct.mbuf* %314, i32 %3) #13
  %317 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %84) #13
  %318 = atomicrmw sub i32* %83, i32 1 seq_cst
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %82) #13
  br label %730

319:                                              ; preds = %297, %294
  %320 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 5
  %321 = load %struct.sctp_nets*, %struct.sctp_nets** %320, align 8
  %322 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 3, i32 1
  %323 = getelementptr inbounds %union.sctp_sockstore, %union.sctp_sockstore* %322, i64 0, i32 0, i32 0
  %324 = load i16, i16* %323, align 8
  %325 = icmp eq i16 %324, 123
  %326 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 4
  %327 = load i32, i32* %326, align 8
  %328 = add i32 %327, -12
  %329 = select i1 %325, i32 %328, i32 %327
  %330 = load i32, i32* %80, align 4
  %331 = icmp ult i32 %330, %329
  br i1 %331, label %332, label %346

332:                                              ; preds = %319
  %333 = load i32, i32* %58, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %341, label %335

335:                                              ; preds = %332
  %336 = load i32, i32* %81, align 4
  %337 = add i32 %336, 1
  %338 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 0, i32 0, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp eq i32 %337, %339
  br i1 %340, label %346, label %730

341:                                              ; preds = %332
  %342 = icmp eq i32 %330, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %341
  %344 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 20
  store i8 1, i8* %344, align 2
  %345 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 53
  store i8 1, i8* %345, align 1
  br label %346

346:                                              ; preds = %341, %335, %343, %319
  %347 = phi i32 [ 1, %343 ], [ 1, %341 ], [ %277, %319 ], [ 1, %335 ]
  %348 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 44
  store i8 0, i8* %348, align 8
  %349 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 0, i32 0, i32 9
  %350 = load i8, i8* %349, align 4
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %358

352:                                              ; preds = %346
  %353 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 18
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 19
  %356 = load i32, i32* %355, align 8
  %357 = icmp ult i32 %354, %356
  br i1 %357, label %360, label %723

358:                                              ; preds = %346
  %359 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 44
  store i8 1, i8* %359, align 8
  br label %360

360:                                              ; preds = %352, %358
  %361 = phi i32 [ 1, %358 ], [ 0, %352 ]
  %362 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 3
  %363 = bitcast %union.sctp_sockstore* %322 to %struct.sockaddr*
  %364 = icmp ne i32 %274, 0
  %365 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %366 = icmp eq %struct.sctp_auth_chunk* %365, null
  %367 = and i1 %364, %366
  br i1 %367, label %368, label %371

368:                                              ; preds = %360
  %369 = load i16, i16* %73, align 8
  %370 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %369) #13
  br label %371

371:                                              ; preds = %368, %360
  %372 = phi i32 [ %370, %368 ], [ 0, %360 ]
  %373 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 10
  %374 = load i16, i16* %373, align 8
  %375 = zext i16 %374 to i32
  %376 = sub i32 %329, %372
  %377 = icmp ult i32 %376, %375
  br i1 %377, label %378, label %383

378:                                              ; preds = %371
  %379 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 9
  %380 = load i16, i16* %379, align 2
  %381 = and i16 %380, 256
  %382 = icmp eq i16 %381, 0
  br i1 %382, label %461, label %383

383:                                              ; preds = %378, %371
  br i1 %364, label %384, label %434

384:                                              ; preds = %383
  %385 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %386 = icmp eq %struct.sctp_auth_chunk* %385, null
  br i1 %386, label %387, label %431

387:                                              ; preds = %384
  br i1 %71, label %424, label %388

388:                                              ; preds = %387
  %389 = load i8, i8* %72, align 1
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %424, label %391

391:                                              ; preds = %388
  %392 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %39, align 8
  %393 = icmp eq %struct.sctp_auth_chklist* %392, null
  br i1 %393, label %424, label %394

394:                                              ; preds = %391
  %395 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %392, i64 0, i32 0, i64 0
  %396 = load i8, i8* %395, align 1
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %424, label %398

398:                                              ; preds = %394
  %399 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %400 = icmp eq %struct.mbuf* %399, null
  br i1 %400, label %424, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %399, i64 0, i32 0, i32 2
  %403 = load i8*, i8** %402, align 8
  %404 = getelementptr inbounds i8, i8* %403, i64 32
  store i8* %404, i8** %402, align 8
  %405 = bitcast i8* %404 to i64*
  store i64 15, i64* %405, align 1
  %406 = load i16, i16* %73, align 8
  %407 = call i32 @sctp_get_hmac_digest_len(i16 zeroext %406) #13
  %408 = add i32 %407, 8
  %409 = trunc i32 %408 to i16
  %410 = call i16 @llvm.bswap.i16(i16 %409) #13
  %411 = getelementptr inbounds i8, i8* %403, i64 34
  %412 = bitcast i8* %411 to i16*
  store i16 %410, i16* %412, align 1
  %413 = load i16, i16* %73, align 8
  %414 = call i16 @llvm.bswap.i16(i16 %413) #13
  %415 = getelementptr inbounds i8, i8* %403, i64 38
  %416 = bitcast i8* %415 to i16*
  store i16 %414, i16* %416, align 1
  store i32 0, i32* %8, align 4
  %417 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %399, i64 0, i32 0, i32 3
  store i32 %408, i32* %417, align 8
  br label %418

418:                                              ; preds = %418, %401
  %419 = phi %struct.mbuf* [ %421, %418 ], [ %399, %401 ]
  %420 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %419, i64 0, i32 0, i32 0
  %421 = load %struct.mbuf*, %struct.mbuf** %420, align 8
  %422 = icmp eq %struct.mbuf* %421, null
  br i1 %422, label %423, label %418

423:                                              ; preds = %418
  store %struct.mbuf* %419, %struct.mbuf** %6, align 8
  store i8* %404, i8** %74, align 8
  br label %424

424:                                              ; preds = %423, %398, %394, %391, %388, %387
  %425 = phi %struct.mbuf* [ null, %387 ], [ null, %388 ], [ null, %394 ], [ null, %391 ], [ null, %398 ], [ %399, %423 ]
  %426 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 13
  %427 = load i16, i16* %426, align 2
  %428 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %429 = load i16, i16* %373, align 8
  %430 = zext i16 %429 to i32
  br label %434

431:                                              ; preds = %384
  %432 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 13
  %433 = load i16, i16* %432, align 2
  br label %434

434:                                              ; preds = %431, %424, %383
  %435 = phi i32 [ %430, %424 ], [ %375, %431 ], [ %375, %383 ]
  %436 = phi %struct.mbuf* [ %425, %424 ], [ null, %431 ], [ null, %383 ]
  %437 = phi i16 [ %427, %424 ], [ %433, %431 ], [ %142, %383 ]
  %438 = phi i32 [ 0, %424 ], [ 0, %431 ], [ 1, %383 ]
  %439 = load %struct.mbuf*, %struct.mbuf** %362, align 8
  %440 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 19
  %441 = load i8, i8* %440, align 1
  %442 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %439, %struct.mbuf* %436, %struct.mbuf** nonnull %6, i32 0, i32 %435, i8 zeroext %441) #13
  %443 = icmp eq %struct.mbuf* %442, null
  br i1 %443, label %730, label %444

444:                                              ; preds = %434
  %445 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 9
  %446 = load i16, i16* %445, align 2
  %447 = lshr i16 %446, 8
  %448 = and i16 %447, 1
  %449 = xor i16 %448, 1
  %450 = zext i16 %449 to i32
  %451 = load i16, i16* %373, align 8
  %452 = zext i16 %451 to i32
  %453 = add i32 %372, %452
  %454 = call i32 @llvm.usub.sat.i32(i32 %329, i32 %453) #13
  store %struct.sctp_tmit_chunk* %276, %struct.sctp_tmit_chunk** %85, align 16
  %455 = icmp eq i32 %347, 0
  br i1 %455, label %463, label %456

456:                                              ; preds = %444
  %457 = load i32, i32* %58, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %560

459:                                              ; preds = %456
  %460 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 98), i32 1 seq_cst
  br label %560

461:                                              ; preds = %378
  %462 = icmp eq i32 %347, 0
  br i1 %462, label %463, label %730

463:                                              ; preds = %461, %444
  %464 = phi i32 [ 1, %461 ], [ %438, %444 ]
  %465 = phi i16 [ %142, %461 ], [ %437, %444 ]
  %466 = phi i32 [ %329, %461 ], [ %454, %444 ]
  %467 = phi i32 [ 0, %461 ], [ 1, %444 ]
  %468 = phi i32 [ 1, %461 ], [ %450, %444 ]
  %469 = phi %struct.mbuf* [ null, %461 ], [ %442, %444 ]
  %470 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 6, i32 0
  %471 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %470, align 8
  %472 = icmp eq %struct.sctp_tmit_chunk* %471, null
  br i1 %472, label %554, label %473

473:                                              ; preds = %463, %544
  %474 = phi %struct.sctp_tmit_chunk* [ %552, %544 ], [ %471, %463 ]
  %475 = phi i32 [ %550, %544 ], [ %464, %463 ]
  %476 = phi i16 [ %549, %544 ], [ %465, %463 ]
  %477 = phi i32 [ %548, %544 ], [ %466, %463 ]
  %478 = phi i32 [ %547, %544 ], [ %467, %463 ]
  %479 = phi i32 [ %546, %544 ], [ %468, %463 ]
  %480 = phi %struct.mbuf* [ %545, %544 ], [ %469, %463 ]
  %481 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 7
  %482 = load i32, i32* %481, align 8
  %483 = icmp eq i32 %482, 4
  br i1 %483, label %484, label %544

484:                                              ; preds = %473
  %485 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 5
  %486 = load %struct.sctp_nets*, %struct.sctp_nets** %485, align 8
  %487 = icmp eq %struct.sctp_nets* %486, %321
  br i1 %487, label %488, label %544

488:                                              ; preds = %484
  %489 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %490 = icmp eq %struct.sctp_auth_chunk* %489, null
  %491 = and i1 %364, %490
  br i1 %491, label %492, label %495

492:                                              ; preds = %488
  %493 = load i16, i16* %73, align 8
  %494 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %493) #13
  br label %495

495:                                              ; preds = %492, %488
  %496 = phi i32 [ %494, %492 ], [ 0, %488 ]
  %497 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 10
  %498 = load i16, i16* %497, align 8
  %499 = zext i16 %498 to i32
  %500 = sub i32 %477, %496
  %501 = icmp ult i32 %500, %499
  br i1 %501, label %554, label %502

502:                                              ; preds = %495
  br i1 %364, label %503, label %519

503:                                              ; preds = %502
  %504 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %505 = icmp eq %struct.sctp_auth_chunk* %504, null
  br i1 %505, label %506, label %513

506:                                              ; preds = %503
  %507 = call %struct.mbuf* @sctp_add_auth_chunk(%struct.mbuf* %480, %struct.mbuf** nonnull %6, %struct.sctp_auth_chunk** nonnull %7, i32* nonnull %8, %struct.sctp_tcb* %1, i8 zeroext 0) #13
  %508 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 13
  %509 = load i16, i16* %508, align 2
  %510 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %511 = load i16, i16* %497, align 8
  %512 = zext i16 %511 to i32
  br label %519

513:                                              ; preds = %503
  %514 = icmp eq i32 %475, 0
  %515 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 13
  %516 = load i16, i16* %515, align 2
  br i1 %514, label %517, label %519

517:                                              ; preds = %513
  %518 = icmp eq i16 %516, %476
  br i1 %518, label %519, label %554

519:                                              ; preds = %517, %513, %506, %502
  %520 = phi i32 [ %499, %513 ], [ %499, %517 ], [ %512, %506 ], [ %499, %502 ]
  %521 = phi %struct.mbuf* [ %480, %513 ], [ %480, %517 ], [ %507, %506 ], [ %480, %502 ]
  %522 = phi i16 [ %516, %513 ], [ %476, %517 ], [ %509, %506 ], [ %476, %502 ]
  %523 = phi i32 [ 0, %513 ], [ 0, %517 ], [ 0, %506 ], [ %475, %502 ]
  %524 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 3
  %525 = load %struct.mbuf*, %struct.mbuf** %524, align 8
  %526 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 19
  %527 = load i8, i8* %526, align 1
  %528 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %525, %struct.mbuf* %521, %struct.mbuf** nonnull %6, i32 0, i32 %520, i8 zeroext %527) #13
  %529 = icmp eq %struct.mbuf* %528, null
  br i1 %529, label %730, label %530

530:                                              ; preds = %519
  %531 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 9
  %532 = load i16, i16* %531, align 2
  %533 = and i16 %532, 256
  %534 = icmp eq i16 %533, 0
  %535 = select i1 %534, i32 %479, i32 0
  %536 = load i16, i16* %497, align 8
  %537 = zext i16 %536 to i32
  %538 = add i32 %496, %537
  %539 = call i32 @llvm.usub.sat.i32(i32 %477, i32 %538) #13
  %540 = add nsw i32 %478, 1
  %541 = sext i32 %478 to i64
  %542 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %5, i64 0, i64 %541
  store %struct.sctp_tmit_chunk* %474, %struct.sctp_tmit_chunk** %542, align 8
  %543 = icmp sgt i32 %478, 254
  br i1 %543, label %560, label %544

544:                                              ; preds = %530, %484, %473
  %545 = phi %struct.mbuf* [ %480, %473 ], [ %480, %484 ], [ %528, %530 ]
  %546 = phi i32 [ %479, %473 ], [ %479, %484 ], [ %535, %530 ]
  %547 = phi i32 [ %478, %473 ], [ %478, %484 ], [ %540, %530 ]
  %548 = phi i32 [ %477, %473 ], [ %477, %484 ], [ %539, %530 ]
  %549 = phi i16 [ %476, %473 ], [ %476, %484 ], [ %522, %530 ]
  %550 = phi i32 [ %475, %473 ], [ %475, %484 ], [ %523, %530 ]
  %551 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %474, i64 0, i32 6, i32 0
  %552 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %551, align 8
  %553 = icmp eq %struct.sctp_tmit_chunk* %552, null
  br i1 %553, label %554, label %473

554:                                              ; preds = %544, %517, %495, %463
  %555 = phi %struct.mbuf* [ %469, %463 ], [ %545, %544 ], [ %480, %495 ], [ %480, %517 ]
  %556 = phi i32 [ %468, %463 ], [ %546, %544 ], [ %479, %495 ], [ %479, %517 ]
  %557 = phi i32 [ %467, %463 ], [ %547, %544 ], [ %478, %495 ], [ %478, %517 ]
  %558 = phi i16 [ %465, %463 ], [ %549, %544 ], [ %476, %495 ], [ %476, %517 ]
  %559 = icmp eq %struct.mbuf* %555, null
  br i1 %559, label %730, label %560

560:                                              ; preds = %530, %554, %459, %456
  %561 = phi i16 [ %558, %554 ], [ %437, %456 ], [ %437, %459 ], [ %522, %530 ]
  %562 = phi i32 [ %557, %554 ], [ 1, %456 ], [ 1, %459 ], [ %540, %530 ]
  %563 = phi i32 [ %556, %554 ], [ %450, %456 ], [ %450, %459 ], [ %535, %530 ]
  %564 = phi %struct.mbuf* [ %555, %554 ], [ %442, %456 ], [ %442, %459 ], [ %528, %530 ]
  %565 = phi i1 [ true, %554 ], [ false, %456 ], [ false, %459 ], [ true, %530 ]
  %566 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %321, i64 0, i32 14, i32 0, i32 4
  %567 = load i32, i32* %566, align 8
  %568 = and i32 %567, 4
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %571

570:                                              ; preds = %560
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %321) #13
  br label %571

571:                                              ; preds = %570, %560
  %572 = phi i32 [ 0, %560 ], [ 1, %570 ]
  %573 = load i32, i32* %8, align 4
  %574 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %7, align 8
  %575 = load i16, i16* %75, align 2
  %576 = load i16, i16* %76, align 8
  %577 = load i32, i32* %77, align 4
  %578 = call i32 @llvm.bswap.i32(i32 %577) #13
  %579 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %321, %struct.sockaddr* %363, %struct.mbuf* nonnull %564, i32 %573, %struct.sctp_auth_chunk* %574, i16 zeroext %561, i32 %563, i32 0, i16 zeroext %575, i16 zeroext %576, i32 %578) #13
  switch i32 %579, label %730 [
    i32 0, label %582
    i32 105, label %580
  ]

580:                                              ; preds = %571
  store i8 1, i8* %78, align 1
  %581 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %730

582:                                              ; preds = %571
  store i8 0, i8* %78, align 1
  store %struct.mbuf* null, %struct.mbuf** %6, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %7, align 8
  store i32 0, i32* %8, align 4
  %583 = load i32, i32* %13, align 4
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %587

585:                                              ; preds = %582
  %586 = call i32 @gettimeofday(%struct.timeval* %86, i8* null) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %87, i64 16, i1 false) #13
  store i32 1, i32* %13, align 4
  br label %588

587:                                              ; preds = %582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %16, i64 16, i1 false) #13
  br label %588

588:                                              ; preds = %587, %585
  %589 = load i32, i32* %10, align 4
  %590 = add nsw i32 %589, %562
  store i32 %590, i32* %10, align 4
  %591 = icmp eq i32 %562, 0
  br i1 %591, label %712, label %592

592:                                              ; preds = %588
  %593 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %85, align 16
  %594 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %593, i64 0, i32 0, i32 0, i32 0
  %595 = load i32, i32* %594, align 8
  %596 = icmp sgt i32 %562, 0
  br i1 %596, label %597, label %712

597:                                              ; preds = %592
  %598 = icmp eq i32 %572, 0
  %599 = zext i32 %562 to i64
  br label %600

600:                                              ; preds = %709, %597
  %601 = phi i64 [ 0, %597 ], [ %710, %709 ]
  %602 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 42), i32 1 seq_cst
  %603 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %5, i64 0, i64 %601
  %604 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %603, align 8
  %605 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 7
  store i32 1, i32* %605, align 8
  %606 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 0, i32 0, i32 12
  %607 = load i8, i8* %606, align 1
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %618, label %609

609:                                              ; preds = %600
  %610 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 11
  %611 = load i16, i16* %610, align 2
  %612 = zext i16 %611 to i32
  %613 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 5
  %614 = load %struct.sctp_nets*, %struct.sctp_nets** %613, align 8
  %615 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %614, i64 0, i32 19
  %616 = load i32, i32* %615, align 8
  %617 = sub i32 %616, %612
  store i32 %617, i32* %615, align 8
  store i8 0, i8* %606, align 1
  br label %618

618:                                              ; preds = %609, %600
  %619 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 8
  %620 = load i16, i16* %619, align 4
  %621 = add i16 %620, 1
  store i16 %621, i16* %619, align 4
  %622 = load i32, i32* %61, align 4
  %623 = icmp eq i32 %622, 0
  %624 = add i32 %622, -1
  %625 = select i1 %623, i32 0, i32 %624
  store i32 %625, i32* %61, align 4
  %626 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 2
  %627 = bitcast %struct.timeval* %626 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %627, i8* align 8 %87, i64 16, i1 false) #13
  %628 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 17
  %629 = load i8, i8* %628, align 1
  %630 = icmp eq i8 %629, 0
  br i1 %630, label %640, label %631

631:                                              ; preds = %618
  store i8 0, i8* %628, align 1
  %632 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 11
  %633 = load i16, i16* %632, align 2
  %634 = zext i16 %633 to i32
  %635 = atomicrmw add i32* %57, i32 %634 seq_cst
  %636 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %603, align 8
  %637 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %636, i64 0, i32 11
  %638 = load i16, i16* %637, align 2
  %639 = shl i16 %638, 1
  store i16 %639, i16* %637, align 2
  br label %658

640:                                              ; preds = %618
  %641 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %642 = and i32 %641, 1048576
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %650, label %644

644:                                              ; preds = %640
  %645 = load i32, i32* %80, align 4
  %646 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 10
  %647 = load i16, i16* %646, align 8
  %648 = zext i16 %647 to i32
  %649 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  call void @sctp_log_rwnd(i8 zeroext 37, i32 %645, i32 %648, i32 %649) #13
  br label %650

650:                                              ; preds = %644, %640
  %651 = load i32, i32* %80, align 4
  %652 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %604, i64 0, i32 10
  %653 = load i16, i16* %652, align 8
  %654 = zext i16 %653 to i32
  %655 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  %656 = add i32 %655, %654
  %657 = call i32 @llvm.usub.sat.i32(i32 %651, i32 %656) #13
  store i32 %657, i32* %80, align 4
  br label %658

658:                                              ; preds = %650, %631
  %659 = phi %struct.sctp_tmit_chunk* [ %604, %650 ], [ %636, %631 ]
  %660 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %661 = and i32 %660, 32
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %675, label %663

663:                                              ; preds = %658
  %664 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 5
  %665 = load %struct.sctp_nets*, %struct.sctp_nets** %664, align 8
  %666 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %665, i64 0, i32 18
  %667 = load i32, i32* %666, align 4
  %668 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 11
  %669 = load i16, i16* %668, align 2
  %670 = zext i16 %669 to i32
  %671 = ptrtoint %struct.sctp_nets* %665 to i64
  %672 = trunc i64 %671 to i32
  %673 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 0, i32 0, i32 0
  %674 = load i32, i32* %673, align 8
  call void @sctp_misc_ints(i8 zeroext 111, i32 %667, i32 %670, i32 %672, i32 %674) #13
  br label %675

675:                                              ; preds = %663, %658
  %676 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 11
  %677 = load i16, i16* %676, align 2
  %678 = zext i16 %677 to i32
  %679 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 5
  %680 = load %struct.sctp_nets*, %struct.sctp_nets** %679, align 8
  %681 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %680, i64 0, i32 18
  %682 = load i32, i32* %681, align 4
  %683 = add i32 %682, %678
  store i32 %683, i32* %681, align 4
  %684 = load i32, i32* %88, align 8
  %685 = add i32 %684, 1
  store i32 %685, i32* %88, align 8
  %686 = load i16, i16* %676, align 2
  %687 = zext i16 %686 to i32
  %688 = load i32, i32* %58, align 4
  %689 = add i32 %688, %687
  store i32 %689, i32* %58, align 4
  %690 = load i32, i32* %80, align 4
  %691 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %20, align 8
  %692 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %691, i64 0, i32 11, i32 9
  %693 = load i32, i32* %692, align 8
  %694 = icmp ult i32 %690, %693
  br i1 %694, label %695, label %696

695:                                              ; preds = %675
  store i32 0, i32* %80, align 4
  br label %696

696:                                              ; preds = %695, %675
  %697 = icmp eq i64 %601, 0
  br i1 %697, label %698, label %709

698:                                              ; preds = %696
  %699 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %659, i64 0, i32 0, i32 0, i32 9
  %700 = load i8, i8* %699, align 4
  %701 = icmp eq i8 %700, 0
  br i1 %701, label %709, label %702

702:                                              ; preds = %698
  %703 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 43), i32 1 seq_cst
  %704 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %603, align 8
  %705 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %69, align 8
  %706 = icmp eq %struct.sctp_tmit_chunk* %704, %705
  %707 = and i1 %598, %706
  br i1 %707, label %708, label %709

708:                                              ; preds = %702
  call void @sctp_timer_stop(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %321, i32 -1879048190) #13
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %321) #13
  br label %709

709:                                              ; preds = %708, %702, %698, %696
  %710 = add nuw nsw i64 %601, 1
  %711 = icmp eq i64 %710, %599
  br i1 %711, label %712, label %600

712:                                              ; preds = %709, %592, %588
  %713 = phi i32 [ %595, %592 ], [ 0, %588 ], [ %595, %709 ]
  %714 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %715 = and i32 %714, 4
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %718, label %717

717:                                              ; preds = %712
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* %321, i32 %713, i8 zeroext 66) #13
  br label %718

718:                                              ; preds = %717, %712
  %719 = load i32, i32* %61, align 4
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %722

721:                                              ; preds = %718
  store i32 0, i32* %61, align 4
  br label %728

722:                                              ; preds = %718
  br i1 %565, label %728, label %730

723:                                              ; preds = %352, %288, %285, %275
  %724 = phi i32 [ %277, %275 ], [ %277, %288 ], [ %277, %285 ], [ %347, %352 ]
  %725 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %276, i64 0, i32 6, i32 0
  %726 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %725, align 8
  %727 = icmp eq %struct.sctp_tmit_chunk* %726, null
  br i1 %727, label %728, label %275

728:                                              ; preds = %723, %722, %721
  %729 = phi i32 [ %361, %721 ], [ %361, %722 ], [ 0, %723 ]
  br label %730

730:                                              ; preds = %335, %519, %148, %232, %248, %250, %257, %258, %261, %261, %311, %434, %461, %554, %571, %580, %722, %728
  %731 = phi i32 [ 0, %148 ], [ 0, %258 ], [ %729, %728 ], [ %361, %554 ], [ %361, %571 ], [ %361, %580 ], [ %361, %722 ], [ %361, %461 ], [ %361, %434 ], [ 0, %311 ], [ 0, %261 ], [ 0, %261 ], [ 0, %232 ], [ 0, %248 ], [ 0, %257 ], [ 0, %250 ], [ %361, %519 ], [ 0, %335 ]
  %732 = phi i32 [ 0, %148 ], [ -1, %258 ], [ 0, %728 ], [ 1, %554 ], [ %579, %571 ], [ 105, %580 ], [ 1, %722 ], [ 1, %461 ], [ 12, %434 ], [ -2, %311 ], [ 1, %261 ], [ 1, %261 ], [ %247, %232 ], [ 105, %248 ], [ 0, %257 ], [ 0, %250 ], [ 12, %519 ], [ 1, %335 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %64) #13
  %733 = icmp ne i32 %731, 0
  %734 = zext i1 %733 to i32
  %735 = add i32 %135, %734
  %736 = icmp sgt i32 %732, 0
  br i1 %736, label %737, label %758

737:                                              ; preds = %138, %730
  %738 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_association* %19, i32* nonnull %10, i32* nonnull %11, i32 1, i32 %2, %struct.timeval* nonnull %12, i32* nonnull %13, i32 %54, i32 %3)
  %739 = load %struct.sctp_nets*, %struct.sctp_nets** %93, align 8
  %740 = icmp eq %struct.sctp_nets* %739, null
  br i1 %740, label %751, label %745

741:                                              ; preds = %745
  %742 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %746, i64 0, i32 0, i32 0
  %743 = load %struct.sctp_nets*, %struct.sctp_nets** %742, align 8
  %744 = icmp eq %struct.sctp_nets* %743, null
  br i1 %744, label %751, label %745

745:                                              ; preds = %737, %741
  %746 = phi %struct.sctp_nets* [ %743, %741 ], [ %739, %737 ]
  %747 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %746, i64 0, i32 14, i32 0, i32 4
  %748 = load i32, i32* %747, align 8
  %749 = and i32 %748, 4
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %741, label %931

751:                                              ; preds = %741, %737
  %752 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %753 = load %struct.sctp_nets*, %struct.sctp_nets** %752, align 8
  %754 = icmp eq %struct.sctp_nets* %753, null
  br i1 %754, label %756, label %755

755:                                              ; preds = %751
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %753) #13
  br label %931

756:                                              ; preds = %751
  %757 = load %struct.sctp_nets*, %struct.sctp_nets** %97, align 8
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %757) #13
  br label %931

758:                                              ; preds = %730
  %759 = icmp slt i32 %732, 0
  br i1 %759, label %760, label %762

760:                                              ; preds = %758
  %761 = icmp eq i32 %732, -2
  br i1 %761, label %931, label %773

762:                                              ; preds = %758
  br i1 %91, label %763, label %765

763:                                              ; preds = %762
  %764 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_association* %19, i32* nonnull %10, i32* nonnull %11, i32 1, i32 1, %struct.timeval* nonnull %12, i32* nonnull %13, i32 %54, i32 %3)
  br label %931

765:                                              ; preds = %762
  %766 = load i32, i32* %92, align 8
  %767 = add i32 %766, -1
  %768 = icmp ult i32 %767, %735
  br i1 %768, label %931, label %769

769:                                              ; preds = %765
  %770 = load i32, i32* %10, align 4
  %771 = or i32 %770, %732
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %134

773:                                              ; preds = %134, %769, %760
  %774 = phi i32 [ %735, %760 ], [ %135, %134 ], [ %735, %769 ]
  %775 = load %struct.sctp_nets*, %struct.sctp_nets** %93, align 8
  %776 = icmp eq %struct.sctp_nets* %775, null
  br i1 %776, label %777, label %779

777:                                              ; preds = %817, %773
  %778 = icmp eq i32 %110, 0
  br label %821

779:                                              ; preds = %773, %817
  %780 = phi %struct.sctp_nets* [ %819, %817 ], [ %775, %773 ]
  %781 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 37
  %782 = load i16, i16* %781, align 4
  %783 = and i16 %782, 1
  %784 = icmp eq i16 %783, 0
  br i1 %784, label %785, label %790

785:                                              ; preds = %779
  %786 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 17
  %787 = load i32, i32* %786, align 8
  %788 = icmp sgt i32 %787, 1
  br i1 %788, label %789, label %817

789:                                              ; preds = %785
  call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %780)
  br label %817

790:                                              ; preds = %779
  %791 = load i32, i32* %94, align 4
  %792 = icmp eq i32 %791, 0
  %793 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 42), align 8
  %794 = icmp eq i32 %793, 0
  %795 = or i1 %792, %794
  br i1 %795, label %817, label %796

796:                                              ; preds = %790
  %797 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 18
  %798 = load i32, i32* %797, align 4
  %799 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 4
  %800 = load i32, i32* %799, align 8
  %801 = mul i32 %800, %791
  %802 = add i32 %801, %798
  %803 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 19
  %804 = load i32, i32* %803, align 8
  %805 = icmp ult i32 %802, %804
  br i1 %805, label %806, label %815

806:                                              ; preds = %796
  %807 = load void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)** %95, align 8
  call void %807(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %780, i32 %791) #13
  %808 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %809 = and i32 %808, 524288
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %813, label %811

811:                                              ; preds = %806
  %812 = load i32, i32* %94, align 4
  call void @sctp_log_maxburst(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %780, i32 0, i32 %812, i8 zeroext 33) #13
  br label %813

813:                                              ; preds = %806, %811
  %814 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 96), i32 1 seq_cst
  br label %815

815:                                              ; preds = %813, %796
  %816 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 44
  store i8 0, i8* %816, align 8
  br label %817

817:                                              ; preds = %790, %789, %785, %815
  %818 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %780, i64 0, i32 0, i32 0
  %819 = load %struct.sctp_nets*, %struct.sctp_nets** %818, align 8
  %820 = icmp eq %struct.sctp_nets* %819, null
  br i1 %820, label %777, label %779

821:                                              ; preds = %777, %874
  %822 = phi i32 [ %840, %874 ], [ %101, %777 ]
  %823 = phi i32 [ %841, %874 ], [ 0, %777 ]
  %824 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_association* %19, i32* nonnull %10, i32* nonnull %11, i32 0, i32 %2, %struct.timeval* nonnull %12, i32* nonnull %13, i32 %54, i32 %3)
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %838, label %826

826:                                              ; preds = %821
  %827 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %828 = and i32 %827, 524288
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %833, label %830

830:                                              ; preds = %826
  %831 = load %struct.sctp_nets*, %struct.sctp_nets** %97, align 8
  call void @sctp_log_maxburst(%struct.sctp_tcb* %1, %struct.sctp_nets* %831, i32 %824, i32 %823, i8 zeroext 35) #13
  %832 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  br label %833

833:                                              ; preds = %826, %830
  %834 = phi i32 [ %827, %826 ], [ %832, %830 ]
  %835 = and i32 %834, 4
  %836 = icmp eq i32 %835, 0
  br i1 %836, label %881, label %837

837:                                              ; preds = %833
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 %824, i8 zeroext 68) #13
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 -559038737, i8 zeroext 68) #13
  br label %881

838:                                              ; preds = %821
  %839 = load i32, i32* %10, align 4
  %840 = add nsw i32 %839, %822
  %841 = add i32 %823, 1
  %842 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %843 = and i32 %842, 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %849, label %845

845:                                              ; preds = %838
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 %839, i8 zeroext 68) #13
  %846 = icmp eq i32 %839, 0
  br i1 %846, label %847, label %849

847:                                              ; preds = %845
  %848 = load i32, i32* %11, align 4
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 %848, i8 zeroext 68) #13
  br label %849

849:                                              ; preds = %838, %845, %847
  br i1 %778, label %859, label %850

850:                                              ; preds = %849
  %851 = load i32, i32* %57, align 4
  %852 = load i32, i32* %58, align 4
  %853 = sub i32 %851, %852
  %854 = load i32, i32* %31, align 4
  %855 = add i32 %854, -32
  %856 = icmp sge i32 %853, %855
  %857 = icmp eq i32 %852, 0
  %858 = or i1 %857, %856
  br i1 %858, label %859, label %881

859:                                              ; preds = %850, %849
  %860 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %861 = icmp eq %struct.sctp_tmit_chunk* %860, null
  br i1 %861, label %862, label %868

862:                                              ; preds = %859
  %863 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %96, align 8
  %864 = icmp eq %struct.sctp_tmit_chunk* %863, null
  br i1 %864, label %865, label %868

865:                                              ; preds = %862
  %866 = call i32 @sctp_is_there_unsent_data(%struct.sctp_tcb* %1, i32 %3) #13
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %881, label %868

868:                                              ; preds = %865, %862, %859
  %869 = load i32, i32* %57, align 4
  %870 = load i32, i32* %58, align 4
  %871 = icmp ne i32 %869, %870
  %872 = icmp ne i32 %839, 0
  %873 = and i1 %872, %871
  br i1 %873, label %874, label %881

874:                                              ; preds = %868
  %875 = load i32, i32* %94, align 4
  %876 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 42), align 8
  %877 = icmp ne i32 %876, 0
  %878 = add i32 %875, -1
  %879 = icmp uge i32 %878, %841
  %880 = or i1 %879, %877
  br i1 %880, label %821, label %889

881:                                              ; preds = %850, %868, %865, %833, %837
  %882 = phi i32 [ %822, %833 ], [ %822, %837 ], [ %840, %865 ], [ %840, %868 ], [ %840, %850 ]
  %883 = phi i32 [ %823, %833 ], [ %823, %837 ], [ %841, %865 ], [ %841, %868 ], [ %841, %850 ]
  %884 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 42), align 8
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %886, label %902

886:                                              ; preds = %881
  %887 = load i32, i32* %94, align 4
  %888 = add i32 %887, -1
  br label %889

889:                                              ; preds = %874, %886
  %890 = phi i32 [ %888, %886 ], [ %878, %874 ]
  %891 = phi i32 [ %883, %886 ], [ %841, %874 ]
  %892 = phi i32 [ %882, %886 ], [ %840, %874 ]
  %893 = icmp ult i32 %890, %891
  br i1 %893, label %894, label %901

894:                                              ; preds = %889
  %895 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 96), i32 1 seq_cst
  store i8 1, i8* %98, align 2
  %896 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %897 = and i32 %896, 524288
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %902, label %899

899:                                              ; preds = %894
  %900 = load %struct.sctp_nets*, %struct.sctp_nets** %97, align 8
  call void @sctp_log_maxburst(%struct.sctp_tcb* %1, %struct.sctp_nets* %900, i32 0, i32 %891, i8 zeroext 33) #13
  br label %902

901:                                              ; preds = %889
  store i8 0, i8* %98, align 2
  br label %902

902:                                              ; preds = %894, %901, %899, %881
  %903 = phi i32 [ %892, %894 ], [ %892, %901 ], [ %892, %899 ], [ %882, %881 ]
  %904 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %905 = and i32 %904, 4
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %908, label %907

907:                                              ; preds = %902
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 %903, i8 zeroext 68) #13
  br label %908

908:                                              ; preds = %902, %907
  %909 = load i16, i16* %99, align 4
  %910 = icmp eq i16 %909, 0
  br i1 %910, label %925, label %911

911:                                              ; preds = %908
  %912 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %913 = icmp eq %struct.sctp_tmit_chunk* %912, null
  br i1 %913, label %925, label %914

914:                                              ; preds = %911, %921
  %915 = phi %struct.sctp_tmit_chunk* [ %923, %921 ], [ %912, %911 ]
  %916 = bitcast %struct.sctp_tmit_chunk* %915 to i8*
  %917 = load i8, i8* %916, align 8
  %918 = icmp eq i8 %917, 12
  br i1 %918, label %919, label %921

919:                                              ; preds = %914
  %920 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %915, i64 0, i32 7
  store i32 0, i32* %920, align 8
  br label %921

921:                                              ; preds = %919, %914
  %922 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %915, i64 0, i32 6, i32 0
  %923 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %922, align 8
  %924 = icmp eq %struct.sctp_tmit_chunk* %923, null
  br i1 %924, label %925, label %914

925:                                              ; preds = %921, %911, %908
  %926 = load i8, i8* %62, align 2
  %927 = icmp eq i8 %926, 0
  br i1 %927, label %931, label %928

928:                                              ; preds = %925
  %929 = call i32 @sctp_send_stream_reset_out_if_possible(%struct.sctp_tcb* %1, i32 %3)
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %100, label %931

931:                                              ; preds = %928, %925, %760, %124, %765, %745, %756, %755, %763, %139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_sack(%struct.sctp_tcb*, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 166
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 1
  %7 = select i1 %6, i8 16, i8 3
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 33
  %9 = load %struct.sctp_nets*, %struct.sctp_nets** %8, align 8
  %10 = icmp eq %struct.sctp_nets* %9, null
  br i1 %10, label %761, label %11

11:                                               ; preds = %2
  tail call void @sctp_slide_mapping_arrays(%struct.sctp_tcb* %0) #13
  tail call void @sctp_set_rwnd(%struct.sctp_tcb* %0, %struct.sctp_association* %3) #13
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 0
  %13 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %12, align 8
  br label %14

14:                                               ; preds = %17, %11
  %15 = phi %struct.sctp_tmit_chunk* [ %13, %11 ], [ %22, %17 ]
  %16 = icmp eq %struct.sctp_tmit_chunk* %15, null
  br i1 %16, label %94, label %17

17:                                               ; preds = %14
  %18 = bitcast %struct.sctp_tmit_chunk* %15 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, %7
  %21 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %15, i64 0, i32 6, i32 0
  %22 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %21, align 8
  br i1 %20, label %23, label %14

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %15, i64 0, i32 6, i32 0
  %25 = icmp eq %struct.sctp_tmit_chunk* %22, null
  %26 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %15, i64 0, i32 6, i32 1
  %27 = bitcast %struct.sctp_tmit_chunk*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %30 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %22, i64 0, i32 6, i32 1
  %31 = select i1 %25, %struct.sctp_tmit_chunk*** %29, %struct.sctp_tmit_chunk*** %30
  %32 = bitcast %struct.sctp_tmit_chunk*** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %struct.sctp_tmit_chunk** %24 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %struct.sctp_tmit_chunk*** %26 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %15, i64 0, i32 3
  %41 = load %struct.mbuf*, %struct.mbuf** %40, align 8
  %42 = icmp eq %struct.mbuf* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %23
  tail call void @m_freem(%struct.mbuf* nonnull %41) #13
  store %struct.mbuf* null, %struct.mbuf** %40, align 8
  br label %44

44:                                               ; preds = %23, %43
  %45 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %15, i64 0, i32 5
  %46 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %47 = icmp eq %struct.sctp_nets* %46, null
  br i1 %47, label %145, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %46, i64 0, i32 17
  %50 = atomicrmw add i32* %49, i32 -1 seq_cst
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %93

52:                                               ; preds = %48
  %53 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %54 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %53, i64 0, i32 3, i32 0
  %55 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %54, align 8
  %56 = icmp eq %struct.sctp_rtentry* %55, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %55, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = icmp sgt i64 %59, 1
  %61 = add nsw i64 %59, -1
  store i64 %61, i64* %58, align 8
  %62 = icmp sgt i64 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  %65 = bitcast %struct.sctp_rtentry* %55 to i8*
  tail call void @free(i8* %65) #13
  br label %66

66:                                               ; preds = %57, %64
  %67 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %68 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %67, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %68, align 8
  %69 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %70 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %69, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %70, align 8
  %71 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  br label %72

72:                                               ; preds = %52, %66
  %73 = phi %struct.sctp_nets* [ %53, %52 ], [ %71, %66 ]
  %74 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %73, i64 0, i32 47
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %73, i64 0, i32 3, i32 2
  %79 = load %struct.sctp_ifa*, %struct.sctp_ifa** %78, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %79) #13
  %80 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %81 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %80, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %81, align 8
  %82 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  br label %83

83:                                               ; preds = %72, %77
  %84 = phi %struct.sctp_nets* [ %73, %72 ], [ %82, %77 ]
  %85 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %84, i64 0, i32 47
  store i8 0, i8* %85, align 1
  %86 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %86, i64 0, i32 37
  %88 = load i16, i16* %87, align 4
  %89 = and i16 %88, -2
  store i16 %89, i16* %87, align 4
  %90 = bitcast %struct.sctp_nets** %45 to i8**
  %91 = load i8*, i8** %90, align 8
  tail call void @free(i8* %91) #13
  %92 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %93

93:                                               ; preds = %48, %83
  store %struct.sctp_nets* null, %struct.sctp_nets** %45, align 8
  br label %145

94:                                               ; preds = %14
  %95 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %96 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %95, align 8
  %97 = icmp eq %struct.sctp_tmit_chunk* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %100 = tail call noalias i8* @malloc(i64 %99) #13
  %101 = icmp eq i8* %100, null
  br i1 %101, label %129, label %123

102:                                              ; preds = %94
  %103 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %96, i64 0, i32 6, i32 0
  %104 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %103, align 8
  %105 = icmp eq %struct.sctp_tmit_chunk* %104, null
  %106 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %96, i64 0, i32 6, i32 1
  %107 = bitcast %struct.sctp_tmit_chunk*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %104, i64 0, i32 6, i32 1
  %110 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %111 = select i1 %105, %struct.sctp_tmit_chunk*** %110, %struct.sctp_tmit_chunk*** %109
  %112 = bitcast %struct.sctp_tmit_chunk*** %111 to i64*
  store i64 %108, i64* %112, align 8
  %113 = bitcast %struct.sctp_tmit_chunk** %103 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %struct.sctp_tmit_chunk*** %106 to i64**
  %116 = load i64*, i64** %115, align 8
  store i64 %114, i64* %116, align 8
  %117 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %118 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %96, i64 0, i32 14
  store i8 0, i8* %118, align 8
  %119 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %120 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %121 = load i16, i16* %120, align 2
  %122 = add i16 %121, -1
  store i16 %122, i16* %120, align 2
  br label %139

123:                                              ; preds = %98
  %124 = bitcast i8* %100 to %struct.sctp_tmit_chunk*
  %125 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %126 = getelementptr inbounds i8, i8* %100, i64 104
  %127 = bitcast i8* %126 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %127, align 8
  %128 = getelementptr inbounds i8, i8* %100, i64 144
  store i8 0, i8* %128, align 8
  br label %139

129:                                              ; preds = %98
  %130 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 104
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %135 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %134, align 8
  tail call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %135, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 -1879048188) #13
  %136 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %134, align 8
  tail call void @sctp_timer_start(i32 3, %struct.sctp_inpcb* %136, %struct.sctp_tcb* %0, %struct.sctp_nets* null) #13
  br label %761

137:                                              ; preds = %129
  %138 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 146
  store i8 1, i8* %138, align 2
  br label %761

139:                                              ; preds = %123, %102
  %140 = phi %struct.sctp_tmit_chunk* [ %96, %102 ], [ %124, %123 ]
  %141 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %140, i64 0, i32 19
  store i8 0, i8* %141, align 1
  %142 = bitcast %struct.sctp_tmit_chunk* %140 to %struct.chk_id*
  %143 = bitcast %struct.sctp_tmit_chunk* %140 to i8*
  store i8 %7, i8* %143, align 8
  %144 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %142, i64 0, i32 1
  store i8 1, i8* %144, align 1
  br label %145

145:                                              ; preds = %44, %93, %139
  %146 = phi %struct.sctp_tmit_chunk* [ %140, %139 ], [ %15, %93 ], [ %15, %44 ]
  %147 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 107
  store i32 0, i32* %147, align 8
  %148 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 9
  store i16 0, i16* %148, align 2
  %149 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 1
  store %struct.sctp_association* %3, %struct.sctp_association** %149, align 8
  %150 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 8
  store i16 0, i16* %150, align 4
  %151 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 10
  store i16 0, i16* %151, align 8
  %152 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 7
  store i32 0, i32* %152, align 8
  %153 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 5
  store %struct.sctp_nets* null, %struct.sctp_nets** %153, align 8
  %154 = load %struct.sctp_nets*, %struct.sctp_nets** %8, align 8
  %155 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %154, i64 0, i32 37
  %156 = load i16, i16* %155, align 4
  %157 = and i16 %156, 1
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %159, label %167

159:                                              ; preds = %145
  %160 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %0, %struct.sctp_nets* %154, i32 0) #13
  store %struct.sctp_nets* %160, %struct.sctp_nets** %153, align 8
  %161 = icmp eq %struct.sctp_nets* %160, null
  br i1 %161, label %162, label %171

162:                                              ; preds = %159
  %163 = bitcast %struct.sctp_nets** %8 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %struct.sctp_nets** %153 to i64*
  store i64 %164, i64* %165, align 8
  %166 = inttoptr i64 %164 to %struct.sctp_nets*
  br label %168

167:                                              ; preds = %145
  store %struct.sctp_nets* %154, %struct.sctp_nets** %153, align 8
  br label %168

168:                                              ; preds = %162, %167
  %169 = phi %struct.sctp_nets* [ %166, %162 ], [ %154, %167 ]
  %170 = icmp eq %struct.sctp_nets* %169, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %159, %168
  %172 = phi %struct.sctp_nets* [ %169, %168 ], [ %160, %159 ]
  %173 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %172, i64 0, i32 17
  %174 = atomicrmw add i32* %173, i32 1 seq_cst
  br label %175

175:                                              ; preds = %168, %171
  %176 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 61
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 63
  %179 = load i32, i32* %178, align 8
  %180 = icmp ugt i32 %179, %177
  %181 = sub i32 %179, %177
  %182 = icmp ugt i32 %181, -2147483648
  %183 = and i1 %180, %182
  br i1 %183, label %191, label %184

184:                                              ; preds = %175
  %185 = icmp ugt i32 %177, %179
  %186 = sub i32 %177, %179
  %187 = icmp sgt i32 %186, -1
  %188 = and i1 %185, %187
  %189 = select i1 %188, i32* %176, i32* %178
  %190 = load i32, i32* %189, align 4
  br label %191

191:                                              ; preds = %184, %175
  %192 = phi i32 [ %177, %175 ], [ %190, %184 ]
  %193 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 59
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %192, %194
  %196 = select i1 %6, i32 20, i32 16
  %197 = select i1 %195, i32 %196, i32 2048
  %198 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %197, i32 0, i32 1, i32 1, i32 1) #13
  %199 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 3
  store %struct.mbuf* %198, %struct.mbuf** %199, align 8
  %200 = icmp eq %struct.mbuf* %198, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %191
  %202 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %203 = icmp eq %struct.sctp_nets* %202, null
  br i1 %203, label %204, label %300

204:                                              ; preds = %201
  tail call void @m_freem(%struct.mbuf* nonnull %198) #13
  store %struct.mbuf* null, %struct.mbuf** %199, align 8
  br label %205

205:                                              ; preds = %191, %204
  %206 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 14
  %207 = load i8, i8* %206, align 8
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 13
  %211 = load i16, i16* %210, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %211, i32 %1) #13
  store i8 0, i8* %206, align 8
  br label %212

212:                                              ; preds = %205, %209
  %213 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %213, label %287, label %214

214:                                              ; preds = %212
  %215 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %216 = icmp eq %struct.sctp_nets* %215, null
  br i1 %216, label %263, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %215, i64 0, i32 17
  %219 = atomicrmw add i32* %218, i32 -1 seq_cst
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %262

221:                                              ; preds = %217
  %222 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %223 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %222, i64 0, i32 3, i32 0
  %224 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %223, align 8
  %225 = icmp eq %struct.sctp_rtentry* %224, null
  br i1 %225, label %241, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %224, i64 0, i32 3
  %228 = load i64, i64* %227, align 8
  %229 = icmp sgt i64 %228, 1
  %230 = add nsw i64 %228, -1
  store i64 %230, i64* %227, align 8
  %231 = icmp sgt i64 %230, 0
  %232 = or i1 %229, %231
  br i1 %232, label %235, label %233

233:                                              ; preds = %226
  %234 = bitcast %struct.sctp_rtentry* %224 to i8*
  tail call void @free(i8* %234) #13
  br label %235

235:                                              ; preds = %226, %233
  %236 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %237 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %236, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %237, align 8
  %238 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %239 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %238, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %239, align 8
  %240 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  br label %241

241:                                              ; preds = %221, %235
  %242 = phi %struct.sctp_nets* [ %222, %221 ], [ %240, %235 ]
  %243 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %242, i64 0, i32 47
  %244 = load i8, i8* %243, align 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %252, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %242, i64 0, i32 3, i32 2
  %248 = load %struct.sctp_ifa*, %struct.sctp_ifa** %247, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %248) #13
  %249 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %250 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %249, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %250, align 8
  %251 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  br label %252

252:                                              ; preds = %241, %246
  %253 = phi %struct.sctp_nets* [ %242, %241 ], [ %251, %246 ]
  %254 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %253, i64 0, i32 47
  store i8 0, i8* %254, align 1
  %255 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %256 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %255, i64 0, i32 37
  %257 = load i16, i16* %256, align 4
  %258 = and i16 %257, -2
  store i16 %258, i16* %256, align 4
  %259 = bitcast %struct.sctp_nets** %153 to i8**
  %260 = load i8*, i8** %259, align 8
  tail call void @free(i8* %260) #13
  %261 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %262

262:                                              ; preds = %217, %252
  store %struct.sctp_nets* null, %struct.sctp_nets** %153, align 8
  br label %263

263:                                              ; preds = %214, %262
  %264 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %265 = load i16, i16* %264, align 2
  %266 = zext i16 %265 to i32
  %267 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %268 = icmp ult i32 %267, %266
  br i1 %268, label %273, label %269

269:                                              ; preds = %263
  %270 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %271 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %272 = icmp ugt i32 %270, %271
  br i1 %272, label %273, label %276

273:                                              ; preds = %269, %263
  %274 = bitcast %struct.sctp_tmit_chunk* %146 to i8*
  tail call void @free(i8* %274) #13
  %275 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %290

276:                                              ; preds = %269
  %277 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %277, align 8
  %278 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %279 = bitcast %struct.sctp_tmit_chunk*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 6, i32 1
  %282 = bitcast %struct.sctp_tmit_chunk*** %281 to i64*
  store i64 %280, i64* %282, align 8
  %283 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %278, align 8
  store %struct.sctp_tmit_chunk* %146, %struct.sctp_tmit_chunk** %283, align 8
  store %struct.sctp_tmit_chunk** %277, %struct.sctp_tmit_chunk*** %278, align 8
  %284 = load i16, i16* %264, align 2
  %285 = add i16 %284, 1
  store i16 %285, i16* %264, align 2
  %286 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %290

287:                                              ; preds = %212
  %288 = bitcast %struct.sctp_tmit_chunk* %146 to i8*
  tail call void @free(i8* %288) #13
  %289 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %290

290:                                              ; preds = %273, %276, %287
  %291 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 104
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %296 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %295, align 8
  tail call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %296, %struct.sctp_tcb* %0, %struct.sctp_nets* null, i32 -1879048187) #13
  %297 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %295, align 8
  tail call void @sctp_timer_start(i32 3, %struct.sctp_inpcb* %297, %struct.sctp_tcb* %0, %struct.sctp_nets* null) #13
  br label %761

298:                                              ; preds = %290
  %299 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 146
  store i8 1, i8* %299, align 2
  br label %761

300:                                              ; preds = %201
  %301 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 2
  %302 = load i8*, i8** %301, align 8
  %303 = getelementptr inbounds i8, i8* %302, i64 32
  store i8* %303, i8** %301, align 8
  %304 = load %struct.mbuf*, %struct.mbuf** %199, align 8
  %305 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 4
  %306 = load i32, i32* %305, align 4
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %333, label %309

309:                                              ; preds = %300
  %310 = and i32 %306, 8
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %345

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %314 = load i32*, i32** %313, align 8
  %315 = load volatile i32, i32* %314, align 4
  %316 = icmp eq i32 %315, 1
  br i1 %316, label %317, label %345

317:                                              ; preds = %312
  %318 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  %320 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %321 = load i32, i32* %320, align 8
  %322 = zext i32 %321 to i64
  %323 = getelementptr inbounds i8, i8* %319, i64 %322
  %324 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 2
  %325 = load i8*, i8** %324, align 8
  %326 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 3
  %327 = load i32, i32* %326, align 8
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i8, i8* %325, i64 %328
  %330 = ptrtoint i8* %323 to i64
  %331 = ptrtoint i8* %329 to i64
  %332 = sub i64 %330, %331
  br label %345

333:                                              ; preds = %300
  %334 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 1
  %335 = getelementptr inbounds %union.anon.4, %union.anon.4* %334, i64 1
  %336 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 2
  %337 = load i8*, i8** %336, align 8
  %338 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %337, i64 %340
  %342 = ptrtoint %union.anon.4* %335 to i64
  %343 = ptrtoint i8* %341 to i64
  %344 = sub i64 %342, %343
  br label %345

345:                                              ; preds = %309, %317, %312, %333
  %346 = phi i64 [ %344, %333 ], [ %332, %317 ], [ 0, %312 ], [ 0, %309 ]
  %347 = and i64 %346, 4294967295
  %348 = load %struct.sctp_nets*, %struct.sctp_nets** %153, align 8
  %349 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %348, i64 0, i32 4
  %350 = load i32, i32* %349, align 8
  %351 = zext i32 %350 to i64
  %352 = add nsw i64 %351, -32
  %353 = icmp ugt i64 %347, %352
  %354 = select i1 %353, i64 %352, i64 %346
  %355 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %304, i64 0, i32 0, i32 2
  %356 = load i8*, i8** %355, align 8
  %357 = and i64 %354, 4294967295
  %358 = getelementptr inbounds i8, i8* %356, i64 %357
  %359 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 189
  %360 = load i8, i8* %359, align 1
  %361 = icmp ne i8 %360, 0
  %362 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 41), align 4
  %363 = icmp ne i32 %362, 0
  %364 = and i1 %361, %363
  br i1 %364, label %365, label %369

365:                                              ; preds = %345
  %366 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 188
  %367 = load i8, i8* %366, align 4
  %368 = shl i8 %367, 6
  store i8 0, i8* %366, align 4
  br label %369

369:                                              ; preds = %365, %345
  %370 = phi i8 [ %368, %365 ], [ 0, %345 ]
  %371 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 8
  store i32 0, i32* %371, align 8
  %372 = load %struct.mbuf*, %struct.mbuf** %199, align 8
  %373 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %372, i64 0, i32 0, i32 2
  %374 = load i8*, i8** %373, align 8
  br i1 %6, label %387, label %375

375:                                              ; preds = %369
  %376 = bitcast i8* %374 to %struct.sctp_sack_chunk*
  %377 = getelementptr inbounds i8, i8* %374, i64 16
  %378 = bitcast i8* %377 to %struct.sctp_gap_ack_block*
  %379 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 60
  %380 = load i32, i32* %379, align 8
  %381 = icmp ugt i32 %192, %380
  %382 = sub i32 %192, %380
  br i1 %381, label %383, label %385

383:                                              ; preds = %375
  %384 = add i32 %382, 8
  br label %400

385:                                              ; preds = %375
  %386 = add i32 %382, 7
  br label %400

387:                                              ; preds = %369
  %388 = bitcast i8* %374 to %struct.sctp_nr_sack_chunk*
  %389 = getelementptr inbounds i8, i8* %374, i64 20
  %390 = bitcast i8* %389 to %struct.sctp_gap_ack_block*
  %391 = load i32, i32* %176, align 4
  %392 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 60
  %393 = load i32, i32* %392, align 8
  %394 = icmp ugt i32 %391, %393
  %395 = sub i32 %391, %393
  br i1 %394, label %396, label %398

396:                                              ; preds = %387
  %397 = add i32 %395, 8
  br label %400

398:                                              ; preds = %387
  %399 = add i32 %395, 7
  br label %400

400:                                              ; preds = %396, %398, %383, %385
  %401 = phi i32 [ %380, %383 ], [ %380, %385 ], [ %393, %396 ], [ %393, %398 ]
  %402 = phi %struct.sctp_sack_chunk* [ %376, %383 ], [ %376, %385 ], [ null, %396 ], [ null, %398 ]
  %403 = phi %struct.sctp_nr_sack_chunk* [ null, %383 ], [ null, %385 ], [ %388, %396 ], [ %388, %398 ]
  %404 = phi %struct.sctp_gap_ack_block* [ %378, %383 ], [ %378, %385 ], [ %390, %396 ], [ %390, %398 ]
  %405 = phi i32 [ %384, %383 ], [ %386, %385 ], [ %397, %396 ], [ %399, %398 ]
  %406 = lshr i32 %405, 3
  %407 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 60
  %408 = load i32, i32* %193, align 4
  %409 = icmp ugt i32 %408, %401
  %410 = sub i32 %408, %401
  %411 = icmp ugt i32 %410, -2147483648
  %412 = and i1 %409, %411
  br i1 %412, label %419, label %413

413:                                              ; preds = %400
  %414 = icmp ugt i32 %401, %408
  %415 = sub i32 %401, %408
  %416 = icmp sgt i32 %415, -1
  %417 = and i1 %414, %416
  %418 = select i1 %417, i32 1, i32 %415
  br label %419

419:                                              ; preds = %413, %400
  %420 = phi i32 [ 1, %400 ], [ %418, %413 ]
  br i1 %6, label %431, label %421

421:                                              ; preds = %419
  %422 = icmp ugt i32 %408, %192
  %423 = sub i32 %408, %192
  %424 = icmp ugt i32 %423, -2147483648
  %425 = and i1 %422, %424
  br i1 %425, label %444, label %426

426:                                              ; preds = %421
  %427 = icmp ugt i32 %192, %408
  %428 = sub i32 %192, %408
  %429 = icmp sgt i32 %428, -1
  %430 = and i1 %427, %429
  br i1 %430, label %444, label %651

431:                                              ; preds = %419
  %432 = load i32, i32* %176, align 4
  %433 = icmp ugt i32 %408, %432
  %434 = sub i32 %408, %432
  %435 = icmp ugt i32 %434, -2147483648
  %436 = and i1 %433, %435
  br i1 %436, label %444, label %437

437:                                              ; preds = %431
  %438 = icmp ugt i32 %432, %408
  %439 = sub i32 %432, %408
  %440 = icmp sgt i32 %439, -1
  %441 = and i1 %438, %440
  %442 = icmp ne i32 %406, 0
  %443 = and i1 %441, %442
  br i1 %443, label %446, label %536

444:                                              ; preds = %431, %426, %421
  %445 = icmp eq i32 %406, 0
  br i1 %445, label %533, label %446

446:                                              ; preds = %444, %437
  %447 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 29
  %448 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 62
  %449 = zext i32 %406 to i64
  br label %450

450:                                              ; preds = %446, %526
  %451 = phi i64 [ 0, %446 ], [ %531, %526 ]
  %452 = phi i32 [ 0, %446 ], [ %527, %526 ]
  %453 = phi i32 [ %420, %446 ], [ %530, %526 ]
  %454 = phi i32 [ 0, %446 ], [ %528, %526 ]
  %455 = phi %struct.sctp_gap_ack_block* [ %404, %446 ], [ %529, %526 ]
  %456 = load i8*, i8** %447, align 8
  %457 = getelementptr inbounds i8, i8* %456, i64 %451
  %458 = load i8, i8* %457, align 1
  br i1 %6, label %464, label %459

459:                                              ; preds = %450
  %460 = load i8*, i8** %448, align 8
  %461 = getelementptr inbounds i8, i8* %460, i64 %451
  %462 = load i8, i8* %461, align 1
  %463 = or i8 %462, %458
  br label %464

464:                                              ; preds = %450, %459
  %465 = phi i8 [ %463, %459 ], [ %458, %450 ]
  %466 = icmp eq i64 %451, 0
  br i1 %466, label %467, label %472

467:                                              ; preds = %464
  %468 = sub nsw i32 1, %453
  %469 = shl i32 -1, %468
  %470 = trunc i32 %469 to i8
  %471 = and i8 %465, %470
  br label %472

472:                                              ; preds = %467, %464
  %473 = phi i8 [ %471, %467 ], [ %465, %464 ]
  %474 = zext i8 %473 to i64
  %475 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %474
  %476 = icmp eq i32 %454, 0
  br i1 %476, label %484, label %477

477:                                              ; preds = %472
  %478 = getelementptr inbounds %struct.sack_track, %struct.sack_track* %475, i64 0, i32 0
  %479 = load i8, i8* %478, align 4
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %484, label %481

481:                                              ; preds = %477
  %482 = add i32 %452, -1
  %483 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %455, i64 -1
  br label %484

484:                                              ; preds = %477, %472, %481
  %485 = phi %struct.sctp_gap_ack_block* [ %483, %481 ], [ %455, %477 ], [ %455, %472 ]
  %486 = phi i32 [ %482, %481 ], [ %452, %477 ], [ %452, %472 ]
  %487 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %474, i32 2
  %488 = icmp eq i8 %473, 0
  br i1 %488, label %526, label %489

489:                                              ; preds = %484
  %490 = getelementptr inbounds %struct.sack_track, %struct.sack_track* %475, i64 0, i32 0
  %491 = trunc i32 %453 to i16
  br label %495

492:                                              ; preds = %520
  %493 = lshr i8 %473, 7
  %494 = zext i8 %493 to i32
  br label %526

495:                                              ; preds = %489, %520
  %496 = phi i64 [ 0, %489 ], [ %522, %520 ]
  %497 = phi i32 [ %486, %489 ], [ %516, %520 ]
  %498 = phi i32 [ %454, %489 ], [ 0, %520 ]
  %499 = phi %struct.sctp_gap_ack_block* [ %485, %489 ], [ %521, %520 ]
  %500 = icmp eq i32 %498, 0
  br i1 %500, label %504, label %501

501:                                              ; preds = %495
  %502 = load i8, i8* %490, align 4
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %504, label %510

504:                                              ; preds = %501, %495
  %505 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %474, i32 4, i64 %496, i32 0
  %506 = load i16, i16* %505, align 4
  %507 = add i16 %506, %491
  %508 = tail call i16 @llvm.bswap.i16(i16 %507) #13
  %509 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %499, i64 0, i32 0
  store i16 %508, i16* %509, align 1
  br label %510

510:                                              ; preds = %501, %504
  %511 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %474, i32 4, i64 %496, i32 1
  %512 = load i16, i16* %511, align 2
  %513 = add i16 %512, %491
  %514 = tail call i16 @llvm.bswap.i16(i16 %513) #13
  %515 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %499, i64 0, i32 1
  store i16 %514, i16* %515, align 1
  %516 = add i32 %497, 1
  %517 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %499, i64 2
  %518 = bitcast %struct.sctp_gap_ack_block* %517 to i8*
  %519 = icmp ult i8* %358, %518
  br i1 %519, label %678, label %520

520:                                              ; preds = %510
  %521 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %499, i64 1
  %522 = add nuw nsw i64 %496, 1
  %523 = load i8, i8* %487, align 2
  %524 = zext i8 %523 to i64
  %525 = icmp ult i64 %522, %524
  br i1 %525, label %495, label %492

526:                                              ; preds = %484, %492
  %527 = phi i32 [ %516, %492 ], [ %486, %484 ]
  %528 = phi i32 [ %494, %492 ], [ 0, %484 ]
  %529 = phi %struct.sctp_gap_ack_block* [ %521, %492 ], [ %485, %484 ]
  %530 = add nsw i32 %453, 8
  %531 = add nuw nsw i64 %451, 1
  %532 = icmp ult i64 %531, %449
  br i1 %532, label %450, label %533

533:                                              ; preds = %526, %444
  %534 = phi %struct.sctp_gap_ack_block* [ %404, %444 ], [ %529, %526 ]
  %535 = phi i32 [ 0, %444 ], [ %527, %526 ]
  br i1 %6, label %536, label %651

536:                                              ; preds = %437, %533
  %537 = phi i32 [ %535, %533 ], [ 0, %437 ]
  %538 = phi %struct.sctp_gap_ack_block* [ %534, %533 ], [ %404, %437 ]
  %539 = load i32, i32* %178, align 8
  %540 = load i32, i32* %407, align 8
  %541 = icmp ugt i32 %539, %540
  %542 = sub i32 %539, %540
  %543 = select i1 %541, i32 8, i32 7
  %544 = add i32 %542, %543
  %545 = lshr i32 %544, 3
  %546 = load i32, i32* %193, align 4
  %547 = icmp ugt i32 %546, %540
  %548 = sub i32 %546, %540
  %549 = icmp ugt i32 %548, -2147483648
  %550 = and i1 %547, %549
  br i1 %550, label %557, label %551

551:                                              ; preds = %536
  %552 = icmp ugt i32 %540, %546
  %553 = sub i32 %540, %546
  %554 = icmp sgt i32 %553, -1
  %555 = and i1 %552, %554
  %556 = select i1 %555, i32 1, i32 %553
  br label %557

557:                                              ; preds = %551, %536
  %558 = phi i32 [ 1, %536 ], [ %556, %551 ]
  %559 = icmp ugt i32 %546, %539
  %560 = sub i32 %546, %539
  %561 = icmp ugt i32 %560, -2147483648
  %562 = and i1 %559, %561
  br i1 %562, label %570, label %563

563:                                              ; preds = %557
  %564 = icmp ugt i32 %539, %546
  %565 = sub i32 %539, %546
  %566 = icmp sgt i32 %565, -1
  %567 = and i1 %564, %566
  %568 = icmp ne i32 %545, 0
  %569 = and i1 %567, %568
  br i1 %569, label %572, label %651

570:                                              ; preds = %557
  %571 = icmp eq i32 %545, 0
  br i1 %571, label %651, label %572

572:                                              ; preds = %570, %563
  %573 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 62
  %574 = zext i32 %545 to i64
  br label %575

575:                                              ; preds = %572, %644
  %576 = phi i64 [ 0, %572 ], [ %649, %644 ]
  %577 = phi i32 [ 0, %572 ], [ %645, %644 ]
  %578 = phi i32 [ %558, %572 ], [ %648, %644 ]
  %579 = phi i32 [ 0, %572 ], [ %646, %644 ]
  %580 = phi %struct.sctp_gap_ack_block* [ %538, %572 ], [ %647, %644 ]
  %581 = load i8*, i8** %573, align 8
  %582 = getelementptr inbounds i8, i8* %581, i64 %576
  %583 = load i8, i8* %582, align 1
  %584 = icmp eq i64 %576, 0
  br i1 %584, label %585, label %590

585:                                              ; preds = %575
  %586 = sub nsw i32 1, %578
  %587 = shl i32 -1, %586
  %588 = trunc i32 %587 to i8
  %589 = and i8 %583, %588
  br label %590

590:                                              ; preds = %585, %575
  %591 = phi i8 [ %589, %585 ], [ %583, %575 ]
  %592 = zext i8 %591 to i64
  %593 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %592
  %594 = icmp eq i32 %579, 0
  br i1 %594, label %602, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %struct.sack_track, %struct.sack_track* %593, i64 0, i32 0
  %597 = load i8, i8* %596, align 4
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %595
  %600 = add i32 %577, -1
  %601 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %580, i64 -1
  br label %602

602:                                              ; preds = %595, %590, %599
  %603 = phi %struct.sctp_gap_ack_block* [ %601, %599 ], [ %580, %595 ], [ %580, %590 ]
  %604 = phi i32 [ %600, %599 ], [ %577, %595 ], [ %577, %590 ]
  %605 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %592, i32 2
  %606 = icmp eq i8 %591, 0
  br i1 %606, label %644, label %607

607:                                              ; preds = %602
  %608 = getelementptr inbounds %struct.sack_track, %struct.sack_track* %593, i64 0, i32 0
  %609 = trunc i32 %578 to i16
  br label %613

610:                                              ; preds = %638
  %611 = lshr i8 %591, 7
  %612 = zext i8 %611 to i32
  br label %644

613:                                              ; preds = %607, %638
  %614 = phi i64 [ 0, %607 ], [ %640, %638 ]
  %615 = phi i32 [ %604, %607 ], [ %634, %638 ]
  %616 = phi i32 [ %579, %607 ], [ 0, %638 ]
  %617 = phi %struct.sctp_gap_ack_block* [ %603, %607 ], [ %639, %638 ]
  %618 = icmp eq i32 %616, 0
  br i1 %618, label %622, label %619

619:                                              ; preds = %613
  %620 = load i8, i8* %608, align 4
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %622, label %628

622:                                              ; preds = %619, %613
  %623 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %592, i32 4, i64 %614, i32 0
  %624 = load i16, i16* %623, align 4
  %625 = add i16 %624, %609
  %626 = tail call i16 @llvm.bswap.i16(i16 %625) #13
  %627 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %617, i64 0, i32 0
  store i16 %626, i16* %627, align 1
  br label %628

628:                                              ; preds = %619, %622
  %629 = getelementptr inbounds [256 x %struct.sack_track], [256 x %struct.sack_track]* @sack_array, i64 0, i64 %592, i32 4, i64 %614, i32 1
  %630 = load i16, i16* %629, align 2
  %631 = add i16 %630, %609
  %632 = tail call i16 @llvm.bswap.i16(i16 %631) #13
  %633 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %617, i64 0, i32 1
  store i16 %632, i16* %633, align 1
  %634 = add i32 %615, 1
  %635 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %617, i64 2
  %636 = bitcast %struct.sctp_gap_ack_block* %635 to i8*
  %637 = icmp ult i8* %358, %636
  br i1 %637, label %678, label %638

638:                                              ; preds = %628
  %639 = getelementptr inbounds %struct.sctp_gap_ack_block, %struct.sctp_gap_ack_block* %617, i64 1
  %640 = add nuw nsw i64 %614, 1
  %641 = load i8, i8* %605, align 2
  %642 = zext i8 %641 to i64
  %643 = icmp ult i64 %640, %642
  br i1 %643, label %613, label %610

644:                                              ; preds = %602, %610
  %645 = phi i32 [ %634, %610 ], [ %604, %602 ]
  %646 = phi i32 [ %612, %610 ], [ 0, %602 ]
  %647 = phi %struct.sctp_gap_ack_block* [ %639, %610 ], [ %603, %602 ]
  %648 = add nsw i32 %578, 8
  %649 = add nuw nsw i64 %576, 1
  %650 = icmp ult i64 %649, %574
  br i1 %650, label %575, label %651

651:                                              ; preds = %644, %426, %570, %533, %563
  %652 = phi i32 [ 0, %533 ], [ 0, %563 ], [ 0, %570 ], [ 0, %426 ], [ %645, %644 ]
  %653 = phi %struct.sctp_gap_ack_block* [ %534, %533 ], [ %538, %563 ], [ %538, %570 ], [ %404, %426 ], [ %647, %644 ]
  %654 = phi i32 [ %535, %533 ], [ %537, %563 ], [ %537, %570 ], [ 0, %426 ], [ %537, %644 ]
  %655 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 108
  %656 = load i32, i32* %655, align 4
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %678, label %658

658:                                              ; preds = %651
  %659 = bitcast %struct.sctp_gap_ack_block* %653 to i32*
  br label %660

660:                                              ; preds = %658, %671
  %661 = phi i64 [ 0, %658 ], [ %673, %671 ]
  %662 = phi i32 [ 0, %658 ], [ %667, %671 ]
  %663 = phi i32* [ %659, %658 ], [ %672, %671 ]
  %664 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 109, i64 %661
  %665 = load i32, i32* %664, align 4
  %666 = tail call i32 @llvm.bswap.i32(i32 %665) #13
  store i32 %666, i32* %663, align 4
  %667 = add nuw nsw i32 %662, 1
  %668 = getelementptr inbounds i32, i32* %663, i64 2
  %669 = bitcast i32* %668 to i8*
  %670 = icmp ult i8* %358, %669
  br i1 %670, label %677, label %671

671:                                              ; preds = %660
  %672 = getelementptr inbounds i32, i32* %663, i64 1
  %673 = add nuw nsw i64 %661, 1
  %674 = load i32, i32* %655, align 4
  %675 = zext i32 %674 to i64
  %676 = icmp ult i64 %673, %675
  br i1 %676, label %660, label %677

677:                                              ; preds = %671, %660
  store i32 0, i32* %655, align 4
  br label %678

678:                                              ; preds = %510, %628, %651, %677
  %679 = phi i32 [ %652, %677 ], [ %652, %651 ], [ %634, %628 ], [ 0, %510 ]
  %680 = phi i32 [ %654, %677 ], [ %654, %651 ], [ %537, %628 ], [ %516, %510 ]
  %681 = phi i32 [ %667, %677 ], [ 0, %651 ], [ 0, %628 ], [ 0, %510 ]
  %682 = add i32 %680, %679
  %683 = zext i32 %682 to i64
  %684 = shl nuw nsw i64 %683, 2
  br i1 %6, label %713, label %685

685:                                              ; preds = %678
  %686 = add nuw nsw i64 %684, 16
  %687 = sext i32 %681 to i64
  %688 = shl nsw i64 %687, 2
  %689 = add nsw i64 %686, %688
  %690 = trunc i64 %689 to i16
  store i16 %690, i16* %151, align 8
  %691 = trunc i64 %689 to i32
  %692 = and i32 %691, 65532
  %693 = load %struct.mbuf*, %struct.mbuf** %199, align 8
  %694 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %693, i64 0, i32 0, i32 3
  store i32 %692, i32* %694, align 8
  %695 = load i32, i32* %193, align 4
  %696 = tail call i32 @llvm.bswap.i32(i32 %695) #13
  %697 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 1, i32 0
  store i32 %696, i32* %697, align 1
  %698 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 75
  %699 = load i32, i32* %698, align 8
  %700 = tail call i32 @llvm.bswap.i32(i32 %699) #13
  %701 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 1, i32 1
  store i32 %700, i32* %701, align 1
  %702 = trunc i32 %680 to i16
  %703 = tail call i16 @llvm.bswap.i16(i16 %702) #13
  %704 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 1, i32 2
  store i16 %703, i16* %704, align 1
  %705 = trunc i32 %681 to i16
  %706 = tail call i16 @llvm.bswap.i16(i16 %705) #13
  %707 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 1, i32 3
  store i16 %706, i16* %707, align 1
  %708 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 0, i32 0
  store i8 %7, i8* %708, align 1
  %709 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 0, i32 1
  store i8 %370, i8* %709, align 1
  %710 = load i16, i16* %151, align 8
  %711 = tail call i16 @llvm.bswap.i16(i16 %710) #13
  %712 = getelementptr inbounds %struct.sctp_sack_chunk, %struct.sctp_sack_chunk* %402, i64 0, i32 0, i32 2
  store i16 %711, i16* %712, align 1
  br label %745

713:                                              ; preds = %678
  %714 = add nuw nsw i64 %684, 20
  %715 = sext i32 %681 to i64
  %716 = shl nsw i64 %715, 2
  %717 = add nsw i64 %714, %716
  %718 = trunc i64 %717 to i16
  store i16 %718, i16* %151, align 8
  %719 = trunc i64 %717 to i32
  %720 = and i32 %719, 65532
  %721 = load %struct.mbuf*, %struct.mbuf** %199, align 8
  %722 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %721, i64 0, i32 0, i32 3
  store i32 %720, i32* %722, align 8
  %723 = load i32, i32* %193, align 4
  %724 = tail call i32 @llvm.bswap.i32(i32 %723) #13
  %725 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 0
  store i32 %724, i32* %725, align 1
  %726 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 75
  %727 = load i32, i32* %726, align 8
  %728 = tail call i32 @llvm.bswap.i32(i32 %727) #13
  %729 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 1
  store i32 %728, i32* %729, align 1
  %730 = trunc i32 %680 to i16
  %731 = tail call i16 @llvm.bswap.i16(i16 %730) #13
  %732 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 2
  store i16 %731, i16* %732, align 1
  %733 = trunc i32 %679 to i16
  %734 = tail call i16 @llvm.bswap.i16(i16 %733) #13
  %735 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 3
  store i16 %734, i16* %735, align 1
  %736 = trunc i32 %681 to i16
  %737 = tail call i16 @llvm.bswap.i16(i16 %736) #13
  %738 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 4
  store i16 %737, i16* %738, align 1
  %739 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 1, i32 5
  store i16 0, i16* %739, align 1
  %740 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 0, i32 0
  store i8 %7, i8* %740, align 1
  %741 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 0, i32 1
  store i8 %370, i8* %741, align 1
  %742 = load i16, i16* %151, align 8
  %743 = tail call i16 @llvm.bswap.i16(i16 %742) #13
  %744 = getelementptr inbounds %struct.sctp_nr_sack_chunk, %struct.sctp_nr_sack_chunk* %403, i64 0, i32 0, i32 2
  store i16 %743, i16* %744, align 1
  br label %745

745:                                              ; preds = %685, %713
  %746 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %746, align 8
  %747 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %748 = bitcast %struct.sctp_tmit_chunk*** %747 to i64*
  %749 = load i64, i64* %748, align 8
  %750 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %146, i64 0, i32 6, i32 1
  %751 = bitcast %struct.sctp_tmit_chunk*** %750 to i64*
  store i64 %749, i64* %751, align 8
  %752 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %747, align 8
  store %struct.sctp_tmit_chunk* %146, %struct.sctp_tmit_chunk** %752, align 8
  store %struct.sctp_tmit_chunk** %746, %struct.sctp_tmit_chunk*** %747, align 8
  %753 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 75
  %754 = load i32, i32* %753, align 8
  %755 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 76
  store i32 %754, i32* %755, align 4
  %756 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %757 = load i32, i32* %756, align 8
  %758 = add nsw i32 %757, 1
  store i32 %758, i32* %756, align 8
  %759 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 146
  store i8 0, i8* %759, align 2
  %760 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 40), i32 1 seq_cst
  br label %761

761:                                              ; preds = %294, %298, %133, %137, %2, %745
  ret void
}

declare void @sctp_timer_stop(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_association*, i32* nocapture, i32* nocapture, i32, i32, %struct.timeval* nocapture, i32* nocapture, i32, i32) unnamed_addr #2 {
  %12 = alloca %struct.mbuf*, align 8
  %13 = alloca [256 x %struct.sctp_tmit_chunk*], align 16
  %14 = alloca i32, align 4
  %15 = alloca %struct.sctp_auth_chunk*, align 8
  %16 = bitcast %struct.mbuf** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store %struct.mbuf* inttoptr (i64 -6148914691236517206 to %struct.mbuf*), %struct.mbuf** %12, align 8
  %17 = bitcast [256 x %struct.sctp_tmit_chunk*]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 2048, i1 false)
  %18 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 -1431655766, i32* %14, align 4
  %19 = bitcast %struct.sctp_auth_chunk** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store %struct.sctp_auth_chunk* inttoptr (i64 -6148914691236517206 to %struct.sctp_auth_chunk*), %struct.sctp_auth_chunk** %15, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 5
  %22 = load i16, i16* %21, align 8
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = trunc i32 %24 to i8
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 127
  %31 = icmp eq i32 %30, 32
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 8
  %34 = load i64, i64* %33, align 8
  %35 = lshr i64 %34, 22
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 1
  br label %38

38:                                               ; preds = %32, %11, %27
  %39 = phi i32 [ 1, %27 ], [ 1, %11 ], [ %37, %32 ]
  %40 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 18, i32 0
  %41 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %40, align 8
  %42 = icmp eq %struct.sctp_tmit_chunk* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 83
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 142
  %47 = load i16, i16* %46, align 4
  %48 = zext i16 %47 to i32
  %49 = icmp eq i32 %45, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %43, %38
  %51 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 19, i32 0
  %52 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %51, align 8
  %53 = icmp eq %struct.sctp_tmit_chunk* %52, null
  br i1 %53, label %54, label %62

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 21, i32 0
  %56 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %55, align 8
  %57 = icmp eq %struct.sctp_tmit_chunk* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = tail call i32 @sctp_is_there_unsent_data(%struct.sctp_tcb* %1, i32 %10) #13
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %78, %58
  store i32 9, i32* %4, align 4
  br label %2622

62:                                               ; preds = %58, %54, %50, %43
  %63 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 74
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  store i32 1, i32* %4, align 4
  %67 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 92
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %68, %5
  br label %70

70:                                               ; preds = %66, %62
  %71 = phi i32 [ %5, %62 ], [ %69, %66 ]
  %72 = icmp ne i32 %71, 0
  %73 = zext i1 %72 to i32
  %74 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 142
  %75 = load i16, i16* %74, align 4
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %97, label %77

77:                                               ; preds = %70
  br i1 %72, label %78, label %83

78:                                               ; preds = %77
  %79 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 83
  %80 = load i32, i32* %79, align 8
  %81 = zext i16 %75 to i32
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %61, label %83

83:                                               ; preds = %77, %78
  %84 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %40, align 8
  %85 = icmp eq %struct.sctp_tmit_chunk* %84, null
  br i1 %85, label %97, label %86

86:                                               ; preds = %83, %93
  %87 = phi %struct.sctp_tmit_chunk* [ %95, %93 ], [ %84, %83 ]
  %88 = bitcast %struct.sctp_tmit_chunk* %87 to i8*
  %89 = load i8, i8* %88, align 8
  switch i8 %89, label %93 [
    i8 3, label %90
    i8 16, label %90
  ]

90:                                               ; preds = %86, %86
  %91 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 5
  %92 = load %struct.sctp_nets*, %struct.sctp_nets** %91, align 8
  br label %97

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 6, i32 0
  %95 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %94, align 8
  %96 = icmp eq %struct.sctp_tmit_chunk* %95, null
  br i1 %96, label %97, label %86

97:                                               ; preds = %93, %83, %70, %90
  %98 = phi %struct.sctp_nets* [ %92, %90 ], [ null, %70 ], [ null, %83 ], [ null, %93 ]
  %99 = load i32, i32* %63, align 4
  %100 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 92
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, %99
  %103 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 94
  %104 = load i32, i32* %103, align 4
  %105 = udiv i32 %102, %104
  %106 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %107 = load %struct.socket*, %struct.socket** %106, align 8
  %108 = icmp eq %struct.socket* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %97
  %110 = getelementptr inbounds %struct.socket, %struct.socket* %107, i64 0, i32 22, i32 9
  %111 = load i32, i32* %110, align 8
  %112 = udiv i32 %111, %104
  br label %113

113:                                              ; preds = %97, %109
  %114 = phi i32 [ %112, %109 ], [ 0, %97 ]
  br i1 %72, label %1438, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 21, i32 0
  %117 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %116, align 8
  %118 = icmp eq %struct.sctp_tmit_chunk* %117, null
  br i1 %118, label %128, label %123

119:                                              ; preds = %123
  %120 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %124, i64 0, i32 6, i32 0
  %121 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %120, align 8
  %122 = icmp eq %struct.sctp_tmit_chunk* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %115, %119
  %124 = phi %struct.sctp_tmit_chunk* [ %121, %119 ], [ %117, %115 ]
  %125 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %124, i64 0, i32 5
  %126 = load %struct.sctp_nets*, %struct.sctp_nets** %125, align 8
  %127 = icmp eq %struct.sctp_nets* %126, null
  br i1 %127, label %1438, label %119

128:                                              ; preds = %119, %115
  %129 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 4
  %130 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %129, align 8
  %131 = tail call i32 %130(%struct.sctp_tcb* %1, %struct.sctp_association* %2) #13
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %1438

133:                                              ; preds = %128
  %134 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 16, i32 0
  %135 = load %struct.sctp_nets*, %struct.sctp_nets** %134, align 8
  %136 = icmp eq %struct.sctp_nets* %135, null
  br i1 %136, label %1438, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %139 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 37, i32 10
  %140 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %141 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 6
  %142 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 15
  %143 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 84
  %144 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 5
  %145 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 160
  %146 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  %147 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %148 = icmp eq i32 %39, 0
  %149 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %150 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 17, i32 0
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 17, i32 1
  %152 = bitcast %struct.sctp_tmit_chunk*** %151 to i64*
  %153 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 143
  %154 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 56
  %155 = ptrtoint %struct.sctp_tcb* %1 to i64
  %156 = trunc i64 %155 to i32
  %157 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 82
  %158 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 121
  %159 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 1
  %160 = bitcast %struct.sctp_tmit_chunk*** %159 to i64*
  %161 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 85
  %162 = icmp eq %struct.sctp_tcb* %1, null
  %163 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 7
  %164 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 8
  %165 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 189
  %166 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  br label %167

167:                                              ; preds = %137, %1434
  %168 = phi %struct.sctp_nets* [ %135, %137 ], [ %1436, %1434 ]
  %169 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 53
  store i8 0, i8* %169, align 1
  %170 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %171 = icmp eq %struct.sctp_nets* %168, %170
  br i1 %171, label %182, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 37
  %174 = load i16, i16* %173, align 4
  %175 = and i16 %174, 2561
  %176 = icmp eq i16 %175, 1
  br i1 %176, label %182, label %177

177:                                              ; preds = %172
  %178 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %179 = and i32 %178, 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %1434, label %181

181:                                              ; preds = %177
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, i32 1, i8 zeroext 69) #13
  br label %1434

182:                                              ; preds = %172, %167
  %183 = load void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)** %139, align 8
  %184 = icmp eq void (%struct.sctp_tcb*, %struct.sctp_nets*)* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 18
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %185
  tail call void %183(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168) #13
  br label %190

190:                                              ; preds = %182, %189, %185
  %191 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 18
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 19
  %194 = load i32, i32* %193, align 8
  %195 = icmp ult i32 %192, %194
  %196 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %197 = and i32 %196, 4
  %198 = icmp ne i32 %197, 0
  br i1 %195, label %201, label %199

199:                                              ; preds = %190
  br i1 %198, label %200, label %1434

200:                                              ; preds = %199
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, i32 3, i8 zeroext 69) #13
  br label %1434

201:                                              ; preds = %190
  br i1 %198, label %202, label %203

202:                                              ; preds = %201
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, i32 4, i8 zeroext 69) #13
  br label %203

203:                                              ; preds = %202, %201
  %204 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 3, i32 1, i32 0, i32 0
  %205 = load i16, i16* %204, align 8
  %206 = icmp eq i16 %205, 123
  %207 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 4
  %208 = load i32, i32* %207, align 8
  %209 = add i32 %208, -12
  %210 = select i1 %206, i32 %209, i32 %208
  %211 = load i8, i8* %140, align 2
  %212 = icmp eq i8 %211, 0
  %213 = select i1 %212, i32 16, i32 20
  %214 = sub i32 %210, %213
  %215 = load %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)** %141, align 8
  %216 = tail call %struct.sctp_stream_out* %215(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, %struct.sctp_association* %20) #13
  %217 = and i32 %214, -4
  %218 = icmp ne i32 %217, 0
  %219 = icmp ne %struct.sctp_stream_out* %216, null
  %220 = and i1 %219, %218
  br i1 %220, label %223, label %221

221:                                              ; preds = %203
  %222 = load void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)** %164, align 8
  tail call void %222(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, %struct.sctp_association* %20) #13
  br label %1420

223:                                              ; preds = %203, %1397
  %224 = phi i32 [ %1410, %1397 ], [ %217, %203 ]
  %225 = phi i32 [ %1400, %1397 ], [ 0, %203 ]
  %226 = phi %struct.sctp_stream_out* [ %1399, %1397 ], [ %216, %203 ]
  %227 = phi i32 [ %1392, %1397 ], [ 0, %203 ]
  %228 = phi i32 [ %1391, %1397 ], [ 0, %203 ]
  %229 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 0, i32 0
  %230 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 0, i32 1
  %231 = bitcast %struct.sctp_stream_queue_pending*** %230 to i64*
  %232 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 9
  %233 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 2
  br label %234

234:                                              ; preds = %403, %223
  %235 = phi i8 [ 0, %223 ], [ %404, %403 ]
  %236 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %229, align 8
  %237 = icmp eq %struct.sctp_stream_queue_pending* %236, null
  br i1 %237, label %238, label %266

238:                                              ; preds = %234
  %239 = icmp eq i8 %235, 0
  br i1 %239, label %240, label %244

240:                                              ; preds = %238
  %241 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  %242 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %229, align 8
  %243 = icmp eq %struct.sctp_stream_queue_pending* %242, null
  br i1 %243, label %244, label %403

244:                                              ; preds = %240, %238
  %245 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %147, align 8
  %246 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %245, i64 0, i32 8
  %247 = load i64, i64* %246, align 8
  %248 = and i64 %247, 4194304
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %1385

250:                                              ; preds = %244
  %251 = load i8, i8* %140, align 2
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %253, label %1385

253:                                              ; preds = %250
  %254 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 8
  %255 = load i8, i8* %254, align 2
  %256 = zext i8 %255 to i32
  %257 = icmp eq i8 %255, 0
  br i1 %257, label %1385, label %258

258:                                              ; preds = %253
  %259 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %260 = icmp eq void (i8*, ...)* %259, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 7
  %263 = load i16, i16* %262, align 4
  %264 = zext i16 %263 to i32
  tail call void (i8*, ...) %259(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0), i32 %264, i32 %256) #13
  br label %265

265:                                              ; preds = %261, %258
  store i8 0, i8* %254, align 2
  br label %1385

266:                                              ; preds = %234
  %267 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 16
  %268 = load i8, i8* %267, align 1
  %269 = icmp eq i8 %268, 0
  %270 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 7
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %269, label %405, label %273

273:                                              ; preds = %266
  br i1 %272, label %274, label %406

274:                                              ; preds = %273
  %275 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 18
  %276 = load i8, i8* %275, align 1
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %1379, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 19
  %280 = load i8, i8* %279, align 8
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %301

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 20
  %284 = load i8, i8* %283, align 1
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %301

286:                                              ; preds = %282
  %287 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %288 = icmp eq void (i8*, ...)* %287, null
  br i1 %288, label %301, label %289

289:                                              ; preds = %286
  tail call void (i8*, ...) %287(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0)) #13
  %290 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %291 = icmp eq void (i8*, ...)* %290, null
  br i1 %291, label %301, label %292

292:                                              ; preds = %289
  %293 = load i8, i8* %275, align 1
  %294 = zext i8 %293 to i32
  %295 = load i32, i32* %270, align 4
  %296 = load i8, i8* %267, align 1
  %297 = zext i8 %296 to i32
  %298 = load i8, i8* %279, align 8
  %299 = zext i8 %298 to i32
  %300 = zext i8 %235 to i32
  tail call void (i8*, ...) %290(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 %294, i32 %295, i32 %297, i32 %299, i32 %300) #13
  br label %301

301:                                              ; preds = %292, %289, %286, %282, %278
  %302 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 4, i32 0
  %303 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %302, align 8
  %304 = icmp eq %struct.sctp_stream_queue_pending* %303, null
  %305 = icmp eq i8 %235, 0
  %306 = and i1 %305, %304
  br i1 %306, label %307, label %309

307:                                              ; preds = %301
  %308 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  br label %309

309:                                              ; preds = %307, %301
  %310 = phi i8 [ 1, %307 ], [ %235, %301 ]
  %311 = atomicrmw sub i32* %143, i32 1 seq_cst
  %312 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %302, align 8
  %313 = icmp eq %struct.sctp_stream_queue_pending* %312, null
  %314 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 4, i32 1
  %315 = bitcast %struct.sctp_stream_queue_pending*** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %312, i64 0, i32 4, i32 1
  %318 = bitcast %struct.sctp_stream_queue_pending*** %317 to i64*
  %319 = select i1 %313, i64* %231, i64* %318
  store i64 %316, i64* %319, align 8
  %320 = bitcast %struct.sctp_stream_queue_pending** %302 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %struct.sctp_stream_queue_pending*** %314 to i64**
  %323 = load i64*, i64** %322, align 8
  store i64 %321, i64* %323, align 8
  %324 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %144, align 8
  %325 = zext i8 %310 to i32
  tail call void %324(%struct.sctp_tcb* %1, %struct.sctp_association* %20, %struct.sctp_stream_out* nonnull %226, %struct.sctp_stream_queue_pending* nonnull %236, i32 %325) #13
  %326 = load i8, i8* %232, align 1
  %327 = icmp eq i8 %326, 3
  br i1 %327, label %328, label %335

328:                                              ; preds = %309
  %329 = load i32, i32* %233, align 8
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %335

331:                                              ; preds = %328
  %332 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %229, align 8
  %333 = icmp eq %struct.sctp_stream_queue_pending* %332, null
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  store i8 1, i8* %145, align 2
  br label %335

335:                                              ; preds = %334, %331, %328, %309
  %336 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 3
  %337 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %338 = icmp eq %struct.sctp_nets* %337, null
  br i1 %338, label %385, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %337, i64 0, i32 17
  %341 = atomicrmw add i32* %340, i32 -1 seq_cst
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %384

343:                                              ; preds = %339
  %344 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %345 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %344, i64 0, i32 3, i32 0
  %346 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %345, align 8
  %347 = icmp eq %struct.sctp_rtentry* %346, null
  br i1 %347, label %363, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %346, i64 0, i32 3
  %350 = load i64, i64* %349, align 8
  %351 = icmp sgt i64 %350, 1
  %352 = add nsw i64 %350, -1
  store i64 %352, i64* %349, align 8
  %353 = icmp sgt i64 %352, 0
  %354 = or i1 %351, %353
  br i1 %354, label %357, label %355

355:                                              ; preds = %348
  %356 = bitcast %struct.sctp_rtentry* %346 to i8*
  tail call void @free(i8* %356) #13
  br label %357

357:                                              ; preds = %355, %348
  %358 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %359 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %358, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %359, align 8
  %360 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %361 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %360, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %361, align 8
  %362 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  br label %363

363:                                              ; preds = %357, %343
  %364 = phi %struct.sctp_nets* [ %344, %343 ], [ %362, %357 ]
  %365 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %364, i64 0, i32 47
  %366 = load i8, i8* %365, align 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %374, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %364, i64 0, i32 3, i32 2
  %370 = load %struct.sctp_ifa*, %struct.sctp_ifa** %369, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %370) #13
  %371 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %372 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %371, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %372, align 8
  %373 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  br label %374

374:                                              ; preds = %368, %363
  %375 = phi %struct.sctp_nets* [ %364, %363 ], [ %373, %368 ]
  %376 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %375, i64 0, i32 47
  store i8 0, i8* %376, align 1
  %377 = load %struct.sctp_nets*, %struct.sctp_nets** %336, align 8
  %378 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %377, i64 0, i32 37
  %379 = load i16, i16* %378, align 4
  %380 = and i16 %379, -2
  store i16 %380, i16* %378, align 4
  %381 = bitcast %struct.sctp_nets** %336 to i8**
  %382 = load i8*, i8** %381, align 8
  tail call void @free(i8* %382) #13
  %383 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %384

384:                                              ; preds = %374, %339
  store %struct.sctp_nets* null, %struct.sctp_nets** %336, align 8
  br label %385

385:                                              ; preds = %384, %335
  %386 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 0
  %387 = load %struct.mbuf*, %struct.mbuf** %386, align 8
  %388 = icmp eq %struct.mbuf* %387, null
  br i1 %388, label %390, label %389

389:                                              ; preds = %385
  tail call void @m_freem(%struct.mbuf* nonnull %387) #13
  store %struct.mbuf* null, %struct.mbuf** %386, align 8
  br label %390

390:                                              ; preds = %389, %385
  %391 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 15
  %392 = load i8, i8* %391, align 4
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %397, label %394

394:                                              ; preds = %390
  %395 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 14
  %396 = load i16, i16* %395, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %396, i32 %10) #13
  br label %397

397:                                              ; preds = %394, %390
  %398 = bitcast %struct.sctp_stream_queue_pending* %236 to i8*
  tail call void @free(i8* %398) #13
  %399 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  %400 = icmp eq i8 %310, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %142) #13
  br label %403

403:                                              ; preds = %401, %397, %240
  %404 = phi i8 [ 1, %240 ], [ 0, %397 ], [ 0, %401 ]
  br label %234

405:                                              ; preds = %266
  br i1 %272, label %1379, label %406

406:                                              ; preds = %273, %405
  %407 = phi i1 [ true, %405 ], [ false, %273 ]
  %408 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 20
  %409 = load i8, i8* %408, align 1
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %439, label %411

411:                                              ; preds = %406
  %412 = icmp eq i8 %235, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %411
  %414 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  %415 = load i32, i32* %270, align 4
  br label %416

416:                                              ; preds = %413, %411
  %417 = phi i32 [ %415, %413 ], [ %271, %411 ]
  %418 = atomicrmw sub i32* %146, i32 %417 seq_cst
  %419 = load %struct.socket*, %struct.socket** %106, align 8
  %420 = icmp eq %struct.socket* %419, null
  br i1 %420, label %431, label %421

421:                                              ; preds = %416
  %422 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %147, align 8
  %423 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %422, i64 0, i32 9
  %424 = load i32, i32* %423, align 8
  %425 = and i32 %424, 4194306
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %431, label %427

427:                                              ; preds = %421
  %428 = getelementptr inbounds %struct.socket, %struct.socket* %419, i64 0, i32 22, i32 8
  %429 = load i32, i32* %270, align 4
  %430 = atomicrmw sub i32* %428, i32 %429 seq_cst
  br label %431

431:                                              ; preds = %427, %421, %416
  %432 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 0
  %433 = load %struct.mbuf*, %struct.mbuf** %432, align 8
  %434 = icmp eq %struct.mbuf* %433, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %431
  tail call void @m_freem(%struct.mbuf* nonnull %433) #13
  %436 = bitcast %struct.sctp_stream_queue_pending* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %436, i8 0, i64 16, i1 false) #13
  br label %437

437:                                              ; preds = %435, %431
  store i32 0, i32* %270, align 4
  %438 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 17
  store i8 1, i8* %438, align 2
  br label %1385

439:                                              ; preds = %406
  %440 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 17
  %441 = load i8, i8* %440, align 2
  %442 = icmp ugt i32 %224, %9
  %443 = select i1 %442, i32 %9, i32 %224
  br i1 %407, label %461, label %444

444:                                              ; preds = %496, %439
  %445 = phi i8 [ %441, %439 ], [ %498, %496 ]
  %446 = phi i32 [ %271, %439 ], [ %497, %496 ]
  %447 = phi i8 [ %235, %439 ], [ 1, %496 ]
  %448 = icmp ugt i32 %446, %9
  %449 = icmp eq i8 %445, 0
  br i1 %448, label %459, label %450

450:                                              ; preds = %444
  %451 = select i1 %449, i8 3, i8 1
  %452 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 19
  store i8 1, i8* %452, align 8
  %453 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 11
  %454 = load i16, i16* %453, align 4
  %455 = lshr i16 %454, 11
  %456 = trunc i16 %455 to i8
  %457 = and i8 %456, 8
  %458 = or i8 %457, %451
  br label %505

459:                                              ; preds = %444
  %460 = select i1 %449, i8 2, i8 0
  store i8 1, i8* %440, align 2
  br label %505

461:                                              ; preds = %439
  br i1 %148, label %467, label %462

462:                                              ; preds = %461
  %463 = icmp ugt i32 %271, %224
  br i1 %463, label %483, label %464

464:                                              ; preds = %462
  %465 = load i32, i32* %149, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %488, label %1379

467:                                              ; preds = %461
  %468 = load %struct.socket*, %struct.socket** %106, align 8
  %469 = getelementptr inbounds %struct.socket, %struct.socket* %468, i64 0, i32 22, i32 9
  %470 = load i32, i32* %469, align 8
  %471 = icmp ult i32 %470, %9
  br i1 %471, label %488, label %472

472:                                              ; preds = %467
  %473 = icmp ugt i32 %271, %224
  br i1 %473, label %474, label %1379

474:                                              ; preds = %472
  %475 = sub i32 %271, %224
  %476 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 49), align 4
  %477 = icmp ult i32 %475, %476
  br i1 %477, label %1379, label %478

478:                                              ; preds = %474
  %479 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 18), align 8
  %480 = icmp ugt i32 %479, %9
  %481 = select i1 %480, i32 %9, i32 %479
  %482 = icmp ugt i32 %481, %224
  br i1 %482, label %1379, label %483

483:                                              ; preds = %478, %462
  %484 = phi i32 [ %224, %462 ], [ %443, %478 ]
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %1379, label %486

486:                                              ; preds = %483
  %487 = icmp ult i32 %484, %271
  br i1 %487, label %499, label %488

488:                                              ; preds = %486, %467, %464
  %489 = icmp eq i8 %235, 0
  br i1 %489, label %490, label %499

490:                                              ; preds = %488
  %491 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  %492 = load i8, i8* %267, align 1
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %494, label %496

494:                                              ; preds = %490
  %495 = load i8, i8* %440, align 2
  br label %499

496:                                              ; preds = %490
  %497 = load i32, i32* %270, align 4
  %498 = load i8, i8* %440, align 2
  br label %444

499:                                              ; preds = %494, %488, %486
  %500 = phi i8 [ %495, %494 ], [ %441, %488 ], [ %441, %486 ]
  %501 = phi i32 [ %271, %494 ], [ %271, %488 ], [ %484, %486 ]
  %502 = phi i8 [ 1, %494 ], [ 1, %488 ], [ %235, %486 ]
  %503 = icmp eq i8 %500, 0
  br i1 %503, label %504, label %505

504:                                              ; preds = %499
  store i8 1, i8* %440, align 2
  br label %505

505:                                              ; preds = %504, %499, %459, %450
  %506 = phi i32 [ %446, %459 ], [ %446, %450 ], [ %271, %504 ], [ %271, %499 ]
  %507 = phi i32 [ %9, %459 ], [ %446, %450 ], [ %501, %504 ], [ %501, %499 ]
  %508 = phi i8 [ %460, %459 ], [ %458, %450 ], [ 2, %504 ], [ 0, %499 ]
  %509 = phi i8 [ %447, %459 ], [ %447, %450 ], [ %502, %504 ], [ %502, %499 ]
  %510 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %150, align 8
  %511 = icmp eq %struct.sctp_tmit_chunk* %510, null
  br i1 %511, label %512, label %516

512:                                              ; preds = %505
  %513 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %514 = tail call noalias i8* @malloc(i64 %513) #13
  %515 = icmp eq i8* %514, null
  br i1 %515, label %1379, label %535

516:                                              ; preds = %505
  %517 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %510, i64 0, i32 6, i32 0
  %518 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %517, align 8
  %519 = icmp eq %struct.sctp_tmit_chunk* %518, null
  %520 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %510, i64 0, i32 6, i32 1
  %521 = bitcast %struct.sctp_tmit_chunk*** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %518, i64 0, i32 6, i32 1
  %524 = bitcast %struct.sctp_tmit_chunk*** %523 to i64*
  %525 = select i1 %519, i64* %152, i64* %524
  store i64 %522, i64* %525, align 8
  %526 = bitcast %struct.sctp_tmit_chunk** %517 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %struct.sctp_tmit_chunk*** %520 to i64**
  %529 = load i64*, i64** %528, align 8
  store i64 %527, i64* %529, align 8
  %530 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %531 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %510, i64 0, i32 14
  store i8 0, i8* %531, align 8
  %532 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %533 = load i16, i16* %153, align 2
  %534 = add i16 %533, -1
  store i16 %534, i16* %153, align 2
  br label %541

535:                                              ; preds = %512
  %536 = bitcast i8* %514 to %struct.sctp_tmit_chunk*
  %537 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %538 = getelementptr inbounds i8, i8* %514, i64 104
  %539 = bitcast i8* %538 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %539, align 8
  %540 = getelementptr inbounds i8, i8* %514, i64 144
  store i8 0, i8* %540, align 8
  br label %541

541:                                              ; preds = %535, %516
  %542 = phi %struct.sctp_tmit_chunk* [ %510, %516 ], [ %536, %535 ]
  %543 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 11
  %544 = load i16, i16* %543, align 4
  %545 = lshr i16 %544, 8
  %546 = trunc i16 %545 to i8
  %547 = and i8 %546, 4
  %548 = or i8 %547, %508
  %549 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 65), align 4
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %556, label %551

551:                                              ; preds = %541
  %552 = lshr i16 %544, 5
  %553 = trunc i16 %552 to i8
  %554 = and i8 %553, 8
  %555 = or i8 %548, %554
  br label %556

556:                                              ; preds = %551, %541
  %557 = phi i8 [ %548, %541 ], [ %555, %551 ]
  %558 = bitcast %struct.sctp_tmit_chunk* %542 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %558, i8 0, i64 152, i1 false) #13
  %559 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 10
  store i8 %557, i8* %559, align 1
  %560 = icmp ult i32 %507, %506
  br i1 %560, label %583, label %561

561:                                              ; preds = %556
  %562 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 18
  %563 = load i8, i8* %562, align 1
  %564 = or i8 %563, %509
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %561
  %567 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  br label %568

568:                                              ; preds = %566, %561
  %569 = phi i8 [ 1, %566 ], [ %509, %561 ]
  %570 = load i32, i32* %270, align 4
  %571 = icmp ult i32 %507, %570
  br i1 %571, label %583, label %572

572:                                              ; preds = %568
  %573 = bitcast %struct.sctp_stream_queue_pending* %236 to i64*
  %574 = load i64, i64* %573, align 8
  %575 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 3
  %576 = bitcast %struct.mbuf** %575 to i64*
  store i64 %574, i64* %576, align 8
  %577 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 1
  %578 = bitcast %struct.mbuf** %577 to i64*
  %579 = load i64, i64* %578, align 8
  %580 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 4
  %581 = bitcast %struct.mbuf** %580 to i64*
  store i64 %579, i64* %581, align 8
  %582 = bitcast %struct.sctp_stream_queue_pending* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %582, i8 0, i64 16, i1 false) #13
  br label %699

583:                                              ; preds = %568, %556
  %584 = phi i8 [ %569, %568 ], [ %509, %556 ]
  %585 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 0
  %586 = load %struct.mbuf*, %struct.mbuf** %585, align 8
  %587 = tail call %struct.mbuf* @m_copym(%struct.mbuf* %586, i32 0, i32 %507, i32 1) #13
  %588 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 3
  store %struct.mbuf* %587, %struct.mbuf** %588, align 8
  %589 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 4
  store %struct.mbuf* null, %struct.mbuf** %589, align 8
  %590 = icmp eq %struct.mbuf* %587, null
  br i1 %590, label %591, label %671

591:                                              ; preds = %583
  store i8 %441, i8* %440, align 2
  %592 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 14
  %593 = load i8, i8* %592, align 8
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %598, label %595

595:                                              ; preds = %591
  %596 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 13
  %597 = load i16, i16* %596, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %597, i32 %10) #13
  store i8 0, i8* %592, align 8
  br label %598

598:                                              ; preds = %595, %591
  br i1 %162, label %669, label %599

599:                                              ; preds = %598
  %600 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 5
  %601 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %602 = icmp eq %struct.sctp_nets* %601, null
  br i1 %602, label %649, label %603

603:                                              ; preds = %599
  %604 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %601, i64 0, i32 17
  %605 = atomicrmw add i32* %604, i32 -1 seq_cst
  %606 = icmp eq i32 %605, 1
  br i1 %606, label %607, label %648

607:                                              ; preds = %603
  %608 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %609 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %608, i64 0, i32 3, i32 0
  %610 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %609, align 8
  %611 = icmp eq %struct.sctp_rtentry* %610, null
  br i1 %611, label %627, label %612

612:                                              ; preds = %607
  %613 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %610, i64 0, i32 3
  %614 = load i64, i64* %613, align 8
  %615 = icmp sgt i64 %614, 1
  %616 = add nsw i64 %614, -1
  store i64 %616, i64* %613, align 8
  %617 = icmp sgt i64 %616, 0
  %618 = or i1 %615, %617
  br i1 %618, label %621, label %619

619:                                              ; preds = %612
  %620 = bitcast %struct.sctp_rtentry* %610 to i8*
  tail call void @free(i8* %620) #13
  br label %621

621:                                              ; preds = %619, %612
  %622 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %623 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %622, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %623, align 8
  %624 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %625 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %624, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %625, align 8
  %626 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  br label %627

627:                                              ; preds = %621, %607
  %628 = phi %struct.sctp_nets* [ %608, %607 ], [ %626, %621 ]
  %629 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %628, i64 0, i32 47
  %630 = load i8, i8* %629, align 1
  %631 = icmp eq i8 %630, 0
  br i1 %631, label %638, label %632

632:                                              ; preds = %627
  %633 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %628, i64 0, i32 3, i32 2
  %634 = load %struct.sctp_ifa*, %struct.sctp_ifa** %633, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %634) #13
  %635 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %636 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %635, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %636, align 8
  %637 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  br label %638

638:                                              ; preds = %632, %627
  %639 = phi %struct.sctp_nets* [ %628, %627 ], [ %637, %632 ]
  %640 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %639, i64 0, i32 47
  store i8 0, i8* %640, align 1
  %641 = load %struct.sctp_nets*, %struct.sctp_nets** %600, align 8
  %642 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %641, i64 0, i32 37
  %643 = load i16, i16* %642, align 4
  %644 = and i16 %643, -2
  store i16 %644, i16* %642, align 4
  %645 = bitcast %struct.sctp_nets** %600 to i8**
  %646 = load i8*, i8** %645, align 8
  tail call void @free(i8* %646) #13
  %647 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %648

648:                                              ; preds = %638, %603
  store %struct.sctp_nets* null, %struct.sctp_nets** %600, align 8
  br label %649

649:                                              ; preds = %648, %599
  %650 = load i16, i16* %153, align 2
  %651 = zext i16 %650 to i32
  %652 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %653 = icmp ult i32 %652, %651
  br i1 %653, label %658, label %654

654:                                              ; preds = %649
  %655 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %656 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %657 = icmp ugt i32 %655, %656
  br i1 %657, label %658, label %660

658:                                              ; preds = %654, %649
  tail call void @free(i8* %558) #13
  %659 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1379

660:                                              ; preds = %654
  %661 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %661, align 8
  %662 = load i64, i64* %152, align 8
  %663 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 1
  %664 = bitcast %struct.sctp_tmit_chunk*** %663 to i64*
  store i64 %662, i64* %664, align 8
  %665 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %151, align 8
  store %struct.sctp_tmit_chunk* %542, %struct.sctp_tmit_chunk** %665, align 8
  store %struct.sctp_tmit_chunk** %661, %struct.sctp_tmit_chunk*** %151, align 8
  %666 = load i16, i16* %153, align 2
  %667 = add i16 %666, 1
  store i16 %667, i16* %153, align 2
  %668 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %1379

669:                                              ; preds = %598
  tail call void @free(i8* %558) #13
  %670 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1379

671:                                              ; preds = %583
  %672 = load %struct.mbuf*, %struct.mbuf** %585, align 8
  tail call void @m_adj(%struct.mbuf* %672, i32 %507) #13
  %673 = load %struct.mbuf*, %struct.mbuf** %585, align 8
  %674 = icmp eq %struct.mbuf* %673, null
  br i1 %674, label %699, label %675

675:                                              ; preds = %671
  %676 = bitcast %struct.sctp_stream_queue_pending* %236 to i64*
  %677 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 1
  %678 = bitcast %struct.sctp_stream_queue_pending* %236 to i8*
  br label %679

679:                                              ; preds = %695, %675
  %680 = phi %struct.mbuf* [ %673, %675 ], [ %697, %695 ]
  %681 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %680, i64 0, i32 0, i32 3
  %682 = load i32, i32* %681, align 8
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %684, label %699

684:                                              ; preds = %679
  %685 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %680, i64 0, i32 0, i32 0
  %686 = bitcast %struct.mbuf* %680 to i64*
  %687 = load i64, i64* %686, align 8
  store i64 %687, i64* %676, align 8
  store %struct.mbuf* null, %struct.mbuf** %685, align 8
  %688 = load %struct.mbuf*, %struct.mbuf** %677, align 8
  %689 = icmp eq %struct.mbuf* %688, %680
  br i1 %689, label %690, label %695

690:                                              ; preds = %684
  %691 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %692 = icmp eq void (i8*, ...)* %691, null
  br i1 %692, label %694, label %693

693:                                              ; preds = %690
  tail call void (i8*, ...) %691(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #13
  br label %694

694:                                              ; preds = %693, %690
  store i32 0, i32* %270, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %678, i8 0, i64 16, i1 false) #13
  br label %695

695:                                              ; preds = %694, %684
  %696 = tail call %struct.mbuf* @m_free(%struct.mbuf* nonnull %680) #13
  %697 = load %struct.mbuf*, %struct.mbuf** %585, align 8
  %698 = icmp eq %struct.mbuf* %697, null
  br i1 %698, label %699, label %679

699:                                              ; preds = %695, %679, %671, %572
  %700 = phi i8 [ %569, %572 ], [ %584, %671 ], [ %584, %679 ], [ %584, %695 ]
  %701 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 3
  %702 = load %struct.mbuf*, %struct.mbuf** %701, align 8
  %703 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %702, i64 0, i32 0, i32 4
  %704 = load i32, i32* %703, align 4
  %705 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 19
  %706 = trunc i32 %704 to i8
  %707 = and i8 %706, 1
  store i8 %707, i8* %705, align 1
  %708 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 4
  %709 = load %struct.mbuf*, %struct.mbuf** %708, align 8
  %710 = icmp eq %struct.mbuf* %709, null
  br i1 %710, label %711, label %722

711:                                              ; preds = %699
  %712 = ptrtoint %struct.mbuf* %702 to i64
  %713 = bitcast %struct.mbuf** %708 to i64*
  store i64 %712, i64* %713, align 8
  %714 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %702, i64 0, i32 0, i32 0
  %715 = load %struct.mbuf*, %struct.mbuf** %714, align 8
  %716 = icmp eq %struct.mbuf* %715, null
  br i1 %716, label %722, label %717

717:                                              ; preds = %711, %717
  %718 = phi %struct.mbuf* [ %720, %717 ], [ %715, %711 ]
  store %struct.mbuf* %718, %struct.mbuf** %708, align 8
  %719 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %718, i64 0, i32 0, i32 0
  %720 = load %struct.mbuf*, %struct.mbuf** %719, align 8
  %721 = icmp eq %struct.mbuf* %720, null
  br i1 %721, label %722, label %717

722:                                              ; preds = %717, %711, %699
  %723 = icmp ugt i32 %507, %506
  br i1 %723, label %724, label %729

724:                                              ; preds = %722
  %725 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %726 = icmp eq void (i8*, ...)* %725, null
  br i1 %726, label %728, label %727

727:                                              ; preds = %724
  tail call void (i8*, ...) %725(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #13
  br label %728

728:                                              ; preds = %727, %724
  store i32 0, i32* %270, align 4
  br label %731

729:                                              ; preds = %722
  %730 = atomicrmw sub i32* %270, i32 %507 seq_cst
  br label %731

731:                                              ; preds = %729, %728
  %732 = load i8, i8* %140, align 2
  %733 = icmp eq i8 %732, 0
  %734 = load %struct.mbuf*, %struct.mbuf** %701, align 8
  %735 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 0, i32 4
  %736 = load i32, i32* %735, align 4
  %737 = and i32 %736, 1
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %755, label %739

739:                                              ; preds = %731
  %740 = and i32 %736, 8
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %742, label %771

742:                                              ; preds = %739
  %743 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %744 = load i32*, i32** %743, align 8
  %745 = load volatile i32, i32* %744, align 4
  %746 = icmp eq i32 %745, 1
  br i1 %746, label %747, label %771

747:                                              ; preds = %742
  %748 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 0, i32 2
  %749 = bitcast i8** %748 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %752 = bitcast i8** %751 to i64*
  %753 = load i64, i64* %752, align 8
  %754 = sub i64 %750, %753
  br label %767

755:                                              ; preds = %731
  %756 = and i32 %736, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 0, i32 2
  %759 = bitcast i8** %758 to i64*
  %760 = load i64, i64* %759, align 8
  %761 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 1
  %762 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %734, i64 0, i32 1, i32 0, i32 1
  %763 = ptrtoint %union.anon.7* %762 to i64
  %764 = ptrtoint %union.anon.4* %761 to i64
  %765 = select i1 %757, i64 %764, i64 %763
  %766 = sub i64 %760, %765
  br label %767

767:                                              ; preds = %755, %747
  %768 = phi i64 [ %754, %747 ], [ %766, %755 ]
  %769 = select i1 %733, i64 16, i64 20
  %770 = icmp slt i64 %768, %769
  br i1 %770, label %771, label %886

771:                                              ; preds = %767, %742, %739
  %772 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 1, i32 0, i32 1, i32 1, i32 1) #13
  %773 = icmp eq %struct.mbuf* %772, null
  br i1 %773, label %774, label %874

774:                                              ; preds = %771
  %775 = icmp eq i8 %700, 0
  br i1 %775, label %776, label %778

776:                                              ; preds = %774
  %777 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  br label %778

778:                                              ; preds = %776, %774
  %779 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 0
  %780 = load %struct.mbuf*, %struct.mbuf** %779, align 8
  %781 = icmp eq %struct.mbuf* %780, null
  %782 = bitcast %struct.mbuf** %701 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = bitcast %struct.sctp_stream_queue_pending* %236 to i64*
  store i64 %783, i64* %784, align 8
  br i1 %781, label %785, label %790

785:                                              ; preds = %778
  %786 = bitcast %struct.mbuf** %708 to i64*
  %787 = load i64, i64* %786, align 8
  %788 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 1
  %789 = bitcast %struct.mbuf** %788 to i64*
  store i64 %787, i64* %789, align 8
  br label %793

790:                                              ; preds = %778
  %791 = load %struct.mbuf*, %struct.mbuf** %708, align 8
  %792 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %791, i64 0, i32 0, i32 0
  store %struct.mbuf* %780, %struct.mbuf** %792, align 8
  br label %793

793:                                              ; preds = %790, %785
  store i8 %441, i8* %440, align 2
  %794 = atomicrmw add i32* %270, i32 %507 seq_cst
  store %struct.mbuf* null, %struct.mbuf** %701, align 8
  %795 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 14
  %796 = load i8, i8* %795, align 8
  %797 = icmp eq i8 %796, 0
  br i1 %797, label %801, label %798

798:                                              ; preds = %793
  %799 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 13
  %800 = load i16, i16* %799, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %800, i32 %10) #13
  store i8 0, i8* %795, align 8
  br label %801

801:                                              ; preds = %798, %793
  br i1 %162, label %872, label %802

802:                                              ; preds = %801
  %803 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 5
  %804 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %805 = icmp eq %struct.sctp_nets* %804, null
  br i1 %805, label %852, label %806

806:                                              ; preds = %802
  %807 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %804, i64 0, i32 17
  %808 = atomicrmw add i32* %807, i32 -1 seq_cst
  %809 = icmp eq i32 %808, 1
  br i1 %809, label %810, label %851

810:                                              ; preds = %806
  %811 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %812 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %811, i64 0, i32 3, i32 0
  %813 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %812, align 8
  %814 = icmp eq %struct.sctp_rtentry* %813, null
  br i1 %814, label %830, label %815

815:                                              ; preds = %810
  %816 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %813, i64 0, i32 3
  %817 = load i64, i64* %816, align 8
  %818 = icmp sgt i64 %817, 1
  %819 = add nsw i64 %817, -1
  store i64 %819, i64* %816, align 8
  %820 = icmp sgt i64 %819, 0
  %821 = or i1 %818, %820
  br i1 %821, label %824, label %822

822:                                              ; preds = %815
  %823 = bitcast %struct.sctp_rtentry* %813 to i8*
  tail call void @free(i8* %823) #13
  br label %824

824:                                              ; preds = %822, %815
  %825 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %826 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %825, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %826, align 8
  %827 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %828 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %827, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %828, align 8
  %829 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  br label %830

830:                                              ; preds = %824, %810
  %831 = phi %struct.sctp_nets* [ %811, %810 ], [ %829, %824 ]
  %832 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %831, i64 0, i32 47
  %833 = load i8, i8* %832, align 1
  %834 = icmp eq i8 %833, 0
  br i1 %834, label %841, label %835

835:                                              ; preds = %830
  %836 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %831, i64 0, i32 3, i32 2
  %837 = load %struct.sctp_ifa*, %struct.sctp_ifa** %836, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %837) #13
  %838 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %839 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %838, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %839, align 8
  %840 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  br label %841

841:                                              ; preds = %835, %830
  %842 = phi %struct.sctp_nets* [ %831, %830 ], [ %840, %835 ]
  %843 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %842, i64 0, i32 47
  store i8 0, i8* %843, align 1
  %844 = load %struct.sctp_nets*, %struct.sctp_nets** %803, align 8
  %845 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %844, i64 0, i32 37
  %846 = load i16, i16* %845, align 4
  %847 = and i16 %846, -2
  store i16 %847, i16* %845, align 4
  %848 = bitcast %struct.sctp_nets** %803 to i8**
  %849 = load i8*, i8** %848, align 8
  tail call void @free(i8* %849) #13
  %850 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %851

851:                                              ; preds = %841, %806
  store %struct.sctp_nets* null, %struct.sctp_nets** %803, align 8
  br label %852

852:                                              ; preds = %851, %802
  %853 = load i16, i16* %153, align 2
  %854 = zext i16 %853 to i32
  %855 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %856 = icmp ult i32 %855, %854
  br i1 %856, label %861, label %857

857:                                              ; preds = %852
  %858 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %859 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %860 = icmp ugt i32 %858, %859
  br i1 %860, label %861, label %863

861:                                              ; preds = %857, %852
  tail call void @free(i8* %558) #13
  %862 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1385

863:                                              ; preds = %857
  %864 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %864, align 8
  %865 = load i64, i64* %152, align 8
  %866 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 1
  %867 = bitcast %struct.sctp_tmit_chunk*** %866 to i64*
  store i64 %865, i64* %867, align 8
  %868 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %151, align 8
  store %struct.sctp_tmit_chunk* %542, %struct.sctp_tmit_chunk** %868, align 8
  store %struct.sctp_tmit_chunk** %864, %struct.sctp_tmit_chunk*** %151, align 8
  %869 = load i16, i16* %153, align 2
  %870 = add i16 %869, 1
  store i16 %870, i16* %153, align 2
  %871 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %1385

872:                                              ; preds = %801
  tail call void @free(i8* %558) #13
  %873 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1385

874:                                              ; preds = %771
  %875 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %772, i64 0, i32 0, i32 3
  store i32 0, i32* %875, align 8
  %876 = bitcast %struct.mbuf** %701 to i64*
  %877 = load i64, i64* %876, align 8
  %878 = bitcast %struct.mbuf* %772 to i64*
  store i64 %877, i64* %878, align 8
  store %struct.mbuf* %772, %struct.mbuf** %701, align 8
  %879 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %772, i64 0, i32 0, i32 2
  %880 = load i8*, i8** %879, align 8
  %881 = getelementptr inbounds i8, i8* %880, i64 208
  store i8* %881, i8** %879, align 8
  %882 = load %struct.mbuf*, %struct.mbuf** %701, align 8
  %883 = load i8, i8* %140, align 2
  %884 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %882, i64 0, i32 0, i32 4
  %885 = load i32, i32* %884, align 4
  br label %886

886:                                              ; preds = %874, %767
  %887 = phi i32 [ %885, %874 ], [ %736, %767 ]
  %888 = phi i8 [ %883, %874 ], [ %732, %767 ]
  %889 = phi %struct.mbuf* [ %882, %874 ], [ %734, %767 ]
  %890 = icmp eq i8 %888, 0
  %891 = select i1 %890, i32 16, i32 20
  %892 = and i32 %887, 1
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %910, label %894

894:                                              ; preds = %886
  %895 = and i32 %887, 8
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %935

897:                                              ; preds = %894
  %898 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %899 = load i32*, i32** %898, align 8
  %900 = load volatile i32, i32* %899, align 4
  %901 = icmp eq i32 %900, 1
  br i1 %901, label %902, label %935

902:                                              ; preds = %897
  %903 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 0, i32 2
  %904 = bitcast i8** %903 to i64*
  %905 = load i64, i64* %904, align 8
  %906 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %907 = bitcast i8** %906 to i64*
  %908 = load i64, i64* %907, align 8
  %909 = sub i64 %905, %908
  br label %922

910:                                              ; preds = %886
  %911 = and i32 %887, 2
  %912 = icmp eq i32 %911, 0
  %913 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 0, i32 2
  %914 = bitcast i8** %913 to i64*
  %915 = load i64, i64* %914, align 8
  %916 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 1
  %917 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 1, i32 0, i32 1
  %918 = ptrtoint %union.anon.7* %917 to i64
  %919 = ptrtoint %union.anon.4* %916 to i64
  %920 = select i1 %912, i64 %919, i64 %918
  %921 = sub i64 %915, %920
  br label %922

922:                                              ; preds = %910, %902
  %923 = phi i64 [ %905, %902 ], [ %915, %910 ]
  %924 = phi i64 [ %909, %902 ], [ %921, %910 ]
  %925 = zext i32 %891 to i64
  %926 = icmp slt i64 %924, %925
  br i1 %926, label %935, label %927

927:                                              ; preds = %922
  %928 = inttoptr i64 %923 to i8*
  %929 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 0, i32 2
  %930 = sub nsw i64 0, %925
  %931 = getelementptr inbounds i8, i8* %928, i64 %930
  store i8* %931, i8** %929, align 8
  %932 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %889, i64 0, i32 0, i32 3
  %933 = load i32, i32* %932, align 8
  %934 = add nsw i32 %933, %891
  store i32 %934, i32* %932, align 8
  br label %937

935:                                              ; preds = %922, %897, %894
  %936 = tail call %struct.mbuf* @m_prepend(%struct.mbuf* %889, i32 %891, i32 1) #13
  br label %937

937:                                              ; preds = %935, %927
  %938 = phi %struct.mbuf* [ %889, %927 ], [ %936, %935 ]
  %939 = icmp eq %struct.mbuf* %938, null
  br i1 %939, label %949, label %940

940:                                              ; preds = %937
  %941 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %938, i64 0, i32 0, i32 4
  %942 = load i32, i32* %941, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %1033, label %945

945:                                              ; preds = %940
  %946 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %938, i64 0, i32 1, i32 0, i32 0, i32 2
  %947 = load i32, i32* %946, align 8
  %948 = add nsw i32 %947, %891
  store i32 %948, i32* %946, align 8
  br label %1033

949:                                              ; preds = %937
  store %struct.mbuf* null, %struct.mbuf** %701, align 8
  %950 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %951 = icmp eq void (i8*, ...)* %950, null
  br i1 %951, label %953, label %952

952:                                              ; preds = %949
  tail call void (i8*, ...) %950(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #13
  br label %953

953:                                              ; preds = %952, %949
  %954 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 14
  %955 = load i8, i8* %954, align 8
  %956 = icmp eq i8 %955, 0
  br i1 %956, label %960, label %957

957:                                              ; preds = %953
  %958 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 13
  %959 = load i16, i16* %958, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %959, i32 %10) #13
  store i8 0, i8* %954, align 8
  br label %960

960:                                              ; preds = %957, %953
  br i1 %162, label %1031, label %961

961:                                              ; preds = %960
  %962 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 5
  %963 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %964 = icmp eq %struct.sctp_nets* %963, null
  br i1 %964, label %1011, label %965

965:                                              ; preds = %961
  %966 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %963, i64 0, i32 17
  %967 = atomicrmw add i32* %966, i32 -1 seq_cst
  %968 = icmp eq i32 %967, 1
  br i1 %968, label %969, label %1010

969:                                              ; preds = %965
  %970 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %971 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %970, i64 0, i32 3, i32 0
  %972 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %971, align 8
  %973 = icmp eq %struct.sctp_rtentry* %972, null
  br i1 %973, label %989, label %974

974:                                              ; preds = %969
  %975 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %972, i64 0, i32 3
  %976 = load i64, i64* %975, align 8
  %977 = icmp sgt i64 %976, 1
  %978 = add nsw i64 %976, -1
  store i64 %978, i64* %975, align 8
  %979 = icmp sgt i64 %978, 0
  %980 = or i1 %977, %979
  br i1 %980, label %983, label %981

981:                                              ; preds = %974
  %982 = bitcast %struct.sctp_rtentry* %972 to i8*
  tail call void @free(i8* %982) #13
  br label %983

983:                                              ; preds = %981, %974
  %984 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %985 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %984, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %985, align 8
  %986 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %987 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %986, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %987, align 8
  %988 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  br label %989

989:                                              ; preds = %983, %969
  %990 = phi %struct.sctp_nets* [ %970, %969 ], [ %988, %983 ]
  %991 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %990, i64 0, i32 47
  %992 = load i8, i8* %991, align 1
  %993 = icmp eq i8 %992, 0
  br i1 %993, label %1000, label %994

994:                                              ; preds = %989
  %995 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %990, i64 0, i32 3, i32 2
  %996 = load %struct.sctp_ifa*, %struct.sctp_ifa** %995, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %996) #13
  %997 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %998 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %997, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %998, align 8
  %999 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  br label %1000

1000:                                             ; preds = %994, %989
  %1001 = phi %struct.sctp_nets* [ %990, %989 ], [ %999, %994 ]
  %1002 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1001, i64 0, i32 47
  store i8 0, i8* %1002, align 1
  %1003 = load %struct.sctp_nets*, %struct.sctp_nets** %962, align 8
  %1004 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1003, i64 0, i32 37
  %1005 = load i16, i16* %1004, align 4
  %1006 = and i16 %1005, -2
  store i16 %1006, i16* %1004, align 4
  %1007 = bitcast %struct.sctp_nets** %962 to i8**
  %1008 = load i8*, i8** %1007, align 8
  tail call void @free(i8* %1008) #13
  %1009 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %1010

1010:                                             ; preds = %1000, %965
  store %struct.sctp_nets* null, %struct.sctp_nets** %962, align 8
  br label %1011

1011:                                             ; preds = %1010, %961
  %1012 = load i16, i16* %153, align 2
  %1013 = zext i16 %1012 to i32
  %1014 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %1015 = icmp ult i32 %1014, %1013
  br i1 %1015, label %1020, label %1016

1016:                                             ; preds = %1011
  %1017 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %1018 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %1019 = icmp ugt i32 %1017, %1018
  br i1 %1019, label %1020, label %1022

1020:                                             ; preds = %1016, %1011
  tail call void @free(i8* %558) #13
  %1021 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1379

1022:                                             ; preds = %1016
  %1023 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %1023, align 8
  %1024 = load i64, i64* %152, align 8
  %1025 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 1
  %1026 = bitcast %struct.sctp_tmit_chunk*** %1025 to i64*
  store i64 %1024, i64* %1026, align 8
  %1027 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %151, align 8
  store %struct.sctp_tmit_chunk* %542, %struct.sctp_tmit_chunk** %1027, align 8
  store %struct.sctp_tmit_chunk** %1023, %struct.sctp_tmit_chunk*** %151, align 8
  %1028 = load i16, i16* %153, align 2
  %1029 = add i16 %1028, 1
  store i16 %1029, i16* %153, align 2
  %1030 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %1379

1031:                                             ; preds = %960
  tail call void @free(i8* %558) #13
  %1032 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %1379

1033:                                             ; preds = %945, %940
  store %struct.mbuf* %938, %struct.mbuf** %701, align 8
  %1034 = load i8, i8* %140, align 2
  %1035 = icmp eq i8 %1034, 0
  %1036 = select i1 %1035, i32 16, i32 20
  %1037 = atomicrmw add i32* %146, i32 %1036 seq_cst
  %1038 = load %struct.socket*, %struct.socket** %106, align 8
  %1039 = icmp eq %struct.socket* %1038, null
  br i1 %1039, label %1052, label %1040

1040:                                             ; preds = %1033
  %1041 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %147, align 8
  %1042 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1041, i64 0, i32 9
  %1043 = load i32, i32* %1042, align 8
  %1044 = and i32 %1043, 4194306
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1052, label %1046

1046:                                             ; preds = %1040
  %1047 = getelementptr inbounds %struct.socket, %struct.socket* %1038, i64 0, i32 22, i32 8
  %1048 = load i8, i8* %140, align 2
  %1049 = icmp eq i8 %1048, 0
  %1050 = select i1 %1049, i32 16, i32 20
  %1051 = atomicrmw add i32* %1047, i32 %1050 seq_cst
  br label %1052

1052:                                             ; preds = %1046, %1040, %1033
  %1053 = trunc i32 %507 to i16
  %1054 = load i8, i8* %140, align 2
  %1055 = icmp eq i8 %1054, 0
  %1056 = select i1 %1055, i16 16, i16 20
  %1057 = add i16 %1056, %1053
  %1058 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 10
  store i16 %1057, i16* %1058, align 8
  %1059 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 11
  store i16 %1057, i16* %1059, align 2
  %1060 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 17
  store i8 0, i8* %1060, align 1
  %1061 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 7
  store i32 0, i32* %1061, align 8
  %1062 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 9
  store i16 0, i16* %1062, align 2
  %1063 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 1
  store %struct.sctp_association* %20, %struct.sctp_association** %1063, align 8
  %1064 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 15
  store i8 0, i8* %1064, align 1
  %1065 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 18
  store i8 0, i8* %1065, align 4
  %1066 = load i8, i8* %140, align 2
  %1067 = icmp eq i8 %1066, 0
  %1068 = zext i8 %557 to i32
  %1069 = and i32 %1068, 4
  %1070 = icmp ne i32 %1069, 0
  br i1 %1067, label %1071, label %1083

1071:                                             ; preds = %1052
  br i1 %1070, label %1072, label %1074

1072:                                             ; preds = %1071
  %1073 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1073, align 4
  br label %1102

1074:                                             ; preds = %1071
  %1075 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 5
  %1076 = load i32, i32* %1075, align 4
  %1077 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  store i32 %1076, i32* %1077, align 4
  %1078 = and i32 %1068, 1
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1102, label %1080

1080:                                             ; preds = %1074
  %1081 = load i32, i32* %1075, align 4
  %1082 = add i32 %1081, 1
  store i32 %1082, i32* %1075, align 4
  br label %1102

1083:                                             ; preds = %1052
  br i1 %1070, label %1084, label %1093

1084:                                             ; preds = %1083
  %1085 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 6
  %1086 = load i32, i32* %1085, align 8
  %1087 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  store i32 %1086, i32* %1087, align 4
  %1088 = and i32 %1068, 1
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %1102, label %1090

1090:                                             ; preds = %1084
  %1091 = load i32, i32* %1085, align 8
  %1092 = add i32 %1091, 1
  store i32 %1092, i32* %1085, align 8
  br label %1102

1093:                                             ; preds = %1083
  %1094 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 5
  %1095 = load i32, i32* %1094, align 4
  %1096 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  store i32 %1095, i32* %1096, align 4
  %1097 = and i32 %1068, 1
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1102, label %1099

1099:                                             ; preds = %1093
  %1100 = load i32, i32* %1094, align 4
  %1101 = add i32 %1100, 1
  store i32 %1101, i32* %1094, align 4
  br label %1102

1102:                                             ; preds = %1099, %1093, %1090, %1084, %1080, %1074, %1072
  %1103 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 12
  %1104 = load i16, i16* %1103, align 2
  %1105 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 2
  store i16 %1104, i16* %1105, align 8
  %1106 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 9
  %1107 = load i32, i32* %1106, align 4
  %1108 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 3
  store i32 %1107, i32* %1108, align 4
  %1109 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 10
  %1110 = load i32, i32* %1109, align 8
  %1111 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 4
  store i32 %1110, i32* %1111, align 8
  %1112 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 9
  store i8 0, i8* %1112, align 4
  %1113 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 7
  %1114 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 2
  %1115 = bitcast %struct.timeval* %1113 to i8*
  %1116 = bitcast %struct.timeval* %1114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1115, i8* align 8 %1116, i64 16, i1 false) #13
  %1117 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 13
  %1118 = load i16, i16* %1117, align 8
  store i16 %1118, i16* %1062, align 2
  %1119 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 3
  %1120 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1121 = icmp eq %struct.sctp_nets* %1120, null
  %1122 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 5
  br i1 %1121, label %1126, label %1123

1123:                                             ; preds = %1102
  store %struct.sctp_nets* %1120, %struct.sctp_nets** %1122, align 8
  %1124 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1120, i64 0, i32 17
  %1125 = atomicrmw add i32* %1124, i32 1 seq_cst
  br label %1127

1126:                                             ; preds = %1102
  store %struct.sctp_nets* null, %struct.sctp_nets** %1122, align 8
  br label %1127

1127:                                             ; preds = %1126, %1123
  %1128 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 15
  %1129 = load i8, i8* %1128, align 4
  %1130 = icmp eq i8 %1129, 0
  br i1 %1130, label %1136, label %1131

1131:                                             ; preds = %1127
  %1132 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 14
  %1133 = load i16, i16* %1132, align 2
  %1134 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 13
  store i16 %1133, i16* %1134, align 2
  tail call void @sctp_auth_key_acquire(%struct.sctp_tcb* %1, i16 zeroext %1133) #13
  %1135 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 14
  store i8 1, i8* %1135, align 8
  br label %1136

1136:                                             ; preds = %1131, %1127
  %1137 = load i32, i32* %154, align 8
  %1138 = add i32 %1137, 1
  store i32 %1138, i32* %154, align 8
  %1139 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 0
  store i32 %1137, i32* %1139, align 8
  %1140 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1141 = and i32 %1140, 134217728
  %1142 = icmp eq i32 %1141, 0
  br i1 %1142, label %1152, label %1143

1143:                                             ; preds = %1136
  %1144 = load i32, i32* %270, align 4
  %1145 = load i16, i16* %1105, align 8
  %1146 = zext i16 %1145 to i32
  %1147 = shl nuw i32 %1146, 16
  %1148 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  %1149 = load i32, i32* %1148, align 4
  %1150 = and i32 %1149, 65535
  %1151 = or i32 %1147, %1150
  tail call void @sctp_misc_ints(i8 zeroext 106, i32 %156, i32 %1144, i32 %1151, i32 %1137) #13
  br label %1152

1152:                                             ; preds = %1143, %1136
  %1153 = load i8, i8* %140, align 2
  %1154 = icmp eq i8 %1153, 0
  %1155 = load %struct.mbuf*, %struct.mbuf** %701, align 8
  %1156 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1155, i64 0, i32 0, i32 2
  %1157 = load i8*, i8** %1156, align 8
  %1158 = bitcast i8* %1157 to %struct.sctp_data_chunk*
  %1159 = bitcast i8* %1157 to %struct.sctp_idata_chunk*
  %1160 = select i1 %1154, %struct.sctp_data_chunk* %1158, %struct.sctp_data_chunk* null
  %1161 = select i1 %1154, %struct.sctp_idata_chunk* null, %struct.sctp_idata_chunk* %1159
  br i1 %1154, label %1162, label %1183

1162:                                             ; preds = %1152
  %1163 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 0, i32 0
  store i8 0, i8* %1163, align 1
  %1164 = load i8, i8* %559, align 1
  %1165 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 0, i32 1
  store i8 %1164, i8* %1165, align 1
  %1166 = load i32, i32* %1139, align 8
  %1167 = tail call i32 @llvm.bswap.i32(i32 %1166) #13
  %1168 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 1, i32 0
  store i32 %1167, i32* %1168, align 1
  %1169 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 7
  %1170 = load i16, i16* %1169, align 4
  %1171 = tail call i16 @llvm.bswap.i16(i16 %1170) #13
  %1172 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 1, i32 1
  store i16 %1171, i16* %1172, align 1
  %1173 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  %1174 = load i32, i32* %1173, align 4
  %1175 = trunc i32 %1174 to i16
  %1176 = tail call i16 @llvm.bswap.i16(i16 %1175) #13
  %1177 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 1, i32 2
  store i16 %1176, i16* %1177, align 1
  %1178 = load i32, i32* %1108, align 4
  %1179 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 1, i32 3
  store i32 %1178, i32* %1179, align 1
  %1180 = load i16, i16* %1058, align 8
  %1181 = tail call i16 @llvm.bswap.i16(i16 %1180) #13
  %1182 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %1160, i64 0, i32 0, i32 2
  store i16 %1181, i16* %1182, align 1
  br label %1214

1183:                                             ; preds = %1152
  %1184 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 0, i32 0
  store i8 64, i8* %1184, align 1
  %1185 = load i8, i8* %559, align 1
  %1186 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 0, i32 1
  store i8 %1185, i8* %1186, align 1
  %1187 = load i32, i32* %1139, align 8
  %1188 = tail call i32 @llvm.bswap.i32(i32 %1187) #13
  %1189 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 1, i32 0
  store i32 %1188, i32* %1189, align 1
  %1190 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 0, i32 7
  %1191 = load i16, i16* %1190, align 4
  %1192 = tail call i16 @llvm.bswap.i16(i16 %1191) #13
  %1193 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 1, i32 1
  store i16 %1192, i16* %1193, align 1
  %1194 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 1, i32 2
  store i16 0, i16* %1194, align 1
  %1195 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 0, i32 0, i32 1
  %1196 = load i32, i32* %1195, align 4
  %1197 = tail call i32 @llvm.bswap.i32(i32 %1196) #13
  %1198 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 1, i32 3
  store i32 %1197, i32* %1198, align 1
  %1199 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 6
  %1200 = load i32, i32* %1199, align 8
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %1204

1202:                                             ; preds = %1183
  %1203 = load i32, i32* %1108, align 4
  br label %1206

1204:                                             ; preds = %1183
  %1205 = tail call i32 @llvm.bswap.i32(i32 %1200) #13
  br label %1206

1206:                                             ; preds = %1204, %1202
  %1207 = phi i32 [ %1205, %1204 ], [ %1203, %1202 ]
  %1208 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 1, i32 4, i32 0
  store i32 %1207, i32* %1208, align 1
  %1209 = load i32, i32* %1199, align 8
  %1210 = add i32 %1209, 1
  store i32 %1210, i32* %1199, align 8
  %1211 = load i16, i16* %1058, align 8
  %1212 = tail call i16 @llvm.bswap.i16(i16 %1211) #13
  %1213 = getelementptr inbounds %struct.sctp_idata_chunk, %struct.sctp_idata_chunk* %1161, i64 0, i32 0, i32 2
  store i16 %1212, i16* %1213, align 1
  br label %1214

1214:                                             ; preds = %1206, %1162
  %1215 = load i16, i16* %1058, align 8
  %1216 = zext i16 %1215 to i32
  %1217 = load i16, i16* %1059, align 2
  %1218 = zext i16 %1217 to i32
  %1219 = add nuw nsw i32 %1218, 3
  %1220 = and i32 %1219, 131068
  %1221 = icmp ugt i32 %1220, %1216
  br i1 %1221, label %1222, label %1233

1222:                                             ; preds = %1214
  %1223 = sub nsw i32 %1220, %1216
  %1224 = load %struct.mbuf*, %struct.mbuf** %701, align 8
  %1225 = load %struct.mbuf*, %struct.mbuf** %708, align 8
  %1226 = tail call %struct.mbuf* @sctp_pad_lastmbuf(%struct.mbuf* %1224, i32 %1223, %struct.mbuf* %1225) #13
  %1227 = icmp eq %struct.mbuf* %1226, null
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1222
  store %struct.mbuf* %1226, %struct.mbuf** %708, align 8
  store i8 1, i8* %1064, align 1
  br label %1229

1229:                                             ; preds = %1228, %1222
  %1230 = load i16, i16* %1058, align 8
  %1231 = trunc i32 %1223 to i16
  %1232 = add i16 %1230, %1231
  store i16 %1232, i16* %1058, align 8
  br label %1233

1233:                                             ; preds = %1229, %1214
  %1234 = load i16, i16* %1062, align 2
  %1235 = and i16 %1234, 15
  switch i16 %1235, label %1236 [
    i16 0, label %1239
    i16 15, label %1239
  ]

1236:                                             ; preds = %1233
  %1237 = load i32, i32* %157, align 4
  %1238 = add i32 %1237, 1
  store i32 %1238, i32* %157, align 4
  br label %1239

1239:                                             ; preds = %1236, %1233, %1233
  %1240 = load i8, i8* %267, align 1
  %1241 = icmp eq i8 %1240, 0
  br i1 %1241, label %1366, label %1242

1242:                                             ; preds = %1239
  %1243 = load i32, i32* %270, align 4
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1366

1245:                                             ; preds = %1242
  %1246 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 18
  %1247 = load i8, i8* %1246, align 1
  %1248 = icmp eq i8 %1247, 0
  br i1 %1248, label %1366, label %1249

1249:                                             ; preds = %1245
  %1250 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 19
  %1251 = load i8, i8* %1250, align 8
  %1252 = icmp eq i8 %1251, 0
  br i1 %1252, label %1253, label %1268

1253:                                             ; preds = %1249
  %1254 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %1255 = icmp eq void (i8*, ...)* %1254, null
  br i1 %1255, label %1268, label %1256

1256:                                             ; preds = %1253
  tail call void (i8*, ...) %1254(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0)) #13
  %1257 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %1258 = icmp eq void (i8*, ...)* %1257, null
  br i1 %1258, label %1268, label %1259

1259:                                             ; preds = %1256
  %1260 = load i8, i8* %1246, align 1
  %1261 = zext i8 %1260 to i32
  %1262 = load i32, i32* %270, align 4
  %1263 = load i8, i8* %267, align 1
  %1264 = zext i8 %1263 to i32
  %1265 = load i8, i8* %1250, align 8
  %1266 = zext i8 %1265 to i32
  %1267 = zext i8 %700 to i32
  tail call void (i8*, ...) %1257(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 %1261, i32 %1262, i32 %1264, i32 %1266, i32 %1267) #13
  br label %1268

1268:                                             ; preds = %1259, %1256, %1253, %1249
  %1269 = icmp eq i8 %700, 0
  br i1 %1269, label %1270, label %1276

1270:                                             ; preds = %1268
  %1271 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 4, i32 0
  %1272 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %1271, align 8
  %1273 = icmp eq %struct.sctp_stream_queue_pending* %1272, null
  br i1 %1273, label %1274, label %1276

1274:                                             ; preds = %1270
  %1275 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %142) #13
  br label %1276

1276:                                             ; preds = %1274, %1270, %1268
  %1277 = phi i8 [ 1, %1274 ], [ 0, %1270 ], [ %700, %1268 ]
  %1278 = atomicrmw sub i32* %143, i32 1 seq_cst
  %1279 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 4, i32 0
  %1280 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %1279, align 8
  %1281 = icmp eq %struct.sctp_stream_queue_pending* %1280, null
  %1282 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 4, i32 1
  %1283 = bitcast %struct.sctp_stream_queue_pending*** %1282 to i64*
  %1284 = load i64, i64* %1283, align 8
  %1285 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1280, i64 0, i32 4, i32 1
  %1286 = bitcast %struct.sctp_stream_queue_pending*** %1285 to i64*
  %1287 = select i1 %1281, i64* %231, i64* %1286
  store i64 %1284, i64* %1287, align 8
  %1288 = bitcast %struct.sctp_stream_queue_pending** %1279 to i64*
  %1289 = load i64, i64* %1288, align 8
  %1290 = bitcast %struct.sctp_stream_queue_pending*** %1282 to i64**
  %1291 = load i64*, i64** %1290, align 8
  store i64 %1289, i64* %1291, align 8
  %1292 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %144, align 8
  %1293 = zext i8 %1277 to i32
  tail call void %1292(%struct.sctp_tcb* %1, %struct.sctp_association* %20, %struct.sctp_stream_out* nonnull %226, %struct.sctp_stream_queue_pending* %236, i32 %1293) #13
  %1294 = load i8, i8* %232, align 1
  %1295 = icmp eq i8 %1294, 3
  br i1 %1295, label %1296, label %1303

1296:                                             ; preds = %1276
  %1297 = load i32, i32* %233, align 8
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1299, label %1303

1299:                                             ; preds = %1296
  %1300 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %229, align 8
  %1301 = icmp eq %struct.sctp_stream_queue_pending* %1300, null
  br i1 %1301, label %1302, label %1303

1302:                                             ; preds = %1299
  store i8 1, i8* %145, align 2
  br label %1303

1303:                                             ; preds = %1302, %1299, %1296, %1276
  %1304 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1305 = icmp eq %struct.sctp_nets* %1304, null
  br i1 %1305, label %1352, label %1306

1306:                                             ; preds = %1303
  %1307 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1304, i64 0, i32 17
  %1308 = atomicrmw add i32* %1307, i32 -1 seq_cst
  %1309 = icmp eq i32 %1308, 1
  br i1 %1309, label %1310, label %1351

1310:                                             ; preds = %1306
  %1311 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1312 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1311, i64 0, i32 3, i32 0
  %1313 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %1312, align 8
  %1314 = icmp eq %struct.sctp_rtentry* %1313, null
  br i1 %1314, label %1330, label %1315

1315:                                             ; preds = %1310
  %1316 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %1313, i64 0, i32 3
  %1317 = load i64, i64* %1316, align 8
  %1318 = icmp sgt i64 %1317, 1
  %1319 = add nsw i64 %1317, -1
  store i64 %1319, i64* %1316, align 8
  %1320 = icmp sgt i64 %1319, 0
  %1321 = or i1 %1318, %1320
  br i1 %1321, label %1324, label %1322

1322:                                             ; preds = %1315
  %1323 = bitcast %struct.sctp_rtentry* %1313 to i8*
  tail call void @free(i8* %1323) #13
  br label %1324

1324:                                             ; preds = %1322, %1315
  %1325 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1326 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1325, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %1326, align 8
  %1327 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1328 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1327, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %1328, align 8
  %1329 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  br label %1330

1330:                                             ; preds = %1324, %1310
  %1331 = phi %struct.sctp_nets* [ %1311, %1310 ], [ %1329, %1324 ]
  %1332 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1331, i64 0, i32 47
  %1333 = load i8, i8* %1332, align 1
  %1334 = icmp eq i8 %1333, 0
  br i1 %1334, label %1341, label %1335

1335:                                             ; preds = %1330
  %1336 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1331, i64 0, i32 3, i32 2
  %1337 = load %struct.sctp_ifa*, %struct.sctp_ifa** %1336, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %1337) #13
  %1338 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1339 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1338, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %1339, align 8
  %1340 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  br label %1341

1341:                                             ; preds = %1335, %1330
  %1342 = phi %struct.sctp_nets* [ %1331, %1330 ], [ %1340, %1335 ]
  %1343 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1342, i64 0, i32 47
  store i8 0, i8* %1343, align 1
  %1344 = load %struct.sctp_nets*, %struct.sctp_nets** %1119, align 8
  %1345 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1344, i64 0, i32 37
  %1346 = load i16, i16* %1345, align 4
  %1347 = and i16 %1346, -2
  store i16 %1347, i16* %1345, align 4
  %1348 = bitcast %struct.sctp_nets** %1119 to i8**
  %1349 = load i8*, i8** %1348, align 8
  tail call void @free(i8* %1349) #13
  %1350 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %1351

1351:                                             ; preds = %1341, %1306
  store %struct.sctp_nets* null, %struct.sctp_nets** %1119, align 8
  br label %1352

1352:                                             ; preds = %1351, %1303
  %1353 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 0
  %1354 = load %struct.mbuf*, %struct.mbuf** %1353, align 8
  %1355 = icmp eq %struct.mbuf* %1354, null
  br i1 %1355, label %1357, label %1356

1356:                                             ; preds = %1352
  tail call void @m_freem(%struct.mbuf* nonnull %1354) #13
  store %struct.mbuf* null, %struct.mbuf** %1353, align 8
  br label %1357

1357:                                             ; preds = %1356, %1352
  %1358 = load i8, i8* %1128, align 4
  %1359 = icmp eq i8 %1358, 0
  br i1 %1359, label %1363, label %1360

1360:                                             ; preds = %1357
  %1361 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %236, i64 0, i32 14
  %1362 = load i16, i16* %1361, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %1362, i32 %10) #13
  br label %1363

1363:                                             ; preds = %1360, %1357
  %1364 = bitcast %struct.sctp_stream_queue_pending* %236 to i8*
  tail call void @free(i8* %1364) #13
  %1365 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  br label %1366

1366:                                             ; preds = %1363, %1245, %1242, %1239
  %1367 = phi i8 [ %1277, %1363 ], [ %700, %1245 ], [ %700, %1242 ], [ %700, %1239 ]
  %1368 = load i32, i32* %158, align 4
  %1369 = add i32 %1368, 1
  store i32 %1369, i32* %158, align 4
  %1370 = load i32, i32* %233, align 8
  %1371 = add i32 %1370, 1
  store i32 %1371, i32* %233, align 8
  %1372 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %1372, align 8
  %1373 = load i64, i64* %160, align 8
  %1374 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %542, i64 0, i32 6, i32 1
  %1375 = bitcast %struct.sctp_tmit_chunk*** %1374 to i64*
  store i64 %1373, i64* %1375, align 8
  %1376 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %159, align 8
  store %struct.sctp_tmit_chunk* %542, %struct.sctp_tmit_chunk** %1376, align 8
  store %struct.sctp_tmit_chunk** %1372, %struct.sctp_tmit_chunk*** %159, align 8
  %1377 = load i32, i32* %161, align 8
  %1378 = add i32 %1377, 1
  store i32 %1378, i32* %161, align 8
  br label %1379

1379:                                             ; preds = %274, %1366, %1031, %1022, %1020, %669, %660, %658, %512, %483, %478, %474, %472, %464, %405
  %1380 = phi i32 [ %228, %1366 ], [ %228, %405 ], [ %228, %512 ], [ 1, %669 ], [ 1, %660 ], [ 1, %658 ], [ 1, %1031 ], [ 1, %1022 ], [ 1, %1020 ], [ %228, %483 ], [ %228, %478 ], [ %228, %474 ], [ %228, %472 ], [ %228, %464 ], [ %228, %274 ]
  %1381 = phi i32 [ %227, %1366 ], [ 1, %405 ], [ 1, %512 ], [ %227, %669 ], [ %227, %660 ], [ %227, %658 ], [ %227, %1031 ], [ %227, %1022 ], [ %227, %1020 ], [ 1, %483 ], [ 1, %478 ], [ 1, %474 ], [ 1, %472 ], [ 1, %464 ], [ 1, %274 ]
  %1382 = phi i32 [ %507, %1366 ], [ 0, %405 ], [ 0, %512 ], [ 0, %669 ], [ 0, %660 ], [ 0, %658 ], [ 0, %1031 ], [ 0, %1022 ], [ 0, %1020 ], [ 0, %483 ], [ 0, %478 ], [ 0, %474 ], [ 0, %472 ], [ 0, %464 ], [ 0, %274 ]
  %1383 = phi i8 [ %1367, %1366 ], [ %235, %405 ], [ %509, %512 ], [ %584, %669 ], [ %584, %660 ], [ %584, %658 ], [ %700, %1031 ], [ %700, %1022 ], [ %700, %1020 ], [ %235, %483 ], [ %235, %478 ], [ %235, %474 ], [ %235, %472 ], [ %235, %464 ], [ %235, %274 ]
  %1384 = icmp eq i8 %1383, 0
  br i1 %1384, label %1390, label %1385

1385:                                             ; preds = %437, %861, %863, %872, %1379, %244, %250, %253, %265
  %1386 = phi i32 [ %228, %265 ], [ %228, %253 ], [ %228, %250 ], [ %228, %244 ], [ %1380, %1379 ], [ 1, %872 ], [ 1, %861 ], [ 1, %863 ], [ %228, %437 ]
  %1387 = phi i32 [ %227, %265 ], [ %227, %253 ], [ %227, %250 ], [ %227, %244 ], [ %1381, %1379 ], [ %227, %872 ], [ %227, %861 ], [ %227, %863 ], [ 1, %437 ]
  %1388 = phi i32 [ 0, %265 ], [ 0, %253 ], [ 0, %250 ], [ 0, %244 ], [ %1382, %1379 ], [ 0, %872 ], [ 0, %861 ], [ 0, %863 ], [ 0, %437 ]
  %1389 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %142) #13
  br label %1390

1390:                                             ; preds = %1385, %1379
  %1391 = phi i32 [ %1380, %1379 ], [ %1386, %1385 ]
  %1392 = phi i32 [ %1381, %1379 ], [ %1387, %1385 ]
  %1393 = phi i32 [ %1382, %1379 ], [ %1388, %1385 ]
  %1394 = load void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)** %163, align 8
  tail call void %1394(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, %struct.sctp_association* %20, %struct.sctp_stream_out* nonnull %226, i32 %1393) #13
  %1395 = or i32 %1392, %1391
  %1396 = icmp eq i32 %1395, 0
  br i1 %1396, label %1397, label %1414

1397:                                             ; preds = %1390
  %1398 = load %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)** %141, align 8
  %1399 = tail call %struct.sctp_stream_out* %1398(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, %struct.sctp_association* %20) #13
  %1400 = add i32 %1393, %225
  %1401 = tail call i32 @llvm.usub.sat.i32(i32 %224, i32 %1393) #13
  %1402 = zext i32 %1401 to i64
  %1403 = load i8, i8* %140, align 2
  %1404 = icmp eq i8 %1403, 0
  %1405 = select i1 %1404, i64 16, i64 20
  %1406 = icmp ugt i64 %1405, %1402
  %1407 = trunc i64 %1405 to i32
  %1408 = sub i32 %1401, %1407
  %1409 = and i32 %1408, -4
  %1410 = select i1 %1406, i32 0, i32 %1409
  %1411 = icmp ne i32 %1410, 0
  %1412 = icmp ne %struct.sctp_stream_out* %1399, null
  %1413 = and i1 %1412, %1411
  br i1 %1413, label %223, label %1414

1414:                                             ; preds = %1390, %1397
  %1415 = phi i32 [ %1400, %1397 ], [ %225, %1390 ]
  %1416 = icmp ne i32 %1391, 0
  %1417 = zext i1 %1416 to i32
  %1418 = load void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)** %164, align 8
  tail call void %1418(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %168, %struct.sctp_association* %20) #13
  %1419 = icmp eq i32 %1415, 0
  br i1 %1419, label %1420, label %1431

1420:                                             ; preds = %221, %1414
  %1421 = phi i32 [ 0, %221 ], [ %1417, %1414 ]
  %1422 = load i8, i8* %165, align 1
  %1423 = icmp eq i8 %1422, 0
  br i1 %1423, label %1424, label %1429

1424:                                             ; preds = %1420
  %1425 = load %struct.sctp_nets*, %struct.sctp_nets** %166, align 8
  %1426 = icmp eq %struct.sctp_nets* %1425, %168
  br i1 %1426, label %1427, label %1431

1427:                                             ; preds = %1424
  %1428 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 106), i32 1 seq_cst
  br label %1431

1429:                                             ; preds = %1420
  %1430 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 107), i32 1 seq_cst
  br label %1431

1431:                                             ; preds = %1414, %1424, %1427, %1429
  %1432 = phi i32 [ %1417, %1414 ], [ %1421, %1424 ], [ %1421, %1427 ], [ %1421, %1429 ]
  %1433 = icmp eq i32 %1432, 0
  br i1 %1433, label %1434, label %1438

1434:                                             ; preds = %177, %1431, %199, %200, %181
  %1435 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 0, i32 0
  %1436 = load %struct.sctp_nets*, %struct.sctp_nets** %1435, align 8
  %1437 = icmp eq %struct.sctp_nets* %1436, null
  br i1 %1437, label %1438, label %167

1438:                                             ; preds = %123, %1434, %1431, %133, %113, %128
  %1439 = phi i32 [ 0, %128 ], [ 1, %113 ], [ 0, %133 ], [ 0, %1434 ], [ 1, %1431 ], [ %73, %123 ]
  %1440 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %40, align 8
  %1441 = icmp eq %struct.sctp_tmit_chunk* %1440, null
  br i1 %1441, label %1442, label %1451

1442:                                             ; preds = %1438
  %1443 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 19, i32 0
  %1444 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1443, align 8
  %1445 = icmp eq %struct.sctp_tmit_chunk* %1444, null
  br i1 %1445, label %1446, label %1451

1446:                                             ; preds = %1442
  %1447 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 21, i32 0
  %1448 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1447, align 8
  %1449 = icmp eq %struct.sctp_tmit_chunk* %1448, null
  br i1 %1449, label %1450, label %1451

1450:                                             ; preds = %1446
  store i32 8, i32* %4, align 4
  br label %2622

1451:                                             ; preds = %1446, %1442, %1438
  %1452 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 189
  %1453 = load i8, i8* %1452, align 1
  %1454 = icmp eq i8 %1453, 0
  br i1 %1454, label %1468, label %1455

1455:                                             ; preds = %1451
  %1456 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 32
  %1457 = load %struct.sctp_nets*, %struct.sctp_nets** %1456, align 8
  %1458 = icmp eq %struct.sctp_nets* %1457, null
  br i1 %1458, label %1463, label %1459

1459:                                             ; preds = %1455
  %1460 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1457, i64 0, i32 0, i32 0
  %1461 = load %struct.sctp_nets*, %struct.sctp_nets** %1460, align 8
  %1462 = icmp eq %struct.sctp_nets* %1461, null
  br i1 %1462, label %1463, label %1466

1463:                                             ; preds = %1459, %1455
  %1464 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 16, i32 0
  %1465 = load %struct.sctp_nets*, %struct.sctp_nets** %1464, align 8
  br label %1466

1466:                                             ; preds = %1463, %1459
  %1467 = phi %struct.sctp_nets* [ %1461, %1459 ], [ %1465, %1463 ]
  store %struct.sctp_nets* %1467, %struct.sctp_nets** %1456, align 8
  br label %1471

1468:                                             ; preds = %1451
  %1469 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 16, i32 0
  %1470 = load %struct.sctp_nets*, %struct.sctp_nets** %1469, align 8
  br label %1471

1471:                                             ; preds = %1468, %1466
  %1472 = phi %struct.sctp_nets* [ %1467, %1466 ], [ %1470, %1468 ]
  br i1 %1441, label %1477, label %1473

1473:                                             ; preds = %1471
  %1474 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 31
  %1475 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 30
  %1476 = bitcast %struct.sctp_nets** %1475 to i64*
  br label %1511

1477:                                             ; preds = %1528, %1471
  %1478 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 19, i32 0
  %1479 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 31
  %1480 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 30
  %1481 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 115
  %1482 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 124
  %1483 = bitcast %struct.timeval* %7 to i8*
  %1484 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %1485 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 12
  %1486 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 49
  %1487 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 181
  %1488 = icmp eq i32 %6, 0
  %1489 = icmp eq %struct.sctp_nets* %98, null
  %1490 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 7, i32 0, i32 4
  %1491 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %1492 = icmp ne i32 %114, 0
  %1493 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %20, i64 0, i32 0
  %1494 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 21, i32 0
  %1495 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %1496 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %13, i64 0, i64 0
  %1497 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 4
  %1498 = bitcast %struct.timeval* %1497 to i8*
  %1499 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 21, i32 1
  %1500 = bitcast %struct.sctp_tmit_chunk*** %1499 to i64*
  %1501 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 85
  %1502 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 20, i32 1
  %1503 = bitcast %struct.sctp_tmit_chunk*** %1502 to %struct.sctpchunk_listhead**
  %1504 = bitcast %struct.sctp_tmit_chunk*** %1502 to i64*
  %1505 = bitcast %struct.sctp_tmit_chunk*** %1502 to i64**
  %1506 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 86
  %1507 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 93
  %1508 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %1509 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 37, i32 8
  %1510 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 16, i32 0
  br label %1532

1511:                                             ; preds = %1473, %1528
  %1512 = phi %struct.sctp_tmit_chunk* [ %1440, %1473 ], [ %1530, %1528 ]
  %1513 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1512, i64 0, i32 5
  %1514 = load %struct.sctp_nets*, %struct.sctp_nets** %1513, align 8
  %1515 = icmp eq %struct.sctp_nets* %1514, null
  br i1 %1515, label %1516, label %1528

1516:                                             ; preds = %1511
  %1517 = load %struct.sctp_nets*, %struct.sctp_nets** %1474, align 8
  %1518 = icmp eq %struct.sctp_nets* %1517, null
  br i1 %1518, label %1520, label %1519

1519:                                             ; preds = %1516
  store %struct.sctp_nets* %1517, %struct.sctp_nets** %1513, align 8
  br label %1524

1520:                                             ; preds = %1516
  %1521 = load i64, i64* %1476, align 8
  %1522 = bitcast %struct.sctp_nets** %1513 to i64*
  store i64 %1521, i64* %1522, align 8
  %1523 = inttoptr i64 %1521 to %struct.sctp_nets*
  br label %1524

1524:                                             ; preds = %1520, %1519
  %1525 = phi %struct.sctp_nets* [ %1523, %1520 ], [ %1517, %1519 ]
  %1526 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1525, i64 0, i32 17
  %1527 = atomicrmw add i32* %1526, i32 1 seq_cst
  br label %1528

1528:                                             ; preds = %1511, %1524
  %1529 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1512, i64 0, i32 6, i32 0
  %1530 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1529, align 8
  %1531 = icmp eq %struct.sctp_tmit_chunk* %1530, null
  br i1 %1531, label %1477, label %1511

1532:                                             ; preds = %1477, %2604
  %1533 = phi %struct.sctp_nets* [ %2605, %2604 ], [ %1472, %1477 ]
  %1534 = phi %struct.sctp_nets* [ %1533, %2604 ], [ null, %1477 ]
  %1535 = phi i32 [ %2595, %2604 ], [ 0, %1477 ]
  %1536 = phi i32 [ %2596, %2604 ], [ 0, %1477 ]
  %1537 = phi i32 [ %2597, %2604 ], [ 0, %1477 ]
  %1538 = phi i32 [ %2598, %2604 ], [ 0, %1477 ]
  %1539 = phi i32 [ %2599, %2604 ], [ 0, %1477 ]
  %1540 = phi i32 [ %2600, %2604 ], [ %1439, %1477 ]
  %1541 = phi i16 [ %2601, %2604 ], [ %22, %1477 ]
  %1542 = phi i32 [ %2602, %2604 ], [ 1, %1477 ]
  %1543 = icmp eq %struct.sctp_nets* %1533, null
  br i1 %1543, label %2593, label %1544

1544:                                             ; preds = %1532
  %1545 = icmp ne %struct.sctp_nets* %1534, null
  br label %1546

1546:                                             ; preds = %1544, %2581
  %1547 = phi i32 [ %1542, %1544 ], [ %2589, %2581 ]
  %1548 = phi i16 [ %1541, %1544 ], [ %2588, %2581 ]
  %1549 = phi i32 [ %1540, %1544 ], [ %2587, %2581 ]
  %1550 = phi i32 [ %1539, %1544 ], [ %2586, %2581 ]
  %1551 = phi i32 [ %1538, %1544 ], [ %2585, %2581 ]
  %1552 = phi i32 [ %1537, %1544 ], [ %2584, %2581 ]
  %1553 = phi i32 [ %1536, %1544 ], [ %2583, %2581 ]
  %1554 = phi i32 [ %1535, %1544 ], [ %2582, %2581 ]
  %1555 = phi %struct.sctp_nets* [ %1533, %1544 ], [ %2591, %2581 ]
  %1556 = icmp eq %struct.sctp_nets* %1534, %1555
  %1557 = and i1 %1545, %1556
  br i1 %1557, label %2606, label %1558

1558:                                             ; preds = %1546
  %1559 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %40, align 8
  %1560 = icmp eq %struct.sctp_tmit_chunk* %1559, null
  br i1 %1560, label %1561, label %1570

1561:                                             ; preds = %1558
  %1562 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1478, align 8
  %1563 = icmp eq %struct.sctp_tmit_chunk* %1562, null
  br i1 %1563, label %1564, label %1570

1564:                                             ; preds = %1561
  %1565 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 18
  %1566 = load i32, i32* %1565, align 4
  %1567 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 19
  %1568 = load i32, i32* %1567, align 8
  %1569 = icmp ult i32 %1566, %1568
  br i1 %1569, label %1570, label %2581

1570:                                             ; preds = %1564, %1561, %1558
  store %struct.mbuf* null, %struct.mbuf** %12, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %15, align 8
  store i32 0, i32* %14, align 4
  %1571 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 37
  %1572 = load i16, i16* %1571, align 4
  %1573 = and i16 %1572, 512
  %1574 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 3, i32 1
  %1575 = bitcast %union.sctp_sockstore* %1574 to %struct.sockaddr*
  %1576 = getelementptr inbounds %union.sctp_sockstore, %union.sctp_sockstore* %1574, i64 0, i32 0, i32 0
  %1577 = load i16, i16* %1576, align 8
  %1578 = icmp eq i16 %1577, 123
  %1579 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 4
  %1580 = load i32, i32* %1579, align 8
  %1581 = add i32 %1580, -12
  %1582 = select i1 %1578, i32 %1581, i32 %1580
  %1583 = load i32, i32* %63, align 4
  %1584 = icmp ugt i32 %1582, %1583
  br i1 %1584, label %1585, label %1590

1585:                                             ; preds = %1570
  %1586 = load i32, i32* %100, align 4
  %1587 = icmp eq i32 %1586, 0
  %1588 = zext i1 %1587 to i32
  %1589 = select i1 %1587, i32 %1582, i32 %1583
  br label %1590

1590:                                             ; preds = %1570, %1585
  %1591 = phi i32 [ %1588, %1585 ], [ 0, %1570 ]
  %1592 = phi i32 [ %1589, %1585 ], [ %1582, %1570 ]
  %1593 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1478, align 8
  %1594 = icmp eq %struct.sctp_tmit_chunk* %1593, null
  br i1 %1594, label %1768, label %1595

1595:                                             ; preds = %1590
  %1596 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 17
  %1597 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 15
  %1598 = bitcast %struct.timeval* %1597 to i8*
  %1599 = icmp eq i32 %1551, 0
  br label %1600

1600:                                             ; preds = %1595, %1750
  %1601 = phi %struct.sctp_tmit_chunk* [ %1593, %1595 ], [ %1611, %1750 ]
  %1602 = phi i32 [ 0, %1595 ], [ %1757, %1750 ]
  %1603 = phi i32 [ %1582, %1595 ], [ %1756, %1750 ]
  %1604 = phi i32 [ %1549, %1595 ], [ %1755, %1750 ]
  %1605 = phi i32 [ %1553, %1595 ], [ %1754, %1750 ]
  %1606 = phi i32 [ %1554, %1595 ], [ %1753, %1750 ]
  %1607 = phi i32 [ 1, %1595 ], [ %1752, %1750 ]
  %1608 = phi %struct.mbuf* [ null, %1595 ], [ %1751, %1750 ]
  %1609 = bitcast %struct.sctp_tmit_chunk* %1601 to %struct.chk_id*
  %1610 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 6, i32 0
  %1611 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1610, align 8
  %1612 = bitcast %struct.sctp_tmit_chunk* %1601 to i8*
  %1613 = load i8, i8* %1612, align 8
  %1614 = icmp eq i8 %1613, -63
  br i1 %1614, label %1615, label %1750

1615:                                             ; preds = %1600
  %1616 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 5
  %1617 = load %struct.sctp_nets*, %struct.sctp_nets** %1616, align 8
  %1618 = icmp eq %struct.sctp_nets* %1617, null
  br i1 %1618, label %1619, label %1627

1619:                                             ; preds = %1615
  %1620 = load %struct.sctp_nets*, %struct.sctp_nets** %1479, align 8
  %1621 = icmp eq %struct.sctp_nets* %1620, null
  br i1 %1621, label %1622, label %1625

1622:                                             ; preds = %1619
  %1623 = load %struct.sctp_nets*, %struct.sctp_nets** %1480, align 8
  %1624 = icmp eq %struct.sctp_nets* %1623, %1555
  br i1 %1624, label %1629, label %1759

1625:                                             ; preds = %1619
  %1626 = icmp eq %struct.sctp_nets* %1620, %1555
  br i1 %1626, label %1629, label %1759

1627:                                             ; preds = %1615
  %1628 = icmp eq %struct.sctp_nets* %1617, %1555
  br i1 %1628, label %1629, label %1759

1629:                                             ; preds = %1622, %1625, %1627
  %1630 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 3
  %1631 = load %struct.mbuf*, %struct.mbuf** %1630, align 8
  %1632 = icmp eq %struct.mbuf* %1631, null
  br i1 %1632, label %1759, label %1633

1633:                                             ; preds = %1629
  %1634 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 7
  %1635 = load i32, i32* %1634, align 8
  switch i32 %1635, label %1759 [
    i32 0, label %1636
    i32 4, label %1636
  ]

1636:                                             ; preds = %1633, %1633
  %1637 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1638 = icmp eq %struct.sctp_auth_chunk* %1637, null
  br i1 %1638, label %1639, label %1649

1639:                                             ; preds = %1636
  %1640 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1481, align 8
  %1641 = icmp eq %struct.sctp_auth_chklist* %1640, null
  br i1 %1641, label %1649, label %1642

1642:                                             ; preds = %1639
  %1643 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1640, i64 0, i32 0, i64 193
  %1644 = load i8, i8* %1643, align 1
  %1645 = icmp eq i8 %1644, 0
  br i1 %1645, label %1649, label %1646

1646:                                             ; preds = %1642
  %1647 = load i16, i16* %1482, align 8
  %1648 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %1647) #13
  br label %1649

1649:                                             ; preds = %1636, %1639, %1642, %1646
  %1650 = phi i32 [ %1648, %1646 ], [ 0, %1642 ], [ 0, %1639 ], [ 0, %1636 ]
  %1651 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 10
  %1652 = load i16, i16* %1651, align 8
  %1653 = zext i16 %1652 to i32
  %1654 = sub i32 %1603, %1650
  %1655 = icmp sgt i32 %1654, %1653
  br i1 %1655, label %1661, label %1656

1656:                                             ; preds = %1649
  %1657 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 9
  %1658 = load i16, i16* %1657, align 2
  %1659 = and i16 %1658, 256
  %1660 = icmp eq i16 %1659, 0
  br i1 %1660, label %1750, label %1661

1661:                                             ; preds = %1656, %1649
  %1662 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1663 = icmp eq %struct.sctp_auth_chunk* %1662, null
  br i1 %1663, label %1664, label %1678

1664:                                             ; preds = %1661
  %1665 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1481, align 8
  %1666 = icmp eq %struct.sctp_auth_chklist* %1665, null
  br i1 %1666, label %1678, label %1667

1667:                                             ; preds = %1664
  %1668 = load i8, i8* %1612, align 8
  %1669 = zext i8 %1668 to i64
  %1670 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1665, i64 0, i32 0, i64 %1669
  %1671 = load i8, i8* %1670, align 1
  %1672 = icmp eq i8 %1671, 0
  br i1 %1672, label %1678, label %1673

1673:                                             ; preds = %1667
  %1674 = call %struct.mbuf* @sctp_add_auth_chunk(%struct.mbuf* %1608, %struct.mbuf** nonnull %12, %struct.sctp_auth_chunk** nonnull %15, i32* nonnull %14, %struct.sctp_tcb* %1, i8 zeroext %1668)
  %1675 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %1676 = load i16, i16* %1651, align 8
  %1677 = zext i16 %1676 to i32
  br label %1678

1678:                                             ; preds = %1667, %1664, %1673, %1661
  %1679 = phi i32 [ %1653, %1667 ], [ %1653, %1664 ], [ %1677, %1673 ], [ %1653, %1661 ]
  %1680 = phi %struct.mbuf* [ %1608, %1667 ], [ %1608, %1664 ], [ %1674, %1673 ], [ %1608, %1661 ]
  %1681 = load %struct.mbuf*, %struct.mbuf** %1630, align 8
  %1682 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %1609, i64 0, i32 1
  %1683 = load i8, i8* %1682, align 1
  %1684 = zext i8 %1683 to i32
  %1685 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 19
  %1686 = load i8, i8* %1685, align 1
  %1687 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %1681, %struct.mbuf* %1680, %struct.mbuf** nonnull %12, i32 %1684, i32 %1679, i8 zeroext %1686)
  %1688 = icmp eq %struct.mbuf* %1687, null
  br i1 %1688, label %1689, label %1690

1689:                                             ; preds = %1678
  store i32 8, i32* %4, align 4
  br label %2622

1690:                                             ; preds = %1678
  %1691 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %1692 = load i16, i16* %1651, align 8
  %1693 = zext i16 %1692 to i32
  %1694 = add i32 %1650, %1693
  %1695 = icmp ule i32 %1603, %1694
  %1696 = sub i32 %1603, %1694
  %1697 = add i32 %1694, %1602
  %1698 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 9
  %1699 = load i16, i16* %1698, align 2
  %1700 = and i16 %1699, 256
  %1701 = icmp eq i16 %1700, 0
  %1702 = select i1 %1701, i32 %1607, i32 0
  %1703 = load i8, i8* %1682, align 1
  %1704 = icmp eq i8 %1703, 0
  br i1 %1704, label %1706, label %1705

1705:                                             ; preds = %1690
  store %struct.mbuf* null, %struct.mbuf** %1630, align 8
  br label %1706

1706:                                             ; preds = %1690, %1705
  store i32 1, i32* %1634, align 8
  %1707 = load %struct.sctp_nets*, %struct.sctp_nets** %1616, align 8
  %1708 = icmp eq %struct.sctp_nets* %1707, null
  br i1 %1708, label %1709, label %1711

1709:                                             ; preds = %1706
  store %struct.sctp_nets* %1555, %struct.sctp_nets** %1616, align 8
  %1710 = atomicrmw add i32* %1596, i32 1 seq_cst
  br label %1711

1711:                                             ; preds = %1709, %1706
  %1712 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1601, i64 0, i32 8
  %1713 = load i16, i16* %1712, align 4
  %1714 = add i16 %1713, 1
  store i16 %1714, i16* %1712, align 4
  %1715 = icmp eq i32 %1696, 0
  %1716 = or i1 %1695, %1715
  br i1 %1716, label %1717, label %1750

1717:                                             ; preds = %1711
  call void @sctp_timer_start(i32 10, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  %1718 = load i32, i32* %8, align 4
  %1719 = icmp eq i32 %1718, 0
  br i1 %1719, label %1720, label %1722

1720:                                             ; preds = %1717
  %1721 = call i32 @gettimeofday(%struct.timeval* %7, i8* null) #13
  store i32 1, i32* %8, align 4
  br label %1722

1722:                                             ; preds = %1720, %1717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1598, i8* align 8 %1483, i64 16, i1 false)
  %1723 = load i32, i32* %14, align 4
  %1724 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1725 = load i16, i16* %21, align 8
  %1726 = load i16, i16* %1484, align 2
  %1727 = load i16, i16* %1485, align 8
  %1728 = load i32, i32* %1486, align 4
  %1729 = call i32 @llvm.bswap.i32(i32 %1728) #13
  %1730 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555, %struct.sockaddr* %1575, %struct.mbuf* nonnull %1687, i32 %1723, %struct.sctp_auth_chunk* %1724, i16 zeroext %1725, i32 %1702, i32 0, i16 zeroext %1726, i16 zeroext %1727, i32 %1729)
  %1731 = icmp eq i32 %1730, 0
  br i1 %1731, label %1740, label %1732

1732:                                             ; preds = %1722
  br i1 %1488, label %1733, label %1735

1733:                                             ; preds = %1732
  %1734 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 100), i32 1 seq_cst
  br label %1735

1735:                                             ; preds = %1733, %1732
  switch i32 %1730, label %1739 [
    i32 105, label %1736
    i32 113, label %1738
  ]

1736:                                             ; preds = %1735
  store i8 1, i8* %1487, align 1
  %1737 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %1739

1738:                                             ; preds = %1735
  call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %1555)
  br label %1739

1739:                                             ; preds = %1738, %1735, %1736
  store i32 7, i32* %4, align 4
  br label %2581

1740:                                             ; preds = %1722
  store i8 0, i8* %1487, align 1
  store %struct.mbuf* null, %struct.mbuf** %12, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %15, align 8
  store i32 0, i32* %14, align 4
  br i1 %1599, label %1741, label %1744

1741:                                             ; preds = %1740
  %1742 = load i32, i32* %3, align 4
  %1743 = add nsw i32 %1742, %1550
  store i32 %1743, i32* %3, align 4
  br label %1744

1744:                                             ; preds = %1740, %1741
  %1745 = load i16, i16* %1576, align 8
  %1746 = icmp eq i16 %1745, 123
  %1747 = load i32, i32* %1579, align 8
  %1748 = add i32 %1747, -12
  %1749 = select i1 %1746, i32 %1748, i32 %1747
  br label %1750

1750:                                             ; preds = %1744, %1656, %1600, %1711
  %1751 = phi %struct.mbuf* [ %1608, %1600 ], [ %1687, %1711 ], [ %1608, %1656 ], [ null, %1744 ]
  %1752 = phi i32 [ %1607, %1600 ], [ %1702, %1711 ], [ %1607, %1656 ], [ 1, %1744 ]
  %1753 = phi i32 [ %1606, %1600 ], [ 1, %1711 ], [ %1606, %1656 ], [ 0, %1744 ]
  %1754 = phi i32 [ %1605, %1600 ], [ 1, %1711 ], [ %1605, %1656 ], [ 1, %1744 ]
  %1755 = phi i32 [ %1604, %1600 ], [ 1, %1711 ], [ %1604, %1656 ], [ 1, %1744 ]
  %1756 = phi i32 [ %1603, %1600 ], [ %1696, %1711 ], [ %1603, %1656 ], [ %1749, %1744 ]
  %1757 = phi i32 [ %1602, %1600 ], [ %1697, %1711 ], [ %1602, %1656 ], [ 0, %1744 ]
  %1758 = icmp eq %struct.sctp_tmit_chunk* %1611, null
  br i1 %1758, label %1759, label %1600

1759:                                             ; preds = %1629, %1750, %1627, %1625, %1622, %1633
  %1760 = phi %struct.mbuf* [ %1608, %1633 ], [ %1608, %1622 ], [ %1608, %1625 ], [ %1608, %1627 ], [ %1751, %1750 ], [ %1608, %1629 ]
  %1761 = phi i32 [ %1607, %1633 ], [ %1607, %1622 ], [ %1607, %1625 ], [ %1607, %1627 ], [ %1752, %1750 ], [ %1607, %1629 ]
  %1762 = phi i32 [ %1606, %1633 ], [ %1606, %1622 ], [ %1606, %1625 ], [ %1606, %1627 ], [ %1753, %1750 ], [ %1606, %1629 ]
  %1763 = phi i32 [ %1605, %1633 ], [ %1605, %1622 ], [ %1605, %1625 ], [ %1605, %1627 ], [ %1754, %1750 ], [ %1605, %1629 ]
  %1764 = phi i32 [ %1604, %1633 ], [ %1604, %1622 ], [ %1604, %1625 ], [ %1604, %1627 ], [ %1755, %1750 ], [ %1604, %1629 ]
  %1765 = phi i32 [ %1603, %1633 ], [ %1603, %1622 ], [ %1603, %1625 ], [ %1603, %1627 ], [ %1756, %1750 ], [ %1603, %1629 ]
  %1766 = phi i32 [ %1602, %1633 ], [ %1602, %1622 ], [ %1602, %1625 ], [ %1602, %1627 ], [ %1757, %1750 ], [ %1602, %1629 ]
  %1767 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %40, align 8
  br label %1768

1768:                                             ; preds = %1759, %1590
  %1769 = phi %struct.sctp_tmit_chunk* [ %1559, %1590 ], [ %1767, %1759 ]
  %1770 = phi %struct.mbuf* [ null, %1590 ], [ %1760, %1759 ]
  %1771 = phi i32 [ 1, %1590 ], [ %1761, %1759 ]
  %1772 = phi i32 [ %1554, %1590 ], [ %1762, %1759 ]
  %1773 = phi i32 [ %1553, %1590 ], [ %1763, %1759 ]
  %1774 = phi i32 [ %1549, %1590 ], [ %1764, %1759 ]
  %1775 = phi i32 [ %1582, %1590 ], [ %1765, %1759 ]
  %1776 = phi i32 [ 0, %1590 ], [ %1766, %1759 ]
  %1777 = icmp eq %struct.sctp_tmit_chunk* %1769, null
  br i1 %1777, label %1989, label %1778

1778:                                             ; preds = %1768
  %1779 = icmp eq %struct.sctp_nets* %98, %1555
  %1780 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 17
  %1781 = icmp eq i32 %1773, 0
  %1782 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 15
  %1783 = bitcast %struct.timeval* %1782 to i8*
  br label %1784

1784:                                             ; preds = %1778, %1979
  %1785 = phi %struct.sctp_tmit_chunk* [ %1769, %1778 ], [ %1796, %1979 ]
  %1786 = phi i32 [ %1776, %1778 ], [ %1987, %1979 ]
  %1787 = phi i32 [ %1775, %1778 ], [ %1986, %1979 ]
  %1788 = phi i32 [ %1550, %1778 ], [ %1985, %1979 ]
  %1789 = phi i32 [ %1551, %1778 ], [ %1984, %1979 ]
  %1790 = phi i32 [ %1552, %1778 ], [ %1983, %1979 ]
  %1791 = phi i32 [ %1772, %1778 ], [ %1982, %1979 ]
  %1792 = phi i32 [ %1771, %1778 ], [ %1981, %1979 ]
  %1793 = phi %struct.mbuf* [ %1770, %1778 ], [ %1980, %1979 ]
  %1794 = bitcast %struct.sctp_tmit_chunk* %1785 to %struct.chk_id*
  %1795 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 6, i32 0
  %1796 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1795, align 8
  br i1 %1489, label %1808, label %1797

1797:                                             ; preds = %1784
  %1798 = bitcast %struct.sctp_tmit_chunk* %1785 to i8*
  %1799 = load i8, i8* %1798, align 8
  %1800 = icmp eq i8 %1799, 12
  br i1 %1800, label %1801, label %1808

1801:                                             ; preds = %1797
  %1802 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 5
  %1803 = load %struct.sctp_nets*, %struct.sctp_nets** %1802, align 8
  %1804 = icmp eq %struct.sctp_nets* %1803, %98
  br i1 %1804, label %1808, label %1805

1805:                                             ; preds = %1801
  %1806 = icmp eq %struct.sctp_nets* %1803, %1555
  br i1 %1806, label %1979, label %1807

1807:                                             ; preds = %1805
  br i1 %1779, label %1822, label %1808

1808:                                             ; preds = %1801, %1784, %1807, %1797
  %1809 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 5
  %1810 = load %struct.sctp_nets*, %struct.sctp_nets** %1809, align 8
  %1811 = icmp eq %struct.sctp_nets* %1810, null
  br i1 %1811, label %1812, label %1820

1812:                                             ; preds = %1808
  %1813 = load %struct.sctp_nets*, %struct.sctp_nets** %1479, align 8
  %1814 = icmp eq %struct.sctp_nets* %1813, null
  br i1 %1814, label %1815, label %1818

1815:                                             ; preds = %1812
  %1816 = load %struct.sctp_nets*, %struct.sctp_nets** %1480, align 8
  %1817 = icmp eq %struct.sctp_nets* %1816, %1555
  br i1 %1817, label %1822, label %1979

1818:                                             ; preds = %1812
  %1819 = icmp eq %struct.sctp_nets* %1813, %1555
  br i1 %1819, label %1822, label %1979

1820:                                             ; preds = %1808
  %1821 = icmp eq %struct.sctp_nets* %1810, %1555
  br i1 %1821, label %1822, label %1979

1822:                                             ; preds = %1815, %1818, %1820, %1807
  %1823 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 3
  %1824 = load %struct.mbuf*, %struct.mbuf** %1823, align 8
  %1825 = icmp eq %struct.mbuf* %1824, null
  br i1 %1825, label %1979, label %1826

1826:                                             ; preds = %1822
  %1827 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 7
  %1828 = load i32, i32* %1827, align 8
  %1829 = icmp eq i32 %1828, 0
  br i1 %1829, label %1830, label %1979

1830:                                             ; preds = %1826
  %1831 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1832 = icmp eq %struct.sctp_auth_chunk* %1831, null
  br i1 %1832, label %1833, label %1846

1833:                                             ; preds = %1830
  %1834 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1481, align 8
  %1835 = icmp eq %struct.sctp_auth_chklist* %1834, null
  br i1 %1835, label %1846, label %1836

1836:                                             ; preds = %1833
  %1837 = bitcast %struct.sctp_tmit_chunk* %1785 to i8*
  %1838 = load i8, i8* %1837, align 8
  %1839 = zext i8 %1838 to i64
  %1840 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1834, i64 0, i32 0, i64 %1839
  %1841 = load i8, i8* %1840, align 1
  %1842 = icmp eq i8 %1841, 0
  br i1 %1842, label %1846, label %1843

1843:                                             ; preds = %1836
  %1844 = load i16, i16* %1482, align 8
  %1845 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %1844) #13
  br label %1846

1846:                                             ; preds = %1830, %1833, %1836, %1843
  %1847 = phi i32 [ %1845, %1843 ], [ 0, %1836 ], [ 0, %1833 ], [ 0, %1830 ]
  %1848 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 10
  %1849 = load i16, i16* %1848, align 8
  %1850 = zext i16 %1849 to i32
  %1851 = sub i32 %1787, %1847
  %1852 = icmp slt i32 %1851, %1850
  br i1 %1852, label %1853, label %1858

1853:                                             ; preds = %1846
  %1854 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 9
  %1855 = load i16, i16* %1854, align 2
  %1856 = and i16 %1855, 256
  %1857 = icmp eq i16 %1856, 0
  br i1 %1857, label %1979, label %1858

1858:                                             ; preds = %1853, %1846
  %1859 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1860 = icmp eq %struct.sctp_auth_chunk* %1859, null
  br i1 %1860, label %1861, label %1876

1861:                                             ; preds = %1858
  %1862 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1481, align 8
  %1863 = icmp eq %struct.sctp_auth_chklist* %1862, null
  br i1 %1863, label %1876, label %1864

1864:                                             ; preds = %1861
  %1865 = bitcast %struct.sctp_tmit_chunk* %1785 to i8*
  %1866 = load i8, i8* %1865, align 8
  %1867 = zext i8 %1866 to i64
  %1868 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1862, i64 0, i32 0, i64 %1867
  %1869 = load i8, i8* %1868, align 1
  %1870 = icmp eq i8 %1869, 0
  br i1 %1870, label %1876, label %1871

1871:                                             ; preds = %1864
  %1872 = call %struct.mbuf* @sctp_add_auth_chunk(%struct.mbuf* %1793, %struct.mbuf** nonnull %12, %struct.sctp_auth_chunk** nonnull %15, i32* nonnull %14, %struct.sctp_tcb* %1, i8 zeroext %1866)
  %1873 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %1874 = load i16, i16* %1848, align 8
  %1875 = zext i16 %1874 to i32
  br label %1876

1876:                                             ; preds = %1864, %1861, %1871, %1858
  %1877 = phi i32 [ %1850, %1864 ], [ %1850, %1861 ], [ %1875, %1871 ], [ %1850, %1858 ]
  %1878 = phi %struct.mbuf* [ %1793, %1864 ], [ %1793, %1861 ], [ %1872, %1871 ], [ %1793, %1858 ]
  %1879 = load %struct.mbuf*, %struct.mbuf** %1823, align 8
  %1880 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %1794, i64 0, i32 1
  %1881 = load i8, i8* %1880, align 1
  %1882 = zext i8 %1881 to i32
  %1883 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 19
  %1884 = load i8, i8* %1883, align 1
  %1885 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %1879, %struct.mbuf* %1878, %struct.mbuf** nonnull %12, i32 %1882, i32 %1877, i8 zeroext %1884)
  %1886 = icmp eq %struct.mbuf* %1885, null
  br i1 %1886, label %1887, label %1888

1887:                                             ; preds = %1876
  store i32 8, i32* %4, align 4
  br label %2622

1888:                                             ; preds = %1876
  %1889 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %1890 = load i16, i16* %1848, align 8
  %1891 = zext i16 %1890 to i32
  %1892 = add i32 %1847, %1891
  %1893 = icmp ule i32 %1787, %1892
  %1894 = sub i32 %1787, %1892
  %1895 = add i32 %1892, %1786
  %1896 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 9
  %1897 = load i16, i16* %1896, align 2
  %1898 = and i16 %1897, 256
  %1899 = icmp eq i16 %1898, 0
  %1900 = select i1 %1899, i32 %1792, i32 0
  %1901 = load i8, i8* %1880, align 1
  %1902 = icmp eq i8 %1901, 0
  br i1 %1902, label %1904, label %1903

1903:                                             ; preds = %1888
  store %struct.mbuf* null, %struct.mbuf** %1823, align 8
  br label %1904

1904:                                             ; preds = %1888, %1903
  %1905 = bitcast %struct.sctp_tmit_chunk* %1785 to i8*
  %1906 = load i8, i8* %1905, align 8
  switch i8 %1906, label %1917 [
    i8 3, label %1907
    i8 16, label %1907
    i8 4, label %1907
    i8 5, label %1907
    i8 7, label %1907
    i8 8, label %1907
    i8 9, label %1907
    i8 11, label %1907
    i8 13, label %1907
    i8 -127, label %1907
    i8 -128, label %1907
    i8 10, label %1918
    i8 12, label %1915
  ]

1907:                                             ; preds = %1904, %1904, %1904, %1904, %1904, %1904, %1904, %1904, %1904, %1904, %1904
  %1908 = icmp eq i8 %1906, 4
  %1909 = select i1 %1908, i32 1, i32 %1791
  switch i8 %1906, label %1930 [
    i8 3, label %1910
    i8 16, label %1910
  ]

1910:                                             ; preds = %1907, %1907
  %1911 = load i32, i32* %1490, align 8
  %1912 = and i32 %1911, 4
  %1913 = icmp eq i32 %1912, 0
  br i1 %1913, label %1930, label %1914

1914:                                             ; preds = %1910
  call void @sctp_timer_stop(i32 3, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* null, i32 -1879048191) #13
  br label %1930

1915:                                             ; preds = %1904
  %1916 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 46), i32 1 seq_cst
  br label %1918

1917:                                             ; preds = %1904
  br label %1918

1918:                                             ; preds = %1904, %1917, %1915
  %1919 = phi i32 [ %1790, %1915 ], [ 1, %1904 ], [ %1790, %1917 ]
  %1920 = phi i32 [ %1789, %1915 ], [ 1, %1904 ], [ %1789, %1917 ]
  store i32 1, i32* %1827, align 8
  %1921 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 5
  %1922 = load %struct.sctp_nets*, %struct.sctp_nets** %1921, align 8
  %1923 = icmp eq %struct.sctp_nets* %1922, null
  br i1 %1923, label %1924, label %1926

1924:                                             ; preds = %1918
  store %struct.sctp_nets* %1555, %struct.sctp_nets** %1921, align 8
  %1925 = atomicrmw add i32* %1780, i32 1 seq_cst
  br label %1926

1926:                                             ; preds = %1924, %1918
  %1927 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1785, i64 0, i32 8
  %1928 = load i16, i16* %1927, align 4
  %1929 = add i16 %1928, 1
  store i16 %1929, i16* %1927, align 4
  br label %1930

1930:                                             ; preds = %1914, %1910, %1907, %1926
  %1931 = phi i32 [ %1791, %1926 ], [ %1909, %1907 ], [ %1909, %1910 ], [ %1909, %1914 ]
  %1932 = phi i32 [ %1919, %1926 ], [ %1790, %1907 ], [ %1790, %1910 ], [ %1790, %1914 ]
  %1933 = phi i32 [ %1920, %1926 ], [ %1789, %1907 ], [ %1789, %1910 ], [ %1789, %1914 ]
  %1934 = add nsw i32 %1788, 1
  %1935 = icmp eq i32 %1894, 0
  %1936 = or i1 %1893, %1935
  br i1 %1936, label %1937, label %1979

1937:                                             ; preds = %1930
  br i1 %1781, label %1939, label %1938

1938:                                             ; preds = %1937
  call void @sctp_timer_start(i32 10, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %1939

1939:                                             ; preds = %1937, %1938
  %1940 = icmp eq i32 %1932, 0
  br i1 %1940, label %1942, label %1941

1941:                                             ; preds = %1939
  call void @sctp_timer_start(i32 6, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %1942

1942:                                             ; preds = %1939, %1941
  %1943 = icmp eq i32 %1931, 0
  br i1 %1943, label %1950, label %1944

1944:                                             ; preds = %1942
  %1945 = load i32, i32* %8, align 4
  %1946 = icmp eq i32 %1945, 0
  br i1 %1946, label %1947, label %1949

1947:                                             ; preds = %1944
  %1948 = call i32 @gettimeofday(%struct.timeval* %7, i8* null) #13
  store i32 1, i32* %8, align 4
  br label %1949

1949:                                             ; preds = %1947, %1944
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1783, i8* align 8 %1483, i64 16, i1 false)
  br label %1950

1950:                                             ; preds = %1942, %1949
  %1951 = load i32, i32* %14, align 4
  %1952 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %1953 = load i16, i16* %21, align 8
  %1954 = load i16, i16* %1484, align 2
  %1955 = load i16, i16* %1485, align 8
  %1956 = load i32, i32* %1486, align 4
  %1957 = call i32 @llvm.bswap.i32(i32 %1956) #13
  %1958 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555, %struct.sockaddr* %1575, %struct.mbuf* nonnull %1885, i32 %1951, %struct.sctp_auth_chunk* %1952, i16 zeroext %1953, i32 %1900, i32 0, i16 zeroext %1954, i16 zeroext %1955, i32 %1957)
  %1959 = icmp eq i32 %1958, 0
  br i1 %1959, label %1968, label %1960

1960:                                             ; preds = %1950
  br i1 %1488, label %1961, label %1963

1961:                                             ; preds = %1960
  %1962 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 100), i32 1 seq_cst
  br label %1963

1963:                                             ; preds = %1961, %1960
  switch i32 %1958, label %1967 [
    i32 105, label %1964
    i32 113, label %1966
  ]

1964:                                             ; preds = %1963
  store i8 1, i8* %1487, align 1
  %1965 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %1967

1966:                                             ; preds = %1963
  call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %1555)
  br label %1967

1967:                                             ; preds = %1966, %1963, %1964
  store i32 7, i32* %4, align 4
  br label %2581

1968:                                             ; preds = %1950
  store i8 0, i8* %1487, align 1
  store %struct.mbuf* null, %struct.mbuf** %12, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %15, align 8
  store i32 0, i32* %14, align 4
  %1969 = icmp eq i32 %1933, 0
  br i1 %1969, label %1970, label %1973

1970:                                             ; preds = %1968
  %1971 = load i32, i32* %3, align 4
  %1972 = add nsw i32 %1971, %1934
  store i32 %1972, i32* %3, align 4
  br label %1973

1973:                                             ; preds = %1968, %1970
  %1974 = load i16, i16* %1576, align 8
  %1975 = icmp eq i16 %1974, 123
  %1976 = load i32, i32* %1579, align 8
  %1977 = add i32 %1976, -12
  %1978 = select i1 %1975, i32 %1977, i32 %1976
  br label %1979

1979:                                             ; preds = %1973, %1815, %1818, %1853, %1826, %1820, %1930, %1822, %1805
  %1980 = phi %struct.mbuf* [ %1793, %1805 ], [ %1793, %1822 ], [ %1793, %1826 ], [ %1885, %1930 ], [ %1793, %1853 ], [ %1793, %1815 ], [ %1793, %1818 ], [ %1793, %1820 ], [ null, %1973 ]
  %1981 = phi i32 [ %1792, %1805 ], [ %1792, %1822 ], [ %1792, %1826 ], [ %1900, %1930 ], [ %1792, %1853 ], [ %1792, %1815 ], [ %1792, %1818 ], [ %1792, %1820 ], [ 1, %1973 ]
  %1982 = phi i32 [ %1791, %1805 ], [ %1791, %1822 ], [ %1791, %1826 ], [ %1931, %1930 ], [ %1791, %1853 ], [ %1791, %1815 ], [ %1791, %1818 ], [ %1791, %1820 ], [ 0, %1973 ]
  %1983 = phi i32 [ %1790, %1805 ], [ %1790, %1822 ], [ %1790, %1826 ], [ %1932, %1930 ], [ %1790, %1853 ], [ %1790, %1815 ], [ %1790, %1818 ], [ %1790, %1820 ], [ 0, %1973 ]
  %1984 = phi i32 [ %1789, %1805 ], [ %1789, %1822 ], [ %1789, %1826 ], [ %1933, %1930 ], [ %1789, %1853 ], [ %1789, %1815 ], [ %1789, %1818 ], [ %1789, %1820 ], [ %1933, %1973 ]
  %1985 = phi i32 [ %1788, %1805 ], [ %1788, %1822 ], [ %1788, %1826 ], [ %1934, %1930 ], [ %1788, %1853 ], [ %1788, %1815 ], [ %1788, %1818 ], [ %1788, %1820 ], [ %1934, %1973 ]
  %1986 = phi i32 [ %1787, %1805 ], [ %1787, %1822 ], [ %1787, %1826 ], [ %1894, %1930 ], [ %1787, %1853 ], [ %1787, %1815 ], [ %1787, %1818 ], [ %1787, %1820 ], [ %1978, %1973 ]
  %1987 = phi i32 [ %1786, %1805 ], [ %1786, %1822 ], [ %1786, %1826 ], [ %1895, %1930 ], [ %1786, %1853 ], [ %1786, %1815 ], [ %1786, %1818 ], [ %1786, %1820 ], [ 0, %1973 ]
  %1988 = icmp eq %struct.sctp_tmit_chunk* %1796, null
  br i1 %1988, label %1989, label %1784

1989:                                             ; preds = %1979, %1768
  %1990 = phi %struct.mbuf* [ %1770, %1768 ], [ %1980, %1979 ]
  %1991 = phi i32 [ %1771, %1768 ], [ %1981, %1979 ]
  %1992 = phi i32 [ %1772, %1768 ], [ %1982, %1979 ]
  %1993 = phi i32 [ %1552, %1768 ], [ %1983, %1979 ]
  %1994 = phi i32 [ %1551, %1768 ], [ %1984, %1979 ]
  %1995 = phi i32 [ %1550, %1768 ], [ %1985, %1979 ]
  %1996 = phi i32 [ %1775, %1768 ], [ %1986, %1979 ]
  %1997 = phi i32 [ %1776, %1768 ], [ %1987, %1979 ]
  %1998 = load i8, i8* %1452, align 1
  %1999 = icmp eq i8 %1998, 0
  br i1 %1999, label %2007, label %2000

2000:                                             ; preds = %1989
  %2001 = load %struct.sctp_nets*, %struct.sctp_nets** %1491, align 8
  %2002 = icmp eq %struct.sctp_nets* %1555, %2001
  br i1 %2002, label %2007, label %2003

2003:                                             ; preds = %2000
  %2004 = load i16, i16* %1571, align 4
  %2005 = and i16 %2004, 2048
  %2006 = icmp eq i16 %2005, 0
  br i1 %2006, label %2007, label %2256

2007:                                             ; preds = %2003, %2000, %1989
  %2008 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 18
  %2009 = load i32, i32* %2008, align 4
  %2010 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 19
  %2011 = load i32, i32* %2010, align 8
  %2012 = icmp ult i32 %2009, %2011
  br i1 %2012, label %2013, label %2256

2013:                                             ; preds = %2007
  br i1 %1999, label %2026, label %2014

2014:                                             ; preds = %2013
  %2015 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 67), align 4
  %2016 = and i32 %2015, 2
  %2017 = icmp ne i32 %2016, 0
  %2018 = icmp ugt i32 %2009, %105
  %2019 = and i1 %2018, %2017
  br i1 %2019, label %2256, label %2020

2020:                                             ; preds = %2014
  %2021 = and i32 %2015, 1
  %2022 = icmp ne i32 %2021, 0
  %2023 = and i1 %1492, %2022
  %2024 = icmp ugt i32 %2009, %114
  %2025 = and i1 %2024, %2023
  br i1 %2025, label %2256, label %2026

2026:                                             ; preds = %2013, %2020
  %2027 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1481, align 8
  %2028 = icmp eq %struct.sctp_auth_chklist* %2027, null
  br i1 %2028, label %2040, label %2029

2029:                                             ; preds = %2026
  %2030 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2027, i64 0, i32 0, i64 0
  %2031 = load i8, i8* %2030, align 1
  %2032 = icmp ne i8 %2031, 0
  %2033 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %2034 = icmp eq %struct.sctp_auth_chunk* %2033, null
  %2035 = and i1 %2032, %2034
  br i1 %2035, label %2036, label %2040

2036:                                             ; preds = %2029
  %2037 = load i16, i16* %1482, align 8
  %2038 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %2037) #13
  %2039 = sub i32 %1996, %2038
  br label %2040

2040:                                             ; preds = %2026, %2036, %2029
  %2041 = phi i1 [ true, %2036 ], [ %2032, %2029 ], [ false, %2026 ]
  %2042 = phi i32 [ %2039, %2036 ], [ %1996, %2029 ], [ %1996, %2026 ]
  %2043 = load i16, i16* %1576, align 8
  %2044 = icmp eq i16 %2043, 123
  br i1 %2044, label %2045, label %2050

2045:                                             ; preds = %2040
  %2046 = load i32, i32* %1579, align 8
  %2047 = icmp ugt i32 %2046, 12
  %2048 = add i32 %2046, -12
  %2049 = select i1 %2047, i32 %2048, i32 0
  br label %2050

2050:                                             ; preds = %2045, %2040
  %2051 = phi i32 [ 0, %2040 ], [ %2049, %2045 ]
  %2052 = load i32, i32* %1493, align 8
  %2053 = and i32 %2052, 127
  switch i32 %2053, label %2058 [
    i32 8, label %2054
    i32 32, label %2054
  ]

2054:                                             ; preds = %2050, %2050
  %2055 = icmp ne i16 %1573, 0
  %2056 = icmp eq i32 %1993, 0
  %2057 = and i1 %2055, %2056
  br i1 %2057, label %2256, label %2060

2058:                                             ; preds = %2050
  %2059 = icmp eq i32 %1993, 0
  br i1 %2059, label %2256, label %2060

2060:                                             ; preds = %2054, %2058
  %2061 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1494, align 8
  %2062 = icmp eq %struct.sctp_tmit_chunk* %2061, null
  br i1 %2062, label %2256, label %2063

2063:                                             ; preds = %2060
  %2064 = icmp eq i32 %1774, 0
  %2065 = icmp ne i32 %1591, 0
  br label %2066

2066:                                             ; preds = %2063, %2246
  %2067 = phi i32 [ %1547, %2063 ], [ %2254, %2246 ]
  %2068 = phi i16 [ %1548, %2063 ], [ %2253, %2246 ]
  %2069 = phi i32 [ %1997, %2063 ], [ %2252, %2246 ]
  %2070 = phi i32 [ %1592, %2063 ], [ %2251, %2246 ]
  %2071 = phi i32 [ %2042, %2063 ], [ %2250, %2246 ]
  %2072 = phi i32 [ 0, %2063 ], [ %2249, %2246 ]
  %2073 = phi i32 [ %1991, %2063 ], [ %2248, %2246 ]
  %2074 = phi %struct.sctp_tmit_chunk* [ %2061, %2063 ], [ %2077, %2246 ]
  %2075 = phi %struct.mbuf* [ %1990, %2063 ], [ %2247, %2246 ]
  %2076 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 6, i32 0
  %2077 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2076, align 8
  br i1 %2064, label %2079, label %2078

2078:                                             ; preds = %2066
  store i32 1, i32* %4, align 4
  br label %2256

2079:                                             ; preds = %2066
  %2080 = load i32, i32* %2008, align 4
  %2081 = load i32, i32* %2010, align 8
  %2082 = icmp ult i32 %2080, %2081
  br i1 %2082, label %2084, label %2083

2083:                                             ; preds = %2079
  store i32 2, i32* %4, align 4
  br label %2256

2084:                                             ; preds = %2079
  %2085 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 5
  %2086 = load %struct.sctp_nets*, %struct.sctp_nets** %2085, align 8
  %2087 = icmp eq %struct.sctp_nets* %2086, null
  %2088 = icmp eq %struct.sctp_nets* %2086, %1555
  %2089 = or i1 %2087, %2088
  br i1 %2089, label %2090, label %2246

2090:                                             ; preds = %2084
  %2091 = load i8, i8* %1452, align 1
  %2092 = icmp eq i8 %2091, 0
  br i1 %2092, label %2093, label %2106

2093:                                             ; preds = %2090
  %2094 = load %struct.sctp_nets*, %struct.sctp_nets** %1479, align 8
  %2095 = icmp eq %struct.sctp_nets* %2094, null
  %2096 = icmp eq %struct.sctp_nets* %2094, %1555
  %2097 = or i1 %2095, %2096
  %2098 = xor i1 %2087, true
  %2099 = or i1 %2097, %2098
  br i1 %2099, label %2100, label %2246

2100:                                             ; preds = %2093
  %2101 = load %struct.sctp_nets*, %struct.sctp_nets** %1480, align 8
  %2102 = icmp eq %struct.sctp_nets* %1555, %2101
  %2103 = xor i1 %2095, true
  %2104 = or i1 %2102, %2103
  %2105 = or i1 %2104, %2098
  br i1 %2105, label %2106, label %2246

2106:                                             ; preds = %2100, %2090
  %2107 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 10
  %2108 = load i16, i16* %2107, align 8
  %2109 = zext i16 %2108 to i32
  %2110 = icmp ult i32 %2051, %2109
  br i1 %2110, label %2111, label %2124

2111:                                             ; preds = %2106
  %2112 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 9
  %2113 = load i16, i16* %2112, align 2
  %2114 = and i16 %2113, 256
  %2115 = icmp eq i16 %2114, 0
  br i1 %2115, label %2116, label %2124

2116:                                             ; preds = %2111
  %2117 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %2118 = icmp eq void (i8*, ...)* %2117, null
  br i1 %2118, label %2121, label %2119

2119:                                             ; preds = %2116
  call void (i8*, ...) %2117(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.11, i64 0, i64 0), i32 %2109, i32 %2071) #13
  %2120 = load i16, i16* %2112, align 2
  br label %2121

2121:                                             ; preds = %2116, %2119
  %2122 = phi i16 [ %2113, %2116 ], [ %2120, %2119 ]
  %2123 = or i16 %2122, 256
  store i16 %2123, i16* %2112, align 2
  br label %2124

2124:                                             ; preds = %2121, %2111, %2106
  %2125 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 65), align 4
  %2126 = icmp eq i32 %2125, 0
  br i1 %2126, label %2140, label %2127

2127:                                             ; preds = %2124
  %2128 = load i32, i32* %23, align 8
  %2129 = trunc i32 %2128 to i8
  %2130 = icmp slt i8 %2129, 0
  br i1 %2130, label %2131, label %2140

2131:                                             ; preds = %2127
  %2132 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 3
  %2133 = load %struct.mbuf*, %struct.mbuf** %2132, align 8
  %2134 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %2133, i64 0, i32 0, i32 2
  %2135 = bitcast i8** %2134 to %struct.sctp_data_chunk**
  %2136 = load %struct.sctp_data_chunk*, %struct.sctp_data_chunk** %2135, align 8
  %2137 = getelementptr inbounds %struct.sctp_data_chunk, %struct.sctp_data_chunk* %2136, i64 0, i32 0, i32 1
  %2138 = load i8, i8* %2137, align 1
  %2139 = or i8 %2138, 8
  store i8 %2139, i8* %2137, align 1
  br label %2140

2140:                                             ; preds = %2124, %2131, %2127
  %2141 = load i16, i16* %2107, align 8
  %2142 = zext i16 %2141 to i32
  %2143 = icmp ult i32 %2071, %2142
  %2144 = icmp ult i32 %2070, %2142
  %2145 = or i1 %2143, %2144
  br i1 %2145, label %2146, label %2154

2146:                                             ; preds = %2140
  %2147 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 9
  %2148 = load i16, i16* %2147, align 2
  %2149 = and i16 %2148, 256
  %2150 = icmp eq i16 %2149, 0
  br i1 %2150, label %2256, label %2151

2151:                                             ; preds = %2146
  %2152 = load i32, i32* %63, align 4
  %2153 = icmp ult i32 %2152, %2142
  br i1 %2153, label %2256, label %2154

2154:                                             ; preds = %2140, %2151
  br i1 %2041, label %2155, label %2171

2155:                                             ; preds = %2154
  %2156 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %2157 = icmp eq %struct.sctp_auth_chunk* %2156, null
  br i1 %2157, label %2158, label %2165

2158:                                             ; preds = %2155
  %2159 = call %struct.mbuf* @sctp_add_auth_chunk(%struct.mbuf* %2075, %struct.mbuf** nonnull %12, %struct.sctp_auth_chunk** nonnull %15, i32* nonnull %14, %struct.sctp_tcb* %1, i8 zeroext 0)
  %2160 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 13
  %2161 = load i16, i16* %2160, align 2
  %2162 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  %2163 = load i16, i16* %2107, align 8
  %2164 = zext i16 %2163 to i32
  br label %2171

2165:                                             ; preds = %2155
  %2166 = icmp eq i32 %2067, 0
  %2167 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 13
  %2168 = load i16, i16* %2167, align 2
  br i1 %2166, label %2169, label %2171

2169:                                             ; preds = %2165
  %2170 = icmp eq i16 %2068, %2168
  br i1 %2170, label %2171, label %2256

2171:                                             ; preds = %2165, %2169, %2158, %2154
  %2172 = phi i32 [ %2142, %2165 ], [ %2142, %2169 ], [ %2164, %2158 ], [ %2142, %2154 ]
  %2173 = phi %struct.mbuf* [ %2075, %2165 ], [ %2075, %2169 ], [ %2159, %2158 ], [ %2075, %2154 ]
  %2174 = phi i16 [ %2168, %2165 ], [ %2068, %2169 ], [ %2161, %2158 ], [ %2068, %2154 ]
  %2175 = phi i32 [ 0, %2165 ], [ 0, %2169 ], [ 0, %2158 ], [ %2067, %2154 ]
  %2176 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 3
  %2177 = load %struct.mbuf*, %struct.mbuf** %2176, align 8
  %2178 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 19
  %2179 = load i8, i8* %2178, align 1
  %2180 = call fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf* %2177, %struct.mbuf* %2173, %struct.mbuf** nonnull %12, i32 0, i32 %2172, i8 zeroext %2179)
  %2181 = icmp eq %struct.mbuf* %2180, null
  br i1 %2181, label %2182, label %2189

2182:                                             ; preds = %2171
  %2183 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 14, i32 0, i32 4
  %2184 = load i32, i32* %2183, align 8
  %2185 = and i32 %2184, 4
  %2186 = icmp eq i32 %2185, 0
  br i1 %2186, label %2187, label %2188

2187:                                             ; preds = %2182
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %2188

2188:                                             ; preds = %2182, %2187
  store i32 3, i32* %4, align 4
  br label %2622

2189:                                             ; preds = %2171
  %2190 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 9
  %2191 = load i16, i16* %2190, align 2
  %2192 = and i16 %2191, 256
  %2193 = icmp eq i16 %2192, 0
  %2194 = select i1 %2193, i32 %2073, i32 0
  %2195 = load i16, i16* %2107, align 8
  %2196 = zext i16 %2195 to i32
  %2197 = icmp ule i32 %2071, %2196
  %2198 = sub i32 %2071, %2196
  %2199 = icmp ule i32 %2070, %2196
  %2200 = sub i32 %2070, %2196
  %2201 = add i32 %2069, %2196
  %2202 = icmp ugt i32 %2201, %1582
  %2203 = icmp ne i32 %2194, 0
  %2204 = and i1 %2202, %2203
  %2205 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %2206 = icmp ne void (i8*, ...)* %2205, null
  %2207 = and i1 %2206, %2204
  br i1 %2207, label %2208, label %2209

2208:                                             ; preds = %2189
  call void (i8*, ...) %2205(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i32 %1582, i32 %2201) #13
  br label %2209

2209:                                             ; preds = %2208, %2189
  %2210 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 20
  store i8 0, i8* %2210, align 2
  %2211 = add nsw i32 %2072, 1
  %2212 = sext i32 %2072 to i64
  %2213 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %13, i64 0, i64 %2212
  store %struct.sctp_tmit_chunk* %2074, %struct.sctp_tmit_chunk** %2213, align 8
  %2214 = icmp sgt i32 %2072, 254
  br i1 %2214, label %2263, label %2215

2215:                                             ; preds = %2209
  %2216 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 7
  %2217 = load i32, i32* %2216, align 8
  %2218 = icmp eq i32 %2217, 0
  br i1 %2218, label %2219, label %2231

2219:                                             ; preds = %2215
  %2220 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2074, i64 0, i32 0, i32 0, i32 10
  %2221 = load i8, i8* %2220, align 1
  %2222 = and i8 %2221, 4
  %2223 = icmp eq i8 %2222, 0
  %2224 = select i1 %2223, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 11), i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 12)
  %2225 = atomicrmw add i32* %2224, i32 1 seq_cst
  %2226 = load i8, i8* %2220, align 1
  %2227 = and i8 %2226, 3
  %2228 = icmp eq i8 %2227, 1
  br i1 %2228, label %2229, label %2231

2229:                                             ; preds = %2219
  %2230 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 16), i32 1 seq_cst
  br label %2231

2231:                                             ; preds = %2219, %2229, %2215
  %2232 = icmp eq i32 %2198, 0
  %2233 = or i1 %2197, %2232
  %2234 = icmp eq i32 %2200, 0
  %2235 = or i1 %2199, %2234
  %2236 = or i1 %2233, %2235
  %2237 = or i1 %2065, %2236
  br i1 %2237, label %2238, label %2246

2238:                                             ; preds = %2231
  br i1 %2065, label %2239, label %2263

2239:                                             ; preds = %2238
  %2240 = load i32, i32* %1495, align 4
  %2241 = icmp eq i32 %2240, 0
  br i1 %2241, label %2242, label %2263

2242:                                             ; preds = %2239
  %2243 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1496, align 16
  %2244 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2243, i64 0, i32 20
  store i8 1, i8* %2244, align 2
  %2245 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 53
  store i8 1, i8* %2245, align 1
  br label %2263

2246:                                             ; preds = %2100, %2093, %2084, %2231
  %2247 = phi %struct.mbuf* [ %2180, %2231 ], [ %2075, %2084 ], [ %2075, %2093 ], [ %2075, %2100 ]
  %2248 = phi i32 [ %2194, %2231 ], [ %2073, %2084 ], [ %2073, %2093 ], [ %2073, %2100 ]
  %2249 = phi i32 [ %2211, %2231 ], [ %2072, %2084 ], [ %2072, %2093 ], [ %2072, %2100 ]
  %2250 = phi i32 [ %2198, %2231 ], [ %2071, %2084 ], [ %2071, %2093 ], [ %2071, %2100 ]
  %2251 = phi i32 [ %2200, %2231 ], [ %2070, %2084 ], [ %2070, %2093 ], [ %2070, %2100 ]
  %2252 = phi i32 [ %2201, %2231 ], [ %2069, %2084 ], [ %2069, %2093 ], [ %2069, %2100 ]
  %2253 = phi i16 [ %2174, %2231 ], [ %2068, %2084 ], [ %2068, %2093 ], [ %2068, %2100 ]
  %2254 = phi i32 [ %2175, %2231 ], [ %2067, %2084 ], [ %2067, %2093 ], [ %2067, %2100 ]
  %2255 = icmp eq %struct.sctp_tmit_chunk* %2077, null
  br i1 %2255, label %2256, label %2066

2256:                                             ; preds = %2246, %2146, %2151, %2169, %2060, %2020, %2054, %2014, %2003, %2058, %2007, %2083, %2078
  %2257 = phi %struct.mbuf* [ %1990, %2003 ], [ %1990, %2007 ], [ %1990, %2078 ], [ %2075, %2083 ], [ %1990, %2058 ], [ %1990, %2014 ], [ %1990, %2054 ], [ %1990, %2020 ], [ %1990, %2060 ], [ %2247, %2246 ], [ %2075, %2146 ], [ %2075, %2151 ], [ %2075, %2169 ]
  %2258 = phi i32 [ %1991, %2003 ], [ %1991, %2007 ], [ %1991, %2078 ], [ %2073, %2083 ], [ %1991, %2058 ], [ %1991, %2014 ], [ %1991, %2054 ], [ %1991, %2020 ], [ %1991, %2060 ], [ %2248, %2246 ], [ %2073, %2146 ], [ %2073, %2151 ], [ %2073, %2169 ]
  %2259 = phi i32 [ 0, %2003 ], [ 0, %2007 ], [ 0, %2078 ], [ %2072, %2083 ], [ 0, %2058 ], [ 0, %2014 ], [ 0, %2054 ], [ 0, %2020 ], [ 0, %2060 ], [ %2249, %2246 ], [ %2072, %2146 ], [ %2072, %2151 ], [ %2072, %2169 ]
  %2260 = phi i16 [ %1548, %2003 ], [ %1548, %2007 ], [ %1548, %2078 ], [ %2068, %2083 ], [ %1548, %2058 ], [ %1548, %2014 ], [ %1548, %2054 ], [ %1548, %2020 ], [ %1548, %2060 ], [ %2253, %2246 ], [ %2068, %2146 ], [ %2068, %2151 ], [ %2068, %2169 ]
  %2261 = phi i32 [ %1547, %2003 ], [ %1547, %2007 ], [ %1547, %2078 ], [ %2067, %2083 ], [ %1547, %2058 ], [ %1547, %2014 ], [ %1547, %2054 ], [ %1547, %2020 ], [ %1547, %2060 ], [ %2254, %2246 ], [ %2067, %2146 ], [ %2067, %2151 ], [ 0, %2169 ]
  %2262 = icmp eq %struct.mbuf* %2257, null
  br i1 %2262, label %2572, label %2263

2263:                                             ; preds = %2209, %2238, %2239, %2242, %2256
  %2264 = phi i32 [ %2261, %2256 ], [ %2175, %2242 ], [ %2175, %2239 ], [ %2175, %2238 ], [ %2175, %2209 ]
  %2265 = phi i16 [ %2260, %2256 ], [ %2174, %2242 ], [ %2174, %2239 ], [ %2174, %2238 ], [ %2174, %2209 ]
  %2266 = phi i32 [ %2259, %2256 ], [ %2211, %2242 ], [ %2211, %2239 ], [ %2211, %2238 ], [ %2211, %2209 ]
  %2267 = phi i32 [ %2258, %2256 ], [ %2194, %2242 ], [ %2194, %2239 ], [ %2194, %2238 ], [ %2194, %2209 ]
  %2268 = phi %struct.mbuf* [ %2257, %2256 ], [ %2180, %2242 ], [ %2180, %2239 ], [ %2180, %2238 ], [ %2180, %2209 ]
  %2269 = icmp eq i32 %1773, 0
  br i1 %2269, label %2271, label %2270

2270:                                             ; preds = %2263
  call void @sctp_timer_start(i32 10, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %2271

2271:                                             ; preds = %2263, %2270
  %2272 = icmp eq i32 %1993, 0
  br i1 %2272, label %2274, label %2273

2273:                                             ; preds = %2271
  call void @sctp_timer_start(i32 6, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %2274

2274:                                             ; preds = %2271, %2273
  %2275 = icmp ne i32 %2266, 0
  br i1 %2275, label %2276, label %2282

2276:                                             ; preds = %2274
  %2277 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 14, i32 0, i32 4
  %2278 = load i32, i32* %2277, align 8
  %2279 = and i32 %2278, 4
  %2280 = icmp eq i32 %2279, 0
  br i1 %2280, label %2281, label %2282

2281:                                             ; preds = %2276
  call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %2282

2282:                                             ; preds = %2276, %2281, %2274
  %2283 = or i32 %2266, %1992
  %2284 = icmp eq i32 %2283, 0
  br i1 %2284, label %2293, label %2285

2285:                                             ; preds = %2282
  %2286 = load i32, i32* %8, align 4
  %2287 = icmp eq i32 %2286, 0
  br i1 %2287, label %2288, label %2290

2288:                                             ; preds = %2285
  %2289 = call i32 @gettimeofday(%struct.timeval* %7, i8* null) #13
  store i32 1, i32* %8, align 4
  br label %2290

2290:                                             ; preds = %2288, %2285
  %2291 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 15
  %2292 = bitcast %struct.timeval* %2291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2292, i8* align 8 %1483, i64 16, i1 false)
  br label %2293

2293:                                             ; preds = %2282, %2290
  %2294 = load i32, i32* %14, align 4
  %2295 = load %struct.sctp_auth_chunk*, %struct.sctp_auth_chunk** %15, align 8
  %2296 = load i16, i16* %1484, align 2
  %2297 = load i16, i16* %1485, align 8
  %2298 = load i32, i32* %1486, align 4
  %2299 = call i32 @llvm.bswap.i32(i32 %2298) #13
  %2300 = call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %1555, %struct.sockaddr* %1575, %struct.mbuf* nonnull %2268, i32 %2294, %struct.sctp_auth_chunk* %2295, i16 zeroext %2265, i32 %2267, i32 %2266, i16 zeroext %2296, i16 zeroext %2297, i32 %2299)
  %2301 = icmp eq i32 %2300, 0
  br i1 %2301, label %2310, label %2302

2302:                                             ; preds = %2293
  br i1 %1488, label %2303, label %2305

2303:                                             ; preds = %2302
  %2304 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 100), i32 1 seq_cst
  br label %2305

2305:                                             ; preds = %2303, %2302
  switch i32 %2300, label %2309 [
    i32 105, label %2306
    i32 113, label %2308
  ]

2306:                                             ; preds = %2305
  store i8 1, i8* %1487, align 1
  %2307 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %2309

2308:                                             ; preds = %2305
  call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %1555)
  br label %2309

2309:                                             ; preds = %2306, %2305, %2308
  store i32 6, i32* %4, align 4
  br label %2581

2310:                                             ; preds = %2293
  store i8 0, i8* %1487, align 1
  store %struct.mbuf* null, %struct.mbuf** %12, align 8
  store %struct.sctp_auth_chunk* null, %struct.sctp_auth_chunk** %15, align 8
  store i32 0, i32* %14, align 4
  %2311 = icmp eq i32 %1994, 0
  br i1 %2311, label %2312, label %2316

2312:                                             ; preds = %2310
  %2313 = add nsw i32 %2266, %1995
  %2314 = load i32, i32* %3, align 4
  %2315 = add nsw i32 %2313, %2314
  store i32 %2315, i32* %3, align 4
  br label %2316

2316:                                             ; preds = %2310, %2312
  br i1 %2275, label %2317, label %2569

2317:                                             ; preds = %2316
  %2318 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1496, align 16
  %2319 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2318, i64 0, i32 0, i32 0, i32 0
  %2320 = load i32, i32* %2319, align 8
  %2321 = load i32, i32* %8, align 4
  %2322 = icmp eq i32 %2321, 0
  br i1 %2322, label %2323, label %2325

2323:                                             ; preds = %2317
  %2324 = call i32 @gettimeofday(%struct.timeval* %1497, i8* null) #13
  store i32 1, i32* %8, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1483, i8* align 8 %1498, i64 16, i1 false)
  br label %2326

2325:                                             ; preds = %2317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1498, i8* align 8 %1483, i64 16, i1 false)
  br label %2326

2326:                                             ; preds = %2325, %2323
  %2327 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 57
  %2328 = load i8, i8* %2327, align 1
  %2329 = icmp eq i8 %2328, 0
  br i1 %2329, label %2333, label %2330

2330:                                             ; preds = %2326
  %2331 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1496, align 16
  %2332 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2331, i64 0, i32 16
  store i8 1, i8* %2332, align 2
  store i8 0, i8* %2327, align 1
  br label %2333

2333:                                             ; preds = %2326, %2330
  %2334 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 41), i32 %2266 seq_cst
  %2335 = icmp sgt i32 %2266, 0
  br i1 %2335, label %2336, label %2565

2336:                                             ; preds = %2333
  %2337 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 15
  %2338 = bitcast %struct.timeval* %2337 to i8*
  %2339 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 19
  %2340 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 17
  %2341 = icmp eq i32 %2266, 1
  %2342 = zext i32 %2266 to i64
  br label %2343

2343:                                             ; preds = %2549, %2336
  %2344 = phi i64 [ 0, %2336 ], [ %2563, %2549 ]
  %2345 = getelementptr inbounds [256 x %struct.sctp_tmit_chunk*], [256 x %struct.sctp_tmit_chunk*]* %13, i64 0, i64 %2344
  %2346 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2347 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2346, i64 0, i32 6, i32 0
  %2348 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2347, align 8
  %2349 = icmp eq %struct.sctp_tmit_chunk* %2348, null
  %2350 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2346, i64 0, i32 6, i32 1
  %2351 = bitcast %struct.sctp_tmit_chunk*** %2350 to i64*
  %2352 = load i64, i64* %2351, align 8
  br i1 %2349, label %2357, label %2353

2353:                                             ; preds = %2343
  %2354 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2348, i64 0, i32 6, i32 1
  %2355 = bitcast %struct.sctp_tmit_chunk*** %2354 to i64*
  store i64 %2352, i64* %2355, align 8
  %2356 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  br label %2358

2357:                                             ; preds = %2343
  store i64 %2352, i64* %1500, align 8
  br label %2358

2358:                                             ; preds = %2357, %2353
  %2359 = phi %struct.sctp_tmit_chunk* [ %2346, %2357 ], [ %2356, %2353 ]
  %2360 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2359, i64 0, i32 6
  %2361 = bitcast %struct.anon.31* %2360 to i64*
  %2362 = load i64, i64* %2361, align 8
  %2363 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2359, i64 0, i32 6, i32 1
  %2364 = bitcast %struct.sctp_tmit_chunk*** %2363 to i64**
  %2365 = load i64*, i64** %2364, align 8
  store i64 %2362, i64* %2365, align 8
  %2366 = load i32, i32* %1501, align 8
  %2367 = add i32 %2366, -1
  store i32 %2367, i32* %1501, align 8
  %2368 = icmp eq i64 %2344, 0
  br i1 %2368, label %2372, label %2369

2369:                                             ; preds = %2358
  %2370 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2371 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2370, i64 0, i32 16
  store i8 0, i8* %2371, align 2
  br label %2372

2372:                                             ; preds = %2369, %2358
  %2373 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2374 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2373, i64 0, i32 2
  %2375 = bitcast %struct.timeval* %2374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2375, i8* align 8 %2338, i64 16, i1 false) #13
  %2376 = load i32, i32* %2339, align 8
  %2377 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2378 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2377, i64 0, i32 0, i32 0, i32 5
  store i32 %2376, i32* %2378, align 4
  %2379 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2380 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2379, i64 0, i32 0, i32 0, i32 0
  %2381 = load i32, i32* %2380, align 8
  %2382 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2379, i64 0, i32 0, i32 0, i32 6
  store i32 %2381, i32* %2382, align 8
  %2383 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2384 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2383, i64 0, i32 5
  %2385 = load %struct.sctp_nets*, %struct.sctp_nets** %2384, align 8
  %2386 = icmp eq %struct.sctp_nets* %2385, null
  br i1 %2386, label %2387, label %2389

2387:                                             ; preds = %2372
  store %struct.sctp_nets* %1555, %struct.sctp_nets** %2384, align 8
  %2388 = atomicrmw add i32* %2340, i32 1 seq_cst
  br label %2389

2389:                                             ; preds = %2387, %2372
  %2390 = load %struct.sctpchunk_listhead*, %struct.sctpchunk_listhead** %1503, align 8
  %2391 = getelementptr inbounds %struct.sctpchunk_listhead, %struct.sctpchunk_listhead* %2390, i64 0, i32 1
  %2392 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %2391, align 8
  %2393 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2392, align 8
  %2394 = icmp eq %struct.sctp_tmit_chunk* %2393, null
  br i1 %2394, label %2395, label %2397

2395:                                             ; preds = %2389
  %2396 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  br label %2475

2397:                                             ; preds = %2389
  %2398 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2393, i64 0, i32 0, i32 0, i32 0
  %2399 = load i32, i32* %2398, align 8
  %2400 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2401 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2400, i64 0, i32 0, i32 0, i32 0
  %2402 = load i32, i32* %2401, align 8
  %2403 = icmp ugt i32 %2402, %2399
  %2404 = sub i32 %2402, %2399
  %2405 = icmp ugt i32 %2404, -2147483648
  %2406 = and i1 %2403, %2405
  br i1 %2406, label %2412, label %2407

2407:                                             ; preds = %2397
  %2408 = icmp ugt i32 %2399, %2402
  %2409 = sub i32 %2399, %2402
  %2410 = icmp sgt i32 %2409, -1
  %2411 = and i1 %2408, %2410
  br i1 %2411, label %2412, label %2475

2412:                                             ; preds = %2407, %2397
  %2413 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2393, i64 0, i32 6, i32 1
  %2414 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %2413, align 8
  %2415 = getelementptr inbounds %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2414, i64 1
  %2416 = bitcast %struct.sctp_tmit_chunk** %2415 to %struct.sctp_tmit_chunk***
  %2417 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %2416, align 8
  %2418 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2417, align 8
  %2419 = icmp eq %struct.sctp_tmit_chunk* %2418, null
  br i1 %2419, label %2422, label %2435

2420:                                             ; preds = %2448
  %2421 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2436, i64 0, i32 6, i32 1
  br label %2422

2422:                                             ; preds = %2420, %2412
  %2423 = phi %struct.sctp_tmit_chunk* [ %2393, %2412 ], [ %2436, %2420 ]
  %2424 = phi %struct.sctp_tmit_chunk*** [ %2413, %2412 ], [ %2421, %2420 ]
  %2425 = phi %struct.sctp_tmit_chunk** [ %2414, %2412 ], [ %2450, %2420 ]
  %2426 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2400, i64 0, i32 6, i32 1
  store %struct.sctp_tmit_chunk** %2425, %struct.sctp_tmit_chunk*** %2426, align 8
  %2427 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2428 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2427, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* %2423, %struct.sctp_tmit_chunk** %2428, align 8
  %2429 = bitcast %struct.sctp_tmit_chunk** %2345 to i64*
  %2430 = load i64, i64* %2429, align 8
  %2431 = bitcast %struct.sctp_tmit_chunk*** %2424 to i64**
  %2432 = load i64*, i64** %2431, align 8
  store i64 %2430, i64* %2432, align 8
  %2433 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2434 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2433, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk** %2434, %struct.sctp_tmit_chunk*** %2424, align 8
  br label %2487

2435:                                             ; preds = %2412, %2448
  %2436 = phi %struct.sctp_tmit_chunk* [ %2454, %2448 ], [ %2418, %2412 ]
  %2437 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2436, i64 0, i32 0, i32 0, i32 0
  %2438 = load i32, i32* %2437, align 8
  %2439 = icmp ugt i32 %2402, %2438
  %2440 = sub i32 %2402, %2438
  %2441 = icmp ugt i32 %2440, -2147483648
  %2442 = and i1 %2439, %2441
  br i1 %2442, label %2448, label %2443

2443:                                             ; preds = %2435
  %2444 = icmp ugt i32 %2438, %2402
  %2445 = sub i32 %2438, %2402
  %2446 = icmp sgt i32 %2445, -1
  %2447 = and i1 %2444, %2446
  br i1 %2447, label %2448, label %2456

2448:                                             ; preds = %2443, %2435
  %2449 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2436, i64 0, i32 6, i32 1
  %2450 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %2449, align 8
  %2451 = getelementptr inbounds %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2450, i64 1
  %2452 = bitcast %struct.sctp_tmit_chunk** %2451 to %struct.sctp_tmit_chunk***
  %2453 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %2452, align 8
  %2454 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2453, align 8
  %2455 = icmp eq %struct.sctp_tmit_chunk* %2454, null
  br i1 %2455, label %2420, label %2435

2456:                                             ; preds = %2443
  %2457 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2436, i64 0, i32 6, i32 0
  %2458 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2457, align 8
  %2459 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2400, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* %2458, %struct.sctp_tmit_chunk** %2459, align 8
  %2460 = icmp eq %struct.sctp_tmit_chunk* %2458, null
  %2461 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2462 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2461, i64 0, i32 6, i32 0
  br i1 %2460, label %2468, label %2463

2463:                                             ; preds = %2456
  %2464 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2462, align 8
  %2465 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2464, i64 0, i32 6, i32 1
  store %struct.sctp_tmit_chunk** %2462, %struct.sctp_tmit_chunk*** %2465, align 8
  %2466 = bitcast %struct.sctp_tmit_chunk** %2345 to i64*
  %2467 = load i64, i64* %2466, align 8
  br label %2470

2468:                                             ; preds = %2456
  %2469 = ptrtoint %struct.sctp_tmit_chunk* %2461 to i64
  store %struct.sctp_tmit_chunk** %2462, %struct.sctp_tmit_chunk*** %1502, align 8
  br label %2470

2470:                                             ; preds = %2468, %2463
  %2471 = phi i64 [ %2469, %2468 ], [ %2467, %2463 ]
  %2472 = bitcast %struct.sctp_tmit_chunk** %2457 to i64*
  store i64 %2471, i64* %2472, align 8
  %2473 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2474 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2473, i64 0, i32 6, i32 1
  store %struct.sctp_tmit_chunk** %2457, %struct.sctp_tmit_chunk*** %2474, align 8
  br label %2487

2475:                                             ; preds = %2407, %2395
  %2476 = phi %struct.sctp_tmit_chunk* [ %2396, %2395 ], [ %2400, %2407 ]
  %2477 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2476, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %2477, align 8
  %2478 = load i64, i64* %1504, align 8
  %2479 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2480 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2479, i64 0, i32 6, i32 1
  %2481 = bitcast %struct.sctp_tmit_chunk*** %2480 to i64*
  store i64 %2478, i64* %2481, align 8
  %2482 = bitcast %struct.sctp_tmit_chunk** %2345 to i64*
  %2483 = load i64, i64* %2482, align 8
  %2484 = load i64*, i64** %1505, align 8
  store i64 %2483, i64* %2484, align 8
  %2485 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2486 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2485, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk** %2486, %struct.sctp_tmit_chunk*** %1502, align 8
  br label %2487

2487:                                             ; preds = %2475, %2470, %2422
  %2488 = load i32, i32* %1506, align 4
  %2489 = add i32 %2488, 1
  store i32 %2489, i32* %1506, align 4
  %2490 = load i32, i32* %63, align 4
  %2491 = icmp eq i32 %2490, 0
  br i1 %2491, label %2492, label %2498

2492:                                             ; preds = %2487
  %2493 = load i32, i32* %100, align 4
  %2494 = icmp eq i32 %2493, 0
  %2495 = and i1 %2341, %2494
  br i1 %2495, label %2496, label %2498

2496:                                             ; preds = %2492
  %2497 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 98), i32 1 seq_cst
  br label %2498

2498:                                             ; preds = %2496, %2492, %2487
  %2499 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2500 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2499, i64 0, i32 7
  store i32 1, i32* %2500, align 8
  %2501 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2502 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2501, i64 0, i32 8
  store i16 1, i16* %2502, align 4
  %2503 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2504 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2503, i64 0, i32 0, i32 0, i32 12
  store i8 0, i8* %2504, align 1
  %2505 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %2506 = and i32 %2505, 32
  %2507 = icmp eq i32 %2506, 0
  br i1 %2507, label %2521, label %2508

2508:                                             ; preds = %2498
  %2509 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2510 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2509, i64 0, i32 5
  %2511 = load %struct.sctp_nets*, %struct.sctp_nets** %2510, align 8
  %2512 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2511, i64 0, i32 18
  %2513 = load i32, i32* %2512, align 4
  %2514 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2509, i64 0, i32 11
  %2515 = load i16, i16* %2514, align 2
  %2516 = zext i16 %2515 to i32
  %2517 = ptrtoint %struct.sctp_nets* %2511 to i64
  %2518 = trunc i64 %2517 to i32
  %2519 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2509, i64 0, i32 0, i32 0, i32 0
  %2520 = load i32, i32* %2519, align 8
  call void @sctp_misc_ints(i8 zeroext 108, i32 %2513, i32 %2516, i32 %2518, i32 %2520) #13
  br label %2521

2521:                                             ; preds = %2508, %2498
  %2522 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2523 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2522, i64 0, i32 11
  %2524 = load i16, i16* %2523, align 2
  %2525 = zext i16 %2524 to i32
  %2526 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2522, i64 0, i32 5
  %2527 = load %struct.sctp_nets*, %struct.sctp_nets** %2526, align 8
  %2528 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2527, i64 0, i32 18
  %2529 = load i32, i32* %2528, align 4
  %2530 = add i32 %2529, %2525
  store i32 %2530, i32* %2528, align 4
  %2531 = load i32, i32* %1507, align 8
  %2532 = add i32 %2531, 1
  store i32 %2532, i32* %1507, align 8
  %2533 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  %2534 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2533, i64 0, i32 11
  %2535 = load i16, i16* %2534, align 2
  %2536 = zext i16 %2535 to i32
  %2537 = load i32, i32* %1495, align 4
  %2538 = add i32 %2537, %2536
  store i32 %2538, i32* %1495, align 4
  %2539 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %2540 = and i32 %2539, 1048576
  %2541 = icmp eq i32 %2540, 0
  br i1 %2541, label %2549, label %2542

2542:                                             ; preds = %2521
  %2543 = load i32, i32* %63, align 4
  %2544 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2533, i64 0, i32 10
  %2545 = load i16, i16* %2544, align 8
  %2546 = zext i16 %2545 to i32
  %2547 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  call void @sctp_log_rwnd(i8 zeroext 37, i32 %2543, i32 %2546, i32 %2547) #13
  %2548 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %2345, align 8
  br label %2549

2549:                                             ; preds = %2542, %2521
  %2550 = phi %struct.sctp_tmit_chunk* [ %2548, %2542 ], [ %2533, %2521 ]
  %2551 = load i32, i32* %63, align 4
  %2552 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %2550, i64 0, i32 10
  %2553 = load i16, i16* %2552, align 8
  %2554 = zext i16 %2553 to i32
  %2555 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  %2556 = add i32 %2555, %2554
  %2557 = call i32 @llvm.usub.sat.i32(i32 %2551, i32 %2556) #13
  store i32 %2557, i32* %63, align 4
  %2558 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1508, align 8
  %2559 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %2558, i64 0, i32 11, i32 9
  %2560 = load i32, i32* %2559, align 8
  %2561 = icmp ult i32 %2557, %2560
  %2562 = select i1 %2561, i32 0, i32 %2557
  store i32 %2562, i32* %63, align 4
  %2563 = add nuw nsw i64 %2344, 1
  %2564 = icmp eq i64 %2563, %2342
  br i1 %2564, label %2565, label %2343

2565:                                             ; preds = %2549, %2333
  %2566 = load void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)** %1509, align 8
  %2567 = icmp eq void (%struct.sctp_tcb*, %struct.sctp_nets*)* %2566, null
  br i1 %2567, label %2569, label %2568

2568:                                             ; preds = %2565
  call void %2566(%struct.sctp_tcb* %1, %struct.sctp_nets* %1555) #13
  br label %2569

2569:                                             ; preds = %2568, %2565, %2316
  %2570 = phi i32 [ 10, %2316 ], [ %2320, %2565 ], [ %2320, %2568 ]
  %2571 = icmp eq i32 %1591, 0
  br i1 %2571, label %2572, label %2593

2572:                                             ; preds = %2569, %2256
  %2573 = phi i32 [ %2264, %2569 ], [ %2261, %2256 ]
  %2574 = phi i16 [ %2265, %2569 ], [ %2260, %2256 ]
  %2575 = phi i32 [ 0, %2569 ], [ %1993, %2256 ]
  %2576 = phi i32 [ %2570, %2569 ], [ 10, %2256 ]
  %2577 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %2578 = and i32 %2577, 4
  %2579 = icmp eq i32 %2578, 0
  br i1 %2579, label %2581, label %2580

2580:                                             ; preds = %2572
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* %1555, i32 %2576, i8 zeroext 61) #13
  br label %2581

2581:                                             ; preds = %1967, %1739, %1564, %2572, %2580, %2309
  %2582 = phi i32 [ %1554, %1564 ], [ %1992, %2309 ], [ %1992, %2580 ], [ %1992, %2572 ], [ 0, %1739 ], [ 0, %1967 ]
  %2583 = phi i32 [ %1553, %1564 ], [ %1773, %2309 ], [ %1773, %2580 ], [ %1773, %2572 ], [ 1, %1739 ], [ %1773, %1967 ]
  %2584 = phi i32 [ %1552, %1564 ], [ 0, %2309 ], [ %2575, %2580 ], [ %2575, %2572 ], [ %1552, %1739 ], [ 0, %1967 ]
  %2585 = phi i32 [ %1551, %1564 ], [ %1994, %2309 ], [ %1994, %2580 ], [ %1994, %2572 ], [ %1551, %1739 ], [ %1933, %1967 ]
  %2586 = phi i32 [ %1550, %1564 ], [ 0, %2309 ], [ %1995, %2580 ], [ %1995, %2572 ], [ %1550, %1739 ], [ %1934, %1967 ]
  %2587 = phi i32 [ %1549, %1564 ], [ %1774, %2309 ], [ %1774, %2580 ], [ %1774, %2572 ], [ 1, %1739 ], [ %1774, %1967 ]
  %2588 = phi i16 [ %1548, %1564 ], [ %2265, %2309 ], [ %2574, %2580 ], [ %2574, %2572 ], [ %1548, %1739 ], [ %1548, %1967 ]
  %2589 = phi i32 [ %1547, %1564 ], [ %2264, %2309 ], [ %2573, %2580 ], [ %2573, %2572 ], [ %1547, %1739 ], [ %1547, %1967 ]
  %2590 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1555, i64 0, i32 0, i32 0
  %2591 = load %struct.sctp_nets*, %struct.sctp_nets** %2590, align 8
  %2592 = icmp eq %struct.sctp_nets* %2591, null
  br i1 %2592, label %2593, label %1546

2593:                                             ; preds = %2581, %2569, %1532
  %2594 = phi %struct.sctp_nets* [ null, %1532 ], [ %1555, %2569 ], [ null, %2581 ]
  %2595 = phi i32 [ %1535, %1532 ], [ %1992, %2569 ], [ %2582, %2581 ]
  %2596 = phi i32 [ %1536, %1532 ], [ %1773, %2569 ], [ %2583, %2581 ]
  %2597 = phi i32 [ %1537, %1532 ], [ 0, %2569 ], [ %2584, %2581 ]
  %2598 = phi i32 [ %1538, %1532 ], [ %1994, %2569 ], [ %2585, %2581 ]
  %2599 = phi i32 [ %1539, %1532 ], [ %1995, %2569 ], [ %2586, %2581 ]
  %2600 = phi i32 [ %1540, %1532 ], [ %1774, %2569 ], [ %2587, %2581 ]
  %2601 = phi i16 [ %1541, %1532 ], [ %2265, %2569 ], [ %2588, %2581 ]
  %2602 = phi i32 [ %1542, %1532 ], [ %2264, %2569 ], [ %2589, %2581 ]
  %2603 = icmp eq %struct.sctp_nets* %1534, null
  br i1 %2603, label %2604, label %2606

2604:                                             ; preds = %2593
  %2605 = load %struct.sctp_nets*, %struct.sctp_nets** %1510, align 8
  br i1 %1543, label %2606, label %1532

2606:                                             ; preds = %2604, %2593, %1546
  %2607 = phi %struct.sctp_nets* [ %1534, %1546 ], [ %2594, %2593 ], [ %2594, %2604 ]
  %2608 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %2609 = and i32 %2608, 4
  %2610 = icmp eq i32 %2609, 0
  br i1 %2610, label %2613, label %2611

2611:                                             ; preds = %2606
  %2612 = load i32, i32* %3, align 4
  call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* %2607, i32 %2612, i8 zeroext 61) #13
  br label %2613

2613:                                             ; preds = %2606, %2611
  %2614 = load i32, i32* %3, align 4
  %2615 = icmp eq i32 %2614, 0
  br i1 %2615, label %2616, label %2619

2616:                                             ; preds = %2613
  %2617 = load i32, i32* %4, align 4
  %2618 = icmp eq i32 %2617, 0
  br i1 %2618, label %2620, label %2619

2619:                                             ; preds = %2616, %2613
  br label %2620

2620:                                             ; preds = %2616, %2619
  %2621 = phi i32 [ 5, %2619 ], [ 4, %2616 ]
  store i32 %2621, i32* %4, align 4
  call fastcc void @sctp_clean_up_ctl(%struct.sctp_tcb* %1, %struct.sctp_association* %2, i32 %10)
  br label %2622

2622:                                             ; preds = %2620, %2188, %1887, %1689, %1450, %61
  %2623 = phi i32 [ 0, %61 ], [ 0, %1450 ], [ 0, %2620 ], [ 12, %1887 ], [ 12, %2188 ], [ 12, %1689 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret i32 %2623
}

declare void @sctp_log_maxburst(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32, i8 zeroext) local_unnamed_addr #5

declare void @sctp_log_cwnd(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i8 zeroext) local_unnamed_addr #5

declare i32 @sctp_is_there_unsent_data(%struct.sctp_tcb*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_send_stream_reset_out_if_possible(%struct.sctp_tcb*, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 160
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 178
  %6 = load i8, i8* %5, align 2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %292

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %10 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %9, align 8
  %11 = icmp eq %struct.sctp_tmit_chunk* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %14 = tail call noalias i8* @malloc(i64 %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %292, label %37

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 0
  %18 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %17, align 8
  %19 = icmp eq %struct.sctp_tmit_chunk* %18, null
  %20 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 1
  %21 = bitcast %struct.sctp_tmit_chunk*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %18, i64 0, i32 6, i32 1
  %24 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %25 = select i1 %19, %struct.sctp_tmit_chunk*** %24, %struct.sctp_tmit_chunk*** %23
  %26 = bitcast %struct.sctp_tmit_chunk*** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %struct.sctp_tmit_chunk** %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.sctp_tmit_chunk*** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %32 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 14
  store i8 0, i8* %32, align 8
  %33 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %35 = load i16, i16* %34, align 2
  %36 = add i16 %35, -1
  store i16 %36, i16* %34, align 2
  br label %43

37:                                               ; preds = %12
  %38 = bitcast i8* %14 to %struct.sctp_tmit_chunk*
  %39 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %40 = getelementptr inbounds i8, i8* %14, i64 104
  %41 = bitcast i8* %40 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %41, align 8
  %42 = getelementptr inbounds i8, i8* %14, i64 144
  store i8 0, i8* %42, align 8
  br label %43

43:                                               ; preds = %37, %16
  %44 = phi %struct.sctp_tmit_chunk* [ %10, %16 ], [ %38, %37 ]
  %45 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 19
  store i8 0, i8* %45, align 1
  %46 = bitcast %struct.sctp_tmit_chunk* %44 to %struct.chk_id*
  %47 = bitcast %struct.sctp_tmit_chunk* %44 to i8*
  store i8 -126, i8* %47, align 8
  %48 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %46, i64 0, i32 1
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 9
  store i16 0, i16* %49, align 2
  %50 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 1
  store %struct.sctp_association* %3, %struct.sctp_association** %50, align 8
  %51 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 11
  store i16 4, i16* %51, align 2
  %52 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 10
  store i16 4, i16* %52, align 8
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 17
  store i8 0, i8* %53, align 1
  %54 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %55 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 3
  store %struct.mbuf* %54, %struct.mbuf** %55, align 8
  %56 = icmp eq %struct.mbuf* %54, null
  br i1 %56, label %57, label %141

57:                                               ; preds = %43
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 14
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 13
  %63 = load i16, i16* %62, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %63, i32 %1) #13
  store i8 0, i8* %58, align 8
  br label %64

64:                                               ; preds = %57, %61
  %65 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %65, label %139, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 5
  %68 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %69 = icmp eq %struct.sctp_nets* %68, null
  br i1 %69, label %116, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %68, i64 0, i32 17
  %72 = atomicrmw add i32* %71, i32 -1 seq_cst
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %115

74:                                               ; preds = %70
  %75 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %76 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %75, i64 0, i32 3, i32 0
  %77 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %76, align 8
  %78 = icmp eq %struct.sctp_rtentry* %77, null
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %77, i64 0, i32 3
  %81 = load i64, i64* %80, align 8
  %82 = icmp sgt i64 %81, 1
  %83 = add nsw i64 %81, -1
  store i64 %83, i64* %80, align 8
  %84 = icmp sgt i64 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = bitcast %struct.sctp_rtentry* %77 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %79, %86
  %89 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %90 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %89, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %90, align 8
  %91 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %92 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %91, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %92, align 8
  %93 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  br label %94

94:                                               ; preds = %74, %88
  %95 = phi %struct.sctp_nets* [ %75, %74 ], [ %93, %88 ]
  %96 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %95, i64 0, i32 47
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %95, i64 0, i32 3, i32 2
  %101 = load %struct.sctp_ifa*, %struct.sctp_ifa** %100, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %101) #13
  %102 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %103 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %102, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %103, align 8
  %104 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  br label %105

105:                                              ; preds = %94, %99
  %106 = phi %struct.sctp_nets* [ %95, %94 ], [ %104, %99 ]
  %107 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %106, i64 0, i32 47
  store i8 0, i8* %107, align 1
  %108 = load %struct.sctp_nets*, %struct.sctp_nets** %67, align 8
  %109 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %108, i64 0, i32 37
  %110 = load i16, i16* %109, align 4
  %111 = and i16 %110, -2
  store i16 %111, i16* %109, align 4
  %112 = bitcast %struct.sctp_nets** %67 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @free(i8* %113) #13
  %114 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %115

115:                                              ; preds = %70, %105
  store %struct.sctp_nets* null, %struct.sctp_nets** %67, align 8
  br label %116

116:                                              ; preds = %66, %115
  %117 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %121 = icmp ult i32 %120, %119
  br i1 %121, label %126, label %122

122:                                              ; preds = %116
  %123 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %124 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %125 = icmp ugt i32 %123, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %122, %116
  tail call void @free(i8* %47) #13
  %127 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %292

128:                                              ; preds = %122
  %129 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %129, align 8
  %130 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %131 = bitcast %struct.sctp_tmit_chunk*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 1
  %134 = bitcast %struct.sctp_tmit_chunk*** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %130, align 8
  store %struct.sctp_tmit_chunk* %44, %struct.sctp_tmit_chunk** %135, align 8
  store %struct.sctp_tmit_chunk** %129, %struct.sctp_tmit_chunk*** %130, align 8
  %136 = load i16, i16* %117, align 2
  %137 = add i16 %136, 1
  store i16 %137, i16* %117, align 2
  %138 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %292

139:                                              ; preds = %64
  tail call void @free(i8* %47) #13
  %140 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %292

141:                                              ; preds = %43
  %142 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 2
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 32
  store i8* %144, i8** %142, align 8
  %145 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 7
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 8
  store i16 0, i16* %146, align 4
  %147 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %148 = load %struct.sctp_nets*, %struct.sctp_nets** %147, align 8
  %149 = icmp eq %struct.sctp_nets* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %141
  %151 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 5
  store %struct.sctp_nets* %148, %struct.sctp_nets** %151, align 8
  br label %158

152:                                              ; preds = %141
  %153 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %154 = bitcast %struct.sctp_nets** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 5
  %157 = bitcast %struct.sctp_nets** %156 to i64*
  store i64 %155, i64* %157, align 8
  br label %158

158:                                              ; preds = %152, %150
  %159 = load %struct.mbuf*, %struct.mbuf** %55, align 8
  %160 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %159, i64 0, i32 0, i32 2
  %161 = bitcast i8** %160 to %struct.sctp_chunkhdr**
  %162 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %161, align 8
  %163 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %162, i64 0, i32 0
  store i8 -126, i8* %163, align 1
  %164 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %162, i64 0, i32 1
  store i8 0, i8* %164, align 1
  %165 = load i16, i16* %51, align 2
  %166 = tail call i16 @llvm.bswap.i16(i16 %165) #13
  %167 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %162, i64 0, i32 2
  store i16 %166, i16* %167, align 1
  %168 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 5
  %169 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %170 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %169, i64 0, i32 17
  %171 = atomicrmw add i32* %170, i32 1 seq_cst
  %172 = load i16, i16* %52, align 8
  %173 = zext i16 %172 to i32
  %174 = load %struct.mbuf*, %struct.mbuf** %55, align 8
  %175 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %174, i64 0, i32 0, i32 3
  store i32 %173, i32* %175, align 8
  %176 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 46
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 47
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, -1
  %181 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 56
  %182 = load i32, i32* %181, align 8
  %183 = add i32 %182, -1
  %184 = tail call fastcc i32 @sctp_add_stream_reset_out(%struct.sctp_tcb* %0, %struct.sctp_tmit_chunk* nonnull %44, i32 %177, i32 %180, i32 %183)
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %203, label %186

186:                                              ; preds = %158
  %187 = load i8, i8* %5, align 2
  %188 = add i8 %187, 1
  store i8 %188, i8* %5, align 2
  %189 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 25
  store %struct.sctp_tmit_chunk* %44, %struct.sctp_tmit_chunk** %189, align 8
  %190 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %190, align 8
  %191 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %192 = bitcast %struct.sctp_tmit_chunk*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 1
  %195 = bitcast %struct.sctp_tmit_chunk*** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %191, align 8
  store %struct.sctp_tmit_chunk* %44, %struct.sctp_tmit_chunk** %196, align 8
  store %struct.sctp_tmit_chunk** %190, %struct.sctp_tmit_chunk*** %191, align 8
  %197 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %198 = load i32, i32* %197, align 8
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %197, align 8
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 146
  %201 = load i8, i8* %200, align 2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %288, label %287

203:                                              ; preds = %158
  %204 = load %struct.mbuf*, %struct.mbuf** %55, align 8
  tail call void @m_freem(%struct.mbuf* %204) #13
  store %struct.mbuf* null, %struct.mbuf** %55, align 8
  %205 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 14
  %206 = load i8, i8* %205, align 8
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 13
  %210 = load i16, i16* %209, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %210, i32 %1) #13
  store i8 0, i8* %205, align 8
  br label %211

211:                                              ; preds = %203, %208
  %212 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %212, label %285, label %213

213:                                              ; preds = %211
  %214 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %215 = icmp eq %struct.sctp_nets* %214, null
  br i1 %215, label %262, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %214, i64 0, i32 17
  %218 = atomicrmw add i32* %217, i32 -1 seq_cst
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %261

220:                                              ; preds = %216
  %221 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %222 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %221, i64 0, i32 3, i32 0
  %223 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %222, align 8
  %224 = icmp eq %struct.sctp_rtentry* %223, null
  br i1 %224, label %240, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %223, i64 0, i32 3
  %227 = load i64, i64* %226, align 8
  %228 = icmp sgt i64 %227, 1
  %229 = add nsw i64 %227, -1
  store i64 %229, i64* %226, align 8
  %230 = icmp sgt i64 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %234, label %232

232:                                              ; preds = %225
  %233 = bitcast %struct.sctp_rtentry* %223 to i8*
  tail call void @free(i8* %233) #13
  br label %234

234:                                              ; preds = %225, %232
  %235 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %236 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %235, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %236, align 8
  %237 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %238 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %237, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %238, align 8
  %239 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  br label %240

240:                                              ; preds = %220, %234
  %241 = phi %struct.sctp_nets* [ %221, %220 ], [ %239, %234 ]
  %242 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %241, i64 0, i32 47
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %251, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %241, i64 0, i32 3, i32 2
  %247 = load %struct.sctp_ifa*, %struct.sctp_ifa** %246, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %247) #13
  %248 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %249 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %248, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %249, align 8
  %250 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  br label %251

251:                                              ; preds = %240, %245
  %252 = phi %struct.sctp_nets* [ %241, %240 ], [ %250, %245 ]
  %253 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %252, i64 0, i32 47
  store i8 0, i8* %253, align 1
  %254 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  %255 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %254, i64 0, i32 37
  %256 = load i16, i16* %255, align 4
  %257 = and i16 %256, -2
  store i16 %257, i16* %255, align 4
  %258 = bitcast %struct.sctp_nets** %168 to i8**
  %259 = load i8*, i8** %258, align 8
  tail call void @free(i8* %259) #13
  %260 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %261

261:                                              ; preds = %216, %251
  store %struct.sctp_nets* null, %struct.sctp_nets** %168, align 8
  br label %262

262:                                              ; preds = %213, %261
  %263 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %264 = load i16, i16* %263, align 2
  %265 = zext i16 %264 to i32
  %266 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %267 = icmp ult i32 %266, %265
  br i1 %267, label %272, label %268

268:                                              ; preds = %262
  %269 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %270 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %271 = icmp ugt i32 %269, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %268, %262
  tail call void @free(i8* %47) #13
  %273 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %292

274:                                              ; preds = %268
  %275 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %275, align 8
  %276 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %277 = bitcast %struct.sctp_tmit_chunk*** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %44, i64 0, i32 6, i32 1
  %280 = bitcast %struct.sctp_tmit_chunk*** %279 to i64*
  store i64 %278, i64* %280, align 8
  %281 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %276, align 8
  store %struct.sctp_tmit_chunk* %44, %struct.sctp_tmit_chunk** %281, align 8
  store %struct.sctp_tmit_chunk** %275, %struct.sctp_tmit_chunk*** %276, align 8
  %282 = load i16, i16* %263, align 2
  %283 = add i16 %282, 1
  store i16 %283, i16* %263, align 2
  %284 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %292

285:                                              ; preds = %211
  tail call void @free(i8* %47) #13
  %286 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %292

287:                                              ; preds = %186
  tail call void @sctp_send_sack(%struct.sctp_tcb* %0, i32 %1)
  br label %288

288:                                              ; preds = %186, %287
  %289 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %290 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %289, align 8
  %291 = load %struct.sctp_nets*, %struct.sctp_nets** %168, align 8
  tail call void @sctp_timer_start(i32 13, %struct.sctp_inpcb* %290, %struct.sctp_tcb* %0, %struct.sctp_nets* %291) #13
  br label %292

292:                                              ; preds = %12, %285, %274, %272, %139, %128, %126, %2, %288
  %293 = phi i32 [ 0, %288 ], [ 114, %2 ], [ 12, %126 ], [ 12, %128 ], [ 12, %139 ], [ 2, %272 ], [ 2, %274 ], [ 2, %285 ], [ 12, %12 ]
  ret i32 %293
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_output(%struct.sctp_inpcb* readonly, %struct.mbuf*, %struct.sockaddr*, %struct.mbuf*, %struct.proc* nocapture readnone, i32) local_unnamed_addr #2 {
  %7 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 7
  %10 = load %struct.socket*, %struct.socket** %9, align 8
  %11 = icmp eq %struct.socket* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @sctp_sosend(%struct.socket* nonnull %10, %struct.sockaddr* %2, %struct.uio* null, %struct.mbuf* %1, %struct.mbuf* %3, i32 %5, %struct.proc* undef)
  br label %14

14:                                               ; preds = %8, %6, %12
  %15 = phi i32 [ %13, %12 ], [ 22, %6 ], [ 22, %8 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_sosend(%struct.socket*, %struct.sockaddr*, %struct.uio*, %struct.mbuf*, %struct.mbuf*, i32, %struct.proc* nocapture readnone) local_unnamed_addr #2 {
  %8 = alloca %struct.cmsghdr, align 8
  %9 = alloca %struct.sctp_sndinfo, align 4
  %10 = alloca i64, align 8
  %11 = alloca %struct.sctp_authinfo, align 2
  %12 = alloca %struct.sctp_sndrcvinfo, align 4
  %13 = bitcast %struct.sctp_sndrcvinfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 128, i1 false)
  %14 = icmp eq %struct.mbuf* %4, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %7
  %16 = bitcast %struct.cmsghdr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 0
  %18 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 1
  %19 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 2
  %20 = bitcast %struct.sctp_sndinfo* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %struct.sctp_sndinfo, %struct.sctp_sndinfo* %9, i64 0, i32 0
  %22 = getelementptr inbounds %struct.sctp_sndinfo, %struct.sctp_sndinfo* %9, i64 0, i32 1
  %23 = getelementptr inbounds %struct.sctp_sndinfo, %struct.sctp_sndinfo* %9, i64 0, i32 2
  %24 = getelementptr inbounds %struct.sctp_sndinfo, %struct.sctp_sndinfo* %9, i64 0, i32 3
  %25 = getelementptr inbounds %struct.sctp_sndinfo, %struct.sctp_sndinfo* %9, i64 0, i32 4
  %26 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  store i64 -6148914691236517206, i64* %10, align 8
  %27 = bitcast %struct.sctp_authinfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27) #13
  %28 = getelementptr inbounds %struct.sctp_authinfo, %struct.sctp_authinfo* %11, i64 0, i32 0
  store i16 -21846, i16* %28, align 2
  %29 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %100

32:                                               ; preds = %15
  %33 = bitcast i64* %10 to %struct.sctp_prinfo*
  %34 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 10
  %35 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 9
  %36 = bitcast i64* %10 to i16*
  %37 = getelementptr inbounds %struct.sctp_prinfo, %struct.sctp_prinfo* %33, i64 0, i32 1
  %38 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 5
  %39 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 2
  %40 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 0
  %41 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 3
  %42 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 4
  %43 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %12, i64 0, i32 8
  br label %44

44:                                               ; preds = %92, %32
  %45 = phi i32 [ 0, %32 ], [ %93, %92 ]
  %46 = phi i32 [ 0, %32 ], [ %98, %92 ]
  %47 = sub nsw i32 %30, %46
  %48 = icmp slt i32 %47, 16
  br i1 %48, label %100, label %49

49:                                               ; preds = %44
  call void @m_copydata(%struct.mbuf* nonnull %4, i32 %46, i32 16, i8* nonnull %16) #13
  %50 = load i64, i64* %17, align 8
  %51 = icmp ult i64 %50, 16
  br i1 %51, label %100, label %52

52:                                               ; preds = %49
  %53 = icmp ugt i64 %50, 2147483647
  %54 = trunc i64 %50 to i32
  %55 = icmp slt i32 %47, %54
  %56 = or i1 %53, %55
  br i1 %56, label %100, label %57

57:                                               ; preds = %52
  %58 = add i32 %54, -16
  %59 = add i32 %46, 16
  %60 = load i32, i32* %18, align 8
  %61 = icmp eq i32 %60, 132
  br i1 %61, label %62, label %92

62:                                               ; preds = %57
  %63 = load i32, i32* %19, align 4
  switch i32 %63, label %92 [
    i32 2, label %64
    i32 4, label %67
    i32 7, label %67
    i32 8, label %67
  ]

64:                                               ; preds = %62
  %65 = icmp slt i32 %58, 128
  br i1 %65, label %100, label %66

66:                                               ; preds = %64
  call void @m_copydata(%struct.mbuf* nonnull %4, i32 %59, i32 128, i8* nonnull %13) #13
  br label %100

67:                                               ; preds = %62, %62, %62
  %68 = icmp eq i32 %45, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 128, i1 false) #13
  br label %70

70:                                               ; preds = %69, %67
  switch i32 %63, label %100 [
    i32 4, label %71
    i32 7, label %79
    i32 8, label %88
  ]

71:                                               ; preds = %70
  %72 = icmp slt i32 %58, 16
  br i1 %72, label %100, label %73

73:                                               ; preds = %71
  call void @m_copydata(%struct.mbuf* nonnull %4, i32 %59, i32 16, i8* nonnull %20) #13
  %74 = load i16, i16* %21, align 4
  store i16 %74, i16* %40, align 4
  %75 = load i16, i16* %22, align 2
  store i16 %75, i16* %39, align 4
  %76 = load i32, i32* %23, align 4
  store i32 %76, i32* %41, align 4
  %77 = load i32, i32* %24, align 4
  store i32 %77, i32* %42, align 4
  %78 = load i32, i32* %25, align 4
  store i32 %78, i32* %43, align 4
  br label %92

79:                                               ; preds = %70
  %80 = icmp slt i32 %58, 8
  br i1 %80, label %100, label %81

81:                                               ; preds = %79
  call void @m_copydata(%struct.mbuf* nonnull %4, i32 %59, i32 8, i8* nonnull %26) #13
  %82 = load i16, i16* %36, align 8
  %83 = icmp eq i16 %82, 0
  %84 = load i32, i32* %37, align 4
  %85 = select i1 %83, i32 0, i32 %84
  store i32 %85, i32* %38, align 4
  %86 = load i16, i16* %39, align 4
  %87 = or i16 %86, %82
  store i16 %87, i16* %39, align 4
  br label %92

88:                                               ; preds = %70
  %89 = icmp slt i32 %58, 2
  br i1 %89, label %100, label %90

90:                                               ; preds = %88
  call void @m_copydata(%struct.mbuf* nonnull %4, i32 %59, i32 2, i8* nonnull %27) #13
  store i16 1, i16* %34, align 2
  %91 = load i16, i16* %28, align 2
  store i16 %91, i16* %35, align 4
  br label %92

92:                                               ; preds = %90, %81, %73, %62, %57
  %93 = phi i32 [ %45, %57 ], [ %45, %62 ], [ 1, %90 ], [ 1, %81 ], [ 1, %73 ]
  %94 = load i64, i64* %17, align 8
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, 7
  %97 = and i32 %96, -8
  %98 = add i32 %97, %46
  %99 = icmp sgt i32 %30, %98
  br i1 %99, label %44, label %100

100:                                              ; preds = %44, %49, %52, %70, %71, %79, %88, %92, %15, %64, %66
  %101 = phi i32 [ 1, %66 ], [ %45, %64 ], [ 0, %15 ], [ %45, %70 ], [ %45, %88 ], [ %45, %79 ], [ %45, %71 ], [ %93, %92 ], [ %45, %52 ], [ %45, %49 ], [ %45, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  %102 = icmp eq i32 %101, 0
  %103 = select i1 %102, %struct.sctp_sndrcvinfo* null, %struct.sctp_sndrcvinfo* %12
  br label %104

104:                                              ; preds = %100, %7
  %105 = phi %struct.sctp_sndrcvinfo* [ null, %7 ], [ %103, %100 ]
  %106 = call i32 @sctp_lower_sosend(%struct.socket* %0, %struct.sockaddr* %1, %struct.uio* %2, %struct.mbuf* %3, %struct.mbuf* %4, i32 undef, %struct.sctp_sndrcvinfo* %105)
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %13) #13
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @send_forward_tsn(%struct.sctp_tcb*, %struct.sctp_association*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 0
  %4 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %3, align 8
  %5 = icmp eq %struct.sctp_tmit_chunk* %4, null
  br i1 %5, label %67, label %6

6:                                                ; preds = %2, %63
  %7 = phi %struct.sctp_tmit_chunk* [ %65, %63 ], [ %4, %2 ]
  %8 = bitcast %struct.sctp_tmit_chunk* %7 to i8*
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, -64
  br i1 %10, label %11, label %63

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %7, i64 0, i32 7
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %7, i64 0, i32 8
  store i16 0, i16* %13, align 4
  %14 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %7, i64 0, i32 5
  %15 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %16 = icmp eq %struct.sctp_nets* %15, null
  br i1 %16, label %216, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %15, i64 0, i32 17
  %19 = atomicrmw add i32* %18, i32 -1 seq_cst
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %62

21:                                               ; preds = %17
  %22 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %23 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %22, i64 0, i32 3, i32 0
  %24 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %23, align 8
  %25 = icmp eq %struct.sctp_rtentry* %24, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %24, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = icmp sgt i64 %28, 1
  %30 = add nsw i64 %28, -1
  store i64 %30, i64* %27, align 8
  %31 = icmp sgt i64 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = bitcast %struct.sctp_rtentry* %24 to i8*
  tail call void @free(i8* %34) #13
  br label %35

35:                                               ; preds = %26, %33
  %36 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %37 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %36, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %37, align 8
  %38 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %39 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %38, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %39, align 8
  %40 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  br label %41

41:                                               ; preds = %21, %35
  %42 = phi %struct.sctp_nets* [ %22, %21 ], [ %40, %35 ]
  %43 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %42, i64 0, i32 47
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %42, i64 0, i32 3, i32 2
  %48 = load %struct.sctp_ifa*, %struct.sctp_ifa** %47, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %48) #13
  %49 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %50 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %49, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %50, align 8
  %51 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi %struct.sctp_nets* [ %42, %41 ], [ %51, %46 ]
  %54 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %53, i64 0, i32 47
  store i8 0, i8* %54, align 1
  %55 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %56 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %55, i64 0, i32 37
  %57 = load i16, i16* %56, align 4
  %58 = and i16 %57, -2
  store i16 %58, i16* %56, align 4
  %59 = bitcast %struct.sctp_nets** %14 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @free(i8* %60) #13
  %61 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %62

62:                                               ; preds = %17, %52
  store %struct.sctp_nets* null, %struct.sctp_nets** %14, align 8
  br label %216

63:                                               ; preds = %6
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %7, i64 0, i32 6, i32 0
  %65 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %64, align 8
  %66 = icmp eq %struct.sctp_tmit_chunk* %65, null
  br i1 %66, label %67, label %6

67:                                               ; preds = %63, %2
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %69 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %68, align 8
  %70 = icmp eq %struct.sctp_tmit_chunk* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %73 = tail call noalias i8* @malloc(i64 %72) #13
  %74 = icmp eq i8* %73, null
  br i1 %74, label %457, label %96

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %69, i64 0, i32 6, i32 0
  %77 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %76, align 8
  %78 = icmp eq %struct.sctp_tmit_chunk* %77, null
  %79 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %69, i64 0, i32 6, i32 1
  %80 = bitcast %struct.sctp_tmit_chunk*** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %77, i64 0, i32 6, i32 1
  %83 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %84 = select i1 %78, %struct.sctp_tmit_chunk*** %83, %struct.sctp_tmit_chunk*** %82
  %85 = bitcast %struct.sctp_tmit_chunk*** %84 to i64*
  store i64 %81, i64* %85, align 8
  %86 = bitcast %struct.sctp_tmit_chunk** %76 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %struct.sctp_tmit_chunk*** %79 to i64**
  %89 = load i64*, i64** %88, align 8
  store i64 %87, i64* %89, align 8
  %90 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %91 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %69, i64 0, i32 14
  store i8 0, i8* %91, align 8
  %92 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %93 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %94 = load i16, i16* %93, align 2
  %95 = add i16 %94, -1
  store i16 %95, i16* %93, align 2
  br label %102

96:                                               ; preds = %71
  %97 = bitcast i8* %73 to %struct.sctp_tmit_chunk*
  %98 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %99 = getelementptr inbounds i8, i8* %73, i64 104
  %100 = bitcast i8* %99 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %100, align 8
  %101 = getelementptr inbounds i8, i8* %73, i64 144
  store i8 0, i8* %101, align 8
  br label %102

102:                                              ; preds = %96, %75
  %103 = phi %struct.sctp_tmit_chunk* [ %69, %75 ], [ %97, %96 ]
  %104 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 91
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 19
  store i8 0, i8* %107, align 1
  %108 = bitcast %struct.sctp_tmit_chunk* %103 to %struct.chk_id*
  %109 = bitcast %struct.sctp_tmit_chunk* %103 to i8*
  store i8 -64, i8* %109, align 8
  %110 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %108, i64 0, i32 1
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 9
  store i16 0, i16* %111, align 2
  %112 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 1
  store %struct.sctp_association* %1, %struct.sctp_association** %112, align 8
  %113 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 5
  store %struct.sctp_nets* null, %struct.sctp_nets** %113, align 8
  %114 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %115 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 3
  store %struct.mbuf* %114, %struct.mbuf** %115, align 8
  %116 = icmp eq %struct.mbuf* %114, null
  br i1 %116, label %117, label %200

117:                                              ; preds = %102
  %118 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 14
  %119 = load i8, i8* %118, align 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 13
  %123 = load i16, i16* %122, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %123, i32 0) #13
  store i8 0, i8* %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %125, label %198, label %126

126:                                              ; preds = %124
  %127 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %128 = icmp eq %struct.sctp_nets* %127, null
  br i1 %128, label %175, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %127, i64 0, i32 17
  %131 = atomicrmw add i32* %130, i32 -1 seq_cst
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %174

133:                                              ; preds = %129
  %134 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %135 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %134, i64 0, i32 3, i32 0
  %136 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %135, align 8
  %137 = icmp eq %struct.sctp_rtentry* %136, null
  br i1 %137, label %153, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %136, i64 0, i32 3
  %140 = load i64, i64* %139, align 8
  %141 = icmp sgt i64 %140, 1
  %142 = add nsw i64 %140, -1
  store i64 %142, i64* %139, align 8
  %143 = icmp sgt i64 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %138
  %146 = bitcast %struct.sctp_rtentry* %136 to i8*
  tail call void @free(i8* %146) #13
  br label %147

147:                                              ; preds = %138, %145
  %148 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %149 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %148, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %149, align 8
  %150 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %151 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %150, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %151, align 8
  %152 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  br label %153

153:                                              ; preds = %133, %147
  %154 = phi %struct.sctp_nets* [ %134, %133 ], [ %152, %147 ]
  %155 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %154, i64 0, i32 47
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %164, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %154, i64 0, i32 3, i32 2
  %160 = load %struct.sctp_ifa*, %struct.sctp_ifa** %159, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %160) #13
  %161 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %162 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %161, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %162, align 8
  %163 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  br label %164

164:                                              ; preds = %153, %158
  %165 = phi %struct.sctp_nets* [ %154, %153 ], [ %163, %158 ]
  %166 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %165, i64 0, i32 47
  store i8 0, i8* %166, align 1
  %167 = load %struct.sctp_nets*, %struct.sctp_nets** %113, align 8
  %168 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %167, i64 0, i32 37
  %169 = load i16, i16* %168, align 4
  %170 = and i16 %169, -2
  store i16 %170, i16* %168, align 4
  %171 = bitcast %struct.sctp_nets** %113 to i8**
  %172 = load i8*, i8** %171, align 8
  tail call void @free(i8* %172) #13
  %173 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %174

174:                                              ; preds = %129, %164
  store %struct.sctp_nets* null, %struct.sctp_nets** %113, align 8
  br label %175

175:                                              ; preds = %126, %174
  %176 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i32
  %179 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %180 = icmp ult i32 %179, %178
  br i1 %180, label %185, label %181

181:                                              ; preds = %175
  %182 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %183 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %184 = icmp ugt i32 %182, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %181, %175
  tail call void @free(i8* %109) #13
  %186 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %457

187:                                              ; preds = %181
  %188 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %188, align 8
  %189 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %190 = bitcast %struct.sctp_tmit_chunk*** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 6, i32 1
  %193 = bitcast %struct.sctp_tmit_chunk*** %192 to i64*
  store i64 %191, i64* %193, align 8
  %194 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %189, align 8
  store %struct.sctp_tmit_chunk* %103, %struct.sctp_tmit_chunk** %194, align 8
  store %struct.sctp_tmit_chunk** %188, %struct.sctp_tmit_chunk*** %189, align 8
  %195 = load i16, i16* %176, align 2
  %196 = add i16 %195, 1
  store i16 %196, i16* %176, align 2
  %197 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %457

198:                                              ; preds = %124
  tail call void @free(i8* %109) #13
  %199 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %457

200:                                              ; preds = %102
  %201 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %114, i64 0, i32 0, i32 2
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 32
  store i8* %203, i8** %201, align 8
  %204 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 7
  store i32 0, i32* %204, align 8
  %205 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 8
  store i16 0, i16* %205, align 4
  %206 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %206, align 8
  %207 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 1
  %208 = bitcast %struct.sctp_tmit_chunk*** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %103, i64 0, i32 6, i32 1
  %211 = bitcast %struct.sctp_tmit_chunk*** %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %207, align 8
  store %struct.sctp_tmit_chunk* %103, %struct.sctp_tmit_chunk** %212, align 8
  store %struct.sctp_tmit_chunk** %206, %struct.sctp_tmit_chunk*** %207, align 8
  %213 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 83
  %214 = load i32, i32* %213, align 8
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %213, align 8
  br label %216

216:                                              ; preds = %11, %62, %200
  %217 = phi %struct.sctp_tmit_chunk* [ %7, %62 ], [ %7, %11 ], [ %103, %200 ]
  %218 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %217, i64 0, i32 3
  %219 = load %struct.mbuf*, %struct.mbuf** %218, align 8
  %220 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %219, i64 0, i32 0, i32 3
  store i32 0, i32* %220, align 8
  %221 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 20, i32 0
  %222 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %221, align 8
  %223 = icmp eq %struct.sctp_tmit_chunk* %222, null
  br i1 %223, label %246, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 168
  br label %226

226:                                              ; preds = %224, %241
  %227 = phi %struct.sctp_tmit_chunk* [ %222, %224 ], [ %244, %241 ]
  %228 = phi i32 [ 0, %224 ], [ %242, %241 ]
  %229 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %227, i64 0, i32 7
  %230 = load i32, i32* %229, align 8
  switch i32 %230, label %246 [
    i32 30010, label %231
    i32 40010, label %231
  ]

231:                                              ; preds = %226, %226
  %232 = load i8, i8* %225, align 2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %239

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %227, i64 0, i32 0, i32 0, i32 10
  %236 = load i8, i8* %235, align 1
  %237 = and i8 %236, 4
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %234, %231
  %240 = add i32 %228, 1
  br label %241

241:                                              ; preds = %234, %239
  %242 = phi i32 [ %240, %239 ], [ %228, %234 ]
  %243 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %227, i64 0, i32 6, i32 0
  %244 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %243, align 8
  %245 = icmp eq %struct.sctp_tmit_chunk* %244, null
  br i1 %245, label %246, label %226

246:                                              ; preds = %241, %226, %216
  %247 = phi i32 [ 0, %216 ], [ %228, %226 ], [ %242, %241 ]
  %248 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 168
  %249 = load i8, i8* %248, align 2
  %250 = icmp eq i8 %249, 0
  %251 = select i1 %250, i32 2, i32 3
  %252 = shl i32 %247, %251
  %253 = add i32 %252, 8
  %254 = load %struct.mbuf*, %struct.mbuf** %218, align 8
  %255 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 0, i32 4
  %256 = load i32, i32* %255, align 4
  %257 = and i32 %256, 1
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %283, label %259

259:                                              ; preds = %246
  %260 = and i32 %256, 8
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %295

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %264 = load i32*, i32** %263, align 8
  %265 = load volatile i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %295

267:                                              ; preds = %262
  %268 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %271 = load i32, i32* %270, align 8
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds i8, i8* %269, i64 %272
  %274 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 0, i32 2
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 0, i32 3
  %277 = load i32, i32* %276, align 8
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %275, i64 %278
  %280 = ptrtoint i8* %273 to i64
  %281 = ptrtoint i8* %279 to i64
  %282 = sub i64 %280, %281
  br label %295

283:                                              ; preds = %246
  %284 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 1
  %285 = getelementptr inbounds %union.anon.4, %union.anon.4* %284, i64 1
  %286 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 0, i32 2
  %287 = load i8*, i8** %286, align 8
  %288 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %254, i64 0, i32 0, i32 3
  %289 = load i32, i32* %288, align 8
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %287, i64 %290
  %292 = ptrtoint %union.anon.4* %285 to i64
  %293 = ptrtoint i8* %291 to i64
  %294 = sub i64 %292, %293
  br label %295

295:                                              ; preds = %259, %267, %262, %283
  %296 = phi i64 [ %294, %283 ], [ %282, %267 ], [ 0, %262 ], [ 0, %259 ]
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 53
  %299 = load i32, i32* %298, align 4
  %300 = add i32 %299, -32
  %301 = icmp ult i32 %300, %297
  %302 = select i1 %301, i32 %300, i32 %297
  %303 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %304 = and i32 %303, 268435456
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %309, label %306

306:                                              ; preds = %295
  %307 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 58
  %308 = load i32, i32* %307, align 8
  tail call void @sctp_misc_ints(i8 zeroext 123, i32 255, i32 0, i32 %247, i32 %308) #13
  br label %309

309:                                              ; preds = %295, %306
  %310 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 58
  %311 = load i32, i32* %310, align 8
  %312 = icmp ult i32 %302, %253
  br i1 %312, label %313, label %361

313:                                              ; preds = %309
  %314 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %315 = and i32 %314, 268435456
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %318, label %317

317:                                              ; preds = %313
  tail call void @sctp_misc_ints(i8 zeroext 123, i32 255, i32 255, i32 %302, i32 %253) #13
  br label %318

318:                                              ; preds = %313, %317
  %319 = add i32 %302, -8
  %320 = load i8, i8* %248, align 2
  %321 = icmp eq i8 %320, 0
  %322 = select i1 %321, i32 2, i32 3
  %323 = lshr i32 %319, %322
  %324 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %221, align 8
  %325 = icmp eq %struct.sctp_tmit_chunk* %324, null
  br i1 %325, label %351, label %326

326:                                              ; preds = %318
  %327 = icmp eq i32 %323, 0
  br i1 %327, label %337, label %330

328:                                              ; preds = %330
  %329 = icmp eq i32 %336, %323
  br i1 %329, label %337, label %330

330:                                              ; preds = %326, %328
  %331 = phi i32 [ %336, %328 ], [ 0, %326 ]
  %332 = phi %struct.sctp_tmit_chunk* [ %334, %328 ], [ %324, %326 ]
  %333 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %332, i64 0, i32 6, i32 0
  %334 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %333, align 8
  %335 = icmp eq %struct.sctp_tmit_chunk* %334, null
  %336 = add nuw nsw i32 %331, 1
  br i1 %335, label %337, label %328

337:                                              ; preds = %330, %328, %326
  %338 = phi %struct.sctp_tmit_chunk* [ %324, %326 ], [ %332, %330 ], [ %334, %328 ]
  %339 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %340 = and i32 %339, 268435456
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %347, label %342

342:                                              ; preds = %337
  %343 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %338, i64 0, i32 0, i32 0, i32 0
  %344 = load i32, i32* %343, align 8
  %345 = load i32, i32* %310, align 8
  tail call void @sctp_misc_ints(i8 zeroext 123, i32 255, i32 %323, i32 %344, i32 %345) #13
  %346 = load i8, i8* %248, align 2
  br label %347

347:                                              ; preds = %342, %337
  %348 = phi i8 [ %346, %342 ], [ %320, %337 ]
  %349 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %338, i64 0, i32 0, i32 0, i32 0
  %350 = load i32, i32* %349, align 8
  br label %351

351:                                              ; preds = %318, %347
  %352 = phi i8 [ %348, %347 ], [ %320, %318 ]
  %353 = phi i32 [ %350, %347 ], [ %311, %318 ]
  %354 = icmp eq i8 %352, 0
  br i1 %354, label %358, label %355

355:                                              ; preds = %351
  %356 = shl i32 %323, 3
  %357 = add i32 %356, 8
  br label %361

358:                                              ; preds = %351
  %359 = shl nuw i32 %323, 2
  %360 = add i32 %359, 8
  br label %361

361:                                              ; preds = %355, %358, %309
  %362 = phi i32 [ %353, %355 ], [ %353, %358 ], [ %311, %309 ]
  %363 = phi i32 [ %357, %355 ], [ %360, %358 ], [ %253, %309 ]
  %364 = phi i32 [ %323, %355 ], [ %323, %358 ], [ %247, %309 ]
  %365 = trunc i32 %363 to i16
  %366 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %217, i64 0, i32 10
  store i16 %365, i16* %366, align 8
  %367 = load %struct.mbuf*, %struct.mbuf** %218, align 8
  %368 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %367, i64 0, i32 0, i32 2
  %369 = bitcast i8** %368 to %struct.sctp_forward_tsn_chunk**
  %370 = load %struct.sctp_forward_tsn_chunk*, %struct.sctp_forward_tsn_chunk** %369, align 8
  %371 = tail call i16 @llvm.bswap.i16(i16 %365) #13
  %372 = getelementptr inbounds %struct.sctp_forward_tsn_chunk, %struct.sctp_forward_tsn_chunk* %370, i64 0, i32 0, i32 2
  store i16 %371, i16* %372, align 1
  %373 = getelementptr inbounds %struct.sctp_forward_tsn_chunk, %struct.sctp_forward_tsn_chunk* %370, i64 0, i32 0, i32 1
  store i8 0, i8* %373, align 1
  %374 = load i8, i8* %248, align 2
  %375 = icmp eq i8 %374, 0
  %376 = getelementptr inbounds %struct.sctp_forward_tsn_chunk, %struct.sctp_forward_tsn_chunk* %370, i64 0, i32 0, i32 0
  %377 = select i1 %375, i8 -64, i8 -62
  store i8 %377, i8* %376, align 1
  %378 = tail call i32 @llvm.bswap.i32(i32 %362) #13
  %379 = getelementptr inbounds %struct.sctp_forward_tsn_chunk, %struct.sctp_forward_tsn_chunk* %370, i64 0, i32 1
  store i32 %378, i32* %379, align 1
  %380 = load i16, i16* %366, align 8
  %381 = zext i16 %380 to i32
  %382 = load %struct.mbuf*, %struct.mbuf** %218, align 8
  %383 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %382, i64 0, i32 0, i32 3
  store i32 %381, i32* %383, align 8
  %384 = getelementptr inbounds %struct.sctp_forward_tsn_chunk, %struct.sctp_forward_tsn_chunk* %370, i64 1
  %385 = load i8, i8* %248, align 2
  %386 = icmp eq i8 %385, 0
  %387 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %221, align 8
  %388 = icmp ne %struct.sctp_tmit_chunk* %387, null
  %389 = icmp ne i32 %364, 0
  %390 = and i1 %389, %388
  br i1 %390, label %391, label %457

391:                                              ; preds = %361
  %392 = bitcast %struct.sctp_forward_tsn_chunk* %384 to %struct.sctp_strseq_mid*
  %393 = select i1 %386, %struct.sctp_strseq_mid* null, %struct.sctp_strseq_mid* %392
  %394 = bitcast %struct.sctp_forward_tsn_chunk* %384 to %struct.sctp_strseq*
  %395 = select i1 %386, %struct.sctp_strseq* %394, %struct.sctp_strseq* null
  br label %396

396:                                              ; preds = %455, %391
  %397 = phi i8 [ %456, %455 ], [ %385, %391 ]
  %398 = phi %struct.sctp_tmit_chunk* [ %451, %455 ], [ %387, %391 ]
  %399 = phi i32 [ %449, %455 ], [ 0, %391 ]
  %400 = phi %struct.sctp_strseq_mid* [ %448, %455 ], [ %393, %391 ]
  %401 = phi %struct.sctp_strseq* [ %447, %455 ], [ %395, %391 ]
  %402 = icmp eq i8 %397, 0
  br i1 %402, label %403, label %408

403:                                              ; preds = %396
  %404 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 10
  %405 = load i8, i8* %404, align 1
  %406 = and i8 %405, 4
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %408, label %446

408:                                              ; preds = %403, %396
  %409 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 0
  %410 = load i32, i32* %409, align 8
  %411 = icmp eq i32 %410, %362
  br i1 %411, label %412, label %415

412:                                              ; preds = %408
  %413 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 13
  store i8 0, i8* %413, align 8
  %414 = load i8, i8* %248, align 2
  br label %415

415:                                              ; preds = %412, %408
  %416 = phi i8 [ %414, %412 ], [ %397, %408 ]
  %417 = icmp eq i8 %416, 0
  %418 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 2
  %419 = load i16, i16* %418, align 8
  %420 = tail call i16 @llvm.bswap.i16(i16 %419) #13
  br i1 %417, label %434, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %struct.sctp_strseq_mid, %struct.sctp_strseq_mid* %400, i64 0, i32 0
  store i16 %420, i16* %422, align 4
  %423 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 10
  %424 = load i8, i8* %423, align 1
  %425 = and i8 %424, 4
  %426 = getelementptr inbounds %struct.sctp_strseq_mid, %struct.sctp_strseq_mid* %400, i64 0, i32 1
  %427 = zext i8 %425 to i16
  %428 = shl nuw nsw i16 %427, 6
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 1
  %430 = load i32, i32* %429, align 4
  %431 = tail call i32 @llvm.bswap.i32(i32 %430) #13
  %432 = getelementptr inbounds %struct.sctp_strseq_mid, %struct.sctp_strseq_mid* %400, i64 0, i32 2
  store i32 %431, i32* %432, align 4
  %433 = getelementptr inbounds %struct.sctp_strseq_mid, %struct.sctp_strseq_mid* %400, i64 1
  br label %442

434:                                              ; preds = %415
  %435 = getelementptr inbounds %struct.sctp_strseq, %struct.sctp_strseq* %401, i64 0, i32 0
  store i16 %420, i16* %435, align 1
  %436 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 0, i32 0, i32 1
  %437 = load i32, i32* %436, align 4
  %438 = trunc i32 %437 to i16
  %439 = tail call i16 @llvm.bswap.i16(i16 %438) #13
  %440 = getelementptr inbounds %struct.sctp_strseq, %struct.sctp_strseq* %401, i64 0, i32 1
  store i16 %439, i16* %440, align 1
  %441 = getelementptr inbounds %struct.sctp_strseq, %struct.sctp_strseq* %401, i64 1
  br label %442

442:                                              ; preds = %434, %421
  %443 = phi %struct.sctp_strseq* [ %401, %421 ], [ %441, %434 ]
  %444 = phi %struct.sctp_strseq_mid* [ %433, %421 ], [ %400, %434 ]
  %445 = add nuw i32 %399, 1
  br label %446

446:                                              ; preds = %403, %442
  %447 = phi %struct.sctp_strseq* [ %443, %442 ], [ %401, %403 ]
  %448 = phi %struct.sctp_strseq_mid* [ %444, %442 ], [ %400, %403 ]
  %449 = phi i32 [ %445, %442 ], [ %399, %403 ]
  %450 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %398, i64 0, i32 6, i32 0
  %451 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %450, align 8
  %452 = icmp ne %struct.sctp_tmit_chunk* %451, null
  %453 = icmp ult i32 %449, %364
  %454 = and i1 %453, %452
  br i1 %454, label %455, label %457

455:                                              ; preds = %446
  %456 = load i8, i8* %248, align 2
  br label %396

457:                                              ; preds = %446, %361, %71, %198, %187, %185
  ret void
}

declare void @sctp_misc_ints(i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #5

declare void @sctp_slide_mapping_arrays(%struct.sctp_tcb*) local_unnamed_addr #5

declare void @sctp_set_rwnd(%struct.sctp_tcb*, %struct.sctp_association*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_abort_tcb(%struct.sctp_tcb*, %struct.mbuf*, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 115
  %5 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %4, align 8
  %6 = icmp eq %struct.sctp_auth_chklist* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %5, i64 0, i32 0, i64 6
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %50, label %11

11:                                               ; preds = %7
  %12 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 163
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %19 = icmp eq %struct.mbuf* %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  store i8* %23, i8** %21, align 8
  %24 = bitcast i8* %23 to i64*
  store i64 15, i64* %24, align 1
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 124
  %26 = load i16, i16* %25, align 8
  %27 = tail call i32 @sctp_get_hmac_digest_len(i16 zeroext %26) #13
  %28 = add i32 %27, 8
  %29 = trunc i32 %28 to i16
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #13
  %31 = getelementptr inbounds i8, i8* %22, i64 34
  %32 = bitcast i8* %31 to i16*
  store i16 %30, i16* %32, align 1
  %33 = load i16, i16* %25, align 8
  %34 = tail call i16 @llvm.bswap.i16(i16 %33) #13
  %35 = getelementptr inbounds i8, i8* %22, i64 38
  %36 = bitcast i8* %35 to i16*
  store i16 %34, i16* %36, align 1
  %37 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %18, i64 0, i32 0, i32 3
  store i32 %28, i32* %37, align 8
  br label %38

38:                                               ; preds = %38, %20
  %39 = phi %struct.mbuf* [ %41, %38 ], [ %18, %20 ]
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 0
  %41 = load %struct.mbuf*, %struct.mbuf** %40, align 8
  %42 = icmp eq %struct.mbuf* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38
  %44 = bitcast i8* %23 to %struct.sctp_auth_chunk*
  br label %45

45:                                               ; preds = %11, %13, %17, %43
  %46 = phi %struct.mbuf* [ null, %11 ], [ null, %13 ], [ null, %17 ], [ %39, %43 ]
  %47 = phi %struct.sctp_auth_chunk* [ null, %11 ], [ null, %13 ], [ null, %17 ], [ %44, %43 ]
  %48 = phi %struct.mbuf* [ null, %11 ], [ null, %13 ], [ null, %17 ], [ %18, %43 ]
  %49 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %50

50:                                               ; preds = %3, %7, %45
  %51 = phi %struct.mbuf* [ null, %3 ], [ null, %7 ], [ %46, %45 ]
  %52 = phi %struct.sctp_auth_chunk* [ null, %3 ], [ null, %7 ], [ %47, %45 ]
  %53 = phi %struct.mbuf* [ null, %3 ], [ null, %7 ], [ %48, %45 ]
  %54 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %55 = icmp eq %struct.mbuf* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = icmp eq %struct.mbuf* %53, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %56
  tail call void @m_freem(%struct.mbuf* nonnull %53) #13
  br label %59

59:                                               ; preds = %56, %58
  %60 = icmp eq %struct.mbuf* %1, null
  br i1 %60, label %146, label %61

61:                                               ; preds = %59
  tail call void @m_freem(%struct.mbuf* nonnull %1) #13
  br label %146

62:                                               ; preds = %50
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 0
  store %struct.mbuf* %1, %struct.mbuf** %63, align 8
  %64 = icmp eq %struct.mbuf* %1, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %62, %65
  %66 = phi i32 [ %74, %65 ], [ 0, %62 ]
  %67 = phi %struct.mbuf* [ %72, %65 ], [ %1, %62 ]
  %68 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %67, i64 0, i32 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %66
  %71 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %67, i64 0, i32 0, i32 0
  %72 = load %struct.mbuf*, %struct.mbuf** %71, align 8
  %73 = icmp eq %struct.mbuf* %72, null
  %74 = and i32 %70, 65535
  br i1 %73, label %75, label %65

75:                                               ; preds = %65
  %76 = trunc i32 %70 to i16
  br label %77

77:                                               ; preds = %75, %62
  %78 = phi %struct.mbuf* [ null, %62 ], [ %67, %75 ]
  %79 = phi i16 [ 0, %62 ], [ %76, %75 ]
  %80 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 3
  store i32 4, i32* %80, align 8
  %81 = add i16 %79, 4
  %82 = add i16 %79, 7
  %83 = and i16 %82, -4
  %84 = sub i16 %83, %81
  %85 = icmp eq %struct.mbuf* %53, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %77
  %87 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 2
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 32
  store i8* %89, i8** %87, align 8
  br label %92

90:                                               ; preds = %77
  %91 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %51, i64 0, i32 0, i32 0
  store %struct.mbuf* %54, %struct.mbuf** %91, align 8
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi %struct.mbuf* [ %54, %86 ], [ %53, %90 ]
  %94 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %95 = load %struct.sctp_nets*, %struct.sctp_nets** %94, align 8
  %96 = icmp eq %struct.sctp_nets* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %99 = load %struct.sctp_nets*, %struct.sctp_nets** %98, align 8
  br label %100

100:                                              ; preds = %92, %97
  %101 = phi %struct.sctp_nets* [ %99, %97 ], [ %95, %92 ]
  %102 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %54, i64 0, i32 0, i32 2
  %103 = bitcast i8** %102 to %struct.sctp_abort_chunk**
  %104 = load %struct.sctp_abort_chunk*, %struct.sctp_abort_chunk** %103, align 8
  %105 = getelementptr inbounds %struct.sctp_abort_chunk, %struct.sctp_abort_chunk* %104, i64 0, i32 0, i32 0
  store i8 6, i8* %105, align 1
  %106 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 49
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %100
  %110 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 48
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %100, %109
  %113 = phi i8 [ 1, %109 ], [ 0, %100 ]
  %114 = phi i32 [ %111, %109 ], [ %107, %100 ]
  %115 = getelementptr inbounds %struct.sctp_abort_chunk, %struct.sctp_abort_chunk* %104, i64 0, i32 0, i32 1
  store i8 %113, i8* %115, align 1
  %116 = tail call i16 @llvm.bswap.i16(i16 %81) #13
  %117 = getelementptr inbounds %struct.sctp_abort_chunk, %struct.sctp_abort_chunk* %104, i64 0, i32 0, i32 2
  store i16 %116, i16* %117, align 1
  %118 = zext i16 %84 to i32
  %119 = icmp eq i16 %84, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %112
  %121 = icmp eq %struct.mbuf* %78, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %120
  %123 = tail call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* nonnull %78, i32 %118) #13
  %124 = icmp eq %struct.mbuf* %123, null
  br i1 %124, label %125, label %126

125:                                              ; preds = %122, %120
  tail call void @m_freem(%struct.mbuf* %93) #13
  br label %146

126:                                              ; preds = %112, %122
  %127 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %128 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %127, align 8
  %129 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %101, i64 0, i32 3, i32 1
  %130 = bitcast %union.sctp_sockstore* %129 to %struct.sockaddr*
  %131 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  %132 = load i16, i16* %131, align 8
  %133 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %128, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %134 = load i16, i16* %133, align 2
  %135 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 12
  %136 = load i16, i16* %135, align 8
  %137 = tail call i32 @llvm.bswap.i32(i32 %114) #13
  %138 = tail call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %128, %struct.sctp_tcb* %0, %struct.sctp_nets* %101, %struct.sockaddr* %130, %struct.mbuf* %93, i32 0, %struct.sctp_auth_chunk* %52, i16 zeroext %132, i32 1, i32 0, i16 zeroext %134, i16 zeroext %136, i32 %137)
  switch i32 %138, label %144 [
    i32 0, label %142
    i32 105, label %139
  ]

139:                                              ; preds = %126
  %140 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 181
  store i8 1, i8* %140, align 1
  %141 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %144

142:                                              ; preds = %126
  %143 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 181
  store i8 0, i8* %143, align 1
  br label %144

144:                                              ; preds = %126, %139, %142
  %145 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %146

146:                                              ; preds = %61, %59, %144, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.mbuf* @sctp_add_auth_chunk(%struct.mbuf*, %struct.mbuf**, %struct.sctp_auth_chunk**, i32*, %struct.sctp_tcb* readonly, i8 zeroext) local_unnamed_addr #2 {
  %7 = icmp eq %struct.mbuf** %1, null
  %8 = icmp eq %struct.sctp_auth_chunk** %2, null
  %9 = or i1 %7, %8
  %10 = icmp eq i32* %3, null
  %11 = or i1 %9, %10
  %12 = icmp eq %struct.sctp_tcb* %4, null
  %13 = or i1 %11, %12
  br i1 %13, label %94, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %4, i64 0, i32 7, i32 163
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %94, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %4, i64 0, i32 7, i32 115
  %20 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %19, align 8
  %21 = icmp eq %struct.sctp_auth_chklist* %20, null
  br i1 %21, label %94, label %22

22:                                               ; preds = %18
  %23 = zext i8 %5 to i64
  %24 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %20, i64 0, i32 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %94, label %27

27:                                               ; preds = %22
  %28 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %29 = icmp eq %struct.mbuf* %28, null
  br i1 %29, label %94, label %30

30:                                               ; preds = %27
  %31 = icmp eq %struct.mbuf* %0, null
  %32 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %28, i64 0, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  br i1 %31, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  store i8* %35, i8** %32, align 8
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi i8* [ %35, %34 ], [ %33, %30 ]
  %38 = bitcast i8* %37 to i64*
  store i64 15, i64* %38, align 1
  %39 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %4, i64 0, i32 7, i32 124
  %40 = load i16, i16* %39, align 8
  %41 = tail call i32 @sctp_get_hmac_digest_len(i16 zeroext %40) #13
  %42 = add i32 %41, 8
  %43 = trunc i32 %42 to i16
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #13
  %45 = getelementptr inbounds i8, i8* %37, i64 2
  %46 = bitcast i8* %45 to i16*
  store i16 %44, i16* %46, align 1
  %47 = load i16, i16* %39, align 8
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #13
  %49 = getelementptr inbounds i8, i8* %37, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 1
  store i32 0, i32* %3, align 4
  br i1 %31, label %51, label %53

51:                                               ; preds = %36
  %52 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %28, i64 0, i32 0, i32 3
  store i32 %42, i32* %52, align 8
  br label %64

53:                                               ; preds = %36, %53
  %54 = phi i32 [ %58, %53 ], [ 0, %36 ]
  %55 = phi %struct.mbuf* [ %60, %53 ], [ %0, %36 ]
  %56 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %55, i64 0, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %54, %57
  store i32 %58, i32* %3, align 4
  %59 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %55, i64 0, i32 0, i32 0
  %60 = load %struct.mbuf*, %struct.mbuf** %59, align 8
  %61 = icmp eq %struct.mbuf* %60, null
  br i1 %61, label %62, label %53

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %28, i64 0, i32 0, i32 3
  store i32 %42, i32* %63, align 8
  br i1 %31, label %64, label %65

64:                                               ; preds = %51, %62
  br label %83

65:                                               ; preds = %62
  %66 = load %struct.mbuf*, %struct.mbuf** %1, align 8
  %67 = icmp eq %struct.mbuf* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %65, %68
  %69 = phi %struct.mbuf* [ %71, %68 ], [ %0, %65 ]
  %70 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %69, i64 0, i32 0, i32 0
  %71 = load %struct.mbuf*, %struct.mbuf** %70, align 8
  %72 = icmp eq %struct.mbuf* %71, null
  br i1 %72, label %73, label %68

73:                                               ; preds = %68, %65
  %74 = phi %struct.mbuf* [ %66, %65 ], [ %69, %68 ]
  %75 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %74, i64 0, i32 0, i32 0
  store %struct.mbuf* %28, %struct.mbuf** %75, align 8
  br label %76

76:                                               ; preds = %79, %73
  %77 = phi %struct.mbuf* [ %28, %73 ], [ %81, %79 ]
  %78 = icmp eq %struct.mbuf* %77, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %77, i64 0, i32 0, i32 0
  %81 = load %struct.mbuf*, %struct.mbuf** %80, align 8
  %82 = icmp eq %struct.mbuf* %81, null
  br i1 %82, label %88, label %76

83:                                               ; preds = %64, %83
  %84 = phi %struct.mbuf* [ %86, %83 ], [ %28, %64 ]
  %85 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 0
  %86 = load %struct.mbuf*, %struct.mbuf** %85, align 8
  %87 = icmp eq %struct.mbuf* %86, null
  br i1 %87, label %88, label %83

88:                                               ; preds = %79, %83
  %89 = phi %struct.mbuf* [ %84, %83 ], [ %77, %79 ]
  %90 = phi %struct.mbuf* [ %28, %83 ], [ %0, %79 ]
  store %struct.mbuf* %89, %struct.mbuf** %1, align 8
  br label %91

91:                                               ; preds = %76, %88
  %92 = phi %struct.mbuf* [ %90, %88 ], [ %0, %76 ]
  %93 = bitcast %struct.sctp_auth_chunk** %2 to i8**
  store i8* %37, i8** %93, align 8
  br label %94

94:                                               ; preds = %91, %27, %18, %22, %14, %6
  %95 = phi %struct.mbuf* [ %0, %6 ], [ %0, %14 ], [ %0, %22 ], [ %0, %18 ], [ %0, %27 ], [ %92, %91 ]
  ret %struct.mbuf* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_shutdown_complete(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #2 {
  %4 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %5 = icmp eq %struct.mbuf* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 0
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 48
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 49
  %10 = select i1 %7, i32* %9, i32* %8
  %11 = xor i1 %7, true
  %12 = zext i1 %11 to i8
  %13 = load i32, i32* %10, align 4
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 2
  %15 = bitcast i8** %14 to %struct.sctp_shutdown_complete_chunk**
  %16 = load %struct.sctp_shutdown_complete_chunk*, %struct.sctp_shutdown_complete_chunk** %15, align 8
  %17 = getelementptr inbounds %struct.sctp_shutdown_complete_chunk, %struct.sctp_shutdown_complete_chunk* %16, i64 0, i32 0, i32 0
  store i8 14, i8* %17, align 1
  %18 = getelementptr inbounds %struct.sctp_shutdown_complete_chunk, %struct.sctp_shutdown_complete_chunk* %16, i64 0, i32 0, i32 1
  store i8 %12, i8* %18, align 1
  %19 = getelementptr inbounds %struct.sctp_shutdown_complete_chunk, %struct.sctp_shutdown_complete_chunk* %16, i64 0, i32 0, i32 2
  store i16 1024, i16* %19, align 1
  %20 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  store i32 4, i32* %20, align 8
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %22 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %21, align 8
  %23 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 3, i32 1
  %24 = bitcast %union.sctp_sockstore* %23 to %struct.sockaddr*
  %25 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %22, i64 0, i32 0, i32 0, i32 13, i32 3, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 12
  %28 = load i16, i16* %27, align 8
  %29 = tail call i32 @llvm.bswap.i32(i32 %13) #13
  %30 = tail call fastcc i32 @sctp_lowlevel_chunk_output(%struct.sctp_inpcb* %22, %struct.sctp_tcb* %0, %struct.sctp_nets* %1, %struct.sockaddr* %24, %struct.mbuf* nonnull %4, i32 0, %struct.sctp_auth_chunk* null, i16 zeroext 0, i32 1, i32 0, i16 zeroext %26, i16 zeroext %28, i32 %29)
  switch i32 %30, label %36 [
    i32 0, label %34
    i32 105, label %31
  ]

31:                                               ; preds = %6
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 181
  store i8 1, i8* %32, align 1
  %33 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 99), i32 1 seq_cst
  br label %36

34:                                               ; preds = %6
  %35 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 181
  store i8 0, i8* %35, align 1
  br label %36

36:                                               ; preds = %6, %31, %34
  %37 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %38

38:                                               ; preds = %3, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_shutdown_complete2(%struct.sockaddr* nocapture readonly, %struct.sockaddr* nocapture readonly, %struct.sctphdr* nocapture readonly, i32, i16 zeroext) local_unnamed_addr #2 {
  tail call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %0, %struct.sockaddr* %1, %struct.sctphdr* %2, i32 0, i8 zeroext 14, %struct.mbuf* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_send_resp_msg(%struct.sockaddr* nocapture readonly, %struct.sockaddr* nocapture readonly, %struct.sctphdr* nocapture readonly, i32, i8 zeroext, %struct.mbuf*) unnamed_addr #2 {
  %7 = icmp ne %struct.mbuf* %5, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %6, %8
  %9 = phi %struct.mbuf* [ %12, %8 ], [ %5, %6 ]
  %10 = phi i32 [ %16, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %9, i64 0, i32 0, i32 0
  %12 = load %struct.mbuf*, %struct.mbuf** %11, align 8
  %13 = icmp eq %struct.mbuf* %12, null
  %14 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %9, i64 0, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, %10
  br i1 %13, label %17, label %8

17:                                               ; preds = %8
  %18 = srem i32 %16, 4
  %19 = icmp eq i32 %18, 0
  %20 = sub nsw i32 4, %18
  %21 = select i1 %19, i32 0, i32 %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = select i1 %13, %struct.mbuf* %9, %struct.mbuf* null
  %25 = tail call %struct.mbuf* @sctp_add_pad_tombuf(%struct.mbuf* %24, i32 %21) #13
  %26 = icmp eq %struct.mbuf* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @m_freem(%struct.mbuf* nonnull %5) #13
  br label %107

28:                                               ; preds = %6, %17, %23
  %29 = phi i32 [ %16, %23 ], [ %16, %17 ], [ 0, %6 ]
  %30 = phi i32 [ %21, %23 ], [ 0, %17 ], [ 0, %6 ]
  %31 = load i32, i32* @max_linkhdr, align 4
  %32 = add nsw i32 %31, 16
  %33 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %32, i32 1, i32 1, i32 1, i32 1) #13
  %34 = icmp eq %struct.mbuf* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  br i1 %7, label %36, label %107

36:                                               ; preds = %35
  tail call void @m_freem(%struct.mbuf* nonnull %5) #13
  br label %107

37:                                               ; preds = %28
  %38 = load i32, i32* @max_linkhdr, align 4
  %39 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  store i8* %42, i8** %39, align 8
  %43 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 3
  store i32 16, i32* %43, align 8
  %44 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 0, i32 0
  store %struct.mbuf* %5, %struct.mbuf** %44, align 8
  %45 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %2, i64 0, i32 1
  %46 = load i16, i16* %45, align 1
  %47 = bitcast i8* %42 to i16*
  store i16 %46, i16* %47, align 1
  %48 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %2, i64 0, i32 0
  %49 = load i16, i16* %48, align 1
  %50 = getelementptr inbounds i8, i8* %42, i64 2
  %51 = bitcast i8* %50 to i16*
  store i16 %49, i16* %51, align 1
  %52 = getelementptr inbounds i8, i8* %42, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 1
  %54 = icmp ne i32 %3, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %37
  %56 = tail call i32 @llvm.bswap.i32(i32 %3) #13
  br label %60

57:                                               ; preds = %37
  %58 = getelementptr inbounds %struct.sctphdr, %struct.sctphdr* %2, i64 0, i32 2
  %59 = load i32, i32* %58, align 1
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32 [ %59, %57 ], [ %56, %55 ]
  %62 = getelementptr inbounds i8, i8* %42, i64 4
  %63 = bitcast i8* %62 to i32*
  store i32 %61, i32* %63, align 1
  %64 = getelementptr inbounds i8, i8* %42, i64 12
  store i8 %4, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = xor i1 %54, true
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %65, align 1
  %68 = trunc i32 %29 to i16
  %69 = add i16 %68, 4
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #13
  %71 = getelementptr inbounds i8, i8* %64, i64 2
  %72 = bitcast i8* %71 to i16*
  store i16 %70, i16* %72, align 1
  %73 = add i32 %29, 16
  %74 = add i32 %73, %30
  %75 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %33, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %74, i32* %75, align 8
  %76 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 123
  br i1 %78, label %79, label %100

79:                                               ; preds = %60
  %80 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 13), align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = tail call i32 @sctp_calculate_cksum(%struct.mbuf* nonnull %33, i32 0) #13
  store i32 %83, i32* %53, align 1
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i32* [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 50), %82 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 51), %79 ]
  %86 = atomicrmw add i32* %85, i32 1 seq_cst
  %87 = sext i32 %74 to i64
  %88 = tail call noalias i8* @malloc(i64 %87) #13
  %89 = icmp eq i8* %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %84
  tail call void @m_copydata(%struct.mbuf* nonnull %33, i32 0, i32 %74, i8* nonnull %88) #13
  %91 = load i32 (i8*, i8*, i64, i8, i8)*, i32 (i8*, i8*, i64, i8, i8)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 11), align 8
  %92 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  %93 = bitcast i8* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = tail call i32 %91(i8* %94, i8* nonnull %88, i64 %87, i8 zeroext 0, i8 zeroext 0) #13
  tail call void @free(i8* nonnull %88) #13
  %96 = icmp eq i32 %95, 0
  tail call void @m_freem(%struct.mbuf* nonnull %33) #13
  %97 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 39), i32 1 seq_cst
  %98 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 18), i32 1 seq_cst
  %99 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br i1 %96, label %107, label %105

100:                                              ; preds = %60
  tail call void @m_freem(%struct.mbuf* nonnull %33) #13
  br label %107

101:                                              ; preds = %84
  tail call void @m_freem(%struct.mbuf* nonnull %33) #13
  %102 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 39), i32 1 seq_cst
  %103 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 18), i32 1 seq_cst
  %104 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 10), i32 1 seq_cst
  br label %105

105:                                              ; preds = %90, %101
  %106 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 48), i32 1 seq_cst
  br label %107

107:                                              ; preds = %90, %105, %35, %36, %27, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_hb(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #2 {
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  %8 = icmp eq %struct.sctp_nets* %1, null
  %9 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  br i1 %8, label %319, label %10

10:                                               ; preds = %3
  %11 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #13
  %12 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 3, i32 1, i32 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 123
  br i1 %14, label %15, label %319

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %18 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %17, align 8
  %19 = icmp eq %struct.sctp_tmit_chunk* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %22 = tail call noalias i8* @malloc(i64 %21) #13
  %23 = icmp eq i8* %22, null
  br i1 %23, label %319, label %45

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %18, i64 0, i32 6, i32 0
  %26 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %25, align 8
  %27 = icmp eq %struct.sctp_tmit_chunk* %26, null
  %28 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %18, i64 0, i32 6, i32 1
  %29 = bitcast %struct.sctp_tmit_chunk*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %26, i64 0, i32 6, i32 1
  %32 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %33 = select i1 %27, %struct.sctp_tmit_chunk*** %32, %struct.sctp_tmit_chunk*** %31
  %34 = bitcast %struct.sctp_tmit_chunk*** %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %struct.sctp_tmit_chunk** %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.sctp_tmit_chunk*** %28 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64 %36, i64* %38, align 8
  %39 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %40 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %18, i64 0, i32 14
  store i8 0, i8* %40, align 8
  %41 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %42 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %43 = load i16, i16* %42, align 2
  %44 = add i16 %43, -1
  store i16 %44, i16* %42, align 2
  br label %51

45:                                               ; preds = %20
  %46 = bitcast i8* %22 to %struct.sctp_tmit_chunk*
  %47 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %48 = getelementptr inbounds i8, i8* %22, i64 104
  %49 = bitcast i8* %48 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %49, align 8
  %50 = getelementptr inbounds i8, i8* %22, i64 144
  store i8 0, i8* %50, align 8
  br label %51

51:                                               ; preds = %45, %24
  %52 = phi %struct.sctp_tmit_chunk* [ %18, %24 ], [ %46, %45 ]
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 19
  store i8 0, i8* %53, align 1
  %54 = bitcast %struct.sctp_tmit_chunk* %52 to %struct.chk_id*
  %55 = bitcast %struct.sctp_tmit_chunk* %52 to i8*
  store i8 4, i8* %55, align 8
  %56 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %54, i64 0, i32 1
  store i8 1, i8* %56, align 1
  %57 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 9
  store i16 0, i16* %57, align 2
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 1
  store %struct.sctp_association* %16, %struct.sctp_association** %58, align 8
  %59 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 10
  store i16 44, i16* %59, align 8
  %60 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 44, i32 0, i32 1, i32 1, i32 1) #13
  %61 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 3
  store %struct.mbuf* %60, %struct.mbuf** %61, align 8
  %62 = icmp eq %struct.mbuf* %60, null
  br i1 %62, label %63, label %147

63:                                               ; preds = %51
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 14
  %65 = load i8, i8* %64, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 13
  %69 = load i16, i16* %68, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %69, i32 %2) #13
  store i8 0, i8* %64, align 8
  br label %70

70:                                               ; preds = %63, %67
  %71 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %71, label %145, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 5
  %74 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %75 = icmp eq %struct.sctp_nets* %74, null
  br i1 %75, label %122, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %74, i64 0, i32 17
  %78 = atomicrmw add i32* %77, i32 -1 seq_cst
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %121

80:                                               ; preds = %76
  %81 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %82 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %81, i64 0, i32 3, i32 0
  %83 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %82, align 8
  %84 = icmp eq %struct.sctp_rtentry* %83, null
  br i1 %84, label %100, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %83, i64 0, i32 3
  %87 = load i64, i64* %86, align 8
  %88 = icmp sgt i64 %87, 1
  %89 = add nsw i64 %87, -1
  store i64 %89, i64* %86, align 8
  %90 = icmp sgt i64 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %85
  %93 = bitcast %struct.sctp_rtentry* %83 to i8*
  tail call void @free(i8* %93) #13
  br label %94

94:                                               ; preds = %85, %92
  %95 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %96 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %95, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %96, align 8
  %97 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %98 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %97, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %98, align 8
  %99 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  br label %100

100:                                              ; preds = %80, %94
  %101 = phi %struct.sctp_nets* [ %81, %80 ], [ %99, %94 ]
  %102 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %101, i64 0, i32 47
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %101, i64 0, i32 3, i32 2
  %107 = load %struct.sctp_ifa*, %struct.sctp_ifa** %106, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %107) #13
  %108 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %109 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %108, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %109, align 8
  %110 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  br label %111

111:                                              ; preds = %100, %105
  %112 = phi %struct.sctp_nets* [ %101, %100 ], [ %110, %105 ]
  %113 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %112, i64 0, i32 47
  store i8 0, i8* %113, align 1
  %114 = load %struct.sctp_nets*, %struct.sctp_nets** %73, align 8
  %115 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %114, i64 0, i32 37
  %116 = load i16, i16* %115, align 4
  %117 = and i16 %116, -2
  store i16 %117, i16* %115, align 4
  %118 = bitcast %struct.sctp_nets** %73 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @free(i8* %119) #13
  %120 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %121

121:                                              ; preds = %76, %111
  store %struct.sctp_nets* null, %struct.sctp_nets** %73, align 8
  br label %122

122:                                              ; preds = %72, %121
  %123 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %127 = icmp ult i32 %126, %125
  br i1 %127, label %132, label %128

128:                                              ; preds = %122
  %129 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %130 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %131 = icmp ugt i32 %129, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %128, %122
  tail call void @free(i8* %55) #13
  %133 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %319

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %135, align 8
  %136 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %137 = bitcast %struct.sctp_tmit_chunk*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 1
  %140 = bitcast %struct.sctp_tmit_chunk*** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %136, align 8
  store %struct.sctp_tmit_chunk* %52, %struct.sctp_tmit_chunk** %141, align 8
  store %struct.sctp_tmit_chunk** %135, %struct.sctp_tmit_chunk*** %136, align 8
  %142 = load i16, i16* %123, align 2
  %143 = add i16 %142, 1
  store i16 %143, i16* %123, align 2
  %144 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %319

145:                                              ; preds = %70
  tail call void @free(i8* %55) #13
  %146 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %319

147:                                              ; preds = %51
  %148 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %60, i64 0, i32 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 32
  store i8* %150, i8** %148, align 8
  %151 = load i16, i16* %59, align 8
  %152 = zext i16 %151 to i32
  %153 = load %struct.mbuf*, %struct.mbuf** %61, align 8
  %154 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %153, i64 0, i32 0, i32 3
  store i32 %152, i32* %154, align 8
  %155 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 7
  store i32 0, i32* %155, align 8
  %156 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 8
  store i16 0, i16* %156, align 4
  %157 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %157, align 8
  %158 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %159 = atomicrmw add i32* %158, i32 1 seq_cst
  %160 = load %struct.mbuf*, %struct.mbuf** %61, align 8
  %161 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %160, i64 0, i32 0, i32 2
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %163, i8 0, i64 42, i1 false)
  store i8 4, i8* %162, align 1
  %164 = getelementptr inbounds i8, i8* %162, i64 1
  store i8 0, i8* %164, align 1
  %165 = load i16, i16* %59, align 8
  %166 = tail call i16 @llvm.bswap.i16(i16 %165) #13
  %167 = getelementptr inbounds i8, i8* %162, i64 2
  %168 = bitcast i8* %167 to i16*
  store i16 %166, i16* %168, align 1
  %169 = getelementptr inbounds i8, i8* %162, i64 4
  %170 = bitcast i8* %169 to i16*
  store i16 256, i16* %170, align 1
  %171 = getelementptr inbounds i8, i8* %162, i64 6
  %172 = bitcast i8* %171 to i16*
  store i16 10240, i16* %172, align 1
  %173 = load i64, i64* %6, align 8
  %174 = trunc i64 %173 to i32
  %175 = getelementptr inbounds i8, i8* %162, i64 8
  %176 = bitcast i8* %175 to i32*
  store i32 %174, i32* %176, align 1
  %177 = load i64, i64* %7, align 8
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds i8, i8* %162, i64 12
  %180 = bitcast i8* %179 to i32*
  store i32 %178, i32* %180, align 1
  %181 = load i16, i16* %12, align 8
  %182 = trunc i16 %181 to i8
  %183 = getelementptr inbounds i8, i8* %162, i64 24
  store i8 %182, i8* %183, align 1
  %184 = load i16, i16* %12, align 8
  %185 = icmp eq i16 %184, 123
  %186 = getelementptr inbounds i8, i8* %162, i64 25
  %187 = select i1 %185, i8 16, i8 0
  store i8 %187, i8* %186, align 1
  %188 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 37
  %189 = load i16, i16* %188, align 4
  %190 = and i16 %189, 512
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %203, label %192

192:                                              ; preds = %147
  %193 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %194 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %193, align 8
  %195 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %194, i64 0, i32 11
  %196 = tail call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %195) #13
  %197 = getelementptr inbounds i8, i8* %162, i64 16
  %198 = bitcast i8* %197 to i32*
  store i32 %196, i32* %198, align 1
  %199 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 30
  store i32 %196, i32* %199, align 4
  %200 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %193, align 8
  %201 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %200, i64 0, i32 11
  %202 = tail call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %201) #13
  br label %207

203:                                              ; preds = %147
  %204 = getelementptr inbounds i8, i8* %162, i64 16
  %205 = bitcast i8* %204 to i32*
  store i32 0, i32* %205, align 1
  %206 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 30
  store i32 0, i32* %206, align 4
  br label %207

207:                                              ; preds = %203, %192
  %208 = phi i32 [ 0, %203 ], [ %202, %192 ]
  %209 = getelementptr inbounds i8, i8* %162, i64 20
  %210 = bitcast i8* %209 to i32*
  store i32 %208, i32* %210, align 1
  %211 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 31
  store i32 %208, i32* %211, align 8
  %212 = load i16, i16* %12, align 8
  %213 = icmp eq i16 %212, 123
  br i1 %213, label %214, label %232

214:                                              ; preds = %207
  %215 = getelementptr inbounds i8, i8* %162, i64 28
  %216 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 3, i32 1, i32 0, i32 2
  %217 = bitcast i8** %216 to i64*
  %218 = bitcast i8* %215 to i64*
  %219 = load i64, i64* %217, align 8
  store i64 %219, i64* %218, align 1
  %220 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 45
  store i8 0, i8* %220, align 1
  %221 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %221, align 8
  %222 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %223 = bitcast %struct.sctp_tmit_chunk*** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 1
  %226 = bitcast %struct.sctp_tmit_chunk*** %225 to i64*
  store i64 %224, i64* %226, align 8
  %227 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %222, align 8
  store %struct.sctp_tmit_chunk* %52, %struct.sctp_tmit_chunk** %227, align 8
  store %struct.sctp_tmit_chunk** %221, %struct.sctp_tmit_chunk*** %222, align 8
  %228 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %228, align 8
  %231 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 45), i32 1 seq_cst
  br label %319

232:                                              ; preds = %207
  %233 = load %struct.mbuf*, %struct.mbuf** %61, align 8
  %234 = icmp eq %struct.mbuf* %233, null
  br i1 %234, label %236, label %235

235:                                              ; preds = %232
  tail call void @m_freem(%struct.mbuf* nonnull %233) #13
  store %struct.mbuf* null, %struct.mbuf** %61, align 8
  br label %236

236:                                              ; preds = %232, %235
  %237 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 14
  %238 = load i8, i8* %237, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 13
  %242 = load i16, i16* %241, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %242, i32 %2) #13
  store i8 0, i8* %237, align 8
  br label %243

243:                                              ; preds = %236, %240
  %244 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %244, label %317, label %245

245:                                              ; preds = %243
  %246 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %247 = icmp eq %struct.sctp_nets* %246, null
  br i1 %247, label %294, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %246, i64 0, i32 17
  %250 = atomicrmw add i32* %249, i32 -1 seq_cst
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %293

252:                                              ; preds = %248
  %253 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %254 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %253, i64 0, i32 3, i32 0
  %255 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %254, align 8
  %256 = icmp eq %struct.sctp_rtentry* %255, null
  br i1 %256, label %272, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %255, i64 0, i32 3
  %259 = load i64, i64* %258, align 8
  %260 = icmp sgt i64 %259, 1
  %261 = add nsw i64 %259, -1
  store i64 %261, i64* %258, align 8
  %262 = icmp sgt i64 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %266, label %264

264:                                              ; preds = %257
  %265 = bitcast %struct.sctp_rtentry* %255 to i8*
  tail call void @free(i8* %265) #13
  br label %266

266:                                              ; preds = %257, %264
  %267 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %268 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %267, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %268, align 8
  %269 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %270 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %269, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %270, align 8
  %271 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  br label %272

272:                                              ; preds = %252, %266
  %273 = phi %struct.sctp_nets* [ %253, %252 ], [ %271, %266 ]
  %274 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %273, i64 0, i32 47
  %275 = load i8, i8* %274, align 1
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %283, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %273, i64 0, i32 3, i32 2
  %279 = load %struct.sctp_ifa*, %struct.sctp_ifa** %278, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %279) #13
  %280 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %281 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %280, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %281, align 8
  %282 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  br label %283

283:                                              ; preds = %272, %277
  %284 = phi %struct.sctp_nets* [ %273, %272 ], [ %282, %277 ]
  %285 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %284, i64 0, i32 47
  store i8 0, i8* %285, align 1
  %286 = load %struct.sctp_nets*, %struct.sctp_nets** %157, align 8
  %287 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %286, i64 0, i32 37
  %288 = load i16, i16* %287, align 4
  %289 = and i16 %288, -2
  store i16 %289, i16* %287, align 4
  %290 = bitcast %struct.sctp_nets** %157 to i8**
  %291 = load i8*, i8** %290, align 8
  tail call void @free(i8* %291) #13
  %292 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %293

293:                                              ; preds = %248, %283
  store %struct.sctp_nets* null, %struct.sctp_nets** %157, align 8
  br label %294

294:                                              ; preds = %245, %293
  %295 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %296 = load i16, i16* %295, align 2
  %297 = zext i16 %296 to i32
  %298 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %299 = icmp ult i32 %298, %297
  br i1 %299, label %304, label %300

300:                                              ; preds = %294
  %301 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %302 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %303 = icmp ugt i32 %301, %302
  br i1 %303, label %304, label %306

304:                                              ; preds = %300, %294
  tail call void @free(i8* %55) #13
  %305 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %319

306:                                              ; preds = %300
  %307 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %307, align 8
  %308 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %309 = bitcast %struct.sctp_tmit_chunk*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 1
  %312 = bitcast %struct.sctp_tmit_chunk*** %311 to i64*
  store i64 %310, i64* %312, align 8
  %313 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %308, align 8
  store %struct.sctp_tmit_chunk* %52, %struct.sctp_tmit_chunk** %313, align 8
  store %struct.sctp_tmit_chunk** %307, %struct.sctp_tmit_chunk*** %308, align 8
  %314 = load i16, i16* %295, align 2
  %315 = add i16 %314, 1
  store i16 %315, i16* %295, align 2
  %316 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %319

317:                                              ; preds = %243
  tail call void @free(i8* %55) #13
  %318 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %319

319:                                              ; preds = %20, %317, %306, %304, %145, %134, %132, %10, %3, %214
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_ecn_echo(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #2 {
  %4 = icmp eq %struct.sctp_nets* %1, null
  br i1 %4, label %222, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 0
  %8 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %7, align 8
  %9 = icmp eq %struct.sctp_tmit_chunk* %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %5, %46
  %11 = phi %struct.sctp_tmit_chunk* [ %48, %46 ], [ %8, %5 ]
  %12 = bitcast %struct.sctp_tmit_chunk* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 12
  br i1 %14, label %15, label %46

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 5
  %17 = load %struct.sctp_nets*, %struct.sctp_nets** %16, align 8
  %18 = icmp eq %struct.sctp_nets* %17, %1
  br i1 %18, label %19, label %46

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 3
  %21 = load %struct.mbuf*, %struct.mbuf** %20, align 8
  %22 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %21, i64 0, i32 0, i32 2
  %23 = bitcast i8** %22 to %struct.sctp_ecne_chunk**
  %24 = load %struct.sctp_ecne_chunk*, %struct.sctp_ecne_chunk** %23, align 8
  %25 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 1
  %27 = tail call i32 @llvm.bswap.i32(i32 %26) #13
  %28 = icmp ugt i32 %27, %2
  %29 = sub i32 %27, %2
  %30 = icmp ugt i32 %29, -2147483648
  %31 = and i1 %28, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %19
  %33 = icmp ult i32 %27, %2
  %34 = sub i32 %2, %27
  %35 = icmp sgt i32 %34, -1
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %32, %19
  %38 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  store i32 %38, i32* %25, align 1
  %39 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 123), i32 1 seq_cst
  br label %40

40:                                               ; preds = %37, %32
  %41 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %24, i64 0, i32 2
  %42 = load i32, i32* %41, align 1
  %43 = tail call i32 @llvm.bswap.i32(i32 %42) #13
  %44 = add i32 %43, 1
  %45 = tail call i32 @llvm.bswap.i32(i32 %44) #13
  store i32 %45, i32* %41, align 1
  br label %222

46:                                               ; preds = %10, %15
  %47 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 6, i32 0
  %48 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %47, align 8
  %49 = icmp eq %struct.sctp_tmit_chunk* %48, null
  br i1 %49, label %50, label %10

50:                                               ; preds = %46, %5
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %52 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %51, align 8
  %53 = icmp eq %struct.sctp_tmit_chunk* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %56 = tail call noalias i8* @malloc(i64 %55) #13
  %57 = icmp eq i8* %56, null
  br i1 %57, label %222, label %79

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 0
  %60 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %61 = icmp eq %struct.sctp_tmit_chunk* %60, null
  %62 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 6, i32 1
  %63 = bitcast %struct.sctp_tmit_chunk*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %60, i64 0, i32 6, i32 1
  %66 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %67 = select i1 %61, %struct.sctp_tmit_chunk*** %66, %struct.sctp_tmit_chunk*** %65
  %68 = bitcast %struct.sctp_tmit_chunk*** %67 to i64*
  store i64 %64, i64* %68, align 8
  %69 = bitcast %struct.sctp_tmit_chunk** %59 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %struct.sctp_tmit_chunk*** %62 to i64**
  %72 = load i64*, i64** %71, align 8
  store i64 %70, i64* %72, align 8
  %73 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %74 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %52, i64 0, i32 14
  store i8 0, i8* %74, align 8
  %75 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %76 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %77 = load i16, i16* %76, align 2
  %78 = add i16 %77, -1
  store i16 %78, i16* %76, align 2
  br label %85

79:                                               ; preds = %54
  %80 = bitcast i8* %56 to %struct.sctp_tmit_chunk*
  %81 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %82 = getelementptr inbounds i8, i8* %56, i64 104
  %83 = bitcast i8* %82 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %83, align 8
  %84 = getelementptr inbounds i8, i8* %56, i64 144
  store i8 0, i8* %84, align 8
  br label %85

85:                                               ; preds = %79, %58
  %86 = phi %struct.sctp_tmit_chunk* [ %52, %58 ], [ %80, %79 ]
  %87 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 123), i32 1 seq_cst
  %88 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 19
  store i8 0, i8* %88, align 1
  %89 = bitcast %struct.sctp_tmit_chunk* %86 to %struct.chk_id*
  %90 = bitcast %struct.sctp_tmit_chunk* %86 to i8*
  store i8 12, i8* %90, align 8
  %91 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %89, i64 0, i32 1
  store i8 0, i8* %91, align 1
  %92 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 9
  store i16 0, i16* %92, align 2
  %93 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 1
  store %struct.sctp_association* %6, %struct.sctp_association** %93, align 8
  %94 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 10
  store i16 12, i16* %94, align 8
  %95 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 12, i32 0, i32 1, i32 1, i32 1) #13
  %96 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 3
  store %struct.mbuf* %95, %struct.mbuf** %96, align 8
  %97 = icmp eq %struct.mbuf* %95, null
  br i1 %97, label %98, label %182

98:                                               ; preds = %85
  %99 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 14
  %100 = load i8, i8* %99, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 13
  %104 = load i16, i16* %103, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %104, i32 0) #13
  store i8 0, i8* %99, align 8
  br label %105

105:                                              ; preds = %98, %102
  %106 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %106, label %180, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 5
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %110 = icmp eq %struct.sctp_nets* %109, null
  br i1 %110, label %157, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %109, i64 0, i32 17
  %113 = atomicrmw add i32* %112, i32 -1 seq_cst
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %156

115:                                              ; preds = %111
  %116 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %117 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %116, i64 0, i32 3, i32 0
  %118 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %117, align 8
  %119 = icmp eq %struct.sctp_rtentry* %118, null
  br i1 %119, label %135, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %118, i64 0, i32 3
  %122 = load i64, i64* %121, align 8
  %123 = icmp sgt i64 %122, 1
  %124 = add nsw i64 %122, -1
  store i64 %124, i64* %121, align 8
  %125 = icmp sgt i64 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %120
  %128 = bitcast %struct.sctp_rtentry* %118 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %120, %127
  %130 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %131 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %130, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %131, align 8
  %132 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %133 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %132, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %133, align 8
  %134 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  br label %135

135:                                              ; preds = %115, %129
  %136 = phi %struct.sctp_nets* [ %116, %115 ], [ %134, %129 ]
  %137 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %136, i64 0, i32 47
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %136, i64 0, i32 3, i32 2
  %142 = load %struct.sctp_ifa*, %struct.sctp_ifa** %141, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %142) #13
  %143 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %144 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %143, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %144, align 8
  %145 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  br label %146

146:                                              ; preds = %135, %140
  %147 = phi %struct.sctp_nets* [ %136, %135 ], [ %145, %140 ]
  %148 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %147, i64 0, i32 47
  store i8 0, i8* %148, align 1
  %149 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %150 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %149, i64 0, i32 37
  %151 = load i16, i16* %150, align 4
  %152 = and i16 %151, -2
  store i16 %152, i16* %150, align 4
  %153 = bitcast %struct.sctp_nets** %108 to i8**
  %154 = load i8*, i8** %153, align 8
  tail call void @free(i8* %154) #13
  %155 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %156

156:                                              ; preds = %111, %146
  store %struct.sctp_nets* null, %struct.sctp_nets** %108, align 8
  br label %157

157:                                              ; preds = %107, %156
  %158 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %162 = icmp ult i32 %161, %160
  br i1 %162, label %167, label %163

163:                                              ; preds = %157
  %164 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %165 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %166 = icmp ugt i32 %164, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %163, %157
  tail call void @free(i8* %90) #13
  %168 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %222

169:                                              ; preds = %163
  %170 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %170, align 8
  %171 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %172 = bitcast %struct.sctp_tmit_chunk*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 6, i32 1
  %175 = bitcast %struct.sctp_tmit_chunk*** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %171, align 8
  store %struct.sctp_tmit_chunk* %86, %struct.sctp_tmit_chunk** %176, align 8
  store %struct.sctp_tmit_chunk** %170, %struct.sctp_tmit_chunk*** %171, align 8
  %177 = load i16, i16* %158, align 2
  %178 = add i16 %177, 1
  store i16 %178, i16* %158, align 2
  %179 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %222

180:                                              ; preds = %105
  tail call void @free(i8* %90) #13
  %181 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %222

182:                                              ; preds = %85
  %183 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %95, i64 0, i32 0, i32 2
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 32
  store i8* %185, i8** %183, align 8
  %186 = load i16, i16* %94, align 8
  %187 = zext i16 %186 to i32
  %188 = load %struct.mbuf*, %struct.mbuf** %96, align 8
  %189 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %188, i64 0, i32 0, i32 3
  store i32 %187, i32* %189, align 8
  %190 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 7
  store i32 0, i32* %190, align 8
  %191 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 8
  store i16 0, i16* %191, align 4
  %192 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %192, align 8
  %193 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %194 = atomicrmw add i32* %193, i32 1 seq_cst
  %195 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 142
  %196 = load i16, i16* %195, align 4
  %197 = add i16 %196, 1
  store i16 %197, i16* %195, align 4
  %198 = load %struct.mbuf*, %struct.mbuf** %96, align 8
  %199 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 2
  %200 = bitcast i8** %199 to %struct.sctp_ecne_chunk**
  %201 = load %struct.sctp_ecne_chunk*, %struct.sctp_ecne_chunk** %200, align 8
  %202 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %201, i64 0, i32 0, i32 0
  store i8 12, i8* %202, align 1
  %203 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %201, i64 0, i32 0, i32 1
  store i8 0, i8* %203, align 1
  %204 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %201, i64 0, i32 0, i32 2
  store i16 3072, i16* %204, align 1
  %205 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %206 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %201, i64 0, i32 1
  store i32 %205, i32* %206, align 1
  %207 = getelementptr inbounds %struct.sctp_ecne_chunk, %struct.sctp_ecne_chunk* %201, i64 0, i32 2
  store i32 16777216, i32* %207, align 1
  %208 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %7, align 8
  %209 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* %208, %struct.sctp_tmit_chunk** %209, align 8
  %210 = icmp eq %struct.sctp_tmit_chunk* %208, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %182
  %212 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %7, align 8
  %213 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %212, i64 0, i32 6, i32 1
  br label %216

214:                                              ; preds = %182
  %215 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  br label %216

216:                                              ; preds = %214, %211
  %217 = phi %struct.sctp_tmit_chunk*** [ %215, %214 ], [ %213, %211 ]
  store %struct.sctp_tmit_chunk** %209, %struct.sctp_tmit_chunk*** %217, align 8
  store %struct.sctp_tmit_chunk* %86, %struct.sctp_tmit_chunk** %7, align 8
  %218 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %86, i64 0, i32 6, i32 1
  store %struct.sctp_tmit_chunk** %7, %struct.sctp_tmit_chunk*** %218, align 8
  %219 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %220 = load i32, i32* %219, align 8
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %219, align 8
  br label %222

222:                                              ; preds = %54, %180, %169, %167, %3, %216, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_packet_dropped(%struct.sctp_tcb*, %struct.sctp_nets*, %struct.mbuf*, i32, i32, i32) local_unnamed_addr #2 {
  %7 = alloca %struct.sctp_chunkhdr, align 1
  %8 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i8 -86, i8* %8, align 1
  %9 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %7, i64 0, i32 1
  store i8 -86, i8* %9, align 1
  %10 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %7, i64 0, i32 2
  store i16 -21846, i16* %10, align 1
  %11 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %11, label %349, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 167
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %349, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %19 = load %struct.socket*, %struct.socket** %18, align 8
  %20 = icmp eq %struct.socket* %19, null
  br i1 %20, label %349, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %23 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %22, align 8
  %24 = icmp eq %struct.sctp_tmit_chunk* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %27 = tail call noalias i8* @malloc(i64 %26) #13
  %28 = icmp eq i8* %27, null
  br i1 %28, label %349, label %50

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %23, i64 0, i32 6, i32 0
  %31 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %30, align 8
  %32 = icmp eq %struct.sctp_tmit_chunk* %31, null
  %33 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %23, i64 0, i32 6, i32 1
  %34 = bitcast %struct.sctp_tmit_chunk*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %31, i64 0, i32 6, i32 1
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %38 = select i1 %32, %struct.sctp_tmit_chunk*** %37, %struct.sctp_tmit_chunk*** %36
  %39 = bitcast %struct.sctp_tmit_chunk*** %38 to i64*
  store i64 %35, i64* %39, align 8
  %40 = bitcast %struct.sctp_tmit_chunk** %30 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.sctp_tmit_chunk*** %33 to i64**
  %43 = load i64*, i64** %42, align 8
  store i64 %41, i64* %43, align 8
  %44 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %45 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %23, i64 0, i32 14
  store i8 0, i8* %45, align 8
  %46 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %48 = load i16, i16* %47, align 2
  %49 = add i16 %48, -1
  store i16 %49, i16* %47, align 2
  br label %56

50:                                               ; preds = %25
  %51 = bitcast i8* %27 to %struct.sctp_tmit_chunk*
  %52 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %53 = getelementptr inbounds i8, i8* %27, i64 104
  %54 = bitcast i8* %53 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %54, align 8
  %55 = getelementptr inbounds i8, i8* %27, i64 144
  store i8 0, i8* %55, align 8
  br label %56

56:                                               ; preds = %50, %29
  %57 = phi %struct.sctp_tmit_chunk* [ %23, %29 ], [ %51, %50 ]
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 19
  store i8 0, i8* %58, align 1
  %59 = bitcast %struct.sctp_tmit_chunk* %57 to %struct.chk_id*
  %60 = bitcast %struct.sctp_tmit_chunk* %57 to i8*
  store i8 -127, i8* %60, align 8
  %61 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %59, i64 0, i32 1
  store i8 1, i8* %61, align 1
  %62 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 9
  store i16 0, i16* %62, align 2
  %63 = sub nsw i32 %3, %4
  %64 = trunc i32 %63 to i16
  %65 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 10
  store i16 %64, i16* %65, align 8
  %66 = add i32 %4, 12
  %67 = call i8* @sctp_m_getptr(%struct.mbuf* %2, i32 %66, i32 4, i8* nonnull %8) #13
  %68 = icmp eq i8* %67, null
  br i1 %68, label %166, label %69

69:                                               ; preds = %56, %160
  %70 = phi i8* [ %164, %160 ], [ %67, %56 ]
  %71 = phi i32 [ %163, %160 ], [ %66, %56 ]
  %72 = getelementptr inbounds i8, i8* %70, i64 2
  %73 = bitcast i8* %72 to i16*
  %74 = load i16, i16* %73, align 1
  %75 = call i16 @llvm.bswap.i16(i16 %74) #13
  %76 = zext i16 %75 to i32
  %77 = icmp ult i16 %75, 4
  br i1 %77, label %166, label %78

78:                                               ; preds = %69
  %79 = load i8, i8* %70, align 1
  switch i8 %79, label %160 [
    i8 -127, label %80
    i8 6, label %80
    i8 2, label %80
  ]

80:                                               ; preds = %78, %78, %78
  %81 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 14
  %82 = load i8, i8* %81, align 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 13
  %86 = load i16, i16* %85, align 2
  call void @sctp_auth_key_release(%struct.sctp_tcb* nonnull %0, i16 zeroext %86, i32 0) #13
  store i8 0, i8* %81, align 8
  br label %87

87:                                               ; preds = %84, %80
  %88 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 5
  %89 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %90 = icmp eq %struct.sctp_nets* %89, null
  br i1 %90, label %137, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %89, i64 0, i32 17
  %93 = atomicrmw add i32* %92, i32 -1 seq_cst
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %136

95:                                               ; preds = %91
  %96 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %96, i64 0, i32 3, i32 0
  %98 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %97, align 8
  %99 = icmp eq %struct.sctp_rtentry* %98, null
  br i1 %99, label %115, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %98, i64 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = icmp sgt i64 %102, 1
  %104 = add nsw i64 %102, -1
  store i64 %104, i64* %101, align 8
  %105 = icmp sgt i64 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  %108 = bitcast %struct.sctp_rtentry* %98 to i8*
  call void @free(i8* %108) #13
  br label %109

109:                                              ; preds = %100, %107
  %110 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %111 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %110, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %111, align 8
  %112 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %113 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %112, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %113, align 8
  %114 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  br label %115

115:                                              ; preds = %95, %109
  %116 = phi %struct.sctp_nets* [ %96, %95 ], [ %114, %109 ]
  %117 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %116, i64 0, i32 47
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %116, i64 0, i32 3, i32 2
  %122 = load %struct.sctp_ifa*, %struct.sctp_ifa** %121, align 8
  call void @sctp_free_ifa(%struct.sctp_ifa* %122) #13
  %123 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %124 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %123, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %124, align 8
  %125 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  br label %126

126:                                              ; preds = %115, %120
  %127 = phi %struct.sctp_nets* [ %116, %115 ], [ %125, %120 ]
  %128 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %127, i64 0, i32 47
  store i8 0, i8* %128, align 1
  %129 = load %struct.sctp_nets*, %struct.sctp_nets** %88, align 8
  %130 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %129, i64 0, i32 37
  %131 = load i16, i16* %130, align 4
  %132 = and i16 %131, -2
  store i16 %132, i16* %130, align 4
  %133 = bitcast %struct.sctp_nets** %88 to i8**
  %134 = load i8*, i8** %133, align 8
  call void @free(i8* %134) #13
  %135 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %136

136:                                              ; preds = %91, %126
  store %struct.sctp_nets* null, %struct.sctp_nets** %88, align 8
  br label %137

137:                                              ; preds = %87, %136
  %138 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %142 = icmp ult i32 %141, %140
  br i1 %142, label %147, label %143

143:                                              ; preds = %137
  %144 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %145 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %146 = icmp ugt i32 %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %143, %137
  call void @free(i8* %60) #13
  %148 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %349

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %150, align 8
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %152 = bitcast %struct.sctp_tmit_chunk*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 1
  %155 = bitcast %struct.sctp_tmit_chunk*** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %151, align 8
  store %struct.sctp_tmit_chunk* %57, %struct.sctp_tmit_chunk** %156, align 8
  store %struct.sctp_tmit_chunk** %150, %struct.sctp_tmit_chunk*** %151, align 8
  %157 = load i16, i16* %138, align 2
  %158 = add i16 %157, 1
  store i16 %158, i16* %138, align 2
  %159 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %349

160:                                              ; preds = %78
  %161 = add nuw nsw i32 %76, 3
  %162 = and i32 %161, 131068
  %163 = add i32 %162, %71
  %164 = call i8* @sctp_m_getptr(%struct.mbuf* %2, i32 %163, i32 4, i8* nonnull %8) #13
  %165 = icmp eq i8* %164, null
  br i1 %165, label %166, label %69

166:                                              ; preds = %69, %160, %56
  %167 = sext i32 %63 to i64
  %168 = add nsw i64 %167, 92
  %169 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 53
  %170 = load i32, i32* %169, align 4
  %171 = icmp ult i32 %170, 2048
  %172 = select i1 %171, i32 %170, i32 2048
  %173 = zext i32 %172 to i64
  %174 = icmp ugt i64 %168, %173
  %175 = add nuw nsw i32 %172, 65460
  %176 = select i1 %174, i32 %175, i32 %63
  %177 = select i1 %174, i16 %64, i16 0
  %178 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 1
  store %struct.sctp_association* %13, %struct.sctp_association** %178, align 8
  %179 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %180 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 3
  store %struct.mbuf* %179, %struct.mbuf** %180, align 8
  %181 = icmp eq %struct.mbuf* %179, null
  br i1 %181, label %182, label %262

182:                                              ; preds = %166, %271
  %183 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 14
  %184 = load i8, i8* %183, align 8
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 13
  %188 = load i16, i16* %187, align 2
  call void @sctp_auth_key_release(%struct.sctp_tcb* nonnull %0, i16 zeroext %188, i32 0) #13
  store i8 0, i8* %183, align 8
  br label %189

189:                                              ; preds = %186, %182
  %190 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 5
  %191 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %192 = icmp eq %struct.sctp_nets* %191, null
  br i1 %192, label %239, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %191, i64 0, i32 17
  %195 = atomicrmw add i32* %194, i32 -1 seq_cst
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %197, label %238

197:                                              ; preds = %193
  %198 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %199 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %198, i64 0, i32 3, i32 0
  %200 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %199, align 8
  %201 = icmp eq %struct.sctp_rtentry* %200, null
  br i1 %201, label %217, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %200, i64 0, i32 3
  %204 = load i64, i64* %203, align 8
  %205 = icmp sgt i64 %204, 1
  %206 = add nsw i64 %204, -1
  store i64 %206, i64* %203, align 8
  %207 = icmp sgt i64 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %211, label %209

209:                                              ; preds = %202
  %210 = bitcast %struct.sctp_rtentry* %200 to i8*
  call void @free(i8* %210) #13
  br label %211

211:                                              ; preds = %202, %209
  %212 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %213 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %212, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %213, align 8
  %214 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %215 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %214, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %215, align 8
  %216 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  br label %217

217:                                              ; preds = %197, %211
  %218 = phi %struct.sctp_nets* [ %198, %197 ], [ %216, %211 ]
  %219 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %218, i64 0, i32 47
  %220 = load i8, i8* %219, align 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %228, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %218, i64 0, i32 3, i32 2
  %224 = load %struct.sctp_ifa*, %struct.sctp_ifa** %223, align 8
  call void @sctp_free_ifa(%struct.sctp_ifa* %224) #13
  %225 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %226 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %225, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %226, align 8
  %227 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  br label %228

228:                                              ; preds = %217, %222
  %229 = phi %struct.sctp_nets* [ %218, %217 ], [ %227, %222 ]
  %230 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %229, i64 0, i32 47
  store i8 0, i8* %230, align 1
  %231 = load %struct.sctp_nets*, %struct.sctp_nets** %190, align 8
  %232 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %231, i64 0, i32 37
  %233 = load i16, i16* %232, align 4
  %234 = and i16 %233, -2
  store i16 %234, i16* %232, align 4
  %235 = bitcast %struct.sctp_nets** %190 to i8**
  %236 = load i8*, i8** %235, align 8
  call void @free(i8* %236) #13
  %237 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %238

238:                                              ; preds = %193, %228
  store %struct.sctp_nets* null, %struct.sctp_nets** %190, align 8
  br label %239

239:                                              ; preds = %189, %238
  %240 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %241 = load i16, i16* %240, align 2
  %242 = zext i16 %241 to i32
  %243 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %244 = icmp ult i32 %243, %242
  br i1 %244, label %249, label %245

245:                                              ; preds = %239
  %246 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %247 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %248 = icmp ugt i32 %246, %247
  br i1 %248, label %249, label %251

249:                                              ; preds = %245, %239
  call void @free(i8* %60) #13
  %250 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %349

251:                                              ; preds = %245
  %252 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %252, align 8
  %253 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %254 = bitcast %struct.sctp_tmit_chunk*** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 1
  %257 = bitcast %struct.sctp_tmit_chunk*** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %253, align 8
  store %struct.sctp_tmit_chunk* %57, %struct.sctp_tmit_chunk** %258, align 8
  store %struct.sctp_tmit_chunk** %252, %struct.sctp_tmit_chunk*** %253, align 8
  %259 = load i16, i16* %240, align 2
  %260 = add i16 %259, 1
  store i16 %260, i16* %240, align 2
  %261 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %349

262:                                              ; preds = %166
  %263 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %179, i64 0, i32 0, i32 2
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 32
  store i8* %265, i8** %263, align 8
  %266 = load %struct.mbuf*, %struct.mbuf** %180, align 8
  %267 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %266, i64 0, i32 0, i32 2
  %268 = bitcast i8** %267 to %struct.sctp_pktdrop_chunk**
  %269 = load %struct.sctp_pktdrop_chunk*, %struct.sctp_pktdrop_chunk** %268, align 8
  %270 = icmp eq %struct.sctp_pktdrop_chunk* %269, null
  br i1 %270, label %271, label %272

271:                                              ; preds = %262
  call void @m_freem(%struct.mbuf* %266) #13
  store %struct.mbuf* null, %struct.mbuf** %180, align 8
  br label %182

272:                                              ; preds = %262
  %273 = load i16, i16* %65, align 8
  %274 = add i16 %273, 79
  %275 = and i16 %274, -4
  %276 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 11
  store i16 %275, i16* %276, align 2
  %277 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 17
  store i8 0, i8* %277, align 1
  %278 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 0, i32 1
  br i1 %174, label %279, label %285

279:                                              ; preds = %272
  store i8 4, i8* %278, align 1
  %280 = call i16 @llvm.bswap.i16(i16 %177) #13
  %281 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 3
  store i16 %280, i16* %281, align 1
  %282 = trunc i32 %176 to i16
  %283 = add i16 %282, -16
  store i16 %283, i16* %65, align 8
  %284 = zext i16 %283 to i32
  br label %287

285:                                              ; preds = %272
  store i8 0, i8* %278, align 1
  %286 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 3
  store i16 0, i16* %286, align 1
  br label %287

287:                                              ; preds = %285, %279
  %288 = phi i32 [ %284, %279 ], [ %63, %285 ]
  %289 = icmp eq i32 %5, 0
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = load i8, i8* %278, align 1
  %292 = or i8 %291, 2
  store i8 %292, i8* %278, align 1
  br label %293

293:                                              ; preds = %287, %290
  %294 = load i16, i16* %65, align 8
  %295 = add i16 %294, 16
  store i16 %295, i16* %65, align 8
  %296 = zext i16 %295 to i32
  %297 = load %struct.mbuf*, %struct.mbuf** %180, align 8
  %298 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %297, i64 0, i32 0, i32 3
  store i32 %296, i32* %298, align 8
  %299 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 7
  store i32 0, i32* %299, align 8
  %300 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 8
  store i16 0, i16* %300, align 4
  %301 = icmp eq %struct.sctp_nets* %1, null
  %302 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 5
  br i1 %301, label %306, label %303

303:                                              ; preds = %293
  store %struct.sctp_nets* %1, %struct.sctp_nets** %302, align 8
  %304 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %305 = atomicrmw add i32* %304, i32 1 seq_cst
  br label %307

306:                                              ; preds = %293
  store %struct.sctp_nets* null, %struct.sctp_nets** %302, align 8
  br label %307

307:                                              ; preds = %306, %303
  %308 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 0, i32 0
  store i8 -127, i8* %308, align 1
  %309 = load i16, i16* %65, align 8
  %310 = call i16 @llvm.bswap.i16(i16 %309) #13
  %311 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 0, i32 2
  store i16 %310, i16* %311, align 1
  %312 = load %struct.socket*, %struct.socket** %18, align 8
  %313 = getelementptr inbounds %struct.socket, %struct.socket* %312, i64 0, i32 21, i32 9
  %314 = load i32, i32* %313, align 8
  %315 = call i32 @llvm.bswap.i32(i32 %314) #13
  %316 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 1
  store i32 %315, i32* %316, align 1
  %317 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 75
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %334, label %320

320:                                              ; preds = %307
  %321 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 89
  %322 = load i32, i32* %321, align 8
  %323 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 97
  %324 = load i32, i32* %323, align 8
  %325 = add i32 %324, %322
  %326 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 81
  %327 = load i32, i32* %326, align 8
  %328 = add i32 %325, %327
  %329 = load %struct.socket*, %struct.socket** %18, align 8
  %330 = getelementptr inbounds %struct.socket, %struct.socket* %329, i64 0, i32 21, i32 8
  %331 = load i32, i32* %330, align 4
  %332 = add i32 %328, %331
  %333 = call i32 @llvm.bswap.i32(i32 %332) #13
  br label %334

334:                                              ; preds = %307, %320
  %335 = phi i32 [ %333, %320 ], [ %315, %307 ]
  %336 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 2
  store i32 %335, i32* %336, align 1
  %337 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 4
  store i16 0, i16* %337, align 1
  %338 = getelementptr inbounds %struct.sctp_pktdrop_chunk, %struct.sctp_pktdrop_chunk* %269, i64 0, i32 5, i64 0
  call void @m_copydata(%struct.mbuf* %2, i32 %4, i32 %288, i8* %338) #13
  %339 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %339, align 8
  %340 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %341 = bitcast %struct.sctp_tmit_chunk*** %340 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 1
  %344 = bitcast %struct.sctp_tmit_chunk*** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %340, align 8
  store %struct.sctp_tmit_chunk* %57, %struct.sctp_tmit_chunk** %345, align 8
  store %struct.sctp_tmit_chunk** %339, %struct.sctp_tmit_chunk*** %340, align 8
  %346 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %347 = load i32, i32* %346, align 8
  %348 = add nsw i32 %347, 1
  store i32 %348, i32* %346, align 8
  br label %349

349:                                              ; preds = %25, %251, %249, %149, %147, %17, %12, %6, %334
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare i8* @sctp_m_getptr(%struct.mbuf*, i32, i32, i8*) local_unnamed_addr #5

declare void @m_copydata(%struct.mbuf*, i32, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_cwr(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i8 zeroext) local_unnamed_addr #2 {
  %5 = icmp eq %struct.sctp_nets* %1, null
  br i1 %5, label %214, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 0
  %9 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %8, align 8
  %10 = icmp eq %struct.sctp_tmit_chunk* %9, null
  br i1 %10, label %51, label %11

11:                                               ; preds = %6, %47
  %12 = phi %struct.sctp_tmit_chunk* [ %49, %47 ], [ %9, %6 ]
  %13 = bitcast %struct.sctp_tmit_chunk* %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 13
  br i1 %15, label %16, label %47

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %12, i64 0, i32 5
  %18 = load %struct.sctp_nets*, %struct.sctp_nets** %17, align 8
  %19 = icmp eq %struct.sctp_nets* %18, %1
  br i1 %19, label %20, label %47

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %12, i64 0, i32 3
  %22 = load %struct.mbuf*, %struct.mbuf** %21, align 8
  %23 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 2
  %24 = bitcast i8** %23 to %struct.sctp_cwr_chunk**
  %25 = load %struct.sctp_cwr_chunk*, %struct.sctp_cwr_chunk** %24, align 8
  %26 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 1
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #13
  %29 = icmp ugt i32 %28, %2
  %30 = sub i32 %28, %2
  %31 = icmp ugt i32 %30, -2147483648
  %32 = and i1 %29, %31
  br i1 %32, label %38, label %33

33:                                               ; preds = %20
  %34 = icmp ult i32 %28, %2
  %35 = sub i32 %2, %28
  %36 = icmp sgt i32 %35, -1
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %33, %20
  %39 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  store i32 %39, i32* %26, align 1
  br label %40

40:                                               ; preds = %38, %33
  %41 = and i8 %3, 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %214, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %25, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = or i8 %45, 1
  store i8 %46, i8* %44, align 1
  br label %214

47:                                               ; preds = %11, %16
  %48 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %12, i64 0, i32 6, i32 0
  %49 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %48, align 8
  %50 = icmp eq %struct.sctp_tmit_chunk* %49, null
  br i1 %50, label %51, label %11

51:                                               ; preds = %47, %6
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %53 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %52, align 8
  %54 = icmp eq %struct.sctp_tmit_chunk* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %57 = tail call noalias i8* @malloc(i64 %56) #13
  %58 = icmp eq i8* %57, null
  br i1 %58, label %214, label %80

59:                                               ; preds = %51
  %60 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %53, i64 0, i32 6, i32 0
  %61 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %60, align 8
  %62 = icmp eq %struct.sctp_tmit_chunk* %61, null
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %53, i64 0, i32 6, i32 1
  %64 = bitcast %struct.sctp_tmit_chunk*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %61, i64 0, i32 6, i32 1
  %67 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %68 = select i1 %62, %struct.sctp_tmit_chunk*** %67, %struct.sctp_tmit_chunk*** %66
  %69 = bitcast %struct.sctp_tmit_chunk*** %68 to i64*
  store i64 %65, i64* %69, align 8
  %70 = bitcast %struct.sctp_tmit_chunk** %60 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %struct.sctp_tmit_chunk*** %63 to i64**
  %73 = load i64*, i64** %72, align 8
  store i64 %71, i64* %73, align 8
  %74 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %75 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %53, i64 0, i32 14
  store i8 0, i8* %75, align 8
  %76 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %77 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %78 = load i16, i16* %77, align 2
  %79 = add i16 %78, -1
  store i16 %79, i16* %77, align 2
  br label %86

80:                                               ; preds = %55
  %81 = bitcast i8* %57 to %struct.sctp_tmit_chunk*
  %82 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %83 = getelementptr inbounds i8, i8* %57, i64 104
  %84 = bitcast i8* %83 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %84, align 8
  %85 = getelementptr inbounds i8, i8* %57, i64 144
  store i8 0, i8* %85, align 8
  br label %86

86:                                               ; preds = %80, %59
  %87 = phi %struct.sctp_tmit_chunk* [ %53, %59 ], [ %81, %80 ]
  %88 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 19
  store i8 0, i8* %88, align 1
  %89 = bitcast %struct.sctp_tmit_chunk* %87 to %struct.chk_id*
  %90 = bitcast %struct.sctp_tmit_chunk* %87 to i8*
  store i8 13, i8* %90, align 8
  %91 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %89, i64 0, i32 1
  store i8 1, i8* %91, align 1
  %92 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 9
  store i16 0, i16* %92, align 2
  %93 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 1
  store %struct.sctp_association* %7, %struct.sctp_association** %93, align 8
  %94 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 10
  store i16 8, i16* %94, align 8
  %95 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 8, i32 0, i32 1, i32 1, i32 1) #13
  %96 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 3
  store %struct.mbuf* %95, %struct.mbuf** %96, align 8
  %97 = icmp eq %struct.mbuf* %95, null
  br i1 %97, label %98, label %182

98:                                               ; preds = %86
  %99 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 14
  %100 = load i8, i8* %99, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 13
  %104 = load i16, i16* %103, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %104, i32 0) #13
  store i8 0, i8* %99, align 8
  br label %105

105:                                              ; preds = %98, %102
  %106 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %106, label %180, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 5
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %110 = icmp eq %struct.sctp_nets* %109, null
  br i1 %110, label %157, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %109, i64 0, i32 17
  %113 = atomicrmw add i32* %112, i32 -1 seq_cst
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %156

115:                                              ; preds = %111
  %116 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %117 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %116, i64 0, i32 3, i32 0
  %118 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %117, align 8
  %119 = icmp eq %struct.sctp_rtentry* %118, null
  br i1 %119, label %135, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %118, i64 0, i32 3
  %122 = load i64, i64* %121, align 8
  %123 = icmp sgt i64 %122, 1
  %124 = add nsw i64 %122, -1
  store i64 %124, i64* %121, align 8
  %125 = icmp sgt i64 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %120
  %128 = bitcast %struct.sctp_rtentry* %118 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %120, %127
  %130 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %131 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %130, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %131, align 8
  %132 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %133 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %132, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %133, align 8
  %134 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  br label %135

135:                                              ; preds = %115, %129
  %136 = phi %struct.sctp_nets* [ %116, %115 ], [ %134, %129 ]
  %137 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %136, i64 0, i32 47
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %136, i64 0, i32 3, i32 2
  %142 = load %struct.sctp_ifa*, %struct.sctp_ifa** %141, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %142) #13
  %143 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %144 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %143, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %144, align 8
  %145 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  br label %146

146:                                              ; preds = %135, %140
  %147 = phi %struct.sctp_nets* [ %136, %135 ], [ %145, %140 ]
  %148 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %147, i64 0, i32 47
  store i8 0, i8* %148, align 1
  %149 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %150 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %149, i64 0, i32 37
  %151 = load i16, i16* %150, align 4
  %152 = and i16 %151, -2
  store i16 %152, i16* %150, align 4
  %153 = bitcast %struct.sctp_nets** %108 to i8**
  %154 = load i8*, i8** %153, align 8
  tail call void @free(i8* %154) #13
  %155 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %156

156:                                              ; preds = %111, %146
  store %struct.sctp_nets* null, %struct.sctp_nets** %108, align 8
  br label %157

157:                                              ; preds = %107, %156
  %158 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %162 = icmp ult i32 %161, %160
  br i1 %162, label %167, label %163

163:                                              ; preds = %157
  %164 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %165 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %166 = icmp ugt i32 %164, %165
  br i1 %166, label %167, label %169

167:                                              ; preds = %163, %157
  tail call void @free(i8* %90) #13
  %168 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %214

169:                                              ; preds = %163
  %170 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %170, align 8
  %171 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %172 = bitcast %struct.sctp_tmit_chunk*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 6, i32 1
  %175 = bitcast %struct.sctp_tmit_chunk*** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %171, align 8
  store %struct.sctp_tmit_chunk* %87, %struct.sctp_tmit_chunk** %176, align 8
  store %struct.sctp_tmit_chunk** %170, %struct.sctp_tmit_chunk*** %171, align 8
  %177 = load i16, i16* %158, align 2
  %178 = add i16 %177, 1
  store i16 %178, i16* %158, align 2
  %179 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %214

180:                                              ; preds = %105
  tail call void @free(i8* %90) #13
  %181 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %214

182:                                              ; preds = %86
  %183 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %95, i64 0, i32 0, i32 2
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 32
  store i8* %185, i8** %183, align 8
  %186 = load i16, i16* %94, align 8
  %187 = zext i16 %186 to i32
  %188 = load %struct.mbuf*, %struct.mbuf** %96, align 8
  %189 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %188, i64 0, i32 0, i32 3
  store i32 %187, i32* %189, align 8
  %190 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 7
  store i32 0, i32* %190, align 8
  %191 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 8
  store i16 0, i16* %191, align 4
  %192 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 5
  store %struct.sctp_nets* %1, %struct.sctp_nets** %192, align 8
  %193 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %194 = atomicrmw add i32* %193, i32 1 seq_cst
  %195 = load %struct.mbuf*, %struct.mbuf** %96, align 8
  %196 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %195, i64 0, i32 0, i32 2
  %197 = bitcast i8** %196 to %struct.sctp_cwr_chunk**
  %198 = load %struct.sctp_cwr_chunk*, %struct.sctp_cwr_chunk** %197, align 8
  %199 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %198, i64 0, i32 0, i32 0
  store i8 13, i8* %199, align 1
  %200 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %198, i64 0, i32 0, i32 1
  store i8 %3, i8* %200, align 1
  %201 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %198, i64 0, i32 0, i32 2
  store i16 2048, i16* %201, align 1
  %202 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %203 = getelementptr inbounds %struct.sctp_cwr_chunk, %struct.sctp_cwr_chunk* %198, i64 0, i32 1
  store i32 %202, i32* %203, align 1
  %204 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %204, align 8
  %205 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %206 = bitcast %struct.sctp_tmit_chunk*** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %87, i64 0, i32 6, i32 1
  %209 = bitcast %struct.sctp_tmit_chunk*** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %205, align 8
  store %struct.sctp_tmit_chunk* %87, %struct.sctp_tmit_chunk** %210, align 8
  store %struct.sctp_tmit_chunk** %204, %struct.sctp_tmit_chunk*** %205, align 8
  %211 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %212 = load i32, i32* %211, align 8
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %211, align 8
  br label %214

214:                                              ; preds = %55, %180, %169, %167, %43, %40, %4, %182
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @sctp_add_stream_reset_result(%struct.sctp_tmit_chunk* nocapture, i32, i32) local_unnamed_addr #9 {
  %4 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 3
  %5 = load %struct.mbuf*, %struct.mbuf** %4, align 8
  %6 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %5, i64 0, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 2
  %9 = bitcast i8* %8 to i16*
  %10 = load i16, i16* %9, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10) #13
  %12 = add i16 %11, 3
  %13 = and i16 %12, -4
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds i8, i8* %7, i64 %14
  %16 = bitcast i8* %15 to i16*
  store i16 4096, i16* %16, align 1
  %17 = getelementptr inbounds i8, i8* %15, i64 2
  %18 = bitcast i8* %17 to i16*
  store i16 3072, i16* %18, align 1
  %19 = tail call i32 @llvm.bswap.i32(i32 %1) #13
  %20 = getelementptr inbounds i8, i8* %15, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  %22 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %23 = getelementptr inbounds i8, i8* %15, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 1
  %25 = add i16 %13, 12
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #13
  store i16 %26, i16* %9, align 1
  %27 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 11
  store i16 %25, i16* %27, align 2
  %28 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 17
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 10
  store i16 %25, i16* %29, align 8
  %30 = zext i16 %25 to i32
  %31 = load %struct.mbuf*, %struct.mbuf** %4, align 8
  %32 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %31, i64 0, i32 0, i32 3
  store i32 %30, i32* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_deferred_reset_response(%struct.sctp_tcb*, %struct.sctp_stream_reset_list* nocapture readonly, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 71, i64 0
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 178
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %214

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %11 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %10, align 8
  %12 = icmp eq %struct.sctp_tmit_chunk* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %15 = tail call noalias i8* @malloc(i64 %14) #13
  %16 = icmp eq i8* %15, null
  br i1 %16, label %214, label %38

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 6, i32 0
  %19 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %18, align 8
  %20 = icmp eq %struct.sctp_tmit_chunk* %19, null
  %21 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 6, i32 1
  %22 = bitcast %struct.sctp_tmit_chunk*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %19, i64 0, i32 6, i32 1
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %26 = select i1 %20, %struct.sctp_tmit_chunk*** %25, %struct.sctp_tmit_chunk*** %24
  %27 = bitcast %struct.sctp_tmit_chunk*** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %struct.sctp_tmit_chunk** %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %struct.sctp_tmit_chunk*** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  %32 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %33 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %11, i64 0, i32 14
  store i8 0, i8* %33, align 8
  %34 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %35 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %36 = load i16, i16* %35, align 2
  %37 = add i16 %36, -1
  store i16 %37, i16* %35, align 2
  br label %44

38:                                               ; preds = %13
  %39 = bitcast i8* %15 to %struct.sctp_tmit_chunk*
  %40 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %41 = getelementptr inbounds i8, i8* %15, i64 104
  %42 = bitcast i8* %41 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %42, align 8
  %43 = getelementptr inbounds i8, i8* %15, i64 144
  store i8 0, i8* %43, align 8
  br label %44

44:                                               ; preds = %38, %17
  %45 = phi %struct.sctp_tmit_chunk* [ %11, %17 ], [ %39, %38 ]
  %46 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 19
  store i8 0, i8* %46, align 1
  %47 = bitcast %struct.sctp_tmit_chunk* %45 to %struct.chk_id*
  %48 = bitcast %struct.sctp_tmit_chunk* %45 to i8*
  store i8 -126, i8* %48, align 8
  %49 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %47, i64 0, i32 1
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 9
  store i16 0, i16* %50, align 2
  %51 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 1
  store %struct.sctp_association* %4, %struct.sctp_association** %51, align 8
  %52 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 11
  store i16 4, i16* %52, align 2
  %53 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 10
  store i16 4, i16* %53, align 8
  %54 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 17
  store i8 0, i8* %54, align 1
  %55 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %56 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 3
  store %struct.mbuf* %55, %struct.mbuf** %56, align 8
  %57 = icmp eq %struct.mbuf* %55, null
  br i1 %57, label %58, label %142

58:                                               ; preds = %44
  %59 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 14
  %60 = load i8, i8* %59, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 13
  %64 = load i16, i16* %63, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %64, i32 1) #13
  store i8 0, i8* %59, align 8
  br label %65

65:                                               ; preds = %58, %62
  %66 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %66, label %140, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  %69 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %70 = icmp eq %struct.sctp_nets* %69, null
  br i1 %70, label %117, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %69, i64 0, i32 17
  %73 = atomicrmw add i32* %72, i32 -1 seq_cst
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %116

75:                                               ; preds = %71
  %76 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %77 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %76, i64 0, i32 3, i32 0
  %78 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %77, align 8
  %79 = icmp eq %struct.sctp_rtentry* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %78, i64 0, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = icmp sgt i64 %82, 1
  %84 = add nsw i64 %82, -1
  store i64 %84, i64* %81, align 8
  %85 = icmp sgt i64 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %80
  %88 = bitcast %struct.sctp_rtentry* %78 to i8*
  tail call void @free(i8* %88) #13
  br label %89

89:                                               ; preds = %80, %87
  %90 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %91 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %90, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %91, align 8
  %92 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %93 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %92, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %93, align 8
  %94 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  br label %95

95:                                               ; preds = %75, %89
  %96 = phi %struct.sctp_nets* [ %76, %75 ], [ %94, %89 ]
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %96, i64 0, i32 47
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %96, i64 0, i32 3, i32 2
  %102 = load %struct.sctp_ifa*, %struct.sctp_ifa** %101, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %102) #13
  %103 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %104 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %103, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %104, align 8
  %105 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  br label %106

106:                                              ; preds = %95, %100
  %107 = phi %struct.sctp_nets* [ %96, %95 ], [ %105, %100 ]
  %108 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %107, i64 0, i32 47
  store i8 0, i8* %108, align 1
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %110 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %109, i64 0, i32 37
  %111 = load i16, i16* %110, align 4
  %112 = and i16 %111, -2
  store i16 %112, i16* %110, align 4
  %113 = bitcast %struct.sctp_nets** %68 to i8**
  %114 = load i8*, i8** %113, align 8
  tail call void @free(i8* %114) #13
  %115 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %116

116:                                              ; preds = %71, %106
  store %struct.sctp_nets* null, %struct.sctp_nets** %68, align 8
  br label %117

117:                                              ; preds = %67, %116
  %118 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %122 = icmp ult i32 %121, %120
  br i1 %122, label %127, label %123

123:                                              ; preds = %117
  %124 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %125 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %126 = icmp ugt i32 %124, %125
  br i1 %126, label %127, label %129

127:                                              ; preds = %123, %117
  tail call void @free(i8* %48) #13
  %128 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %214

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %130, align 8
  %131 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %132 = bitcast %struct.sctp_tmit_chunk*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 1
  %135 = bitcast %struct.sctp_tmit_chunk*** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %131, align 8
  store %struct.sctp_tmit_chunk* %45, %struct.sctp_tmit_chunk** %136, align 8
  store %struct.sctp_tmit_chunk** %130, %struct.sctp_tmit_chunk*** %131, align 8
  %137 = load i16, i16* %118, align 2
  %138 = add i16 %137, 1
  store i16 %138, i16* %118, align 2
  %139 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %214

140:                                              ; preds = %65
  tail call void @free(i8* %48) #13
  %141 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %214

142:                                              ; preds = %44
  %143 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %55, i64 0, i32 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 32
  store i8* %145, i8** %143, align 8
  %146 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 7
  store i32 0, i32* %146, align 8
  %147 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 8
  store i16 0, i16* %147, align 4
  %148 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %149 = load %struct.sctp_nets*, %struct.sctp_nets** %148, align 8
  %150 = icmp eq %struct.sctp_nets* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  store %struct.sctp_nets* %149, %struct.sctp_nets** %152, align 8
  br label %159

153:                                              ; preds = %142
  %154 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %155 = bitcast %struct.sctp_nets** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  %158 = bitcast %struct.sctp_nets** %157 to i64*
  store i64 %156, i64* %158, align 8
  br label %159

159:                                              ; preds = %153, %151
  %160 = load %struct.mbuf*, %struct.mbuf** %56, align 8
  %161 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %160, i64 0, i32 0, i32 2
  %162 = bitcast i8** %161 to %struct.sctp_chunkhdr**
  %163 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %162, align 8
  %164 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %163, i64 0, i32 0
  store i8 -126, i8* %164, align 1
  %165 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %163, i64 0, i32 1
  store i8 0, i8* %165, align 1
  %166 = load i16, i16* %52, align 2
  %167 = tail call i16 @llvm.bswap.i16(i16 %166) #13
  %168 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %163, i64 0, i32 2
  store i16 %167, i16* %168, align 1
  %169 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  %170 = load %struct.sctp_nets*, %struct.sctp_nets** %169, align 8
  %171 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %170, i64 0, i32 17
  %172 = atomicrmw add i32* %171, i32 1 seq_cst
  %173 = load i16, i16* %53, align 8
  %174 = zext i16 %173 to i32
  %175 = load %struct.mbuf*, %struct.mbuf** %56, align 8
  %176 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %175, i64 0, i32 0, i32 3
  store i32 %174, i32* %176, align 8
  %177 = getelementptr inbounds %struct.sctp_stream_reset_list, %struct.sctp_stream_reset_list* %1, i64 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = load %struct.mbuf*, %struct.mbuf** %56, align 8
  %180 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %179, i64 0, i32 0, i32 2
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 2
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 1
  %185 = tail call i16 @llvm.bswap.i16(i16 %184) #13
  %186 = add i16 %185, 3
  %187 = and i16 %186, -4
  %188 = zext i16 %187 to i64
  %189 = getelementptr inbounds i8, i8* %181, i64 %188
  %190 = bitcast i8* %189 to i16*
  store i16 4096, i16* %190, align 1
  %191 = getelementptr inbounds i8, i8* %189, i64 2
  %192 = bitcast i8* %191 to i16*
  store i16 3072, i16* %192, align 1
  %193 = tail call i32 @llvm.bswap.i32(i32 %178) #13
  %194 = getelementptr inbounds i8, i8* %189, i64 4
  %195 = bitcast i8* %194 to i32*
  store i32 %193, i32* %195, align 1
  %196 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %197 = getelementptr inbounds i8, i8* %189, i64 8
  %198 = bitcast i8* %197 to i32*
  store i32 %196, i32* %198, align 1
  %199 = add i16 %187, 12
  %200 = tail call i16 @llvm.bswap.i16(i16 %199) #13
  store i16 %200, i16* %183, align 1
  store i16 %199, i16* %52, align 2
  store i8 0, i8* %54, align 1
  store i16 %199, i16* %53, align 8
  %201 = zext i16 %199 to i32
  %202 = load %struct.mbuf*, %struct.mbuf** %56, align 8
  %203 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %202, i64 0, i32 0, i32 3
  store i32 %201, i32* %203, align 8
  %204 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %204, align 8
  %205 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %206 = bitcast %struct.sctp_tmit_chunk*** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 6, i32 1
  %209 = bitcast %struct.sctp_tmit_chunk*** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %205, align 8
  store %struct.sctp_tmit_chunk* %45, %struct.sctp_tmit_chunk** %210, align 8
  store %struct.sctp_tmit_chunk** %204, %struct.sctp_tmit_chunk*** %205, align 8
  %211 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %212 = load i32, i32* %211, align 8
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %211, align 8
  br label %214

214:                                              ; preds = %13, %140, %129, %127, %3, %159
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @sctp_add_stream_reset_result_tsn(%struct.sctp_tmit_chunk* nocapture, i32, i32, i32, i32) local_unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 3
  %7 = load %struct.mbuf*, %struct.mbuf** %6, align 8
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 2
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #13
  %14 = add i16 %13, 3
  %15 = and i16 %14, -4
  %16 = zext i16 %15 to i64
  %17 = getelementptr inbounds i8, i8* %9, i64 %16
  %18 = bitcast i8* %17 to i16*
  store i16 4096, i16* %18, align 1
  %19 = getelementptr inbounds i8, i8* %17, i64 2
  %20 = bitcast i8* %19 to i16*
  store i16 5120, i16* %20, align 1
  %21 = tail call i32 @llvm.bswap.i32(i32 %1) #13
  %22 = getelementptr inbounds i8, i8* %17, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %25 = getelementptr inbounds i8, i8* %17, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = tail call i32 @llvm.bswap.i32(i32 %3) #13
  %28 = getelementptr inbounds i8, i8* %17, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = tail call i32 @llvm.bswap.i32(i32 %4) #13
  %31 = getelementptr inbounds i8, i8* %17, i64 16
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = add i16 %15, 20
  %34 = tail call i16 @llvm.bswap.i16(i16 %33) #13
  store i16 %34, i16* %11, align 1
  %35 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 11
  store i16 %33, i16* %35, align 2
  %36 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 10
  store i16 %33, i16* %36, align 8
  %37 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %0, i64 0, i32 17
  store i8 0, i8* %37, align 1
  %38 = zext i16 %33 to i32
  %39 = load %struct.mbuf*, %struct.mbuf** %6, align 8
  %40 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %39, i64 0, i32 0, i32 3
  store i32 %38, i32* %40, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @sctp_add_stream_reset_out(%struct.sctp_tcb* nocapture readonly, %struct.sctp_tmit_chunk* nocapture, i32, i32, i32) unnamed_addr #9 {
  %6 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 3
  %7 = load %struct.mbuf*, %struct.mbuf** %6, align 8
  %8 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %7, i64 0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 2
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #13
  %14 = add i16 %13, 3
  %15 = and i16 %14, -4
  %16 = zext i16 %15 to i64
  %17 = getelementptr inbounds i8, i8* %9, i64 %16
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %142, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %23 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %22, align 8
  %24 = zext i16 %19 to i64
  br label %25

25:                                               ; preds = %21, %41
  %26 = phi i64 [ 0, %21 ], [ %43, %41 ]
  %27 = phi i32 [ 0, %21 ], [ %42, %41 ]
  %28 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %23, i64 %26, i32 9
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 3
  br i1 %30, label %31, label %41

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %23, i64 %26, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %23, i64 %26, i32 0, i32 0
  %37 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %36, align 8
  %38 = icmp eq %struct.sctp_stream_queue_pending* %37, null
  %39 = zext i1 %38 to i32
  %40 = add nsw i32 %27, %39
  br label %41

41:                                               ; preds = %35, %25, %31
  %42 = phi i32 [ %27, %31 ], [ %27, %25 ], [ %40, %35 ]
  %43 = add nuw nsw i64 %26, 1
  %44 = icmp ult i64 %43, %24
  br i1 %44, label %25, label %45

45:                                               ; preds = %41
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %142, label %47

47:                                               ; preds = %45
  %48 = zext i16 %19 to i32
  %49 = icmp eq i32 %42, %48
  %50 = select i1 %49, i32 0, i32 %42
  %51 = icmp slt i32 %50, 200
  %52 = select i1 %51, i32 %50, i32 200
  %53 = sext i32 %52 to i64
  %54 = trunc i32 %52 to i16
  %55 = shl i16 %54, 1
  %56 = add i16 %55, 16
  %57 = bitcast i8* %17 to i16*
  store i16 3328, i16* %57, align 1
  %58 = tail call i16 @llvm.bswap.i16(i16 %56) #13
  %59 = getelementptr inbounds i8, i8* %17, i64 2
  %60 = bitcast i8* %59 to i16*
  store i16 %58, i16* %60, align 1
  %61 = tail call i32 @llvm.bswap.i32(i32 %2) #13
  %62 = getelementptr inbounds i8, i8* %17, i64 4
  %63 = bitcast i8* %62 to i32*
  store i32 %61, i32* %63, align 1
  %64 = tail call i32 @llvm.bswap.i32(i32 %3) #13
  %65 = getelementptr inbounds i8, i8* %17, i64 8
  %66 = bitcast i8* %65 to i32*
  store i32 %64, i32* %66, align 1
  %67 = tail call i32 @llvm.bswap.i32(i32 %4) #13
  %68 = getelementptr inbounds i8, i8* %17, i64 12
  %69 = bitcast i8* %68 to i32*
  store i32 %67, i32* %69, align 1
  %70 = icmp eq i32 %52, 0
  %71 = load i16, i16* %18, align 2
  %72 = icmp ne i16 %71, 0
  br i1 %70, label %78, label %73

73:                                               ; preds = %47
  br i1 %72, label %74, label %122

74:                                               ; preds = %73
  %75 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %76 = getelementptr inbounds i8, i8* %17, i64 16
  %77 = bitcast i8* %76 to [0 x i16]*
  br label %81

78:                                               ; preds = %47
  br i1 %72, label %79, label %122

79:                                               ; preds = %78
  %80 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  br label %114

81:                                               ; preds = %74, %108
  %82 = phi i16 [ %71, %74 ], [ %109, %108 ]
  %83 = phi i64 [ 0, %74 ], [ %111, %108 ]
  %84 = phi i32 [ 0, %74 ], [ %110, %108 ]
  %85 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %75, align 8
  %86 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %85, i64 %83, i32 9
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 3
  br i1 %88, label %89, label %108

89:                                               ; preds = %81
  %90 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %85, i64 %83, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %108

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %85, i64 %83, i32 0, i32 0
  %95 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %94, align 8
  %96 = icmp eq %struct.sctp_stream_queue_pending* %95, null
  br i1 %96, label %97, label %108

97:                                               ; preds = %93
  %98 = trunc i64 %83 to i16
  %99 = tail call i16 @llvm.bswap.i16(i16 %98) #13
  %100 = sext i32 %84 to i64
  %101 = getelementptr inbounds [0 x i16], [0 x i16]* %77, i64 0, i64 %100
  store i16 %99, i16* %101, align 1
  %102 = add nsw i32 %84, 1
  %103 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %75, align 8
  %104 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %103, i64 %83, i32 9
  store i8 4, i8* %104, align 1
  %105 = icmp slt i32 %102, %52
  br i1 %105, label %106, label %122

106:                                              ; preds = %97
  %107 = load i16, i16* %18, align 2
  br label %108

108:                                              ; preds = %106, %81, %89, %93
  %109 = phi i16 [ %107, %106 ], [ %82, %93 ], [ %82, %89 ], [ %82, %81 ]
  %110 = phi i32 [ %102, %106 ], [ %84, %93 ], [ %84, %89 ], [ %84, %81 ]
  %111 = add nuw nsw i64 %83, 1
  %112 = zext i16 %109 to i64
  %113 = icmp ult i64 %111, %112
  br i1 %113, label %81, label %122

114:                                              ; preds = %79, %114
  %115 = phi i64 [ 0, %79 ], [ %118, %114 ]
  %116 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %80, align 8
  %117 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %116, i64 %115, i32 9
  store i8 4, i8* %117, align 1
  %118 = add nuw nsw i64 %115, 1
  %119 = load i16, i16* %18, align 2
  %120 = zext i16 %119 to i64
  %121 = icmp ult i64 %118, %120
  br i1 %121, label %114, label %122

122:                                              ; preds = %108, %97, %114, %73, %78
  %123 = zext i16 %56 to i32
  %124 = add nuw nsw i32 %123, 3
  %125 = and i32 %124, 131068
  %126 = icmp ugt i32 %125, %123
  br i1 %126, label %127, label %131

127:                                              ; preds = %122
  %128 = getelementptr inbounds i8, i8* %17, i64 16
  %129 = bitcast i8* %128 to [0 x i16]*
  %130 = getelementptr inbounds [0 x i16], [0 x i16]* %129, i64 0, i64 %53
  store i16 0, i16* %130, align 1
  br label %131

131:                                              ; preds = %127, %122
  %132 = add i16 %56, %15
  %133 = tail call i16 @llvm.bswap.i16(i16 %132) #13
  store i16 %133, i16* %11, align 1
  %134 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 11
  store i16 %132, i16* %134, align 2
  %135 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 17
  store i8 0, i8* %135, align 1
  %136 = add i16 %132, 3
  %137 = and i16 %136, -4
  %138 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1, i64 0, i32 10
  store i16 %137, i16* %138, align 8
  %139 = zext i16 %137 to i32
  %140 = load %struct.mbuf*, %struct.mbuf** %6, align 8
  %141 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %140, i64 0, i32 0, i32 3
  store i32 %139, i32* %141, align 8
  br label %142

142:                                              ; preds = %5, %45, %131
  %143 = phi i32 [ 1, %131 ], [ 0, %45 ], [ 0, %5 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_send_str_reset_req(%struct.sctp_tcb*, i16 zeroext, i16* nocapture readonly, i8 zeroext, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8 zeroext) local_unnamed_addr #2 {
  %10 = bitcast i16* %2 to i8*
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 178
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %653

15:                                               ; preds = %9
  %16 = icmp eq i8 %3, 0
  %17 = icmp eq i8 %4, 0
  %18 = or i8 %4, %3
  %19 = or i8 %18, %5
  %20 = icmp ne i8 %19, 0
  %21 = or i1 %16, %17
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %653

23:                                               ; preds = %15
  %24 = icmp ne i8 %3, 0
  %25 = icmp ugt i16 %1, 998
  br i1 %25, label %653, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 0
  %28 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %27, align 8
  %29 = icmp eq %struct.sctp_tmit_chunk* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 17), align 8
  %32 = tail call noalias i8* @malloc(i64 %31) #13
  %33 = icmp eq i8* %32, null
  br i1 %33, label %653, label %55

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 6, i32 0
  %36 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %35, align 8
  %37 = icmp eq %struct.sctp_tmit_chunk* %36, null
  %38 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 6, i32 1
  %39 = bitcast %struct.sctp_tmit_chunk*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %36, i64 0, i32 6, i32 1
  %42 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %43 = select i1 %37, %struct.sctp_tmit_chunk*** %42, %struct.sctp_tmit_chunk*** %41
  %44 = bitcast %struct.sctp_tmit_chunk*** %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = bitcast %struct.sctp_tmit_chunk** %35 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %struct.sctp_tmit_chunk*** %38 to i64**
  %48 = load i64*, i64** %47, align 8
  store i64 %46, i64* %48, align 8
  %49 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  %50 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %28, i64 0, i32 14
  store i8 0, i8* %50, align 8
  %51 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 117), i32 1 seq_cst
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %53 = load i16, i16* %52, align 2
  %54 = add i16 %53, -1
  store i16 %54, i16* %52, align 2
  br label %61

55:                                               ; preds = %30
  %56 = bitcast i8* %32 to %struct.sctp_tmit_chunk*
  %57 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  %58 = getelementptr inbounds i8, i8* %32, i64 104
  %59 = bitcast i8* %58 to %struct.sctp_nets**
  store %struct.sctp_nets* null, %struct.sctp_nets** %59, align 8
  %60 = getelementptr inbounds i8, i8* %32, i64 144
  store i8 0, i8* %60, align 8
  br label %61

61:                                               ; preds = %55, %34
  %62 = phi %struct.sctp_tmit_chunk* [ %28, %34 ], [ %56, %55 ]
  %63 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 19
  store i8 0, i8* %63, align 1
  %64 = bitcast %struct.sctp_tmit_chunk* %62 to %struct.chk_id*
  %65 = bitcast %struct.sctp_tmit_chunk* %62 to i8*
  store i8 -126, i8* %65, align 8
  %66 = getelementptr inbounds %struct.chk_id, %struct.chk_id* %64, i64 0, i32 1
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 9
  store i16 0, i16* %67, align 2
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 1
  store %struct.sctp_association* %11, %struct.sctp_association** %68, align 8
  %69 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 11
  store i16 4, i16* %69, align 2
  %70 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 10
  store i16 4, i16* %70, align 8
  %71 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 17
  store i8 0, i8* %71, align 1
  %72 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %73 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 3
  store %struct.mbuf* %72, %struct.mbuf** %73, align 8
  %74 = icmp eq %struct.mbuf* %72, null
  br i1 %74, label %75, label %159

75:                                               ; preds = %61
  %76 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 14
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 13
  %81 = load i16, i16* %80, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %81, i32 1) #13
  store i8 0, i8* %76, align 8
  br label %82

82:                                               ; preds = %75, %79
  %83 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %83, label %157, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 5
  %86 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %87 = icmp eq %struct.sctp_nets* %86, null
  br i1 %87, label %134, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %86, i64 0, i32 17
  %90 = atomicrmw add i32* %89, i32 -1 seq_cst
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %133

92:                                               ; preds = %88
  %93 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %94 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %93, i64 0, i32 3, i32 0
  %95 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %94, align 8
  %96 = icmp eq %struct.sctp_rtentry* %95, null
  br i1 %96, label %112, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %95, i64 0, i32 3
  %99 = load i64, i64* %98, align 8
  %100 = icmp sgt i64 %99, 1
  %101 = add nsw i64 %99, -1
  store i64 %101, i64* %98, align 8
  %102 = icmp sgt i64 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  %105 = bitcast %struct.sctp_rtentry* %95 to i8*
  tail call void @free(i8* %105) #13
  br label %106

106:                                              ; preds = %97, %104
  %107 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %108 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %107, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %108, align 8
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %110 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %109, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %110, align 8
  %111 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  br label %112

112:                                              ; preds = %92, %106
  %113 = phi %struct.sctp_nets* [ %93, %92 ], [ %111, %106 ]
  %114 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %113, i64 0, i32 47
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %113, i64 0, i32 3, i32 2
  %119 = load %struct.sctp_ifa*, %struct.sctp_ifa** %118, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %119) #13
  %120 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %121 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %120, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %121, align 8
  %122 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  br label %123

123:                                              ; preds = %112, %117
  %124 = phi %struct.sctp_nets* [ %113, %112 ], [ %122, %117 ]
  %125 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %124, i64 0, i32 47
  store i8 0, i8* %125, align 1
  %126 = load %struct.sctp_nets*, %struct.sctp_nets** %85, align 8
  %127 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %126, i64 0, i32 37
  %128 = load i16, i16* %127, align 4
  %129 = and i16 %128, -2
  store i16 %129, i16* %127, align 4
  %130 = bitcast %struct.sctp_nets** %85 to i8**
  %131 = load i8*, i8** %130, align 8
  tail call void @free(i8* %131) #13
  %132 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %133

133:                                              ; preds = %88, %123
  store %struct.sctp_nets* null, %struct.sctp_nets** %85, align 8
  br label %134

134:                                              ; preds = %84, %133
  %135 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %139 = icmp ult i32 %138, %137
  br i1 %139, label %144, label %140

140:                                              ; preds = %134
  %141 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %142 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %143 = icmp ugt i32 %141, %142
  br i1 %143, label %144, label %146

144:                                              ; preds = %140, %134
  tail call void @free(i8* %65) #13
  %145 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %653

146:                                              ; preds = %140
  %147 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %147, align 8
  %148 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %149 = bitcast %struct.sctp_tmit_chunk*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 1
  %152 = bitcast %struct.sctp_tmit_chunk*** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %148, align 8
  store %struct.sctp_tmit_chunk* %62, %struct.sctp_tmit_chunk** %153, align 8
  store %struct.sctp_tmit_chunk** %147, %struct.sctp_tmit_chunk*** %148, align 8
  %154 = load i16, i16* %135, align 2
  %155 = add i16 %154, 1
  store i16 %155, i16* %135, align 2
  %156 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %653

157:                                              ; preds = %82
  tail call void @free(i8* %65) #13
  %158 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %653

159:                                              ; preds = %61
  %160 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %72, i64 0, i32 0, i32 2
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 32
  store i8* %162, i8** %160, align 8
  %163 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 7
  store i32 0, i32* %163, align 8
  %164 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 8
  store i16 0, i16* %164, align 4
  %165 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 31
  %166 = load %struct.sctp_nets*, %struct.sctp_nets** %165, align 8
  %167 = icmp eq %struct.sctp_nets* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %159
  %169 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 5
  store %struct.sctp_nets* %166, %struct.sctp_nets** %169, align 8
  br label %177

170:                                              ; preds = %159
  %171 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %172 = bitcast %struct.sctp_nets** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 5
  %175 = bitcast %struct.sctp_nets** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = inttoptr i64 %173 to %struct.sctp_nets*
  br label %177

177:                                              ; preds = %170, %168
  %178 = phi %struct.sctp_nets* [ %176, %170 ], [ %166, %168 ]
  %179 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 5
  %180 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %178, i64 0, i32 17
  %181 = atomicrmw add i32* %180, i32 1 seq_cst
  %182 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %183 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %182, i64 0, i32 0, i32 2
  %184 = bitcast i8** %183 to %struct.sctp_chunkhdr**
  %185 = load %struct.sctp_chunkhdr*, %struct.sctp_chunkhdr** %184, align 8
  %186 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %185, i64 0, i32 0
  store i8 -126, i8* %186, align 1
  %187 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %185, i64 0, i32 1
  store i8 0, i8* %187, align 1
  %188 = load i16, i16* %69, align 2
  %189 = tail call i16 @llvm.bswap.i16(i16 %188) #13
  %190 = getelementptr inbounds %struct.sctp_chunkhdr, %struct.sctp_chunkhdr* %185, i64 0, i32 2
  store i16 %189, i16* %190, align 1
  %191 = load i16, i16* %70, align 8
  %192 = zext i16 %191 to i32
  %193 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %194 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %193, i64 0, i32 0, i32 3
  store i32 %192, i32* %194, align 8
  %195 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 46
  %196 = load i32, i32* %195, align 8
  br i1 %24, label %197, label %210

197:                                              ; preds = %177
  %198 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 47
  %199 = load i32, i32* %198, align 4
  %200 = add i32 %199, -1
  %201 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 56
  %202 = load i32, i32* %201, align 8
  %203 = add i32 %202, -1
  %204 = tail call fastcc i32 @sctp_add_stream_reset_out(%struct.sctp_tcb* %0, %struct.sctp_tmit_chunk* nonnull %62, i32 %196, i32 %200, i32 %203)
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %197
  %207 = add i32 %196, 1
  %208 = load i8, i8* %12, align 2
  %209 = add i8 %208, 1
  store i8 %209, i8* %12, align 2
  br label %210

210:                                              ; preds = %177, %206, %197
  %211 = phi i32 [ %196, %177 ], [ %207, %206 ], [ %196, %197 ]
  %212 = and i8 %5, 1
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %370, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 130
  %216 = load i16, i16* %215, align 4
  %217 = zext i16 %216 to i32
  %218 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = sub nsw i32 %217, %220
  %222 = zext i16 %6 to i32
  %223 = icmp slt i32 %221, %222
  br i1 %223, label %224, label %370

224:                                              ; preds = %214
  %225 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %226 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %227 = add nuw nsw i32 %220, %222
  %228 = shl nuw nsw i32 %227, 6
  %229 = zext i32 %228 to i64
  %230 = tail call noalias i8* @malloc(i64 %229) #13
  %231 = bitcast %struct.sctp_stream_out** %225 to i8**
  store i8* %230, i8** %231, align 8
  %232 = icmp eq i8* %230, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %224
  store %struct.sctp_stream_out* %226, %struct.sctp_stream_out** %225, align 8
  %234 = and i8 %5, -2
  br label %370

235:                                              ; preds = %224
  %236 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %237 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %236) #13
  %238 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 1
  %239 = load void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)** %238, align 8
  tail call void %239(%struct.sctp_tcb* %0, %struct.sctp_association* %11, i32 0, i32 1) #13
  %240 = load i16, i16* %218, align 2
  %241 = icmp eq i16 %240, 0
  br i1 %241, label %322, label %242

242:                                              ; preds = %235
  %243 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 2
  br label %244

244:                                              ; preds = %242, %316
  %245 = phi i64 [ 0, %242 ], [ %317, %316 ]
  %246 = phi i32 [ 0, %242 ], [ %318, %316 ]
  %247 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %248 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %247, i64 %245, i32 0, i32 0
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %248, align 8
  %249 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %250 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %249, i64 %245, i32 0, i32 0
  %251 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %249, i64 %245, i32 0, i32 1
  store %struct.sctp_stream_queue_pending** %250, %struct.sctp_stream_queue_pending*** %251, align 8
  %252 = load void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)** %243, align 8
  %253 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %254 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %253, i64 %245
  %255 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245
  tail call void %252(%struct.sctp_tcb* %0, %struct.sctp_stream_out* %254, %struct.sctp_stream_out* %255) #13
  %256 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 2
  %257 = load i32, i32* %256, align 8
  %258 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %259 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %258, i64 %245, i32 2
  store i32 %257, i32* %259, align 8
  %260 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 4, i64 0
  %261 = load i32, i32* %260, align 8
  %262 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %263 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %262, i64 %245, i32 4, i64 0
  store i32 %261, i32* %263, align 8
  %264 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 3, i64 0
  %265 = load i32, i32* %264, align 4
  %266 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %267 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %266, i64 %245, i32 3, i64 0
  store i32 %265, i32* %267, align 4
  %268 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 5
  %269 = load i32, i32* %268, align 4
  %270 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %271 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %270, i64 %245, i32 5
  store i32 %269, i32* %271, align 4
  %272 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 6
  %273 = load i32, i32* %272, align 8
  %274 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %275 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %274, i64 %245, i32 6
  store i32 %273, i32* %275, align 8
  %276 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 8
  %277 = load i8, i8* %276, align 2
  %278 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %279 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %278, i64 %245, i32 8
  store i8 %277, i8* %279, align 2
  %280 = trunc i32 %246 to i16
  %281 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %282 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %281, i64 %245, i32 7
  store i16 %280, i16* %282, align 4
  %283 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 9
  %284 = load i8, i8* %283, align 1
  %285 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %286 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %285, i64 %245, i32 9
  store i8 %284, i8* %286, align 1
  %287 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %255, i64 0, i32 0, i32 0
  %288 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %287, align 8
  %289 = icmp eq %struct.sctp_stream_queue_pending* %288, null
  br i1 %289, label %316, label %290

290:                                              ; preds = %244
  %291 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %226, i64 %245, i32 0, i32 1
  br label %292

292:                                              ; preds = %290, %292
  %293 = phi %struct.sctp_stream_queue_pending* [ %288, %290 ], [ %295, %292 ]
  %294 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %293, i64 0, i32 4, i32 0
  %295 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %294, align 8
  %296 = icmp eq %struct.sctp_stream_queue_pending* %295, null
  %297 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %293, i64 0, i32 4, i32 1
  %298 = bitcast %struct.sctp_stream_queue_pending*** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %295, i64 0, i32 4, i32 1
  %301 = select i1 %296, %struct.sctp_stream_queue_pending*** %291, %struct.sctp_stream_queue_pending*** %300
  %302 = bitcast %struct.sctp_stream_queue_pending*** %301 to i64*
  store i64 %299, i64* %302, align 8
  %303 = bitcast %struct.sctp_stream_queue_pending** %294 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %struct.sctp_stream_queue_pending*** %297 to i64**
  %306 = load i64*, i64** %305, align 8
  store i64 %304, i64* %306, align 8
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %294, align 8
  %307 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %308 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %307, i64 %245, i32 0, i32 1
  %309 = bitcast %struct.sctp_stream_queue_pending*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  store i64 %310, i64* %298, align 8
  %311 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %312 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %311, i64 %245, i32 0, i32 1
  %313 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %312, align 8
  store %struct.sctp_stream_queue_pending* %293, %struct.sctp_stream_queue_pending** %313, align 8
  %314 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %315 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %314, i64 %245, i32 0, i32 1
  store %struct.sctp_stream_queue_pending** %294, %struct.sctp_stream_queue_pending*** %315, align 8
  br i1 %296, label %316, label %292

316:                                              ; preds = %292, %244
  %317 = add nuw nsw i64 %245, 1
  %318 = add nuw nsw i32 %246, 1
  %319 = load i16, i16* %218, align 2
  %320 = zext i16 %319 to i64
  %321 = icmp ult i64 %317, %320
  br i1 %321, label %244, label %322

322:                                              ; preds = %316, %235
  %323 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 0
  %324 = load void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32)** %323, align 8
  tail call void %324(%struct.sctp_tcb* %0, %struct.sctp_association* %11, i32 1) #13
  %325 = load i16, i16* %218, align 2
  %326 = zext i16 %325 to i32
  %327 = add nuw nsw i32 %326, %222
  %328 = icmp eq i16 %6, 0
  br i1 %328, label %365, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 2
  %331 = zext i16 %325 to i64
  br label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %331, %329 ], [ %359, %332 ]
  %334 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %335 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %334, i64 %333, i32 0, i32 0
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %335, align 8
  %336 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %337 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %336, i64 %333, i32 0, i32 0
  %338 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %336, i64 %333, i32 0, i32 1
  store %struct.sctp_stream_queue_pending** %337, %struct.sctp_stream_queue_pending*** %338, align 8
  %339 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %340 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %339, i64 %333, i32 2
  store i32 0, i32* %340, align 8
  %341 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %342 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %341, i64 %333, i32 4, i64 0
  store i32 0, i32* %342, align 8
  %343 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %344 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %343, i64 %333, i32 3, i64 0
  store i32 0, i32* %344, align 4
  %345 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %346 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %345, i64 %333, i32 5
  store i32 0, i32* %346, align 4
  %347 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %348 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %347, i64 %333, i32 6
  store i32 0, i32* %348, align 8
  %349 = trunc i64 %333 to i16
  %350 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %351 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %350, i64 %333, i32 7
  store i16 %349, i16* %351, align 4
  %352 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %353 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %352, i64 %333, i32 8
  store i8 0, i8* %353, align 2
  %354 = load void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)** %330, align 8
  %355 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %356 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %355, i64 %333
  tail call void %354(%struct.sctp_tcb* %0, %struct.sctp_stream_out* %356, %struct.sctp_stream_out* null) #13
  %357 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %225, align 8
  %358 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %357, i64 %333, i32 9
  store i8 0, i8* %358, align 1
  %359 = add nuw nsw i64 %333, 1
  %360 = load i16, i16* %218, align 2
  %361 = zext i16 %360 to i32
  %362 = add nuw nsw i32 %361, %222
  %363 = zext i32 %362 to i64
  %364 = icmp ult i64 %359, %363
  br i1 %364, label %332, label %365

365:                                              ; preds = %332, %322
  %366 = phi i32 [ %327, %322 ], [ %362, %332 ]
  %367 = trunc i32 %366 to i16
  store i16 %367, i16* %215, align 4
  %368 = bitcast %struct.sctp_stream_out* %226 to i8*
  tail call void @free(i8* %368) #13
  %369 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %236) #13
  br label %370

370:                                              ; preds = %233, %365, %210, %214
  %371 = phi i8 [ %5, %214 ], [ %5, %210 ], [ %234, %233 ], [ %5, %365 ]
  %372 = zext i8 %371 to i32
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  %375 = icmp eq i16 %6, 0
  %376 = or i1 %375, %374
  br i1 %376, label %410, label %377

377:                                              ; preds = %370
  %378 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 131
  store i16 %6, i16* %378, align 2
  %379 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 169
  store i8 %8, i8* %379, align 1
  %380 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %381 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %380, i64 0, i32 0, i32 2
  %382 = load i8*, i8** %381, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 2
  %384 = bitcast i8* %383 to i16*
  %385 = load i16, i16* %384, align 1
  %386 = tail call i16 @llvm.bswap.i16(i16 %385) #13
  %387 = add i16 %386, 3
  %388 = and i16 %387, -4
  %389 = zext i16 %388 to i64
  %390 = getelementptr inbounds i8, i8* %382, i64 %389
  %391 = bitcast i8* %390 to i16*
  store i16 4352, i16* %391, align 1
  %392 = getelementptr inbounds i8, i8* %390, i64 2
  %393 = bitcast i8* %392 to i16*
  store i16 3072, i16* %393, align 1
  %394 = tail call i32 @llvm.bswap.i32(i32 %211) #13
  %395 = getelementptr inbounds i8, i8* %390, i64 4
  %396 = bitcast i8* %395 to i32*
  store i32 %394, i32* %396, align 1
  %397 = tail call i16 @llvm.bswap.i16(i16 %6) #13
  %398 = getelementptr inbounds i8, i8* %390, i64 8
  %399 = bitcast i8* %398 to i16*
  store i16 %397, i16* %399, align 1
  %400 = getelementptr inbounds i8, i8* %390, i64 10
  %401 = bitcast i8* %400 to i16*
  store i16 0, i16* %401, align 1
  %402 = add i16 %388, 12
  %403 = tail call i16 @llvm.bswap.i16(i16 %402) #13
  store i16 %403, i16* %384, align 1
  store i16 %402, i16* %70, align 8
  store i16 %402, i16* %69, align 2
  store i8 0, i8* %71, align 1
  %404 = zext i16 %402 to i32
  %405 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %406 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %405, i64 0, i32 0, i32 3
  store i32 %404, i32* %406, align 8
  %407 = add i32 %211, 1
  %408 = load i8, i8* %12, align 2
  %409 = add i8 %408, 1
  store i8 %409, i8* %12, align 2
  br label %410

410:                                              ; preds = %370, %377
  %411 = phi i32 [ %407, %377 ], [ %211, %370 ]
  %412 = and i32 %372, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp eq i16 %7, 0
  %415 = or i1 %414, %413
  br i1 %415, label %447, label %416

416:                                              ; preds = %410
  %417 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %418 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %417, i64 0, i32 0, i32 2
  %419 = load i8*, i8** %418, align 8
  %420 = getelementptr inbounds i8, i8* %419, i64 2
  %421 = bitcast i8* %420 to i16*
  %422 = load i16, i16* %421, align 1
  %423 = tail call i16 @llvm.bswap.i16(i16 %422) #13
  %424 = add i16 %423, 3
  %425 = and i16 %424, -4
  %426 = zext i16 %425 to i64
  %427 = getelementptr inbounds i8, i8* %419, i64 %426
  %428 = bitcast i8* %427 to i16*
  store i16 4608, i16* %428, align 1
  %429 = getelementptr inbounds i8, i8* %427, i64 2
  %430 = bitcast i8* %429 to i16*
  store i16 3072, i16* %430, align 1
  %431 = tail call i32 @llvm.bswap.i32(i32 %411) #13
  %432 = getelementptr inbounds i8, i8* %427, i64 4
  %433 = bitcast i8* %432 to i32*
  store i32 %431, i32* %433, align 1
  %434 = tail call i16 @llvm.bswap.i16(i16 %7) #13
  %435 = getelementptr inbounds i8, i8* %427, i64 8
  %436 = bitcast i8* %435 to i16*
  store i16 %434, i16* %436, align 1
  %437 = getelementptr inbounds i8, i8* %427, i64 10
  %438 = bitcast i8* %437 to i16*
  store i16 0, i16* %438, align 1
  %439 = add i16 %425, 12
  %440 = tail call i16 @llvm.bswap.i16(i16 %439) #13
  store i16 %440, i16* %421, align 1
  store i16 %439, i16* %70, align 8
  store i16 %439, i16* %69, align 2
  store i8 0, i8* %71, align 1
  %441 = zext i16 %439 to i32
  %442 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %443 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %442, i64 0, i32 0, i32 3
  store i32 %441, i32* %443, align 8
  %444 = add i32 %411, 1
  %445 = load i8, i8* %12, align 2
  %446 = add i8 %445, 1
  store i8 %446, i8* %12, align 2
  br label %447

447:                                              ; preds = %410, %416
  %448 = phi i32 [ %444, %416 ], [ %411, %410 ]
  br i1 %24, label %449, label %606

449:                                              ; preds = %447
  %450 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %451 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %450, i64 0, i32 0, i32 2
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr inbounds i8, i8* %452, i64 2
  %454 = bitcast i8* %453 to i16*
  %455 = load i16, i16* %454, align 1
  %456 = tail call i16 @llvm.bswap.i16(i16 %455) #13
  %457 = add i16 %456, 3
  %458 = and i16 %457, -4
  %459 = zext i16 %458 to i64
  %460 = getelementptr inbounds i8, i8* %452, i64 %459
  %461 = zext i16 %1 to i64
  %462 = shl i16 %1, 1
  %463 = add i16 %462, 8
  %464 = bitcast i8* %460 to i16*
  store i16 3584, i16* %464, align 1
  %465 = tail call i16 @llvm.bswap.i16(i16 %463) #13
  %466 = getelementptr inbounds i8, i8* %460, i64 2
  %467 = bitcast i8* %466 to i16*
  store i16 %465, i16* %467, align 1
  %468 = tail call i32 @llvm.bswap.i32(i32 %448) #13
  %469 = getelementptr inbounds i8, i8* %460, i64 4
  %470 = bitcast i8* %469 to i32*
  store i32 %468, i32* %470, align 1
  %471 = icmp eq i16 %1, 0
  br i1 %471, label %586, label %472

472:                                              ; preds = %449
  %473 = getelementptr inbounds i8, i8* %460, i64 8
  %474 = bitcast i8* %473 to [0 x i16]*
  %475 = icmp ult i16 %1, 16
  br i1 %475, label %544, label %476

476:                                              ; preds = %472
  %477 = shl nuw nsw i64 %461, 1
  %478 = add nuw nsw i64 %477, %459
  %479 = add nuw nsw i64 %478, 8
  %480 = getelementptr i8, i8* %452, i64 %479
  %481 = getelementptr i16, i16* %2, i64 %461
  %482 = bitcast i16* %481 to i8*
  %483 = icmp ult i8* %473, %482
  %484 = icmp ugt i8* %480, %10
  %485 = and i1 %483, %484
  br i1 %485, label %544, label %486

486:                                              ; preds = %476
  %487 = and i64 %461, 65520
  %488 = add nsw i64 %487, -16
  %489 = lshr exact i64 %488, 4
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 1
  %492 = icmp eq i64 %488, 0
  br i1 %492, label %526, label %493

493:                                              ; preds = %486
  %494 = sub nuw nsw i64 %490, %491
  br label %495

495:                                              ; preds = %495, %493
  %496 = phi i64 [ 0, %493 ], [ %523, %495 ]
  %497 = phi i64 [ %494, %493 ], [ %524, %495 ]
  %498 = getelementptr inbounds i16, i16* %2, i64 %496
  %499 = bitcast i16* %498 to <8 x i16>*
  %500 = load <8 x i16>, <8 x i16>* %499, align 2, !alias.scope !2
  %501 = getelementptr inbounds i16, i16* %498, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !2
  %504 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %500)
  %505 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %503)
  %506 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %496
  %507 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %504, <8 x i16>* %507, align 1, !alias.scope !5, !noalias !2
  %508 = getelementptr inbounds i16, i16* %506, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %509, align 1, !alias.scope !5, !noalias !2
  %510 = or i64 %496, 16
  %511 = getelementptr inbounds i16, i16* %2, i64 %510
  %512 = bitcast i16* %511 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !2
  %514 = getelementptr inbounds i16, i16* %511, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !2
  %517 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %513)
  %518 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %516)
  %519 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %510
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %517, <8 x i16>* %520, align 1, !alias.scope !5, !noalias !2
  %521 = getelementptr inbounds i16, i16* %519, i64 8
  %522 = bitcast i16* %521 to <8 x i16>*
  store <8 x i16> %518, <8 x i16>* %522, align 1, !alias.scope !5, !noalias !2
  %523 = add i64 %496, 32
  %524 = add i64 %497, -2
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %526, label %495, !llvm.loop !7

526:                                              ; preds = %495, %486
  %527 = phi i64 [ 0, %486 ], [ %523, %495 ]
  %528 = icmp eq i64 %491, 0
  br i1 %528, label %542, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds i16, i16* %2, i64 %527
  %531 = bitcast i16* %530 to <8 x i16>*
  %532 = load <8 x i16>, <8 x i16>* %531, align 2, !alias.scope !2
  %533 = getelementptr inbounds i16, i16* %530, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  %535 = load <8 x i16>, <8 x i16>* %534, align 2, !alias.scope !2
  %536 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %532)
  %537 = call <8 x i16> @llvm.bswap.v8i16(<8 x i16> %535)
  %538 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %527
  %539 = bitcast i16* %538 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %539, align 1, !alias.scope !5, !noalias !2
  %540 = getelementptr inbounds i16, i16* %538, i64 8
  %541 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %537, <8 x i16>* %541, align 1, !alias.scope !5, !noalias !2
  br label %542

542:                                              ; preds = %526, %529
  %543 = icmp eq i64 %487, %461
  br i1 %543, label %586, label %544

544:                                              ; preds = %542, %476, %472
  %545 = phi i64 [ 0, %476 ], [ 0, %472 ], [ %487, %542 ]
  %546 = xor i64 %545, -1
  %547 = add nsw i64 %546, %461
  %548 = and i64 %461, 3
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %560, label %550

550:                                              ; preds = %544, %550
  %551 = phi i64 [ %557, %550 ], [ %545, %544 ]
  %552 = phi i64 [ %558, %550 ], [ %548, %544 ]
  %553 = getelementptr inbounds i16, i16* %2, i64 %551
  %554 = load i16, i16* %553, align 2
  %555 = tail call i16 @llvm.bswap.i16(i16 %554) #13
  %556 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %551
  store i16 %555, i16* %556, align 1
  %557 = add nuw nsw i64 %551, 1
  %558 = add i64 %552, -1
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %550, !llvm.loop !9

560:                                              ; preds = %550, %544
  %561 = phi i64 [ %545, %544 ], [ %557, %550 ]
  %562 = icmp ult i64 %547, 3
  br i1 %562, label %586, label %563

563:                                              ; preds = %560, %563
  %564 = phi i64 [ %584, %563 ], [ %561, %560 ]
  %565 = getelementptr inbounds i16, i16* %2, i64 %564
  %566 = load i16, i16* %565, align 2
  %567 = tail call i16 @llvm.bswap.i16(i16 %566) #13
  %568 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %564
  store i16 %567, i16* %568, align 1
  %569 = add nuw nsw i64 %564, 1
  %570 = getelementptr inbounds i16, i16* %2, i64 %569
  %571 = load i16, i16* %570, align 2
  %572 = tail call i16 @llvm.bswap.i16(i16 %571) #13
  %573 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %569
  store i16 %572, i16* %573, align 1
  %574 = add nuw nsw i64 %564, 2
  %575 = getelementptr inbounds i16, i16* %2, i64 %574
  %576 = load i16, i16* %575, align 2
  %577 = tail call i16 @llvm.bswap.i16(i16 %576) #13
  %578 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %574
  store i16 %577, i16* %578, align 1
  %579 = add nuw nsw i64 %564, 3
  %580 = getelementptr inbounds i16, i16* %2, i64 %579
  %581 = load i16, i16* %580, align 2
  %582 = tail call i16 @llvm.bswap.i16(i16 %581) #13
  %583 = getelementptr inbounds [0 x i16], [0 x i16]* %474, i64 0, i64 %579
  store i16 %582, i16* %583, align 1
  %584 = add nuw nsw i64 %564, 4
  %585 = icmp eq i64 %584, %461
  br i1 %585, label %586, label %563, !llvm.loop !11

586:                                              ; preds = %560, %563, %542, %449
  %587 = zext i16 %463 to i32
  %588 = add nuw nsw i32 %587, 3
  %589 = and i32 %588, 131068
  %590 = icmp ugt i32 %589, %587
  br i1 %590, label %591, label %595

591:                                              ; preds = %586
  %592 = getelementptr inbounds i8, i8* %460, i64 8
  %593 = bitcast i8* %592 to [0 x i16]*
  %594 = getelementptr inbounds [0 x i16], [0 x i16]* %593, i64 0, i64 %461
  store i16 0, i16* %594, align 1
  br label %595

595:                                              ; preds = %586, %591
  %596 = add i16 %458, %463
  %597 = tail call i16 @llvm.bswap.i16(i16 %596) #13
  store i16 %597, i16* %454, align 1
  store i16 %596, i16* %69, align 2
  store i8 0, i8* %71, align 1
  %598 = add i16 %596, 3
  %599 = and i16 %598, -4
  store i16 %599, i16* %70, align 8
  %600 = zext i16 %599 to i32
  %601 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %602 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %601, i64 0, i32 0, i32 3
  store i32 %600, i32* %602, align 8
  %603 = add i32 %448, 1
  %604 = load i8, i8* %12, align 2
  %605 = add i8 %604, 1
  store i8 %605, i8* %12, align 2
  br label %606

606:                                              ; preds = %595, %447
  %607 = phi i32 [ %603, %595 ], [ %448, %447 ]
  br i1 %17, label %633, label %608

608:                                              ; preds = %606
  %609 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %610 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %609, i64 0, i32 0, i32 2
  %611 = load i8*, i8** %610, align 8
  %612 = getelementptr inbounds i8, i8* %611, i64 2
  %613 = bitcast i8* %612 to i16*
  %614 = load i16, i16* %613, align 1
  %615 = tail call i16 @llvm.bswap.i16(i16 %614) #13
  %616 = add i16 %615, 3
  %617 = and i16 %616, -4
  %618 = zext i16 %617 to i64
  %619 = getelementptr inbounds i8, i8* %611, i64 %618
  %620 = bitcast i8* %619 to i16*
  store i16 3840, i16* %620, align 1
  %621 = getelementptr inbounds i8, i8* %619, i64 2
  %622 = bitcast i8* %621 to i16*
  store i16 2048, i16* %622, align 1
  %623 = tail call i32 @llvm.bswap.i32(i32 %607) #13
  %624 = getelementptr inbounds i8, i8* %619, i64 4
  %625 = bitcast i8* %624 to i32*
  store i32 %623, i32* %625, align 1
  %626 = add i16 %617, 8
  %627 = tail call i16 @llvm.bswap.i16(i16 %626) #13
  store i16 %627, i16* %613, align 1
  store i16 %626, i16* %70, align 8
  store i16 %626, i16* %69, align 2
  store i8 0, i8* %71, align 1
  %628 = zext i16 %626 to i32
  %629 = load %struct.mbuf*, %struct.mbuf** %73, align 8
  %630 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %629, i64 0, i32 0, i32 3
  store i32 %628, i32* %630, align 8
  %631 = load i8, i8* %12, align 2
  %632 = add i8 %631, 1
  store i8 %632, i8* %12, align 2
  br label %633

633:                                              ; preds = %606, %608
  %634 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 25
  store %struct.sctp_tmit_chunk* %62, %struct.sctp_tmit_chunk** %634, align 8
  %635 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 0
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %635, align 8
  %636 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 18, i32 1
  %637 = bitcast %struct.sctp_tmit_chunk*** %636 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %62, i64 0, i32 6, i32 1
  %640 = bitcast %struct.sctp_tmit_chunk*** %639 to i64*
  store i64 %638, i64* %640, align 8
  %641 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %636, align 8
  store %struct.sctp_tmit_chunk* %62, %struct.sctp_tmit_chunk** %641, align 8
  store %struct.sctp_tmit_chunk** %635, %struct.sctp_tmit_chunk*** %636, align 8
  %642 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 83
  %643 = load i32, i32* %642, align 8
  %644 = add nsw i32 %643, 1
  store i32 %644, i32* %642, align 8
  %645 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 146
  %646 = load i8, i8* %645, align 2
  %647 = icmp eq i8 %646, 0
  br i1 %647, label %649, label %648

648:                                              ; preds = %633
  tail call void @sctp_send_sack(%struct.sctp_tcb* %0, i32 1)
  br label %649

649:                                              ; preds = %633, %648
  %650 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %651 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %650, align 8
  %652 = load %struct.sctp_nets*, %struct.sctp_nets** %179, align 8
  tail call void @sctp_timer_start(i32 13, %struct.sctp_inpcb* %651, %struct.sctp_tcb* %0, %struct.sctp_nets* %652) #13
  br label %653

653:                                              ; preds = %15, %30, %157, %146, %144, %23, %9, %649
  %654 = phi i32 [ 0, %649 ], [ 16, %9 ], [ 22, %15 ], [ 12, %23 ], [ 12, %144 ], [ 12, %146 ], [ 12, %157 ], [ 12, %30 ]
  ret i32 %654
}

declare i32 @sctp_is_there_an_abort_here(%struct.mbuf*, i32, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_send_operr_to(%struct.sockaddr* nocapture readonly, %struct.sockaddr* nocapture readonly, %struct.sctphdr* nocapture readonly, i32, %struct.mbuf*, i32, i16 zeroext) local_unnamed_addr #2 {
  tail call fastcc void @sctp_send_resp_msg(%struct.sockaddr* %0, %struct.sockaddr* %1, %struct.sctphdr* %2, i32 %3, i8 zeroext 9, %struct.mbuf* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_lower_sosend(%struct.socket*, %struct.sockaddr*, %struct.uio*, %struct.mbuf*, %struct.mbuf*, i32, %struct.sctp_sndrcvinfo* readonly) local_unnamed_addr #2 {
  %8 = alloca %struct.cmsghdr, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.sctp_block_entry, align 4
  %13 = alloca %struct.timeval, align 8
  %14 = alloca %struct.sctp_nets*, align 8
  %15 = alloca %struct.sctp_inpcb*, align 8
  %16 = alloca [256 x i8], align 16
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  %20 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 0, i32* %11, align 4
  %21 = bitcast %struct.sctp_block_entry* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #13
  %22 = getelementptr inbounds %struct.sctp_block_entry, %struct.sctp_block_entry* %12, i64 0, i32 0
  store i32 -1431655766, i32* %22, align 4
  %23 = bitcast %struct.timeval* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = bitcast %struct.sctp_nets** %14 to i8*
  %25 = bitcast %struct.timeval* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %26 = bitcast %struct.sctp_inpcb** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  store i32 0, i32* %10, align 4
  store %struct.sctp_nets* null, %struct.sctp_nets** %14, align 8
  %27 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 6
  %28 = bitcast i8** %27 to %struct.sctp_inpcb**
  %29 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %28, align 8
  store %struct.sctp_inpcb* %29, %struct.sctp_inpcb** %15, align 8
  %30 = icmp eq %struct.sctp_inpcb* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %7
  store i32 22, i32* %10, align 4
  %32 = icmp eq %struct.mbuf* %3, null
  br i1 %32, label %1936, label %33

33:                                               ; preds = %31
  tail call void @m_freem(%struct.mbuf* nonnull %3) #13
  br label %1936

34:                                               ; preds = %7
  %35 = icmp eq %struct.uio* %2, null
  %36 = icmp eq %struct.mbuf* %3, null
  %37 = and i1 %35, %36
  br i1 %37, label %1936, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 8
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 4194304
  %42 = icmp ne i64 %41, 0
  %43 = lshr exact i64 %41, 22
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 40
  %46 = atomicrmw add i32* %45, i32 1 seq_cst
  br i1 %35, label %51, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %49, 0
  br i1 %50, label %1936, label %55

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  br label %55

55:                                               ; preds = %47, %51
  %56 = phi i64 [ %54, %51 ], [ %49, %47 ]
  %57 = phi %struct.mbuf* [ %3, %51 ], [ null, %47 ]
  %58 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 9
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 10
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %62, label %63

62:                                               ; preds = %55
  store i32 107, i32* %10, align 4
  br label %1884

63:                                               ; preds = %55
  %64 = icmp ne %struct.sockaddr* %1, null
  br i1 %64, label %65, label %74

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %67 = load i16, i16* %66, align 8
  %68 = icmp eq i16 %67, 123
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1
  %71 = bitcast [14 x i8]* %70 to i16*
  %72 = load i16, i16* %71, align 2
  br label %74

73:                                               ; preds = %65
  store i32 97, i32* %10, align 4
  br label %1884

74:                                               ; preds = %69, %63
  %75 = phi i16 [ 0, %63 ], [ %72, %69 ]
  %76 = icmp eq %struct.sctp_sndrcvinfo* %6, null
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 2
  %79 = load i16, i16* %78, align 4
  %80 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %6, i64 0, i32 8
  %81 = load i32, i32* %80, align 4
  %82 = and i16 %79, -32516
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %77
  store i32 22, i32* %10, align 4
  br label %1884

85:                                               ; preds = %77
  %86 = icmp eq i16 %79, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = icmp eq %struct.sockaddr* %1, null
  br label %278

89:                                               ; preds = %85
  %90 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 110), i32 1 seq_cst
  br label %96

91:                                               ; preds = %74
  %92 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 30, i32 2
  %93 = load i16, i16* %92, align 4
  %94 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 30, i32 8
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %89, %91
  %97 = phi i16 [ %79, %89 ], [ %93, %91 ]
  %98 = phi i32 [ %81, %89 ], [ %95, %91 ]
  %99 = zext i16 %97 to i32
  %100 = and i32 %99, 4096
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %270, label %102

102:                                              ; preds = %96
  %103 = load i32, i32* %58, align 8
  %104 = and i32 %103, 32
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %268

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3
  %108 = load i64, i64* %107, align 8
  %109 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 70), align 8
  %110 = zext i32 %109 to i64
  %111 = icmp sgt i64 %108, %110
  br i1 %111, label %268, label %112

112:                                              ; preds = %106
  %113 = tail call noalias i8* @malloc(i64 160) #13
  %114 = icmp eq i8* %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @m_freem(%struct.mbuf* %57) #13
  br label %268

116:                                              ; preds = %112
  %117 = getelementptr inbounds i8, i8* %113, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 152, i1 false) #13
  %118 = bitcast i8* %113 to %struct.sctp_inpcb**
  store %struct.sctp_inpcb* %29, %struct.sctp_inpcb** %118, align 8
  br i1 %76, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds i8, i8* %113, i64 16
  %121 = bitcast %struct.sctp_sndrcvinfo* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %121, i64 36, i1 false) #13
  %122 = getelementptr inbounds i8, i8* %113, i64 20
  %123 = bitcast i8* %122 to i16*
  %124 = load i16, i16* %123, align 4
  %125 = and i16 %124, -4097
  br label %126

126:                                              ; preds = %116, %119
  %127 = phi i16 [ %125, %119 ], [ 0, %116 ]
  %128 = getelementptr inbounds i8, i8* %113, i64 20
  %129 = bitcast i8* %128 to i16*
  store i16 %127, i16* %129, align 4
  %130 = getelementptr inbounds i8, i8* %113, i64 144
  %131 = bitcast i8* %130 to i64*
  br i1 %35, label %248, label %132

132:                                              ; preds = %126
  store i64 %108, i64* %131, align 8
  %133 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 2, i32 1, i32 1) #13
  %134 = icmp eq %struct.mbuf* %133, null
  br i1 %134, label %245, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 0, i32 3
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 0, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %161, label %141

141:                                              ; preds = %135
  %142 = and i32 %138, 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %169

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %146 = load i32*, i32** %145, align 8
  %147 = load volatile i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %169

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i8, i8* %151, i64 %154
  %156 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 0, i32 2
  %157 = bitcast i8** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = ptrtoint i8* %155 to i64
  %160 = sub i64 %159, %158
  br label %169

161:                                              ; preds = %135
  %162 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 1
  %163 = getelementptr inbounds %union.anon.4, %union.anon.4* %162, i64 1
  %164 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 0, i32 2
  %165 = bitcast i8** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = ptrtoint %union.anon.4* %163 to i64
  %168 = sub i64 %167, %166
  br label %169

169:                                              ; preds = %161, %149, %144, %141
  %170 = phi i64 [ %168, %161 ], [ %160, %149 ], [ 0, %144 ], [ 0, %141 ]
  %171 = shl i64 %170, 32
  %172 = ashr exact i64 %171, 32
  %173 = icmp sgt i64 %108, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %169
  %175 = bitcast i8* %117 to %struct.mbuf**
  store %struct.mbuf* %133, %struct.mbuf** %175, align 8
  br label %260

176:                                              ; preds = %169
  %177 = icmp sgt i64 %172, %108
  %178 = select i1 %177, i64 %108, i64 %172
  %179 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %133, i64 0, i32 0, i32 2
  %180 = load i8*, i8** %179, align 8
  %181 = trunc i64 %178 to i32
  %182 = tail call i32 @uiomove(i8* %180, i32 %181, %struct.uio* nonnull %2) #13
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %234, %195, %176
  %185 = phi %struct.mbuf* [ %133, %176 ], [ %198, %234 ], [ %188, %195 ]
  tail call void @m_freem(%struct.mbuf* nonnull %185) #13
  br label %245

186:                                              ; preds = %176, %234
  %187 = phi i32 [ %242, %234 ], [ %181, %176 ]
  %188 = phi %struct.mbuf* [ %198, %234 ], [ %133, %176 ]
  %189 = phi i64 [ %192, %234 ], [ %108, %176 ]
  %190 = phi i64 [ %239, %234 ], [ %178, %176 ]
  %191 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %188, i64 0, i32 0, i32 3
  store i32 %187, i32* %191, align 8
  %192 = sub nsw i64 %189, %190
  %193 = icmp sgt i64 %192, 0
  %194 = bitcast %struct.mbuf* %188 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 16, i1 false) #13
  br i1 %193, label %195, label %246

195:                                              ; preds = %186
  %196 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %188, i64 0, i32 0, i32 0
  %197 = trunc i64 %192 to i32
  %198 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %197, i32 0, i32 2, i32 1, i32 1) #13
  store %struct.mbuf* %198, %struct.mbuf** %196, align 8
  %199 = icmp eq %struct.mbuf* %198, null
  br i1 %199, label %184, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 3
  store i32 0, i32* %201, align 8
  %202 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 4
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %226, label %206

206:                                              ; preds = %200
  %207 = and i32 %203, 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %234

209:                                              ; preds = %206
  %210 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %211 = load i32*, i32** %210, align 8
  %212 = load volatile i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %234

214:                                              ; preds = %209
  %215 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %218 = load i32, i32* %217, align 8
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %216, i64 %219
  %221 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 2
  %222 = bitcast i8** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = ptrtoint i8* %220 to i64
  %225 = sub i64 %224, %223
  br label %234

226:                                              ; preds = %200
  %227 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 1
  %228 = getelementptr inbounds %union.anon.4, %union.anon.4* %227, i64 1
  %229 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 2
  %230 = bitcast i8** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = ptrtoint %union.anon.4* %228 to i64
  %233 = sub i64 %232, %231
  br label %234

234:                                              ; preds = %226, %214, %209, %206
  %235 = phi i64 [ %233, %226 ], [ %225, %214 ], [ 0, %209 ], [ 0, %206 ]
  %236 = shl i64 %235, 32
  %237 = ashr exact i64 %236, 32
  %238 = icmp sgt i64 %237, %192
  %239 = select i1 %238, i64 %192, i64 %237
  %240 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %198, i64 0, i32 0, i32 2
  %241 = load i8*, i8** %240, align 8
  %242 = trunc i64 %239 to i32
  %243 = tail call i32 @uiomove(i8* %241, i32 %242, %struct.uio* nonnull %2) #13
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %186, label %184

245:                                              ; preds = %184, %132
  tail call void @free(i8* %113) #13
  br label %268

246:                                              ; preds = %186
  %247 = bitcast i8* %117 to %struct.mbuf**
  store %struct.mbuf* %133, %struct.mbuf** %247, align 8
  br label %260

248:                                              ; preds = %126
  store i64 0, i64* %131, align 8
  %249 = icmp eq %struct.mbuf* %57, null
  br i1 %249, label %260, label %250

250:                                              ; preds = %248, %250
  %251 = phi i64 [ %256, %250 ], [ 0, %248 ]
  %252 = phi %struct.mbuf* [ %258, %250 ], [ %57, %248 ]
  %253 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %252, i64 0, i32 0, i32 3
  %254 = load i32, i32* %253, align 8
  %255 = sext i32 %254 to i64
  %256 = add nsw i64 %251, %255
  store i64 %256, i64* %131, align 8
  %257 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %252, i64 0, i32 0, i32 0
  %258 = load %struct.mbuf*, %struct.mbuf** %257, align 8
  %259 = icmp eq %struct.mbuf* %258, null
  br i1 %259, label %260, label %250

260:                                              ; preds = %250, %248, %246, %174
  %261 = load i32, i32* %58, align 8
  %262 = or i32 %261, 32
  store i32 %262, i32* %58, align 8
  %263 = tail call i32 @sctp_initiate_iterator(i32 (%struct.sctp_inpcb*, i8*, i32)* null, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)* nonnull @sctp_sendall_iterator, i32 (%struct.sctp_inpcb*, i8*, i32)* null, i32 0, i32 0, i32 0, i8* nonnull %113, i32 0, void (i8*, i32)* nonnull @sctp_sendall_completes, %struct.sctp_inpcb* nonnull %29, i8 zeroext 1) #13
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %260
  %266 = load i32, i32* %58, align 8
  %267 = and i32 %266, -33
  store i32 %267, i32* %58, align 8
  tail call void @free(i8* %113) #13
  br label %268

268:                                              ; preds = %102, %106, %115, %245, %260, %265
  %269 = phi i32 [ 12, %115 ], [ 12, %245 ], [ 14, %265 ], [ 16, %102 ], [ 90, %106 ], [ 0, %260 ]
  store i32 %269, i32* %10, align 4
  br label %1884

270:                                              ; preds = %96
  %271 = and i32 %99, 2048
  %272 = icmp ne i32 %271, 0
  %273 = icmp eq %struct.sockaddr* %1, null
  %274 = and i1 %273, %272
  br i1 %274, label %277, label %275

275:                                              ; preds = %270
  %276 = load i32, i32* %58, align 8
  br label %278

277:                                              ; preds = %270
  store i32 22, i32* %10, align 4
  br label %1884

278:                                              ; preds = %275, %87
  %279 = phi i32 [ %59, %87 ], [ %276, %275 ]
  %280 = phi i1 [ %88, %87 ], [ %273, %275 ]
  %281 = phi i16 [ 0, %87 ], [ %97, %275 ]
  %282 = phi i32 [ %81, %87 ], [ %98, %275 ]
  %283 = phi i32 [ 0, %87 ], [ %99, %275 ]
  %284 = and i32 %279, 6291456
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %298, label %286

286:                                              ; preds = %278
  %287 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 34
  %288 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %287) #13
  %289 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 14, i32 0
  %290 = load %struct.sctp_tcb*, %struct.sctp_tcb** %289, align 8
  %291 = icmp eq %struct.sctp_tcb* %290, null
  br i1 %291, label %295, label %292

292:                                              ; preds = %286
  %293 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %290, i64 0, i32 14
  %294 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %293) #13
  br label %295

295:                                              ; preds = %286, %292
  %296 = phi i32 [ 1, %292 ], [ 0, %286 ]
  %297 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %287) #13
  br label %317

298:                                              ; preds = %278
  %299 = icmp eq i32 %282, 0
  br i1 %299, label %304, label %300

300:                                              ; preds = %298
  %301 = tail call %struct.sctp_tcb* @sctp_findassociation_ep_asocid(%struct.sctp_inpcb* nonnull %29, i32 %282, i32 1) #13
  %302 = icmp ne %struct.sctp_tcb* %301, null
  %303 = zext i1 %302 to i32
  br label %317

304:                                              ; preds = %298
  br i1 %64, label %305, label %362

305:                                              ; preds = %304
  %306 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 34
  %307 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %306) #13
  %308 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 37
  %309 = atomicrmw add i32* %308, i32 1 seq_cst
  %310 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %306) #13
  %311 = call %struct.sctp_tcb* @sctp_findassociation_ep_addr(%struct.sctp_inpcb** nonnull %15, %struct.sockaddr* nonnull %1, %struct.sctp_nets** nonnull %14, %struct.sockaddr* null, %struct.sctp_tcb* null) #13
  %312 = icmp eq %struct.sctp_tcb* %311, null
  br i1 %312, label %313, label %543

313:                                              ; preds = %305
  %314 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %306) #13
  %315 = atomicrmw add i32* %308, i32 -1 seq_cst
  %316 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %306) #13
  br label %317

317:                                              ; preds = %300, %313, %295
  %318 = phi %struct.sctp_tcb* [ %290, %295 ], [ null, %313 ], [ %301, %300 ]
  %319 = phi i32 [ %296, %295 ], [ 0, %313 ], [ %303, %300 ]
  %320 = icmp eq %struct.sctp_tcb* %318, null
  %321 = and i1 %64, %320
  br i1 %321, label %322, label %357

322:                                              ; preds = %317
  %323 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 35
  %324 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %323) #13
  %325 = load i32, i32* %58, align 8
  %326 = and i32 %325, 805306368
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %322
  store i32 22, i32* %10, align 4
  br label %1884

329:                                              ; preds = %322
  %330 = and i32 %325, 67108864
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %337

332:                                              ; preds = %329
  %333 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0
  %334 = load i16, i16* %333, align 2
  %335 = icmp eq i16 %334, 10
  br i1 %335, label %336, label %337

336:                                              ; preds = %332
  store i32 22, i32* %10, align 4
  br label %1884

337:                                              ; preds = %332, %329
  %338 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 34
  %339 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %338) #13
  %340 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 37
  %341 = atomicrmw add i32* %340, i32 1 seq_cst
  %342 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %338) #13
  %343 = call %struct.sctp_tcb* @sctp_findassociation_ep_addr(%struct.sctp_inpcb** nonnull %15, %struct.sockaddr* nonnull %1, %struct.sctp_nets** nonnull %14, %struct.sockaddr* null, %struct.sctp_tcb* null) #13
  %344 = icmp eq %struct.sctp_tcb* %343, null
  br i1 %344, label %345, label %349

345:                                              ; preds = %337
  %346 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %338) #13
  %347 = atomicrmw add i32* %340, i32 -1 seq_cst
  %348 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %338) #13
  br label %349

349:                                              ; preds = %337, %345
  %350 = phi i32 [ %319, %345 ], [ 1, %337 ]
  %351 = load i32, i32* %10, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %1884

353:                                              ; preds = %349
  %354 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %15, align 8
  %355 = icmp eq %struct.sctp_inpcb* %354, %29
  br i1 %355, label %357, label %356

356:                                              ; preds = %353
  store i32 107, i32* %10, align 4
  br label %1884

357:                                              ; preds = %353, %317
  %358 = phi %struct.sctp_tcb* [ %343, %353 ], [ %318, %317 ]
  %359 = phi i32 [ 1, %353 ], [ 0, %317 ]
  %360 = phi i32 [ %350, %353 ], [ %319, %317 ]
  %361 = icmp eq %struct.sctp_tcb* %358, null
  br i1 %361, label %362, label %543

362:                                              ; preds = %304, %357
  %363 = phi i32 [ %360, %357 ], [ 0, %304 ]
  %364 = phi i32 [ %359, %357 ], [ 0, %304 ]
  br i1 %280, label %365, label %366

365:                                              ; preds = %362
  store i32 2, i32* %10, align 4
  br label %1884

366:                                              ; preds = %362
  %367 = and i32 %283, 512
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %374

369:                                              ; preds = %366
  %370 = and i32 %283, 256
  %371 = icmp ne i32 %370, 0
  %372 = icmp eq i64 %56, 0
  %373 = and i1 %372, %371
  br i1 %373, label %374, label %375

374:                                              ; preds = %366, %369
  store i32 2, i32* %10, align 4
  br label %1884

375:                                              ; preds = %369
  %376 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 38
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 11, i32 22
  %379 = load i16, i16* %378, align 8
  %380 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 11, i32 39
  %381 = load i16, i16* %380, align 4
  %382 = call %struct.sctp_tcb* @sctp_aloc_assoc(%struct.sctp_inpcb* nonnull %29, %struct.sockaddr* nonnull %1, i32* nonnull %10, i32 0, i32 %377, i16 zeroext %379, i16 zeroext %381, %struct.proc* null, i32 1) #13
  %383 = icmp eq %struct.sctp_tcb* %382, null
  br i1 %383, label %1884, label %384

384:                                              ; preds = %375
  %385 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 1
  %386 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %385, align 8
  %387 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %386, i64 0, i32 9
  %388 = load i32, i32* %387, align 8
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %393, label %391

391:                                              ; preds = %384
  %392 = or i32 %388, 2097152
  store i32 %392, i32* %387, align 8
  call void @soisconnecting(%struct.socket* %0) #13
  br label %393

393:                                              ; preds = %384, %391
  %394 = icmp eq i32 %364, 0
  br i1 %394, label %398, label %395

395:                                              ; preds = %393
  %396 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 35
  %397 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %396) #13
  br label %402

398:                                              ; preds = %393
  %399 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %400 = icmp eq void (i8*, ...)* %399, null
  br i1 %400, label %402, label %401

401:                                              ; preds = %398
  call void (i8*, ...) %399(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #13
  br label %402

402:                                              ; preds = %398, %401, %395
  %403 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7
  call void @sctp_set_state(%struct.sctp_tcb* nonnull %382, i32 2) #13
  %404 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 2
  %405 = call i32 @gettimeofday(%struct.timeval* %404, i8* null) #13
  %406 = icmp eq %struct.mbuf* %4, null
  br i1 %406, label %548, label %407

407:                                              ; preds = %402
  %408 = bitcast i64* %9 to %struct.sctp_initmsg*
  %409 = bitcast %struct.cmsghdr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %409) #13
  %410 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 0
  %411 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 1
  %412 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %8, i64 0, i32 2
  %413 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %409, i8 -86, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413) #13
  %414 = bitcast i64* %9 to i16*
  %415 = getelementptr inbounds %struct.sctp_initmsg, %struct.sctp_initmsg* %408, i64 0, i32 1
  %416 = getelementptr inbounds %struct.sctp_initmsg, %struct.sctp_initmsg* %408, i64 0, i32 2
  %417 = getelementptr inbounds %struct.sctp_initmsg, %struct.sctp_initmsg* %408, i64 0, i32 3
  %418 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %4, i64 0, i32 0, i32 3
  store i64 -6148914691236517206, i64* %9, align 8
  %419 = load i32, i32* %418, align 8
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %421, label %540

421:                                              ; preds = %407
  %422 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 132
  %423 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 101
  %424 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 102
  %425 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 110
  %426 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 129
  %427 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 14
  %428 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 28
  %429 = bitcast %struct.sctp_stream_out** %428 to i8**
  %430 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 130
  %431 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %382, i64 0, i32 7, i32 39, i32 2
  br label %432

432:                                              ; preds = %533, %421
  %433 = phi i32 [ 0, %421 ], [ %538, %533 ]
  %434 = sub nsw i32 %419, %433
  %435 = icmp slt i32 %434, 16
  br i1 %435, label %436, label %437

436:                                              ; preds = %432
  store i32 22, i32* %10, align 4
  br label %541

437:                                              ; preds = %432
  call void @m_copydata(%struct.mbuf* %4, i32 %433, i32 16, i8* nonnull %409) #13
  %438 = load i64, i64* %410, align 8
  %439 = icmp ult i64 %438, 16
  br i1 %439, label %440, label %441

440:                                              ; preds = %437
  store i32 22, i32* %10, align 4
  br label %541

441:                                              ; preds = %437
  %442 = icmp ugt i64 %438, 2147483647
  %443 = trunc i64 %438 to i32
  %444 = icmp slt i32 %434, %443
  %445 = or i1 %442, %444
  br i1 %445, label %446, label %447

446:                                              ; preds = %441
  store i32 22, i32* %10, align 4
  br label %541

447:                                              ; preds = %441
  %448 = add i32 %433, 16
  %449 = load i32, i32* %411, align 8
  %450 = icmp eq i32 %449, 132
  %451 = load i32, i32* %412, align 4
  %452 = icmp eq i32 %451, 1
  %453 = and i1 %450, %452
  br i1 %453, label %454, label %533

454:                                              ; preds = %447
  %455 = add i32 %443, -16
  %456 = icmp slt i32 %455, 8
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  store i32 22, i32* %10, align 4
  br label %541

458:                                              ; preds = %454
  call void @m_copydata(%struct.mbuf* %4, i32 %448, i32 8, i8* nonnull %413) #13
  %459 = load i16, i16* %416, align 4
  %460 = icmp eq i16 %459, 0
  br i1 %460, label %462, label %461

461:                                              ; preds = %458
  store i16 %459, i16* %422, align 8
  br label %462

462:                                              ; preds = %461, %458
  %463 = load i16, i16* %414, align 8
  %464 = icmp eq i16 %463, 0
  br i1 %464, label %467, label %465

465:                                              ; preds = %462
  %466 = zext i16 %463 to i32
  store i32 %466, i32* %423, align 8
  br label %467

467:                                              ; preds = %465, %462
  %468 = load i16, i16* %415, align 2
  %469 = icmp eq i16 %468, 0
  br i1 %469, label %472, label %470

470:                                              ; preds = %467
  %471 = zext i16 %468 to i32
  store i32 %471, i32* %424, align 4
  br label %472

472:                                              ; preds = %470, %467
  %473 = load i16, i16* %417, align 2
  %474 = icmp eq i16 %473, 0
  br i1 %474, label %477, label %475

475:                                              ; preds = %472
  %476 = zext i16 %473 to i32
  store i32 %476, i32* %425, align 8
  br label %477

477:                                              ; preds = %475, %472
  %478 = load i16, i16* %426, align 2
  %479 = zext i16 %478 to i32
  %480 = load i32, i32* %423, align 8
  %481 = icmp ugt i32 %480, %479
  br i1 %481, label %482, label %533

482:                                              ; preds = %477
  %483 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %427) #13
  %484 = load i32, i32* %423, align 8
  %485 = zext i32 %484 to i64
  %486 = shl nuw nsw i64 %485, 6
  %487 = call noalias i8* @malloc(i64 %486) #13
  %488 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %427) #13
  %489 = icmp eq i8* %487, null
  br i1 %489, label %494, label %490

490:                                              ; preds = %482
  %491 = load i8*, i8** %429, align 8
  call void @free(i8* %491) #13
  store i8* %487, i8** %429, align 8
  %492 = load i32, i32* %423, align 8
  %493 = trunc i32 %492 to i16
  store i16 %493, i16* %426, align 2
  store i16 %493, i16* %430, align 4
  br label %497

494:                                              ; preds = %482
  %495 = load i16, i16* %426, align 2
  %496 = zext i16 %495 to i32
  store i32 %496, i32* %423, align 8
  br label %497

497:                                              ; preds = %494, %490
  %498 = phi i16 [ %495, %494 ], [ %493, %490 ]
  %499 = icmp eq i16 %498, 0
  br i1 %499, label %533, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %528, %500 ], [ 0, %497 ]
  %502 = phi i32 [ %529, %500 ], [ 0, %497 ]
  %503 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %504 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %503, i64 %501, i32 0, i32 0
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %504, align 8
  %505 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %506 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %505, i64 %501, i32 0, i32 0
  %507 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %505, i64 %501, i32 0, i32 1
  store %struct.sctp_stream_queue_pending** %506, %struct.sctp_stream_queue_pending*** %507, align 8
  %508 = load void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)** %431, align 8
  %509 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %510 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %509, i64 %501
  call void %508(%struct.sctp_tcb* nonnull %382, %struct.sctp_stream_out* %510, %struct.sctp_stream_out* null) #13
  %511 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %512 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %511, i64 %501, i32 2
  store i32 0, i32* %512, align 8
  %513 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %514 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %513, i64 %501, i32 4, i64 0
  store i32 0, i32* %514, align 8
  %515 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %516 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %515, i64 %501, i32 3, i64 0
  store i32 0, i32* %516, align 4
  %517 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %518 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %517, i64 %501, i32 5
  store i32 0, i32* %518, align 4
  %519 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %520 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %519, i64 %501, i32 6
  store i32 0, i32* %520, align 8
  %521 = trunc i32 %502 to i16
  %522 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %523 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %522, i64 %501, i32 7
  store i16 %521, i16* %523, align 4
  %524 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %525 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %524, i64 %501, i32 8
  store i8 0, i8* %525, align 2
  %526 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %428, align 8
  %527 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %526, i64 %501, i32 9
  store i8 1, i8* %527, align 1
  %528 = add nuw nsw i64 %501, 1
  %529 = add nuw nsw i32 %502, 1
  %530 = load i16, i16* %426, align 2
  %531 = zext i16 %530 to i64
  %532 = icmp ult i64 %528, %531
  br i1 %532, label %500, label %533

533:                                              ; preds = %500, %497, %477, %447
  %534 = load i64, i64* %410, align 8
  %535 = trunc i64 %534 to i32
  %536 = add i32 %535, 7
  %537 = and i32 %536, -8
  %538 = add i32 %537, %433
  %539 = icmp sgt i32 %419, %538
  br i1 %539, label %432, label %540

540:                                              ; preds = %533, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %409) #13
  br label %548

541:                                              ; preds = %436, %440, %446, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %409) #13
  %542 = call i32 @sctp_free_assoc(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* nonnull %382, i32 2, i32 -1879048186) #13
  br label %1884

543:                                              ; preds = %305, %357
  %544 = phi i32 [ %360, %357 ], [ 1, %305 ]
  %545 = phi i32 [ %359, %357 ], [ 0, %305 ]
  %546 = phi %struct.sctp_tcb* [ %358, %357 ], [ %311, %305 ]
  %547 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %546, i64 0, i32 7
  br label %548

548:                                              ; preds = %402, %540, %543
  %549 = phi i32 [ 0, %543 ], [ 1, %540 ], [ 1, %402 ]
  %550 = phi %struct.sctp_tcb* [ %546, %543 ], [ %382, %540 ], [ %382, %402 ]
  %551 = phi %struct.sctp_association* [ %547, %543 ], [ %403, %540 ], [ %403, %402 ]
  %552 = phi i32 [ %545, %543 ], [ 0, %540 ], [ 0, %402 ]
  %553 = phi i32 [ %544, %543 ], [ 1, %540 ], [ 1, %402 ]
  br i1 %76, label %554, label %559

554:                                              ; preds = %548
  %555 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 6
  %556 = bitcast %struct.sctp_nonpad_sndrcvinfo* %555 to %struct.sctp_sndrcvinfo*
  %557 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 6, i32 2
  %558 = load i16, i16* %557, align 4
  br label %559

559:                                              ; preds = %554, %548
  %560 = phi %struct.sctp_sndrcvinfo* [ %556, %554 ], [ %6, %548 ]
  %561 = phi i16 [ %558, %554 ], [ %281, %548 ]
  %562 = zext i16 %561 to i32
  %563 = and i32 %562, 2048
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %577, label %565

565:                                              ; preds = %559
  br i1 %64, label %567, label %566

566:                                              ; preds = %565
  store %struct.sctp_nets* null, %struct.sctp_nets** %14, align 8
  br label %576

567:                                              ; preds = %565
  %568 = call %struct.sctp_nets* @sctp_findnet(%struct.sctp_tcb* %550, %struct.sockaddr* nonnull %1) #13
  store %struct.sctp_nets* %568, %struct.sctp_nets** %14, align 8
  %569 = icmp eq %struct.sctp_nets* %568, null
  br i1 %569, label %576, label %570

570:                                              ; preds = %567
  %571 = icmp eq i16 %75, 0
  br i1 %571, label %587, label %572

572:                                              ; preds = %570
  %573 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 12
  %574 = load i16, i16* %573, align 8
  %575 = icmp eq i16 %75, %574
  br i1 %575, label %587, label %576

576:                                              ; preds = %566, %572, %567
  store i32 22, i32* %10, align 4
  br label %1884

577:                                              ; preds = %559
  %578 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 31
  %579 = load %struct.sctp_nets*, %struct.sctp_nets** %578, align 8
  %580 = icmp eq %struct.sctp_nets* %579, null
  br i1 %580, label %582, label %581

581:                                              ; preds = %577
  store %struct.sctp_nets* %579, %struct.sctp_nets** %14, align 8
  br label %587

582:                                              ; preds = %577
  %583 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 30
  %584 = bitcast %struct.sctp_nets** %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = bitcast %struct.sctp_nets** %14 to i64*
  store i64 %585, i64* %586, align 8
  br label %587

587:                                              ; preds = %572, %570, %581, %582
  %588 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 9
  %589 = atomicrmw add i32* %588, i32 1 seq_cst
  %590 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 120
  %591 = atomicrmw add i32* %590, i32 1 seq_cst
  %592 = load i64, i64* %39, align 8
  %593 = and i64 %592, 1048576
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %601, label %595

595:                                              ; preds = %587
  %596 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 53
  %597 = load i32, i32* %596, align 4
  %598 = zext i32 %597 to i64
  %599 = icmp sgt i64 %56, %598
  br i1 %599, label %600, label %601

600:                                              ; preds = %595
  store i32 90, i32* %10, align 4
  br label %1884

601:                                              ; preds = %587, %595
  %602 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 48
  %603 = load i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)** %602, align 8
  %604 = icmp ne i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)* %603, null
  %605 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 4
  %606 = load i16, i16* %605, align 2
  %607 = and i16 %606, 256
  %608 = icmp ne i16 %607, 0
  %609 = or i1 %604, %608
  br i1 %609, label %610, label %649

610:                                              ; preds = %601
  %611 = icmp eq i32 %553, 0
  br i1 %611, label %612, label %615

612:                                              ; preds = %610
  %613 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %614 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %613) #13
  br label %615

615:                                              ; preds = %612, %610
  %616 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 78
  %617 = load i32, i32* %616, align 4
  %618 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 121
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 168
  %621 = load i8, i8* %620, align 2
  %622 = icmp eq i8 %621, 0
  %623 = select i1 %622, i32 16, i32 20
  %624 = mul i32 %623, %619
  %625 = sub i32 %617, %624
  %626 = icmp eq i32 %44, 0
  %627 = select i1 %626, i64 %56, i64 1
  %628 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 22, i32 9
  %629 = load i32, i32* %628, align 8
  %630 = zext i32 %629 to i64
  %631 = zext i32 %625 to i64
  %632 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 80
  %633 = load i32, i32* %632, align 4
  %634 = zext i32 %633 to i64
  %635 = add i64 %627, %634
  %636 = add i64 %635, %631
  %637 = icmp sle i64 %636, %630
  %638 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 15), align 4
  %639 = icmp ult i32 %619, %638
  %640 = and i1 %639, %637
  br i1 %640, label %641, label %646

641:                                              ; preds = %615
  %642 = trunc i64 %56 to i32
  %643 = add i32 %633, %642
  store i32 %643, i32* %632, align 4
  %644 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %645 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %644) #13
  br label %653

646:                                              ; preds = %615
  %647 = icmp sgt i64 %56, %630
  %648 = select i1 %647, i32 90, i32 11
  store i32 %648, i32* %10, align 4
  br label %1884

649:                                              ; preds = %601
  %650 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 80
  %651 = trunc i64 %56 to i32
  %652 = atomicrmw add i32* %650, i32 %651 seq_cst
  br label %653

653:                                              ; preds = %641, %649
  %654 = phi i32 [ %553, %649 ], [ 0, %641 ]
  %655 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7
  %656 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %655, i64 0, i32 0
  %657 = load i32, i32* %656, align 8
  %658 = and i32 %657, 512
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %661, label %660

660:                                              ; preds = %653
  store i32 104, i32* %10, align 4
  br label %1892

661:                                              ; preds = %653
  %662 = icmp eq i32 %552, 0
  br i1 %662, label %666, label %663

663:                                              ; preds = %661
  %664 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 35
  %665 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %664) #13
  br label %666

666:                                              ; preds = %661, %663
  %667 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 0
  %668 = load i16, i16* %667, align 4
  %669 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 129
  %670 = load i16, i16* %669, align 2
  %671 = icmp ult i16 %668, %670
  br i1 %671, label %673, label %672

672:                                              ; preds = %666
  store i32 22, i32* %10, align 4
  br label %1892

673:                                              ; preds = %666
  %674 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 28
  %675 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %674, align 8
  %676 = zext i16 %668 to i64
  %677 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %675, i64 %676, i32 9
  %678 = load i8, i8* %677, align 1
  %679 = add i8 %678, -1
  %680 = icmp ult i8 %679, 2
  br i1 %680, label %685, label %681

681:                                              ; preds = %673
  %682 = icmp ugt i8 %678, 2
  br i1 %682, label %683, label %684

683:                                              ; preds = %681
  store i32 11, i32* %10, align 4
  br label %1892

684:                                              ; preds = %681
  store i32 22, i32* %10, align 4
  br label %1892

685:                                              ; preds = %673
  %686 = load i32, i32* %656, align 8
  %687 = and i32 %686, 127
  switch i32 %687, label %689 [
    i32 2, label %688
    i32 4, label %688
  ]

688:                                              ; preds = %685, %685
  br label %689

689:                                              ; preds = %685, %688
  %690 = phi i32 [ 1, %688 ], [ %549, %685 ]
  %691 = icmp eq %struct.mbuf* %4, null
  br i1 %691, label %695, label %692

692:                                              ; preds = %689
  call void @m_freem(%struct.mbuf* nonnull %4) #13
  %693 = load i32, i32* %656, align 8
  %694 = and i32 %693, 127
  br label %695

695:                                              ; preds = %689, %692
  %696 = phi i32 [ %687, %689 ], [ %694, %692 ]
  switch i32 %696, label %697 [
    i32 16, label %702
    i32 32, label %702
    i32 64, label %702
  ]

697:                                              ; preds = %695
  %698 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 0
  %699 = load i32, i32* %698, align 8
  %700 = trunc i32 %699 to i8
  %701 = icmp slt i8 %700, 0
  br i1 %701, label %702, label %706

702:                                              ; preds = %695, %695, %695, %697
  %703 = and i32 %562, 512
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %709

705:                                              ; preds = %702
  store i32 104, i32* %10, align 4
  br label %1892

706:                                              ; preds = %697
  %707 = and i32 %562, 512
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %784, label %709

709:                                              ; preds = %702, %706
  %710 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 113), i32 1 seq_cst
  %711 = load i32, i32* %656, align 8
  %712 = and i32 %711, 127
  switch i32 %712, label %714 [
    i32 2, label %713
    i32 4, label %713
  ]

713:                                              ; preds = %709, %709
  store i32 22, i32* %10, align 4
  br label %1892

714:                                              ; preds = %709
  %715 = icmp eq i32 %654, 0
  br i1 %715, label %719, label %716

716:                                              ; preds = %714
  %717 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %718 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %717) #13
  br label %719

719:                                              ; preds = %714, %716
  %720 = icmp eq %struct.mbuf* %57, null
  br i1 %720, label %734, label %721

721:                                              ; preds = %719
  %722 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 2, i32 1, i32 1) #13
  %723 = icmp eq i64 %56, 0
  br i1 %723, label %741, label %724

724:                                              ; preds = %721, %724
  %725 = phi %struct.mbuf* [ %732, %724 ], [ %57, %721 ]
  %726 = phi i64 [ %730, %724 ], [ 0, %721 ]
  %727 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %725, i64 0, i32 0, i32 3
  %728 = load i32, i32* %727, align 8
  %729 = sext i32 %728 to i64
  %730 = add nsw i64 %726, %729
  %731 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %725, i64 0, i32 0, i32 0
  %732 = load %struct.mbuf*, %struct.mbuf** %731, align 8
  %733 = icmp eq %struct.mbuf* %732, null
  br i1 %733, label %741, label %724

734:                                              ; preds = %719
  %735 = add i64 %56, 4
  %736 = icmp sgt i64 %735, 1452
  br i1 %736, label %737, label %738

737:                                              ; preds = %734
  store i32 90, i32* %10, align 4
  br label %1892

738:                                              ; preds = %734
  %739 = trunc i64 %735 to i32
  %740 = call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 %739, i32 0, i32 2, i32 1, i32 1) #13
  br label %741

741:                                              ; preds = %724, %721, %738
  %742 = phi %struct.mbuf* [ %740, %738 ], [ %722, %721 ], [ %722, %724 ]
  %743 = phi i64 [ %56, %738 ], [ 0, %721 ], [ %730, %724 ]
  %744 = icmp eq %struct.mbuf* %742, null
  br i1 %744, label %745, label %746

745:                                              ; preds = %741
  store i32 12, i32* %10, align 4
  br label %1892

746:                                              ; preds = %741
  %747 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 53
  %748 = load i32, i32* %747, align 4
  %749 = zext i32 %748 to i64
  %750 = add nsw i64 %749, -20
  %751 = icmp sgt i64 %743, %750
  %752 = select i1 %751, i64 %750, i64 %743
  %753 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %742, i64 0, i32 0, i32 2
  %754 = bitcast i8** %753 to %struct.sctp_paramhdr**
  %755 = load %struct.sctp_paramhdr*, %struct.sctp_paramhdr** %754, align 8
  %756 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %755, i64 0, i32 0
  store i16 3072, i16* %756, align 1
  %757 = add i64 %752, 4
  %758 = trunc i64 %757 to i16
  %759 = call i16 @llvm.bswap.i16(i16 %758) #13
  %760 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %755, i64 0, i32 1
  store i16 %759, i16* %760, align 1
  %761 = trunc i64 %757 to i32
  %762 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %742, i64 0, i32 0, i32 3
  store i32 %761, i32* %762, align 8
  br i1 %720, label %763, label %770

763:                                              ; preds = %746
  %764 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %755, i64 1
  %765 = bitcast %struct.sctp_paramhdr* %764 to i8*
  %766 = trunc i64 %752 to i32
  %767 = call i32 @uiomove(i8* %765, i32 %766, %struct.uio* %2) #13
  store i32 %767, i32* %10, align 4
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %774, label %769

769:                                              ; preds = %763
  call void @m_freem(%struct.mbuf* nonnull %742) #13
  br label %774

770:                                              ; preds = %746
  %771 = icmp eq i64 %56, 0
  br i1 %771, label %774, label %772

772:                                              ; preds = %770
  %773 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %742, i64 0, i32 0, i32 0
  store %struct.mbuf* %57, %struct.mbuf** %773, align 8
  br label %774

774:                                              ; preds = %763, %770, %772, %769
  %775 = phi %struct.mbuf* [ null, %769 ], [ %742, %763 ], [ %742, %772 ], [ %742, %770 ]
  %776 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %777 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %776) #13
  %778 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 120
  %779 = atomicrmw add i32* %778, i32 -1 seq_cst
  %780 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %781 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %780, align 8
  call void @sctp_abort_an_association(%struct.sctp_inpcb* %781, %struct.sctp_tcb* %550, %struct.mbuf* %775, i32 1) #13
  %782 = icmp eq i64 %56, 0
  %783 = select i1 %782, %struct.mbuf* %57, %struct.mbuf* null
  br label %1884

784:                                              ; preds = %706
  %785 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 78
  %786 = load i32, i32* %785, align 4
  %787 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 121
  %788 = load i32, i32* %787, align 4
  %789 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 168
  %790 = load i8, i8* %789, align 2
  %791 = icmp eq i8 %790, 0
  %792 = select i1 %791, i32 16, i32 20
  %793 = mul i32 %792, %788
  %794 = sub i32 %786, %793
  %795 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 22
  %796 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 22, i32 9
  %797 = load i32, i32* %796, align 8
  %798 = icmp ugt i32 %797, %794
  %799 = sub i32 %797, %794
  %800 = zext i32 %799 to i64
  %801 = select i1 %798, i32 %799, i32 0
  %802 = zext i32 %801 to i64
  %803 = icmp eq i32 %654, 0
  br i1 %803, label %807, label %804

804:                                              ; preds = %784
  %805 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %806 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %805) #13
  br label %807

807:                                              ; preds = %784, %804
  %808 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %674, align 8
  %809 = icmp eq %struct.sctp_stream_out* %808, null
  br i1 %809, label %810, label %811

810:                                              ; preds = %807
  store i32 14, i32* %10, align 4
  br label %1892

811:                                              ; preds = %807
  %812 = icmp eq i32 %44, 0
  br i1 %812, label %813, label %821

813:                                              ; preds = %811
  %814 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 0
  %815 = load %struct.socket*, %struct.socket** %814, align 8
  %816 = getelementptr inbounds %struct.socket, %struct.socket* %815, i64 0, i32 22, i32 9
  %817 = load i32, i32* %816, align 8
  %818 = zext i32 %817 to i64
  %819 = icmp sgt i64 %56, %818
  br i1 %819, label %820, label %821

820:                                              ; preds = %813
  store i32 90, i32* %10, align 4
  br label %1892

821:                                              ; preds = %813, %811
  %822 = and i1 %35, %42
  br i1 %822, label %823, label %824

823:                                              ; preds = %821
  store i32 22, i32* %10, align 4
  br label %1892

824:                                              ; preds = %821
  br i1 %42, label %825, label %831

825:                                              ; preds = %824
  %826 = load i32, i32* %796, align 8
  %827 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 37), align 4
  %828 = icmp ugt i32 %826, %827
  %829 = select i1 %828, i32 %827, i32 %826
  %830 = zext i32 %829 to i64
  br label %831

831:                                              ; preds = %824, %825
  %832 = phi i64 [ %830, %825 ], [ %56, %824 ]
  br i1 %609, label %922, label %833

833:                                              ; preds = %831
  %834 = icmp slt i64 %832, %802
  br i1 %834, label %841, label %835

835:                                              ; preds = %833
  %836 = load i32, i32* %796, align 8
  %837 = zext i32 %836 to i64
  %838 = icmp sle i64 %832, %837
  %839 = icmp eq i32 %801, 0
  %840 = or i1 %839, %838
  br i1 %840, label %850, label %843

841:                                              ; preds = %833
  %842 = icmp eq i32 %801, 0
  br i1 %842, label %850, label %843

843:                                              ; preds = %835, %841
  %844 = load i32, i32* %787, align 4
  %845 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 84
  %846 = load i32, i32* %845, align 4
  %847 = add i32 %846, %844
  %848 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 15), align 4
  %849 = icmp ult i32 %847, %848
  br i1 %849, label %922, label %850

850:                                              ; preds = %835, %843, %841
  %851 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 22, i32 1
  %852 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %851) #13
  %853 = load i32, i32* %785, align 4
  %854 = load i32, i32* %787, align 4
  %855 = load i8, i8* %789, align 2
  %856 = icmp eq i8 %855, 0
  %857 = select i1 %856, i32 16, i32 20
  %858 = mul i32 %857, %854
  %859 = sub i32 %853, %858
  %860 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 84
  %861 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 6
  %862 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 17
  br label %863

863:                                              ; preds = %910, %850
  %864 = phi i32 [ %854, %850 ], [ %912, %910 ]
  %865 = phi i32 [ %859, %850 ], [ %917, %910 ]
  %866 = load i32, i32* %796, align 8
  %867 = zext i32 %866 to i64
  %868 = zext i32 %865 to i64
  %869 = add nsw i64 %832, %868
  %870 = icmp sgt i64 %869, %867
  br i1 %870, label %876, label %871

871:                                              ; preds = %863
  %872 = load i32, i32* %860, align 4
  %873 = add i32 %864, %872
  %874 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 15), align 4
  %875 = icmp ult i32 %873, %874
  br i1 %875, label %918, label %876

876:                                              ; preds = %871, %863
  %877 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %878 = and i32 %877, 1
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %881, label %880

880:                                              ; preds = %876
  call void @sctp_log_block(i8 zeroext 81, %struct.sctp_association* %551, i64 %56) #13
  br label %881

881:                                              ; preds = %876, %880
  store i32 0, i32* %22, align 4
  store %struct.sctp_block_entry* %12, %struct.sctp_block_entry** %861, align 8
  %882 = call i32 @sbwait(%struct.sockbuf* %795) #13
  store i32 %882, i32* %10, align 4
  store %struct.sctp_block_entry* null, %struct.sctp_block_entry** %861, align 8
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %884, label %895

884:                                              ; preds = %881
  %885 = load i16, i16* %862, align 8
  %886 = icmp eq i16 %885, 0
  %887 = load i32, i32* %22, align 4
  %888 = icmp eq i32 %887, 0
  %889 = and i1 %886, %888
  br i1 %889, label %897, label %890

890:                                              ; preds = %884
  br i1 %886, label %893, label %891

891:                                              ; preds = %890
  %892 = zext i16 %885 to i32
  store i32 %892, i32* %10, align 4
  br label %893

893:                                              ; preds = %890, %891
  br i1 %888, label %895, label %894

894:                                              ; preds = %893
  store i32 %887, i32* %10, align 4
  br label %895

895:                                              ; preds = %881, %893, %894
  %896 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %851) #13
  br label %1892

897:                                              ; preds = %884
  %898 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %899 = and i32 %898, 1
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %904, label %901

901:                                              ; preds = %897
  %902 = load i32, i32* %785, align 4
  %903 = zext i32 %902 to i64
  call void @sctp_log_block(i8 zeroext 8, %struct.sctp_association* %551, i64 %903) #13
  br label %904

904:                                              ; preds = %897, %901
  %905 = load i32, i32* %656, align 8
  %906 = and i32 %905, 512
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %910, label %908

908:                                              ; preds = %904
  %909 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %851) #13
  br label %1892

910:                                              ; preds = %904
  %911 = load i32, i32* %785, align 4
  %912 = load i32, i32* %787, align 4
  %913 = load i8, i8* %789, align 2
  %914 = icmp eq i8 %913, 0
  %915 = select i1 %914, i32 16, i32 20
  %916 = mul i32 %915, %912
  %917 = sub i32 %911, %916
  br label %863

918:                                              ; preds = %871
  %919 = call i32 @llvm.usub.sat.i32(i32 %866, i32 %865)
  %920 = zext i32 %919 to i64
  %921 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %851) #13
  br label %922

922:                                              ; preds = %843, %918, %831
  %923 = phi i64 [ %802, %831 ], [ %920, %918 ], [ %800, %843 ]
  %924 = load i32, i32* %656, align 8
  %925 = and i32 %924, 512
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %927, label %1892

927:                                              ; preds = %922
  %928 = icmp eq i64 %56, 0
  br i1 %928, label %929, label %933

929:                                              ; preds = %927
  %930 = and i32 %562, 256
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %1617

932:                                              ; preds = %929
  store i32 22, i32* %10, align 4
  br label %1884

933:                                              ; preds = %927
  %934 = icmp eq %struct.mbuf* %57, null
  br i1 %934, label %935, label %1603

935:                                              ; preds = %933
  %936 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 15
  %937 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %938 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 144
  %939 = load i8, i8* %938, align 8
  %940 = icmp eq i8 %939, 0
  br i1 %940, label %941, label %943

941:                                              ; preds = %935
  %942 = load i16, i16* %667, align 4
  br label %950

943:                                              ; preds = %935
  %944 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 141
  %945 = load i16, i16* %944, align 2
  %946 = load i16, i16* %667, align 4
  %947 = icmp eq i16 %945, %946
  br i1 %947, label %950, label %948

948:                                              ; preds = %943
  %949 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  store i32 22, i32* %10, align 4
  br label %1892

950:                                              ; preds = %941, %943
  %951 = phi i16 [ %942, %941 ], [ %945, %943 ]
  %952 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 28
  %953 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %952, align 8
  %954 = zext i16 %951 to i64
  %955 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %953, i64 %954
  %956 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %953, i64 %954, i32 8
  %957 = load i8, i8* %956, align 2
  %958 = icmp eq i8 %957, 0
  br i1 %958, label %959, label %1143

959:                                              ; preds = %950, %1155
  %960 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  %961 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  store i32 0, i32* %10, align 4
  %962 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 0
  %963 = load i32, i32* %962, align 8
  %964 = and i32 %963, 127
  switch i32 %964, label %965 [
    i32 16, label %970
    i32 64, label %970
    i32 32, label %970
  ]

965:                                              ; preds = %959
  %966 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 0
  %967 = load i32, i32* %966, align 8
  %968 = trunc i32 %967 to i8
  %969 = icmp slt i8 %968, 0
  br i1 %969, label %970, label %971

970:                                              ; preds = %965, %959, %959, %959
  store i32 104, i32* %10, align 4
  br label %1892

971:                                              ; preds = %965
  %972 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 19), align 8
  %973 = call noalias i8* @malloc(i64 %972) #13
  %974 = bitcast i8* %973 to %struct.sctp_stream_queue_pending*
  %975 = icmp eq i8* %973, null
  br i1 %975, label %1015, label %976

976:                                              ; preds = %971
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %973, i8 0, i64 112, i1 false) #13
  %977 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  %978 = getelementptr inbounds i8, i8* %973, i64 100
  store i8 0, i8* %978, align 4
  %979 = getelementptr inbounds i8, i8* %973, i64 96
  %980 = bitcast i8* %979 to i16*
  store i16 0, i16* %980, align 8
  %981 = getelementptr inbounds i8, i8* %973, i64 103
  store i8 0, i8* %981, align 1
  %982 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 2
  %983 = load i16, i16* %982, align 4
  %984 = getelementptr inbounds i8, i8* %973, i64 92
  %985 = bitcast i8* %984 to i16*
  store i16 %983, i16* %985, align 4
  %986 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 5
  %987 = load i32, i32* %986, align 4
  %988 = getelementptr inbounds i8, i8* %973, i64 80
  %989 = bitcast i8* %988 to i32*
  store i32 %987, i32* %989, align 8
  %990 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 3
  %991 = load i32, i32* %990, align 4
  %992 = getelementptr inbounds i8, i8* %973, i64 84
  %993 = bitcast i8* %992 to i32*
  store i32 %991, i32* %993, align 4
  %994 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 4
  %995 = load i32, i32* %994, align 4
  %996 = getelementptr inbounds i8, i8* %973, i64 88
  %997 = bitcast i8* %996 to i32*
  store i32 %995, i32* %997, align 8
  %998 = getelementptr inbounds i8, i8* %973, i64 72
  %999 = bitcast i8* %998 to i32*
  store i32 0, i32* %999, align 8
  %1000 = getelementptr inbounds i8, i8* %973, i64 16
  %1001 = bitcast i8* %1000 to %struct.timeval*
  %1002 = call i32 @gettimeofday(%struct.timeval* %1001, i8* null) #13
  %1003 = load i16, i16* %667, align 4
  %1004 = getelementptr inbounds i8, i8* %973, i64 94
  %1005 = bitcast i8* %1004 to i16*
  store i16 %1003, i16* %1005, align 2
  %1006 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3
  %1007 = load i64, i64* %1006, align 8
  %1008 = icmp sgt i64 %1007, %923
  %1009 = select i1 %1008, i64 %923, i64 %1007
  %1010 = trunc i64 %1009 to i32
  %1011 = getelementptr inbounds i8, i8* %973, i64 76
  %1012 = bitcast i8* %1011 to i32*
  store i32 %1010, i32* %1012, align 4
  %1013 = trunc i64 %1007 to i32
  %1014 = icmp eq i32 %1010, %1013
  br i1 %1014, label %1016, label %1021

1015:                                             ; preds = %971
  store i32 12, i32* %10, align 4
  br label %1892

1016:                                             ; preds = %976
  br i1 %812, label %1022, label %1017

1017:                                             ; preds = %1016
  %1018 = load i16, i16* %982, align 4
  %1019 = and i16 %1018, 8448
  %1020 = icmp eq i16 %1019, 0
  br i1 %1020, label %1021, label %1022

1021:                                             ; preds = %1017, %976
  br label %1022

1022:                                             ; preds = %1016, %1017, %1021
  %1023 = phi i8 [ 0, %1021 ], [ 1, %1017 ], [ 1, %1016 ]
  %1024 = getelementptr inbounds i8, i8* %973, i64 101
  store i8 %1023, i8* %1024, align 1
  store i8 0, i8* %981, align 1
  %1025 = getelementptr inbounds i8, i8* %973, i64 102
  store i8 0, i8* %1025, align 2
  %1026 = getelementptr inbounds i8, i8* %973, i64 104
  store i8 0, i8* %1026, align 8
  %1027 = load i8, i8* %789, align 2
  %1028 = icmp eq i8 %1027, 0
  %1029 = select i1 %1028, i32 16, i32 20
  %1030 = getelementptr inbounds i8, i8* %973, i64 8
  %1031 = bitcast i8* %1030 to %struct.mbuf**
  %1032 = bitcast i8* %973 to %struct.mbuf**
  %1033 = icmp eq i32 %1010, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %973, i8 0, i64 16, i1 false) #13
  br i1 %1033, label %1061, label %1034

1034:                                             ; preds = %1022
  %1035 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 10
  %1036 = load i16, i16* %1035, align 2
  %1037 = icmp eq i16 %1036, 0
  %1038 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 119, i32 5
  %1039 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 9
  %1040 = select i1 %1037, i16* %1038, i16* %1039
  %1041 = load i16, i16* %1040, align 4
  %1042 = getelementptr inbounds i8, i8* %973, i64 98
  %1043 = bitcast i8* %1042 to i16*
  store i16 %1041, i16* %1043, align 2
  %1044 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 115
  %1045 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1044, align 8
  %1046 = icmp eq %struct.sctp_auth_chklist* %1045, null
  br i1 %1046, label %1053, label %1047

1047:                                             ; preds = %1034
  %1048 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1045, i64 0, i32 0, i64 0
  %1049 = load i8, i8* %1048, align 1
  %1050 = icmp eq i8 %1049, 0
  br i1 %1050, label %1053, label %1051

1051:                                             ; preds = %1047
  call void @sctp_auth_key_acquire(%struct.sctp_tcb* %550, i16 zeroext %1041) #13
  store i8 1, i8* %978, align 4
  %1052 = load i32, i32* %1012, align 4
  br label %1053

1053:                                             ; preds = %1051, %1047, %1034
  %1054 = phi i32 [ %1010, %1047 ], [ %1010, %1034 ], [ %1052, %1051 ]
  %1055 = call %struct.mbuf* @m_uiotombuf(%struct.uio* %2, i32 2, i32 %1054, i32 %1029, i32 0) #13
  store %struct.mbuf* %1055, %struct.mbuf** %1032, align 8
  %1056 = icmp eq %struct.mbuf* %1055, null
  br i1 %1056, label %1059, label %1057

1057:                                             ; preds = %1053
  %1058 = call %struct.mbuf* @m_last(%struct.mbuf* nonnull %1055) #13
  store %struct.mbuf* %1058, %struct.mbuf** %1031, align 8
  br label %1059

1059:                                             ; preds = %1057, %1053
  %1060 = phi i32 [ 0, %1057 ], [ 105, %1053 ]
  store i32 %1060, i32* %10, align 4
  br label %1063

1061:                                             ; preds = %1022
  %1062 = load i32, i32* %10, align 4
  br label %1063

1063:                                             ; preds = %1061, %1059
  %1064 = phi i32 [ %1062, %1061 ], [ %1060, %1059 ]
  %1065 = icmp eq i32 %1064, 0
  br i1 %1065, label %1078, label %1066

1066:                                             ; preds = %1063
  %1067 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1068 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1067) #13
  %1069 = load i8, i8* %978, align 4
  %1070 = icmp eq i8 %1069, 0
  br i1 %1070, label %1075, label %1071

1071:                                             ; preds = %1066
  %1072 = getelementptr inbounds i8, i8* %973, i64 98
  %1073 = bitcast i8* %1072 to i16*
  %1074 = load i16, i16* %1073, align 2
  call void @sctp_auth_key_release(%struct.sctp_tcb* %550, i16 zeroext %1074, i32 1) #13
  br label %1075

1075:                                             ; preds = %1071, %1066
  call void @free(i8* nonnull %973) #13
  %1076 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  %1077 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1067) #13
  br label %1089

1078:                                             ; preds = %1063
  %1079 = load i16, i16* %985, align 4
  %1080 = and i16 %1079, 2048
  %1081 = icmp eq i16 %1080, 0
  %1082 = getelementptr inbounds i8, i8* %973, i64 32
  %1083 = bitcast i8* %1082 to %struct.sctp_nets**
  br i1 %1081, label %1087, label %1084

1084:                                             ; preds = %1078
  store %struct.sctp_nets* %961, %struct.sctp_nets** %1083, align 8
  %1085 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %961, i64 0, i32 17
  %1086 = atomicrmw add i32* %1085, i32 1 seq_cst
  br label %1088

1087:                                             ; preds = %1078
  store %struct.sctp_nets* null, %struct.sctp_nets** %1083, align 8
  br label %1088

1088:                                             ; preds = %1087, %1084
  call fastcc void @sctp_set_prsctp_policy(%struct.sctp_stream_queue_pending* nonnull %974) #13
  br label %1089

1089:                                             ; preds = %1075, %1088
  %1090 = phi %struct.sctp_stream_queue_pending* [ %974, %1088 ], [ null, %1075 ]
  %1091 = load i32, i32* %10, align 4
  %1092 = icmp eq i32 %1091, 0
  br i1 %1092, label %1093, label %1892

1093:                                             ; preds = %1089
  %1094 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1095 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 16
  %1096 = load i8, i8* %1095, align 1
  %1097 = icmp eq i8 %1096, 0
  br i1 %1097, label %1099, label %1098

1098:                                             ; preds = %1093
  store i8 0, i8* %956, align 2
  store i8 0, i8* %938, align 8
  br label %1107

1099:                                             ; preds = %1093
  store i8 1, i8* %956, align 2
  %1100 = load i8, i8* %789, align 2
  %1101 = icmp eq i8 %1100, 0
  br i1 %1101, label %1102, label %1105

1102:                                             ; preds = %1099
  store i8 1, i8* %938, align 8
  %1103 = load i16, i16* %667, align 4
  %1104 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 141
  store i16 %1103, i16* %1104, align 2
  br label %1105

1105:                                             ; preds = %1102, %1099
  %1106 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 18
  store i8 0, i8* %1106, align 1
  br label %1107

1107:                                             ; preds = %1098, %1105
  %1108 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 7
  %1109 = load i32, i32* %1108, align 4
  %1110 = atomicrmw add i32* %785, i32 %1109 seq_cst
  %1111 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 0
  %1112 = load %struct.socket*, %struct.socket** %1111, align 8
  %1113 = icmp eq %struct.socket* %1112, null
  br i1 %1113, label %1125, label %1114

1114:                                             ; preds = %1107
  %1115 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1116 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1115, align 8
  %1117 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1116, i64 0, i32 9
  %1118 = load i32, i32* %1117, align 8
  %1119 = and i32 %1118, 4194306
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1125, label %1121

1121:                                             ; preds = %1114
  %1122 = getelementptr inbounds %struct.socket, %struct.socket* %1112, i64 0, i32 22, i32 8
  %1123 = load i32, i32* %1108, align 4
  %1124 = atomicrmw add i32* %1122, i32 %1123 seq_cst
  br label %1125

1125:                                             ; preds = %1114, %1107, %1121
  %1126 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 84
  %1127 = atomicrmw add i32* %1126, i32 1 seq_cst
  %1128 = and i32 %562, 1024
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1132, label %1130

1130:                                             ; preds = %1125
  %1131 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 111), i32 1 seq_cst
  br label %1132

1132:                                             ; preds = %1125, %1130
  %1133 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 21
  store i8 1, i8* %1133, align 2
  %1134 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 4, i32 0
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %1134, align 8
  %1135 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %953, i64 %954, i32 0, i32 1
  %1136 = bitcast %struct.sctp_stream_queue_pending*** %1135 to i64*
  %1137 = load i64, i64* %1136, align 8
  %1138 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1090, i64 0, i32 4, i32 1
  %1139 = bitcast %struct.sctp_stream_queue_pending*** %1138 to i64*
  store i64 %1137, i64* %1139, align 8
  %1140 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %1135, align 8
  store %struct.sctp_stream_queue_pending* %1090, %struct.sctp_stream_queue_pending** %1140, align 8
  store %struct.sctp_stream_queue_pending** %1134, %struct.sctp_stream_queue_pending*** %1135, align 8
  %1141 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 39, i32 3
  %1142 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %1141, align 8
  call void %1142(%struct.sctp_tcb* %550, %struct.sctp_association* %551, %struct.sctp_stream_out* %955, %struct.sctp_stream_queue_pending* %1090, i32 1) #13
  br label %1163

1143:                                             ; preds = %950
  %1144 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %953, i64 %954, i32 0, i32 1
  %1145 = bitcast %struct.sctp_stream_queue_pending*** %1144 to %struct.sctp_streamhead**
  %1146 = load %struct.sctp_streamhead*, %struct.sctp_streamhead** %1145, align 8
  %1147 = getelementptr inbounds %struct.sctp_streamhead, %struct.sctp_streamhead* %1146, i64 0, i32 1
  %1148 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %1147, align 8
  %1149 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %1148, align 8
  %1150 = icmp eq %struct.sctp_stream_queue_pending* %1149, null
  br i1 %1150, label %1151, label %1156

1151:                                             ; preds = %1143
  %1152 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %1153 = icmp eq void (i8*, ...)* %1152, null
  br i1 %1153, label %1155, label %1154

1154:                                             ; preds = %1151
  call void (i8*, ...) %1152(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0)) #13
  br label %1155

1155:                                             ; preds = %1151, %1154
  store i8 0, i8* %956, align 2
  br label %959

1156:                                             ; preds = %1143
  %1157 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1149, i64 0, i32 21
  %1158 = load i8, i8* %1157, align 2
  %1159 = icmp eq i8 %1158, 0
  br i1 %1159, label %1162, label %1160

1160:                                             ; preds = %1156
  %1161 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  store i32 22, i32* %10, align 4
  br label %1892

1162:                                             ; preds = %1156
  store i8 1, i8* %1157, align 2
  br label %1163

1163:                                             ; preds = %1162, %1132
  %1164 = phi %struct.sctp_stream_queue_pending* [ %1090, %1132 ], [ %1149, %1162 ]
  %1165 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  %1166 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3
  %1167 = load i64, i64* %1166, align 8
  %1168 = icmp sgt i64 %1167, 0
  br i1 %1168, label %1169, label %1564

1169:                                             ; preds = %1163
  %1170 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1171 = select i1 %812, i32 2, i32 6
  %1172 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 1
  %1173 = bitcast %struct.mbuf** %1172 to i64*
  %1174 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 0
  %1175 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 0
  %1176 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1177 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 7
  %1178 = and i32 %562, 16384
  %1179 = icmp eq i32 %1178, 0
  %1180 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 11
  %1181 = and i32 %562, 256
  %1182 = icmp ne i32 %1181, 0
  %1183 = and i32 %562, 8192
  %1184 = icmp ne i32 %1183, 0
  %1185 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 16
  %1186 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 162
  %1187 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 87
  %1188 = trunc i64 %56 to i32
  %1189 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 20, i32 0
  %1190 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %560, i64 0, i32 5
  %1191 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 21, i32 0
  %1192 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 189
  %1193 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 181
  %1194 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 92
  %1195 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 84
  %1196 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 53
  %1197 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 93
  %1198 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 22, i32 1
  %1199 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 6
  %1200 = getelementptr inbounds %struct.socket, %struct.socket* %0, i64 0, i32 17
  %1201 = or i1 %812, %1182
  %1202 = and i1 %42, %1184
  %1203 = or i1 %1201, %1202
  br label %1204

1204:                                             ; preds = %1169, %1558
  %1205 = phi i64 [ %1167, %1169 ], [ %1562, %1558 ]
  %1206 = phi i32 [ 0, %1169 ], [ %1561, %1558 ]
  %1207 = phi i32 [ %549, %1169 ], [ %1560, %1558 ]
  %1208 = phi i32 [ %690, %1169 ], [ %1559, %1558 ]
  %1209 = load i32, i32* %785, align 4
  %1210 = load i32, i32* %787, align 4
  %1211 = load i8, i8* %789, align 2
  %1212 = icmp eq i8 %1211, 0
  %1213 = select i1 %1212, i32 16, i32 20
  %1214 = mul i32 %1213, %1210
  %1215 = sub i32 %1209, %1214
  %1216 = load i32, i32* %796, align 8
  %1217 = call i32 @llvm.usub.sat.i32(i32 %1216, i32 %1215)
  %1218 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 37), align 4
  %1219 = icmp ugt i32 %1217, %1218
  br i1 %1219, label %1227, label %1220

1220:                                             ; preds = %1204
  %1221 = zext i32 %1217 to i64
  %1222 = icmp eq i32 %1217, 0
  %1223 = icmp uge i32 %1216, %1218
  %1224 = or i1 %1223, %1222
  %1225 = icmp sgt i64 %1205, %1221
  %1226 = and i1 %1224, %1225
  br i1 %1226, label %1298, label %1227

1227:                                             ; preds = %1220, %1204
  %1228 = icmp eq i32 %1206, 0
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1227
  %1230 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1170) #13
  br label %1231

1231:                                             ; preds = %1227, %1229
  %1232 = call %struct.mbuf* @m_uiotombuf(%struct.uio* %2, i32 2, i32 %1217, i32 0, i32 %1171) #13
  %1233 = icmp eq %struct.mbuf* %1232, null
  br i1 %1233, label %1234, label %1235

1234:                                             ; preds = %1231
  store i32 105, i32* %10, align 4
  br label %1242

1235:                                             ; preds = %1231
  %1236 = call i32 @m_length(%struct.mbuf* nonnull %1232, %struct.mbuf** null) #13
  %1237 = call %struct.mbuf* @m_last(%struct.mbuf* nonnull %1232) #13
  %1238 = ptrtoint %struct.mbuf* %1237 to i64
  %1239 = load i32, i32* %10, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1256, label %1241

1241:                                             ; preds = %1235
  call void @m_freem(%struct.mbuf* nonnull %1232) #13
  br label %1242

1242:                                             ; preds = %1234, %1241
  %1243 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1244 = load i32, i32* %656, align 8
  %1245 = and i32 %1244, 512
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1247, label %1254

1247:                                             ; preds = %1242
  %1248 = and i32 %1244, 2048
  %1249 = icmp eq i32 %1248, 0
  %1250 = icmp ne %struct.sctp_stream_queue_pending* %1164, null
  %1251 = and i1 %1250, %1249
  br i1 %1251, label %1252, label %1254

1252:                                             ; preds = %1247
  %1253 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 21
  store i8 0, i8* %1253, align 2
  br label %1254

1254:                                             ; preds = %1252, %1247, %1242
  %1255 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br label %1892

1256:                                             ; preds = %1235
  %1257 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1258 = load i32, i32* %656, align 8
  %1259 = and i32 %1258, 2560
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1268, label %1261

1261:                                             ; preds = %1256
  call void @m_freem(%struct.mbuf* nonnull %1232) #13
  %1262 = load i32, i32* %656, align 8
  %1263 = and i32 %1262, 2048
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1266, label %1265

1265:                                             ; preds = %1261
  store i32 104, i32* %10, align 4
  br label %1266

1266:                                             ; preds = %1261, %1265
  %1267 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br label %1892

1268:                                             ; preds = %1256
  %1269 = load %struct.mbuf*, %struct.mbuf** %1172, align 8
  %1270 = icmp eq %struct.mbuf* %1269, null
  %1271 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %1269, i64 0, i32 0, i32 0
  %1272 = select i1 %1270, %struct.mbuf** %1174, %struct.mbuf** %1271
  store %struct.mbuf* %1232, %struct.mbuf** %1272, align 8
  store i64 %1238, i64* %1173, align 8
  %1273 = atomicrmw add i32* %785, i32 %1236 seq_cst
  %1274 = load %struct.socket*, %struct.socket** %1175, align 8
  %1275 = icmp eq %struct.socket* %1274, null
  br i1 %1275, label %1285, label %1276

1276:                                             ; preds = %1268
  %1277 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1176, align 8
  %1278 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1277, i64 0, i32 9
  %1279 = load i32, i32* %1278, align 8
  %1280 = and i32 %1279, 4194306
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1285, label %1282

1282:                                             ; preds = %1276
  %1283 = getelementptr inbounds %struct.socket, %struct.socket* %1274, i64 0, i32 22, i32 8
  %1284 = atomicrmw add i32* %1283, i32 %1236 seq_cst
  br label %1285

1285:                                             ; preds = %1276, %1268, %1282
  %1286 = atomicrmw add i32* %1177, i32 %1236 seq_cst
  br i1 %1179, label %1290, label %1287

1287:                                             ; preds = %1285
  %1288 = load i16, i16* %1180, align 4
  %1289 = or i16 %1288, 16384
  store i16 %1289, i16* %1180, align 4
  br label %1290

1290:                                             ; preds = %1285, %1287
  %1291 = load i64, i64* %1166, align 8
  %1292 = icmp eq i64 %1291, 0
  %1293 = and i1 %1203, %1292
  %1294 = zext i1 %1293 to i8
  store i8 %1294, i8* %1185, align 1
  %1295 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  %1296 = load i64, i64* %1166, align 8
  %1297 = icmp eq i64 %1296, 0
  br i1 %1297, label %1564, label %1298

1298:                                             ; preds = %1220, %1290
  %1299 = phi i32 [ 0, %1290 ], [ %1206, %1220 ]
  %1300 = load i8, i8* %1186, align 4
  %1301 = icmp eq i8 %1300, 0
  br i1 %1301, label %1392, label %1302

1302:                                             ; preds = %1298
  %1303 = load i32, i32* %1187, align 8
  %1304 = icmp eq i32 %1303, 0
  br i1 %1304, label %1392, label %1305

1305:                                             ; preds = %1302
  %1306 = icmp eq i32 %1299, 0
  br i1 %1306, label %1307, label %1314

1307:                                             ; preds = %1305
  %1308 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1170) #13
  %1309 = load i8, i8* %1186, align 4
  %1310 = icmp eq i8 %1309, 0
  br i1 %1310, label %1378, label %1311

1311:                                             ; preds = %1307
  %1312 = load i32, i32* %1187, align 8
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1378, label %1314

1314:                                             ; preds = %1305, %1311
  %1315 = phi i32 [ 1, %1311 ], [ %1299, %1305 ]
  %1316 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1189, align 8
  %1317 = icmp eq %struct.sctp_tmit_chunk* %1316, null
  br i1 %1317, label %1348, label %1318

1318:                                             ; preds = %1314, %1343
  %1319 = phi %struct.sctp_tmit_chunk* [ %1346, %1343 ], [ %1316, %1314 ]
  %1320 = phi i32 [ %1344, %1343 ], [ 0, %1314 ]
  %1321 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1319, i64 0, i32 9
  %1322 = load i16, i16* %1321, align 2
  %1323 = and i16 %1322, 15
  %1324 = icmp eq i16 %1323, 2
  br i1 %1324, label %1325, label %1343

1325:                                             ; preds = %1318
  %1326 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1319, i64 0, i32 0, i32 0, i32 7, i32 0
  %1327 = load i64, i64* %1326, align 8
  %1328 = load i32, i32* %1190, align 4
  %1329 = zext i32 %1328 to i64
  %1330 = icmp sgt i64 %1327, %1329
  br i1 %1330, label %1331, label %1343

1331:                                             ; preds = %1325
  %1332 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1319, i64 0, i32 3
  %1333 = load %struct.mbuf*, %struct.mbuf** %1332, align 8
  %1334 = icmp eq %struct.mbuf* %1333, null
  br i1 %1334, label %1343, label %1335

1335:                                             ; preds = %1331
  %1336 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1319, i64 0, i32 7
  %1337 = load i32, i32* %1336, align 8
  %1338 = icmp sgt i32 %1337, 0
  %1339 = zext i1 %1338 to i8
  %1340 = call i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb* %550, %struct.sctp_tmit_chunk* nonnull %1319, i8 zeroext %1339, i32 1) #13
  %1341 = add nsw i32 %1340, %1320
  %1342 = icmp slt i32 %1341, %1188
  br i1 %1342, label %1343, label %1378

1343:                                             ; preds = %1335, %1331, %1325, %1318
  %1344 = phi i32 [ %1341, %1335 ], [ %1320, %1331 ], [ %1320, %1325 ], [ %1320, %1318 ]
  %1345 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1319, i64 0, i32 6, i32 0
  %1346 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1345, align 8
  %1347 = icmp eq %struct.sctp_tmit_chunk* %1346, null
  br i1 %1347, label %1348, label %1318

1348:                                             ; preds = %1343, %1314
  %1349 = phi i32 [ 0, %1314 ], [ %1344, %1343 ]
  %1350 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1191, align 8
  %1351 = icmp eq %struct.sctp_tmit_chunk* %1350, null
  br i1 %1351, label %1378, label %1352

1352:                                             ; preds = %1348, %1375
  %1353 = phi i32 [ %1376, %1375 ], [ %1349, %1348 ]
  %1354 = phi %struct.sctp_tmit_chunk* [ %1356, %1375 ], [ %1350, %1348 ]
  %1355 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1354, i64 0, i32 6, i32 0
  %1356 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1355, align 8
  %1357 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1354, i64 0, i32 9
  %1358 = load i16, i16* %1357, align 2
  %1359 = and i16 %1358, 15
  %1360 = icmp eq i16 %1359, 2
  br i1 %1360, label %1361, label %1375

1361:                                             ; preds = %1352
  %1362 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1354, i64 0, i32 0, i32 0, i32 7, i32 0
  %1363 = load i64, i64* %1362, align 8
  %1364 = load i32, i32* %1190, align 4
  %1365 = zext i32 %1364 to i64
  %1366 = icmp sgt i64 %1363, %1365
  br i1 %1366, label %1367, label %1375

1367:                                             ; preds = %1361
  %1368 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1354, i64 0, i32 3
  %1369 = load %struct.mbuf*, %struct.mbuf** %1368, align 8
  %1370 = icmp eq %struct.mbuf* %1369, null
  br i1 %1370, label %1375, label %1371

1371:                                             ; preds = %1367
  %1372 = call i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb* %550, %struct.sctp_tmit_chunk* nonnull %1354, i8 zeroext 0, i32 1) #13
  %1373 = add nsw i32 %1372, %1353
  %1374 = icmp slt i32 %1373, %1188
  br i1 %1374, label %1375, label %1378

1375:                                             ; preds = %1371, %1367, %1361, %1352
  %1376 = phi i32 [ %1373, %1371 ], [ %1353, %1367 ], [ %1353, %1361 ], [ %1353, %1352 ]
  %1377 = icmp eq %struct.sctp_tmit_chunk* %1356, null
  br i1 %1377, label %1378, label %1352

1378:                                             ; preds = %1335, %1371, %1375, %1307, %1311, %1348
  %1379 = phi i32 [ 1, %1307 ], [ 1, %1311 ], [ %1315, %1348 ], [ %1315, %1375 ], [ %1315, %1371 ], [ %1315, %1335 ]
  %1380 = load i32, i32* %785, align 4
  %1381 = load i32, i32* %787, align 4
  %1382 = load i8, i8* %789, align 2
  %1383 = icmp eq i8 %1382, 0
  %1384 = select i1 %1383, i32 16, i32 20
  %1385 = mul i32 %1384, %1381
  %1386 = sub i32 %1380, %1385
  %1387 = load i32, i32* %796, align 8
  %1388 = call i32 @llvm.usub.sat.i32(i32 %1387, i32 %1386)
  %1389 = icmp eq i32 %1388, 0
  br i1 %1389, label %1390, label %1558

1390:                                             ; preds = %1378
  %1391 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1170) #13
  br label %1392

1392:                                             ; preds = %1302, %1298, %1390
  %1393 = phi i32 [ 0, %1390 ], [ %1299, %1302 ], [ %1299, %1298 ]
  br i1 %609, label %1394, label %1399

1394:                                             ; preds = %1392
  %1395 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1396 = icmp eq %struct.sctp_stream_queue_pending* %1164, null
  br i1 %1396, label %1601, label %1397

1397:                                             ; preds = %1394
  %1398 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 21
  store i8 0, i8* %1398, align 2
  br label %1601

1399:                                             ; preds = %1392
  %1400 = icmp eq i32 %1207, 0
  br i1 %1400, label %1411, label %1401

1401:                                             ; preds = %1399
  %1402 = icmp eq i32 %1393, 0
  br i1 %1402, label %1403, label %1405

1403:                                             ; preds = %1401
  %1404 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1170) #13
  br label %1405

1405:                                             ; preds = %1403, %1401
  %1406 = phi i32 [ 1, %1403 ], [ %1393, %1401 ]
  %1407 = load i32, i32* %656, align 8
  %1408 = and i32 %1407, 127
  %1409 = icmp eq i32 %1408, 8
  br i1 %1409, label %1411, label %1410

1410:                                             ; preds = %1405
  call void @sctp_send_initiate(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 undef)
  call void @sctp_set_state(%struct.sctp_tcb* %550, i32 2) #13
  br label %1411

1411:                                             ; preds = %1399, %1405, %1410
  %1412 = phi i32 [ 1, %1410 ], [ %1208, %1399 ], [ 0, %1405 ]
  %1413 = phi i32 [ %1406, %1410 ], [ %1393, %1399 ], [ %1406, %1405 ]
  %1414 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %1415 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1414, i64 0, i32 18
  %1416 = load i32, i32* %1415, align 4
  %1417 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1414, i64 0, i32 19
  %1418 = load i32, i32* %1417, align 8
  %1419 = icmp ugt i32 %1416, %1418
  br i1 %1419, label %1420, label %1425

1420:                                             ; preds = %1411
  %1421 = load i8, i8* %1192, align 1
  %1422 = icmp eq i8 %1421, 0
  br i1 %1422, label %1423, label %1425

1423:                                             ; preds = %1420
  %1424 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 121), i32 1 seq_cst
  br label %1438

1425:                                             ; preds = %1420, %1411
  %1426 = load i8, i8* %1193, align 1
  %1427 = icmp eq i8 %1426, 0
  br i1 %1427, label %1438, label %1428

1428:                                             ; preds = %1425
  %1429 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 97), i32 1 seq_cst
  %1430 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %1431 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1430, i64 0, i32 18
  %1432 = load i32, i32* %1431, align 4
  %1433 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1430, i64 0, i32 4
  %1434 = load i32, i32* %1433, align 8
  %1435 = shl i32 %1434, 1
  %1436 = icmp ugt i32 %1432, %1435
  %1437 = select i1 %1436, i32 1, i32 %1412
  store i8 0, i8* %1193, align 1
  br label %1438

1438:                                             ; preds = %1425, %1428, %1423
  %1439 = phi i32 [ 1, %1423 ], [ %1437, %1428 ], [ %1412, %1425 ]
  %1440 = load i32, i32* %785, align 4
  %1441 = load i32, i32* %1194, align 4
  %1442 = sub i32 %1440, %1441
  %1443 = load i64, i64* %39, align 8
  %1444 = and i64 %1443, 256
  %1445 = icmp ne i64 %1444, 0
  %1446 = icmp eq i32 %1441, 0
  %1447 = or i1 %1446, %1445
  br i1 %1447, label %1460, label %1448

1448:                                             ; preds = %1438
  %1449 = load i32, i32* %1195, align 4
  %1450 = icmp ult i32 %1449, 256
  br i1 %1450, label %1451, label %1460

1451:                                             ; preds = %1448
  %1452 = load i32, i32* %1196, align 4
  %1453 = add i32 %1452, -32
  %1454 = icmp slt i32 %1442, %1453
  br i1 %1454, label %1455, label %1460

1455:                                             ; preds = %1451
  %1456 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1457 = and i32 %1456, 2048
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1467, label %1459

1459:                                             ; preds = %1455
  call void @sctp_log_nagle_event(%struct.sctp_tcb* %550, i32 72) #13
  br label %1467

1460:                                             ; preds = %1438, %1451, %1448
  %1461 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1462 = and i32 %1461, 2048
  %1463 = icmp ne i32 %1462, 0
  %1464 = icmp eq i64 %1444, 0
  %1465 = and i1 %1464, %1463
  br i1 %1465, label %1466, label %1467

1466:                                             ; preds = %1460
  call void @sctp_log_nagle_event(%struct.sctp_tcb* %550, i32 73) #13
  br label %1467

1467:                                             ; preds = %1466, %1460, %1459, %1455
  %1468 = phi i32* [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 95), %1455 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 95), %1459 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 94), %1460 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 94), %1466 ]
  %1469 = phi i32 [ 1, %1455 ], [ 1, %1459 ], [ 0, %1460 ], [ 0, %1466 ]
  %1470 = atomicrmw add i32* %1468, i32 1 seq_cst
  %1471 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1472 = and i32 %1471, 1
  %1473 = icmp eq i32 %1472, 0
  br i1 %1473, label %1479, label %1474

1474:                                             ; preds = %1467
  call void @sctp_misc_ints(i8 zeroext 77, i32 %1207, i32 %1439, i32 %1469, i32 %1442) #13
  %1475 = load i32, i32* %785, align 4
  %1476 = load i32, i32* %1194, align 4
  %1477 = load i32, i32* %787, align 4
  %1478 = load i32, i32* %1197, align 8
  call void @sctp_misc_ints(i8 zeroext 77, i32 %1475, i32 %1476, i32 %1477, i32 %1478) #13
  br label %1479

1479:                                             ; preds = %1467, %1474
  %1480 = or i32 %1469, %1439
  %1481 = icmp eq i32 %1480, 0
  br i1 %1481, label %1482, label %1489

1482:                                             ; preds = %1479
  %1483 = icmp eq i32 %1413, 0
  br i1 %1483, label %1484, label %1488

1484:                                             ; preds = %1482
  %1485 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %1170) #13
  %1486 = icmp eq i32 %1485, 0
  br i1 %1486, label %1487, label %1493

1487:                                             ; preds = %1484
  call void @sctp_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 0, i32 1)
  br label %1491

1488:                                             ; preds = %1482
  call void @sctp_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 0, i32 1)
  br label %1489

1489:                                             ; preds = %1488, %1479
  %1490 = icmp eq i32 %1413, 1
  br i1 %1490, label %1491, label %1493

1491:                                             ; preds = %1487, %1489
  %1492 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1170) #13
  br label %1493

1493:                                             ; preds = %1484, %1491, %1489
  %1494 = phi i32 [ 0, %1491 ], [ %1413, %1489 ], [ 0, %1484 ]
  %1495 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1198) #13
  %1496 = load i32, i32* %785, align 4
  %1497 = load i32, i32* %787, align 4
  %1498 = load i8, i8* %789, align 2
  %1499 = icmp eq i8 %1498, 0
  %1500 = select i1 %1499, i32 16, i32 20
  %1501 = mul i32 %1500, %1497
  %1502 = sub i32 %1496, %1501
  %1503 = load i32, i32* %796, align 8
  %1504 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 37), align 4
  %1505 = icmp ugt i32 %1504, %1503
  %1506 = select i1 %1505, i32 %1503, i32 %1504
  %1507 = add i32 %1502, %1506
  %1508 = icmp ugt i32 %1503, %1507
  br i1 %1508, label %1551, label %1509

1509:                                             ; preds = %1493
  %1510 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1511 = and i32 %1510, 1
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1515, label %1513

1513:                                             ; preds = %1509
  %1514 = load i64, i64* %1166, align 8
  call void @sctp_log_block(i8 zeroext 7, %struct.sctp_association* %551, i64 %1514) #13
  br label %1515

1515:                                             ; preds = %1509, %1513
  store i32 0, i32* %22, align 4
  store %struct.sctp_block_entry* %12, %struct.sctp_block_entry** %1199, align 8
  %1516 = call i32 @sbwait(%struct.sockbuf* %795) #13
  store i32 %1516, i32* %10, align 4
  store %struct.sctp_block_entry* null, %struct.sctp_block_entry** %1199, align 8
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1518, label %1529

1518:                                             ; preds = %1515
  %1519 = load i16, i16* %1200, align 8
  %1520 = icmp eq i16 %1519, 0
  %1521 = load i32, i32* %22, align 4
  %1522 = icmp eq i32 %1521, 0
  %1523 = and i1 %1520, %1522
  br i1 %1523, label %1544, label %1524

1524:                                             ; preds = %1518
  br i1 %1520, label %1527, label %1525

1525:                                             ; preds = %1524
  %1526 = zext i16 %1519 to i32
  store i32 %1526, i32* %10, align 4
  br label %1527

1527:                                             ; preds = %1524, %1525
  br i1 %1522, label %1529, label %1528

1528:                                             ; preds = %1527
  store i32 %1521, i32* %10, align 4
  br label %1529

1529:                                             ; preds = %1515, %1527, %1528
  %1530 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1198) #13
  %1531 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1532 = load i32, i32* %656, align 8
  %1533 = and i32 %1532, 512
  %1534 = icmp eq i32 %1533, 0
  br i1 %1534, label %1535, label %1542

1535:                                             ; preds = %1529
  %1536 = and i32 %1532, 2048
  %1537 = icmp eq i32 %1536, 0
  %1538 = icmp ne %struct.sctp_stream_queue_pending* %1164, null
  %1539 = and i1 %1538, %1537
  br i1 %1539, label %1540, label %1542

1540:                                             ; preds = %1535
  %1541 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 21
  store i8 0, i8* %1541, align 2
  br label %1542

1542:                                             ; preds = %1540, %1535, %1529
  %1543 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br label %1892

1544:                                             ; preds = %1518
  %1545 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1546 = and i32 %1545, 1
  %1547 = icmp eq i32 %1546, 0
  br i1 %1547, label %1551, label %1548

1548:                                             ; preds = %1544
  %1549 = load i32, i32* %785, align 4
  %1550 = zext i32 %1549 to i64
  call void @sctp_log_block(i8 zeroext 8, %struct.sctp_association* %551, i64 %1550) #13
  br label %1551

1551:                                             ; preds = %1544, %1493, %1548
  %1552 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1198) #13
  %1553 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1554 = load i32, i32* %656, align 8
  %1555 = and i32 %1554, 2560
  %1556 = icmp eq i32 %1555, 0
  %1557 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br i1 %1556, label %1558, label %1892

1558:                                             ; preds = %1551, %1378
  %1559 = phi i32 [ %1439, %1551 ], [ %1208, %1378 ]
  %1560 = phi i32 [ 0, %1551 ], [ %1207, %1378 ]
  %1561 = phi i32 [ %1494, %1551 ], [ %1379, %1378 ]
  %1562 = load i64, i64* %1166, align 8
  %1563 = icmp sgt i64 %1562, 0
  br i1 %1563, label %1204, label %1564

1564:                                             ; preds = %1290, %1558, %1163
  %1565 = phi i32 [ %690, %1163 ], [ %1208, %1290 ], [ %1559, %1558 ]
  %1566 = phi i32 [ %549, %1163 ], [ %1207, %1290 ], [ %1560, %1558 ]
  %1567 = phi i32 [ 0, %1163 ], [ 0, %1290 ], [ %1561, %1558 ]
  %1568 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %936) #13
  %1569 = load i32, i32* %656, align 8
  %1570 = and i32 %1569, 2560
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1574, label %1572

1572:                                             ; preds = %1564
  %1573 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br label %1892

1574:                                             ; preds = %1564
  %1575 = icmp eq %struct.sctp_stream_queue_pending* %1164, null
  br i1 %1575, label %1590, label %1576

1576:                                             ; preds = %1574
  %1577 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 16
  %1578 = load i8, i8* %1577, align 1
  %1579 = icmp eq i8 %1578, 0
  br i1 %1579, label %1580, label %1586

1580:                                             ; preds = %1576
  store i8 1, i8* %956, align 2
  %1581 = load i8, i8* %789, align 2
  %1582 = icmp eq i8 %1581, 0
  br i1 %1582, label %1583, label %1588

1583:                                             ; preds = %1580
  store i8 1, i8* %938, align 8
  %1584 = load i16, i16* %667, align 4
  %1585 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 141
  store i16 %1584, i16* %1585, align 2
  br label %1588

1586:                                             ; preds = %1576
  %1587 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 18
  store i8 1, i8* %1587, align 1
  store i8 0, i8* %956, align 2
  store i8 0, i8* %938, align 8
  br label %1588

1588:                                             ; preds = %1580, %1583, %1586
  %1589 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %1164, i64 0, i32 21
  store i8 0, i8* %1589, align 2
  br label %1595

1590:                                             ; preds = %1574
  %1591 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %1592 = icmp eq void (i8*, ...)* %1591, null
  br i1 %1592, label %1594, label %1593

1593:                                             ; preds = %1590
  call void (i8*, ...) %1591(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #13
  br label %1594

1594:                                             ; preds = %1590, %1593
  store i8 0, i8* %956, align 2
  store i8 0, i8* %938, align 8
  br label %1595

1595:                                             ; preds = %1588, %1594
  %1596 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  %1597 = load i64, i64* %1166, align 8
  %1598 = icmp eq i64 %1597, 0
  %1599 = zext i1 %1598 to i32
  %1600 = load i32, i32* %10, align 4
  br label %1608

1601:                                             ; preds = %1397, %1394
  %1602 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %936) #13
  br label %1712

1603:                                             ; preds = %933
  %1604 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %1605 = call fastcc i32 @sctp_msg_append(%struct.sctp_tcb* %550, %struct.sctp_nets* %1604, %struct.mbuf* nonnull %57, %struct.sctp_sndrcvinfo* %560, i32 0)
  store i32 %1605, i32* %10, align 4
  %1606 = lshr i32 %562, 8
  %1607 = and i32 %1606, 1
  br label %1608

1608:                                             ; preds = %1595, %1603
  %1609 = phi i32 [ %1600, %1595 ], [ %1605, %1603 ]
  %1610 = phi i32 [ %1565, %1595 ], [ %690, %1603 ]
  %1611 = phi i32 [ %1566, %1595 ], [ %549, %1603 ]
  %1612 = phi i32 [ %1599, %1595 ], [ %1607, %1603 ]
  %1613 = phi i32 [ %1567, %1595 ], [ 0, %1603 ]
  %1614 = icmp eq i32 %1609, 0
  br i1 %1614, label %1615, label %1892

1615:                                             ; preds = %1608
  %1616 = and i32 %562, 256
  br label %1617

1617:                                             ; preds = %1615, %929
  %1618 = phi i32 [ %1616, %1615 ], [ %930, %929 ]
  %1619 = phi %struct.mbuf* [ null, %1615 ], [ %57, %929 ]
  %1620 = phi i32 [ %1610, %1615 ], [ %690, %929 ]
  %1621 = phi i32 [ %1611, %1615 ], [ %549, %929 ]
  %1622 = phi i32 [ %1612, %1615 ], [ 1, %929 ]
  %1623 = phi i32 [ %1613, %1615 ], [ 0, %929 ]
  %1624 = icmp ne i32 %1618, 0
  %1625 = icmp eq i32 %1622, 1
  %1626 = and i1 %1624, %1625
  br i1 %1626, label %1627, label %1712

1627:                                             ; preds = %1617
  %1628 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 112), i32 1 seq_cst
  store i32 0, i32* %10, align 4
  %1629 = icmp eq i32 %1623, 0
  br i1 %1629, label %1630, label %1633

1630:                                             ; preds = %1627
  %1631 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1632 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1631) #13
  br label %1633

1633:                                             ; preds = %1630, %1627
  %1634 = phi i32 [ 1, %1630 ], [ %1623, %1627 ]
  %1635 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 21, i32 0
  %1636 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1635, align 8
  %1637 = icmp eq %struct.sctp_tmit_chunk* %1636, null
  br i1 %1637, label %1638, label %1671

1638:                                             ; preds = %1633
  %1639 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 20, i32 0
  %1640 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1639, align 8
  %1641 = icmp eq %struct.sctp_tmit_chunk* %1640, null
  br i1 %1641, label %1642, label %1671

1642:                                             ; preds = %1638
  %1643 = call i32 @sctp_is_there_unsent_data(%struct.sctp_tcb* %550, i32 1) #13
  %1644 = icmp eq i32 %1643, 0
  br i1 %1644, label %1645, label %1671

1645:                                             ; preds = %1642
  %1646 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 39, i32 11
  %1647 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %1646, align 8
  %1648 = call i32 %1647(%struct.sctp_tcb* %550, %struct.sctp_association* %551) #13
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1650, label %1694

1650:                                             ; preds = %1645
  %1651 = load i32, i32* %656, align 8
  %1652 = and i32 %1651, 127
  %1653 = add nsw i32 %1652, -8
  %1654 = lshr i32 %1653, 3
  %1655 = shl i32 %1653, 29
  %1656 = or i32 %1654, %1655
  switch i32 %1656, label %1659 [
    i32 1, label %1712
    i32 3, label %1712
    i32 7, label %1712
    i32 0, label %1657
  ]

1657:                                             ; preds = %1650
  %1658 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 1), i32 1 seq_cst
  br label %1659

1659:                                             ; preds = %1650, %1657
  call void @sctp_set_state(%struct.sctp_tcb* %550, i32 16) #13
  call void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb* %550) #13
  %1660 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 31
  %1661 = load %struct.sctp_nets*, %struct.sctp_nets** %1660, align 8
  %1662 = icmp eq %struct.sctp_nets* %1661, null
  br i1 %1662, label %1663, label %1666

1663:                                             ; preds = %1659
  %1664 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 30
  %1665 = load %struct.sctp_nets*, %struct.sctp_nets** %1664, align 8
  br label %1666

1666:                                             ; preds = %1659, %1663
  %1667 = phi %struct.sctp_nets* [ %1665, %1663 ], [ %1661, %1659 ]
  call void @sctp_send_shutdown(%struct.sctp_tcb* %550, %struct.sctp_nets* %1667)
  %1668 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1669 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1668, align 8
  call void @sctp_timer_start(i32 4, %struct.sctp_inpcb* %1669, %struct.sctp_tcb* %550, %struct.sctp_nets* %1667) #13
  %1670 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1668, align 8
  call void @sctp_timer_start(i32 11, %struct.sctp_inpcb* %1670, %struct.sctp_tcb* %550, %struct.sctp_nets* null) #13
  br label %1712

1671:                                             ; preds = %1642, %1638, %1633
  %1672 = load i32, i32* %656, align 8
  %1673 = and i32 %1672, 127
  switch i32 %1673, label %1674 [
    i32 16, label %1712
    i32 32, label %1712
    i32 64, label %1712
  ]

1674:                                             ; preds = %1671
  %1675 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 39, i32 11
  %1676 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %1675, align 8
  %1677 = call i32 %1676(%struct.sctp_tcb* %550, %struct.sctp_association* %551) #13
  %1678 = icmp eq i32 %1677, 0
  br i1 %1678, label %1680, label %1679

1679:                                             ; preds = %1674
  call void @sctp_add_substate(%struct.sctp_tcb* %550, i32 1024) #13
  br label %1680

1680:                                             ; preds = %1674, %1679
  call void @sctp_add_substate(%struct.sctp_tcb* %550, i32 128) #13
  %1681 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1635, align 8
  %1682 = icmp eq %struct.sctp_tmit_chunk* %1681, null
  br i1 %1682, label %1683, label %1707

1683:                                             ; preds = %1680
  %1684 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 20, i32 0
  %1685 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1684, align 8
  %1686 = icmp eq %struct.sctp_tmit_chunk* %1685, null
  br i1 %1686, label %1687, label %1707

1687:                                             ; preds = %1683
  %1688 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 0
  %1689 = load i32, i32* %1688, align 8
  %1690 = and i32 %1689, 1024
  %1691 = icmp eq i32 %1690, 0
  br i1 %1691, label %1707, label %1692

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1693, i8 -86, i64 256, i1 false)
  br label %1694

1694:                                             ; preds = %1692, %1645
  %1695 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 120
  %1696 = atomicrmw add i32* %1695, i32 -1 seq_cst
  %1697 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 0
  %1698 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1697, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 14659, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.sctp_lower_sosend, i64 0, i64 0)) #13
  %1699 = icmp slt i32 %1698, 0
  br i1 %1699, label %1700, label %1701

1700:                                             ; preds = %1694
  store i8 0, i8* %1697, align 16
  br label %1701

1701:                                             ; preds = %1700, %1694
  %1702 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %1703 = trunc i32 %1702 to i16
  %1704 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext %1703, i8* nonnull %1697) #13
  %1705 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1706 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1705, align 8
  call void @sctp_abort_an_association(%struct.sctp_inpcb* %1706, %struct.sctp_tcb* %550, %struct.mbuf* %1704, i32 1) #13
  br label %1884

1707:                                             ; preds = %1687, %1683, %1680
  %1708 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1709 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1708, align 8
  call void @sctp_timer_start(i32 11, %struct.sctp_inpcb* %1709, %struct.sctp_tcb* %550, %struct.sctp_nets* null) #13
  %1710 = load i64, i64* %39, align 8
  %1711 = and i64 %1710, -257
  store i64 %1711, i64* %39, align 8
  br label %1712

1712:                                             ; preds = %1601, %1671, %1671, %1671, %1650, %1650, %1650, %1617, %1707, %1666
  %1713 = phi %struct.mbuf* [ %1619, %1666 ], [ %1619, %1650 ], [ %1619, %1707 ], [ %1619, %1671 ], [ %1619, %1617 ], [ null, %1601 ], [ %1619, %1650 ], [ %1619, %1650 ], [ %1619, %1671 ], [ %1619, %1671 ]
  %1714 = phi i32 [ %1620, %1666 ], [ %1620, %1650 ], [ %1620, %1707 ], [ %1620, %1671 ], [ %1620, %1617 ], [ %1208, %1601 ], [ %1620, %1650 ], [ %1620, %1650 ], [ %1620, %1671 ], [ %1620, %1671 ]
  %1715 = phi i32 [ %1621, %1666 ], [ %1621, %1650 ], [ %1621, %1707 ], [ %1621, %1671 ], [ %1621, %1617 ], [ %1207, %1601 ], [ %1621, %1650 ], [ %1621, %1650 ], [ %1621, %1671 ], [ %1621, %1671 ]
  %1716 = phi i32 [ %1634, %1666 ], [ %1634, %1650 ], [ %1634, %1707 ], [ %1634, %1671 ], [ %1623, %1617 ], [ %1393, %1601 ], [ %1634, %1650 ], [ %1634, %1650 ], [ %1634, %1671 ], [ %1634, %1671 ]
  %1717 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 18, i32 0
  %1718 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1717, align 8
  %1719 = icmp eq %struct.sctp_tmit_chunk* %1718, null
  %1720 = icmp eq i32 %1715, 0
  br i1 %1720, label %1732, label %1721

1721:                                             ; preds = %1712
  %1722 = icmp eq i32 %1716, 0
  br i1 %1722, label %1723, label %1726

1723:                                             ; preds = %1721
  %1724 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1725 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1724) #13
  br label %1726

1726:                                             ; preds = %1723, %1721
  %1727 = phi i32 [ 1, %1723 ], [ %1716, %1721 ]
  %1728 = load i32, i32* %656, align 8
  %1729 = and i32 %1728, 127
  %1730 = icmp eq i32 %1729, 8
  br i1 %1730, label %1732, label %1731

1731:                                             ; preds = %1726
  call void @sctp_send_initiate(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 undef)
  call void @sctp_set_state(%struct.sctp_tcb* %550, i32 2) #13
  br label %1732

1732:                                             ; preds = %1726, %1712, %1731
  %1733 = phi i32 [ 1, %1731 ], [ %1714, %1712 ], [ 0, %1726 ]
  %1734 = phi i32 [ %1727, %1731 ], [ %1716, %1712 ], [ %1727, %1726 ]
  %1735 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %1736 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1735, i64 0, i32 18
  %1737 = load i32, i32* %1736, align 4
  %1738 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1735, i64 0, i32 19
  %1739 = load i32, i32* %1738, align 8
  %1740 = icmp ugt i32 %1737, %1739
  br i1 %1740, label %1741, label %1747

1741:                                             ; preds = %1732
  %1742 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 189
  %1743 = load i8, i8* %1742, align 1
  %1744 = icmp eq i8 %1743, 0
  br i1 %1744, label %1745, label %1747

1745:                                             ; preds = %1741
  %1746 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 121), i32 1 seq_cst
  br label %1761

1747:                                             ; preds = %1741, %1732
  %1748 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %551, i64 0, i32 181
  %1749 = load i8, i8* %1748, align 1
  %1750 = icmp eq i8 %1749, 0
  br i1 %1750, label %1761, label %1751

1751:                                             ; preds = %1747
  %1752 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 97), i32 1 seq_cst
  %1753 = load %struct.sctp_nets*, %struct.sctp_nets** %14, align 8
  %1754 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1753, i64 0, i32 18
  %1755 = load i32, i32* %1754, align 4
  %1756 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1753, i64 0, i32 4
  %1757 = load i32, i32* %1756, align 8
  %1758 = shl i32 %1757, 1
  %1759 = icmp ugt i32 %1755, %1758
  %1760 = select i1 %1759, i32 1, i32 %1733
  store i8 0, i8* %1748, align 1
  br label %1761

1761:                                             ; preds = %1747, %1751, %1745
  %1762 = phi i32 [ 1, %1745 ], [ %1760, %1751 ], [ %1733, %1747 ]
  %1763 = load i32, i32* %785, align 4
  %1764 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 92
  %1765 = load i32, i32* %1764, align 4
  %1766 = sub i32 %1763, %1765
  %1767 = load i64, i64* %39, align 8
  %1768 = and i64 %1767, 256
  %1769 = icmp ne i64 %1768, 0
  %1770 = icmp eq i32 %1765, 0
  %1771 = or i1 %1770, %1769
  br i1 %1771, label %1786, label %1772

1772:                                             ; preds = %1761
  %1773 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 84
  %1774 = load i32, i32* %1773, align 4
  %1775 = icmp ult i32 %1774, 256
  br i1 %1775, label %1776, label %1786

1776:                                             ; preds = %1772
  %1777 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 53
  %1778 = load i32, i32* %1777, align 4
  %1779 = add i32 %1778, -32
  %1780 = icmp slt i32 %1766, %1779
  br i1 %1780, label %1781, label %1786

1781:                                             ; preds = %1776
  %1782 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1783 = and i32 %1782, 2048
  %1784 = icmp eq i32 %1783, 0
  br i1 %1784, label %1793, label %1785

1785:                                             ; preds = %1781
  call void @sctp_log_nagle_event(%struct.sctp_tcb* %550, i32 72) #13
  br label %1793

1786:                                             ; preds = %1761, %1776, %1772
  %1787 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1788 = and i32 %1787, 2048
  %1789 = icmp ne i32 %1788, 0
  %1790 = icmp eq i64 %1768, 0
  %1791 = and i1 %1790, %1789
  br i1 %1791, label %1792, label %1793

1792:                                             ; preds = %1786
  call void @sctp_log_nagle_event(%struct.sctp_tcb* %550, i32 73) #13
  br label %1793

1793:                                             ; preds = %1792, %1786, %1785, %1781
  %1794 = phi i32* [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 95), %1781 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 95), %1785 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 94), %1786 ], [ getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 94), %1792 ]
  %1795 = phi i32 [ 1, %1781 ], [ 1, %1785 ], [ 0, %1786 ], [ 0, %1792 ]
  %1796 = atomicrmw add i32* %1794, i32 1 seq_cst
  %1797 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1798 = and i32 %1797, 1
  %1799 = icmp eq i32 %1798, 0
  br i1 %1799, label %1806, label %1800

1800:                                             ; preds = %1793
  call void @sctp_misc_ints(i8 zeroext 77, i32 %1715, i32 %1762, i32 %1795, i32 %1766) #13
  %1801 = load i32, i32* %785, align 4
  %1802 = load i32, i32* %1764, align 4
  %1803 = load i32, i32* %787, align 4
  %1804 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 93
  %1805 = load i32, i32* %1804, align 8
  call void @sctp_misc_ints(i8 zeroext 77, i32 %1801, i32 %1802, i32 %1803, i32 %1805) #13
  br label %1806

1806:                                             ; preds = %1793, %1800
  %1807 = icmp eq i32 %1762, 0
  %1808 = or i32 %1795, %1762
  %1809 = icmp eq i32 %1808, 0
  br i1 %1809, label %1810, label %1824

1810:                                             ; preds = %1806
  %1811 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 74
  %1812 = load i32, i32* %1811, align 4
  %1813 = icmp ne i32 %1812, 0
  %1814 = icmp ne i32 %1766, 0
  %1815 = and i1 %1814, %1813
  br i1 %1815, label %1816, label %1824

1816:                                             ; preds = %1810
  %1817 = icmp eq i32 %1734, 0
  br i1 %1817, label %1818, label %1823

1818:                                             ; preds = %1816
  %1819 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1820 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %1819) #13
  %1821 = icmp eq i32 %1820, 0
  br i1 %1821, label %1822, label %1892

1822:                                             ; preds = %1818
  call void @sctp_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 0, i32 1)
  br label %1892

1823:                                             ; preds = %1816
  call void @sctp_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 0, i32 1)
  br label %1892

1824:                                             ; preds = %1810, %1806
  br i1 %1807, label %1825, label %1839

1825:                                             ; preds = %1824
  %1826 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 74
  %1827 = load i32, i32* %1826, align 4
  %1828 = icmp eq i32 %1827, 0
  br i1 %1828, label %1829, label %1839

1829:                                             ; preds = %1825
  %1830 = load i32, i32* %1764, align 4
  %1831 = icmp eq i32 %1830, 0
  br i1 %1831, label %1832, label %1839

1832:                                             ; preds = %1829
  %1833 = icmp eq i32 %1734, 0
  br i1 %1833, label %1834, label %1837

1834:                                             ; preds = %1832
  %1835 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1836 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1835) #13
  br label %1837

1837:                                             ; preds = %1834, %1832
  %1838 = phi i32 [ 1, %1834 ], [ %1734, %1832 ]
  call void @sctp_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, i32 0, i32 1)
  br label %1892

1839:                                             ; preds = %1829, %1825, %1824
  br i1 %1719, label %1892, label %1840

1840:                                             ; preds = %1839
  %1841 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1841) #13
  store i32 -1431655766, i32* %17, align 4
  %1842 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1842) #13
  store i32 -1431655766, i32* %18, align 4
  %1843 = icmp eq i32 %1734, 0
  br i1 %1843, label %1844, label %1847

1844:                                             ; preds = %1840
  %1845 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 14
  %1846 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %1845) #13
  br label %1847

1847:                                             ; preds = %1844, %1840
  %1848 = phi i32 [ 1, %1844 ], [ %1734, %1840 ]
  %1849 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 1
  %1850 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1849, align 8
  %1851 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %1850, i64 0, i32 9
  %1852 = load i32, i32* %1851, align 8
  %1853 = and i32 %1852, -2080374784
  %1854 = icmp eq i32 %1853, -2147483648
  %1855 = load i8, i8* %789, align 2
  %1856 = icmp eq i8 %1855, 0
  %1857 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 77
  %1858 = load i32, i32* %1857, align 8
  %1859 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 53
  %1860 = load i32, i32* %1859, align 4
  %1861 = icmp ugt i32 %1858, %1860
  %1862 = select i1 %1861, i32 %1860, i32 %1858
  %1863 = select i1 %1854, i32 -12, i32 -32
  %1864 = select i1 %1856, i32 -16, i32 -20
  %1865 = add nsw i32 %1863, %1864
  %1866 = add i32 %1865, %1862
  %1867 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 115
  %1868 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %1867, align 8
  %1869 = icmp eq %struct.sctp_auth_chklist* %1868, null
  br i1 %1869, label %1879, label %1870

1870:                                             ; preds = %1847
  %1871 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1868, i64 0, i32 0, i64 0
  %1872 = load i8, i8* %1871, align 1
  %1873 = icmp eq i8 %1872, 0
  br i1 %1873, label %1879, label %1874

1874:                                             ; preds = %1870
  %1875 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 124
  %1876 = load i16, i16* %1875, align 8
  %1877 = call i32 @sctp_get_auth_chunk_len(i16 zeroext %1876) #13
  %1878 = sub i32 %1866, %1877
  br label %1879

1879:                                             ; preds = %1847, %1870, %1874
  %1880 = phi i32 [ %1866, %1847 ], [ %1878, %1874 ], [ %1866, %1870 ]
  %1881 = srem i32 %1880, 4
  %1882 = sub nsw i32 %1880, %1881
  %1883 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* nonnull %29, %struct.sctp_tcb* %550, %struct.sctp_association* %655, i32* nonnull %17, i32* nonnull %18, i32 1, i32 1, %struct.timeval* nonnull %13, i32* nonnull %11, i32 %1882, i32 1)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1842) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1841) #13
  br label %1892

1884:                                             ; preds = %62, %73, %84, %268, %277, %328, %336, %349, %356, %365, %576, %600, %646, %932, %1701, %774, %374, %541, %375
  %1885 = phi %struct.mbuf* [ null, %774 ], [ null, %932 ], [ null, %1701 ], [ %4, %646 ], [ %4, %600 ], [ %4, %576 ], [ %4, %365 ], [ %4, %356 ], [ %4, %349 ], [ %4, %336 ], [ %4, %328 ], [ %4, %277 ], [ %4, %268 ], [ %4, %84 ], [ %4, %73 ], [ %4, %62 ], [ %4, %374 ], [ %4, %541 ], [ %4, %375 ]
  %1886 = phi %struct.mbuf* [ %783, %774 ], [ %57, %932 ], [ %1619, %1701 ], [ %57, %646 ], [ %57, %600 ], [ %57, %576 ], [ %57, %365 ], [ %57, %356 ], [ %57, %349 ], [ %57, %336 ], [ %57, %328 ], [ %57, %277 ], [ null, %268 ], [ %57, %84 ], [ %57, %73 ], [ %57, %62 ], [ %57, %374 ], [ %57, %541 ], [ %57, %375 ]
  %1887 = phi i32 [ 0, %774 ], [ 1, %932 ], [ 0, %1701 ], [ 1, %646 ], [ 1, %600 ], [ 0, %576 ], [ 0, %365 ], [ 0, %356 ], [ 0, %349 ], [ 0, %336 ], [ 0, %328 ], [ 0, %277 ], [ 0, %268 ], [ 0, %84 ], [ 0, %73 ], [ 0, %62 ], [ 0, %374 ], [ 0, %541 ], [ 0, %375 ]
  %1888 = phi %struct.sctp_tcb* [ null, %774 ], [ %550, %932 ], [ null, %1701 ], [ %550, %646 ], [ %550, %600 ], [ %550, %576 ], [ null, %365 ], [ %343, %356 ], [ %343, %349 ], [ null, %336 ], [ null, %328 ], [ null, %277 ], [ null, %268 ], [ null, %84 ], [ null, %73 ], [ null, %62 ], [ null, %374 ], [ null, %541 ], [ null, %375 ]
  %1889 = phi i32 [ 0, %774 ], [ 0, %932 ], [ 0, %1701 ], [ %552, %646 ], [ %552, %600 ], [ %552, %576 ], [ %364, %365 ], [ 1, %356 ], [ 1, %349 ], [ 1, %336 ], [ 1, %328 ], [ 0, %277 ], [ 0, %268 ], [ 0, %84 ], [ 0, %73 ], [ 0, %62 ], [ %364, %374 ], [ 0, %541 ], [ %364, %375 ]
  %1890 = phi i32 [ 0, %774 ], [ 0, %932 ], [ 0, %1701 ], [ 1, %646 ], [ %553, %600 ], [ %553, %576 ], [ %363, %365 ], [ %350, %356 ], [ %350, %349 ], [ %319, %336 ], [ %319, %328 ], [ 0, %277 ], [ 0, %268 ], [ 0, %84 ], [ 0, %73 ], [ 0, %62 ], [ %363, %374 ], [ 0, %541 ], [ %363, %375 ]
  %1891 = icmp ne %struct.sctp_tcb* %1888, null
  br label %1904

1892:                                             ; preds = %1551, %1254, %1266, %1542, %1015, %970, %1089, %1160, %1572, %948, %713, %737, %745, %1818, %1839, %1608, %922, %1837, %1879, %1823, %1822, %683, %684, %908, %895, %823, %820, %810, %705, %672, %660
  %1893 = phi %struct.mbuf* [ %4, %660 ], [ %4, %672 ], [ %4, %683 ], [ %4, %684 ], [ null, %810 ], [ null, %820 ], [ null, %823 ], [ null, %922 ], [ null, %1818 ], [ null, %1822 ], [ null, %1823 ], [ null, %1837 ], [ null, %1879 ], [ null, %1839 ], [ null, %1608 ], [ null, %895 ], [ null, %908 ], [ null, %705 ], [ null, %745 ], [ null, %737 ], [ null, %713 ], [ null, %948 ], [ null, %1572 ], [ null, %1160 ], [ null, %1089 ], [ null, %970 ], [ null, %1015 ], [ null, %1542 ], [ null, %1266 ], [ null, %1254 ], [ null, %1551 ]
  %1894 = phi %struct.mbuf* [ %57, %660 ], [ %57, %672 ], [ %57, %683 ], [ %57, %684 ], [ %57, %810 ], [ %57, %820 ], [ %57, %823 ], [ %57, %922 ], [ %1713, %1818 ], [ %1713, %1822 ], [ %1713, %1823 ], [ %1713, %1837 ], [ %1713, %1879 ], [ %1713, %1839 ], [ null, %1608 ], [ %57, %895 ], [ %57, %908 ], [ %57, %705 ], [ %57, %745 ], [ null, %737 ], [ %57, %713 ], [ null, %948 ], [ null, %1572 ], [ null, %1160 ], [ null, %1089 ], [ null, %970 ], [ null, %1015 ], [ null, %1542 ], [ null, %1266 ], [ null, %1254 ], [ null, %1551 ]
  %1895 = phi i32 [ %552, %660 ], [ 0, %672 ], [ 0, %683 ], [ 0, %684 ], [ 0, %810 ], [ 0, %820 ], [ 0, %823 ], [ 0, %922 ], [ 0, %1818 ], [ 0, %1822 ], [ 0, %1823 ], [ 0, %1837 ], [ 0, %1879 ], [ 0, %1839 ], [ 0, %1608 ], [ 0, %895 ], [ 0, %908 ], [ 0, %705 ], [ 0, %745 ], [ 0, %737 ], [ 0, %713 ], [ 0, %948 ], [ 0, %1572 ], [ 0, %1160 ], [ 0, %1089 ], [ 0, %970 ], [ 0, %1015 ], [ 0, %1542 ], [ 0, %1266 ], [ 0, %1254 ], [ 0, %1551 ]
  %1896 = phi i32 [ %654, %660 ], [ %654, %672 ], [ %654, %683 ], [ %654, %684 ], [ 0, %810 ], [ 0, %820 ], [ 0, %823 ], [ 0, %922 ], [ 0, %1818 ], [ 1, %1822 ], [ %1734, %1823 ], [ %1838, %1837 ], [ %1848, %1879 ], [ %1734, %1839 ], [ %1613, %1608 ], [ 0, %895 ], [ 0, %908 ], [ %654, %705 ], [ 0, %745 ], [ 0, %737 ], [ %654, %713 ], [ 0, %948 ], [ %1567, %1572 ], [ 0, %1160 ], [ 0, %1089 ], [ 0, %970 ], [ 0, %1015 ], [ %1494, %1542 ], [ 0, %1266 ], [ 0, %1254 ], [ %1494, %1551 ]
  %1897 = icmp ne i64 %56, 0
  %1898 = icmp ne %struct.sctp_tcb* %550, null
  %1899 = and i1 %1897, %1898
  br i1 %1899, label %1900, label %1904

1900:                                             ; preds = %1892
  %1901 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %550, i64 0, i32 7, i32 80
  %1902 = trunc i64 %56 to i32
  %1903 = atomicrmw sub i32* %1901, i32 %1902 seq_cst
  br label %1904

1904:                                             ; preds = %1884, %1900, %1892
  %1905 = phi i1 [ %1891, %1884 ], [ true, %1900 ], [ %1898, %1892 ]
  %1906 = phi i32 [ %1890, %1884 ], [ %1896, %1900 ], [ %1896, %1892 ]
  %1907 = phi i32 [ %1889, %1884 ], [ %1895, %1900 ], [ %1895, %1892 ]
  %1908 = phi %struct.sctp_tcb* [ %1888, %1884 ], [ %550, %1900 ], [ %550, %1892 ]
  %1909 = phi i32 [ %1887, %1884 ], [ 1, %1900 ], [ 1, %1892 ]
  %1910 = phi %struct.mbuf* [ %1886, %1884 ], [ %1894, %1900 ], [ %1894, %1892 ]
  %1911 = phi %struct.mbuf* [ %1885, %1884 ], [ %1893, %1900 ], [ %1893, %1892 ]
  %1912 = icmp eq i32 %1907, 0
  br i1 %1912, label %1916, label %1913

1913:                                             ; preds = %1904
  %1914 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %29, i64 0, i32 35
  %1915 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1914) #13
  br label %1916

1916:                                             ; preds = %1904, %1913
  %1917 = icmp ne i32 %1906, 0
  %1918 = and i1 %1905, %1917
  br i1 %1918, label %1919, label %1922

1919:                                             ; preds = %1916
  %1920 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1908, i64 0, i32 14
  %1921 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %1920) #13
  br label %1922

1922:                                             ; preds = %1919, %1916
  %1923 = icmp ne i32 %1909, 0
  %1924 = and i1 %1905, %1923
  br i1 %1924, label %1925, label %1928

1925:                                             ; preds = %1922
  %1926 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1908, i64 0, i32 7, i32 120
  %1927 = atomicrmw add i32* %1926, i32 -1 seq_cst
  br label %1928

1928:                                             ; preds = %1925, %1922
  %1929 = icmp eq %struct.mbuf* %1910, null
  br i1 %1929, label %1931, label %1930

1930:                                             ; preds = %1928
  call void @m_freem(%struct.mbuf* nonnull %1910) #13
  br label %1931

1931:                                             ; preds = %1928, %1930
  %1932 = icmp eq %struct.mbuf* %1911, null
  br i1 %1932, label %1934, label %1933

1933:                                             ; preds = %1931
  call void @m_freem(%struct.mbuf* nonnull %1911) #13
  br label %1934

1934:                                             ; preds = %1931, %1933
  %1935 = load i32, i32* %10, align 4
  br label %1936

1936:                                             ; preds = %33, %31, %47, %34, %1934
  %1937 = phi i32 [ %1935, %1934 ], [ 22, %34 ], [ 22, %47 ], [ 22, %31 ], [ 22, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  ret i32 %1937
}

declare %struct.sctp_tcb* @sctp_findassociation_ep_asocid(%struct.sctp_inpcb*, i32, i32) local_unnamed_addr #5

declare %struct.sctp_tcb* @sctp_findassociation_ep_addr(%struct.sctp_inpcb**, %struct.sockaddr*, %struct.sctp_nets**, %struct.sockaddr*, %struct.sctp_tcb*) local_unnamed_addr #5

declare %struct.sctp_tcb* @sctp_aloc_assoc(%struct.sctp_inpcb*, %struct.sockaddr*, i32*, i32, i32, i16 zeroext, i16 zeroext, %struct.proc*, i32) local_unnamed_addr #5

declare void @soisconnecting(%struct.socket*) local_unnamed_addr #5

declare void @sctp_set_state(%struct.sctp_tcb*, i32) local_unnamed_addr #5

declare i32 @sctp_free_assoc(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32) local_unnamed_addr #5

declare %struct.sctp_nets* @sctp_findnet(%struct.sctp_tcb*, %struct.sockaddr*) local_unnamed_addr #5

declare i32 @uiomove(i8*, i32, %struct.uio*) local_unnamed_addr #5

declare void @sctp_abort_an_association(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.mbuf*, i32) local_unnamed_addr #5

declare void @sctp_log_block(i8 zeroext, %struct.sctp_association*, i64) local_unnamed_addr #5

declare i32 @sbwait(%struct.sockbuf*) local_unnamed_addr #5

declare void @sctp_log_nagle_event(%struct.sctp_tcb*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sctp_msg_append(%struct.sctp_tcb*, %struct.sctp_nets*, %struct.mbuf*, %struct.sctp_sndrcvinfo* nocapture readonly, i32) unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 0
  %7 = load i16, i16* %6, align 4
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %10 = load i16, i16* %9, align 2
  %11 = icmp ult i16 %7, %10
  br i1 %11, label %12, label %153

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 144
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 141
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, %7
  br i1 %19, label %20, label %153

20:                                               ; preds = %16, %12
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %22 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %21, align 8
  %23 = zext i16 %7 to i64
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %22, i64 %23
  %25 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %8, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 127
  switch i32 %27, label %28 [
    i32 16, label %153
    i32 64, label %153
    i32 32, label %153
  ]

28:                                               ; preds = %20
  %29 = trunc i32 %26 to i8
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %153, label %31

31:                                               ; preds = %28
  %32 = load i64, i64* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 19), align 8
  %33 = tail call noalias i8* @malloc(i64 %32) #13
  %34 = bitcast i8* %33 to %struct.sctp_stream_queue_pending*
  %35 = icmp eq i8* %33, null
  br i1 %35, label %153, label %36

36:                                               ; preds = %31
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 112, i1 false)
  %37 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 33), i32 1 seq_cst
  %38 = getelementptr inbounds i8, i8* %33, i64 100
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 2
  %40 = load i16, i16* %39, align 4
  %41 = getelementptr inbounds i8, i8* %33, i64 92
  %42 = bitcast i8* %41 to i16*
  store i16 %40, i16* %42, align 4
  %43 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i8, i8* %33, i64 80
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 8
  %47 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i8, i8* %33, i64 84
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4
  %51 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds i8, i8* %33, i64 88
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %33, i64 72
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  %57 = and i16 %40, 2048
  %58 = icmp eq i16 %57, 0
  %59 = getelementptr inbounds i8, i8* %33, i64 32
  %60 = bitcast i8* %59 to %struct.sctp_nets**
  br i1 %58, label %64, label %61

61:                                               ; preds = %36
  store %struct.sctp_nets* %1, %struct.sctp_nets** %60, align 8
  %62 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 17
  %63 = atomicrmw add i32* %62, i32 1 seq_cst
  br label %65

64:                                               ; preds = %36
  store %struct.sctp_nets* null, %struct.sctp_nets** %60, align 8
  br label %65

65:                                               ; preds = %64, %61
  %66 = getelementptr inbounds i8, i8* %33, i64 16
  %67 = bitcast i8* %66 to %struct.timeval*
  %68 = tail call i32 @gettimeofday(%struct.timeval* %67, i8* null) #13
  %69 = load i16, i16* %6, align 4
  %70 = getelementptr inbounds i8, i8* %33, i64 94
  %71 = bitcast i8* %70 to i16*
  store i16 %69, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %33, i64 101
  store i8 1, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %33, i64 103
  store i8 1, i8* %73, align 1
  %74 = getelementptr inbounds i8, i8* %33, i64 102
  store i8 0, i8* %74, align 2
  %75 = bitcast i8* %33 to %struct.mbuf**
  store %struct.mbuf* %2, %struct.mbuf** %75, align 8
  %76 = getelementptr inbounds i8, i8* %33, i64 8
  %77 = bitcast i8* %76 to %struct.mbuf**
  store %struct.mbuf* null, %struct.mbuf** %77, align 8
  tail call fastcc void @sctp_set_prsctp_policy(%struct.sctp_stream_queue_pending* nonnull %34)
  %78 = getelementptr inbounds i8, i8* %33, i64 76
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4
  %80 = icmp eq %struct.mbuf* %2, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %65, %88
  %82 = phi i32 [ %91, %88 ], [ 0, %65 ]
  %83 = phi %struct.mbuf* [ %92, %88 ], [ %2, %65 ]
  %84 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %83, i64 0, i32 0, i32 0
  %85 = load %struct.mbuf*, %struct.mbuf** %84, align 8
  %86 = icmp eq %struct.mbuf* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %81
  store %struct.mbuf* %83, %struct.mbuf** %77, align 8
  br label %88

88:                                               ; preds = %87, %81
  %89 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %83, i64 0, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %82, %90
  store i32 %91, i32* %79, align 4
  %92 = load %struct.mbuf*, %struct.mbuf** %84, align 8
  %93 = icmp eq %struct.mbuf* %92, null
  br i1 %93, label %94, label %81

94:                                               ; preds = %88, %65
  %95 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 10
  %96 = load i16, i16* %95, align 2
  %97 = icmp eq i16 %96, 0
  %98 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  %99 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %3, i64 0, i32 9
  %100 = select i1 %97, i16* %98, i16* %99
  %101 = load i16, i16* %100, align 4
  %102 = getelementptr inbounds i8, i8* %33, i64 98
  %103 = bitcast i8* %102 to i16*
  store i16 %101, i16* %103, align 2
  %104 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 115
  %105 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %104, align 8
  %106 = icmp eq %struct.sctp_auth_chklist* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %94
  %108 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %105, i64 0, i32 0, i64 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  tail call void @sctp_auth_key_acquire(%struct.sctp_tcb* %0, i16 zeroext %101) #13
  store i8 1, i8* %38, align 4
  br label %112

112:                                              ; preds = %107, %94, %111
  %113 = icmp eq i32 %4, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %116 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %115) #13
  br label %117

117:                                              ; preds = %112, %114
  %118 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 78
  %119 = load i32, i32* %79, align 4
  %120 = atomicrmw add i32* %118, i32 %119 seq_cst
  %121 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %122 = load %struct.socket*, %struct.socket** %121, align 8
  %123 = icmp eq %struct.socket* %122, null
  br i1 %123, label %135, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %126 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %125, align 8
  %127 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %126, i64 0, i32 9
  %128 = load i32, i32* %127, align 8
  %129 = and i32 %128, 4194306
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.socket, %struct.socket* %122, i64 0, i32 22, i32 8
  %133 = load i32, i32* %79, align 4
  %134 = atomicrmw add i32* %132, i32 %133 seq_cst
  br label %135

135:                                              ; preds = %124, %117, %131
  %136 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 84
  %137 = atomicrmw add i32* %136, i32 1 seq_cst
  %138 = getelementptr inbounds i8, i8* %33, i64 40
  %139 = bitcast i8* %138 to %struct.sctp_stream_queue_pending**
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %139, align 8
  %140 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %22, i64 %23, i32 0, i32 1
  %141 = bitcast %struct.sctp_stream_queue_pending*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds i8, i8* %33, i64 48
  %144 = bitcast i8* %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast %struct.sctp_stream_queue_pending*** %140 to i8***
  %146 = load i8**, i8*** %145, align 8
  store i8* %33, i8** %146, align 8
  %147 = bitcast %struct.sctp_stream_queue_pending*** %140 to i8**
  store i8* %138, i8** %147, align 8
  %148 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 3
  %149 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %148, align 8
  tail call void %149(%struct.sctp_tcb* %0, %struct.sctp_association* %8, %struct.sctp_stream_out* %24, %struct.sctp_stream_queue_pending* nonnull %34, i32 1) #13
  br i1 %113, label %150, label %157

150:                                              ; preds = %135
  %151 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %152 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %151) #13
  br label %157

153:                                              ; preds = %31, %28, %20, %20, %20, %16, %5
  %154 = phi i32 [ 22, %5 ], [ 22, %16 ], [ 104, %20 ], [ 104, %20 ], [ 104, %20 ], [ 104, %28 ], [ 12, %31 ]
  %155 = icmp eq %struct.mbuf* %2, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  tail call void @m_freem(%struct.mbuf* nonnull %2) #13
  br label %157

157:                                              ; preds = %135, %150, %153, %156
  %158 = phi i32 [ %154, %153 ], [ %154, %156 ], [ 0, %150 ], [ 0, %135 ]
  ret i32 %158
}

declare void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb*) local_unnamed_addr #5

declare void @sctp_add_substate(%struct.sctp_tcb*, i32) local_unnamed_addr #5

declare i32 @sctp_get_hmac_digest_len(i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.mbuf* @sctp_copy_mbufchain(%struct.mbuf*, %struct.mbuf*, %struct.mbuf**, i32, i32, i8 zeroext) unnamed_addr #2 {
  %7 = icmp eq %struct.mbuf** %2, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %150, %6
  %9 = phi %struct.mbuf* [ %1, %6 ], [ %127, %150 ]
  %10 = icmp eq %struct.mbuf* %9, null
  br i1 %10, label %197, label %11

11:                                               ; preds = %8
  tail call void @m_freem(%struct.mbuf* nonnull %9) #13
  br label %197

12:                                               ; preds = %6
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %14, label %165

14:                                               ; preds = %12
  %15 = icmp eq i8 %5, 0
  br i1 %15, label %16, label %163

16:                                               ; preds = %14
  %17 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 45), align 4
  %18 = mul i32 %17, 216
  %19 = add i32 %18, -40
  %20 = icmp slt i32 %19, %4
  br i1 %20, label %163, label %21

21:                                               ; preds = %16
  %22 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %23 = icmp eq %struct.mbuf* %22, null
  br i1 %23, label %24, label %84

24:                                               ; preds = %21
  %25 = icmp eq %struct.mbuf* %1, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %28 = icmp eq %struct.mbuf* %27, null
  br i1 %28, label %197, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %27, i64 0, i32 0, i32 3
  store i32 0, i32* %30, align 8
  store %struct.mbuf* %27, %struct.mbuf** %2, align 8
  %31 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %27, i64 0, i32 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 72
  store i8* %33, i8** %31, align 8
  %34 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  br label %41

35:                                               ; preds = %24, %35
  %36 = phi %struct.mbuf* [ %38, %35 ], [ %1, %24 ]
  %37 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %36, i64 0, i32 0, i32 0
  %38 = load %struct.mbuf*, %struct.mbuf** %37, align 8
  %39 = icmp eq %struct.mbuf* %38, null
  br i1 %39, label %40, label %35

40:                                               ; preds = %35
  store %struct.mbuf* %36, %struct.mbuf** %2, align 8
  br label %41

41:                                               ; preds = %40, %29
  %42 = phi %struct.mbuf* [ %34, %29 ], [ %36, %40 ]
  %43 = phi %struct.mbuf* [ %27, %29 ], [ %1, %40 ]
  %44 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %41
  %49 = and i32 %45, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %125

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %53 = load i32*, i32** %52, align 8
  %54 = load volatile i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %125

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = ptrtoint i8* %62 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = sub i64 %69, %70
  br label %125

72:                                               ; preds = %41
  %73 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 1
  %74 = getelementptr inbounds %union.anon.4, %union.anon.4* %73, i64 1
  %75 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %42, i64 0, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = ptrtoint %union.anon.4* %74 to i64
  %82 = ptrtoint i8* %80 to i64
  %83 = sub i64 %81, %82
  br label %125

84:                                               ; preds = %21
  %85 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %113, label %89

89:                                               ; preds = %84
  %90 = and i32 %86, 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %125

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %94 = load i32*, i32** %93, align 8
  %95 = load volatile i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %125

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 1, i32 0, i32 1, i32 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  %104 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  %110 = ptrtoint i8* %103 to i64
  %111 = ptrtoint i8* %109 to i64
  %112 = sub i64 %110, %111
  br label %125

113:                                              ; preds = %84
  %114 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 1
  %115 = getelementptr inbounds %union.anon.4, %union.anon.4* %114, i64 1
  %116 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 2
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %22, i64 0, i32 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %117, i64 %120
  %122 = ptrtoint %union.anon.4* %115 to i64
  %123 = ptrtoint i8* %121 to i64
  %124 = sub i64 %122, %123
  br label %125

125:                                              ; preds = %113, %92, %97, %89, %72, %51, %56, %48
  %126 = phi %struct.mbuf* [ %42, %48 ], [ %42, %56 ], [ %42, %51 ], [ %42, %72 ], [ %22, %89 ], [ %22, %97 ], [ %22, %92 ], [ %22, %113 ]
  %127 = phi %struct.mbuf* [ %43, %48 ], [ %43, %56 ], [ %43, %51 ], [ %43, %72 ], [ %1, %89 ], [ %1, %97 ], [ %1, %92 ], [ %1, %113 ]
  %128 = phi i64 [ 0, %48 ], [ %71, %56 ], [ 0, %51 ], [ %83, %72 ], [ 0, %89 ], [ %112, %97 ], [ 0, %92 ], [ %124, %113 ]
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %126, i64 0, i32 0, i32 2
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %126, i64 0, i32 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %131, i64 %134
  %136 = icmp slt i32 %129, %4
  br i1 %136, label %142, label %137

137:                                              ; preds = %125
  tail call void @m_copydata(%struct.mbuf* %0, i32 0, i32 %4, i8* %135) #13
  %138 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %139 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %138, i64 0, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add nsw i32 %140, %4
  store i32 %141, i32* %139, align 8
  br label %197

142:                                              ; preds = %125
  %143 = icmp sgt i32 %129, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %142
  tail call void @m_copydata(%struct.mbuf* %0, i32 0, i32 %129, i8* %135) #13
  %145 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %146 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %145, i64 0, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = add nsw i32 %147, %129
  store i32 %148, i32* %146, align 8
  %149 = sub nsw i32 %4, %129
  br label %150

150:                                              ; preds = %144, %142
  %151 = phi i32 [ %149, %144 ], [ %4, %142 ]
  %152 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 2048, i32 0, i32 1, i32 1, i32 1) #13
  %153 = icmp eq %struct.mbuf* %152, null
  br i1 %153, label %8, label %154

154:                                              ; preds = %150
  %155 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %156 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %155, i64 0, i32 0, i32 0
  store %struct.mbuf* %152, %struct.mbuf** %156, align 8
  store %struct.mbuf* %152, %struct.mbuf** %2, align 8
  %157 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %152, i64 0, i32 0, i32 2
  %158 = load i8*, i8** %157, align 8
  tail call void @m_copydata(%struct.mbuf* %0, i32 %129, i32 %151, i8* %158) #13
  %159 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %160 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %159, i64 0, i32 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = add nsw i32 %161, %151
  store i32 %162, i32* %160, align 8
  br label %197

163:                                              ; preds = %16, %14
  %164 = tail call %struct.mbuf* @m_copym(%struct.mbuf* %0, i32 0, i32 1000000000, i32 1) #13
  br label %165

165:                                              ; preds = %12, %163
  %166 = phi %struct.mbuf* [ %164, %163 ], [ %0, %12 ]
  %167 = icmp eq %struct.mbuf* %166, null
  %168 = icmp ne %struct.mbuf* %1, null
  br i1 %167, label %169, label %171

169:                                              ; preds = %165
  br i1 %168, label %170, label %197

170:                                              ; preds = %169
  tail call void @m_freem(%struct.mbuf* nonnull %1) #13
  br label %197

171:                                              ; preds = %165
  br i1 %168, label %172, label %191

172:                                              ; preds = %171
  %173 = load %struct.mbuf*, %struct.mbuf** %2, align 8
  %174 = icmp eq %struct.mbuf* %173, null
  br i1 %174, label %175, label %180

175:                                              ; preds = %172, %175
  %176 = phi %struct.mbuf* [ %178, %175 ], [ %1, %172 ]
  %177 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %176, i64 0, i32 0, i32 0
  %178 = load %struct.mbuf*, %struct.mbuf** %177, align 8
  %179 = icmp eq %struct.mbuf* %178, null
  br i1 %179, label %180, label %175

180:                                              ; preds = %175, %172
  %181 = phi %struct.mbuf* [ %173, %172 ], [ %176, %175 ]
  %182 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %181, i64 0, i32 0, i32 0
  store %struct.mbuf* %166, %struct.mbuf** %182, align 8
  br label %183

183:                                              ; preds = %186, %180
  %184 = phi %struct.mbuf* [ %166, %180 ], [ %188, %186 ]
  %185 = icmp eq %struct.mbuf* %184, null
  br i1 %185, label %197, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %184, i64 0, i32 0, i32 0
  %188 = load %struct.mbuf*, %struct.mbuf** %187, align 8
  %189 = icmp eq %struct.mbuf* %188, null
  br i1 %189, label %190, label %183

190:                                              ; preds = %186
  store %struct.mbuf* %184, %struct.mbuf** %2, align 8
  br label %197

191:                                              ; preds = %171, %191
  %192 = phi %struct.mbuf* [ %194, %191 ], [ %166, %171 ]
  %193 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %192, i64 0, i32 0, i32 0
  %194 = load %struct.mbuf*, %struct.mbuf** %193, align 8
  %195 = icmp eq %struct.mbuf* %194, null
  br i1 %195, label %196, label %191

196:                                              ; preds = %191
  store %struct.mbuf* %192, %struct.mbuf** %2, align 8
  br label %197

197:                                              ; preds = %183, %26, %196, %190, %169, %170, %137, %154, %11, %8
  %198 = phi %struct.mbuf* [ null, %8 ], [ null, %11 ], [ %127, %154 ], [ %127, %137 ], [ null, %170 ], [ null, %169 ], [ %1, %190 ], [ %166, %196 ], [ null, %26 ], [ %1, %183 ]
  ret %struct.mbuf* %198
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_v6src_match_nexthop(%struct.sockaddr_in6* nocapture readnone, %struct.sctp_route* nocapture readnone) local_unnamed_addr #10 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_v4src_match_nexthop(%struct.sctp_ifa* nocapture readnone, %struct.sctp_route* nocapture readnone) local_unnamed_addr #10 {
  ret i32 0
}

declare %struct.sctp_ifn* @sctp_find_ifn(i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sctp_count_num_preferred_boundall(%struct.sctp_ifn* nocapture readonly, %struct.sctp_tcb*, i32, i16 zeroext) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %0, i64 0, i32 0, i32 0
  %6 = load %struct.sctp_ifa*, %struct.sctp_ifa** %5, align 8
  %7 = icmp eq %struct.sctp_ifa* %6, null
  br i1 %7, label %90, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %2, 0
  %10 = icmp eq %struct.sctp_tcb* %1, null
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 3
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  %14 = icmp eq i16 %3, 123
  %15 = icmp eq i16 %3, 123
  br label %16

16:                                               ; preds = %8, %85
  %17 = phi %struct.sctp_ifa* [ %6, %8 ], [ %88, %85 ]
  %18 = phi i32 [ 0, %8 ], [ %86, %85 ]
  %19 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 4
  %22 = icmp ne i32 %21, 0
  %23 = and i1 %9, %22
  br i1 %23, label %85, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 4, i32 0, i32 0
  %26 = load i16, i16* %25, align 8
  %27 = icmp eq i16 %26, %3
  br i1 %27, label %28, label %85

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 9
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %85

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 10
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %85

36:                                               ; preds = %32
  br i1 %10, label %83, label %37

37:                                               ; preds = %36
  %38 = load i8, i8* %11, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 2
  %42 = load %struct.sctp_ifn*, %struct.sctp_ifn** %41, align 8
  %43 = icmp eq %struct.sctp_ifn* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %42, i64 0, i32 13, i64 0
  %46 = tail call i32 @strncmp(i8* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %47 = icmp ne i32 %46, 0
  %48 = and i1 %14, %47
  br i1 %48, label %50, label %85

49:                                               ; preds = %40, %37
  br i1 %15, label %50, label %85

50:                                               ; preds = %44, %49
  %51 = load i8, i8* %12, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %85, label %53

53:                                               ; preds = %50
  %54 = load %struct.sctp_laddr*, %struct.sctp_laddr** %13, align 8
  %55 = icmp eq %struct.sctp_laddr* %54, null
  br i1 %9, label %56, label %68

56:                                               ; preds = %53
  br i1 %55, label %83, label %61

57:                                               ; preds = %61
  %58 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %62, i64 0, i32 0, i32 0
  %59 = load %struct.sctp_laddr*, %struct.sctp_laddr** %58, align 8
  %60 = icmp eq %struct.sctp_laddr* %59, null
  br i1 %60, label %83, label %61

61:                                               ; preds = %56, %57
  %62 = phi %struct.sctp_laddr* [ %59, %57 ], [ %54, %56 ]
  %63 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %62, i64 0, i32 1
  %64 = load %struct.sctp_ifa*, %struct.sctp_ifa** %63, align 8
  %65 = icmp ne %struct.sctp_ifa* %64, null
  %66 = icmp eq %struct.sctp_ifa* %64, %17
  %67 = and i1 %65, %66
  br i1 %67, label %85, label %57

68:                                               ; preds = %53
  br i1 %55, label %83, label %73

69:                                               ; preds = %73
  %70 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %74, i64 0, i32 0, i32 0
  %71 = load %struct.sctp_laddr*, %struct.sctp_laddr** %70, align 8
  %72 = icmp eq %struct.sctp_laddr* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %68, %69
  %74 = phi %struct.sctp_laddr* [ %71, %69 ], [ %54, %68 ]
  %75 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %74, i64 0, i32 1
  %76 = load %struct.sctp_ifa*, %struct.sctp_ifa** %75, align 8
  %77 = icmp ne %struct.sctp_ifa* %76, null
  %78 = icmp eq %struct.sctp_ifa* %76, %17
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %69

80:                                               ; preds = %73
  %81 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %17) #13
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %69, %57, %68, %56, %80, %36
  %84 = add nsw i32 %18, 1
  br label %85

85:                                               ; preds = %61, %44, %49, %24, %28, %32, %80, %50, %16, %83
  %86 = phi i32 [ %18, %16 ], [ %18, %50 ], [ %84, %83 ], [ %18, %80 ], [ %18, %32 ], [ %18, %28 ], [ %18, %24 ], [ %18, %44 ], [ %18, %49 ], [ %18, %61 ]
  %87 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %17, i64 0, i32 0, i32 0
  %88 = load %struct.sctp_ifa*, %struct.sctp_ifa** %87, align 8
  %89 = icmp eq %struct.sctp_ifa* %88, null
  br i1 %89, label %90, label %16

90:                                               ; preds = %85, %4
  %91 = phi i32 [ 0, %4 ], [ %86, %85 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.sctp_ifa* @sctp_select_nth_preferred_addr_from_ifn_boundall(%struct.sctp_ifn* nocapture readonly, %struct.sctp_tcb*, i32, i32, i16 zeroext) unnamed_addr #2 {
  %6 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %0, i64 0, i32 0, i32 0
  %7 = load %struct.sctp_ifa*, %struct.sctp_ifa** %6, align 8
  %8 = icmp eq %struct.sctp_ifa* %7, null
  br i1 %8, label %93, label %9

9:                                                ; preds = %5
  %10 = icmp eq i32 %2, 0
  %11 = icmp eq %struct.sctp_tcb* %1, null
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 3
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 172, i32 2
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 13, i32 0
  %15 = icmp eq i16 %4, 123
  %16 = icmp eq i16 %4, 123
  br label %17

17:                                               ; preds = %9, %88
  %18 = phi %struct.sctp_ifa* [ %7, %9 ], [ %91, %88 ]
  %19 = phi i32 [ 0, %9 ], [ %89, %88 ]
  %20 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 4
  %23 = icmp ne i32 %22, 0
  %24 = and i1 %10, %23
  br i1 %24, label %88, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 4, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp eq i16 %27, %4
  br i1 %28, label %29, label %88

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 9
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %88

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 10
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %88

37:                                               ; preds = %33
  br i1 %11, label %84, label %38

38:                                               ; preds = %37
  %39 = load i8, i8* %12, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 2
  %43 = load %struct.sctp_ifn*, %struct.sctp_ifn** %42, align 8
  %44 = icmp eq %struct.sctp_ifn* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.sctp_ifn, %struct.sctp_ifn* %43, i64 0, i32 13, i64 0
  %47 = tail call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %48 = icmp ne i32 %47, 0
  %49 = and i1 %15, %48
  br i1 %49, label %51, label %88

50:                                               ; preds = %41, %38
  br i1 %16, label %51, label %88

51:                                               ; preds = %45, %50
  %52 = load i8, i8* %13, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %88, label %54

54:                                               ; preds = %51
  %55 = load %struct.sctp_laddr*, %struct.sctp_laddr** %14, align 8
  %56 = icmp eq %struct.sctp_laddr* %55, null
  br i1 %10, label %57, label %69

57:                                               ; preds = %54
  br i1 %56, label %84, label %62

58:                                               ; preds = %62
  %59 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %63, i64 0, i32 0, i32 0
  %60 = load %struct.sctp_laddr*, %struct.sctp_laddr** %59, align 8
  %61 = icmp eq %struct.sctp_laddr* %60, null
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %58
  %63 = phi %struct.sctp_laddr* [ %60, %58 ], [ %55, %57 ]
  %64 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %63, i64 0, i32 1
  %65 = load %struct.sctp_ifa*, %struct.sctp_ifa** %64, align 8
  %66 = icmp ne %struct.sctp_ifa* %65, null
  %67 = icmp eq %struct.sctp_ifa* %65, %18
  %68 = and i1 %66, %67
  br i1 %68, label %88, label %58

69:                                               ; preds = %54
  br i1 %56, label %84, label %74

70:                                               ; preds = %74
  %71 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %75, i64 0, i32 0, i32 0
  %72 = load %struct.sctp_laddr*, %struct.sctp_laddr** %71, align 8
  %73 = icmp eq %struct.sctp_laddr* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %69, %70
  %75 = phi %struct.sctp_laddr* [ %72, %70 ], [ %55, %69 ]
  %76 = getelementptr inbounds %struct.sctp_laddr, %struct.sctp_laddr* %75, i64 0, i32 1
  %77 = load %struct.sctp_ifa*, %struct.sctp_ifa** %76, align 8
  %78 = icmp ne %struct.sctp_ifa* %77, null
  %79 = icmp eq %struct.sctp_ifa* %77, %18
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %70

81:                                               ; preds = %74
  %82 = tail call i32 @sctp_is_addr_pending(%struct.sctp_tcb* nonnull %1, %struct.sctp_ifa* nonnull %18) #13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %70, %58, %69, %57, %81, %37
  %85 = icmp slt i32 %19, %3
  br i1 %85, label %86, label %93

86:                                               ; preds = %84
  %87 = add nsw i32 %19, 1
  br label %88

88:                                               ; preds = %62, %45, %50, %25, %29, %33, %81, %51, %17, %86
  %89 = phi i32 [ %19, %17 ], [ %19, %51 ], [ %87, %86 ], [ %19, %81 ], [ %19, %33 ], [ %19, %29 ], [ %19, %25 ], [ %19, %45 ], [ %19, %50 ], [ %19, %62 ]
  %90 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 0, i32 0
  %91 = load %struct.sctp_ifa*, %struct.sctp_ifa** %90, align 8
  %92 = icmp eq %struct.sctp_ifa* %91, null
  br i1 %92, label %93, label %17

93:                                               ; preds = %84, %88, %5
  %94 = phi %struct.sctp_ifa* [ null, %5 ], [ null, %88 ], [ %18, %84 ]
  ret %struct.sctp_ifa* %94
}

declare i32 @sctp_is_addr_pending(%struct.sctp_tcb*, %struct.sctp_ifa*) local_unnamed_addr #5

declare void @sctp_fill_hmac_digest_m(%struct.mbuf*, i32, %struct.sctp_auth_chunk*, %struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #5

declare i32 @sctp_calculate_len(%struct.mbuf*) local_unnamed_addr #5

declare i32 @sctp_calculate_cksum(%struct.mbuf*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @sctp_clean_up_ctl(%struct.sctp_tcb*, %struct.sctp_association* nocapture, i32) unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 0
  %5 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %6 = icmp eq %struct.sctp_tmit_chunk* %5, null
  br i1 %6, label %128, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 25
  %9 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 18, i32 1
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 83
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 91
  %12 = icmp eq %struct.sctp_tcb* %0, null
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 143
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 17, i32 1
  %15 = bitcast %struct.sctp_tmit_chunk*** %14 to i64*
  br label %16

16:                                               ; preds = %7, %126
  %17 = phi %struct.sctp_tmit_chunk* [ %5, %7 ], [ %19, %126 ]
  %18 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 6, i32 0
  %19 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %18, align 8
  %20 = bitcast %struct.sctp_tmit_chunk* %17 to i8*
  %21 = load i8, i8* %20, align 8
  switch i8 %21, label %126 [
    i8 3, label %22
    i8 16, label %22
    i8 4, label %22
    i8 5, label %22
    i8 -64, label %22
    i8 7, label %22
    i8 8, label %22
    i8 9, label %22
    i8 -127, label %22
    i8 11, label %22
    i8 13, label %22
    i8 -128, label %22
    i8 -126, label %123
  ]

22:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %123
  %23 = icmp eq %struct.sctp_tmit_chunk* %19, null
  %24 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 6, i32 1
  %25 = bitcast %struct.sctp_tmit_chunk*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %19, i64 0, i32 6, i32 1
  %28 = select i1 %23, %struct.sctp_tmit_chunk*** %9, %struct.sctp_tmit_chunk*** %27
  %29 = bitcast %struct.sctp_tmit_chunk*** %28 to i64*
  store i64 %26, i64* %29, align 8
  %30 = bitcast %struct.sctp_tmit_chunk** %18 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.sctp_tmit_chunk*** %24 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = load i32, i32* %10, align 8
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %10, align 8
  %36 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 3
  %37 = load %struct.mbuf*, %struct.mbuf** %36, align 8
  %38 = icmp eq %struct.mbuf* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %22
  tail call void @m_freem(%struct.mbuf* nonnull %37) #13
  store %struct.mbuf* null, %struct.mbuf** %36, align 8
  br label %40

40:                                               ; preds = %22, %39
  %41 = load i8, i8* %20, align 8
  %42 = icmp eq i8 %41, -64
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i32, i32* %11, align 8
  %45 = add i32 %44, -1
  store i32 %45, i32* %11, align 8
  br label %46

46:                                               ; preds = %43, %40
  %47 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 14
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 13
  %52 = load i16, i16* %51, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %0, i16 zeroext %52, i32 %2) #13
  store i8 0, i8* %47, align 8
  br label %53

53:                                               ; preds = %46, %50
  br i1 %12, label %121, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %17, i64 0, i32 5
  %56 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %57 = icmp eq %struct.sctp_nets* %56, null
  br i1 %57, label %104, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %56, i64 0, i32 17
  %60 = atomicrmw add i32* %59, i32 -1 seq_cst
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %103

62:                                               ; preds = %58
  %63 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %64 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %63, i64 0, i32 3, i32 0
  %65 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %64, align 8
  %66 = icmp eq %struct.sctp_rtentry* %65, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %65, i64 0, i32 3
  %69 = load i64, i64* %68, align 8
  %70 = icmp sgt i64 %69, 1
  %71 = add nsw i64 %69, -1
  store i64 %71, i64* %68, align 8
  %72 = icmp sgt i64 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %67
  %75 = bitcast %struct.sctp_rtentry* %65 to i8*
  tail call void @free(i8* %75) #13
  br label %76

76:                                               ; preds = %67, %74
  %77 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %78 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %77, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %78, align 8
  %79 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %80 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %79, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %80, align 8
  %81 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  br label %82

82:                                               ; preds = %62, %76
  %83 = phi %struct.sctp_nets* [ %63, %62 ], [ %81, %76 ]
  %84 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %83, i64 0, i32 47
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %83, i64 0, i32 3, i32 2
  %89 = load %struct.sctp_ifa*, %struct.sctp_ifa** %88, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %89) #13
  %90 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %91 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %90, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %91, align 8
  %92 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  br label %93

93:                                               ; preds = %82, %87
  %94 = phi %struct.sctp_nets* [ %83, %82 ], [ %92, %87 ]
  %95 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %94, i64 0, i32 47
  store i8 0, i8* %95, align 1
  %96 = load %struct.sctp_nets*, %struct.sctp_nets** %55, align 8
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %96, i64 0, i32 37
  %98 = load i16, i16* %97, align 4
  %99 = and i16 %98, -2
  store i16 %99, i16* %97, align 4
  %100 = bitcast %struct.sctp_nets** %55 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @free(i8* %101) #13
  %102 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %103

103:                                              ; preds = %58, %93
  store %struct.sctp_nets* null, %struct.sctp_nets** %55, align 8
  br label %104

104:                                              ; preds = %54, %103
  %105 = load i16, i16* %13, align 2
  %106 = zext i16 %105 to i32
  %107 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %108 = icmp ult i32 %107, %106
  br i1 %108, label %113, label %109

109:                                              ; preds = %104
  %110 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %111 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %112 = icmp ugt i32 %110, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %109, %104
  tail call void @free(i8* %20) #13
  %114 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %126

115:                                              ; preds = %109
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %18, align 8
  %116 = load i64, i64* %15, align 8
  store i64 %116, i64* %25, align 8
  %117 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %14, align 8
  store %struct.sctp_tmit_chunk* %17, %struct.sctp_tmit_chunk** %117, align 8
  store %struct.sctp_tmit_chunk** %18, %struct.sctp_tmit_chunk*** %14, align 8
  %118 = load i16, i16* %13, align 2
  %119 = add i16 %118, 1
  store i16 %119, i16* %13, align 2
  %120 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %126

121:                                              ; preds = %53
  tail call void @free(i8* %20) #13
  %122 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %126

123:                                              ; preds = %16
  %124 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %8, align 8
  %125 = icmp eq %struct.sctp_tmit_chunk* %17, %124
  br i1 %125, label %126, label %22

126:                                              ; preds = %16, %123, %113, %115, %121
  %127 = icmp eq %struct.sctp_tmit_chunk* %19, null
  br i1 %127, label %128, label %16

128:                                              ; preds = %126, %3
  ret void
}

declare void @m_adj(%struct.mbuf*, i32) local_unnamed_addr #5

declare %struct.mbuf* @m_free(%struct.mbuf*) local_unnamed_addr #5

declare void @sctp_auth_key_acquire(%struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #5

declare void @sctp_log_rwnd(i8 zeroext, i32, i32, i32) local_unnamed_addr #5

declare i32 @sctp_initiate_iterator(i32 (%struct.sctp_inpcb*, i8*, i32)*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32, i32, i32, i8*, i32, void (i8*, i32)*, %struct.sctp_inpcb*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_sendall_iterator(%struct.sctp_inpcb*, %struct.sctp_tcb*, i8* nocapture, i32) #2 {
  %5 = alloca [256 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.timeval, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to %struct.mbuf**
  %12 = load %struct.mbuf*, %struct.mbuf** %11, align 8
  %13 = icmp eq %struct.mbuf* %12, null
  br i1 %13, label %296, label %14

14:                                               ; preds = %4
  %15 = bitcast i8* %2 to %struct.sctp_inpcb**
  %16 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %15, align 8
  %17 = icmp eq %struct.sctp_inpcb* %16, %0
  br i1 %17, label %18, label %296

18:                                               ; preds = %14
  %19 = getelementptr inbounds i8, i8* %2, i64 144
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %18
  %24 = tail call %struct.mbuf* @m_copym(%struct.mbuf* nonnull %12, i32 0, i32 1000000000, i32 1) #13
  %25 = icmp eq %struct.mbuf* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %2, i64 156
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  br label %296

31:                                               ; preds = %18, %23
  %32 = phi %struct.mbuf* [ %24, %23 ], [ null, %18 ]
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %35 = load %struct.sctp_nets*, %struct.sctp_nets** %34, align 8
  %36 = icmp eq %struct.sctp_nets* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %39 = load %struct.sctp_nets*, %struct.sctp_nets** %38, align 8
  br label %40

40:                                               ; preds = %31, %37
  %41 = phi %struct.sctp_nets* [ %39, %37 ], [ %35, %31 ]
  %42 = getelementptr inbounds i8, i8* %2, i64 16
  %43 = bitcast i8* %42 to %struct.sctp_sndrcvinfo*
  %44 = getelementptr inbounds i8, i8* %2, i64 20
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 4
  %47 = and i16 %46, 512
  %48 = icmp eq i16 %47, 0
  %49 = icmp ne %struct.mbuf* %32, null
  br i1 %48, label %132, label %50

50:                                               ; preds = %40
  br i1 %49, label %51, label %110

51:                                               ; preds = %50
  %52 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %51
  %57 = and i32 %53, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %95

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 1, i32 0, i32 1, i32 0, i32 4
  %61 = load i32*, i32** %60, align 8
  %62 = load volatile i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %95

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 0, i32 2
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %67, %70
  br label %84

72:                                               ; preds = %51
  %73 = and i32 %53, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 0, i32 2
  %76 = bitcast i8** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 1
  %79 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 1, i32 0, i32 1
  %80 = ptrtoint %union.anon.7* %79 to i64
  %81 = ptrtoint %union.anon.4* %78 to i64
  %82 = select i1 %74, i64 %81, i64 %80
  %83 = sub i64 %77, %82
  br label %84

84:                                               ; preds = %72, %64
  %85 = phi i64 [ %67, %64 ], [ %77, %72 ]
  %86 = phi i64 [ %71, %64 ], [ %83, %72 ]
  %87 = icmp sgt i64 %86, 3
  br i1 %87, label %88, label %95

88:                                               ; preds = %84
  %89 = inttoptr i64 %85 to i8*
  %90 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 0, i32 2
  %91 = getelementptr inbounds i8, i8* %89, i64 -4
  store i8* %91, i8** %90, align 8
  %92 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %32, i64 0, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = add nsw i32 %93, 4
  store i32 %94, i32* %92, align 8
  br label %101

95:                                               ; preds = %56, %59, %84
  %96 = tail call %struct.mbuf* @m_prepend(%struct.mbuf* nonnull %32, i32 4, i32 1) #13
  %97 = icmp eq %struct.mbuf* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %96, i64 0, i32 0, i32 4
  %100 = load i32, i32* %99, align 4
  br label %101

101:                                              ; preds = %98, %88
  %102 = phi i32 [ %53, %88 ], [ %100, %98 ]
  %103 = phi %struct.mbuf* [ %32, %88 ], [ %96, %98 ]
  %104 = and i32 %102, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %103, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = add nsw i32 %108, 4
  store i32 %109, i32* %107, align 8
  br label %114

110:                                              ; preds = %50
  %111 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 4, i32 0, i32 1, i32 1, i32 1) #13
  %112 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %111, i64 0, i32 0, i32 3
  store i32 4, i32* %112, align 8
  %113 = icmp eq %struct.mbuf* %111, null
  br i1 %113, label %125, label %114

114:                                              ; preds = %106, %101, %110
  %115 = phi %struct.mbuf* [ %111, %110 ], [ %103, %101 ], [ %103, %106 ]
  %116 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 2
  %117 = bitcast i8** %116 to %struct.sctp_paramhdr**
  %118 = load %struct.sctp_paramhdr*, %struct.sctp_paramhdr** %117, align 8
  %119 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %118, i64 0, i32 0
  store i16 3072, i16* %119, align 1
  %120 = load i64, i64* %20, align 8
  %121 = trunc i64 %120 to i16
  %122 = add i16 %121, 4
  %123 = tail call i16 @llvm.bswap.i16(i16 %122) #13
  %124 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %118, i64 0, i32 1
  store i16 %123, i16* %124, align 1
  br label %125

125:                                              ; preds = %114, %110, %95
  %126 = phi %struct.mbuf* [ null, %110 ], [ %115, %114 ], [ null, %95 ]
  %127 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  %128 = atomicrmw add i32* %127, i32 1 seq_cst
  tail call void @sctp_abort_an_association(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.mbuf* %126, i32 0) #13
  %129 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 14
  %130 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %129) #13
  %131 = atomicrmw add i32* %127, i32 -1 seq_cst
  br label %291

132:                                              ; preds = %40
  br i1 %49, label %133, label %136

133:                                              ; preds = %132
  %134 = tail call fastcc i32 @sctp_msg_append(%struct.sctp_tcb* %1, %struct.sctp_nets* %41, %struct.mbuf* nonnull %32, %struct.sctp_sndrcvinfo* %43, i32 1)
  %135 = load i16, i16* %45, align 4
  br label %136

136:                                              ; preds = %133, %132
  %137 = phi i16 [ %135, %133 ], [ %46, %132 ]
  %138 = phi i32 [ %134, %133 ], [ 0, %132 ]
  %139 = and i16 %137, 256
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %211, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  %143 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %142, align 8
  %144 = icmp eq %struct.sctp_tmit_chunk* %143, null
  br i1 %144, label %145, label %171

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %147 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %146, align 8
  %148 = icmp eq %struct.sctp_tmit_chunk* %147, null
  br i1 %148, label %149, label %171

149:                                              ; preds = %145
  %150 = tail call i32 @sctp_is_there_unsent_data(%struct.sctp_tcb* %1, i32 0) #13
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %171

152:                                              ; preds = %149
  %153 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 11
  %154 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %153, align 8
  %155 = tail call i32 %154(%struct.sctp_tcb* %1, %struct.sctp_association* %33) #13
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %194

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %33, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, 127
  %161 = add nsw i32 %160, -8
  %162 = lshr i32 %161, 3
  %163 = shl i32 %161, 29
  %164 = or i32 %162, %163
  switch i32 %164, label %167 [
    i32 1, label %211
    i32 3, label %211
    i32 7, label %211
    i32 0, label %165
  ]

165:                                              ; preds = %157
  %166 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 1), i32 1 seq_cst
  br label %167

167:                                              ; preds = %157, %165
  tail call void @sctp_set_state(%struct.sctp_tcb* %1, i32 16) #13
  tail call void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb* %1) #13
  tail call void @sctp_send_shutdown(%struct.sctp_tcb* %1, %struct.sctp_nets* %41)
  %168 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %169 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %168, align 8
  tail call void @sctp_timer_start(i32 4, %struct.sctp_inpcb* %169, %struct.sctp_tcb* %1, %struct.sctp_nets* %41) #13
  %170 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %168, align 8
  tail call void @sctp_timer_start(i32 11, %struct.sctp_inpcb* %170, %struct.sctp_tcb* %1, %struct.sctp_nets* null) #13
  br label %211

171:                                              ; preds = %149, %145, %141
  %172 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %33, i64 0, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 127
  switch i32 %174, label %175 [
    i32 16, label %211
    i32 32, label %211
    i32 64, label %211
  ]

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 11
  %177 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %176, align 8
  %178 = tail call i32 %177(%struct.sctp_tcb* %1, %struct.sctp_association* %33) #13
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %181, label %180

180:                                              ; preds = %175
  tail call void @sctp_add_substate(%struct.sctp_tcb* %1, i32 1024) #13
  br label %181

181:                                              ; preds = %175, %180
  tail call void @sctp_add_substate(%struct.sctp_tcb* %1, i32 128) #13
  %182 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %142, align 8
  %183 = icmp eq %struct.sctp_tmit_chunk* %182, null
  br i1 %183, label %184, label %208

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %186 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %185, align 8
  %187 = icmp eq %struct.sctp_tmit_chunk* %186, null
  br i1 %187, label %188, label %208

188:                                              ; preds = %184
  %189 = load i32, i32* %172, align 8
  %190 = and i32 %189, 1024
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %208, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %193, i8 -86, i64 256, i1 false)
  br label %194

194:                                              ; preds = %152, %192
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  %196 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %195, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 7278, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.sctp_sendall_iterator, i64 0, i64 0)) #13
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %194
  store i8 0, i8* %195, align 16
  br label %199

199:                                              ; preds = %198, %194
  %200 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %201 = trunc i32 %200 to i16
  %202 = call %struct.mbuf* @sctp_generate_cause(i16 zeroext %201, i8* nonnull %195) #13
  %203 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 120
  %204 = atomicrmw add i32* %203, i32 1 seq_cst
  %205 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %206 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %205, align 8
  call void @sctp_abort_an_association(%struct.sctp_inpcb* %206, %struct.sctp_tcb* %1, %struct.mbuf* %202, i32 0) #13
  %207 = atomicrmw add i32* %203, i32 -1 seq_cst
  br label %284

208:                                              ; preds = %188, %184, %181
  %209 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %210 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %209, align 8
  tail call void @sctp_timer_start(i32 11, %struct.sctp_inpcb* %210, %struct.sctp_tcb* %1, %struct.sctp_nets* null) #13
  br label %211

211:                                              ; preds = %171, %171, %171, %157, %157, %157, %136, %208, %167
  %212 = phi i32 [ 1, %167 ], [ 0, %157 ], [ 0, %208 ], [ 0, %171 ], [ 0, %136 ], [ 0, %157 ], [ 0, %157 ], [ 0, %171 ], [ 0, %171 ]
  %213 = phi i32 [ 0, %167 ], [ 1, %157 ], [ 1, %208 ], [ 1, %171 ], [ 1, %136 ], [ 1, %157 ], [ 1, %157 ], [ 1, %171 ], [ 1, %171 ]
  %214 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 168
  %217 = load i8, i8* %216, align 2
  %218 = icmp eq i8 %217, 0
  %219 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 8
  %220 = load i64, i64* %219, align 8
  %221 = and i64 %220, 256
  %222 = icmp ne i64 %221, 0
  %223 = icmp eq i32 %215, 0
  %224 = or i1 %223, %222
  br i1 %224, label %240, label %225

225:                                              ; preds = %211
  %226 = select i1 %218, i32 16, i32 20
  %227 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 84
  %228 = load i32, i32* %227, align 4
  %229 = mul i32 %228, %226
  %230 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  %231 = load i32, i32* %230, align 4
  %232 = sub i32 %231, %215
  %233 = add i32 %232, %229
  %234 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 53
  %235 = load i32, i32* %234, align 4
  %236 = add i32 %235, -32
  %237 = icmp slt i32 %233, %236
  %238 = icmp eq i32 %213, 0
  %239 = or i1 %238, %237
  br i1 %239, label %243, label %242

240:                                              ; preds = %211
  %241 = icmp eq i32 %213, 0
  br i1 %241, label %243, label %242

242:                                              ; preds = %225, %240
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, i32 0, i32 0)
  br label %284

243:                                              ; preds = %225, %240
  %244 = icmp eq i32 %212, 0
  br i1 %244, label %284, label %245

245:                                              ; preds = %243
  %246 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #13
  store i32 -1431655766, i32* %6, align 4
  %247 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #13
  store i32 -1431655766, i32* %7, align 4
  %248 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #13
  store i32 0, i32* %8, align 4
  %249 = bitcast %struct.timeval* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #13
  %250 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %251 = bitcast %struct.timeval* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 -86, i64 16, i1 false)
  %252 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %250, align 8
  %253 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %252, i64 0, i32 9
  %254 = load i32, i32* %253, align 8
  %255 = and i32 %254, -2080374784
  %256 = icmp eq i32 %255, -2147483648
  %257 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 77
  %258 = load i32, i32* %257, align 8
  %259 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 53
  %260 = load i32, i32* %259, align 4
  %261 = icmp ugt i32 %258, %260
  %262 = select i1 %261, i32 %260, i32 %258
  %263 = select i1 %256, i32 -12, i32 -32
  %264 = select i1 %218, i32 -16, i32 -20
  %265 = add nsw i32 %263, %264
  %266 = add i32 %265, %262
  %267 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 115
  %268 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %267, align 8
  %269 = icmp eq %struct.sctp_auth_chklist* %268, null
  br i1 %269, label %279, label %270

270:                                              ; preds = %245
  %271 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %268, i64 0, i32 0, i64 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %279, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 124
  %276 = load i16, i16* %275, align 8
  %277 = tail call i32 @sctp_get_auth_chunk_len(i16 zeroext %276) #13
  %278 = sub i32 %266, %277
  br label %279

279:                                              ; preds = %245, %270, %274
  %280 = phi i32 [ %266, %245 ], [ %278, %274 ], [ %266, %270 ]
  %281 = srem i32 %280, 4
  %282 = sub nsw i32 %280, %281
  %283 = call fastcc i32 @sctp_med_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_association* %33, i32* nonnull %6, i32* nonnull %7, i32 1, i32 1, %struct.timeval* nonnull %9, i32* nonnull %8, i32 %282, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #13
  br label %284

284:                                              ; preds = %243, %242, %279, %199
  %285 = icmp eq i32 %138, 0
  br i1 %285, label %291, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds i8, i8* %2, i64 156
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = add nsw i32 %289, 1
  store i32 %290, i32* %288, align 4
  br label %296

291:                                              ; preds = %125, %284
  %292 = getelementptr inbounds i8, i8* %2, i64 152
  %293 = bitcast i8* %292 to i32*
  %294 = load i32, i32* %293, align 8
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %293, align 8
  br label %296

296:                                              ; preds = %286, %291, %14, %4, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_sendall_completes(i8* nocapture, i32) #2 {
  %3 = bitcast i8* %0 to %struct.sctp_inpcb**
  %4 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %3, align 8
  %5 = icmp eq %struct.sctp_inpcb* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %4, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -33
  store i32 %9, i32* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds i8, i8* %0, i64 8
  %12 = bitcast i8* %11 to %struct.mbuf**
  %13 = load %struct.mbuf*, %struct.mbuf** %12, align 8
  tail call void @m_freem(%struct.mbuf* %13) #13
  tail call void @free(i8* %0) #13
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @sctp_set_prsctp_policy(%struct.sctp_stream_queue_pending* nocapture) unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 11
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 15
  switch i16 %4, label %12 [
    i16 0, label %5
    i16 15, label %5
  ]

5:                                                ; preds = %1, %1
  %6 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = or i16 %3, 1
  store i16 %10, i16* %2, align 4
  %11 = and i16 %10, 15
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i16 [ %11, %9 ], [ %4, %1 ]
  %14 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 13
  %15 = load i16, i16* %14, align 8
  %16 = or i16 %15, %13
  store i16 %16, i16* %14, align 8
  %17 = zext i16 %13 to i32
  switch i32 %17, label %50 [
    i32 2, label %18
    i32 1, label %24
    i32 3, label %44
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2, i32 0
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %23, align 8
  br label %50

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2
  %26 = tail call i32 @gettimeofday(%struct.timeval* %25, i8* null) #13
  %27 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = udiv i32 %28, 1000
  %30 = zext i32 %29 to i64
  %31 = mul i32 %28, 1000
  %32 = urem i32 %31, 1000000
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %25, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, %30
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %38, %33
  store i64 %39, i64* %37, align 8
  %40 = icmp sgt i64 %39, 999999
  br i1 %40, label %41, label %50

41:                                               ; preds = %24
  %42 = add nsw i64 %36, 1
  store i64 %42, i64* %34, align 8
  %43 = add nsw i64 %39, -1000000
  store i64 %43, i64* %37, align 8
  br label %50

44:                                               ; preds = %12
  %45 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 8
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2, i32 0
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %49, align 8
  br label %50

50:                                               ; preds = %24, %41, %5, %12, %44, %18
  ret void
}

declare %struct.mbuf* @m_uiotombuf(%struct.uio*, i32, i32, i32, i32) local_unnamed_addr #5

declare %struct.mbuf* @m_last(%struct.mbuf*) local_unnamed_addr #5

declare i32 @m_length(%struct.mbuf*, %struct.mbuf**) local_unnamed_addr #5

declare i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb*, %struct.sctp_tmit_chunk*, i8 zeroext, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #11

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare <8 x i16> @llvm.bswap.v8i16(<8 x i16>) #11

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
