; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/fullband_erle_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/fullband_erle_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::FullBandErleEstimator" = type { float, float, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.15" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { float*, float*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { float* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.std::__1::__compressed_pair.10" }
%"class.webrtc::FullBandErleEstimator::ErleInstantaneous" = type { i8, i8, %"class.absl::optional", float, float, float, float, float, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.absl::optional"* }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::array" = type { [65 x float] }
%"class.rtc::ArrayView.24" = type { %"class.rtc::impl::ArrayViewBase.25" }
%"class.rtc::impl::ArrayViewBase.25" = type { %"struct.std::__1::array"*, i64 }
%"class.std::__1::vector.26" = type { i64*, i64, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }

@_ZN6webrtc21FullBandErleEstimatorC1ERKNS_20EchoCanceller3Config4ErleEm = hidden unnamed_addr alias void (%"class.webrtc::FullBandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config::Erle"*, i64), void (%"class.webrtc::FullBandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config::Erle"*, i64)* @_ZN6webrtc21FullBandErleEstimatorC2ERKNS_20EchoCanceller3Config4ErleEm
@_ZN6webrtc21FullBandErleEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::FullBandErleEstimator"*), void (%"class.webrtc::FullBandErleEstimator"*)* @_ZN6webrtc21FullBandErleEstimatorD2Ev
@_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousC1ERKNS_20EchoCanceller3Config4ErleE = hidden unnamed_addr alias void (%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"struct.webrtc::EchoCanceller3Config::Erle"*), void (%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"struct.webrtc::EchoCanceller3Config::Erle"*)* @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousC2ERKNS_20EchoCanceller3Config4ErleE
@_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousD1Ev = hidden unnamed_addr alias void (%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*), void (%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*)* @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimatorC2ERKNS_20EchoCanceller3Config4ErleEm(%"class.webrtc::FullBandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config::Erle"* nocapture readonly dereferenceable(32), i64) unnamed_addr #0 align 2 {
  %4 = alloca [7 x i8], align 1
  %5 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = fadd float %7, 0x3F50624DE0000000
  %9 = tail call float @_ZN6webrtc15FastApproxLog2fEf(float %8) #10
  store float %9, float* %5, align 8
  %10 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fadd float %12, 0x3F50624DE0000000
  %14 = tail call float @_ZN6webrtc15FastApproxLog2fEf(float %13) #10
  store float %14, float* %10, align 4
  %15 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = icmp eq i64 %2, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3
  %20 = bitcast %"class.std::__1::vector.1"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  br label %161

21:                                               ; preds = %3
  %22 = icmp ugt i64 %2, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = shl i64 %2, 2
  %27 = tail call i8* @_Znwm(i64 %26) #12
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector"* %15 to i8**
  store i8* %27, i8** %30, align 8
  %31 = getelementptr inbounds i32, i32* %28, i64 %2
  %32 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i32* %31, i32** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 0, i64 %26, i1 false)
  %33 = bitcast i32** %29 to i64*
  %34 = ptrtoint i32* %31 to i64
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3
  %36 = tail call i8* @_Znwm(i64 %26) #12
  %37 = bitcast i8* %36 to float*
  %38 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 1
  %39 = bitcast float** %38 to i8**
  store i8* %36, i8** %39, align 8
  %40 = bitcast %"class.std::__1::vector.1"* %35 to i8**
  store i8* %36, i8** %40, align 8
  %41 = getelementptr inbounds float, float* %37, i64 %2
  %42 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store float* %41, float** %42, align 8
  %43 = bitcast %"class.webrtc::FullBandErleEstimator"* %0 to i32*
  %44 = shl nsw i64 %2, 2
  %45 = add i64 %44, -4
  %46 = lshr exact i64 %45, 2
  %47 = add nuw nsw i64 %46, 1
  %48 = icmp ult i64 %47, 8
  br i1 %48, label %108, label %49

49:                                               ; preds = %25
  %50 = shl nsw i64 %2, 2
  %51 = getelementptr i8, i8* %36, i64 %50
  %52 = bitcast %"class.webrtc::FullBandErleEstimator"* %0 to i8*
  %53 = getelementptr i8, i8* %52, i64 1
  %54 = bitcast %"class.webrtc::FullBandErleEstimator"* %0 to i8*
  %55 = icmp ult i8* %36, %53
  %56 = icmp ugt i8* %51, %54
  %57 = and i1 %55, %56
  br i1 %57, label %108, label %58

58:                                               ; preds = %49
  %59 = and i64 %47, 9223372036854775800
  %60 = getelementptr float, float* %37, i64 %59
  %61 = add nsw i64 %59, -8
  %62 = lshr exact i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i32, i32* %43, align 4, !alias.scope !2
  %69 = insertelement <4 x i32> undef, i32 %68, i32 0
  %70 = shufflevector <4 x i32> %69, <4 x i32> undef, <4 x i32> zeroinitializer
  %71 = insertelement <4 x i32> undef, i32 %68, i32 0
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> zeroinitializer
  %73 = load i32, i32* %43, align 4, !alias.scope !2
  %74 = insertelement <4 x i32> undef, i32 %73, i32 0
  %75 = shufflevector <4 x i32> %74, <4 x i32> undef, <4 x i32> zeroinitializer
  %76 = insertelement <4 x i32> undef, i32 %73, i32 0
  %77 = shufflevector <4 x i32> %76, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr float, float* %37, i64 %79
  %82 = bitcast float* %81 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %82, align 4, !alias.scope !5, !noalias !2
  %83 = getelementptr float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %84, align 4, !alias.scope !5, !noalias !2
  %85 = or i64 %79, 8
  %86 = getelementptr float, float* %37, i64 %85
  %87 = bitcast float* %86 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %87, align 4, !alias.scope !5, !noalias !2
  %88 = getelementptr float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x i32>*
  store <4 x i32> %77, <4 x i32>* %89, align 4, !alias.scope !5, !noalias !2
  %90 = add i64 %79, 16
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !7

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr float, float* %37, i64 %94
  %98 = load i32, i32* %43, align 4, !alias.scope !2
  %99 = insertelement <4 x i32> undef, i32 %98, i32 0
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> zeroinitializer
  %101 = insertelement <4 x i32> undef, i32 %98, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = bitcast float* %97 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !5, !noalias !2
  %104 = getelementptr float, float* %97, i64 4
  %105 = bitcast float* %104 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %105, align 4, !alias.scope !5, !noalias !2
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %47, %59
  br i1 %107, label %158, label %108

108:                                              ; preds = %106, %49, %25
  %109 = phi float* [ %37, %49 ], [ %37, %25 ], [ %60, %106 ]
  %110 = ptrtoint float* %109 to i64
  %111 = shl nsw i64 %2, 2
  %112 = add i64 %111, -4
  %113 = sub i64 %112, %110
  %114 = getelementptr i8, i8* %36, i64 %113
  %115 = ptrtoint i8* %114 to i64
  %116 = lshr i64 %115, 2
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %108, %120
  %121 = phi float* [ %125, %120 ], [ %109, %108 ]
  %122 = phi i64 [ %126, %120 ], [ %118, %108 ]
  %123 = load i32, i32* %43, align 4
  %124 = bitcast float* %121 to i32*
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds float, float* %121, i64 1
  %126 = add i64 %122, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %120, !llvm.loop !9

128:                                              ; preds = %120, %108
  %129 = phi float* [ %109, %108 ], [ %125, %120 ]
  %130 = icmp ult i8* %114, inttoptr (i64 28 to i8*)
  br i1 %130, label %158, label %131

131:                                              ; preds = %128, %131
  %132 = phi float* [ %156, %131 ], [ %129, %128 ]
  %133 = load i32, i32* %43, align 4
  %134 = bitcast float* %132 to i32*
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds float, float* %132, i64 1
  %136 = load i32, i32* %43, align 4
  %137 = bitcast float* %135 to i32*
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds float, float* %132, i64 2
  %139 = load i32, i32* %43, align 4
  %140 = bitcast float* %138 to i32*
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds float, float* %132, i64 3
  %142 = load i32, i32* %43, align 4
  %143 = bitcast float* %141 to i32*
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds float, float* %132, i64 4
  %145 = load i32, i32* %43, align 4
  %146 = bitcast float* %144 to i32*
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds float, float* %132, i64 5
  %148 = load i32, i32* %43, align 4
  %149 = bitcast float* %147 to i32*
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds float, float* %132, i64 6
  %151 = load i32, i32* %43, align 4
  %152 = bitcast float* %150 to i32*
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds float, float* %132, i64 7
  %154 = load i32, i32* %43, align 4
  %155 = bitcast float* %153 to i32*
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds float, float* %132, i64 8
  %157 = icmp eq float* %156, %41
  br i1 %157, label %158, label %131, !llvm.loop !11

158:                                              ; preds = %128, %131, %106
  %159 = bitcast float** %38 to i64*
  %160 = ptrtoint float* %41 to i64
  store i64 %160, i64* %159, align 8
  br label %161

161:                                              ; preds = %18, %158
  %162 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4
  %163 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %163)
  %164 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 6
  %165 = load i8, i8* %164, align 8, !range !12
  %166 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 7
  %167 = load i8, i8* %166, align 1, !range !12
  %168 = bitcast %"class.std::__1::vector.8"* %162 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #10
  br i1 %17, label %169, label %172

169:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %163)
  %170 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5
  %171 = bitcast %"class.std::__1::vector.15"* %170 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 24, i1 false) #10
  br label %245

172:                                              ; preds = %161
  %173 = icmp ugt i64 %2, 512409557603043100
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = bitcast %"class.std::__1::vector.8"* %162 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #11
  unreachable

176:                                              ; preds = %172
  %177 = mul i64 %2, 36
  %178 = tail call i8* @_Znwm(i64 %177) #12
  %179 = bitcast i8* %178 to %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*
  %180 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 1
  %181 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %180 to i8**
  store i8* %178, i8** %181, align 8
  %182 = bitcast %"class.std::__1::vector.8"* %162 to i8**
  store i8* %178, i8** %182, align 8
  %183 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 %2
  %184 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %183, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %184, align 8
  br label %185

185:                                              ; preds = %185, %176
  %186 = phi %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* [ %179, %176 ], [ %195, %185 ]
  %187 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 0
  store i8 %165, i8* %187, align 4
  %188 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 1
  store i8 %167, i8* %188, align 1
  %189 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %189, align 4
  %190 = getelementptr inbounds i8, i8* %187, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 1 %163, i64 7, i1 false)
  %191 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 3
  %192 = bitcast float* %191 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float -1.000000e+01, float 3.300000e+01, float 0.000000e+00>, <4 x float>* %192, align 4
  %193 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 7
  store float 0.000000e+00, float* %193, align 4
  %194 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 0, i32 8
  store i32 0, i32* %194, align 4
  %195 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %186, i64 1
  %196 = icmp eq %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %195, %183
  br i1 %196, label %197, label %185

197:                                              ; preds = %185
  %198 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %180 to i64*
  %199 = ptrtoint %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %183 to i64
  store i64 %199, i64* %198, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %163)
  %200 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5
  %201 = bitcast %"class.std::__1::vector.15"* %200 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 24, i1 false) #10
  %202 = icmp ugt i64 %2, 2305843009213693951
  br i1 %202, label %203, label %205

203:                                              ; preds = %197
  %204 = bitcast %"class.std::__1::vector.15"* %200 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %204) #11
  unreachable

205:                                              ; preds = %197
  %206 = shl i64 %2, 3
  %207 = tail call i8* @_Znwm(i64 %206) #12
  %208 = bitcast i8* %207 to %"class.absl::optional"*
  %209 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %210 = bitcast %"class.absl::optional"** %209 to i8**
  store i8* %207, i8** %210, align 8
  %211 = bitcast %"class.std::__1::vector.15"* %200 to i8**
  store i8* %207, i8** %211, align 8
  %212 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %208, i64 %2
  %213 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"class.absl::optional"* %212, %"class.absl::optional"** %213, align 8
  %214 = shl nsw i64 %2, 3
  %215 = add i64 %214, -8
  %216 = lshr exact i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = and i64 %217, 7
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %227, label %220

220:                                              ; preds = %205, %220
  %221 = phi %"class.absl::optional"* [ %224, %220 ], [ %208, %205 ]
  %222 = phi i64 [ %225, %220 ], [ %218, %205 ]
  %223 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %223, align 4
  %224 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %221, i64 1
  %225 = add i64 %222, -1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %220, !llvm.loop !13

227:                                              ; preds = %220, %205
  %228 = phi %"class.absl::optional"* [ %208, %205 ], [ %224, %220 ]
  %229 = icmp ult i64 %215, 56
  br i1 %229, label %242, label %230

230:                                              ; preds = %227, %230
  %231 = phi %"class.absl::optional"* [ %240, %230 ], [ %228, %227 ]
  %232 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %232, align 4
  %233 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %233, align 4
  %234 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %234, align 4
  %235 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %235, align 4
  %236 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %236, align 4
  %237 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %237, align 4
  %238 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %238, align 4
  %239 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %239, align 4
  %240 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %231, i64 8
  %241 = icmp eq %"class.absl::optional"* %240, %212
  br i1 %241, label %242, label %230

242:                                              ; preds = %230, %227
  %243 = bitcast %"class.absl::optional"** %209 to i64*
  %244 = ptrtoint %"class.absl::optional"* %212 to i64
  store i64 %244, i64* %243, align 8
  br label %245

245:                                              ; preds = %169, %242
  tail call void @_ZN6webrtc21FullBandErleEstimator5ResetEv(%"class.webrtc::FullBandErleEstimator"* %0)
  ret void
}

declare float @_ZN6webrtc15FastApproxLog2fEf(float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator5ResetEv(%"class.webrtc::FullBandErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %5, align 8
  %7 = icmp eq %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %4, %6
  br i1 %7, label %8, label %178

8:                                                ; preds = %1
  %9 = ptrtoint %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %4 to i64
  %10 = ptrtoint %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %6 to i64
  %11 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %5 to i64*
  %12 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  br label %18

13:                                               ; preds = %178
  %14 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %8, %13
  %19 = phi i64* [ %12, %8 ], [ %16, %13 ]
  %20 = phi i64* [ %11, %8 ], [ %14, %13 ]
  %21 = phi i64 [ %9, %8 ], [ %17, %13 ]
  %22 = phi i64 [ %10, %8 ], [ %15, %13 ]
  %23 = icmp eq i64 %22, %21
  br i1 %23, label %69, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %26

26:                                               ; preds = %56, %24
  %27 = phi i64 [ %21, %24 ], [ %65, %56 ]
  %28 = phi i64 [ 0, %24 ], [ %63, %56 ]
  %29 = inttoptr i64 %27 to %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*
  %30 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %29, i64 %28, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 4, !range !12
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %29, i64 %28, i32 3
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %29, i64 %28, i32 0
  %38 = load i8, i8* %37, align 4, !range !12
  %39 = icmp eq i8 %38, 0
  %40 = bitcast i32 %36 to float
  br i1 %39, label %45, label %41

41:                                               ; preds = %33
  %42 = fcmp ogt float %40, 0.000000e+00
  %43 = select i1 %42, i32 %36, i32 0
  %44 = bitcast i32 %43 to float
  br label %45

45:                                               ; preds = %41, %33
  %46 = phi i32 [ %36, %33 ], [ %43, %41 ]
  %47 = phi float [ %40, %33 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %29, i64 %28, i32 1
  %49 = load i8, i8* %48, align 1, !range !12
  %50 = icmp eq i8 %49, 0
  %51 = fcmp olt float %47, 1.000000e+00
  %52 = or i1 %51, %50
  %53 = zext i32 %46 to i64
  %54 = shl nuw i64 %53, 32
  %55 = select i1 %52, i64 %54, i64 4575657221408423936
  br label %56

56:                                               ; preds = %45, %26
  %57 = phi i64 [ %55, %45 ], [ 0, %26 ]
  %58 = phi i64 [ 1, %45 ], [ 0, %26 ]
  %59 = or i64 %58, %57
  %60 = load %"class.absl::optional"*, %"class.absl::optional"** %25, align 8
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %60, i64 %28
  %62 = bitcast %"class.absl::optional"* %61 to i64*
  store i64 %59, i64* %62, align 4
  %63 = add nuw i64 %28, 1
  %64 = load i64, i64* %20, align 8
  %65 = load i64, i64* %19, align 8
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 36
  %68 = icmp ult i64 %63, %67
  br i1 %68, label %26, label %69

69:                                               ; preds = %56, %18
  %70 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = load float*, float** %70, align 8
  %72 = bitcast float* %71 to i8*
  %73 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 1
  %74 = bitcast float** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = ptrtoint float* %71 to i64
  %77 = sub i64 %75, %76
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %161

79:                                               ; preds = %69
  %80 = lshr exact i64 %77, 2
  %81 = bitcast %"class.webrtc::FullBandErleEstimator"* %0 to i32*
  %82 = lshr i64 %77, 2
  %83 = icmp eq i64 %82, 0
  %84 = zext i1 %83 to i64
  %85 = add nuw nsw i64 %82, %84
  %86 = icmp ult i64 %85, 8
  br i1 %86, label %150, label %87

87:                                               ; preds = %79
  %88 = lshr i64 %77, 2
  %89 = icmp eq i64 %88, 0
  %90 = zext i1 %89 to i64
  %91 = add nuw nsw i64 %88, %90
  %92 = getelementptr float, float* %71, i64 %91
  %93 = bitcast %"class.webrtc::FullBandErleEstimator"* %0 to i8*
  %94 = getelementptr i8, i8* %93, i64 1
  %95 = icmp ugt i8* %94, %72
  %96 = bitcast float* %92 to %"class.webrtc::FullBandErleEstimator"*
  %97 = icmp ugt %"class.webrtc::FullBandErleEstimator"* %96, %0
  %98 = and i1 %95, %97
  br i1 %98, label %150, label %99

99:                                               ; preds = %87
  %100 = and i64 %85, 9223372036854775800
  %101 = sub nsw i64 %80, %100
  %102 = getelementptr float, float* %71, i64 %100
  %103 = add nsw i64 %100, -8
  %104 = lshr exact i64 %103, 3
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %103, 0
  br i1 %107, label %135, label %108

108:                                              ; preds = %99
  %109 = sub nuw nsw i64 %105, %106
  %110 = load i32, i32* %81, align 4, !alias.scope !14
  %111 = insertelement <4 x i32> undef, i32 %110, i32 0
  %112 = shufflevector <4 x i32> %111, <4 x i32> undef, <4 x i32> zeroinitializer
  %113 = insertelement <4 x i32> undef, i32 %110, i32 0
  %114 = shufflevector <4 x i32> %113, <4 x i32> undef, <4 x i32> zeroinitializer
  %115 = load i32, i32* %81, align 4, !alias.scope !14
  %116 = insertelement <4 x i32> undef, i32 %115, i32 0
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> zeroinitializer
  %118 = insertelement <4 x i32> undef, i32 %115, i32 0
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %120

120:                                              ; preds = %120, %108
  %121 = phi i64 [ 0, %108 ], [ %132, %120 ]
  %122 = phi i64 [ %109, %108 ], [ %133, %120 ]
  %123 = getelementptr float, float* %71, i64 %121
  %124 = bitcast float* %123 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %124, align 4, !alias.scope !17, !noalias !14
  %125 = getelementptr float, float* %123, i64 4
  %126 = bitcast float* %125 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %126, align 4, !alias.scope !17, !noalias !14
  %127 = or i64 %121, 8
  %128 = getelementptr float, float* %71, i64 %127
  %129 = bitcast float* %128 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %129, align 4, !alias.scope !17, !noalias !14
  %130 = getelementptr float, float* %128, i64 4
  %131 = bitcast float* %130 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %131, align 4, !alias.scope !17, !noalias !14
  %132 = add i64 %121, 16
  %133 = add i64 %122, -2
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %120, !llvm.loop !19

135:                                              ; preds = %120, %99
  %136 = phi i64 [ 0, %99 ], [ %132, %120 ]
  %137 = icmp eq i64 %106, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %135
  %139 = getelementptr float, float* %71, i64 %136
  %140 = load i32, i32* %81, align 4, !alias.scope !14
  %141 = insertelement <4 x i32> undef, i32 %140, i32 0
  %142 = shufflevector <4 x i32> %141, <4 x i32> undef, <4 x i32> zeroinitializer
  %143 = insertelement <4 x i32> undef, i32 %140, i32 0
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> zeroinitializer
  %145 = bitcast float* %139 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %145, align 4, !alias.scope !17, !noalias !14
  %146 = getelementptr float, float* %139, i64 4
  %147 = bitcast float* %146 to <4 x i32>*
  store <4 x i32> %144, <4 x i32>* %147, align 4, !alias.scope !17, !noalias !14
  br label %148

148:                                              ; preds = %135, %138
  %149 = icmp eq i64 %85, %100
  br i1 %149, label %161, label %150

150:                                              ; preds = %148, %87, %79
  %151 = phi i64 [ %80, %87 ], [ %80, %79 ], [ %101, %148 ]
  %152 = phi float* [ %71, %87 ], [ %71, %79 ], [ %102, %148 ]
  br label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %159, %153 ], [ %151, %150 ]
  %155 = phi float* [ %158, %153 ], [ %152, %150 ]
  %156 = load i32, i32* %81, align 4
  %157 = bitcast float* %155 to i32*
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds float, float* %155, i64 1
  %159 = add nsw i64 %154, -1
  %160 = icmp sgt i64 %159, 0
  br i1 %160, label %153, label %161, !llvm.loop !20

161:                                              ; preds = %153, %148, %69
  %162 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = ptrtoint i32* %163 to i64
  %168 = sub i64 %166, %167
  %169 = icmp sgt i64 %168, 0
  br i1 %169, label %170, label %177

170:                                              ; preds = %161
  %171 = bitcast i32* %163 to i8*
  %172 = and i64 %168, -4
  %173 = icmp ult i64 %168, 4
  %174 = sext i1 %173 to i64
  %175 = shl nsw i64 %174, 2
  %176 = sub i64 %172, %175
  call void @llvm.memset.p0i8.i64(i8* align 4 %171, i8 0, i64 %176, i1 false)
  br label %177

177:                                              ; preds = %170, %161
  ret void

178:                                              ; preds = %1, %178
  %179 = phi %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* [ %185, %178 ], [ %4, %1 ]
  %180 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %180, align 4
  %181 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 0, i32 3
  %182 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 0, i32 8
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 0, i32 7
  store float 0.000000e+00, float* %183, align 4
  %184 = bitcast float* %181 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float -1.000000e+01, float 3.300000e+01, float 0.000000e+00>, <4 x float>* %184, align 4
  %185 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %179, i64 1
  %186 = icmp eq %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %185, %6
  br i1 %186, label %13, label %178
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimatorD2Ev(%"class.webrtc::FullBandErleEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.absl::optional"*, %"class.absl::optional"** %2, align 8
  %4 = icmp eq %"class.absl::optional"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.absl::optional"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast %"class.absl::optional"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %11, align 8
  %13 = icmp eq %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %12, i64 0, i32 0
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = icmp eq float* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint float* %21 to i64
  %25 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = bitcast float** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast float* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint i32* %30 to i64
  %34 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i32* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %28, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous5ResetEv(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 8
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %5, align 4
  %6 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float -1.000000e+01, float 3.300000e+01, float 0.000000e+00>, <4 x float>* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator22UpdateQualityEstimatesEv(%"class.webrtc::FullBandErleEstimator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %12

11:                                               ; preds = %42, %1
  ret void

12:                                               ; preds = %9, %42
  %13 = phi i64 [ %7, %9 ], [ %51, %42 ]
  %14 = phi i64 [ 0, %9 ], [ %49, %42 ]
  %15 = inttoptr i64 %13 to %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*
  %16 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %15, i64 %14, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !12
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %15, i64 %14, i32 3
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %15, i64 %14, i32 0
  %24 = load i8, i8* %23, align 4, !range !12
  %25 = icmp eq i8 %24, 0
  %26 = bitcast i32 %22 to float
  br i1 %25, label %31, label %27

27:                                               ; preds = %19
  %28 = fcmp ogt float %26, 0.000000e+00
  %29 = select i1 %28, i32 %22, i32 0
  %30 = bitcast i32 %29 to float
  br label %31

31:                                               ; preds = %27, %19
  %32 = phi i32 [ %22, %19 ], [ %29, %27 ]
  %33 = phi float [ %26, %19 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %15, i64 %14, i32 1
  %35 = load i8, i8* %34, align 1, !range !12
  %36 = icmp eq i8 %35, 0
  %37 = fcmp olt float %33, 1.000000e+00
  %38 = or i1 %37, %36
  %39 = zext i32 %32 to i64
  %40 = shl nuw i64 %39, 32
  %41 = select i1 %38, i64 %40, i64 4575657221408423936
  br label %42

42:                                               ; preds = %12, %31
  %43 = phi i64 [ %41, %31 ], [ 0, %12 ]
  %44 = phi i64 [ 1, %31 ], [ 0, %12 ]
  %45 = or i64 %44, %43
  %46 = load %"class.absl::optional"*, %"class.absl::optional"** %10, align 8
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %46, i64 %14
  %48 = bitcast %"class.absl::optional"* %47 to i64*
  store i64 %45, i64* %48, align 4
  %49 = add nuw i64 %14, 1
  %50 = load i64, i64* %4, align 8
  %51 = load i64, i64* %6, align 8
  %52 = sub i64 %50, %51
  %53 = sdiv exact i64 %52, 36
  %54 = icmp ult i64 %49, %53
  br i1 %54, label %12, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator6UpdateEN3rtc9ArrayViewIKfLln4711EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::FullBandErleEstimator"* nocapture readonly, float*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView.24"* nocapture readonly byval(%"class.rtc::ArrayView.24") align 8, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0
  %11 = getelementptr inbounds float, float* %1, i64 %2
  %12 = icmp eq i64 %2, 0
  %13 = uitofp i64 %2 to float
  %14 = fmul float %13, 0x4184FCEEE0000000
  %15 = getelementptr inbounds %"class.rtc::ArrayView.24", %"class.rtc::ArrayView.24"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 0
  %20 = shl nsw i64 %2, 2
  %21 = add i64 %20, -4
  %22 = lshr exact i64 %21, 2
  %23 = add nuw nsw i64 %22, 1
  %24 = and i64 %23, 7
  %25 = icmp eq i64 %24, 0
  %26 = icmp ult i64 %21, 28
  br label %81

27:                                               ; preds = %573, %7
  %28 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 1
  %30 = bitcast %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.8"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %80, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator", %"class.webrtc::FullBandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  br label %37

37:                                               ; preds = %67, %35
  %38 = phi i64 [ %33, %35 ], [ %76, %67 ]
  %39 = phi i64 [ 0, %35 ], [ %74, %67 ]
  %40 = inttoptr i64 %38 to %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*
  %41 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %40, i64 %39, i32 2, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !12
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %40, i64 %39, i32 3
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %40, i64 %39, i32 0
  %49 = load i8, i8* %48, align 4, !range !12
  %50 = icmp eq i8 %49, 0
  %51 = bitcast i32 %47 to float
  br i1 %50, label %56, label %52

52:                                               ; preds = %44
  %53 = fcmp ogt float %51, 0.000000e+00
  %54 = select i1 %53, i32 %47, i32 0
  %55 = bitcast i32 %54 to float
  br label %56

56:                                               ; preds = %52, %44
  %57 = phi i32 [ %47, %44 ], [ %54, %52 ]
  %58 = phi float [ %51, %44 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %40, i64 %39, i32 1
  %60 = load i8, i8* %59, align 1, !range !12
  %61 = icmp eq i8 %60, 0
  %62 = fcmp olt float %58, 1.000000e+00
  %63 = or i1 %62, %61
  %64 = zext i32 %57 to i64
  %65 = shl nuw i64 %64, 32
  %66 = select i1 %63, i64 %65, i64 4575657221408423936
  br label %67

67:                                               ; preds = %56, %37
  %68 = phi i64 [ %66, %56 ], [ 0, %37 ]
  %69 = phi i64 [ 1, %56 ], [ 0, %37 ]
  %70 = or i64 %69, %68
  %71 = load %"class.absl::optional"*, %"class.absl::optional"** %36, align 8
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %71, i64 %39
  %73 = bitcast %"class.absl::optional"* %72 to i64*
  store i64 %70, i64* %73, align 4
  %74 = add nuw i64 %39, 1
  %75 = load i64, i64* %30, align 8
  %76 = load i64, i64* %32, align 8
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 36
  %79 = icmp ult i64 %74, %78
  br i1 %79, label %37, label %80

80:                                               ; preds = %67, %27
  ret void

81:                                               ; preds = %573, %9
  %82 = phi i64 [ 0, %9 ], [ %574, %573 ]
  %83 = load i64*, i64** %10, align 8
  %84 = lshr i64 %82, 6
  %85 = getelementptr inbounds i64, i64* %83, i64 %84
  %86 = and i64 %82, 63
  %87 = shl i64 1, %86
  %88 = load i64, i64* %85, align 8
  %89 = and i64 %88, %87
  %90 = icmp eq i64 %89, 0
  %91 = or i1 %90, %12
  br i1 %91, label %557, label %92

92:                                               ; preds = %81
  br i1 %25, label %102, label %93

93:                                               ; preds = %92, %93
  %94 = phi float [ %98, %93 ], [ 0.000000e+00, %92 ]
  %95 = phi float* [ %99, %93 ], [ %1, %92 ]
  %96 = phi i64 [ %100, %93 ], [ %24, %92 ]
  %97 = load float, float* %95, align 4
  %98 = fadd float %94, %97
  %99 = getelementptr inbounds float, float* %95, i64 1
  %100 = add i64 %96, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %93, !llvm.loop !21

102:                                              ; preds = %93, %92
  %103 = phi float [ undef, %92 ], [ %98, %93 ]
  %104 = phi float [ 0.000000e+00, %92 ], [ %98, %93 ]
  %105 = phi float* [ %1, %92 ], [ %99, %93 ]
  br i1 %26, label %134, label %106

106:                                              ; preds = %102, %106
  %107 = phi float [ %131, %106 ], [ %104, %102 ]
  %108 = phi float* [ %132, %106 ], [ %105, %102 ]
  %109 = load float, float* %108, align 4
  %110 = fadd float %107, %109
  %111 = getelementptr inbounds float, float* %108, i64 1
  %112 = load float, float* %111, align 4
  %113 = fadd float %110, %112
  %114 = getelementptr inbounds float, float* %108, i64 2
  %115 = load float, float* %114, align 4
  %116 = fadd float %113, %115
  %117 = getelementptr inbounds float, float* %108, i64 3
  %118 = load float, float* %117, align 4
  %119 = fadd float %116, %118
  %120 = getelementptr inbounds float, float* %108, i64 4
  %121 = load float, float* %120, align 4
  %122 = fadd float %119, %121
  %123 = getelementptr inbounds float, float* %108, i64 5
  %124 = load float, float* %123, align 4
  %125 = fadd float %122, %124
  %126 = getelementptr inbounds float, float* %108, i64 6
  %127 = load float, float* %126, align 4
  %128 = fadd float %125, %127
  %129 = getelementptr inbounds float, float* %108, i64 7
  %130 = load float, float* %129, align 4
  %131 = fadd float %128, %130
  %132 = getelementptr inbounds float, float* %108, i64 8
  %133 = icmp eq float* %132, %11
  br i1 %133, label %134, label %106

134:                                              ; preds = %106, %102
  %135 = phi float [ %103, %102 ], [ %131, %106 ]
  %136 = fcmp ogt float %135, %14
  br i1 %136, label %137, label %557

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 0
  %139 = load float, float* %138, align 4
  %140 = fadd float %139, 0.000000e+00
  %141 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 1
  %142 = load float, float* %141, align 4
  %143 = fadd float %140, %142
  %144 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 2
  %145 = load float, float* %144, align 4
  %146 = fadd float %143, %145
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 3
  %148 = load float, float* %147, align 4
  %149 = fadd float %146, %148
  %150 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 4
  %151 = load float, float* %150, align 4
  %152 = fadd float %149, %151
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 5
  %154 = load float, float* %153, align 4
  %155 = fadd float %152, %154
  %156 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 6
  %157 = load float, float* %156, align 4
  %158 = fadd float %155, %157
  %159 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 7
  %160 = load float, float* %159, align 4
  %161 = fadd float %158, %160
  %162 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 8
  %163 = load float, float* %162, align 4
  %164 = fadd float %161, %163
  %165 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 9
  %166 = load float, float* %165, align 4
  %167 = fadd float %164, %166
  %168 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 10
  %169 = load float, float* %168, align 4
  %170 = fadd float %167, %169
  %171 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 11
  %172 = load float, float* %171, align 4
  %173 = fadd float %170, %172
  %174 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 12
  %175 = load float, float* %174, align 4
  %176 = fadd float %173, %175
  %177 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 13
  %178 = load float, float* %177, align 4
  %179 = fadd float %176, %178
  %180 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 14
  %181 = load float, float* %180, align 4
  %182 = fadd float %179, %181
  %183 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 15
  %184 = load float, float* %183, align 4
  %185 = fadd float %182, %184
  %186 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 16
  %187 = load float, float* %186, align 4
  %188 = fadd float %185, %187
  %189 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 17
  %190 = load float, float* %189, align 4
  %191 = fadd float %188, %190
  %192 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 18
  %193 = load float, float* %192, align 4
  %194 = fadd float %191, %193
  %195 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 19
  %196 = load float, float* %195, align 4
  %197 = fadd float %194, %196
  %198 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 20
  %199 = load float, float* %198, align 4
  %200 = fadd float %197, %199
  %201 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 21
  %202 = load float, float* %201, align 4
  %203 = fadd float %200, %202
  %204 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 22
  %205 = load float, float* %204, align 4
  %206 = fadd float %203, %205
  %207 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 23
  %208 = load float, float* %207, align 4
  %209 = fadd float %206, %208
  %210 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 24
  %211 = load float, float* %210, align 4
  %212 = fadd float %209, %211
  %213 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 25
  %214 = load float, float* %213, align 4
  %215 = fadd float %212, %214
  %216 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 26
  %217 = load float, float* %216, align 4
  %218 = fadd float %215, %217
  %219 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 27
  %220 = load float, float* %219, align 4
  %221 = fadd float %218, %220
  %222 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 28
  %223 = load float, float* %222, align 4
  %224 = fadd float %221, %223
  %225 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 29
  %226 = load float, float* %225, align 4
  %227 = fadd float %224, %226
  %228 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 30
  %229 = load float, float* %228, align 4
  %230 = fadd float %227, %229
  %231 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 31
  %232 = load float, float* %231, align 4
  %233 = fadd float %230, %232
  %234 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 32
  %235 = load float, float* %234, align 4
  %236 = fadd float %233, %235
  %237 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 33
  %238 = load float, float* %237, align 4
  %239 = fadd float %236, %238
  %240 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 34
  %241 = load float, float* %240, align 4
  %242 = fadd float %239, %241
  %243 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 35
  %244 = load float, float* %243, align 4
  %245 = fadd float %242, %244
  %246 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 36
  %247 = load float, float* %246, align 4
  %248 = fadd float %245, %247
  %249 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 37
  %250 = load float, float* %249, align 4
  %251 = fadd float %248, %250
  %252 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 38
  %253 = load float, float* %252, align 4
  %254 = fadd float %251, %253
  %255 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 39
  %256 = load float, float* %255, align 4
  %257 = fadd float %254, %256
  %258 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 40
  %259 = load float, float* %258, align 4
  %260 = fadd float %257, %259
  %261 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 41
  %262 = load float, float* %261, align 4
  %263 = fadd float %260, %262
  %264 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 42
  %265 = load float, float* %264, align 4
  %266 = fadd float %263, %265
  %267 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 43
  %268 = load float, float* %267, align 4
  %269 = fadd float %266, %268
  %270 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 44
  %271 = load float, float* %270, align 4
  %272 = fadd float %269, %271
  %273 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 45
  %274 = load float, float* %273, align 4
  %275 = fadd float %272, %274
  %276 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 46
  %277 = load float, float* %276, align 4
  %278 = fadd float %275, %277
  %279 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 47
  %280 = load float, float* %279, align 4
  %281 = fadd float %278, %280
  %282 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 48
  %283 = load float, float* %282, align 4
  %284 = fadd float %281, %283
  %285 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 49
  %286 = load float, float* %285, align 4
  %287 = fadd float %284, %286
  %288 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 50
  %289 = load float, float* %288, align 4
  %290 = fadd float %287, %289
  %291 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 51
  %292 = load float, float* %291, align 4
  %293 = fadd float %290, %292
  %294 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 52
  %295 = load float, float* %294, align 4
  %296 = fadd float %293, %295
  %297 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 53
  %298 = load float, float* %297, align 4
  %299 = fadd float %296, %298
  %300 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 54
  %301 = load float, float* %300, align 4
  %302 = fadd float %299, %301
  %303 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 55
  %304 = load float, float* %303, align 4
  %305 = fadd float %302, %304
  %306 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 56
  %307 = load float, float* %306, align 4
  %308 = fadd float %305, %307
  %309 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 57
  %310 = load float, float* %309, align 4
  %311 = fadd float %308, %310
  %312 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 58
  %313 = load float, float* %312, align 4
  %314 = fadd float %311, %313
  %315 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 59
  %316 = load float, float* %315, align 4
  %317 = fadd float %314, %316
  %318 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 60
  %319 = load float, float* %318, align 4
  %320 = fadd float %317, %319
  %321 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 61
  %322 = load float, float* %321, align 4
  %323 = fadd float %320, %322
  %324 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 62
  %325 = load float, float* %324, align 4
  %326 = fadd float %323, %325
  %327 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 63
  %328 = load float, float* %327, align 4
  %329 = fadd float %326, %328
  %330 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 %82, i32 0, i64 64
  %331 = load float, float* %330, align 4
  %332 = fadd float %329, %331
  %333 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %15, align 8
  %334 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 0
  %335 = load float, float* %334, align 4
  %336 = fadd float %335, 0.000000e+00
  %337 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 1
  %338 = load float, float* %337, align 4
  %339 = fadd float %336, %338
  %340 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 2
  %341 = load float, float* %340, align 4
  %342 = fadd float %339, %341
  %343 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 3
  %344 = load float, float* %343, align 4
  %345 = fadd float %342, %344
  %346 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 4
  %347 = load float, float* %346, align 4
  %348 = fadd float %345, %347
  %349 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 5
  %350 = load float, float* %349, align 4
  %351 = fadd float %348, %350
  %352 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 6
  %353 = load float, float* %352, align 4
  %354 = fadd float %351, %353
  %355 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 7
  %356 = load float, float* %355, align 4
  %357 = fadd float %354, %356
  %358 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 8
  %359 = load float, float* %358, align 4
  %360 = fadd float %357, %359
  %361 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 9
  %362 = load float, float* %361, align 4
  %363 = fadd float %360, %362
  %364 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 10
  %365 = load float, float* %364, align 4
  %366 = fadd float %363, %365
  %367 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 11
  %368 = load float, float* %367, align 4
  %369 = fadd float %366, %368
  %370 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 12
  %371 = load float, float* %370, align 4
  %372 = fadd float %369, %371
  %373 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 13
  %374 = load float, float* %373, align 4
  %375 = fadd float %372, %374
  %376 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 14
  %377 = load float, float* %376, align 4
  %378 = fadd float %375, %377
  %379 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 15
  %380 = load float, float* %379, align 4
  %381 = fadd float %378, %380
  %382 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 16
  %383 = load float, float* %382, align 4
  %384 = fadd float %381, %383
  %385 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 17
  %386 = load float, float* %385, align 4
  %387 = fadd float %384, %386
  %388 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 18
  %389 = load float, float* %388, align 4
  %390 = fadd float %387, %389
  %391 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 19
  %392 = load float, float* %391, align 4
  %393 = fadd float %390, %392
  %394 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 20
  %395 = load float, float* %394, align 4
  %396 = fadd float %393, %395
  %397 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 21
  %398 = load float, float* %397, align 4
  %399 = fadd float %396, %398
  %400 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 22
  %401 = load float, float* %400, align 4
  %402 = fadd float %399, %401
  %403 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 23
  %404 = load float, float* %403, align 4
  %405 = fadd float %402, %404
  %406 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 24
  %407 = load float, float* %406, align 4
  %408 = fadd float %405, %407
  %409 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 25
  %410 = load float, float* %409, align 4
  %411 = fadd float %408, %410
  %412 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 26
  %413 = load float, float* %412, align 4
  %414 = fadd float %411, %413
  %415 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 27
  %416 = load float, float* %415, align 4
  %417 = fadd float %414, %416
  %418 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 28
  %419 = load float, float* %418, align 4
  %420 = fadd float %417, %419
  %421 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 29
  %422 = load float, float* %421, align 4
  %423 = fadd float %420, %422
  %424 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 30
  %425 = load float, float* %424, align 4
  %426 = fadd float %423, %425
  %427 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 31
  %428 = load float, float* %427, align 4
  %429 = fadd float %426, %428
  %430 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 32
  %431 = load float, float* %430, align 4
  %432 = fadd float %429, %431
  %433 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 33
  %434 = load float, float* %433, align 4
  %435 = fadd float %432, %434
  %436 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 34
  %437 = load float, float* %436, align 4
  %438 = fadd float %435, %437
  %439 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 35
  %440 = load float, float* %439, align 4
  %441 = fadd float %438, %440
  %442 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 36
  %443 = load float, float* %442, align 4
  %444 = fadd float %441, %443
  %445 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 37
  %446 = load float, float* %445, align 4
  %447 = fadd float %444, %446
  %448 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 38
  %449 = load float, float* %448, align 4
  %450 = fadd float %447, %449
  %451 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 39
  %452 = load float, float* %451, align 4
  %453 = fadd float %450, %452
  %454 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 40
  %455 = load float, float* %454, align 4
  %456 = fadd float %453, %455
  %457 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 41
  %458 = load float, float* %457, align 4
  %459 = fadd float %456, %458
  %460 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 42
  %461 = load float, float* %460, align 4
  %462 = fadd float %459, %461
  %463 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 43
  %464 = load float, float* %463, align 4
  %465 = fadd float %462, %464
  %466 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 44
  %467 = load float, float* %466, align 4
  %468 = fadd float %465, %467
  %469 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 45
  %470 = load float, float* %469, align 4
  %471 = fadd float %468, %470
  %472 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 46
  %473 = load float, float* %472, align 4
  %474 = fadd float %471, %473
  %475 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 47
  %476 = load float, float* %475, align 4
  %477 = fadd float %474, %476
  %478 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 48
  %479 = load float, float* %478, align 4
  %480 = fadd float %477, %479
  %481 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 49
  %482 = load float, float* %481, align 4
  %483 = fadd float %480, %482
  %484 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 50
  %485 = load float, float* %484, align 4
  %486 = fadd float %483, %485
  %487 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 51
  %488 = load float, float* %487, align 4
  %489 = fadd float %486, %488
  %490 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 52
  %491 = load float, float* %490, align 4
  %492 = fadd float %489, %491
  %493 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 53
  %494 = load float, float* %493, align 4
  %495 = fadd float %492, %494
  %496 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 54
  %497 = load float, float* %496, align 4
  %498 = fadd float %495, %497
  %499 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 55
  %500 = load float, float* %499, align 4
  %501 = fadd float %498, %500
  %502 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 56
  %503 = load float, float* %502, align 4
  %504 = fadd float %501, %503
  %505 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 57
  %506 = load float, float* %505, align 4
  %507 = fadd float %504, %506
  %508 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 58
  %509 = load float, float* %508, align 4
  %510 = fadd float %507, %509
  %511 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 59
  %512 = load float, float* %511, align 4
  %513 = fadd float %510, %512
  %514 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 60
  %515 = load float, float* %514, align 4
  %516 = fadd float %513, %515
  %517 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 61
  %518 = load float, float* %517, align 4
  %519 = fadd float %516, %518
  %520 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 62
  %521 = load float, float* %520, align 4
  %522 = fadd float %519, %521
  %523 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 63
  %524 = load float, float* %523, align 4
  %525 = fadd float %522, %524
  %526 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %333, i64 %82, i32 0, i64 64
  %527 = load float, float* %526, align 4
  %528 = fadd float %525, %527
  %529 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %16, align 8
  %530 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %529, i64 %82
  %531 = tail call zeroext i1 @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous6UpdateEff(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %530, float %332, float %528)
  br i1 %531, label %532, label %557

532:                                              ; preds = %137
  %533 = load i32*, i32** %17, align 8
  %534 = getelementptr inbounds i32, i32* %533, i64 %82
  store i32 100, i32* %534, align 4
  %535 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %16, align 8
  %536 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %535, i64 %82, i32 2
  %537 = bitcast %"class.absl::optional"* %536 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = trunc i32 %538 to i8
  %540 = icmp eq i8 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %532
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

542:                                              ; preds = %532
  %543 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %535, i64 %82, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %544 = load float, float* %543, align 4
  %545 = load float*, float** %18, align 8
  %546 = getelementptr inbounds float, float* %545, i64 %82
  %547 = load float, float* %546, align 4
  %548 = fsub float %544, %547
  %549 = fmul float %548, 0x3FA99999A0000000
  %550 = fadd float %547, %549
  store float %550, float* %546, align 4
  %551 = load float*, float** %18, align 8
  %552 = getelementptr inbounds float, float* %551, i64 %82
  %553 = load float, float* %552, align 4
  %554 = load float, float* %19, align 4
  %555 = fcmp olt float %553, %554
  %556 = select i1 %555, float %554, float %553
  store float %556, float* %552, align 4
  br label %557

557:                                              ; preds = %81, %134, %542, %137
  %558 = load i32*, i32** %17, align 8
  %559 = getelementptr inbounds i32, i32* %558, i64 %82
  %560 = load i32, i32* %559, align 4
  %561 = add nsw i32 %560, -1
  store i32 %561, i32* %559, align 4
  %562 = load i32*, i32** %17, align 8
  %563 = getelementptr inbounds i32, i32* %562, i64 %82
  %564 = load i32, i32* %563, align 4
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %573

566:                                              ; preds = %557
  %567 = load %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"** %16, align 8
  %568 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %567, i64 %82, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %568, align 4
  %569 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %567, i64 %82, i32 3
  store float 0.000000e+00, float* %569, align 4
  %570 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %567, i64 %82, i32 8
  store i32 0, i32* %570, align 4
  %571 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %567, i64 %82, i32 7
  store float 0.000000e+00, float* %571, align 4
  %572 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %567, i64 %82, i32 6
  store float 0.000000e+00, float* %572, align 4
  br label %573

573:                                              ; preds = %557, %566
  %574 = add nuw i64 %82, 1
  %575 = icmp eq i64 %574, %4
  br i1 %575, label %27, label %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous6UpdateEff(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 7
  %5 = load float, float* %4, align 4
  %6 = fadd float %5, %2
  store float %6, float* %4, align 4
  %7 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 6
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %1
  store float %9, float* %7, align 4
  %10 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %14, label %62

14:                                               ; preds = %3
  %15 = fcmp ogt float %6, 0.000000e+00
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  store i32 0, i32* %10, align 4
  store float 0.000000e+00, float* %4, align 4
  store float 0.000000e+00, float* %7, align 4
  br label %62

17:                                               ; preds = %14
  %18 = fdiv float %9, %6
  %19 = fadd float %18, 0x3F50624DE0000000
  %20 = tail call float @_ZN6webrtc15FastApproxLog2fEf(float %19) #10
  %21 = bitcast float %20 to i32
  %22 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast i8* %22 to i64*
  %24 = zext i32 %21 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, 1
  store i64 %26, i64* %23, align 4
  store i32 0, i32* %10, align 4
  store float 0.000000e+00, float* %4, align 4
  store float 0.000000e+00, float* %7, align 4
  %27 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 4
  %28 = load float, float* %27, align 4
  %29 = fadd float %28, 0xBF3A36E2E0000000
  store float %29, float* %27, align 4
  %30 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = fcmp olt float %29, %20
  %32 = select i1 %31, float* %30, float* %27
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast float* %27 to i32*
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 5
  %37 = load float, float* %36, align 4
  %38 = fadd float %37, 0x3F3A36E2E0000000
  store float %38, float* %36, align 4
  %39 = fcmp olt float %20, %38
  %40 = select i1 %39, float* %30, float* %36
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast float* %36 to i32*
  store i32 %42, i32* %43, align 4
  %44 = bitcast i32 %34 to float
  %45 = bitcast i32 %42 to float
  %46 = fcmp ogt float %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %17
  %48 = fsub float %20, %45
  %49 = fsub float %44, %45
  %50 = fdiv float %48, %49
  br label %51

51:                                               ; preds = %47, %17
  %52 = phi float [ %50, %47 ], [ 0.000000e+00, %17 ]
  %53 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 3
  %54 = load float, float* %53, align 4
  %55 = fcmp ogt float %52, %54
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = fsub float %52, %54
  %58 = fmul float %57, 0x3FB1EB8520000000
  %59 = fadd float %54, %58
  br label %60

60:                                               ; preds = %51, %56
  %61 = phi float [ %59, %56 ], [ %52, %51 ]
  store float %61, float* %53, align 4
  br label %62

62:                                               ; preds = %3, %16, %60
  %63 = phi i1 [ true, %60 ], [ false, %16 ], [ false, %3 ]
  ret i1 %63
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous17ResetAccumulatorsEv(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 8
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc21FullBandErleEstimator4DumpERKNSt3__110unique_ptrINS_13ApmDataDumperENS1_14default_deleteIS3_EEEE(%"class.webrtc::FullBandErleEstimator"* nocapture, %"class.std::__1::unique_ptr"* nocapture dereferenceable(8)) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc21FullBandErleEstimator17ErleInstantaneous4DumpERKNSt3__110unique_ptrINS_13ApmDataDumperENS2_14default_deleteIS4_EEEE(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture readonly, %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousC2ERKNS_20EchoCanceller3Config4ErleE(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture, %"struct.webrtc::EchoCanceller3Config::Erle"* nocapture readonly dereferenceable(32)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !12
  store i8 %5, i8* %3, align 4
  %6 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::Erle"* %1, i64 0, i32 7
  %8 = load i8, i8* %7, align 1, !range !12
  store i8 %8, i8* %6, align 1
  %9 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 8
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %12, align 4
  %13 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float -1.000000e+01, float 3.300000e+01, float 0.000000e+00>, <4 x float>* %13, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneousD2Ev(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous12UpdateMaxMinEv(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 4
  %3 = load float, float* %2, align 4
  %4 = fadd float %3, 0xBF3A36E2E0000000
  store float %4, float* %2, align 4
  %5 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !12
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp olt float %4, %11
  %13 = select i1 %12, float* %10, float* %2
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast float* %2 to i32*
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 5
  %18 = load float, float* %17, align 4
  %19 = fadd float %18, 0x3F3A36E2E0000000
  store float %19, float* %17, align 4
  %20 = fcmp olt float %11, %19
  %21 = select i1 %20, float* %10, float* %17
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %17 to i32*
  store i32 %23, i32* %24, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FullBandErleEstimator17ErleInstantaneous21UpdateQualityEstimateEv(%"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 4
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 5
  %5 = load float, float* %4, align 4
  %6 = fcmp ogt float %3, %5
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !12
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %14, %5
  %16 = fsub float %3, %5
  %17 = fdiv float %15, %16
  br label %18

18:                                               ; preds = %12, %1
  %19 = phi float [ %17, %12 ], [ 0.000000e+00, %1 ]
  %20 = getelementptr inbounds %"class.webrtc::FullBandErleEstimator::ErleInstantaneous", %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* %0, i64 0, i32 3
  %21 = load float, float* %20, align 4
  %22 = fcmp ogt float %19, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = fsub float %19, %21
  %25 = fmul float %24, 0x3FB1EB8520000000
  %26 = fadd float %21, %25
  br label %27

27:                                               ; preds = %18, %23
  %28 = phi float [ %26, %23 ], [ %19, %18 ]
  store float %28, float* %20, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{i8 0, i8 2}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !8}
!20 = distinct !{!20, !8}
!21 = distinct !{!21, !10}
