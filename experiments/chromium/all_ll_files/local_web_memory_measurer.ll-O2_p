; ModuleID = '../../third_party/blink/renderer/core/timing/measure_memory/local_web_memory_measurer.cc'
source_filename = "../../third_party/blink/renderer/core/timing/measure_memory/local_web_memory_measurer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.171", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.178" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LocalWebMemoryMeasurer" = type { %"class.v8::MeasureMemoryDelegate", %"class.blink::Persistent", i32, %"class.WTF::String" }
%"class.v8::MeasureMemoryDelegate" = type { i32 (...)** }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::MeasureMemoryController"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::MeasureMemoryController" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type { %"class.v8::Local", i64 }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.performance_manager::mojom::blink::WebMemoryUsage" = type { i64 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.performance_manager::mojom::blink::WebMemoryAttribution", i32, [4 x i8] }>
%"class.performance_manager::mojom::blink::WebMemoryAttribution" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.197" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* }
%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry" = type { %"class.mojo::InlinedStructPtr.200", %"class.WTF::Vector.202" }
%"class.mojo::InlinedStructPtr.200" = type <{ %"class.performance_manager::mojom::blink::WebMemoryUsage", i32, [4 x i8] }>
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::StructPtr.210" = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* }
%"class.performance_manager::mojom::blink::WebMemoryMeasurement" = type { %"class.WTF::Vector.214", %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEmm = comdat any

$_ZNSt3__14swapIN19performance_manager5mojom5blink20WebMemoryAttributionEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN19performance_manager5mojom5blink20WebMemoryAttributionaSERKS2_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEmm = comdat any

@_ZTVN5blink22LocalWebMemoryMeasurerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LocalWebMemoryMeasurer"*)* @_ZN5blink22LocalWebMemoryMeasurerD2Ev to i8*), i8* bitcast (void (%"class.blink::LocalWebMemoryMeasurer"*)* @_ZN5blink22LocalWebMemoryMeasurerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::LocalWebMemoryMeasurer"*, %"class.v8::Context"*)* @_ZN5blink22LocalWebMemoryMeasurer13ShouldMeasureEN2v85LocalINS1_7ContextEEE to i8*), i8* bitcast (void (%"class.blink::LocalWebMemoryMeasurer"*, %"class.std::__1::vector.189"*, i64)* @_ZN5blink22LocalWebMemoryMeasurer19MeasurementCompleteERKNSt3__16vectorINS1_4pairIN2v85LocalINS4_7ContextEEEmEENS1_9allocatorIS8_EEEEm to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEPKcv = private unnamed_addr constant [127 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::InlinedStructPtr<performance_manager::mojom::blink::WebMemoryAttribution>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEPKcv = private unnamed_addr constant [123 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<performance_manager::mojom::blink::WebMemoryBreakdownEntry>]\00", align 1

@_ZN5blink22LocalWebMemoryMeasurerC1EPNS_23MeasureMemoryControllerEN19performance_manager5mojom26WebMemoryAttribution_ScopeEN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::LocalWebMemoryMeasurer"*, %"class.blink::MeasureMemoryController"*, i32, %"class.WTF::StringImpl"*), void (%"class.blink::LocalWebMemoryMeasurer"*, %"class.blink::MeasureMemoryController"*, i32, %"class.WTF::StringImpl"*)* @_ZN5blink22LocalWebMemoryMeasurerC2EPNS_23MeasureMemoryControllerEN19performance_manager5mojom26WebMemoryAttribution_ScopeEN3WTF6StringE
@_ZN5blink22LocalWebMemoryMeasurerD1Ev = hidden unnamed_addr alias void (%"class.blink::LocalWebMemoryMeasurer"*), void (%"class.blink::LocalWebMemoryMeasurer"*)* @_ZN5blink22LocalWebMemoryMeasurerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LocalWebMemoryMeasurer16StartMeasurementEPN2v87IsolateEN19performance_manager5mojom25WebMemoryMeasurement_ModeEPNS_23MeasureMemoryControllerENS5_26WebMemoryAttribution_ScopeEN3WTF6StringE(%"class.v8::Isolate"*, i32, %"class.blink::MeasureMemoryController"*, i32, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 40) #11
  %7 = bitcast i8* %6 to %"class.blink::LocalWebMemoryMeasurer"*
  %8 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #12
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %9, %24
  tail call void @_ZN5blink22LocalWebMemoryMeasurerC2EPNS_23MeasureMemoryControllerEN19performance_manager5mojom26WebMemoryAttribution_ScopeEN3WTF6StringE(%"class.blink::LocalWebMemoryMeasurer"* nonnull %7, %"class.blink::MeasureMemoryController"* %2, i32 %3, %"class.WTF::StringImpl"* nonnull %4)
  %27 = icmp ne i32 %1, 0
  %28 = zext i1 %27 to i32
  %29 = bitcast i8* %6 to %"class.v8::MeasureMemoryDelegate"*
  %30 = tail call zeroext i1 @_ZN2v87Isolate13MeasureMemoryENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS1_14default_deleteIS3_EEEENS_22MeasureMemoryExecutionE(%"class.v8::Isolate"* %0, %"class.v8::MeasureMemoryDelegate"* nonnull %29, i32 %28) #12
  %31 = load atomic i32, i32* %10 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %26
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %26
  %39 = phi i32 [ %37, %36 ], [ %35, %26 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %84

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %84

42:                                               ; preds = %5
  %43 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22LocalWebMemoryMeasurerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %6, i64 8
  %45 = bitcast i8* %44 to %"class.blink::MeasureMemoryController"**
  store %"class.blink::MeasureMemoryController"* %2, %"class.blink::MeasureMemoryController"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %6, i64 16
  %47 = bitcast i8* %46 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  %48 = ptrtoint %"class.blink::MeasureMemoryController"* %2 to i64
  switch i64 %48, label %49 [
    i64 0, label %75
    i64 -1, label %75
  ]

49:                                               ; preds = %42
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #12
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #12
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %65, label %68, !prof !2

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %66) #12
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi %"class.blink::PersistentNode"* [ %67, %65 ], [ %63, %56 ]
  %70 = bitcast %"class.blink::PersistentNode"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::PersistentRegion"* %61 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 0
  store i8* %44, i8** %73, align 8
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  store %"class.blink::PersistentNode"* %69, %"class.blink::PersistentNode"** %47, align 8
  br label %75

75:                                               ; preds = %42, %42, %68
  %76 = getelementptr inbounds i8, i8* %6, i64 24
  %77 = bitcast i8* %76 to i32*
  store i32 %3, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %6, i64 32
  %79 = bitcast i8* %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %80 = icmp ne i32 %1, 0
  %81 = zext i1 %80 to i32
  %82 = bitcast i8* %6 to %"class.v8::MeasureMemoryDelegate"*
  %83 = tail call zeroext i1 @_ZN2v87Isolate13MeasureMemoryENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS1_14default_deleteIS3_EEEENS_22MeasureMemoryExecutionE(%"class.v8::Isolate"* %0, %"class.v8::MeasureMemoryDelegate"* nonnull %82, i32 %81) #12
  br label %84

84:                                               ; preds = %75, %38, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate13MeasureMemoryENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS1_14default_deleteIS3_EEEENS_22MeasureMemoryExecutionE(%"class.v8::Isolate"*, %"class.v8::MeasureMemoryDelegate"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LocalWebMemoryMeasurerC2EPNS_23MeasureMemoryControllerEN19performance_manager5mojom26WebMemoryAttribution_ScopeEN3WTF6StringE(%"class.blink::LocalWebMemoryMeasurer"*, %"class.blink::MeasureMemoryController"*, i32, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22LocalWebMemoryMeasurerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 0
  store %"class.blink::MeasureMemoryController"* %1, %"class.blink::MeasureMemoryController"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  %10 = ptrtoint %"class.blink::MeasureMemoryController"* %1 to i64
  switch i64 %10, label %11 [
    i64 0, label %37
    i64 -1, label %37
  ]

11:                                               ; preds = %4
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #12
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !2

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #12
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %18 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %7, %"class.blink::PersistentBase"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %9, align 8
  br label %37

37:                                               ; preds = %4, %4, %30
  %38 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 2
  store i32 %2, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %58

48:                                               ; preds = %41
  %49 = zext i32 %47 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %48
  tail call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %48
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %46, align 4
  br label %58

58:                                               ; preds = %41, %56
  %59 = phi i32 [ %57, %56 ], [ %47, %41 ]
  %60 = load atomic i32, i32* %42 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %65 = add i32 %59, -1
  store i32 %65, i32* %64, align 4
  br label %66

66:                                               ; preds = %63, %58
  %67 = phi i32 [ %65, %63 ], [ %59, %58 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %70

70:                                               ; preds = %37, %66, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LocalWebMemoryMeasurerD2Ev(%"class.blink::LocalWebMemoryMeasurer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22LocalWebMemoryMeasurerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LocalWebMemoryMeasurerD0Ev(%"class.blink::LocalWebMemoryMeasurer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink22LocalWebMemoryMeasurerD2Ev(%"class.blink::LocalWebMemoryMeasurer"* %0) #12
  %2 = bitcast %"class.blink::LocalWebMemoryMeasurer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink22LocalWebMemoryMeasurer13ShouldMeasureEN2v85LocalINS1_7ContextEEE(%"class.blink::LocalWebMemoryMeasurer"* nocapture readnone, %"class.v8::Context"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LocalWebMemoryMeasurer19MeasurementCompleteERKNSt3__16vectorINS1_4pairIN2v85LocalINS4_7ContextEEEmEENS1_9allocatorIS8_EEEEm(%"class.blink::LocalWebMemoryMeasurer"* nocapture readonly, %"class.std::__1::vector.189"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.performance_manager::mojom::blink::WebMemoryUsage", align 8
  %5 = alloca %"class.performance_manager::mojom::blink::WebMemoryUsage", align 8
  %6 = alloca %"class.performance_manager::mojom::blink::WebMemoryUsage", align 8
  %7 = alloca %"class.mojo::InlinedStructPtr", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr.200", align 8
  %10 = alloca %"class.mojo::InlinedStructPtr.200", align 8
  %11 = alloca %"class.mojo::InlinedStructPtr.200", align 8
  %12 = alloca %"class.mojo::StructPtr.210", align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %1, i64 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %1, i64 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"** %15, align 8
  %17 = icmp eq %"struct.std::__1::pair.191"* %14, %16
  br i1 %17, label %42, label %18

18:                                               ; preds = %3
  %19 = ptrtoint %"struct.std::__1::pair.191"* %14 to i64
  %20 = getelementptr %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %16, i64 -1, i32 0, i32 0
  %21 = ptrtoint %"class.v8::Context"** %20 to i64
  %22 = sub i64 %21, %19
  %23 = lshr i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %18, %27
  %28 = phi i64 [ %33, %27 ], [ %2, %18 ]
  %29 = phi %"struct.std::__1::pair.191"* [ %34, %27 ], [ %14, %18 ]
  %30 = phi i64 [ %35, %27 ], [ %25, %18 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %29, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, %28
  %34 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %29, i64 1
  %35 = add i64 %30, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %27, !llvm.loop !3

37:                                               ; preds = %27, %18
  %38 = phi i64 [ undef, %18 ], [ %33, %27 ]
  %39 = phi i64 [ %2, %18 ], [ %33, %27 ]
  %40 = phi %"struct.std::__1::pair.191"* [ %14, %18 ], [ %34, %27 ]
  %41 = icmp ult i64 %22, 112
  br i1 %41, label %42, label %220

42:                                               ; preds = %37, %220, %3
  %43 = phi i64 [ %2, %3 ], [ %38, %37 ], [ %246, %220 ]
  %44 = bitcast %"class.mojo::InlinedStructPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false)
  %45 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* nonnull %45) #12
  %46 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 1
  store i32 1, i32* %46, align 8, !alias.scope !5
  %47 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0, i32 0
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #12
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %69, %54, %42
  %72 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %73 = bitcast %"class.WTF::String"* %50 to i64*
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  store i64 %72, i64* %73, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %90

90:                                               ; preds = %71, %86, %89
  %91 = bitcast %"class.mojo::StructPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = call i8* @_Znwm(i64 32) #11, !noalias !8
  %94 = bitcast i8* %93 to %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*
  call void @_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntryC1Ev(%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* nonnull %94) #12, !noalias !8
  %95 = ptrtoint i8* %93 to i64
  %96 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %95, i64* %96, align 8, !alias.scope !8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to %"class.WTF::Vector.202"*
  %99 = getelementptr inbounds i8, i8* %93, i64 28
  %100 = bitcast i8* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds i8, i8* %93, i64 24
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %101, %104
  br i1 %105, label %106, label %128, !prof !2

106:                                              ; preds = %90
  %107 = add i32 %101, 1
  %108 = lshr i32 %101, 2
  %109 = add i32 %107, %108
  %110 = icmp ugt i32 %109, 4
  %111 = select i1 %110, i32 %109, i32 4
  %112 = icmp ugt i32 %111, %107
  %113 = select i1 %112, i32 %111, i32 %107
  %114 = icmp ult i32 %101, %113
  br i1 %114, label %115, label %128, !prof !11

115:                                              ; preds = %106
  %116 = bitcast i8* %97 to %"class.mojo::InlinedStructPtr"**
  %117 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %116, align 8
  %118 = icmp eq %"class.mojo::InlinedStructPtr"* %117, null
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = zext i32 %113 to i64
  %121 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEmm(i64 %120) #12
  %122 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %121, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEPKcv, i64 0, i64 0)) #12
  %123 = ptrtoint i8* %122 to i64
  %124 = bitcast i8* %97 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = udiv i64 %121, 40
  %126 = trunc i64 %125 to i32
  store i32 %126, i32* %103, align 8
  br label %128

127:                                              ; preds = %115
  call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.202"* %98, i32 %113) #12
  br label %128

128:                                              ; preds = %90, %106, %119, %127
  %129 = bitcast i8* %97 to %"class.mojo::InlinedStructPtr"**
  %130 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %129, align 8
  %131 = load i32, i32* %100, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %130, i64 %132, i32 0
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %133) #12
  %134 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %130, i64 %132, i32 1
  store i32 0, i32* %134, align 8
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %133) #12
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %133) #12
  call void @_ZNSt3__14swapIN19performance_manager5mojom5blink20WebMemoryAttributionEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %133, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* nonnull dereferenceable(32) %45) #12
  %135 = load i32, i32* %134, align 4
  %136 = load i32, i32* %46, align 8
  store i32 %136, i32* %134, align 4
  store i32 %135, i32* %46, align 8
  %137 = load i32, i32* %100, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %100, align 4
  %139 = bitcast %"class.mojo::InlinedStructPtr.200"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #12
  %140 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %9, i64 0, i32 0
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Em(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %140, i64 %43) #12
  %141 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %9, i64 0, i32 1
  store i32 1, i32* %141, align 8, !alias.scope !12
  %142 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %92, align 8
  %143 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %142, i64 0, i32 0, i32 1
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %142, i64 0, i32 0, i32 0
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %144) #12
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %144) #12
  %145 = bitcast %"class.performance_manager::mojom::blink::WebMemoryUsage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #12
  %146 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryUsage", %"class.performance_manager::mojom::blink::WebMemoryUsage"* %6, i64 0, i32 0
  %147 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %142, i64 0, i32 0, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %9, i64 0, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %147, align 8
  store i64 %148, i64* %149, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #12
  %151 = load i32, i32* %143, align 4
  %152 = load i32, i32* %141, align 8
  store i32 %152, i32* %143, align 4
  store i32 %151, i32* %141, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %140) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #12
  %153 = call i8* @_Znwm(i64 64) #11, !noalias !15
  %154 = bitcast i8* %153 to %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*
  call void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementC1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"* nonnull %154) #12, !noalias !15
  %155 = ptrtoint i8* %153 to i64
  %156 = getelementptr inbounds i8, i8* %153, i64 12
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds i8, i8* %153, i64 8
  %160 = bitcast i8* %159 to i32*
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %158, %161
  br i1 %162, label %173, label %163, !prof !2

163:                                              ; preds = %128
  %164 = bitcast i8* %153 to %"class.mojo::StructPtr"**
  %165 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %164, align 8
  %166 = zext i32 %158 to i64
  %167 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %165, i64 %166
  %168 = bitcast %"class.mojo::StructPtr"* %167 to i64*
  %169 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %169, align 8
  %170 = load i64, i64* %96, align 8
  store i64 %170, i64* %168, align 8
  store i64 0, i64* %96, align 8
  %171 = load i32, i32* %157, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %157, align 4
  br label %175

173:                                              ; preds = %128
  %174 = bitcast i8* %153 to %"class.WTF::Vector.214"*
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.214"* nonnull %174, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %8) #12
  br label %175

175:                                              ; preds = %163, %173
  %176 = bitcast %"class.mojo::InlinedStructPtr.200"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #12
  %177 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %10, i64 0, i32 0
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Em(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %177, i64 0) #12
  %178 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %10, i64 0, i32 1
  store i32 1, i32* %178, align 8, !alias.scope !18
  %179 = getelementptr inbounds i8, i8* %153, i64 48
  %180 = getelementptr inbounds i8, i8* %153, i64 56
  %181 = bitcast i8* %180 to i32*
  store i32 0, i32* %181, align 8
  %182 = bitcast i8* %179 to %"class.performance_manager::mojom::blink::WebMemoryUsage"*
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %182) #12
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %182) #12
  %183 = bitcast %"class.performance_manager::mojom::blink::WebMemoryUsage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #12
  %184 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryUsage", %"class.performance_manager::mojom::blink::WebMemoryUsage"* %5, i64 0, i32 0
  %185 = bitcast i8* %179 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %10, i64 0, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %185, align 8
  store i64 %186, i64* %187, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #12
  %189 = load i32, i32* %181, align 4
  %190 = load i32, i32* %178, align 8
  store i32 %190, i32* %181, align 4
  store i32 %189, i32* %178, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #12
  %191 = bitcast %"class.mojo::InlinedStructPtr.200"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #12
  %192 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %11, i64 0, i32 0
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Em(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %192, i64 0) #12
  %193 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %11, i64 0, i32 1
  store i32 1, i32* %193, align 8, !alias.scope !21
  %194 = getelementptr inbounds i8, i8* %153, i64 32
  %195 = getelementptr inbounds i8, i8* %153, i64 40
  %196 = bitcast i8* %195 to i32*
  store i32 0, i32* %196, align 8
  %197 = bitcast i8* %194 to %"class.performance_manager::mojom::blink::WebMemoryUsage"*
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %197) #12
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* %197) #12
  %198 = bitcast %"class.performance_manager::mojom::blink::WebMemoryUsage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #12
  %199 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryUsage", %"class.performance_manager::mojom::blink::WebMemoryUsage"* %4, i64 0, i32 0
  %200 = bitcast i8* %194 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.mojo::InlinedStructPtr.200", %"class.mojo::InlinedStructPtr.200"* %11, i64 0, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #12
  %204 = load i32, i32* %196, align 4
  %205 = load i32, i32* %193, align 8
  store i32 %205, i32* %196, align 4
  store i32 %204, i32* %193, align 8
  call void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"* nonnull %192) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #12
  %206 = getelementptr inbounds %"class.blink::LocalWebMemoryMeasurer", %"class.blink::LocalWebMemoryMeasurer"* %0, i64 0, i32 1, i32 0, i32 0
  %207 = load %"class.blink::MeasureMemoryController"*, %"class.blink::MeasureMemoryController"** %206, align 8
  %208 = bitcast %"class.mojo::StructPtr.210"* %12 to i64*
  %209 = getelementptr inbounds %"class.mojo::StructPtr.210", %"class.mojo::StructPtr.210"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %155, i64* %208, align 8
  call void @_ZN5blink23MeasureMemoryController19MeasurementCompleteEN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEE(%"class.blink::MeasureMemoryController"* %207, %"class.mojo::StructPtr.210"* nonnull %12) #12
  %210 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %209, align 8
  store %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* null, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %209, align 8
  %211 = icmp eq %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %175
  call void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementD1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"* nonnull %210) #12
  %213 = bitcast %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %210 to i8*
  call void @_ZdlPv(i8* %213) #11
  br label %214

214:                                              ; preds = %212, %175
  %215 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %92, align 8
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %92, align 8
  %216 = icmp eq %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  call void @_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntryD1Ev(%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* nonnull %215) #12
  %218 = bitcast %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %215 to i8*
  call void @_ZdlPv(i8* %218) #11
  br label %219

219:                                              ; preds = %214, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #12
  ret void

220:                                              ; preds = %37, %220
  %221 = phi i64 [ %246, %220 ], [ %39, %37 ]
  %222 = phi %"struct.std::__1::pair.191"* [ %247, %220 ], [ %40, %37 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, %221
  %226 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 1, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %227, %225
  %229 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 2, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, %228
  %232 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 3, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, %231
  %235 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 4, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %236, %234
  %238 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 5, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = add i64 %239, %237
  %241 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 6, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, %240
  %244 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 7, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = add i64 %245, %243
  %247 = getelementptr inbounds %"struct.std::__1::pair.191", %"struct.std::__1::pair.191"* %222, i64 8
  %248 = icmp eq %"struct.std::__1::pair.191"* %247, %16
  br i1 %248, label %42, label %220
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink23MeasureMemoryController19MeasurementCompleteEN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEE(%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.210"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN19performance_manager5mojom5blink14WebMemoryUsageD1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementD1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntryD1Ev(%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::MeasureMemoryController"**
  %5 = load %"class.blink::MeasureMemoryController"*, %"class.blink::MeasureMemoryController"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::MeasureMemoryController"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MeasureMemoryController"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MeasureMemoryController"*
  tail call void @_ZNK5blink23MeasureMemoryController5TraceEPNS_7VisitorE(%"class.blink::MeasureMemoryController"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink23MeasureMemoryController5TraceEPNS_7VisitorE(%"class.blink::MeasureMemoryController"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"*) unnamed_addr #3

declare void @_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntryC1Ev(%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.202"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.mojo::InlinedStructPtr"* [ %24, %14 ], [ %6, %4 ]
  %16 = phi %"class.mojo::InlinedStructPtr"* [ %23, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %17) #12
  %18 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 1
  store i32 0, i32* %18, align 8
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %17) #12
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %17) #12
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN19performance_manager5mojom5blink20WebMemoryAttributionEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %17, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %19) #12
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 1
  %21 = load i32, i32* %18, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %18, align 4
  store i32 %21, i32* %20, align 4
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %19) #12
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 1
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 1
  %25 = icmp eq %"class.mojo::InlinedStructPtr"* %24, %10
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %4
  %27 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #12
  br label %65

28:                                               ; preds = %2
  %29 = zext i32 %1 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEmm(i64 %29) #12
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEPKcv, i64 0, i64 0)) #12
  %32 = udiv i64 %30, 40
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = bitcast %"class.mojo::InlinedStructPtr"* %35 to i8*
  br label %60

43:                                               ; preds = %28
  %44 = bitcast i8* %31 to %"class.mojo::InlinedStructPtr"*
  br label %45

45:                                               ; preds = %43, %45
  %46 = phi %"class.mojo::InlinedStructPtr"* [ %55, %45 ], [ %35, %43 ]
  %47 = phi %"class.mojo::InlinedStructPtr"* [ %54, %45 ], [ %44, %43 ]
  %48 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 0, i32 0
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %48) #12
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 0, i32 1
  store i32 0, i32* %49, align 8
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %48) #12
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionC1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %48) #12
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN19performance_manager5mojom5blink20WebMemoryAttributionEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %48, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %50) #12
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 0, i32 1
  %52 = load i32, i32* %49, align 4
  %53 = load i32, i32* %51, align 4
  store i32 %53, i32* %49, align 4
  store i32 %52, i32* %51, align 4
  tail call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %50) #12
  %54 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 1
  %55 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 1
  %56 = icmp eq %"class.mojo::InlinedStructPtr"* %55, %39
  br i1 %56, label %57, label %45

57:                                               ; preds = %45
  %58 = bitcast %"class.WTF::Vector.202"* %0 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %41, %57
  %61 = phi i8* [ %59, %57 ], [ %42, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #12
  %62 = bitcast %"class.WTF::Vector.202"* %0 to i64*
  store atomic i64 %33, i64* %62 monotonic, align 8
  %63 = trunc i64 %32 to i32
  %64 = getelementptr inbounds %"class.WTF::Vector.202", %"class.WTF::Vector.202"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %60, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink20WebMemoryAttributionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN19performance_manager5mojom5blink20WebMemoryAttributionEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32), %"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32)) local_unnamed_addr #9 comdat {
  %3 = alloca %"class.performance_manager::mojom::blink::WebMemoryAttribution", align 8
  %4 = bitcast %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %3, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #12
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %39
  tail call void @llvm.trap() #12
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %49, %34, %29
  %52 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %3, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #12
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %51, %56, %71
  %74 = tail call dereferenceable(32) %"class.performance_manager::mojom::blink::WebMemoryAttribution"* @_ZN19performance_manager5mojom5blink20WebMemoryAttributionaSERKS2_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32) %1) #12
  %75 = call dereferenceable(32) %"class.performance_manager::mojom::blink::WebMemoryAttribution"* @_ZN19performance_manager5mojom5blink20WebMemoryAttributionaSERKS2_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* %1, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* nonnull dereferenceable(32) %3) #12
  call void @_ZN19performance_manager5mojom5blink20WebMemoryAttributionD1Ev(%"class.performance_manager::mojom::blink::WebMemoryAttribution"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.performance_manager::mojom::blink::WebMemoryAttribution"* @_ZN19performance_manager5mojom5blink20WebMemoryAttributionaSERKS2_(%"class.performance_manager::mojom::blink::WebMemoryAttribution"*, %"class.performance_manager::mojom::blink::WebMemoryAttribution"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %1, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %66, %51, %46
  %69 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %70 = bitcast %"class.WTF::String"* %47 to i64*
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #12
  br label %87

87:                                               ; preds = %68, %83, %86
  %88 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0, i64 0, i32 3
  %89 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryAttribution", %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %1, i64 0, i32 3, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #12
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %97
  tail call void @llvm.trap() #12
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %87
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"class.WTF::String"* %88 to i64*
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #12
  br label %128

128:                                              ; preds = %109, %124, %127
  ret %"class.performance_manager::mojom::blink::WebMemoryAttribution"* %0
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Em(%"class.performance_manager::mojom::blink::WebMemoryUsage"*, i64) unnamed_addr #3

declare void @_ZN19performance_manager5mojom5blink14WebMemoryUsageC1Ev(%"class.performance_manager::mojom::blink::WebMemoryUsage"*) unnamed_addr #3

declare void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementC1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.214"*, %"class.mojo::StructPtr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !11

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"* %0, i32 %22) #12
  %36 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !11

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"* %0, i32 %50) #12
  %64 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !24

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEPKcv, i64 0, i64 0)) #12
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !25

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* null, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #12
  %149 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN19performance_manager5mojom5blink23WebMemoryBreakdownEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN19performance_manager5mojom5blink20WebMemoryAttribution3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN19performance_manager5mojom5blink20WebMemoryAttribution3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntry3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN19performance_manager5mojom5blink23WebMemoryBreakdownEntry3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJRmEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJRmEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN19performance_manager5mojom5blink20WebMemoryMeasurement3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZN19performance_manager5mojom5blink20WebMemoryMeasurement3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJiEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJiEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJiEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZN19performance_manager5mojom5blink14WebMemoryUsage3NewIJiEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!24 = distinct !{!24, !4}
!25 = distinct !{!25, !4}
