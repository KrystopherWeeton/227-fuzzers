; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_localemgr.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_localemgr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i16 }
%class.CXFA_LocaleMgr = type <{ %class.LocaleMgrIface, %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.cppgc::internal::BasicMember.9", %"class.pdfium::Optional", i8, i8, i16, [4 x i8] }>
%class.LocaleMgrIface = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %"class.cppgc::Heap"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"*, %"class.std::__1::__compressed_pair" }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.cppgc::internal::BasicMember.3"* }
%"class.cppgc::internal::BasicMember.9" = type { %"class.cppgc::internal::MemberBase" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.cppgc::Heap" = type { i32 (...)** }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.18", %"class.pdfium::span.20", i32, %"class.fxcrt::UnownedPtr.22", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.17", %"class.std::__1::vector.23", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.31" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.15", %"class.cppgc::internal::BasicMember.16" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.14", i64 }
%"class.fxcrt::UnownedPtr.14" = type { i8* }
%"class.cppgc::internal::BasicMember.15" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.16" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.17" }
%"class.pdfium::span.18" = type { %"class.fxcrt::UnownedPtr.19", i64 }
%"class.fxcrt::UnownedPtr.19" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.20" = type { %"class.fxcrt::UnownedPtr.21", i64 }
%"class.fxcrt::UnownedPtr.21" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.22" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.17" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.cppgc::internal::BasicMember.17"*, %"class.cppgc::internal::BasicMember.17"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.cppgc::internal::BasicMember.17"* }
%"class.cppgc::internal::BasicMember.30" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.31" = type { %"class.cppgc::internal::MemberBase" }
%class.GCedLocaleIface = type { %class.LocaleIface }
%class.LocaleIface = type { i32 (...)** }
%"class.cppgc::AllocationHandle" = type opaque
%class.CXFA_NodeLocale = type { %class.GCedLocaleIface, %"class.cppgc::internal::BasicMember.17" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CXFA_XMLLocale = type { %class.GCedLocaleIface, %"class.std::__1::unique_ptr.33", %"class.fxcrt::UnownedPtr.37" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_XMLDocument* }
%class.CFX_XMLDocument = type opaque
%"class.fxcrt::UnownedPtr.37" = type { %class.CFX_XMLElement* }
%class.CFX_XMLElement = type opaque
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i8* }
%"class.pdfium::span.60" = type { %"class.fxcrt::UnownedPtr.61", i64 }
%"class.fxcrt::UnownedPtr.61" = type { i8* }
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.39", %"class.cppgc::internal::BasicMember.40", %"class.cppgc::internal::BasicMember.41", %"class.std::__1::unique_ptr.42", %"class.std::__1::map", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.39" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.40" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.41" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }

$_ZN5cppgc8internal14FinalizerTraitI15GCedLocaleIfaceE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI15GCedLocaleIfaceE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI15GCedLocaleIfaceE7GetNameEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI15CXFA_NodeLocaleE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI14CXFA_XMLLocaleE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI15GCedLocaleIfaceE5IndexEvE16registered_index = comdat any

@_ZTV14CXFA_LocaleMgr = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_LocaleMgr*)* @_ZN14CXFA_LocaleMgrD2Ev to i8*), i8* bitcast (void (%class.CXFA_LocaleMgr*)* @_ZN14CXFA_LocaleMgrD0Ev to i8*), i8* bitcast (%class.GCedLocaleIface* (%class.CXFA_LocaleMgr*)* @_ZN14CXFA_LocaleMgr12GetDefLocaleEv to i8*), i8* bitcast (%class.GCedLocaleIface* (%class.CXFA_LocaleMgr*, %"class.fxcrt::WideString"*)* @_ZN14CXFA_LocaleMgr15GetLocaleByNameERKN5fxcrt10WideStringE to i8*)] }, align 8
@_ZN12_GLOBAL__N_113g_zhCN_LocaleE = internal constant [794 x i8] c"x\9C\EDVAO\D4@\14\BE\9B\F8\1F\9AFRMXF\8F\90\D2d\03\08\06\BB!\96h\E0b\BA\ED\B0-l;d\B6\0DnO\18\82\82\C2E\89\9A\80\E1d<(\9E\8C\01\22\F1\CF\B0\CB\91\BF\E0\9B\ED\B4\B4\DD\D9\B5?\C0=\CD\FB\DE\F7}\F3\DE\EBt\B6j\93Xf\13K\BE\E9\E1I9r\9EO\D5d\C9\C6-kR\BE<=\E9~x}\F7\EA\C7\E6\E5\C5\FB\EB\DF{\10w\0E/\EE\C9\9A\CA\14\BEmR\A3\ED\D5I\B3\C5\C5\0D\8A\1B\84\BA\A6\0F\0C\8F\F8\81S\03\B8\C5\D7\DA\E5\E9f\F7hGEqt\FBV\02\9F\EF\09\E1\D3]\11\DC9<\14\9B\1C\08\D9\DB'b\EF-1\FB\9B\90}\F6Y\C8\DE\7F9\00\1E\D0(\CB\14{E\991%\C4^$\99\F5:\9D\94\1F\C8\FF\A7Wzz\B6\D9\E6\07\0EVZ\F7\D3q\F7\E8\B8\FB\F1\8B\8AX\18\E79\0A{\88\D0\F3=!wW\80\C2$\85\0E\07\22\EE\F6I\8A\A2\B4\C8L\C1\99\87\DDS\15j.V[\AC\B3Xa\B1\B6bU\03\EB\F10um\17{\C9k\CBC\D8\E0Mg\9F\0D>\012\5CH\BE\EDK\A2\BC\13 \98\9A\DC\15VP\C1\F7\CE\F6Vgw_E,\8C\F3\1CM!\94jXP\B8q\E2^\02\BC`\06\01\A6~\EF\99\A7\11\BF\8EV\C2fS\D6\96\E0\A7t\CE~*\BA\02\A7G\99V`\BC\CA\0C\FCX\EF\A9\A4\E0\C7\1D\9A\C4o\0Cp(\A1\F6\B0\1D\8B+ze\BA\04\BF\E5\10\1A0\85\90\8Fr\ED\02\10\B8^\A6\FDL\94k\BF\EA8P\EF/E\D7\95\CE\CE+\C50\94\AB\AF\EF\14iYE\19E\C1.\D7\BD\D8\A0\84\BC\D7>\A8't}\C20J\08x\FFU\A6\E8\A3\A3\5C\BB|~\8B\80%\07b\D6\F4W\D7\E6\BC\9613\FDp\E3\D9\0Bg>Z\8Eg\96%\81\CE\0F\BD:\A67\83\CB\C5\BC\12\C0\E0\00[\B2\16\8DF\D1\F8X\14E*\CA\F1\FA\8C\B8\D0\0A)\C5\BE\D5\96\B5;\B1t|\BC\A4r\1DS\0B\FB\01\DFrD\A0B\85\CAS\A3\A4\B9\5C\C8mml\B9\9E\09\E7`,\D1\C7\E9\A2:\FD\07'\E1\BA\CB\1E\FBh)~Z\F5H)\BA\E7\FAaK\D6*\A5\C8\11\A6D\D6\EE\F7sQ\BEm@\92\B1\A7\93\C8\03\C9\F9\EA\05\B2v\FD\07\EE\D7<\A3\DF\84k\DC\16a\0BY\9B\AA-\95\16e\87\DE/A\C5j\D9\CB\D0^\C7+\A6\C5\EE\C7d\C9\BD\AA6\A9c\C9\80WQ2\02[z,\A3,\9F\93\F46|u\D9\D2\02\0CL\98v}\97\F8\03\D3S$\A4.\A6\CC_\98\8FKXp\FFA\98\C3u\8A7\86\10\AA\D4\AC\C3K5\98\B0\E8\98\AE0=O\A2p\CD\94fI\E0\B8\16\EB\A3\F2\F4\91\A4\0F\A3B\CB\96C\12\EA\93!\9B\02s\D8h9\A9\1D\FA\8DU\D2\E3\F1}\D1\CD3cQ\FC\15\0D\CB\BF\C0\E4=@", align 16
@_ZN12_GLOBAL__N_113g_zhTW_LocaleE = internal constant [812 x i8] c"x\9C\EDW\CDO\D4@\14?c\E2\FF0i \D5\04\A8\1E!\A5\C9\C6E0XB\ECF\22\173\DB\0E\DB\C2\B6Cf\DB\C0\F6$\12\14\14b\A2\C4\8F\80\E1d<(\89\07\0F,Q\FF\1Av9\FA/8\D3/\FA\B1\B3\D4\C4\A3{\9A\F7\DE\EF\F7\E6\BD\DF\BC}\D9\95\9BX\87M\04\1Ch\A3)\C17\1F\D7\16\05`\A0\96>%\9C\9F\9E\F4\DE>\BFq\D1\D9<\FF\F9\E6\F7\8F\BD\EE\ABo\BD\CE\AF\9B\82r\FD\1A\002c9\06$Z\DB\AE\E3f+J\D0 \A8\81\89\05\1D\86\1A\02\B2\8D\1D\D7\9C\A7\A1\16\B3\87B[9?}\D2;\DA\91\A5\D0J\07\CE\F68\81\D3\DD\FE\81\EE\E1!/\D5\01\87\B1}\C2\BBc\8B\C7\F8\C2at>r\18\FB\9B\DC\00\B7y\16\CB\F7\0F\A2s\22aZR\00\EBu2%\DC\16\FEk\FB\8F\B45`;5\AC\D4Rz\EF\8F{G\C7\BDw\9Fd\89\999?\BD\AF\BF\FFl\8F\83\DF\ED\EB\A7Js\F2\1C\F4\C7o\9F$~\10\9C\FA4\91\1B\8F\80]\E8\A3\D8A\B1\F6b\D5\C5z\8B\95\0E\AC\D1F\C42,d\A7WC\E4\A2\D7\BD\E8\EE\B3\87\8A\1D\F9\F0\CBB\18\5C\9A\A9K\10\81\A9\FC\D4\A25}\EDnouw\F7e\89\999\7F\E2\04\C1)\E6\D2e'\E5\B6]\E85\A0\8B\16\A0\EB\22\E2$\D2'\9Eh!.{\CD\A6\A0<\A2\1F\B1\DB\F9.\AA\22\9DA\B1*\D2\87\10\A7\E9\87\E9\92Px9\9A\D8ipr\94\E2\DB\C8\08\E9\92*UK1Z&&.\9F\03@\C6\13\C9\E1ZvN\8E\94'#G\C54\C5\DE\87\A7\A2\AA\8A\DD\9Dg\A2\A6\89\17\9F_\8B`I\96R\0C^\8AP\8D\FE)J%\08\E4\A8\00sRU'5\AD\14%\D2#$\E5\19L\8D\5C\EF\D1p\D4\A87\9E\98\19\E8\AC\AC\CE\DA-m\BAzw}q\C3\9C\F3\97B\11\D3\A0\80\E9xv\1D\91\AC\92\19_T\14\F5\D1\99\D7\05\C5\1F\F5\FD\89q\DF\F7e)\83\E3Su\8F\10\E4\E8mA\19\0E\C9\13\13\A5\B9k\88\E8\C8q\A3kG\8A<\A6G\A1\87\A4\AF\CBV\87\B2\AE(\BD\81t\CB\86tH\C6\E3,a\98Kh\10\EC\ADYl&FK2\92\0EFJ\12l\CB\F1Z\822V\12\EE#\82\05\E5V\01})L\E6\BD\E3\C7\C8(\93u\C6c\18\18\822_\1B\A6+)\83\18\C0\B2Z\98\1D\04\A5\B6X\FD\0BZ\FA!\0A\A4`'\16\EAfK\A0\BD\86\96\A1\1E\AF\E0\D8\8CrV\0C\5CG@\A5\AF\054\D7\00\F7\05\A9/Lm\D3\9F\90\06X\A02r\00\96cag\00\E0\0E\F6\88\85\08\BB\85\83\08KY\B0\AE\84\CC\A2:A\EB\03!\15\02\EB\F4\8B8\08R3\A1\C5\01\CCa\DF[\85`\06\BB\A6\A5\B3\9E\C6\1E\DE\03\EA`0\15@7q\0C~0\F0j\0D_!w\F4*m\CFi\AC\E0\00\19\DE\1E,\B6\D4{\CAR\F8gA\F9\03\11\C2J\C9", align 16
@_ZN12_GLOBAL__N_113g_zhHK_LocaleE = internal constant [865 x i8] c"x\9C\A5WMO\13A\18>c\E2\7F\98l \0B\09P\8A\9F%\CB&D\90\9AZC,\D1\C8\C5lw\87\EEBw\87L\B7\C1n<\88\04\A5Z.JT\02\86xP\0FH\BCxh\89\C6?C\8B\9E\FC\0B\CE\EC\17\FB5m\8D=\CD\FB\BC\CF\F3\CE\FB>3;\01\A1\8Cd\A9\0C\81!\E9p\9A\B3\D4\87\D9\1C\07\14X\91\A7\B9\D3\E6q\E7\CD\F3\E1\B3\D6\C6\E9\8F\D7\7F\BE7~\7F\DA\EB4\BF\9E\D5[\ED\ED\A3_\1F\1A\9D\DD\9F\ED\C6\C9\08'^\BC\00\80@\8B\18\8A\84\0B5\BD\88\CA\15\B7^\09\C3\12\C2\9AdP\D6\00\10td\98\EA\1D\92\AA\D0x\C0\89\C5\D3\E6\93\CE\C1\B6\90r\A2`\E2\A4\C1H4\EB\C9\89\F6\FE>\AB\D4.C\B1u\CC\DAc\93\A58b(Z\EF\19\8A\9D\0Df\829<\CDE\E7\07\EE\DA\B70h)\90\8AE<\CD\A5\B9`\95tr\F1\C9d\F8R2|9\19\BE\92\0C_M\86\AF%\C3\D7\93\E1L2\9C\9E`\E0\8C9\D3\93=\0DT\A4Z\E0F\92H\EC\BC;\EC\1C\1Cv\DE~\14R4\8C\E0\E4\C0\92\F1\93\06\83_O\C4\C9Ue\D4\D9M\E6o\1D\FB8\B0W\09CD\EE\80\AD\8E\CD\11\9F \DE{\BC\EBx\BF\F1N\BB\F6\A8C\AC)\1A\D4\83\DF\BF\0B\91\ED^\B4w\E8Ay@4\FD2\96\06\E7a`\13\88\A5@}\12\91\9E\BE\B4\B76\DB\F5\1D!E\C3\08\EE\83\C0^yZ\F2\A2\A5\22O\9A\83*\92\09\17$\D3\84\D8\F0\AD\F7\11\F7\D5[\AE\96\CB\9C\F8\80\FC\F8v\EB\1B\9F\E7\C9\1D\E4gyr\10<\98#?j\8C\AFa\15)#\A3\C4(\D2\97^\87\CA\FF\C8+*\C2&-\D0S\0E@\08q}25=\E2S\00\09\F94\A3\AA|g\EF)\9F\CF\F3\ED\EDg|\A1\C0\9F}~\C5\83%!\15P\B0J8.%\97\E8\AB\80m\13\D1O\E5\F3S\85B_\12\D7\9A\19\AA\89\0A\A8\19\91\D1\DDK\B3HP\EF&\CDK\C6\CAjV\AF\14\E6fo\AE\DF\7F\A4\E6\AC%\C7\C3 \C9V\1AU\BD\08q\D8\C8\10\E6\F6D0\F2-\C8\9Ch\8DZVf\DC\B2,!\15\E2\B1\A5r\15ch\C85N\1Ct\C4\99\CC\E3a\7F9\D2w\9D5\88eh\98n\0BCq\1D\F5&6\8F?\E3\F9\D8\03a\C8-\AF@Y\D3%r_\C6\BD*N\9A)(aT]\D3\E8\F5\18\EDS\E1O0\D4\A7@\D7\8Cj\85\13\C7\FA\A4[\10#N\9C\88\B1\CF\8D\09\9D\BDw0!g\C2\A0w#\ED\80\13\B3\B9A\F2l\85\18]TZ\05\D1\05\95\CD\FE\83,x\101\91\FDn\C6\FA\A6\EFAm\0D.K\B2\F7L{\A1[sFAE\08\F2\E4\B4@\C1T\C0m.\95H\CB\D7\C8\DF\92\0AX 62\08\9A\A1!\A3\0B\E1\06\AAb\0Db\BA\0B\83\E1\B4\B2\A0\F5\A4da\11\C3\F5\AE\94\19,\15\C9G\D9\8D\B2\A8J\1A\83\90CVuU\02\F3\C8T5\99\CE4v\EF\16\C8w'\13\03d\15y\E4\BB]\B7.\A0\1Ev\BB\A7R\AB\1A\A5\15d3\9D\DD\EDG.p\9EB\CA\F9'B\FC\0B\D9\0EK\ED", align 16
@_ZN12_GLOBAL__N_113g_jaJP_LocaleE = internal constant [790 x i8] c"x\9C\EDV\CBn\D3@\14]\17\89\7F\18Y \83\D4\D6\0D\EFV\AE\A5\8A\96\86\16\A3\08W\A0v\83&\F64\996\9E\A9&\B6J\BC\E2! Ht\01\1B\04DbU@\02\04\8Bn\D8\D0\AFIZV\FC\023~\C5\8E\ED\E0\EE\F1\22\99{|\CE\F5\BD\E7\8EGV[\D4\84-\04\08\B4\D1\BC\B4\05\EF\AF\D4$`\A1\B69/\0D\DE\EC\1F\7F\FFv\8E\FF\0Dz_\CFK\DA\E9S\00\A8\82L,\C8\8C\8E]\A7\ADv\A8k0\D4\A0\0CC\22X\13@\B5)q\9A\B7\F9\AD\B6\88'\82X\AB\0Cz]U\09\D6\09\F8B>|1\1F\BE\94\0F_\CE\87\AF\E4\C3W\F3\E1k\F9\F0l>\5C\99)\C0\0B\FA\AC\8C4\0A\C2u\ECS\D27\00\EBu6/U\A4\FF\06\9E\C4@\0Bv\12\DB\8EG\9A\D8\BE\EF{\FCWUD8\C4{\DD\5C\FC\E8\D1\97|\FE\8F\83\82<\9Fs\F1\DF\CF_\E5\E2\FD\DE\87\11\1C\F8\AB\9C&F\F6@\D8M\B6\8Fl\07\D9\DA\B3Ug\EB\CDVZ\5C\A3\8D\18\B60\B2\93/y\08i\FD\BDn\FF\C5\1E\1FN\04do\FFz\99\BE\0D\86a\E2!\88\C1D~\1EiG\07\0F\FBO\9F\F8\D9E\18\E3\C7\FB\87\83w\1Fc\10\F8\ABH\CB\8F-e\E4\DC\0AP\0B:\A8\06\1D\071\12[\1F#\E1\D1\B6\E9\B6Z\92\B6\CE/\B9\FF\F3@\D6en\B8\BC(\F3A\C8K\FC\12\BE\C4\92\A2\1C-J\1A\059J\E9md\05rE\D7\95\C5\C5R\9Av\932G\A8\F25\00\A4\90\D0\10\07\DB#\86$\90\94!Uy\F0\F6\B1\AC\EBr\BF\FBL6\0C\F9\E8\D3kyCU\12\F4\22}`FuN\D7\E7\0Cc\AE\9C\C67 \94\94\12\84\DD\0B\C9(_t>\D2g\B8\15\D68\1A\ED\8FeH\B6\B6\ABv\DBXZ\BC\B1{\EFAs\D5\DB\08\0CK\92|%q\ED:bi\D7RXX\12\C7\F8\0E7%\CD\9B\F4\BC\D9i\CF\F3T%\C5+\96\9A.c\88\98\1DI;\E3\8BK\0Bw\103\11q\C2g\9E\CD\EA\84\19\99\06\E2\A6\86}N\A4\A10\BD\85LlC\BE\1B\A6\A3,\C1\EDBA\83Qw\07\8B\F9O\96T\C4\1D\9C-)\B01q\DB\926U\92\EE!F%m&\C3\1E\1A\93\1Av4\89\943i0\DA\81~ i\7F\0E\F9\89\9Df\8CQ\E16\15\0BI[\A9\AD\9F@\96\1CDF\E4\1F\7F\99\BA\C5\DB\DE\D9A\9B\D0\8CN\DB(\0Cs\AER\CF\DD\86`\99:Ml\82\1A\A3Swo\02]R\C6\91uL\CC&\8D\C8w\0A\C8z\87\7F*Z\82UD\C0\04S2\86p\9D\BA\0C#\06\0C\C7*`,X\B4\8E@\0D\FF\93REu\86v\C7R\16\18\AC\F3\17w\1Ce\AD\09\F1X\02o\A9!j\01\B7\C6\D2\0CZ\8A\A6w\5C\D2\D8\A2>3\18\89\7F\AA%\E6\A9*\C1\87\BD\F6\17lB\08!", align 16
@_ZN12_GLOBAL__N_113g_koKR_LocaleE = internal constant [808 x i8] c"x\9C\EDVMk\D4@\18>W\F0?\0C\C1\12\85v\B7\EBwK\1A(nme\8D\94\A6X\ECEf\93\E9&\ED&S&\09us\AER\F0\E2\A1\87\EAn\B1\07\11*\88\22\22\1E\14\7F\8Dbm\8A\7F\C1\C9\E7\E6c\B2M\EF\EEa\99\F7\99\E7y\F3\BE\CFL^\22t\B1\02\BB\08\98\D0@\B3\DC&~\DCZ\E6\80\8A,e\96\FB588\FE4\F8\FD\E1\FD\E5\E3\D7G?\FB\DF\AFp\E2\C5\0B\00\08>\DFT!\91{F\1Bw\ADH\DA!\A8\83\89\0EM\9F5\06\04\03\9B\B6\F6\80nY~<\16\C6b\C3\EB\EF\09\F5p\9D\82\AF\B2\E1kl\F8:\1B\BE\C1\86o\B2\E1[l\F86\1B\9Ef\C3\8D\A9\12\BC\A4\CFF\AEQ\10\AD\13\9F\D2\BE\01\D8n\93Y\AE\C1\FD7\F0<\06\AA\B0\97\BAv4\12\BD\83o\DE\AB=\FA/\D4\FDp\88\F7\F7\98\F8\E9K6\EE\ED\EE3\F1\93wGL\FC\CF\D7]v\FEg\879\1C\04+F\13\B9;\10uS\EC\A3\D8A\B1\F6b\D5\C5z\8B\95\96\D7h \A2\AB:2\D2/y\04\89\DE\FE\1B\EFp\87\1EN\0C\14\B6O\FB\B9m0\0CS\0FA\04\A6\F2\D3\88V\F9\D1\EB\BF\08\B2\FBa\82{;\03\BA\95\80 X\C5Z:\B6\EA\B9\B9\15\A2*\B4\D1\12\B4mD\CC\C4\FA\04\89F\DB\BA\D3\EDr\E2#\FA\E3O\9E\EE\F0@\E2\A9\E3<h\F2\F4(x0O\7F\BE5\89\AA,M\17\9B\9D\D24\952\18H\0D\13\D4\80$\D5@\B3YIei\98\D8\BE\AEL\05@\06\89\9C\B1u#\E7L\0A\C983\074\8D\F7\9E\0FhK\12\7F\F2\85\B6&\CB\BC\F7y\97\07kB=%*\CB\12\1AS\9A\A5R\8E\C0\1A\9AbF\92fd\B9\92$\F2%\14\E5\15\BE'9\07\A2\DB\B2B\D1\F8\0A-@scs\D1\B0\E4\F9\E6\DD\ED\D5'Z\CB]\0B\ADL\93\02\A5\E9\18mD\B2~f\B0\A8(\8A\D1\97@\E1Dw\C2u\A7k\AE\EB\0A\F5\0C\AF\5C\AA8\84 S\E9q\E2\A5@\5CY\B8\85\88\82L;z\E6xQ\E7\9BQh ij\D8\E7X\16\8A\D2\ABH\D1\0DH\EFI-\CE\12n\97\0A:\04;[\BA\7F'&**\92\0E\C6+\0A\0C\DDt,N\9C\ACHw\11\C1\9C8U`\0F\8D\C9\1Cv|\12\19g\B2`|\07\83\80\13\FF\FExK\07T\861B\A5[\D8_pbky\F5\1C\B2\F4A\14D\C1\84,\D4\ED\CF\81\DE\16Z\87J<\90\E30\CA9\A7\E26\02R\CF1;\1B\18\C8\B6\0A$\AE\CEdJ=\FAu\A8\82%\EAd\09A7ul\8E \DC\C1\0E\D1\11\F1\9FR\C2\08\ABY\D2\CF\A4,\A26A\DB#)s\04\B6\E9\8B8\8A\B2\A2A\BD\84\D0\C2\AE\B3\09\C1\02\B65]\F1{\9A|x\AF\D4\9A\88L\0DP4\1C\93\97G>\9Ar;\81\DD\F7G\D2d\9C\A1\05S-u\9EB=\FC\FC\17\FF\01\DC\F1\18\D3", align 16
@_ZN12_GLOBAL__N_113g_enGB_LocaleE = internal constant [758 x i8] c"x\9C\95V\D1n\D30\14}G\E2\1F\A2\88I m3<n\EA,u\EB\D62\C8\A8H\C5\C4^\90\9Bx\8DYbWN\CC\94\FC\02\9F\C0#\CF\08\F1\01\BC\F0/H\FB\0Cn\1A'K\1C\AFdy\89\EF\B9\E7\DC\DE{\9C\B8\19\C5\22 1u8I\E8\91K\F9\A7\E9\B1\EB\844\0D\8E\DC\BB\AF\BF\EE~\FEx\0E\B7\BF\DF~\BFp\F1\A8$\F2\90H?O\96\22N\B5f%\E9JHF80\12\C1\B3\E8\02\E0T\AF\F19\E1\8A\C8|\84\AA\F0\E9\13\8D\9F\D1\A5\B4&<\22\83\A8\87\8E\D7\92\C5\16n_\7F\AE8\B5\80q\9F9V+\95f=\D8\A7\EB\8C&K*{\99wA&l\F8\85\F8b\17Lh`&P\CB\A2\9A\B7\89\1C\B2\5C\CA#\F7\95\DBr\CE\E6\9A\CD0\9B]C\CD\B2ye\B3\CA\E6\93\CD!\9B;6c\1E\F6$$\B9~\84`\85}\05\8F\1Ct^\AE\AB$\F6D\0FZ(\9A\9A\D8%\0Dy\1F]DJ\F6\C03\C9L\C8'\99\92m\105}\B5zl\ED\9An\D6\EC\D4l\D3l\D1l\CE\EC\CBl\CA\DEOBa\02F\93\FA\DD\D3!\1E{\E0n\1D\B4xxn$P\B7\02 T\12]\0DV\F8\F8d\84\CA{\95\C0\E3I\13\A2\86X\06\C6\19Q5\9E\D19\C92*\F9fO\9BH\1F \D7*\8E]|\0A\D7\AE3q<\B8\9C\8Fp\95\036T\A3\8EV\C6\82\AF\5C\FC8MBC-\19\AAH#!3\D0L\90\E7!\AB\06uF\04 cIk\E4V\D4\19y6;\F4\BCC\DFw\AEF\A8\C51\0Atf}\94d3j\AD\18\C0\D7\83n\14=:\EA\CC\A4\8DZ\00V\EF\F44\F7\C2\9BY\92\FA\A7\93\B3\DBK\12\BD)\AE*c\DA$\D0qU\1E\89\F7\EEtb\DD\09`\F08\06..v\8B\E2`\BF(\8A\11\EA\F0z\85\B40PRR\1E\E4.~VI\0F\0E\06*\D7T\06\94g\FA'w,*dt\DE\14\AA\87\EB\84\BAlH\03\96\10\D8\EC\FDZ_\A5Mu\F3g*\D4\9A\95;\BD;\88\DFt\BD3\88\9E0\AER\17\EF\0D\22\17T\0A\17\BF\ECsQwl@j\DB\1B'\BA@\FD|m\02\17\FF\F9\0E\E7D\87\D0\AF\A1%,\15\E5\C2\C5\D3\E3\F9`Q\DB\F3\BE\04\99\CD\96\EFB\BE\A6\D7$(\0F\BBz\A9ky9|\DA\84\CE\1C\AC@mf\9Df\9C\09\FE`\FAD(\C9\A8t\FC,\B4\E6\C7!|P8s\F6\1F\C2\0C>\96\E8\ED\16\C2X\92%\BC.\0F\13\16\11a\D6\F4\1BQ\A8\1B\E2LE\16\B1\A0\9Cc\EF\C3k\C7\DBF\85\91\83H\D4\D4\F7[~\14\98\ABr2\E7\ED\16\92/\06\90\BC\5C\F1\D5g\B1\E1\E9\E6\D0\FD\9E\95Q\F5\19\0B\CB\7F\8Ei\AC\D0", align 16
@_ZN12_GLOBAL__N_113g_esLA_LocaleE = internal constant [804 x i8] c"x\9C\9DV\CDN\DC0\10>S\A9\EF`EE\80\04\9B\F6\B8(DZ\01\A5\15\0DZuQK\B9TNb6\86\C4^9\09h\A3\BE@O=\F4\D4c+!\B5\07\D4G\E8\81gA\F0\18\9D\FCn\12;\E9\D2\9C<\DF|\9Fw\E6\B33\1B\C3\E7\0E\F6\09b8 ;\1A\09?Z'\1ArI\E8\ECh\0F\D7\7F\EE\BF\DC\DC\7F\FE\F6\F0\FBf\FD\EE\C7O\88\EF\BE^oh\E6\D3'\08\19\A9\8A\B9XL\E6\81\CD\FD\B0\D8`*\C8\94\0B\8AY\CAZAF\C0Y\E4\1DA*L\E3\95<6\09#\82\1Bz\1E\D4\F03b\0Bu&\C0\22Q\E1\D8\16\D4W\F2\E7*\FAy\CC\A8\1A\F7\958\9E\F20R%B2\8B(\09\A0\5CE\92;Q\AC\CE0~\D9\A9r\A9#\E5P\B1\AE\1C\AC;\8A\B0m\8B\1D\ED\85\D6\B2Vm\AC\DAT\B5\A5jC\D5~\AA\DDT{\A96R\ED\A0\DA=\B5o\FD\8E\B9x^\BB\81\10\99.\0F(K\CBI\83\0A\F5cF\C2\16\06\16E2Ho\7F\09\87\FBR\E2<&\97\12\08'.\E4\8D\C3\DB\EF6v\17%\A0l\A5\A8\BAu\CAE\F9r\E9r\E1\8A\AA\E5z\E5b\15\85vW\19\10A]\B8\B6\F5W\BC\80\CC\91\05gQ\06\CD\D4\B8\95B\8B\B0\B69\11\B8\B6/D&\1E\EC\0E\0C=]U\90[\87P\B6*E0\A5\F4\D6\98\CAQ\17Gd\8C\A3\08\0E\A6r\BBB\8AIv\16\FB\BEf\EE\C3\83\F6\D6`\22\A25\0B\9E|\F5\01\9E\D4\89J\D3\B5\89\CF\D9T3\FF_\1F\10\17\E4{\BAe\E9KkB\8F\8Bh\A1jk\10j \85#\11\0DZ\8E\D4\90\86#\9E\B7mY\DB\93\09\1A\A1SC\AF\B1\BAd\B9\07\8F\96e\AD/TKi\8A\D63\95,I;o\F5Y\DC\85c@\CB\0Br\10[\D1\85\17\84\93\FD\BD\97W\EF\B1w\98\9C\E6\86\D5I\99\92\C5\81MD\D3\B5\06VT\05\18\DCmG3\93\CD$\19\0E\92$1\F4\06\AF[\EA\C4B\10\E6\CC5\F3Y.\1E\0E?\ADW\CB\8D\A5\F7\99\11\E1\10\16\15%\AC\CA\BA\D4\1B\A9\9F\AA\C7E\DB+M\A8\D8\DE%\0E\0D0\5C\8EA\B9K\9E\EE\14L\05\8Fg4\BD\17\9BK*\AA\0EV\97\14\C0\84\8FC\CD\DCZ\92\9E\C0w\87f>\97\D8\0Bc\1Ag_\1EL\C3\99&X\DE\C9,\80\03\84Y\D4\C8\F7hh\C8\D3\85fZ'G\8F\90\D5\8FA\12e\C3P\AA:}\F5\E73r\86\9Dr\E8\96a\B1\A75\87\AF9\17\8D\C1\1D]M\A0\F0I\C5z\08\BB<\16\F0\17\88&\91\DB\C1\18\B9\DC&hL\FFIy\95~\1F^\F5RF\02\DB\F0\AE\F5Q\8E=L;\08\87<\89/0:\E0\91G\9D\B4\A7\ADw\AF\91\D5O\06\03\1C\8F\97\E4\B7\BD?\0D\DCi\DA%z\D3K\9B\F0\A5h\D6<f\D3s\9E1\F3\22\B3\11W;OC\CF?\EF\CD\BF\C4\B5\D4\04", align 16
@_ZN12_GLOBAL__N_113g_esES_LocaleE = internal constant [813 x i8] c"x\9C\9DV\CFk\D4@\14\BE\0B\FE\0F!XV\A1\DD\D1c\CB6P\DA\DA\95\1AY\9A\AA\D8\8BL\92\E9\EE\B4\C9\CC2I,\9B\A3\E0A\10\0B\DE\8A'\0F\1E\04\8BwQ<\F4?\11j\EB\C9\7F\C17\9BI6?f\D7`N\F3\BE\F7}/\EF}\93L\D2\0B\B8\87\03b0\1C\92u\93D\CF\B7\1D\D3\F0I\E4\AD\9B\D7\1F\7F\5C\9D\9E_\BD>\BB\FEr~\BB\08\FE|{s\F9\FE\FB\EF\B3W\BF\DE\BE\BB\FCzz\C7\B4z\B2\00\F3\B1p&\A1\CB\83H\D5\1A\0A2\E4\82b\06\8C\90\B3x\F4\08\E0H\AD-\C2\88\E0=\94\057o(\F4\90\B8B\87\87X\A4M\14\BB\82\06\1A\EE\A4I=J\18\D5\A1\81\06\C5C\1E\C5M8\22\E3\98\92\10\1Al\A4\B8\17':\9C\F1\17s\14>\F5\1A\19Tr)'N#\03\BB\AEX7\EF\99%\F3t\D6\E9l\D3\99\A6\B3L\E7\98\CE/\9D[:\ABt\1E\E9\FC\D193\DF\13\1FO\D4S\04+\CB\E7!e\F2\F62\C8\B2V\900\12U\100!\AEC\F4\E2\93\F0xP\83\8F\12\F2\A2\06\C1\FE\89z\C1\E8\E2\83\8B\FD\D9mQ\D1U\A9\C3\D2\9E\A9V\EBm\D6\9BltX\EF\AD\DEX\A3)}G!\11\D4\87\87-\7F\FDThm\D8\E0n\1E\94x\D6\A0\96@\D5\0A\80\10\81U5XY\B8\BB\D9\ED!\B9\CAR\96_\06PA\96A\ED\A8\C8\BA\8F\C9\00\C71\18=\DD\D7\22R\E7\C8a\12\04\A6\B5\0D\97\B1\D5\81\A3\C9\E8\D8pe\ABgp\C9i\0BM\AD\A0*\11p64\AD\FFU\87\C4\07\F1\16\B2m\D4R\11\8D\B8\88g\9A\86\02Uf\06 \A6a\C9\83RT\F1\A0\DF\EF\F4\A1\FD\0E\5C\0E\9C\D2\07=Tb\D6\CAT&\EF\F7\D7l{\CDqZI\A6\E3*A\0B\BA\9AU\0A\1AlT\99KY\B5\0FX\BE\FD;\89\1D\1F\8F\C2\C8\D9\DE\BA\7F\F2\14\8Fv\D3\83\CC\9C2\09t,\09]\22f\0EUb\D5\08`\F0\9Cz\A6\95.\A7\E9j7M\D3\1E\AA\F0\1A\85\94\D0K\84 \CC\9B\E4\CA\D5U\E3VK\E9\98\08\8F\B0X)\974*Tk\BD(\94OW\09UY\9Fx4\C4\B0\E3\CB\B9>K\D7\D5\C5\97\96'c*7\BA\DB\8A_t\BD\D4\8A\0E\87l\12\99\D6J+r\0A\9Fo\D3\BA\DB\E4\A2\EA\D8\80\E4\BE\17NT\81\FC\F9\9A\06\A6\F5\F3\E5g8>*\8Cf\11\A5\A1\11\97\0B85\1E\EF\B5\16\95MoJP\BD[\F92L\C6\E4\10{\F2\1C\CC\97\AA\96=\81\1F\1F\DF\18\80\17\A8\CC\CC\D3\14\FEF\D8\DC\F4&O\04|w\0C'\F6\B5\F9\0D\9F\BB\C4\18\D0\7F\10\FA\F2g\EAd\01aC`\17^\98\F9\84\FD\11\A6\DA\F4.O\93cl\EC\F0xD=9\C7\CA\93\07\86\BD\88\0A#{#\9ES\F7\16\DC\14\98C9\99\F1p\01\C9\E1-H\F6$a\C3#>\E5\A9\E6\D0l\CFd\94\FD\FC\C2\F2/|\DC\CC/", align 16
@_ZN12_GLOBAL__N_114g_deDE_LoacaleE = internal constant [777 x i8] c"x\9C\95VMo\D40\10\BD#\F1\1F\AC\88\AA \B5\1B8\B6\DAFZu\FBAK\CA\AAiA\F4\82\BC\89\BBq\9B\D8+\C7i\B59\F27\B8r\04q\E4\04\17\FE\09R%~\06\93\8D\93&\B6\BB\0D\B9\AC\E7\CD{\B33\CF\89\93a\C2C\9C\10\C4pJv\9C\88|\1C\EF9(\22Y\B8\E3\DC\FD\FA\F1\F7\FB\B7\E7\F0s\F7\F9\E7\0B\C7\1B\96D\16a\11,\D2)O2\A5\99\092\E3\82b\06\8C\943\19\9F\00\9C\A9\B5w\84Y\8E\C5\D0\AD\A2\A7O\14\BCO\A6\C2\86\FB\BF\BF\88\C2@GsA\13\93\8B\A9\81\1D\E5\CC\06&&8\CAgy&\0D8 sI\D2)1[{{-\B9\0D?\E17v\C1\98\14z\C2m\19T\F3\96\11\C2\D3\A9\D8q^9-\DFl\A6\99&\D8\ED\EAk\96\CD+\9BU6\9Fl\0E\D9\DC\B1\19\F3\B0'\11^\A8\1B\08V^\C0\19\93\18\FE\BE\0C\AA\AC\E7s\03\1AS\C22\83G\A5\BC\E5a\DCeBA\22\0C\EE\BE T\C7\02\9Cvxn\D3Z\AB\CD\D6\C6U\FDj\ADjmj\0Dj\ADi-i\DD\D8\1BI\89\A0\11%i\FD\D4\A9\D0\1B\F9\E0l\1D\B4x\DEDK\B8\DD\0A\80\10\81U5Xy7\03\B4\1B\8B\C1\D0-\83*\EB1\0Ds\1BI\19h\E7D5\81$\13,%\11l\B9\B3M\A4\0E\91\CB<I\1Co\0F\AE\0D4\1E \1F.\F4\01\AEr\D6\86\AB\15R\D2\84\B3\99\E3\FD\A7(%\11h\C6\03\DF\1F\F4Td1\17\F2^c(\DC\CE\88\00H\9A\B6FnE\9D\91\0F\B7}\7F\1D\9D\C7\02\AD_\0C\DD\16K+\D1\19\F6\B0Tm\07\01\EA#Y\8EZ+z\F0\D5\A0K\85Aw;S)\A3\CE\00\AB\F7\FA\E0\CA\97\D7\87i\16\EC\8D\F7o\DF\E3\F8\B8\B8\A8\ACi\93@\C7\F2\F2h\BC\F7\A7\13\ABN\00\83[3t\BCb\A3(\B6\06E\01\C7F\87g\14R\C20\17\82\B0pQ+\B7\B6\D0\B3\9E\D29\11!aR)\D7,*Wk\BD)TO\D7\09\9B\17kHS\0C\FB\BDQ\EB\AB\B4\AEn\DE\A9<\9F\D3r\AB\07\BD\F8M\D7k\BD\E8)ey\E6x\9B\BD\C8\05\11\DC\F1^\9A\5C\B7;6 \B5\EF\8D\13]\A0\BE\C1\96\81\E3\FD\F9\F4\15\CE\8A\0E\C3,\A244\E3\E5\02\8E\88\F3\D3\DE\A2\B6\E9\A6\C4\D5\BB-\9F\86\C5\9C\5C\E2\B0<\FA\EA\A5\AA\E5/\E0\13'B\13\F0\C2m3\EB4e\94\B3\07\D3\BB<\17\94\08\14\C8\C8\9A\1FE\F0i\81&\F4\11\C2!|5\91\DB\15\84\91\C0Sx`\1E&\9C\C5\98Z\D3\C7\BC\C8\AF1:\E02\A6a9\C7\E6\BB\D7\C8_E\85\91\C3\98\D7\D4\D3\15\7F\0A\CCY9\19z\B3\82\04o\FA\C7I\FE\22g\B3+\BE\E4\A9\E6\DC\FB=+\A3\EAs\16\96\FF\00)'\AF\17", align 16
@_ZN12_GLOBAL__N_113g_frFR_LocaleE = internal constant [790 x i8] c"x\9C\95VMo\D3@\10\BD#\F1\1FV\16UAj\BDpL\95Z\AA\FA\15(FQS@\F4\826\F66\DE\D4\DE\8D\D6vJ|\E4?p\E2\C2\B5\12\88\03G\C4\85\FE\13$\10?\83q\BCv\ED]'\B8\BEd\E7\CD{\E3\99\B7\F6\C6\FDPx$\A4\88\93\88\EEZ\17\F2\ED\D1\A9\85|\1A{\BB\D6\9Fo\1F\FE~\FD\F2\10~~\7F\FC\F1\C8r\FA9\91\FBD\8E\16\D1X\84\B1\D2L$\9D\08\C9\08\07F$x\12\BC\008VkgJ\F8\9CQ\D9\C7Ex\FF\9E\C2/n\AE\E7\B2-\11\11\19\1B \01n\D8Be\066M\19o\03\C3\90&fYq\F3\DDDc:Kh4\96\D4\C8\08/\11m8\17\F3v\81\7Fs\ED\E9\19\5C3\A9$.#D\C6c\B9k=\B1\EA\DE\D9\ED\CE\99\F0*\DF\DA\98w\B0\CD\94\AF6\CD\E4\82a&\08n\99`\EE\94\BD\DA%\9F,\D4c\05+\C7g\11\E1^\00\AE\E6Q\91v\C2\94\FB\AC\81\80%:B\A5'\A9\06Ni\AA!sx\CC\0DZ\0C\F7\AFA\B8j\A9\D6^m\0BU\9F\B6\DE\A3\AD\B7h\EB\1D\DAzw\B6\DE\9C\AD7f\B7\B7\05\C5\98\CFhT\BE\91*t\F6\5C\F0\B7\0Cj<g\A8%p\B3\02 T\12U\0DV\F0|\D9\E8\99\BD\BD\0F\F7\CF\C3\22\EF\90\99\8E\E2J\96\07\DA9R\CC\91\D0!I\12*\F9r\8F\AB\A8<\98\D20\B4\9CC\B8\D0\01r\E1Bo\E0\CA\A7\AD\98Z\19%\0C\05\9FX\CE\DD4\B0\CFJ\82:\F1\E3@\C8\04\14\07\D8uq\8B\027\A6\03 aQm\DAZ\D4\98v0\D8D\01\DA\84.\CE\FB\B8F\D2*4\06\1D\0Cv\5Cwg4\EA$Y\CEY*:\F0\D5\9CK\85A\C7\8D\A1\94Og\80\95\BB|L\DC\E9\E5 \8AG\87\07GW\AF\DF\05'\D9y\E1L\9D\04:\9EFc*o\EDi\C4\AA\13\C0\E0\C1\F4,'\DB\CA\B2\9E\9DeY\1F7xF!%\F4R))\F7\16\A5\B2\D7C\0F:JgpvP\9E(\E5F\8B\0Ak\ADW\85\CA\E9\1A\A1*\EBS\0FN3\D8\EE\ADR_\A4uu\F5o+\D2\19\CB\B7\FA\E7\A7N\82\AA\ED\8DN\F4\88\F14\B6\9C\EDN\E4\8CJa9\8FM.n\CE\0DHi|eE\13(\9F\B0e`9\BF\DE\7F\86c\A2\C10\8B(\0D\8BE\BE\80\D3\E1\E5igQ\DDuS\82\F5n\F3\D7a1\A3\17\C4\CBO\BEr\A9j\B9\0B\F8\FA\F1\D1\10\BC\C0uf\99f\9C\09\BE2\BD/\D2\FC;\08\8D\12\BF5\BF\E7\8B1EC\F6\1F\C2\80\C2W\C6\D5\1A\C2\9E$cxcV\13\CE\02\C2Z\D3'\22K/\09:\16I\C0\BC|\8E\EDWO\91\BB\8E\0A#{\81(\A9\A7kn\0A\CCI>\19z\BE\864\12\1DH\EE\22\E5\93\A9X\F2Ts\F8v\CF\F2\A8\F8\D2\85\E5?]I\BE\1B", align 16
@_ZN12_GLOBAL__N_113g_itIT_LocaleE = internal constant [776 x i8] c"x\9C\95V\D1j\D4@\14}\17\FC\87!XPh;\FA\D8\92\06J[\BB\A5F\96\EE\AA\D8\17\99d\A6\D9\B1\C9\CC2IZ\92G\F1\C17\7FB\10A\F1#\FC\13\A1\E2gx\B3\99\A4\C9d\BA\A6y\D9\B9\E7\9Ess\EF\99d6n,C\123$H\C2\F6\1C\9E\BD;\99;\88\B24\DCs\FE|\FC|\F3\E5\EB\CD\A7o\7F\7F\FEx\DC\06O\1C\CF\AD\14\82\125+\92@\C6\A9\16G\8AERq\22\80\91H\91-^\02\9C\EA\B5\171!\08\97.\AE\C3\87\0F4~\C1\82@\D9\12\09Q\E5\10%K\C5cf!G\91\A5F\C4\F3H\0C\E18\8Fb\0B\9BD2\CD\86p\CA\B2\8C%\81\1A\DEUf\99\B4\E1B^\D9\05\94\87f\02w\ACjx\AB\08\110f\CFy\E6t\1C\B4\B9g3\CEf\9B\CD3\9Ba6\B7lV\D9|\B29ds\C7f\CC\DD\9EPR\E8G\09V\1E\95\09\13<$.\AE\A2:\0D=\0AF\7F}\EFa\E0C6\04\99\0Ae<\80\E1\E1\B9\1A\80WL0e\82)\09H\F5\90h\08\B7\CDu\1A\EDl\9D\EE\D8l\D6l\D4\EC\D1l\CE\EC\CBl\C9\DE\0F\14\E2\94\B3\A4y\11u\E8\ED\FB`q\13tx\DE\D4H\E0~\05@\98\22\BA\1A\AC<r\E0\E2\EA\B7Nx\F46\C4-\B1\0A\8C\03\A3n<cS\02o\96\12\AB\8Dm#}\9A\5C\E4q\ECxGp\A1C\E4\C3\85\DE\C2U\CD\D72\8D2Z\18K\119\DE\E1\FDD\09\A3\95\06\83\04\8F\12\A4\0B\A92-\B1)po>\002\9Et\E6\EDD\BDy'\93]\DF\DF\9D\CD\D0\B9\8B;\1C\A3@o\D2\FB(Vc6\F7\18\C1\D7S\AE\14\03:\EE\8D\A4]\9A\03\D6\EC\F2q\E1\D3\CBI\92\CE\8E\0E\9F_\BF!\8B\D3\F2\BC\F6\A5K\02\9D\C8\93\80\A9[sz\B1\EE\040x\14C\C7+7\CBrg\BB,K\17\F7x\83BZ\18\E6J1\11\16\8E\F7\08\D5\DA\9D\9D\91\D2%\9C\15Ld\FA\9E\1B\16\156Zo\0B5\D3\F5B]\96\B2\90'\046{\B3\D1\D7iS\DD\FE\AD\CA|\C9\AB\9D\DE\1E\C5o\BB\DE\18EO\B8\C8S\C7\DB\1AE.\99\92\8E\F7t\C8\C5\FD\B1\01i|o\9D\E8\03\CD\03\B6\0A\1C\EF\F7\078e\FB\8Ca\91\E6#%\95\D5\02\0E\87Wg\A3E]\D3\87\12lv[\BD\0D\C5\92]\90\B0:\EA\9A\A5\AE\E5\17\F0\95C\D1\14\BC\C0]f\93\E6\82Kqg\FA@\E6\8A3\85f\19\B5\E6\F7\A9\0C\18\9A\F2\FF\10&\0C\BE#\AE\D7\10\F6\15\09\E0\85\B9\9B0_\10nM\9F\CA2\BF$\E8Xf\0B\1EVsl\BD>A\FE:*\8C\1C.dC=[sS`F\D5d\E8\C5\1A\D2L\8E \F9E.\A2\F7r\C5\D3\CD\E1\DB=\AB\A2\FA\D3\16\96\FF\00 \8B\BE\F7", align 16
@_ZN12_GLOBAL__N_113g_ptBR_LocaleE = internal constant [814 x i8] c"x\9C\9DV=o\D4@\10\AD\83\C4\7FXY\89\0E\A4$\86\92\C8g\E9\92\0B9\94\18\9D\CE\11\884hm\EF\D9\9B\D8\BB\C7\DAN\B0k\1A:()S *D\83DI\91\DF\82\B8\9F\C1\FA\F3\FC\B16\067\DE\99yo=\F3vvd\C5\A5&t\11 \D0Cci\15\BC>\5CH\C0B\BE9\96\D6\1Fo\D7\1F\DE\FD~\FFi\FD\ED\EB\83_?\BE\AF?\FF|(\A9\F7\EF\01\A0$\14bA\A6G\9EA]?g\DB\0C\D9\94aH\12\D4\16P<J\02\E79\0F\F9\89\BD\95\D9\EA%$\083\AA\C8\99Y\89,\D15b\1D1\0F\B2\BB/\A2\004\18v\85\04,\82_\86\C4\11\FB]\A1\1F\DA\D4\0FD\01\1F\05\C83\84\B9\D20\08\C5\11B\AF\BBH\16\8A\9B!\90\AFK\09\AB\92\02h\18l,=\96\1A\DA\8Au\15+*\96S,\A6XK\B1\92b\1D\C5\22\8A\F5\13k'\96\AD_1\0BF\95\16\E4\96jQ\0F\93$\9D\C4(\BD>\B2C\DE\D2{K\DE\80\B0\11\0B\10o>q\E8M\08Y\D0\15\C2\A4#\E4\A3\B7]\91\BB[\03Z\9B\E4@\BA\12\D4\D38\FF\BC\B0vQ\EDR\DA\15\B4\13o\E7+\C8\B3;I\0F1la\E4U/\7F\EER'\1A?\A4\C2\A8\87\E6\8D\10\D8\98\95\CD\11\83\95}\B9\A5\1E\1E)r\F2.\1D\93i\E9\00\E9\AA \F0\D9%7\86W\E6\B5`\80\E60\E0\F2\90R\E8\D2\93\CF\B7e\E8\BA\92z\CC\9F]0\1D\F1)\09F\1A\7F\B2\D5+\FE$2\94\A4\AE]\5CJlI\FD\7F\BE\87,N\9F\CA\9A&\0F\E6\F8\0Ee\C1\86\D5\E4\00P\F3\E4\92\04\D8kHR\F1\D4$\99\CDF\0E/e\C4\EF\D5H\D7G\FE\08\5C(r\05\DC\C5\CE\A4H\C9\19w85Ua6;\D0\B4\03]\1F\C4\C85H9MB\22@\A3\DC\BC'\CE\B9\B7h\94\93H\B3\AEf\9E\AF\1FO\9F\DE\BC\84\CEi|\91\E9V\05\A5L\12z\06bu\F1j\BE<'\EE\E3\FDmJj\BC\1B\C7O\F6\E3\98\0F\B3\1A\AE\9Bj\86\8C!bF\92\BA\0D\0A\F6`\F2\0A1\13\91 \FF\EEN\9B\97\08\D2*\A2,lS\EBV\DD\95oo!\13{\907\C6n\B1K\16\EE$\D8\8C\86+\9C4\C3\FE@FY\C1\CE@\02\EF\AF\D0\97\D4\BD\81\F0\181*\A9\8FZ\E8\8D0\B5\03/N\A3\A6L\DDY\B4ajH\EAb\9BO\A2\1A\A0\87\84}\9A,$\F5pq\F6\0F\B4\EA9\B4H\E9(l\A5\9D\DC\FBh\85\96\D0,\C6ma\E6{j\11\FF\C3\B3\C0\9C\CB#\8B\01\98`Jz\00G4d\181\A0\07V\07bbQ\03\819\FE+d\86\0C\86nz!\13\06\0D~\C3\FA \E7\0E\C4\1D\80S\1A\87W\10\9C\D0\C0\C1fR\D3\DE\8Bg@\EB\07s\01L\87\16\E0E\EF\A79\D6N\AA\04g\BD0\9D\0E\82iQH\ECK\9A\22\B3$\D3\C1V9OE\CE\FE\F7\D5?0\BB\D9\9B", align 16
@_ZN12_GLOBAL__N_113g_nlNL_LocaleE = internal constant [778 x i8] c"x\9C\95VMO\DC0\10=S\A9\FF\C1\8A\8Ah%\96-GP\88\B4\05\0A\15\04\ADX\DA\AA\5C*obv\BD$\F6\CA\89A\C9\B1R\8F\FD'\AD\DA[\FFO\A5J\FC\8C\8E\F3E\12;i\C8\05\CF\9B\F7\BC3\CF\CE\10;\E0\1E\0E\08b8$\07\16\0B>_\9C[\C8'\91w`=|\FB\FD\F7\EB\AF\87\9F?^\E6\ABW\96\F3\FC\19B\B6\E23\1F\8BY\12\CEy\10\15\D2\85 \0B.(f\8A\B5\81\EC\90\B3xy\01\A9H\C5\1By\EC\AC0\93XP{\9C\87\B5\CC\0D\99\8B\8ET\88\B1\88\0D8^\0B\1A\98\F8\C4\B4\CBJ23\1C\98`,\172\8AedHEd\1D\93pN\84!\C7ocn\CE0~\D7%\F2\89\D7N\A1b]\19X7\14\E1\F9\5C\1CX\BBV\CBY\B3\AB&\83\BA\EC|\8A\99f/\CDV\9A]4\FBg\F6\CEl[\BFc>Nj\17\10\22'\E5pq\A1\1A\B5\AE@\B8^\06\D4\A7,\D2\D1{NL\B0\0F\FB\12\A1\E3w\82\AEt4\C5q\93\8C\B2\95\A1\F2\D6I\E7-h\E5k\95kEk\E5juj%v\17\17\12A}J\C2\FA\CB]@\CE\C4\85c(\83fj\DAJ\A1\C7\B0\B69\11\B8\B6/D\CE\9BC{\AC\FEV\C0\E4\A8\02P\B6*\050\9B\C6\AD\E1\94\A3>\18>\C51\B8\CE*\83+\A4\98_72\08,\E7\18\1Et\84\5Cx\D0'xT\EF\15\B3K\1Ap\B6\B0\9C\A7\AAB\E2\83h\04\9A\D1`M\B4\E4\22\CET#]\81P\03)z\8Fi\D8\EA\BD\864z?\DDw\DD\FD\D9l\0BI)\B6\D0\B5=\AE\11\BB\94y\EB\85r\A0&k\BC\90\0C\12\14]+I\9B\AFznuX\9C\F7\15\A0\E5%8I\5C\FF\F64\8Cf\C7Go\EF?\E2\E5Yz\9D[U'eJ&\D5 n\FA\D5\C0\CA\7F\94R\DD]\CFr\D2\ED4\DD\DBI\D3\D4\1E7x\DDRO\0AA\98\97X\CE\0B\94\AB\F7\F6\A2\C1\EA5\11\1Eaq\F1\C3\9B\BAN9\A2uQu\F6\D8\ECF\13*\B6\87\99JC\0C\97a\BB\DC%Ow\0A\16\82\CB5U\97`g\A0\A2\EA`s\A0 \A4LF\963\1AHO\89\E0\96\F3Zc?\1A\D38\F1\F28\1A\CE4\C1\F2\1Af\81\E5\FC\F9\F2\1D\E6L\83\D1\A3\A2\11W\0B\18-\EF/\9F \AB\1F\84&\CA\06\9DV\B7z\D9\935\B9\C1^9L\CB\B0\D8\D3M\E0\FB\CCGS\F0gl&PF9\EB!\1Cr)(\11h\16\FB\1D\8C\89\0F\DF?hJ\FFK9\85\EF=r\DFK\99\08<\87w\AC\8Fr\B5\C4\B4\83p\C6Sy\8B\D1\09\8F\97\D4S=\8D>\BCCn?\19\0C\F0\96\BC$_\F6\FE4p\17\AAKt\DEK\9B\F1A47\91l\B1\E2\193/2\1Bm\B5\F3\B4\C7\F9\A7\BA\F3\0F\D5\FA\C0\FA", align 16
@_ZN12_GLOBAL__N_113g_ruRU_LocaleE = internal constant [890 x i8] c"x\9C\ADWMO\13A\18>c\E2\7F\98l$h\02\AD\1E%e\13\22\0A\06\D7\90\164r1\DB\DD\A1]\E8\EE\90\E9n\B0{*\85\E8\05%\E1\A0G\F4\E4\C9P\BE\12\82\B6$\FE\82\D9\FF`\D4\9F\E1;\FB\D1\EE\B7\C5\D8\1E:\F3>\CF\F3\CE\FB\B5\D3\B6\D4 \8A\DC\C0\C8\90u<#P\EBeyE@*n*3\C2\8F\AB\DD\DFG_n\C3\C7\AF\DE\87\9F\EF\8F\EE\08\E2\CD\1B\08\958\DFPeZi\E9U\D2h\FA\D2\1A\C55B5\D9\E0\AC1T\D2\89a\D6\9F\02\D4\E4\FB1o/:\FB\AC\C7NX\D7i;\FB\A5\A2g\0B\C3\BB\EC\9C\9D8m\D6e_S\09\EC\9B\AB\ED\B0n\1A\D8eW\A0=\CF\D3\A6\02\17\CE;\D6\CB\862\DCu!\91Sg\C7\D9\CE\08\C7\D9\86PzN\07r>\CE\C8\97\F5\D9e>\A1\C7\FAy\F0\19\1Cq\09\91\C4\09\C8_\0F\1A\10n\08\92\ABU:#\DC\13\92\9D)\E44%\0D\1B\A1\1F\99\B2\FF\DD\8A\D4\D8\FD\1E\A4\06\E1\16?\15\F1\AB\9E\8A\B9%/\E4\D7Z\95[\A1\D1\87\9D\08\01\F6!\98K>\9F~P{\EC\BCT\E4\D8\90t\051\F5\00<s\87x\0F\D6\17\EC2N:\81r\F7\C1O\1A\08\C3\D8v\F5\DD8\F0\06\CE\ED@\14\E7@8M\9C\EB\EC\03\08\0E\9D\D7I\E5\B6\B3\C3\8E\E1\DD\F7\DA\EC\83\C8]\A5\E4\1C\9B.\D7\FF\81\B3\1D?\F2\90\F5\E2\A6\03\A7\137}r\DAq\D3\E7$\EB0E\C8\8E\B3C\D51\D5T\0D\EB\E1\EB\C97\89\B3\12\B43\D8D\A1\A5\18\84\86\DB\90sL\E5\90_\D8\F1\91\E9#\D6+8oal\B8a\88D\8D\C8]\05j\B8j\8B\B1\BB\D6\B3\AA\B2\89\97d\D3\C4\D4\18\D4~`\F1\AF\E35\AB\D1\10\C49$\C1\0B\BD\80\17\9A\80'd\82Wb@\CD\D26\88Q\FBW\AD\8EU\90\CE\15$\A9\C0\95#i\9AuB\CD\A1*\AEA(b\F1\8B`jz\AC\08!K\A4\08\0B\D3\924]\A9\A0\D5R1D\C9\D2x\C9_O\E3&\EDKF\12\F8\19sI\9C\CF\B3\8D\E5\E6\B7|\19\AC\C1\1C\CC\CB\C6\FA\C6\82\DE\AC<\9C{\B4\F5\FCU}\D1^\F5\8A\14&\B9J\C3\D2\AB\98F+\15\B1\F9!\81\0DfY\11D{\D2\B6\EF\17l\DB.\15#\BCl\A9bQ\8A\0D\A55\D4\DE\1AY\BB\89\A9\82\0D\D3\97\8E'u\BC\1E\89\1C\06y\0DS\1D\8B\9A|\F7*V4]\86!\98\0C\BCxp\A6\A0F\89\B5\A9\F1\11\F8\FEqD\C9 \85\F1\11\05\BAfXMA\9C\1A\91ncJ\04\F1n\82=\ACL\A4\E1A7\22\A5\89\1A\83)t7\82\E8~GG\199*\ADI\F8B\10\CB+\E5k\C8\C2\9DH\88\DC\AB.\117\7F\CA[\9BxMV\82\BB5\D8\FA>\A5\16\FC\E0T\D1\12\D4\A7\98N\D0\0C\8D\189\84\07\C4\A2\1A\A6\A8b\AA\19\8CY\95T1Z\D2\FEJY\C0U\8A\B7r)\B3T\AE\C2#\96GY\AE\CBZ\06a\91\D8\D6\86\8C\E6\89Y\D7\14\9E\D3\D4\B3\C7H\CA'C\01\94:\09\C8\E5\DC\A3\81[\E3Y\A2'\B9\B4\0A\19\89&\B5,\A3\B6N\5C\A6\17\A4{\B3\85\FAY*z\FF=\C4?\DE\CB\8B\C4", align 16
@_ZN12_GLOBAL__N_113g_enUS_LocaleE = internal constant [624 x i8] c"x\9C\95V\D1n\9B0\14}\9F\B4\7F@\D6*\B5RVo\8F\A9\88\A5l$\9B:\D1U\22U\B5\BEL\0E\DC\054\B0#\837\05\ED\E3g\07\C3\C0\F6$\C2K|\CF=\E7\E6\DEc0\84%Oi\09\01\A3\15\AC\10\B0\EFO\09\0A2\A8\D3\15\DA\B0CY\D4\F9\F5\BA\02Q\A4\F4\06\91PSYFEr\AA\F6\BC\AC\8D\EA \E0\C0EA\99bT\9C5\F9\83\82k\B3&\F7\94I*N!\EE\C2\D7\AF\0C\BE\85\BD\F0&b*\D2\DCA\D7GQ\94\1E\AE\AB\BF\97\0C<`\E92\D7\F2 \EB\C6\81\1386P\EDA8\99\AFi\C3}\F8\03\FF\E5\17D\90\DA\09<\B2\A8\E7\9D\A3\80\EE\F7b\85\DE\A3\91s>\D7|\86\F9\EC\9Ak\96\CF+\9FU>\9F|\0E\F9\DC\F1\19\F3\7FO2z2\B7\90Z\91D\AA[Nu\AE\D7]\92\C4\DC\81v\12j\1B{\86\8C\B9\E8.\97\C2\01\B7\A2\B0\A1\846R\8CA<\F45\EAq\B4k\A6Y\BBS\BBM\BBE\BB9\BB/\BB)\7F?\FA!\CD\0A\A8\FAg\CF\84d\1D+w\FB`\C4#\8FV\02O+(\04\045\D5\D4\8A|\F8\18b\FD\DB%\C8:\1AB<\10u`\9D\11]\E3\0D<\D2\A6\01\C1\CE{:D\E6\00\F9!\CB\12\91\8D\BA\16A\AC\AE Z\04\DF\D4\A5'\1C\B8V!#-9; r\A1\A8\82\EC\AC\B9@R\E7\5C4J\84#\EC\E1\E3\C9\84\0Ah\8Aj4\F1(\9AL\9C\DF\C5\F1]\92\04\EB\E0%\C4#\92Ua2\EAe\9A\F3\A4\83d\86\C0\CC\A9%\1E>\9E\CCe\8C\DA)\AC\DF\ECO\A78\FB\F9\B9\AA\93M\B4\FD\FDL\F3/\EDKg\CE\98\A4tL\EAS\F1\9FC\93\D8\B4\A20\FD\E2A\A4]\B4\ED\F2\B6m\DB\10OxN!#L\A5\10\C0\D2\13\22o:\E9r\F9\E7zX\DE\CC\ACr\04\91\02k\CC\DF_yT\D8\9Ab(\D4\0F:\09M\D9\0C\D2\A2\A2j\F3o{}\97\B6\D5\C3\BB\95\CBc\A17~1\8B?t}5\8B^\15L\D6\88\BC\9DEnApD\DE\B9\5C<\1D[!\FD\16\0CNL\81\FEf;\07j\9B\D4\A91\C9\BB%\8C\A2\A8\B9^ \F2\94D\B3Ec\CB]\09\B6{\D5X\F7U\A4\96\7F\01u7\1B\8B", align 16
@_ZZN5cppgc8internal11GCInfoTraitI15GCedLocaleIfaceE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1

@_ZN14CXFA_LocaleMgrC1EPN5cppgc4HeapEP9CXFA_NodeN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CXFA_LocaleMgr*, %"class.cppgc::Heap"*, %class.CXFA_Node*, %"class.fxcrt::WideString"*), void (%class.CXFA_LocaleMgr*, %"class.cppgc::Heap"*, %class.CXFA_Node*, %"class.fxcrt::WideString"*)* @_ZN14CXFA_LocaleMgrC2EPN5cppgc4HeapEP9CXFA_NodeN5fxcrt10WideStringE
@_ZN14CXFA_LocaleMgrD1Ev = hidden unnamed_addr alias void (%class.CXFA_LocaleMgr*), void (%class.CXFA_LocaleMgr*)* @_ZN14CXFA_LocaleMgrD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_LocaleMgrC2EPN5cppgc4HeapEP9CXFA_NodeN5fxcrt10WideStringE(%class.CXFA_LocaleMgr*, %"class.cppgc::Heap"*, %class.CXFA_Node* readonly, %"class.fxcrt::WideString"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV14CXFA_LocaleMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  store %"class.cppgc::Heap"* %1, %"class.cppgc::Heap"** %7, align 8
  %8 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  %11 = tail call %class.GCedLocaleIface* @_ZN14CXFA_LocaleMgr15GetLocaleByNameERKN5fxcrt10WideStringE(%class.CXFA_LocaleMgr* %0, %"class.fxcrt::WideString"* dereferenceable(8) %3) #8
  %12 = bitcast %"class.cppgc::internal::BasicMember.9"* %9 to %class.GCedLocaleIface**
  store %class.GCedLocaleIface* %11, %class.GCedLocaleIface** %12, align 8
  %13 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 6
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 8
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* dereferenceable(8) %3) #8
  %16 = call fastcc zeroext i16 @_ZN12_GLOBAL__N_111GetLanguageEN5fxcrt10WideStringE(%"class.fxcrt::WideString"* nonnull %5)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #8
  store i16 %16, i16* %15, align 2
  %17 = icmp eq %class.CXFA_Node* %2, null
  br i1 %17, label %175, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %2, i64 0, i32 1, i32 1, i32 2
  %20 = bitcast %"class.cppgc::internal::BasicMember.17"* %19 to %class.CXFA_Node**
  %21 = load %class.CXFA_Node*, %class.CXFA_Node** %20, align 8
  %22 = icmp eq %class.CXFA_Node* %21, null
  br i1 %22, label %175, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.cppgc::internal::BasicMember"** %24 to i64*
  %27 = bitcast %"class.std::__1::vector"* %8 to i64*
  %28 = bitcast %"class.cppgc::internal::BasicMember"** %25 to i64*
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %23, %170
  %31 = phi %class.CXFA_Node* [ %21, %23 ], [ %173, %170 ]
  %32 = call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %1) #8
  %33 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZZN5cppgc8internal11GCInfoTraitI15GCedLocaleIfaceE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI15GCedLocaleIfaceE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI15GCedLocaleIfaceE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI15GCedLocaleIfaceE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI15GCedLocaleIfaceE7GetNameEPKv, i1 zeroext true) #8
  br label %37

37:                                               ; preds = %30, %35
  %38 = phi i16 [ %36, %35 ], [ %33, %30 ]
  %39 = call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %32, i64 16, i16 zeroext %38) #8
  %40 = bitcast i8* %39 to %class.CXFA_NodeLocale*
  call void @_ZN15CXFA_NodeLocaleC1EP9CXFA_Node(%class.CXFA_NodeLocale* %40, %class.CXFA_Node* nonnull %31) #8
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = atomicrmw or i16* %42, i16 1 release
  %44 = ptrtoint i8* %39 to i64
  %45 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %24, align 8
  %46 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %25, align 8
  %47 = icmp ult %"class.cppgc::internal::BasicMember"* %45, %46
  %48 = ptrtoint %"class.cppgc::internal::BasicMember"* %46 to i64
  br i1 %47, label %49, label %53

49:                                               ; preds = %37
  %50 = bitcast %"class.cppgc::internal::BasicMember"* %45 to i64*
  store i64 %44, i64* %50, align 8
  %51 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %45, i64 1
  %52 = ptrtoint %"class.cppgc::internal::BasicMember"* %51 to i64
  store i64 %52, i64* %26, align 8
  br label %170

53:                                               ; preds = %37
  %54 = ptrtoint %"class.cppgc::internal::BasicMember"* %45 to i64
  %55 = load i64, i64* %27, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 2305843009213693951
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #9
  unreachable

62:                                               ; preds = %53
  %63 = sub i64 %48, %55
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %58
  %69 = select i1 %68, i64 %58, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  call void @abort() #9
  unreachable

74:                                               ; preds = %71, %62
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %62 ]
  %76 = shl i64 %75, 3
  %77 = call i8* @_Znwm(i64 %76) #10
  %78 = bitcast i8* %77 to %"class.cppgc::internal::BasicMember"*
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %"class.cppgc::internal::BasicMember"* [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %81, i64 %57
  %83 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %81, i64 %80
  %84 = ptrtoint %"class.cppgc::internal::BasicMember"* %83 to i64
  %85 = bitcast %"class.cppgc::internal::BasicMember"* %82 to i64*
  store i64 %44, i64* %85, align 8
  %86 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %82, i64 1
  %87 = ptrtoint %"class.cppgc::internal::BasicMember"* %86 to i64
  %88 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %29, align 8
  %89 = ptrtoint %"class.cppgc::internal::BasicMember"* %88 to i64
  %90 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %24, align 8
  %91 = icmp eq %"class.cppgc::internal::BasicMember"* %90, %88
  br i1 %91, label %163, label %92

92:                                               ; preds = %79
  %93 = getelementptr %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %90, i64 -1
  %94 = ptrtoint %"class.cppgc::internal::BasicMember"* %93 to i64
  %95 = sub i64 %94, %89
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %92, %100
  %101 = phi %"class.cppgc::internal::BasicMember"* [ %104, %100 ], [ %82, %92 ]
  %102 = phi %"class.cppgc::internal::BasicMember"* [ %105, %100 ], [ %90, %92 ]
  %103 = phi i64 [ %109, %100 ], [ %98, %92 ]
  %104 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %101, i64 -1
  %105 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %102, i64 -1
  %106 = bitcast %"class.cppgc::internal::BasicMember"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.cppgc::internal::BasicMember"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store atomic i64 0, i64* %106 monotonic, align 8
  %109 = add i64 %103, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %100, !llvm.loop !2

111:                                              ; preds = %100, %92
  %112 = phi %"class.cppgc::internal::BasicMember"* [ undef, %92 ], [ %104, %100 ]
  %113 = phi %"class.cppgc::internal::BasicMember"* [ %82, %92 ], [ %104, %100 ]
  %114 = phi %"class.cppgc::internal::BasicMember"* [ %90, %92 ], [ %105, %100 ]
  %115 = icmp ult i64 %95, 56
  br i1 %115, label %160, label %116

116:                                              ; preds = %111, %116
  %117 = phi %"class.cppgc::internal::BasicMember"* [ %154, %116 ], [ %113, %111 ]
  %118 = phi %"class.cppgc::internal::BasicMember"* [ %155, %116 ], [ %114, %111 ]
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -1
  %120 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -1
  %121 = bitcast %"class.cppgc::internal::BasicMember"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.cppgc::internal::BasicMember"* %119 to i64*
  store i64 %122, i64* %123, align 8
  store atomic i64 0, i64* %121 monotonic, align 8
  %124 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -2
  %125 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -2
  %126 = bitcast %"class.cppgc::internal::BasicMember"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.cppgc::internal::BasicMember"* %124 to i64*
  store i64 %127, i64* %128, align 8
  store atomic i64 0, i64* %126 monotonic, align 8
  %129 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -3
  %130 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -3
  %131 = bitcast %"class.cppgc::internal::BasicMember"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.cppgc::internal::BasicMember"* %129 to i64*
  store i64 %132, i64* %133, align 8
  store atomic i64 0, i64* %131 monotonic, align 8
  %134 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -4
  %135 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -4
  %136 = bitcast %"class.cppgc::internal::BasicMember"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.cppgc::internal::BasicMember"* %134 to i64*
  store i64 %137, i64* %138, align 8
  store atomic i64 0, i64* %136 monotonic, align 8
  %139 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -5
  %140 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -5
  %141 = bitcast %"class.cppgc::internal::BasicMember"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.cppgc::internal::BasicMember"* %139 to i64*
  store i64 %142, i64* %143, align 8
  store atomic i64 0, i64* %141 monotonic, align 8
  %144 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -6
  %145 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -6
  %146 = bitcast %"class.cppgc::internal::BasicMember"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.cppgc::internal::BasicMember"* %144 to i64*
  store i64 %147, i64* %148, align 8
  store atomic i64 0, i64* %146 monotonic, align 8
  %149 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -7
  %150 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -7
  %151 = bitcast %"class.cppgc::internal::BasicMember"* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.cppgc::internal::BasicMember"* %149 to i64*
  store i64 %152, i64* %153, align 8
  store atomic i64 0, i64* %151 monotonic, align 8
  %154 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %117, i64 -8
  %155 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %118, i64 -8
  %156 = bitcast %"class.cppgc::internal::BasicMember"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.cppgc::internal::BasicMember"* %154 to i64*
  store i64 %157, i64* %158, align 8
  store atomic i64 0, i64* %156 monotonic, align 8
  %159 = icmp eq %"class.cppgc::internal::BasicMember"* %155, %88
  br i1 %159, label %160, label %116

160:                                              ; preds = %116, %111
  %161 = phi %"class.cppgc::internal::BasicMember"* [ %112, %111 ], [ %154, %116 ]
  %162 = load i64, i64* %27, align 8
  br label %163

163:                                              ; preds = %79, %160
  %164 = phi %"class.cppgc::internal::BasicMember"* [ %161, %160 ], [ %82, %79 ]
  %165 = phi i64 [ %162, %160 ], [ %89, %79 ]
  %166 = ptrtoint %"class.cppgc::internal::BasicMember"* %164 to i64
  store i64 %166, i64* %27, align 8
  store i64 %87, i64* %26, align 8
  store i64 %84, i64* %28, align 8
  %167 = icmp eq i64 %165, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = inttoptr i64 %165 to i8*
  call void @_ZdlPv(i8* %169) #10
  br label %170

170:                                              ; preds = %168, %163, %49
  %171 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %31, i64 0, i32 1, i32 1, i32 4
  %172 = bitcast %"class.cppgc::internal::BasicMember.17"* %171 to %class.CXFA_Node**
  %173 = load %class.CXFA_Node*, %class.CXFA_Node** %172, align 8
  %174 = icmp eq %class.CXFA_Node* %173, null
  br i1 %174, label %175, label %30

175:                                              ; preds = %170, %18, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i16 @_ZN12_GLOBAL__N_111GetLanguageEN5fxcrt10WideStringE(%"class.fxcrt::WideString"*) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  tail call void @_ZN5fxcrt10WideString9MakeLowerEv(%"class.fxcrt::WideString"* %0) #8
  %10 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %11 = icmp eq %"class.fxcrt::StringDataTemplate"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  switch i64 %14, label %17 [
    i64 0, label %15
    i64 1, label %16
  ], !prof !4

15:                                               ; preds = %12, %9
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

16:                                               ; preds = %12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !6
  unreachable

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 3, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = shl i32 %19, 8
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 3, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %20, %22
  %24 = icmp ugt i64 %14, 4
  br i1 %24, label %25, label %32

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 3, i64 3
  %27 = load i32, i32* %26, align 4
  %28 = shl i32 %27, 8
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 3, i64 4
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %28, %30
  br label %32

32:                                               ; preds = %17, %25
  %33 = phi i32 [ %31, %25 ], [ 0, %17 ]
  switch i32 %23, label %50 [
    i32 31336, label %34
    i32 27233, label %51
    i32 27503, label %37
    i32 25966, label %38
    i32 25701, label %41
    i32 26226, label %42
    i32 25971, label %43
    i32 26996, label %46
    i32 28788, label %47
    i32 28268, label %48
    i32 29301, label %49
  ]

34:                                               ; preds = %32
  switch i32 %33, label %50 [
    i32 25454, label %51
    i32 29815, label %35
    i32 26731, label %36
  ]

35:                                               ; preds = %34
  br label %51

36:                                               ; preds = %34
  br label %51

37:                                               ; preds = %32
  br label %51

38:                                               ; preds = %32
  %39 = icmp eq i32 %33, 26466
  %40 = select i1 %39, i16 2057, i16 1033
  br label %51

41:                                               ; preds = %32
  br label %51

42:                                               ; preds = %32
  br label %51

43:                                               ; preds = %32
  %44 = icmp eq i32 %33, 25971
  %45 = select i1 %44, i16 3082, i16 2058
  br label %51

46:                                               ; preds = %32
  br label %51

47:                                               ; preds = %32
  br label %51

48:                                               ; preds = %32
  br label %51

49:                                               ; preds = %32
  br label %51

50:                                               ; preds = %34, %32
  br label %51

51:                                               ; preds = %1, %35, %36, %37, %38, %41, %42, %43, %46, %47, %48, %49, %50, %34, %32, %5
  %52 = phi i16 [ 1033, %5 ], [ 1033, %50 ], [ 1049, %49 ], [ 1043, %48 ], [ 1046, %47 ], [ 1040, %46 ], [ %45, %43 ], [ 1036, %42 ], [ 1031, %41 ], [ %40, %38 ], [ 1042, %37 ], [ 1028, %35 ], [ 3076, %36 ], [ 2052, %34 ], [ 1041, %32 ], [ 1033, %1 ]
  ret i16 %52
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_LocaleMgrD2Ev(%class.CXFA_LocaleMgr*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV14CXFA_LocaleMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %9, align 8
  %11 = icmp eq %"class.cppgc::internal::BasicMember.3"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %10 to i64
  %14 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.cppgc::internal::BasicMember.3"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.cppgc::internal::BasicMember.3"* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %18, align 8
  %20 = icmp eq %"class.cppgc::internal::BasicMember"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint %"class.cppgc::internal::BasicMember"* %19 to i64
  %23 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.cppgc::internal::BasicMember"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.cppgc::internal::BasicMember"* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_LocaleMgrD0Ev(%class.CXFA_LocaleMgr*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV14CXFA_LocaleMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %7) #8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %9, align 8
  %11 = icmp eq %"class.cppgc::internal::BasicMember.3"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %10 to i64
  %14 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.cppgc::internal::BasicMember.3"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.cppgc::internal::BasicMember.3"* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %18, align 8
  %20 = icmp eq %"class.cppgc::internal::BasicMember"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint %"class.cppgc::internal::BasicMember"* %19 to i64
  %23 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.cppgc::internal::BasicMember"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.cppgc::internal::BasicMember"* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14CXFA_LocaleMgr5TraceEPN5cppgc7VisitorE(%class.CXFA_LocaleMgr* nocapture readonly, %"class.cppgc::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %3, align 8
  %5 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %5, align 8
  %7 = icmp eq %"class.cppgc::internal::BasicMember"* %4, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  br label %10

10:                                               ; preds = %20, %8
  %11 = phi %"class.cppgc::internal::BasicMember"* [ %4, %8 ], [ %21, %20 ]
  %12 = bitcast %"class.cppgc::internal::BasicMember"* %11 to i64*
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = inttoptr i64 %13 to i8*
  %17 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %9, align 8
  %18 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %17, i64 4
  %19 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.cppgc::Visitor"* %1, i8* nonnull %16, i8* nonnull %16, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI15CXFA_NodeLocaleE5TraceEPNS_7VisitorEPKv) #8
  br label %20

20:                                               ; preds = %15, %10
  %21 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %11, i64 1
  %22 = icmp eq %"class.cppgc::internal::BasicMember"* %21, %6
  br i1 %22, label %23, label %10

23:                                               ; preds = %20, %2
  %24 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %24, align 8
  %26 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 1
  %27 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %26, align 8
  %28 = icmp eq %"class.cppgc::internal::BasicMember.3"* %25, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  br label %31

31:                                               ; preds = %41, %29
  %32 = phi %"class.cppgc::internal::BasicMember.3"* [ %25, %29 ], [ %42, %41 ]
  %33 = bitcast %"class.cppgc::internal::BasicMember.3"* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = inttoptr i64 %34 to i8*
  %38 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %30, align 8
  %39 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %38, i64 4
  %40 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.cppgc::Visitor"* %1, i8* nonnull %37, i8* nonnull %37, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI14CXFA_XMLLocaleE5TraceEPNS_7VisitorEPKv) #8
  br label %41

41:                                               ; preds = %36, %31
  %42 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %32, i64 1
  %43 = icmp eq %"class.cppgc::internal::BasicMember.3"* %42, %27
  br i1 %43, label %44, label %31

44:                                               ; preds = %41, %23
  %45 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 4
  %46 = bitcast %"class.cppgc::internal::BasicMember.9"* %45 to i64*
  %47 = load atomic i64, i64* %46 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = inttoptr i64 %47 to i8*
  %51 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %52 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %52, i64 4
  %54 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.cppgc::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI15GCedLocaleIfaceE5TraceEPNS_7VisitorEPKv) #8
  br label %55

55:                                               ; preds = %44, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GCedLocaleIface* @_ZN14CXFA_LocaleMgr12GetDefLocaleEv(%class.CXFA_LocaleMgr*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 4
  %3 = bitcast %"class.cppgc::internal::BasicMember.9"* %2 to %class.GCedLocaleIface**
  %4 = load %class.GCedLocaleIface*, %class.GCedLocaleIface** %3, align 8
  %5 = icmp eq %class.GCedLocaleIface* %4, null
  br i1 %5, label %6, label %179

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %7, align 8
  %9 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"** %9, align 8
  %11 = icmp eq %"class.cppgc::internal::BasicMember"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.cppgc::internal::BasicMember"* %8 to %class.CXFA_NodeLocale**
  %14 = load %class.CXFA_NodeLocale*, %class.CXFA_NodeLocale** %13, align 8
  %15 = getelementptr inbounds %class.CXFA_NodeLocale, %class.CXFA_NodeLocale* %14, i64 0, i32 0
  br label %179

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %18, align 8
  %20 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 1
  %21 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %20, align 8
  %22 = icmp eq %"class.cppgc::internal::BasicMember.3"* %19, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.cppgc::internal::BasicMember.3"* %19 to %class.CXFA_XMLLocale**
  %25 = load %class.CXFA_XMLLocale*, %class.CXFA_XMLLocale** %24, align 8
  %26 = getelementptr inbounds %class.CXFA_XMLLocale, %class.CXFA_XMLLocale* %25, i64 0, i32 0
  br label %179

27:                                               ; preds = %16
  %28 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 8
  %29 = load i16, i16* %28, align 2
  %30 = tail call %class.CXFA_XMLLocale* @_ZN14CXFA_LocaleMgr9GetLocaleEt(%class.CXFA_LocaleMgr* %0, i16 zeroext %29)
  %31 = icmp eq %class.CXFA_XMLLocale* %30, null
  %32 = ptrtoint %class.CXFA_XMLLocale* %30 to i64
  br i1 %31, label %164, label %33

33:                                               ; preds = %27
  %34 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %20, align 8
  %35 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %35, align 8
  %37 = icmp ult %"class.cppgc::internal::BasicMember.3"* %34, %36
  %38 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %36 to i64
  br i1 %37, label %39, label %44

39:                                               ; preds = %33
  %40 = bitcast %"class.cppgc::internal::BasicMember.3"* %34 to i64*
  store i64 %32, i64* %40, align 8
  %41 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %34, i64 1
  %42 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %41 to i64
  %43 = bitcast %"class.cppgc::internal::BasicMember.3"** %20 to i64*
  store i64 %42, i64* %43, align 8
  br label %164

44:                                               ; preds = %33
  %45 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %34 to i64
  %46 = bitcast %"class.cppgc::internal::BasicMember.3"** %20 to i64*
  %47 = bitcast %"class.std::__1::vector.1"* %17 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = ashr exact i64 %49, 3
  %51 = add nsw i64 %50, 1
  %52 = icmp ugt i64 %51, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %44
  %54 = bitcast %"class.std::__1::vector.1"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #9
  unreachable

55:                                               ; preds = %44
  %56 = bitcast %"class.cppgc::internal::BasicMember.3"** %35 to i64*
  %57 = sub i64 %38, %48
  %58 = ashr exact i64 %57, 3
  %59 = icmp ult i64 %58, 1152921504606846975
  br i1 %59, label %60, label %68

60:                                               ; preds = %55
  %61 = ashr exact i64 %57, 2
  %62 = icmp ult i64 %61, %51
  %63 = select i1 %62, i64 %51, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 2305843009213693951
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @abort() #9
  unreachable

68:                                               ; preds = %65, %55
  %69 = phi i64 [ %63, %65 ], [ 2305843009213693951, %55 ]
  %70 = shl i64 %69, 3
  %71 = tail call i8* @_Znwm(i64 %70) #10
  %72 = bitcast i8* %71 to %"class.cppgc::internal::BasicMember.3"*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi %"class.cppgc::internal::BasicMember.3"* [ %72, %68 ], [ null, %60 ]
  %76 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %75, i64 %50
  %77 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %75, i64 %74
  %78 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %77 to i64
  %79 = bitcast %"class.cppgc::internal::BasicMember.3"* %76 to i64*
  store i64 %32, i64* %79, align 8
  %80 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %76, i64 1
  %81 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %80 to i64
  %82 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %18, align 8
  %83 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %82 to i64
  %84 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %20, align 8
  %85 = icmp eq %"class.cppgc::internal::BasicMember.3"* %84, %82
  br i1 %85, label %157, label %86

86:                                               ; preds = %73
  %87 = getelementptr %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %84, i64 -1, i32 0, i32 0
  %88 = ptrtoint i8** %87 to i64
  %89 = sub i64 %88, %83
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 7
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %86, %94
  %95 = phi %"class.cppgc::internal::BasicMember.3"* [ %98, %94 ], [ %76, %86 ]
  %96 = phi %"class.cppgc::internal::BasicMember.3"* [ %99, %94 ], [ %84, %86 ]
  %97 = phi i64 [ %103, %94 ], [ %92, %86 ]
  %98 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %95, i64 -1
  %99 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %96, i64 -1
  %100 = bitcast %"class.cppgc::internal::BasicMember.3"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.cppgc::internal::BasicMember.3"* %98 to i64*
  store i64 %101, i64* %102, align 8
  store atomic i64 0, i64* %100 monotonic, align 8
  %103 = add i64 %97, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %94, !llvm.loop !8

105:                                              ; preds = %94, %86
  %106 = phi %"class.cppgc::internal::BasicMember.3"* [ undef, %86 ], [ %98, %94 ]
  %107 = phi %"class.cppgc::internal::BasicMember.3"* [ %76, %86 ], [ %98, %94 ]
  %108 = phi %"class.cppgc::internal::BasicMember.3"* [ %84, %86 ], [ %99, %94 ]
  %109 = icmp ult i64 %89, 56
  br i1 %109, label %154, label %110

110:                                              ; preds = %105, %110
  %111 = phi %"class.cppgc::internal::BasicMember.3"* [ %148, %110 ], [ %107, %105 ]
  %112 = phi %"class.cppgc::internal::BasicMember.3"* [ %149, %110 ], [ %108, %105 ]
  %113 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -1
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -1
  %115 = bitcast %"class.cppgc::internal::BasicMember.3"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.cppgc::internal::BasicMember.3"* %113 to i64*
  store i64 %116, i64* %117, align 8
  store atomic i64 0, i64* %115 monotonic, align 8
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -2
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -2
  %120 = bitcast %"class.cppgc::internal::BasicMember.3"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.cppgc::internal::BasicMember.3"* %118 to i64*
  store i64 %121, i64* %122, align 8
  store atomic i64 0, i64* %120 monotonic, align 8
  %123 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -3
  %124 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -3
  %125 = bitcast %"class.cppgc::internal::BasicMember.3"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.cppgc::internal::BasicMember.3"* %123 to i64*
  store i64 %126, i64* %127, align 8
  store atomic i64 0, i64* %125 monotonic, align 8
  %128 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -4
  %129 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -4
  %130 = bitcast %"class.cppgc::internal::BasicMember.3"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.cppgc::internal::BasicMember.3"* %128 to i64*
  store i64 %131, i64* %132, align 8
  store atomic i64 0, i64* %130 monotonic, align 8
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -5
  %134 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -5
  %135 = bitcast %"class.cppgc::internal::BasicMember.3"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.cppgc::internal::BasicMember.3"* %133 to i64*
  store i64 %136, i64* %137, align 8
  store atomic i64 0, i64* %135 monotonic, align 8
  %138 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -6
  %139 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -6
  %140 = bitcast %"class.cppgc::internal::BasicMember.3"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.cppgc::internal::BasicMember.3"* %138 to i64*
  store i64 %141, i64* %142, align 8
  store atomic i64 0, i64* %140 monotonic, align 8
  %143 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -7
  %144 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -7
  %145 = bitcast %"class.cppgc::internal::BasicMember.3"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.cppgc::internal::BasicMember.3"* %143 to i64*
  store i64 %146, i64* %147, align 8
  store atomic i64 0, i64* %145 monotonic, align 8
  %148 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %111, i64 -8
  %149 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %112, i64 -8
  %150 = bitcast %"class.cppgc::internal::BasicMember.3"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.cppgc::internal::BasicMember.3"* %148 to i64*
  store i64 %151, i64* %152, align 8
  store atomic i64 0, i64* %150 monotonic, align 8
  %153 = icmp eq %"class.cppgc::internal::BasicMember.3"* %149, %82
  br i1 %153, label %154, label %110

154:                                              ; preds = %110, %105
  %155 = phi %"class.cppgc::internal::BasicMember.3"* [ %106, %105 ], [ %148, %110 ]
  %156 = load i64, i64* %47, align 8
  br label %157

157:                                              ; preds = %73, %154
  %158 = phi %"class.cppgc::internal::BasicMember.3"* [ %155, %154 ], [ %76, %73 ]
  %159 = phi i64 [ %156, %154 ], [ %83, %73 ]
  %160 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %158 to i64
  store i64 %160, i64* %47, align 8
  store i64 %81, i64* %46, align 8
  store i64 %78, i64* %56, align 8
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  %163 = inttoptr i64 %159 to i8*
  tail call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %27, %39, %157, %162
  %165 = bitcast %"class.cppgc::internal::BasicMember.9"* %2 to i64*
  store atomic i64 %32, i64* %165 monotonic, align 8
  %166 = bitcast %class.CXFA_XMLLocale* %30 to i8*
  %167 = and i64 %32, -4294967296
  %168 = ptrtoint %"class.cppgc::internal::BasicMember.9"* %2 to i64
  %169 = sub i64 %168, %167
  %170 = icmp ult i64 %169, 4294967297
  %171 = getelementptr inbounds %class.CXFA_XMLLocale, %class.CXFA_XMLLocale* %30, i64 0, i32 0
  br i1 %170, label %172, label %179

172:                                              ; preds = %164
  %173 = inttoptr i64 %167 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %174 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %173, i64 0, i32 0
  %175 = load i8, i8* %174, align 536870912, !range !7
  %176 = icmp eq i8 %175, 1
  br i1 %176, label %177, label %179, !prof !9

177:                                              ; preds = %172
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %166) #8
  %178 = load %class.GCedLocaleIface*, %class.GCedLocaleIface** %3, align 8
  br label %179

179:                                              ; preds = %177, %172, %164, %1, %23, %12
  %180 = phi %class.GCedLocaleIface* [ %26, %23 ], [ %15, %12 ], [ %4, %1 ], [ %171, %164 ], [ %171, %172 ], [ %178, %177 ]
  ret %class.GCedLocaleIface* %180
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_XMLLocale* @_ZN14CXFA_LocaleMgr9GetLocaleEt(%class.CXFA_LocaleMgr* nocapture readonly, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.56", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.pdfium::span.60", align 8
  %7 = alloca %"class.std::__1::unique_ptr.56", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca %"class.pdfium::span.60", align 8
  %11 = alloca %"class.std::__1::unique_ptr.56", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.pdfium::span", align 8
  %14 = alloca %"class.pdfium::span.60", align 8
  %15 = alloca %"class.std::__1::unique_ptr.56", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.pdfium::span", align 8
  %18 = alloca %"class.pdfium::span.60", align 8
  %19 = alloca %"class.std::__1::unique_ptr.56", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.pdfium::span", align 8
  %22 = alloca %"class.pdfium::span.60", align 8
  %23 = alloca %"class.std::__1::unique_ptr.56", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.pdfium::span", align 8
  %26 = alloca %"class.pdfium::span.60", align 8
  %27 = alloca %"class.std::__1::unique_ptr.56", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"class.pdfium::span", align 8
  %30 = alloca %"class.pdfium::span.60", align 8
  %31 = alloca %"class.std::__1::unique_ptr.56", align 8
  %32 = alloca i32, align 4
  %33 = alloca %"class.pdfium::span", align 8
  %34 = alloca %"class.pdfium::span.60", align 8
  %35 = alloca %"class.std::__1::unique_ptr.56", align 8
  %36 = alloca i32, align 4
  %37 = alloca %"class.pdfium::span", align 8
  %38 = alloca %"class.pdfium::span.60", align 8
  %39 = alloca %"class.std::__1::unique_ptr.56", align 8
  %40 = alloca i32, align 4
  %41 = alloca %"class.pdfium::span", align 8
  %42 = alloca %"class.pdfium::span.60", align 8
  %43 = alloca %"class.std::__1::unique_ptr.56", align 8
  %44 = alloca i32, align 4
  %45 = alloca %"class.pdfium::span", align 8
  %46 = alloca %"class.pdfium::span.60", align 8
  %47 = alloca %"class.std::__1::unique_ptr.56", align 8
  %48 = alloca i32, align 4
  %49 = alloca %"class.pdfium::span", align 8
  %50 = alloca %"class.pdfium::span.60", align 8
  %51 = alloca %"class.std::__1::unique_ptr.56", align 8
  %52 = alloca i32, align 4
  %53 = alloca %"class.pdfium::span", align 8
  %54 = alloca %"class.pdfium::span.60", align 8
  %55 = alloca %"class.std::__1::unique_ptr.56", align 8
  %56 = alloca i32, align 4
  %57 = alloca %"class.pdfium::span", align 8
  %58 = alloca %"class.pdfium::span.60", align 8
  %59 = alloca %"class.std::__1::unique_ptr.56", align 8
  %60 = alloca i32, align 4
  %61 = alloca %"class.pdfium::span", align 8
  %62 = alloca %"class.pdfium::span.60", align 8
  switch i16 %1, label %399 [
    i16 2052, label %63
    i16 1028, label %87
    i16 3076, label %111
    i16 1041, label %135
    i16 1042, label %159
    i16 2057, label %183
    i16 2058, label %207
    i16 3082, label %231
    i16 1031, label %255
    i16 1036, label %279
    i16 1040, label %303
    i16 1046, label %327
    i16 1043, label %351
    i16 1049, label %375
  ]

63:                                               ; preds = %2
  %64 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %65 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %64, align 8
  %66 = bitcast %"class.pdfium::span"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66)
  %67 = bitcast %"class.pdfium::span.60"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67)
  %68 = bitcast %"class.std::__1::unique_ptr.56"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %55, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.56"* %55 to i64*
  store i64 0, i64* %70, align 8
  %71 = bitcast i32* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #8
  store i32 -1431655766, i32* %56, align 4
  %72 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %57, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([794 x i8], [794 x i8]* @_ZN12_GLOBAL__N_113g_zhCN_LocaleE, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %57, i64 0, i32 1
  store i64 794, i64* %73, align 8
  %74 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %57, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %55, i32* nonnull %56) #8
  %75 = load i8*, i8** %69, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %78

77:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #8
  store i8* null, i8** %69, align 8
  br label %423

78:                                               ; preds = %63
  %79 = load i32, i32* %56, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %58, i64 0, i32 0, i32 0
  store i8* %75, i8** %81, align 8, !alias.scope !10
  %82 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %58, i64 0, i32 1
  store i64 %80, i64* %82, align 8, !alias.scope !10
  %83 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %65, %"class.pdfium::span.60"* nonnull %58) #8
  %84 = load i8*, i8** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #8
  store i8* null, i8** %69, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %423, label %86

86:                                               ; preds = %78
  call void @_Z7FX_FreePv(i8* nonnull %84) #8
  br label %423

87:                                               ; preds = %2
  %88 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %89 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %88, align 8
  %90 = bitcast %"class.pdfium::span"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90)
  %91 = bitcast %"class.pdfium::span.60"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91)
  %92 = bitcast %"class.std::__1::unique_ptr.56"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %51, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.56"* %51 to i64*
  store i64 0, i64* %94, align 8
  %95 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #8
  store i32 -1431655766, i32* %52, align 4
  %96 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %53, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([812 x i8], [812 x i8]* @_ZN12_GLOBAL__N_113g_zhTW_LocaleE, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %53, i64 0, i32 1
  store i64 812, i64* %97, align 8
  %98 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %53, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %51, i32* nonnull %52) #8
  %99 = load i8*, i8** %93, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %101, label %102

101:                                              ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #8
  store i8* null, i8** %93, align 8
  br label %423

102:                                              ; preds = %87
  %103 = load i32, i32* %52, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %54, i64 0, i32 0, i32 0
  store i8* %99, i8** %105, align 8, !alias.scope !13
  %106 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %54, i64 0, i32 1
  store i64 %104, i64* %106, align 8, !alias.scope !13
  %107 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %89, %"class.pdfium::span.60"* nonnull %54) #8
  %108 = load i8*, i8** %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #8
  store i8* null, i8** %93, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %423, label %110

110:                                              ; preds = %102
  call void @_Z7FX_FreePv(i8* nonnull %108) #8
  br label %423

111:                                              ; preds = %2
  %112 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %113 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %112, align 8
  %114 = bitcast %"class.pdfium::span"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114)
  %115 = bitcast %"class.pdfium::span.60"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115)
  %116 = bitcast %"class.std::__1::unique_ptr.56"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %43, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.56"* %43 to i64*
  store i64 0, i64* %118, align 8
  %119 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #8
  store i32 -1431655766, i32* %44, align 4
  %120 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %45, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([865 x i8], [865 x i8]* @_ZN12_GLOBAL__N_113g_zhHK_LocaleE, i64 0, i64 0), i8** %120, align 8
  %121 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %45, i64 0, i32 1
  store i64 865, i64* %121, align 8
  %122 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %45, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %43, i32* nonnull %44) #8
  %123 = load i8*, i8** %117, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %126

125:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #8
  store i8* null, i8** %117, align 8
  br label %423

126:                                              ; preds = %111
  %127 = load i32, i32* %44, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %46, i64 0, i32 0, i32 0
  store i8* %123, i8** %129, align 8, !alias.scope !16
  %130 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %46, i64 0, i32 1
  store i64 %128, i64* %130, align 8, !alias.scope !16
  %131 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %113, %"class.pdfium::span.60"* nonnull %46) #8
  %132 = load i8*, i8** %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #8
  store i8* null, i8** %117, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %423, label %134

134:                                              ; preds = %126
  call void @_Z7FX_FreePv(i8* nonnull %132) #8
  br label %423

135:                                              ; preds = %2
  %136 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %137 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %136, align 8
  %138 = bitcast %"class.pdfium::span"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138)
  %139 = bitcast %"class.pdfium::span.60"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139)
  %140 = bitcast %"class.std::__1::unique_ptr.56"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #8
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %39, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.56"* %39 to i64*
  store i64 0, i64* %142, align 8
  %143 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #8
  store i32 -1431655766, i32* %40, align 4
  %144 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %41, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([790 x i8], [790 x i8]* @_ZN12_GLOBAL__N_113g_jaJP_LocaleE, i64 0, i64 0), i8** %144, align 8
  %145 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %41, i64 0, i32 1
  store i64 790, i64* %145, align 8
  %146 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %41, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %39, i32* nonnull %40) #8
  %147 = load i8*, i8** %141, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %149, label %150

149:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #8
  store i8* null, i8** %141, align 8
  br label %423

150:                                              ; preds = %135
  %151 = load i32, i32* %40, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %42, i64 0, i32 0, i32 0
  store i8* %147, i8** %153, align 8, !alias.scope !19
  %154 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %42, i64 0, i32 1
  store i64 %152, i64* %154, align 8, !alias.scope !19
  %155 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %137, %"class.pdfium::span.60"* nonnull %42) #8
  %156 = load i8*, i8** %141, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #8
  store i8* null, i8** %141, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %423, label %158

158:                                              ; preds = %150
  call void @_Z7FX_FreePv(i8* nonnull %156) #8
  br label %423

159:                                              ; preds = %2
  %160 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %161 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %160, align 8
  %162 = bitcast %"class.pdfium::span"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162)
  %163 = bitcast %"class.pdfium::span.60"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163)
  %164 = bitcast %"class.std::__1::unique_ptr.56"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %35, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr.56"* %35 to i64*
  store i64 0, i64* %166, align 8
  %167 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #8
  store i32 -1431655766, i32* %36, align 4
  %168 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %37, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([808 x i8], [808 x i8]* @_ZN12_GLOBAL__N_113g_koKR_LocaleE, i64 0, i64 0), i8** %168, align 8
  %169 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %37, i64 0, i32 1
  store i64 808, i64* %169, align 8
  %170 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %37, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %35, i32* nonnull %36) #8
  %171 = load i8*, i8** %165, align 8
  %172 = icmp eq i8* %171, null
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #8
  store i8* null, i8** %165, align 8
  br label %423

174:                                              ; preds = %159
  %175 = load i32, i32* %36, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %38, i64 0, i32 0, i32 0
  store i8* %171, i8** %177, align 8, !alias.scope !22
  %178 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %38, i64 0, i32 1
  store i64 %176, i64* %178, align 8, !alias.scope !22
  %179 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %161, %"class.pdfium::span.60"* nonnull %38) #8
  %180 = load i8*, i8** %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #8
  store i8* null, i8** %165, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %423, label %182

182:                                              ; preds = %174
  call void @_Z7FX_FreePv(i8* nonnull %180) #8
  br label %423

183:                                              ; preds = %2
  %184 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %185 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %184, align 8
  %186 = bitcast %"class.pdfium::span"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186)
  %187 = bitcast %"class.pdfium::span.60"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187)
  %188 = bitcast %"class.std::__1::unique_ptr.56"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %27, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::unique_ptr.56"* %27 to i64*
  store i64 0, i64* %190, align 8
  %191 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #8
  store i32 -1431655766, i32* %28, align 4
  %192 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %29, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([758 x i8], [758 x i8]* @_ZN12_GLOBAL__N_113g_enGB_LocaleE, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %29, i64 0, i32 1
  store i64 758, i64* %193, align 8
  %194 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %29, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %27, i32* nonnull %28) #8
  %195 = load i8*, i8** %189, align 8
  %196 = icmp eq i8* %195, null
  br i1 %196, label %197, label %198

197:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #8
  store i8* null, i8** %189, align 8
  br label %423

198:                                              ; preds = %183
  %199 = load i32, i32* %28, align 4
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %30, i64 0, i32 0, i32 0
  store i8* %195, i8** %201, align 8, !alias.scope !25
  %202 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %30, i64 0, i32 1
  store i64 %200, i64* %202, align 8, !alias.scope !25
  %203 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %185, %"class.pdfium::span.60"* nonnull %30) #8
  %204 = load i8*, i8** %189, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #8
  store i8* null, i8** %189, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %423, label %206

206:                                              ; preds = %198
  call void @_Z7FX_FreePv(i8* nonnull %204) #8
  br label %423

207:                                              ; preds = %2
  %208 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %209 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %208, align 8
  %210 = bitcast %"class.pdfium::span"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210)
  %211 = bitcast %"class.pdfium::span.60"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %211)
  %212 = bitcast %"class.std::__1::unique_ptr.56"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #8
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %23, i64 0, i32 0, i32 0, i32 0
  %214 = bitcast %"class.std::__1::unique_ptr.56"* %23 to i64*
  store i64 0, i64* %214, align 8
  %215 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #8
  store i32 -1431655766, i32* %24, align 4
  %216 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %25, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([804 x i8], [804 x i8]* @_ZN12_GLOBAL__N_113g_esLA_LocaleE, i64 0, i64 0), i8** %216, align 8
  %217 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %25, i64 0, i32 1
  store i64 804, i64* %217, align 8
  %218 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %25, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %23, i32* nonnull %24) #8
  %219 = load i8*, i8** %213, align 8
  %220 = icmp eq i8* %219, null
  br i1 %220, label %221, label %222

221:                                              ; preds = %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #8
  store i8* null, i8** %213, align 8
  br label %423

222:                                              ; preds = %207
  %223 = load i32, i32* %24, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %26, i64 0, i32 0, i32 0
  store i8* %219, i8** %225, align 8, !alias.scope !28
  %226 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %26, i64 0, i32 1
  store i64 %224, i64* %226, align 8, !alias.scope !28
  %227 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %209, %"class.pdfium::span.60"* nonnull %26) #8
  %228 = load i8*, i8** %213, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #8
  store i8* null, i8** %213, align 8
  %229 = icmp eq i8* %228, null
  br i1 %229, label %423, label %230

230:                                              ; preds = %222
  call void @_Z7FX_FreePv(i8* nonnull %228) #8
  br label %423

231:                                              ; preds = %2
  %232 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %233 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %232, align 8
  %234 = bitcast %"class.pdfium::span"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234)
  %235 = bitcast %"class.pdfium::span.60"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %235)
  %236 = bitcast %"class.std::__1::unique_ptr.56"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #8
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %19, i64 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.std::__1::unique_ptr.56"* %19 to i64*
  store i64 0, i64* %238, align 8
  %239 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #8
  store i32 -1431655766, i32* %20, align 4
  %240 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %21, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([813 x i8], [813 x i8]* @_ZN12_GLOBAL__N_113g_esES_LocaleE, i64 0, i64 0), i8** %240, align 8
  %241 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %21, i64 0, i32 1
  store i64 813, i64* %241, align 8
  %242 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %21, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %19, i32* nonnull %20) #8
  %243 = load i8*, i8** %237, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %245, label %246

245:                                              ; preds = %231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #8
  store i8* null, i8** %237, align 8
  br label %423

246:                                              ; preds = %231
  %247 = load i32, i32* %20, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %22, i64 0, i32 0, i32 0
  store i8* %243, i8** %249, align 8, !alias.scope !31
  %250 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %22, i64 0, i32 1
  store i64 %248, i64* %250, align 8, !alias.scope !31
  %251 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %233, %"class.pdfium::span.60"* nonnull %22) #8
  %252 = load i8*, i8** %237, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #8
  store i8* null, i8** %237, align 8
  %253 = icmp eq i8* %252, null
  br i1 %253, label %423, label %254

254:                                              ; preds = %246
  call void @_Z7FX_FreePv(i8* nonnull %252) #8
  br label %423

255:                                              ; preds = %2
  %256 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %257 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %256, align 8
  %258 = bitcast %"class.pdfium::span"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258)
  %259 = bitcast %"class.pdfium::span.60"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %259)
  %260 = bitcast %"class.std::__1::unique_ptr.56"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #8
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %11, i64 0, i32 0, i32 0, i32 0
  %262 = bitcast %"class.std::__1::unique_ptr.56"* %11 to i64*
  store i64 0, i64* %262, align 8
  %263 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %263) #8
  store i32 -1431655766, i32* %12, align 4
  %264 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %13, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([777 x i8], [777 x i8]* @_ZN12_GLOBAL__N_114g_deDE_LoacaleE, i64 0, i64 0), i8** %264, align 8
  %265 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %13, i64 0, i32 1
  store i64 777, i64* %265, align 8
  %266 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %13, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %11, i32* nonnull %12) #8
  %267 = load i8*, i8** %261, align 8
  %268 = icmp eq i8* %267, null
  br i1 %268, label %269, label %270

269:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263) #8
  store i8* null, i8** %261, align 8
  br label %423

270:                                              ; preds = %255
  %271 = load i32, i32* %12, align 4
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %14, i64 0, i32 0, i32 0
  store i8* %267, i8** %273, align 8, !alias.scope !34
  %274 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %14, i64 0, i32 1
  store i64 %272, i64* %274, align 8, !alias.scope !34
  %275 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %257, %"class.pdfium::span.60"* nonnull %14) #8
  %276 = load i8*, i8** %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263) #8
  store i8* null, i8** %261, align 8
  %277 = icmp eq i8* %276, null
  br i1 %277, label %423, label %278

278:                                              ; preds = %270
  call void @_Z7FX_FreePv(i8* nonnull %276) #8
  br label %423

279:                                              ; preds = %2
  %280 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %281 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %280, align 8
  %282 = bitcast %"class.pdfium::span"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %282)
  %283 = bitcast %"class.pdfium::span.60"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %283)
  %284 = bitcast %"class.std::__1::unique_ptr.56"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #8
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %7, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.56"* %7 to i64*
  store i64 0, i64* %286, align 8
  %287 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %287) #8
  store i32 -1431655766, i32* %8, align 4
  %288 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([790 x i8], [790 x i8]* @_ZN12_GLOBAL__N_113g_frFR_LocaleE, i64 0, i64 0), i8** %288, align 8
  %289 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 790, i64* %289, align 8
  %290 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %9, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %7, i32* nonnull %8) #8
  %291 = load i8*, i8** %285, align 8
  %292 = icmp eq i8* %291, null
  br i1 %292, label %293, label %294

293:                                              ; preds = %279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #8
  store i8* null, i8** %285, align 8
  br label %423

294:                                              ; preds = %279
  %295 = load i32, i32* %8, align 4
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %10, i64 0, i32 0, i32 0
  store i8* %291, i8** %297, align 8, !alias.scope !37
  %298 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %10, i64 0, i32 1
  store i64 %296, i64* %298, align 8, !alias.scope !37
  %299 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %281, %"class.pdfium::span.60"* nonnull %10) #8
  %300 = load i8*, i8** %285, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #8
  store i8* null, i8** %285, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %423, label %302

302:                                              ; preds = %294
  call void @_Z7FX_FreePv(i8* nonnull %300) #8
  br label %423

303:                                              ; preds = %2
  %304 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %305 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %304, align 8
  %306 = bitcast %"class.pdfium::span"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306)
  %307 = bitcast %"class.pdfium::span.60"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307)
  %308 = bitcast %"class.std::__1::unique_ptr.56"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %3, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.std::__1::unique_ptr.56"* %3 to i64*
  store i64 0, i64* %310, align 8
  %311 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %311) #8
  store i32 -1431655766, i32* %4, align 4
  %312 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([776 x i8], [776 x i8]* @_ZN12_GLOBAL__N_113g_itIT_LocaleE, i64 0, i64 0), i8** %312, align 8
  %313 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 776, i64* %313, align 8
  %314 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %5, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %3, i32* nonnull %4) #8
  %315 = load i8*, i8** %309, align 8
  %316 = icmp eq i8* %315, null
  br i1 %316, label %317, label %318

317:                                              ; preds = %303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311) #8
  store i8* null, i8** %309, align 8
  br label %423

318:                                              ; preds = %303
  %319 = load i32, i32* %4, align 4
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %6, i64 0, i32 0, i32 0
  store i8* %315, i8** %321, align 8, !alias.scope !40
  %322 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %6, i64 0, i32 1
  store i64 %320, i64* %322, align 8, !alias.scope !40
  %323 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %305, %"class.pdfium::span.60"* nonnull %6) #8
  %324 = load i8*, i8** %309, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311) #8
  store i8* null, i8** %309, align 8
  %325 = icmp eq i8* %324, null
  br i1 %325, label %423, label %326

326:                                              ; preds = %318
  call void @_Z7FX_FreePv(i8* nonnull %324) #8
  br label %423

327:                                              ; preds = %2
  %328 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %329 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %328, align 8
  %330 = bitcast %"class.pdfium::span"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %330)
  %331 = bitcast %"class.pdfium::span.60"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %331)
  %332 = bitcast %"class.std::__1::unique_ptr.56"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %15, i64 0, i32 0, i32 0, i32 0
  %334 = bitcast %"class.std::__1::unique_ptr.56"* %15 to i64*
  store i64 0, i64* %334, align 8
  %335 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %335) #8
  store i32 -1431655766, i32* %16, align 4
  %336 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %17, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([814 x i8], [814 x i8]* @_ZN12_GLOBAL__N_113g_ptBR_LocaleE, i64 0, i64 0), i8** %336, align 8
  %337 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %17, i64 0, i32 1
  store i64 814, i64* %337, align 8
  %338 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %17, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %15, i32* nonnull %16) #8
  %339 = load i8*, i8** %333, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %341, label %342

341:                                              ; preds = %327
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %335) #8
  store i8* null, i8** %333, align 8
  br label %423

342:                                              ; preds = %327
  %343 = load i32, i32* %16, align 4
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %18, i64 0, i32 0, i32 0
  store i8* %339, i8** %345, align 8, !alias.scope !43
  %346 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %18, i64 0, i32 1
  store i64 %344, i64* %346, align 8, !alias.scope !43
  %347 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %329, %"class.pdfium::span.60"* nonnull %18) #8
  %348 = load i8*, i8** %333, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %335) #8
  store i8* null, i8** %333, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %423, label %350

350:                                              ; preds = %342
  call void @_Z7FX_FreePv(i8* nonnull %348) #8
  br label %423

351:                                              ; preds = %2
  %352 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %353 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %352, align 8
  %354 = bitcast %"class.pdfium::span"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %354)
  %355 = bitcast %"class.pdfium::span.60"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %355)
  %356 = bitcast %"class.std::__1::unique_ptr.56"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %31, i64 0, i32 0, i32 0, i32 0
  %358 = bitcast %"class.std::__1::unique_ptr.56"* %31 to i64*
  store i64 0, i64* %358, align 8
  %359 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #8
  store i32 -1431655766, i32* %32, align 4
  %360 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %33, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([778 x i8], [778 x i8]* @_ZN12_GLOBAL__N_113g_nlNL_LocaleE, i64 0, i64 0), i8** %360, align 8
  %361 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %33, i64 0, i32 1
  store i64 778, i64* %361, align 8
  %362 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %33, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %31, i32* nonnull %32) #8
  %363 = load i8*, i8** %357, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %365, label %366

365:                                              ; preds = %351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #8
  store i8* null, i8** %357, align 8
  br label %423

366:                                              ; preds = %351
  %367 = load i32, i32* %32, align 4
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %34, i64 0, i32 0, i32 0
  store i8* %363, i8** %369, align 8, !alias.scope !46
  %370 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %34, i64 0, i32 1
  store i64 %368, i64* %370, align 8, !alias.scope !46
  %371 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %353, %"class.pdfium::span.60"* nonnull %34) #8
  %372 = load i8*, i8** %357, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #8
  store i8* null, i8** %357, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %423, label %374

374:                                              ; preds = %366
  call void @_Z7FX_FreePv(i8* nonnull %372) #8
  br label %423

375:                                              ; preds = %2
  %376 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %377 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %376, align 8
  %378 = bitcast %"class.pdfium::span"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %378)
  %379 = bitcast %"class.pdfium::span.60"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %379)
  %380 = bitcast %"class.std::__1::unique_ptr.56"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #8
  %381 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %47, i64 0, i32 0, i32 0, i32 0
  %382 = bitcast %"class.std::__1::unique_ptr.56"* %47 to i64*
  store i64 0, i64* %382, align 8
  %383 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383) #8
  store i32 -1431655766, i32* %48, align 4
  %384 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %49, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([890 x i8], [890 x i8]* @_ZN12_GLOBAL__N_113g_ruRU_LocaleE, i64 0, i64 0), i8** %384, align 8
  %385 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %49, i64 0, i32 1
  store i64 890, i64* %385, align 8
  %386 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %49, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %47, i32* nonnull %48) #8
  %387 = load i8*, i8** %381, align 8
  %388 = icmp eq i8* %387, null
  br i1 %388, label %389, label %390

389:                                              ; preds = %375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383) #8
  store i8* null, i8** %381, align 8
  br label %423

390:                                              ; preds = %375
  %391 = load i32, i32* %48, align 4
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %50, i64 0, i32 0, i32 0
  store i8* %387, i8** %393, align 8, !alias.scope !49
  %394 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %50, i64 0, i32 1
  store i64 %392, i64* %394, align 8, !alias.scope !49
  %395 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %377, %"class.pdfium::span.60"* nonnull %50) #8
  %396 = load i8*, i8** %381, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383) #8
  store i8* null, i8** %381, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %423, label %398

398:                                              ; preds = %390
  call void @_Z7FX_FreePv(i8* nonnull %396) #8
  br label %423

399:                                              ; preds = %2
  %400 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 1, i32 0
  %401 = load %"class.cppgc::Heap"*, %"class.cppgc::Heap"** %400, align 8
  %402 = bitcast %"class.pdfium::span"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %402)
  %403 = bitcast %"class.pdfium::span.60"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %403)
  %404 = bitcast %"class.std::__1::unique_ptr.56"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %404) #8
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56"* %59, i64 0, i32 0, i32 0, i32 0
  %406 = bitcast %"class.std::__1::unique_ptr.56"* %59 to i64*
  store i64 0, i64* %406, align 8
  %407 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %407) #8
  store i32 -1431655766, i32* %60, align 4
  %408 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %61, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([624 x i8], [624 x i8]* @_ZN12_GLOBAL__N_113g_enUS_LocaleE, i64 0, i64 0), i8** %408, align 8
  %409 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %61, i64 0, i32 1
  store i64 624, i64* %409, align 8
  %410 = call i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext false, %"class.pdfium::span"* nonnull %61, i1 zeroext true, i32 0, i32 0, i32 0, i32 0, i32 0, %"class.std::__1::unique_ptr.56"* nonnull %59, i32* nonnull %60) #8
  %411 = load i8*, i8** %405, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %413, label %414

413:                                              ; preds = %399
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %407) #8
  store i8* null, i8** %405, align 8
  br label %423

414:                                              ; preds = %399
  %415 = load i32, i32* %60, align 4
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %62, i64 0, i32 0, i32 0
  store i8* %411, i8** %417, align 8, !alias.scope !52
  %418 = getelementptr inbounds %"class.pdfium::span.60", %"class.pdfium::span.60"* %62, i64 0, i32 1
  store i64 %416, i64* %418, align 8, !alias.scope !52
  %419 = call %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"* %401, %"class.pdfium::span.60"* nonnull %62) #8
  %420 = load i8*, i8** %405, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %407) #8
  store i8* null, i8** %405, align 8
  %421 = icmp eq i8* %420, null
  br i1 %421, label %423, label %422

422:                                              ; preds = %414
  call void @_Z7FX_FreePv(i8* nonnull %420) #8
  br label %423

423:                                              ; preds = %422, %414, %413, %398, %390, %389, %374, %366, %365, %350, %342, %341, %326, %318, %317, %302, %294, %293, %278, %270, %269, %254, %246, %245, %230, %222, %221, %206, %198, %197, %182, %174, %173, %158, %150, %149, %134, %126, %125, %110, %102, %101, %86, %78, %77
  %424 = phi i8* [ %68, %77 ], [ %68, %78 ], [ %68, %86 ], [ %92, %101 ], [ %92, %102 ], [ %92, %110 ], [ %116, %125 ], [ %116, %126 ], [ %116, %134 ], [ %140, %149 ], [ %140, %150 ], [ %140, %158 ], [ %164, %173 ], [ %164, %174 ], [ %164, %182 ], [ %188, %197 ], [ %188, %198 ], [ %188, %206 ], [ %212, %221 ], [ %212, %222 ], [ %212, %230 ], [ %236, %245 ], [ %236, %246 ], [ %236, %254 ], [ %260, %269 ], [ %260, %270 ], [ %260, %278 ], [ %284, %293 ], [ %284, %294 ], [ %284, %302 ], [ %308, %317 ], [ %308, %318 ], [ %308, %326 ], [ %332, %341 ], [ %332, %342 ], [ %332, %350 ], [ %356, %365 ], [ %356, %366 ], [ %356, %374 ], [ %380, %389 ], [ %380, %390 ], [ %380, %398 ], [ %404, %413 ], [ %404, %414 ], [ %404, %422 ]
  %425 = phi i8* [ %66, %77 ], [ %66, %78 ], [ %66, %86 ], [ %90, %101 ], [ %90, %102 ], [ %90, %110 ], [ %114, %125 ], [ %114, %126 ], [ %114, %134 ], [ %138, %149 ], [ %138, %150 ], [ %138, %158 ], [ %162, %173 ], [ %162, %174 ], [ %162, %182 ], [ %186, %197 ], [ %186, %198 ], [ %186, %206 ], [ %210, %221 ], [ %210, %222 ], [ %210, %230 ], [ %234, %245 ], [ %234, %246 ], [ %234, %254 ], [ %258, %269 ], [ %258, %270 ], [ %258, %278 ], [ %282, %293 ], [ %282, %294 ], [ %282, %302 ], [ %306, %317 ], [ %306, %318 ], [ %306, %326 ], [ %330, %341 ], [ %330, %342 ], [ %330, %350 ], [ %354, %365 ], [ %354, %366 ], [ %354, %374 ], [ %378, %389 ], [ %378, %390 ], [ %378, %398 ], [ %402, %413 ], [ %402, %414 ], [ %402, %422 ]
  %426 = phi i8* [ %67, %77 ], [ %67, %78 ], [ %67, %86 ], [ %91, %101 ], [ %91, %102 ], [ %91, %110 ], [ %115, %125 ], [ %115, %126 ], [ %115, %134 ], [ %139, %149 ], [ %139, %150 ], [ %139, %158 ], [ %163, %173 ], [ %163, %174 ], [ %163, %182 ], [ %187, %197 ], [ %187, %198 ], [ %187, %206 ], [ %211, %221 ], [ %211, %222 ], [ %211, %230 ], [ %235, %245 ], [ %235, %246 ], [ %235, %254 ], [ %259, %269 ], [ %259, %270 ], [ %259, %278 ], [ %283, %293 ], [ %283, %294 ], [ %283, %302 ], [ %307, %317 ], [ %307, %318 ], [ %307, %326 ], [ %331, %341 ], [ %331, %342 ], [ %331, %350 ], [ %355, %365 ], [ %355, %366 ], [ %355, %374 ], [ %379, %389 ], [ %379, %390 ], [ %379, %398 ], [ %403, %413 ], [ %403, %414 ], [ %403, %422 ]
  %427 = phi %class.CXFA_XMLLocale* [ null, %77 ], [ %83, %78 ], [ %83, %86 ], [ null, %101 ], [ %107, %102 ], [ %107, %110 ], [ null, %125 ], [ %131, %126 ], [ %131, %134 ], [ null, %149 ], [ %155, %150 ], [ %155, %158 ], [ null, %173 ], [ %179, %174 ], [ %179, %182 ], [ null, %197 ], [ %203, %198 ], [ %203, %206 ], [ null, %221 ], [ %227, %222 ], [ %227, %230 ], [ null, %245 ], [ %251, %246 ], [ %251, %254 ], [ null, %269 ], [ %275, %270 ], [ %275, %278 ], [ null, %293 ], [ %299, %294 ], [ %299, %302 ], [ null, %317 ], [ %323, %318 ], [ %323, %326 ], [ null, %341 ], [ %347, %342 ], [ %347, %350 ], [ null, %365 ], [ %371, %366 ], [ %371, %374 ], [ null, %389 ], [ %395, %390 ], [ %395, %398 ], [ null, %413 ], [ %419, %414 ], [ %419, %422 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %425)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %426)
  ret %class.CXFA_XMLLocale* %427
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GCedLocaleIface* @_ZN14CXFA_LocaleMgr15GetLocaleByNameERKN5fxcrt10WideStringE(%class.CXFA_LocaleMgr*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.cppgc::internal::BasicMember"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  br label %21

15:                                               ; preds = %21
  %16 = load i64, i64* %8, align 8
  %17 = load i64, i64* %10, align 8
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %34, %19
  br i1 %20, label %21, label %35

21:                                               ; preds = %13, %15
  %22 = phi i64 [ %11, %13 ], [ %17, %15 ]
  %23 = phi i64 [ 0, %13 ], [ %34, %15 ]
  %24 = inttoptr i64 %22 to %"class.cppgc::internal::BasicMember"*
  %25 = getelementptr inbounds %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember"* %24, i64 %23
  %26 = bitcast %"class.cppgc::internal::BasicMember"* %25 to %class.CXFA_NodeLocale**
  %27 = load %class.CXFA_NodeLocale*, %class.CXFA_NodeLocale** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %28 = getelementptr inbounds %class.CXFA_NodeLocale, %class.CXFA_NodeLocale* %27, i64 0, i32 0, i32 0
  %29 = bitcast %class.CXFA_NodeLocale* %27 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*)***
  %30 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %30, i64 2
  %32 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %31, align 8
  call void %32(%"class.fxcrt::WideString"* nonnull sret %3, %class.LocaleIface* %28) #8
  %33 = call zeroext i1 @_ZNK5fxcrt10WideStringeqERKS0_(%"class.fxcrt::WideString"* nonnull %3, %"class.fxcrt::WideString"* dereferenceable(8) %1) #8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %34 = add nuw i64 %23, 1
  br i1 %33, label %211, label %15

35:                                               ; preds = %15, %2
  %36 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %36, align 8
  %38 = icmp eq %"class.fxcrt::StringDataTemplate"* %37, null
  br i1 %38, label %213, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %37, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, 2
  br i1 %42, label %213, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3
  %45 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 1
  %46 = bitcast %"class.cppgc::internal::BasicMember.3"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.1"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %73, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  br label %59

53:                                               ; preds = %59
  %54 = load i64, i64* %46, align 8
  %55 = load i64, i64* %48, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %72, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %51, %53
  %60 = phi i64 [ %49, %51 ], [ %55, %53 ]
  %61 = phi i64 [ 0, %51 ], [ %72, %53 ]
  %62 = inttoptr i64 %60 to %"class.cppgc::internal::BasicMember.3"*
  %63 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %62, i64 %61
  %64 = bitcast %"class.cppgc::internal::BasicMember.3"* %63 to %class.CXFA_XMLLocale**
  %65 = load %class.CXFA_XMLLocale*, %class.CXFA_XMLLocale** %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  %66 = getelementptr inbounds %class.CXFA_XMLLocale, %class.CXFA_XMLLocale* %65, i64 0, i32 0, i32 0
  %67 = bitcast %class.CXFA_XMLLocale* %65 to void (%"class.fxcrt::WideString"*, %class.LocaleIface*)***
  %68 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)**, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %68, i64 2
  %70 = load void (%"class.fxcrt::WideString"*, %class.LocaleIface*)*, void (%"class.fxcrt::WideString"*, %class.LocaleIface*)** %69, align 8
  call void %70(%"class.fxcrt::WideString"* nonnull sret %4, %class.LocaleIface* %66) #8
  %71 = call zeroext i1 @_ZNK5fxcrt10WideStringeqERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  %72 = add nuw i64 %61, 1
  br i1 %71, label %209, label %53

73:                                               ; preds = %53, %43
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* dereferenceable(8) %1) #8
  %74 = call fastcc zeroext i16 @_ZN12_GLOBAL__N_111GetLanguageEN5fxcrt10WideStringE(%"class.fxcrt::WideString"* nonnull %5)
  %75 = call %class.CXFA_XMLLocale* @_ZN14CXFA_LocaleMgr9GetLocaleEt(%class.CXFA_LocaleMgr* %0, i16 zeroext %74)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #8
  %76 = icmp eq %class.CXFA_XMLLocale* %75, null
  br i1 %76, label %213, label %77

77:                                               ; preds = %73
  %78 = ptrtoint %class.CXFA_XMLLocale* %75 to i64
  %79 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %45, align 8
  %80 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %81 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %80, align 8
  %82 = icmp ult %"class.cppgc::internal::BasicMember.3"* %79, %81
  %83 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %81 to i64
  br i1 %82, label %84, label %88

84:                                               ; preds = %77
  %85 = bitcast %"class.cppgc::internal::BasicMember.3"* %79 to i64*
  store i64 %78, i64* %85, align 8
  %86 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %79, i64 1
  %87 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %86 to i64
  store i64 %87, i64* %46, align 8
  br label %207

88:                                               ; preds = %77
  %89 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %79 to i64
  %90 = load i64, i64* %48, align 8
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 2305843009213693951
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::vector.1"* %44 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #9
  unreachable

97:                                               ; preds = %88
  %98 = bitcast %"class.cppgc::internal::BasicMember.3"** %80 to i64*
  %99 = sub i64 %83, %90
  %100 = ashr exact i64 %99, 3
  %101 = icmp ult i64 %100, 1152921504606846975
  br i1 %101, label %102, label %110

102:                                              ; preds = %97
  %103 = ashr exact i64 %99, 2
  %104 = icmp ult i64 %103, %93
  %105 = select i1 %104, i64 %93, i64 %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %102
  %108 = icmp ugt i64 %105, 2305843009213693951
  br i1 %108, label %109, label %110

109:                                              ; preds = %107
  call void @abort() #9
  unreachable

110:                                              ; preds = %107, %97
  %111 = phi i64 [ %105, %107 ], [ 2305843009213693951, %97 ]
  %112 = shl i64 %111, 3
  %113 = call i8* @_Znwm(i64 %112) #10
  %114 = bitcast i8* %113 to %"class.cppgc::internal::BasicMember.3"*
  br label %115

115:                                              ; preds = %110, %102
  %116 = phi i64 [ %111, %110 ], [ 0, %102 ]
  %117 = phi %"class.cppgc::internal::BasicMember.3"* [ %114, %110 ], [ null, %102 ]
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %117, i64 %92
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %117, i64 %116
  %120 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %119 to i64
  %121 = bitcast %"class.cppgc::internal::BasicMember.3"* %118 to i64*
  store i64 %78, i64* %121, align 8
  %122 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %118, i64 1
  %123 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %122 to i64
  %124 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %44, i64 0, i32 0, i32 0
  %125 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %124, align 8
  %126 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %125 to i64
  %127 = load %"class.cppgc::internal::BasicMember.3"*, %"class.cppgc::internal::BasicMember.3"** %45, align 8
  %128 = icmp eq %"class.cppgc::internal::BasicMember.3"* %127, %125
  br i1 %128, label %200, label %129

129:                                              ; preds = %115
  %130 = getelementptr %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %127, i64 -1, i32 0, i32 0
  %131 = ptrtoint i8** %130 to i64
  %132 = sub i64 %131, %126
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %148, label %137

137:                                              ; preds = %129, %137
  %138 = phi %"class.cppgc::internal::BasicMember.3"* [ %141, %137 ], [ %118, %129 ]
  %139 = phi %"class.cppgc::internal::BasicMember.3"* [ %142, %137 ], [ %127, %129 ]
  %140 = phi i64 [ %146, %137 ], [ %135, %129 ]
  %141 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %138, i64 -1
  %142 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %139, i64 -1
  %143 = bitcast %"class.cppgc::internal::BasicMember.3"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.cppgc::internal::BasicMember.3"* %141 to i64*
  store i64 %144, i64* %145, align 8
  store atomic i64 0, i64* %143 monotonic, align 8
  %146 = add i64 %140, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %137, !llvm.loop !55

148:                                              ; preds = %137, %129
  %149 = phi %"class.cppgc::internal::BasicMember.3"* [ undef, %129 ], [ %141, %137 ]
  %150 = phi %"class.cppgc::internal::BasicMember.3"* [ %118, %129 ], [ %141, %137 ]
  %151 = phi %"class.cppgc::internal::BasicMember.3"* [ %127, %129 ], [ %142, %137 ]
  %152 = icmp ult i64 %132, 56
  br i1 %152, label %197, label %153

153:                                              ; preds = %148, %153
  %154 = phi %"class.cppgc::internal::BasicMember.3"* [ %191, %153 ], [ %150, %148 ]
  %155 = phi %"class.cppgc::internal::BasicMember.3"* [ %192, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -1
  %157 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -1
  %158 = bitcast %"class.cppgc::internal::BasicMember.3"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.cppgc::internal::BasicMember.3"* %156 to i64*
  store i64 %159, i64* %160, align 8
  store atomic i64 0, i64* %158 monotonic, align 8
  %161 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -2
  %162 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -2
  %163 = bitcast %"class.cppgc::internal::BasicMember.3"* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.cppgc::internal::BasicMember.3"* %161 to i64*
  store i64 %164, i64* %165, align 8
  store atomic i64 0, i64* %163 monotonic, align 8
  %166 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -3
  %167 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -3
  %168 = bitcast %"class.cppgc::internal::BasicMember.3"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.cppgc::internal::BasicMember.3"* %166 to i64*
  store i64 %169, i64* %170, align 8
  store atomic i64 0, i64* %168 monotonic, align 8
  %171 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -4
  %172 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -4
  %173 = bitcast %"class.cppgc::internal::BasicMember.3"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.cppgc::internal::BasicMember.3"* %171 to i64*
  store i64 %174, i64* %175, align 8
  store atomic i64 0, i64* %173 monotonic, align 8
  %176 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -5
  %177 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -5
  %178 = bitcast %"class.cppgc::internal::BasicMember.3"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.cppgc::internal::BasicMember.3"* %176 to i64*
  store i64 %179, i64* %180, align 8
  store atomic i64 0, i64* %178 monotonic, align 8
  %181 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -6
  %182 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -6
  %183 = bitcast %"class.cppgc::internal::BasicMember.3"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"class.cppgc::internal::BasicMember.3"* %181 to i64*
  store i64 %184, i64* %185, align 8
  store atomic i64 0, i64* %183 monotonic, align 8
  %186 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -7
  %187 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -7
  %188 = bitcast %"class.cppgc::internal::BasicMember.3"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.cppgc::internal::BasicMember.3"* %186 to i64*
  store i64 %189, i64* %190, align 8
  store atomic i64 0, i64* %188 monotonic, align 8
  %191 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %154, i64 -8
  %192 = getelementptr inbounds %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3"* %155, i64 -8
  %193 = bitcast %"class.cppgc::internal::BasicMember.3"* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.cppgc::internal::BasicMember.3"* %191 to i64*
  store i64 %194, i64* %195, align 8
  store atomic i64 0, i64* %193 monotonic, align 8
  %196 = icmp eq %"class.cppgc::internal::BasicMember.3"* %192, %125
  br i1 %196, label %197, label %153

197:                                              ; preds = %153, %148
  %198 = phi %"class.cppgc::internal::BasicMember.3"* [ %149, %148 ], [ %191, %153 ]
  %199 = load i64, i64* %48, align 8
  br label %200

200:                                              ; preds = %115, %197
  %201 = phi %"class.cppgc::internal::BasicMember.3"* [ %198, %197 ], [ %118, %115 ]
  %202 = phi i64 [ %199, %197 ], [ %126, %115 ]
  %203 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %201 to i64
  store i64 %203, i64* %48, align 8
  store i64 %123, i64* %46, align 8
  store i64 %120, i64* %98, align 8
  %204 = icmp eq i64 %202, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %200
  %206 = inttoptr i64 %202 to i8*
  call void @_ZdlPv(i8* %206) #10
  br label %207

207:                                              ; preds = %205, %200, %84
  %208 = getelementptr inbounds %class.CXFA_XMLLocale, %class.CXFA_XMLLocale* %75, i64 0, i32 0
  br label %213

209:                                              ; preds = %59
  %210 = getelementptr inbounds %class.CXFA_XMLLocale, %class.CXFA_XMLLocale* %65, i64 0, i32 0
  br label %213

211:                                              ; preds = %21
  %212 = getelementptr inbounds %class.CXFA_NodeLocale, %class.CXFA_NodeLocale* %27, i64 0, i32 0
  br label %213

213:                                              ; preds = %211, %209, %35, %207, %73, %39
  %214 = phi %class.GCedLocaleIface* [ null, %39 ], [ %208, %207 ], [ null, %73 ], [ null, %35 ], [ %210, %209 ], [ %212, %211 ]
  ret %class.GCedLocaleIface* %214
}

declare zeroext i1 @_ZNK5fxcrt10WideStringeqERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CXFA_LocaleMgr12SetDefLocaleEP15GCedLocaleIface(%class.CXFA_LocaleMgr*, %class.GCedLocaleIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %0, i64 0, i32 4
  %4 = ptrtoint %class.GCedLocaleIface* %1 to i64
  %5 = bitcast %"class.cppgc::internal::BasicMember.9"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = bitcast %class.GCedLocaleIface* %1 to i8*
  %7 = and i64 %4, -4294967296
  %8 = ptrtoint %"class.cppgc::internal::BasicMember.9"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = icmp ult i64 %9, 4294967297
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = inttoptr i64 %7 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %13 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 536870912, !range !7
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %17, !prof !9

16:                                               ; preds = %11
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %6) #8
  br label %17

17:                                               ; preds = %2, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14CXFA_LocaleMgr19GetConfigLocaleNameEP9CXFA_Node(%"class.pdfium::Optional"* noalias sret, %class.CXFA_LocaleMgr*, %class.CXFA_Node*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::Optional", align 8
  %5 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %108, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %15, %"class.fxcrt::WideString"* dereferenceable(8) %14) #8
  store i8 1, i8* %9, align 8
  br label %108

16:                                               ; preds = %3
  store i8 1, i8* %5, align 8
  %17 = icmp eq %class.CXFA_Node* %2, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %108, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %25, %"class.fxcrt::WideString"* dereferenceable(8) %24) #8
  store i8 1, i8* %19, align 8
  br label %108

26:                                               ; preds = %16
  %27 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node28GetFirstChildByClassInternalE11XFA_Element(%class.CXFA_Node* nonnull %2, i16 signext 173) #8
  %28 = icmp eq %class.CXFA_Node* %27, null
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  %30 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node28GetFirstChildByClassInternalE11XFA_Element(%class.CXFA_Node* nonnull %2, i16 signext 47) #8
  %31 = icmp eq %class.CXFA_Node* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !7
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %108, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %39, %"class.fxcrt::WideString"* dereferenceable(8) %38) #8
  store i8 1, i8* %33, align 8
  br label %108

40:                                               ; preds = %29, %26
  %41 = phi %class.CXFA_Node* [ %27, %26 ], [ %30, %29 ]
  %42 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node28GetFirstChildByClassInternalE11XFA_Element(%class.CXFA_Node* nonnull %41, i16 signext 238) #8
  %43 = icmp eq %class.CXFA_Node* %42, null
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !7
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %108, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %51, %"class.fxcrt::WideString"* dereferenceable(8) %50) #8
  store i8 1, i8* %45, align 8
  br label %108

52:                                               ; preds = %40
  %53 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node28GetFirstChildByClassInternalE11XFA_Element(%class.CXFA_Node* nonnull %42, i16 signext 226) #8
  %54 = icmp eq %class.CXFA_Node* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !7
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %108, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %62, %"class.fxcrt::WideString"* dereferenceable(8) %61) #8
  store i8 1, i8* %56, align 8
  br label %108

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 16, i1 false)
  %65 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %53, i64 0, i32 0, i32 6
  %66 = bitcast %"class.cppgc::internal::BasicMember.16"* %65 to %class.CJX_Object**
  %67 = load %class.CJX_Object*, %class.CJX_Object** %66, align 8
  call void @_ZNK10CJX_Object8TryCDataE13XFA_Attributeb(%"class.pdfium::Optional"* nonnull sret %4, %class.CJX_Object* %67, i16 signext 269, i1 zeroext false) #8
  %68 = load i8, i8* %64, align 8, !range !7
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %72, align 8
  %74 = icmp eq %"class.fxcrt::StringDataTemplate"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %73, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %87

79:                                               ; preds = %63, %70, %75
  %80 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %80, align 8
  %81 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 8, !range !7
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %102, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %86, %"class.fxcrt::WideString"* dereferenceable(8) %85) #8
  store i8 1, i8* %80, align 8
  br label %102

87:                                               ; preds = %75
  %88 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %89 = load i8, i8* %88, align 8, !range !7
  %90 = icmp eq i8 %89, 0
  %91 = getelementptr inbounds %class.CXFA_LocaleMgr, %class.CXFA_LocaleMgr* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %90, label %92, label %94

92:                                               ; preds = %87
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %91, %"class.fxcrt::WideString"* dereferenceable(8) %71) #8
  store i8 1, i8* %88, align 8
  %93 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 8
  br label %99

94:                                               ; preds = %87
  %95 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %91, %"class.fxcrt::WideString"* dereferenceable(8) %71) #8
  %96 = load i8, i8* %88, align 8, !range !7
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 8
  br i1 %97, label %102, label %99

99:                                               ; preds = %92, %94
  %100 = phi i8* [ %93, %92 ], [ %98, %94 ]
  %101 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %101, %"class.fxcrt::WideString"* dereferenceable(8) %91) #8
  store i8 1, i8* %100, align 8
  br label %102

102:                                              ; preds = %99, %94, %84, %79
  %103 = load i8, i8* %64, align 8, !range !7
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %106) #8
  br label %107

107:                                              ; preds = %102, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  br label %108

108:                                              ; preds = %60, %55, %49, %44, %37, %32, %23, %18, %13, %8, %107
  ret void
}

declare void @_ZNK10CJX_Object8TryCDataE13XFA_Attributeb(%"class.pdfium::Optional"* sret, %class.CJX_Object*, i16 signext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideString9MakeLowerEv(%"class.fxcrt::WideString"*) local_unnamed_addr #1

declare i32 @_ZN7fxcodec11FlateModule16FlateOrLZWDecodeEbN6pdfium4spanIKhEEbiiiijPNSt3__110unique_ptrIh13FxFreeDeleterEEPj(i1 zeroext, %"class.pdfium::span"*, i1 zeroext, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.56"*, i32*) local_unnamed_addr #1

declare %class.CXFA_XMLLocale* @_ZN14CXFA_XMLLocale6CreateEPN5cppgc4HeapEN6pdfium4spanIhEE(%"class.cppgc::Heap"*, %"class.pdfium::span.60"*) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN15CXFA_NodeLocaleC1EP9CXFA_Node(%class.CXFA_NodeLocale*, %class.CXFA_Node*) unnamed_addr #1

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI15GCedLocaleIfaceE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.GCedLocaleIface*
  %3 = bitcast i8* %0 to void (%class.GCedLocaleIface*)***
  %4 = load void (%class.GCedLocaleIface*)**, void (%class.GCedLocaleIface*)*** %3, align 8
  %5 = load void (%class.GCedLocaleIface*)*, void (%class.GCedLocaleIface*)** %4, align 8
  tail call void %5(%class.GCedLocaleIface* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI15GCedLocaleIfaceE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.GCedLocaleIface*
  %4 = bitcast i8* %1 to void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)**, void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)*, void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)** %5, i64 17
  %7 = load void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)*, void (%class.GCedLocaleIface*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.GCedLocaleIface* %3, %"class.cppgc::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI15GCedLocaleIfaceE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI15CXFA_NodeLocaleE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_NodeLocale*
  tail call void @_ZNK15CXFA_NodeLocale5TraceEPN5cppgc7VisitorE(%class.CXFA_NodeLocale* %3, %"class.cppgc::Visitor"* %0) #8
  ret void
}

declare void @_ZNK15CXFA_NodeLocale5TraceEPN5cppgc7VisitorE(%class.CXFA_NodeLocale*, %"class.cppgc::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI14CXFA_XMLLocaleE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_XMLLocale*
  tail call void @_ZNK14CXFA_XMLLocale5TraceEPN5cppgc7VisitorE(%class.CXFA_XMLLocale* %3, %"class.cppgc::Visitor"* %0) #8
  ret void
}

declare void @_ZNK14CXFA_XMLLocale5TraceEPN5cppgc7VisitorE(%class.CXFA_XMLLocale*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #1

declare %class.CXFA_Node* @_ZNK9CXFA_Node28GetFirstChildByClassInternalE11XFA_Element(%class.CXFA_Node*, i16 signext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!5 = !{i32 -2143763965}
!6 = !{i32 -2143763944}
!7 = !{i8 0, i8 2}
!8 = distinct !{!8, !3}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!12 = distinct !{!12, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!15 = distinct !{!15, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!18 = distinct !{!18, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!21 = distinct !{!21, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!24 = distinct !{!24, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!27 = distinct !{!27, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!30 = distinct !{!30, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!33 = distinct !{!33, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!36 = distinct !{!36, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!39 = distinct !{!39, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!42 = distinct !{!42, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!45 = distinct !{!45, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!48 = distinct !{!48, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!51 = distinct !{!51, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m: argument 0"}
!54 = distinct !{!54, !"_ZN6pdfium9make_spanIhEENS_4spanIT_EEPS2_m"}
!55 = distinct !{!55, !3}
