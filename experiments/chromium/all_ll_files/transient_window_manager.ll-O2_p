; ModuleID = '../../ui/wm/core/transient_window_manager.cc'
source_filename = "../../ui/wm/core/transient_window_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty" = type { %"class.wm::TransientWindowManager"*, i8*, void (i64)* }
%"class.wm::TransientWindowManager" = type { %"class.aura::WindowObserver", %"class.aura::Window"*, %"class.aura::Window"*, %"class.std::__1::vector.41", %"class.aura::Window"*, i8, i8, i8, i8, [4 x i8], %"class.base::ObserverList.86" }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.aura::Window"** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.41", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::vector.60", i32, i32, i32, [4 x i8], %"class.base::ObserverList.67", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.79", %"class.base::WeakPtr.85" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.13" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.18", %"class.std::__1::vector.25", %"class.ui::EventHandler"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.20" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.32" }
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.67" = type <{ %"class.std::__1::vector.68", %"class.base::LinkedList.76", i64, i32, [4 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.76" = type { %"class.base::LinkNode.77" }
%"class.base::LinkNode.77" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.85" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::ObserverList.86" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.87", i64, i32, [4 x i8] }>
%"class.base::LinkedList.87" = type { %"class.base::LinkNode.88" }
%"class.base::LinkNode.88" = type { %"class.base::internal::LinkNodeBase" }
%"class.wm::TransientWindowController" = type { %"class.aura::client::TransientWindowClient", %"class.base::ObserverList.90" }
%"class.aura::client::TransientWindowClient" = type { i32 (...)** }
%"class.base::ObserverList.90" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.91", i64, i32, [4 x i8] }>
%"class.base::LinkedList.91" = type { %"class.base::LinkNode.92" }
%"class.base::LinkNode.92" = type { %"class.base::internal::LinkNodeBase" }
%"class.wm::TransientWindowObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.92", %"class.base::ObserverList.90"* }
%"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.94", i64, i64 }
%"class.base::internal::WeakLinkNode.94" = type { %"class.base::LinkNode.88", %"class.base::ObserverList.86"* }
%"class.aura::client::TransientWindowClientObserver" = type { i32 (...)** }
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.aura::WindowTracker" = type { %"class.aura::WindowObserver", %"class.std::__1::vector.41" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

@_ZTVN2wm22TransientWindowManagerE = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::TransientWindowManager"*)* @_ZN2wm22TransientWindowManagerD2Ev to i8*), i8* bitcast (void (%"class.wm::TransientWindowManager"*)* @_ZN2wm22TransientWindowManagerD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.wm::TransientWindowManager"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN2wm22TransientWindowManager24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.wm::TransientWindowManager"*, %"class.aura::Window"*, i1)* @_ZN2wm22TransientWindowManager25OnWindowVisibilityChangedEPN4aura6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.wm::TransientWindowManager"*, %"class.aura::Window"*)* @_ZN2wm22TransientWindowManager23OnWindowStackingChangedEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.wm::TransientWindowManager"*, %"class.aura::Window"*)* @_ZN2wm22TransientWindowManager18OnWindowDestroyingEPN4aura6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@_ZN2wm12_GLOBAL__N_112_GLOBAL__N_118kPropertyKey_ValueE = internal constant %"struct.ui::ClassProperty" { %"class.wm::TransientWindowManager"* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), void (i64)* @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_123DeallocatorkPropertyKeyEl }, align 8
@.str = private unnamed_addr constant [13 x i8] c"kPropertyKey\00", align 1
@_ZN2wm25TransientWindowController9instance_E = external local_unnamed_addr global %"class.wm::TransientWindowController"*, align 8

@_ZN2wm22TransientWindowManagerD1Ev = hidden unnamed_addr alias void (%"class.wm::TransientWindowManager"*), void (%"class.wm::TransientWindowManager"*)* @_ZN2wm22TransientWindowManagerD2Ev
@_ZN2wm22TransientWindowManagerC1EPN4aura6WindowE = hidden unnamed_addr alias void (%"class.wm::TransientWindowManager"*, %"class.aura::Window"*), void (%"class.wm::TransientWindowManager"*, %"class.aura::Window"*)* @_ZN2wm22TransientWindowManagerC2EPN4aura6WindowE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15PropertyHandler11SetPropertyIPN2wm22TransientWindowManagerEEEvPKNS_13ClassPropertyIT_EES6_(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*, %"class.wm::TransientWindowManager"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %5 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 0
  %8 = load %"class.wm::TransientWindowManager"*, %"class.wm::TransientWindowManager"** %7, align 8
  %9 = icmp eq %"class.wm::TransientWindowManager"* %8, %2
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %12 = load void (i64)*, void (i64)** %11, align 8
  br label %13

13:                                               ; preds = %10, %3
  %14 = phi void (i64)* [ %12, %10 ], [ null, %3 ]
  %15 = ptrtoint %"class.wm::TransientWindowManager"* %2 to i64
  %16 = ptrtoint %"class.wm::TransientWindowManager"* %8 to i64
  %17 = tail call i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"* %0, i8* %4, i8* %6, void (i64)* %14, i64 %15, i64 %16) #9
  %18 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %19 = load void (i64)*, void (i64)** %18, align 8
  %20 = icmp eq void (i64)* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %13
  %22 = bitcast %"struct.ui::ClassProperty"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %17, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void %19(i64 %17) #9
  br label %26

26:                                               ; preds = %13, %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.wm::TransientWindowManager"* @_ZNK2ui15PropertyHandler11GetPropertyIPN2wm22TransientWindowManagerEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %4 = bitcast %"struct.ui::ClassProperty"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"* %0, i8* %3, i64 %5) #9
  %7 = inttoptr i64 %6 to %"class.wm::TransientWindowManager"*
  ret %"class.wm::TransientWindowManager"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15PropertyHandler13ClearPropertyIPN2wm22TransientWindowManagerEEEvPKNS_13ClassPropertyIT_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::ClassProperty"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.ui::ClassProperty"* %1 to i8*
  %6 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"* %0, i8* %5, i8* %7, void (i64)* null, i64 %4, i64 %4) #9
  %9 = getelementptr inbounds %"struct.ui::ClassProperty", %"struct.ui::ClassProperty"* %1, i64 0, i32 2
  %10 = load void (i64)*, void (i64)** %9, align 8
  %11 = icmp eq void (i64)* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = load i64, i64* %3, align 8
  %14 = icmp eq i64 %8, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void %10(i64 %8) #9
  br label %16

16:                                               ; preds = %2, %12, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManagerD2Ev(%"class.wm::TransientWindowManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN2wm22TransientWindowManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode.88"**
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0
  %6 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode.88"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode.88"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode.88"* %10 to %"class.base::ObserverList.86"**
  %12 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList.86"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #9
  %16 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode.88"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode.88"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.aura::Window"**, %"class.aura::Window"*** %30, align 8
  %32 = icmp eq %"class.aura::Window"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.aura::Window"** %31 to i64
  %35 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %36 = bitcast %"class.aura::Window"*** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.aura::Window"** %31 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %39) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManagerD0Ev(%"class.wm::TransientWindowManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN2wm22TransientWindowManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode.88"**
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0
  %6 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode.88"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode.88"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode.88"* %10 to %"class.base::ObserverList.86"**
  %12 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList.86"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode.88", %"class.base::LinkNode.88"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #9
  %16 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode.88"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode.88"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %22 to i64
  %26 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.aura::Window"**, %"class.aura::Window"*** %30, align 8
  %32 = icmp eq %"class.aura::Window"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.aura::Window"** %31 to i64
  %35 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %36 = bitcast %"class.aura::Window"*** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.aura::Window"** %31 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %39) #9
  %40 = bitcast %"class.wm::TransientWindowManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %0, i64 0, i32 4
  %3 = tail call i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"* %2, i8* bitcast (%"struct.ui::ClassProperty"* @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_118kPropertyKey_ValueE to i8*), i64 0) #9
  %4 = inttoptr i64 %3 to %"class.wm::TransientWindowManager"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %31

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 136) #10
  %8 = bitcast i8* %7 to %"class.wm::TransientWindowManager"*
  %9 = bitcast i8* %7 to %"class.aura::WindowObserver"*
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* nonnull %9) #9
  %10 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN2wm22TransientWindowManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  %12 = bitcast i8* %11 to %"class.aura::Window"**
  store %"class.aura::Window"* %0, %"class.aura::Window"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 32
  %14 = getelementptr inbounds i8, i8* %7, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = getelementptr inbounds i8, i8* %7, i64 104
  %16 = bitcast i8* %15 to %"class.base::internal::LinkNodeBase"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 44, i1 false) #9
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16, %"class.base::internal::LinkNodeBase"* %16) #9
  %17 = getelementptr inbounds i8, i8* %7, i64 120
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 128
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %21, %"class.aura::WindowObserver"* nonnull %9) #9
  %22 = ptrtoint i8* %7 to i64
  %23 = tail call i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"* %2, i8* bitcast (%"struct.ui::ClassProperty"* @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_118kPropertyKey_ValueE to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), void (i64)* nonnull @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_123DeallocatorkPropertyKeyEl, i64 %22, i64 0) #9
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %6
  %26 = inttoptr i64 %23 to %"class.wm::TransientWindowManager"*
  %27 = inttoptr i64 %23 to void (%"class.wm::TransientWindowManager"*)***
  %28 = load void (%"class.wm::TransientWindowManager"*)**, void (%"class.wm::TransientWindowManager"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.wm::TransientWindowManager"*)*, void (%"class.wm::TransientWindowManager"*)** %28, i64 1
  %30 = load void (%"class.wm::TransientWindowManager"*)*, void (%"class.wm::TransientWindowManager"*)** %29, align 8
  tail call void %30(%"class.wm::TransientWindowManager"* nonnull %26) #9
  br label %31

31:                                               ; preds = %6, %25, %1
  %32 = phi %"class.wm::TransientWindowManager"* [ %4, %1 ], [ %8, %25 ], [ %8, %6 ]
  ret %"class.wm::TransientWindowManager"* %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetIfExistsEPKN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %0, i64 0, i32 4
  %3 = tail call i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"* %2, i8* bitcast (%"struct.ui::ClassProperty"* @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_118kPropertyKey_ValueE to i8*), i64 0) #9
  %4 = inttoptr i64 %3 to %"class.wm::TransientWindowManager"*
  ret %"class.wm::TransientWindowManager"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager11AddObserverEPNS_23TransientWindowObserverE(%"class.wm::TransientWindowManager"*, %"class.wm::TransientWindowObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10
  %4 = icmp eq %"class.wm::TransientWindowObserver"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.wm::TransientWindowObserver"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.wm::TransientWindowObserver"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList.86"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList.86"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager14RemoveObserverEPNS_23TransientWindowObserverE(%"class.wm::TransientWindowManager"*, %"class.wm::TransientWindowObserver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.wm::TransientWindowObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode.88"**
  %32 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode.88"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager17AddTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = ptrtoint %"class.aura::Window"* %1 to i64
  %8 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %1)
  %9 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %8, i64 0, i32 2
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* nonnull %10)
  tail call void @_ZN2wm22TransientWindowManager20RemoveTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"* %13, %"class.aura::Window"* %1)
  br label %14

14:                                               ; preds = %2, %12
  %15 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = load %"class.aura::Window"**, %"class.aura::Window"*** %16, align 8
  %18 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.aura::Window"**, %"class.aura::Window"*** %18, align 8
  %20 = icmp eq %"class.aura::Window"** %17, %19
  %21 = ptrtoint %"class.aura::Window"** %19 to i64
  br i1 %20, label %27, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.aura::Window"** %17 to i64*
  store i64 %7, i64* %23, align 8
  %24 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 1
  %25 = ptrtoint %"class.aura::Window"** %24 to i64
  %26 = bitcast %"class.aura::Window"*** %16 to i64*
  store i64 %25, i64* %26, align 8
  br label %84

27:                                               ; preds = %14
  %28 = ptrtoint %"class.aura::Window"** %17 to i64
  %29 = bitcast %"class.aura::Window"*** %16 to i64*
  %30 = bitcast %"class.std::__1::vector.41"* %15 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::vector.41"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %27
  %39 = bitcast %"class.aura::Window"*** %18 to i64*
  %40 = sub i64 %21, %31
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, 1152921504606846975
  br i1 %42, label %43, label %51

43:                                               ; preds = %38
  %44 = ashr exact i64 %40, 2
  %45 = icmp ult i64 %44, %34
  %46 = select i1 %45, i64 %34, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %43
  %49 = icmp ugt i64 %46, 2305843009213693951
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  tail call void @abort() #11
  unreachable

51:                                               ; preds = %48, %38
  %52 = phi i64 [ %46, %48 ], [ 2305843009213693951, %38 ]
  %53 = shl i64 %52, 3
  %54 = tail call i8* @_Znwm(i64 %53) #10
  %55 = bitcast i8* %54 to %"class.aura::Window"**
  br label %56

56:                                               ; preds = %51, %43
  %57 = phi i64 [ %52, %51 ], [ 0, %43 ]
  %58 = phi %"class.aura::Window"** [ %55, %51 ], [ null, %43 ]
  %59 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %58, i64 %33
  %60 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %58, i64 %57
  %61 = ptrtoint %"class.aura::Window"** %60 to i64
  %62 = bitcast %"class.aura::Window"** %59 to i64*
  store i64 %7, i64* %62, align 8
  %63 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %59, i64 1
  %64 = ptrtoint %"class.aura::Window"** %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %15, i64 0, i32 0, i32 0
  %66 = load %"class.aura::Window"**, %"class.aura::Window"*** %65, align 8
  %67 = load i64, i64* %29, align 8
  %68 = ptrtoint %"class.aura::Window"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %59, i64 %71
  %73 = ptrtoint %"class.aura::Window"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %56
  %76 = bitcast %"class.aura::Window"** %72 to i8*
  %77 = bitcast %"class.aura::Window"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #9
  %78 = load %"class.aura::Window"**, %"class.aura::Window"*** %65, align 8
  br label %79

79:                                               ; preds = %75, %56
  %80 = phi %"class.aura::Window"** [ %66, %56 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %29, align 8
  store i64 %61, i64* %39, align 8
  %81 = icmp eq %"class.aura::Window"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.aura::Window"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %22, %79, %82
  %85 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %86 = bitcast %"class.aura::Window"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.aura::Window"** %9 to i64*
  store i64 %87, i64* %88, align 8
  %89 = load %"class.wm::TransientWindowController"*, %"class.wm::TransientWindowController"** @_ZN2wm25TransientWindowController9instance_E, align 8
  %90 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %89, i64 0, i32 1
  %91 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %91) #9
  %92 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %94 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %95 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %90, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 40, i1 false)
  %97 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %95, align 8, !noalias !2
  %98 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %89, i64 0, i32 1, i32 0, i32 0, i32 1
  %99 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %98, align 8, !noalias !2
  %100 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %97, %99
  %101 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %101) #9
  br i1 %100, label %102, label %104

102:                                              ; preds = %84
  %103 = bitcast %"class.base::ObserverList.90"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #9, !alias.scope !2
  br label %144

104:                                              ; preds = %84
  store %"class.base::ObserverList.90"* %90, %"class.base::ObserverList.90"** %92, align 8
  %105 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %89, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %101, %"class.base::internal::LinkNodeBase"* %105) #9
  store i64 0, i64* %93, align 8
  %106 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %89, i64 0, i32 1, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %104
  %110 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %98 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.base::ObserverList.90"* %90 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %111, %113
  %115 = ashr exact i64 %114, 3
  br label %116

116:                                              ; preds = %109, %104
  %117 = phi i64 [ %115, %109 ], [ -1, %104 ]
  store i64 %117, i64* %94, align 8
  %118 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %92, align 8
  %119 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %118, i64 0, i32 0, i32 0, i32 1
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.base::ObserverList.90"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = ashr exact i64 %124, 3
  %126 = icmp ult i64 %125, %117
  %127 = select i1 %126, i64 %125, i64 %117
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %144, label %129

129:                                              ; preds = %116
  %130 = inttoptr i64 %123 to %"class.base::internal::UncheckedObserverAdapter"*
  %131 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %118, i64 0, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %130, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %135, label %144

135:                                              ; preds = %129, %139
  %136 = phi i64 [ %137, %139 ], [ 0, %129 ]
  %137 = add nuw i64 %136, 1
  store i64 %137, i64* %93, align 8
  %138 = icmp ult i64 %137, %127
  br i1 %138, label %139, label %144

139:                                              ; preds = %135
  %140 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %131, align 8
  %141 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 %137, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %135, label %144

144:                                              ; preds = %139, %135, %129, %116, %102
  %145 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #9
  %146 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %147 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %148 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %149 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %150 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %149) #9
  %151 = bitcast %"class.base::ObserverList.90"** %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 24, i1 false) #9, !alias.scope !5
  %152 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %92, align 8
  br label %153

153:                                              ; preds = %399, %144
  %154 = phi %"class.base::ObserverList.90"* [ %152, %144 ], [ %397, %399 ]
  %155 = icmp eq %"class.base::ObserverList.90"* %154, null
  br i1 %155, label %171, label %156

156:                                              ; preds = %153
  %157 = load i64, i64* %93, align 8
  %158 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %154, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.base::ObserverList.90"* %154 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %160, %162
  %164 = ashr exact i64 %163, 3
  %165 = load i64, i64* %94, align 8
  %166 = icmp ult i64 %164, %165
  %167 = select i1 %166, i64 %164, i64 %165
  %168 = icmp eq i64 %157, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %156
  %170 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %146, align 8
  br label %187

171:                                              ; preds = %156, %153
  %172 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %146, align 8
  %173 = icmp eq %"class.base::ObserverList.90"* %172, null
  br i1 %173, label %287, label %174

174:                                              ; preds = %171
  %175 = load i64, i64* %147, align 8
  %176 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %172, i64 0, i32 0, i32 0, i32 1
  %177 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.base::ObserverList.90"* %172 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %178, %180
  %182 = ashr exact i64 %181, 3
  %183 = load i64, i64* %148, align 8
  %184 = icmp ult i64 %182, %183
  %185 = select i1 %184, i64 %182, i64 %183
  %186 = icmp eq i64 %175, %185
  br i1 %186, label %196, label %187

187:                                              ; preds = %174, %169
  %188 = phi %"class.base::ObserverList.90"* [ %170, %169 ], [ %172, %174 ]
  %189 = icmp eq %"class.base::ObserverList.90"* %154, %188
  %190 = load i64, i64* %93, align 8
  %191 = load i64, i64* %147, align 8
  %192 = icmp eq i64 %190, %191
  %193 = and i1 %189, %192
  br i1 %193, label %194, label %387

194:                                              ; preds = %187
  %195 = icmp eq %"class.base::ObserverList.90"* %154, null
  br i1 %195, label %287, label %196

196:                                              ; preds = %174, %194
  %197 = phi %"class.base::ObserverList.90"* [ %154, %194 ], [ %172, %174 ]
  %198 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %197, i64 0, i32 1
  %199 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %197, i64 0, i32 1, i32 0, i32 0, i32 1
  %200 = bitcast %"class.base::internal::LinkNodeBase"** %199 to %"class.base::LinkNode.92"**
  %201 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %200, align 8
  %202 = bitcast %"class.base::LinkedList.91"* %198 to %"class.base::LinkNode.92"**
  %203 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %202, align 8
  %204 = icmp eq %"class.base::LinkNode.92"* %201, %203
  br i1 %204, label %205, label %283

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %197, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %206, align 8
  %208 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %197, i64 0, i32 0, i32 0, i32 1
  %209 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %208, align 8
  %210 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %207, %209
  br i1 %210, label %219, label %211

211:                                              ; preds = %205, %216
  %212 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %216 ], [ %207, %205 ]
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %212, i64 0, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = icmp eq i8* %214, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %212, i64 1
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %209
  br i1 %218, label %283, label %211

219:                                              ; preds = %211, %205
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %207, %205 ], [ %212, %211 ]
  %221 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %220 to i64
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %220, %209
  br i1 %222, label %283, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %209
  br i1 %225, label %278, label %226

226:                                              ; preds = %223
  %227 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %209, i64 -2, i32 0
  %228 = ptrtoint i8** %227 to i64
  %229 = sub i64 %228, %221
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = and i64 %231, 3
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %252, label %234

234:                                              ; preds = %226, %247
  %235 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %249, %247 ], [ %224, %226 ]
  %236 = phi i64 [ %248, %247 ], [ %221, %226 ]
  %237 = phi i64 [ %250, %247 ], [ %232, %226 ]
  %238 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, null
  br i1 %240, label %247, label %241

241:                                              ; preds = %234
  %242 = ptrtoint i8* %239 to i64
  %243 = inttoptr i64 %236 to %"class.base::internal::UncheckedObserverAdapter"*
  %244 = inttoptr i64 %236 to i64*
  store i64 %242, i64* %244, align 8
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %246 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %245 to i64
  br label %247

247:                                              ; preds = %241, %234
  %248 = phi i64 [ %236, %234 ], [ %246, %241 ]
  %249 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 1
  %250 = add i64 %237, -1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %234, !llvm.loop !8

252:                                              ; preds = %247, %226
  %253 = phi i64 [ undef, %226 ], [ %248, %247 ]
  %254 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %226 ], [ %249, %247 ]
  %255 = phi i64 [ %221, %226 ], [ %248, %247 ]
  %256 = icmp ult i64 %229, 24
  br i1 %256, label %274, label %257

257:                                              ; preds = %252, %888
  %258 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %890, %888 ], [ %254, %252 ]
  %259 = phi i64 [ %889, %888 ], [ %255, %252 ]
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, null
  br i1 %262, label %269, label %263

263:                                              ; preds = %257
  %264 = ptrtoint i8* %261 to i64
  %265 = inttoptr i64 %259 to %"class.base::internal::UncheckedObserverAdapter"*
  %266 = inttoptr i64 %259 to i64*
  store i64 %264, i64* %266, align 8
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1
  %268 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %267 to i64
  br label %269

269:                                              ; preds = %263, %257
  %270 = phi i64 [ %259, %257 ], [ %268, %263 ]
  %271 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 1, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %866, label %860

274:                                              ; preds = %888, %252
  %275 = phi i64 [ %253, %252 ], [ %889, %888 ]
  %276 = inttoptr i64 %275 to %"class.base::internal::UncheckedObserverAdapter"*
  %277 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %208, align 8
  br label %278

278:                                              ; preds = %274, %223
  %279 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %209, %223 ], [ %277, %274 ]
  %280 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %223 ], [ %276, %274 ]
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %280, %279
  br i1 %281, label %283, label %282

282:                                              ; preds = %278
  store %"class.base::internal::UncheckedObserverAdapter"* %280, %"class.base::internal::UncheckedObserverAdapter"** %208, align 8
  br label %283

283:                                              ; preds = %216, %282, %278, %219, %196
  %284 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %146, align 8
  %285 = icmp eq %"class.base::ObserverList.90"* %284, null
  br i1 %285, label %287, label %286

286:                                              ; preds = %283
  store %"class.base::ObserverList.90"* null, %"class.base::ObserverList.90"** %146, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %149) #9
  br label %287

287:                                              ; preds = %171, %194, %283, %286
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #9
  %288 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %92, align 8
  %289 = icmp eq %"class.base::ObserverList.90"* %288, null
  br i1 %289, label %380, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %288, i64 0, i32 1
  %292 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %288, i64 0, i32 1, i32 0, i32 0, i32 1
  %293 = bitcast %"class.base::internal::LinkNodeBase"** %292 to %"class.base::LinkNode.92"**
  %294 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %293, align 8
  %295 = bitcast %"class.base::LinkedList.91"* %291 to %"class.base::LinkNode.92"**
  %296 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %295, align 8
  %297 = icmp eq %"class.base::LinkNode.92"* %294, %296
  br i1 %297, label %298, label %376

298:                                              ; preds = %290
  %299 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %288, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  %301 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %288, i64 0, i32 0, i32 0, i32 1
  %302 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  %303 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %300, %302
  br i1 %303, label %312, label %304

304:                                              ; preds = %298, %309
  %305 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %310, %309 ], [ %300, %298 ]
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %305, i64 0, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = icmp eq i8* %307, null
  br i1 %308, label %312, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %305, i64 1
  %311 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %310, %302
  br i1 %311, label %376, label %304

312:                                              ; preds = %304, %298
  %313 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %300, %298 ], [ %305, %304 ]
  %314 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %313 to i64
  %315 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %313, %302
  br i1 %315, label %376, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %313, i64 1
  %318 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %317, %302
  br i1 %318, label %371, label %319

319:                                              ; preds = %316
  %320 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %302, i64 -2, i32 0
  %321 = ptrtoint i8** %320 to i64
  %322 = sub i64 %321, %314
  %323 = lshr i64 %322, 3
  %324 = add nuw nsw i64 %323, 1
  %325 = and i64 %324, 3
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %345, label %327

327:                                              ; preds = %319, %340
  %328 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %342, %340 ], [ %317, %319 ]
  %329 = phi i64 [ %341, %340 ], [ %314, %319 ]
  %330 = phi i64 [ %343, %340 ], [ %325, %319 ]
  %331 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 0, i32 0
  %332 = load i8*, i8** %331, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %340, label %334

334:                                              ; preds = %327
  %335 = ptrtoint i8* %332 to i64
  %336 = inttoptr i64 %329 to %"class.base::internal::UncheckedObserverAdapter"*
  %337 = inttoptr i64 %329 to i64*
  store i64 %335, i64* %337, align 8
  %338 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %336, i64 1
  %339 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %338 to i64
  br label %340

340:                                              ; preds = %334, %327
  %341 = phi i64 [ %329, %327 ], [ %339, %334 ]
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %328, i64 1
  %343 = add i64 %330, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %327, !llvm.loop !10

345:                                              ; preds = %340, %319
  %346 = phi i64 [ undef, %319 ], [ %341, %340 ]
  %347 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %317, %319 ], [ %342, %340 ]
  %348 = phi i64 [ %314, %319 ], [ %341, %340 ]
  %349 = icmp ult i64 %322, 24
  br i1 %349, label %367, label %350

350:                                              ; preds = %345, %856
  %351 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %858, %856 ], [ %347, %345 ]
  %352 = phi i64 [ %857, %856 ], [ %348, %345 ]
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 0, i32 0
  %354 = load i8*, i8** %353, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %362, label %356

356:                                              ; preds = %350
  %357 = ptrtoint i8* %354 to i64
  %358 = inttoptr i64 %352 to %"class.base::internal::UncheckedObserverAdapter"*
  %359 = inttoptr i64 %352 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 1
  %361 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %360 to i64
  br label %362

362:                                              ; preds = %356, %350
  %363 = phi i64 [ %352, %350 ], [ %361, %356 ]
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %834, label %828

367:                                              ; preds = %856, %345
  %368 = phi i64 [ %346, %345 ], [ %857, %856 ]
  %369 = inttoptr i64 %368 to %"class.base::internal::UncheckedObserverAdapter"*
  %370 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  br label %371

371:                                              ; preds = %367, %316
  %372 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %302, %316 ], [ %370, %367 ]
  %373 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %313, %316 ], [ %369, %367 ]
  %374 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %373, %372
  br i1 %374, label %376, label %375

375:                                              ; preds = %371
  store %"class.base::internal::UncheckedObserverAdapter"* %373, %"class.base::internal::UncheckedObserverAdapter"** %301, align 8
  br label %376

376:                                              ; preds = %309, %375, %371, %312, %290
  %377 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %92, align 8
  %378 = icmp eq %"class.base::ObserverList.90"* %377, null
  br i1 %378, label %380, label %379

379:                                              ; preds = %376
  store %"class.base::ObserverList.90"* null, %"class.base::ObserverList.90"** %92, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %101) #9
  br label %380

380:                                              ; preds = %287, %376, %379
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %91) #9
  %381 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %382 = load %"class.aura::Window"*, %"class.aura::Window"** %381, align 8
  %383 = load %"class.aura::Window"*, %"class.aura::Window"** %85, align 8
  %384 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %383, i64 0, i32 13
  %385 = load %"class.aura::Window"*, %"class.aura::Window"** %384, align 8
  %386 = icmp eq %"class.aura::Window"* %382, %385
  br i1 %386, label %429, label %430

387:                                              ; preds = %187
  %388 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %154, i64 0, i32 0, i32 0, i32 0
  %389 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %388, align 8
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 %190
  %391 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %390 to %"class.aura::client::TransientWindowClientObserver"**
  %392 = load %"class.aura::client::TransientWindowClientObserver"*, %"class.aura::client::TransientWindowClientObserver"** %391, align 8
  %393 = load %"class.aura::Window"*, %"class.aura::Window"** %85, align 8
  %394 = bitcast %"class.aura::client::TransientWindowClientObserver"* %392 to void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %395 = load void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %394, align 8
  %396 = load void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %395, align 8
  call void %396(%"class.aura::client::TransientWindowClientObserver"* %392, %"class.aura::Window"* %393, %"class.aura::Window"* %1) #9
  %397 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %92, align 8
  %398 = icmp eq %"class.base::ObserverList.90"* %397, null
  br i1 %398, label %399, label %400

399:                                              ; preds = %424, %420, %387, %400, %414
  br label %153

400:                                              ; preds = %387
  %401 = load i64, i64* %93, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %93, align 8
  %403 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %397, i64 0, i32 0, i32 0, i32 1
  %404 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = bitcast %"class.base::ObserverList.90"* %397 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = sub i64 %405, %407
  %409 = ashr exact i64 %408, 3
  %410 = load i64, i64* %94, align 8
  %411 = icmp ult i64 %409, %410
  %412 = select i1 %411, i64 %409, i64 %410
  %413 = icmp ult i64 %402, %412
  br i1 %413, label %414, label %399

414:                                              ; preds = %400
  %415 = inttoptr i64 %407 to %"class.base::internal::UncheckedObserverAdapter"*
  %416 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %397, i64 0, i32 0, i32 0, i32 0
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %415, i64 %402, i32 0
  %418 = load i8*, i8** %417, align 8
  %419 = icmp eq i8* %418, null
  br i1 %419, label %420, label %399

420:                                              ; preds = %414, %424
  %421 = phi i64 [ %422, %424 ], [ %402, %414 ]
  %422 = add nuw i64 %421, 1
  store i64 %422, i64* %93, align 8
  %423 = icmp ult i64 %422, %412
  br i1 %423, label %424, label %399

424:                                              ; preds = %420
  %425 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %416, align 8
  %426 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %425, i64 %422, i32 0
  %427 = load i8*, i8** %426, align 8
  %428 = icmp eq i8* %427, null
  br i1 %428, label %420, label %399

429:                                              ; preds = %380
  call void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* %0)
  br label %430

430:                                              ; preds = %429, %380
  %431 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10
  %432 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %432) #9
  %433 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %434 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %435 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %436 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %431, i64 0, i32 0, i32 0, i32 0
  %437 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 -86, i64 40, i1 false)
  %438 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %436, align 8, !noalias !11
  %439 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %440 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %439, align 8, !noalias !11
  %441 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %438, %440
  %442 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %442) #9
  br i1 %441, label %443, label %445

443:                                              ; preds = %430
  %444 = bitcast %"class.base::ObserverList.86"** %433 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %444, i8 0, i64 24, i1 false) #9, !alias.scope !11
  br label %485

445:                                              ; preds = %430
  store %"class.base::ObserverList.86"* %431, %"class.base::ObserverList.86"** %433, align 8
  %446 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %442, %"class.base::internal::LinkNodeBase"* %446) #9
  store i64 0, i64* %434, align 8
  %447 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 3
  %448 = load i32, i32* %447, align 8
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %457, label %450

450:                                              ; preds = %445
  %451 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %439 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = bitcast %"class.base::ObserverList.86"* %431 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = sub i64 %452, %454
  %456 = ashr exact i64 %455, 3
  br label %457

457:                                              ; preds = %450, %445
  %458 = phi i64 [ %456, %450 ], [ -1, %445 ]
  store i64 %458, i64* %435, align 8
  %459 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %433, align 8
  %460 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %459, i64 0, i32 0, i32 0, i32 1
  %461 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.base::ObserverList.86"* %459 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = sub i64 %462, %464
  %466 = ashr exact i64 %465, 3
  %467 = icmp ult i64 %466, %458
  %468 = select i1 %467, i64 %466, i64 %458
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %485, label %470

470:                                              ; preds = %457
  %471 = inttoptr i64 %464 to %"class.base::internal::UncheckedObserverAdapter"*
  %472 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %459, i64 0, i32 0, i32 0, i32 0
  %473 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %471, i64 0, i32 0
  %474 = load i8*, i8** %473, align 8
  %475 = icmp eq i8* %474, null
  br i1 %475, label %476, label %485

476:                                              ; preds = %470, %480
  %477 = phi i64 [ %478, %480 ], [ 0, %470 ]
  %478 = add nuw i64 %477, 1
  store i64 %478, i64* %434, align 8
  %479 = icmp ult i64 %478, %468
  br i1 %479, label %480, label %485

480:                                              ; preds = %476
  %481 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %472, align 8
  %482 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %481, i64 %478, i32 0
  %483 = load i8*, i8** %482, align 8
  %484 = icmp eq i8* %483, null
  br i1 %484, label %476, label %485

485:                                              ; preds = %480, %476, %470, %457, %443
  %486 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %486) #9
  %487 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %488 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %489 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %490 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %491 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %491, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %490) #9
  %492 = bitcast %"class.base::ObserverList.86"** %487 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %492, i8 0, i64 24, i1 false) #9, !alias.scope !14
  %493 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %433, align 8
  br label %494

494:                                              ; preds = %734, %485
  %495 = phi %"class.base::ObserverList.86"* [ %493, %485 ], [ %732, %734 ]
  %496 = icmp eq %"class.base::ObserverList.86"* %495, null
  br i1 %496, label %512, label %497

497:                                              ; preds = %494
  %498 = load i64, i64* %434, align 8
  %499 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %495, i64 0, i32 0, i32 0, i32 1
  %500 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = bitcast %"class.base::ObserverList.86"* %495 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = sub i64 %501, %503
  %505 = ashr exact i64 %504, 3
  %506 = load i64, i64* %435, align 8
  %507 = icmp ult i64 %505, %506
  %508 = select i1 %507, i64 %505, i64 %506
  %509 = icmp eq i64 %498, %508
  br i1 %509, label %512, label %510

510:                                              ; preds = %497
  %511 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %487, align 8
  br label %528

512:                                              ; preds = %497, %494
  %513 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %487, align 8
  %514 = icmp eq %"class.base::ObserverList.86"* %513, null
  br i1 %514, label %628, label %515

515:                                              ; preds = %512
  %516 = load i64, i64* %488, align 8
  %517 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %513, i64 0, i32 0, i32 0, i32 1
  %518 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.base::ObserverList.86"* %513 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = sub i64 %519, %521
  %523 = ashr exact i64 %522, 3
  %524 = load i64, i64* %489, align 8
  %525 = icmp ult i64 %523, %524
  %526 = select i1 %525, i64 %523, i64 %524
  %527 = icmp eq i64 %516, %526
  br i1 %527, label %537, label %528

528:                                              ; preds = %515, %510
  %529 = phi %"class.base::ObserverList.86"* [ %511, %510 ], [ %513, %515 ]
  %530 = icmp eq %"class.base::ObserverList.86"* %495, %529
  %531 = load i64, i64* %434, align 8
  %532 = load i64, i64* %488, align 8
  %533 = icmp eq i64 %531, %532
  %534 = and i1 %530, %533
  br i1 %534, label %535, label %722

535:                                              ; preds = %528
  %536 = icmp eq %"class.base::ObserverList.86"* %495, null
  br i1 %536, label %628, label %537

537:                                              ; preds = %515, %535
  %538 = phi %"class.base::ObserverList.86"* [ %495, %535 ], [ %513, %515 ]
  %539 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %538, i64 0, i32 1
  %540 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %538, i64 0, i32 1, i32 0, i32 0, i32 1
  %541 = bitcast %"class.base::internal::LinkNodeBase"** %540 to %"class.base::LinkNode.88"**
  %542 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %541, align 8
  %543 = bitcast %"class.base::LinkedList.87"* %539 to %"class.base::LinkNode.88"**
  %544 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %543, align 8
  %545 = icmp eq %"class.base::LinkNode.88"* %542, %544
  br i1 %545, label %546, label %624

546:                                              ; preds = %537
  %547 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %538, i64 0, i32 0, i32 0, i32 0
  %548 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %547, align 8
  %549 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %538, i64 0, i32 0, i32 0, i32 1
  %550 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %549, align 8
  %551 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %548, %550
  br i1 %551, label %560, label %552

552:                                              ; preds = %546, %557
  %553 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %558, %557 ], [ %548, %546 ]
  %554 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %553, i64 0, i32 0
  %555 = load i8*, i8** %554, align 8
  %556 = icmp eq i8* %555, null
  br i1 %556, label %560, label %557

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %553, i64 1
  %559 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %558, %550
  br i1 %559, label %624, label %552

560:                                              ; preds = %552, %546
  %561 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %548, %546 ], [ %553, %552 ]
  %562 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %561 to i64
  %563 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %561, %550
  br i1 %563, label %624, label %564

564:                                              ; preds = %560
  %565 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %561, i64 1
  %566 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %565, %550
  br i1 %566, label %619, label %567

567:                                              ; preds = %564
  %568 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %550, i64 -2, i32 0
  %569 = ptrtoint i8** %568 to i64
  %570 = sub i64 %569, %562
  %571 = lshr i64 %570, 3
  %572 = add nuw nsw i64 %571, 1
  %573 = and i64 %572, 3
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %593, label %575

575:                                              ; preds = %567, %588
  %576 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %590, %588 ], [ %565, %567 ]
  %577 = phi i64 [ %589, %588 ], [ %562, %567 ]
  %578 = phi i64 [ %591, %588 ], [ %573, %567 ]
  %579 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %576, i64 0, i32 0
  %580 = load i8*, i8** %579, align 8
  %581 = icmp eq i8* %580, null
  br i1 %581, label %588, label %582

582:                                              ; preds = %575
  %583 = ptrtoint i8* %580 to i64
  %584 = inttoptr i64 %577 to %"class.base::internal::UncheckedObserverAdapter"*
  %585 = inttoptr i64 %577 to i64*
  store i64 %583, i64* %585, align 8
  %586 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %584, i64 1
  %587 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %586 to i64
  br label %588

588:                                              ; preds = %582, %575
  %589 = phi i64 [ %577, %575 ], [ %587, %582 ]
  %590 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %576, i64 1
  %591 = add i64 %578, -1
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %593, label %575, !llvm.loop !17

593:                                              ; preds = %588, %567
  %594 = phi i64 [ undef, %567 ], [ %589, %588 ]
  %595 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %565, %567 ], [ %590, %588 ]
  %596 = phi i64 [ %562, %567 ], [ %589, %588 ]
  %597 = icmp ult i64 %570, 24
  br i1 %597, label %615, label %598

598:                                              ; preds = %593, %824
  %599 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %826, %824 ], [ %595, %593 ]
  %600 = phi i64 [ %825, %824 ], [ %596, %593 ]
  %601 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %599, i64 0, i32 0
  %602 = load i8*, i8** %601, align 8
  %603 = icmp eq i8* %602, null
  br i1 %603, label %610, label %604

604:                                              ; preds = %598
  %605 = ptrtoint i8* %602 to i64
  %606 = inttoptr i64 %600 to %"class.base::internal::UncheckedObserverAdapter"*
  %607 = inttoptr i64 %600 to i64*
  store i64 %605, i64* %607, align 8
  %608 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %606, i64 1
  %609 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %608 to i64
  br label %610

610:                                              ; preds = %604, %598
  %611 = phi i64 [ %600, %598 ], [ %609, %604 ]
  %612 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %599, i64 1, i32 0
  %613 = load i8*, i8** %612, align 8
  %614 = icmp eq i8* %613, null
  br i1 %614, label %802, label %796

615:                                              ; preds = %824, %593
  %616 = phi i64 [ %594, %593 ], [ %825, %824 ]
  %617 = inttoptr i64 %616 to %"class.base::internal::UncheckedObserverAdapter"*
  %618 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %549, align 8
  br label %619

619:                                              ; preds = %615, %564
  %620 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %550, %564 ], [ %618, %615 ]
  %621 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %561, %564 ], [ %617, %615 ]
  %622 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %621, %620
  br i1 %622, label %624, label %623

623:                                              ; preds = %619
  store %"class.base::internal::UncheckedObserverAdapter"* %621, %"class.base::internal::UncheckedObserverAdapter"** %549, align 8
  br label %624

624:                                              ; preds = %557, %623, %619, %560, %537
  %625 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %487, align 8
  %626 = icmp eq %"class.base::ObserverList.86"* %625, null
  br i1 %626, label %628, label %627

627:                                              ; preds = %624
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %487, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %490) #9
  br label %628

628:                                              ; preds = %512, %535, %624, %627
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %486) #9
  %629 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %433, align 8
  %630 = icmp eq %"class.base::ObserverList.86"* %629, null
  br i1 %630, label %721, label %631

631:                                              ; preds = %628
  %632 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %629, i64 0, i32 1
  %633 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %629, i64 0, i32 1, i32 0, i32 0, i32 1
  %634 = bitcast %"class.base::internal::LinkNodeBase"** %633 to %"class.base::LinkNode.88"**
  %635 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %634, align 8
  %636 = bitcast %"class.base::LinkedList.87"* %632 to %"class.base::LinkNode.88"**
  %637 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %636, align 8
  %638 = icmp eq %"class.base::LinkNode.88"* %635, %637
  br i1 %638, label %639, label %717

639:                                              ; preds = %631
  %640 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %629, i64 0, i32 0, i32 0, i32 0
  %641 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %640, align 8
  %642 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %629, i64 0, i32 0, i32 0, i32 1
  %643 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %642, align 8
  %644 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %641, %643
  br i1 %644, label %653, label %645

645:                                              ; preds = %639, %650
  %646 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %651, %650 ], [ %641, %639 ]
  %647 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %646, i64 0, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = icmp eq i8* %648, null
  br i1 %649, label %653, label %650

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %646, i64 1
  %652 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %651, %643
  br i1 %652, label %717, label %645

653:                                              ; preds = %645, %639
  %654 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %641, %639 ], [ %646, %645 ]
  %655 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %654 to i64
  %656 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %654, %643
  br i1 %656, label %717, label %657

657:                                              ; preds = %653
  %658 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %654, i64 1
  %659 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %658, %643
  br i1 %659, label %712, label %660

660:                                              ; preds = %657
  %661 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %643, i64 -2, i32 0
  %662 = ptrtoint i8** %661 to i64
  %663 = sub i64 %662, %655
  %664 = lshr i64 %663, 3
  %665 = add nuw nsw i64 %664, 1
  %666 = and i64 %665, 3
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %686, label %668

668:                                              ; preds = %660, %681
  %669 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %683, %681 ], [ %658, %660 ]
  %670 = phi i64 [ %682, %681 ], [ %655, %660 ]
  %671 = phi i64 [ %684, %681 ], [ %666, %660 ]
  %672 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %669, i64 0, i32 0
  %673 = load i8*, i8** %672, align 8
  %674 = icmp eq i8* %673, null
  br i1 %674, label %681, label %675

675:                                              ; preds = %668
  %676 = ptrtoint i8* %673 to i64
  %677 = inttoptr i64 %670 to %"class.base::internal::UncheckedObserverAdapter"*
  %678 = inttoptr i64 %670 to i64*
  store i64 %676, i64* %678, align 8
  %679 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %677, i64 1
  %680 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %679 to i64
  br label %681

681:                                              ; preds = %675, %668
  %682 = phi i64 [ %670, %668 ], [ %680, %675 ]
  %683 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %669, i64 1
  %684 = add i64 %671, -1
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %686, label %668, !llvm.loop !18

686:                                              ; preds = %681, %660
  %687 = phi i64 [ undef, %660 ], [ %682, %681 ]
  %688 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %658, %660 ], [ %683, %681 ]
  %689 = phi i64 [ %655, %660 ], [ %682, %681 ]
  %690 = icmp ult i64 %663, 24
  br i1 %690, label %708, label %691

691:                                              ; preds = %686, %792
  %692 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %794, %792 ], [ %688, %686 ]
  %693 = phi i64 [ %793, %792 ], [ %689, %686 ]
  %694 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %692, i64 0, i32 0
  %695 = load i8*, i8** %694, align 8
  %696 = icmp eq i8* %695, null
  br i1 %696, label %703, label %697

697:                                              ; preds = %691
  %698 = ptrtoint i8* %695 to i64
  %699 = inttoptr i64 %693 to %"class.base::internal::UncheckedObserverAdapter"*
  %700 = inttoptr i64 %693 to i64*
  store i64 %698, i64* %700, align 8
  %701 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %699, i64 1
  %702 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %701 to i64
  br label %703

703:                                              ; preds = %697, %691
  %704 = phi i64 [ %693, %691 ], [ %702, %697 ]
  %705 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %692, i64 1, i32 0
  %706 = load i8*, i8** %705, align 8
  %707 = icmp eq i8* %706, null
  br i1 %707, label %770, label %764

708:                                              ; preds = %792, %686
  %709 = phi i64 [ %687, %686 ], [ %793, %792 ]
  %710 = inttoptr i64 %709 to %"class.base::internal::UncheckedObserverAdapter"*
  %711 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %642, align 8
  br label %712

712:                                              ; preds = %708, %657
  %713 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %643, %657 ], [ %711, %708 ]
  %714 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %654, %657 ], [ %710, %708 ]
  %715 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %714, %713
  br i1 %715, label %717, label %716

716:                                              ; preds = %712
  store %"class.base::internal::UncheckedObserverAdapter"* %714, %"class.base::internal::UncheckedObserverAdapter"** %642, align 8
  br label %717

717:                                              ; preds = %650, %716, %712, %653, %631
  %718 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %433, align 8
  %719 = icmp eq %"class.base::ObserverList.86"* %718, null
  br i1 %719, label %721, label %720

720:                                              ; preds = %717
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %433, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %442) #9
  br label %721

721:                                              ; preds = %628, %717, %720
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %432) #9
  ret void

722:                                              ; preds = %528
  %723 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %495, i64 0, i32 0, i32 0, i32 0
  %724 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %723, align 8
  %725 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %724, i64 %531
  %726 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %725 to %"class.wm::TransientWindowObserver"**
  %727 = load %"class.wm::TransientWindowObserver"*, %"class.wm::TransientWindowObserver"** %726, align 8
  %728 = load %"class.aura::Window"*, %"class.aura::Window"** %85, align 8
  %729 = bitcast %"class.wm::TransientWindowObserver"* %727 to void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %730 = load void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %729, align 8
  %731 = load void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %730, align 8
  call void %731(%"class.wm::TransientWindowObserver"* %727, %"class.aura::Window"* %728, %"class.aura::Window"* %1) #9
  %732 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %433, align 8
  %733 = icmp eq %"class.base::ObserverList.86"* %732, null
  br i1 %733, label %734, label %735

734:                                              ; preds = %759, %755, %722, %735, %749
  br label %494

735:                                              ; preds = %722
  %736 = load i64, i64* %434, align 8
  %737 = add i64 %736, 1
  store i64 %737, i64* %434, align 8
  %738 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %732, i64 0, i32 0, i32 0, i32 1
  %739 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %738 to i64*
  %740 = load i64, i64* %739, align 8
  %741 = bitcast %"class.base::ObserverList.86"* %732 to i64*
  %742 = load i64, i64* %741, align 8
  %743 = sub i64 %740, %742
  %744 = ashr exact i64 %743, 3
  %745 = load i64, i64* %435, align 8
  %746 = icmp ult i64 %744, %745
  %747 = select i1 %746, i64 %744, i64 %745
  %748 = icmp ult i64 %737, %747
  br i1 %748, label %749, label %734

749:                                              ; preds = %735
  %750 = inttoptr i64 %742 to %"class.base::internal::UncheckedObserverAdapter"*
  %751 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %732, i64 0, i32 0, i32 0, i32 0
  %752 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %750, i64 %737, i32 0
  %753 = load i8*, i8** %752, align 8
  %754 = icmp eq i8* %753, null
  br i1 %754, label %755, label %734

755:                                              ; preds = %749, %759
  %756 = phi i64 [ %757, %759 ], [ %737, %749 ]
  %757 = add nuw i64 %756, 1
  store i64 %757, i64* %434, align 8
  %758 = icmp ult i64 %757, %747
  br i1 %758, label %759, label %734

759:                                              ; preds = %755
  %760 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %751, align 8
  %761 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %760, i64 %757, i32 0
  %762 = load i8*, i8** %761, align 8
  %763 = icmp eq i8* %762, null
  br i1 %763, label %755, label %734

764:                                              ; preds = %703
  %765 = ptrtoint i8* %706 to i64
  %766 = inttoptr i64 %704 to %"class.base::internal::UncheckedObserverAdapter"*
  %767 = inttoptr i64 %704 to i64*
  store i64 %765, i64* %767, align 8
  %768 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %766, i64 1
  %769 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %768 to i64
  br label %770

770:                                              ; preds = %764, %703
  %771 = phi i64 [ %704, %703 ], [ %769, %764 ]
  %772 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %692, i64 2, i32 0
  %773 = load i8*, i8** %772, align 8
  %774 = icmp eq i8* %773, null
  br i1 %774, label %781, label %775

775:                                              ; preds = %770
  %776 = ptrtoint i8* %773 to i64
  %777 = inttoptr i64 %771 to %"class.base::internal::UncheckedObserverAdapter"*
  %778 = inttoptr i64 %771 to i64*
  store i64 %776, i64* %778, align 8
  %779 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %777, i64 1
  %780 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %779 to i64
  br label %781

781:                                              ; preds = %775, %770
  %782 = phi i64 [ %771, %770 ], [ %780, %775 ]
  %783 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %692, i64 3, i32 0
  %784 = load i8*, i8** %783, align 8
  %785 = icmp eq i8* %784, null
  br i1 %785, label %792, label %786

786:                                              ; preds = %781
  %787 = ptrtoint i8* %784 to i64
  %788 = inttoptr i64 %782 to %"class.base::internal::UncheckedObserverAdapter"*
  %789 = inttoptr i64 %782 to i64*
  store i64 %787, i64* %789, align 8
  %790 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %788, i64 1
  %791 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %790 to i64
  br label %792

792:                                              ; preds = %786, %781
  %793 = phi i64 [ %782, %781 ], [ %791, %786 ]
  %794 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %692, i64 4
  %795 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %794, %643
  br i1 %795, label %708, label %691

796:                                              ; preds = %610
  %797 = ptrtoint i8* %613 to i64
  %798 = inttoptr i64 %611 to %"class.base::internal::UncheckedObserverAdapter"*
  %799 = inttoptr i64 %611 to i64*
  store i64 %797, i64* %799, align 8
  %800 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %798, i64 1
  %801 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %800 to i64
  br label %802

802:                                              ; preds = %796, %610
  %803 = phi i64 [ %611, %610 ], [ %801, %796 ]
  %804 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %599, i64 2, i32 0
  %805 = load i8*, i8** %804, align 8
  %806 = icmp eq i8* %805, null
  br i1 %806, label %813, label %807

807:                                              ; preds = %802
  %808 = ptrtoint i8* %805 to i64
  %809 = inttoptr i64 %803 to %"class.base::internal::UncheckedObserverAdapter"*
  %810 = inttoptr i64 %803 to i64*
  store i64 %808, i64* %810, align 8
  %811 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %809, i64 1
  %812 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %811 to i64
  br label %813

813:                                              ; preds = %807, %802
  %814 = phi i64 [ %803, %802 ], [ %812, %807 ]
  %815 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %599, i64 3, i32 0
  %816 = load i8*, i8** %815, align 8
  %817 = icmp eq i8* %816, null
  br i1 %817, label %824, label %818

818:                                              ; preds = %813
  %819 = ptrtoint i8* %816 to i64
  %820 = inttoptr i64 %814 to %"class.base::internal::UncheckedObserverAdapter"*
  %821 = inttoptr i64 %814 to i64*
  store i64 %819, i64* %821, align 8
  %822 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %820, i64 1
  %823 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %822 to i64
  br label %824

824:                                              ; preds = %818, %813
  %825 = phi i64 [ %814, %813 ], [ %823, %818 ]
  %826 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %599, i64 4
  %827 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %826, %550
  br i1 %827, label %615, label %598

828:                                              ; preds = %362
  %829 = ptrtoint i8* %365 to i64
  %830 = inttoptr i64 %363 to %"class.base::internal::UncheckedObserverAdapter"*
  %831 = inttoptr i64 %363 to i64*
  store i64 %829, i64* %831, align 8
  %832 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %830, i64 1
  %833 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %832 to i64
  br label %834

834:                                              ; preds = %828, %362
  %835 = phi i64 [ %363, %362 ], [ %833, %828 ]
  %836 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 2, i32 0
  %837 = load i8*, i8** %836, align 8
  %838 = icmp eq i8* %837, null
  br i1 %838, label %845, label %839

839:                                              ; preds = %834
  %840 = ptrtoint i8* %837 to i64
  %841 = inttoptr i64 %835 to %"class.base::internal::UncheckedObserverAdapter"*
  %842 = inttoptr i64 %835 to i64*
  store i64 %840, i64* %842, align 8
  %843 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %841, i64 1
  %844 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %843 to i64
  br label %845

845:                                              ; preds = %839, %834
  %846 = phi i64 [ %835, %834 ], [ %844, %839 ]
  %847 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 3, i32 0
  %848 = load i8*, i8** %847, align 8
  %849 = icmp eq i8* %848, null
  br i1 %849, label %856, label %850

850:                                              ; preds = %845
  %851 = ptrtoint i8* %848 to i64
  %852 = inttoptr i64 %846 to %"class.base::internal::UncheckedObserverAdapter"*
  %853 = inttoptr i64 %846 to i64*
  store i64 %851, i64* %853, align 8
  %854 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %852, i64 1
  %855 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %854 to i64
  br label %856

856:                                              ; preds = %850, %845
  %857 = phi i64 [ %846, %845 ], [ %855, %850 ]
  %858 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 4
  %859 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %858, %302
  br i1 %859, label %367, label %350

860:                                              ; preds = %269
  %861 = ptrtoint i8* %272 to i64
  %862 = inttoptr i64 %270 to %"class.base::internal::UncheckedObserverAdapter"*
  %863 = inttoptr i64 %270 to i64*
  store i64 %861, i64* %863, align 8
  %864 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %862, i64 1
  %865 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %864 to i64
  br label %866

866:                                              ; preds = %860, %269
  %867 = phi i64 [ %270, %269 ], [ %865, %860 ]
  %868 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 2, i32 0
  %869 = load i8*, i8** %868, align 8
  %870 = icmp eq i8* %869, null
  br i1 %870, label %877, label %871

871:                                              ; preds = %866
  %872 = ptrtoint i8* %869 to i64
  %873 = inttoptr i64 %867 to %"class.base::internal::UncheckedObserverAdapter"*
  %874 = inttoptr i64 %867 to i64*
  store i64 %872, i64* %874, align 8
  %875 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %873, i64 1
  %876 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %875 to i64
  br label %877

877:                                              ; preds = %871, %866
  %878 = phi i64 [ %867, %866 ], [ %876, %871 ]
  %879 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 3, i32 0
  %880 = load i8*, i8** %879, align 8
  %881 = icmp eq i8* %880, null
  br i1 %881, label %888, label %882

882:                                              ; preds = %877
  %883 = ptrtoint i8* %880 to i64
  %884 = inttoptr i64 %878 to %"class.base::internal::UncheckedObserverAdapter"*
  %885 = inttoptr i64 %878 to i64*
  store i64 %883, i64* %885, align 8
  %886 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %884, i64 1
  %887 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %886 to i64
  br label %888

888:                                              ; preds = %882, %877
  %889 = phi i64 [ %878, %877 ], [ %887, %882 ]
  %890 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 4
  %891 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %890, %209
  br i1 %891, label %274, label %257
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager20RemoveTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.aura::Window"**, %"class.aura::Window"*** %9, align 8
  %11 = icmp eq %"class.aura::Window"** %8, %10
  %12 = ptrtoint %"class.aura::Window"** %10 to i64
  br i1 %11, label %20, label %13

13:                                               ; preds = %2, %17
  %14 = phi %"class.aura::Window"** [ %18, %17 ], [ %8, %2 ]
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  %16 = icmp eq %"class.aura::Window"* %15, %1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %14, i64 1
  %19 = icmp eq %"class.aura::Window"** %18, %10
  br i1 %19, label %20, label %13

20:                                               ; preds = %13, %17, %2
  %21 = phi %"class.aura::Window"** [ %8, %2 ], [ %14, %13 ], [ %10, %17 ]
  %22 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %21, i64 1
  %23 = ptrtoint %"class.aura::Window"** %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.aura::Window"** %21 to i8*
  %29 = bitcast %"class.aura::Window"** %22 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #9
  br label %30

30:                                               ; preds = %20, %27
  %31 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %21, i64 %25
  store %"class.aura::Window"** %31, %"class.aura::Window"*** %9, align 8
  %32 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %1)
  %33 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %32, i64 0, i32 2
  store %"class.aura::Window"* null, %"class.aura::Window"** %33, align 8
  %34 = load %"class.wm::TransientWindowController"*, %"class.wm::TransientWindowController"** @_ZN2wm25TransientWindowController9instance_E, align 8
  %35 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %34, i64 0, i32 1
  %36 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %40 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  %42 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %40, align 8, !noalias !19
  %43 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %34, i64 0, i32 1, i32 0, i32 0, i32 1
  %44 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %43, align 8, !noalias !19
  %45 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %42, %44
  %46 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %46) #9
  br i1 %45, label %47, label %49

47:                                               ; preds = %30
  %48 = bitcast %"class.base::ObserverList.90"** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #9, !alias.scope !19
  br label %89

49:                                               ; preds = %30
  store %"class.base::ObserverList.90"* %35, %"class.base::ObserverList.90"** %37, align 8
  %50 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %34, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %46, %"class.base::internal::LinkNodeBase"* %50) #9
  store i64 0, i64* %38, align 8
  %51 = getelementptr inbounds %"class.wm::TransientWindowController", %"class.wm::TransientWindowController"* %34, i64 0, i32 1, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %43 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.base::ObserverList.90"* %35 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = ashr exact i64 %59, 3
  br label %61

61:                                               ; preds = %54, %49
  %62 = phi i64 [ %60, %54 ], [ -1, %49 ]
  store i64 %62, i64* %39, align 8
  %63 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %37, align 8
  %64 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %63, i64 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.base::ObserverList.90"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ult i64 %70, %62
  %72 = select i1 %71, i64 %70, i64 %62
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %61
  %75 = inttoptr i64 %68 to %"class.base::internal::UncheckedObserverAdapter"*
  %76 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %63, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %89

80:                                               ; preds = %74, %84
  %81 = phi i64 [ %82, %84 ], [ 0, %74 ]
  %82 = add nuw i64 %81, 1
  store i64 %82, i64* %38, align 8
  %83 = icmp ult i64 %82, %72
  br i1 %83, label %84, label %89

84:                                               ; preds = %80
  %85 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %76, align 8
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %85, i64 %82, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %80, label %89

89:                                               ; preds = %84, %80, %74, %61, %47
  %90 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %93 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %94 = getelementptr inbounds %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.base::ObserverList<aura::client::TransientWindowClientObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %94) #9
  %96 = bitcast %"class.base::ObserverList.90"** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #9, !alias.scope !22
  %97 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %98 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %37, align 8
  br label %99

99:                                               ; preds = %346, %89
  %100 = phi %"class.base::ObserverList.90"* [ %98, %89 ], [ %344, %346 ]
  %101 = icmp eq %"class.base::ObserverList.90"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %38, align 8
  %104 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %100, i64 0, i32 0, i32 0, i32 1
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ObserverList.90"* %100 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 3
  %111 = load i64, i64* %39, align 8
  %112 = icmp ult i64 %110, %111
  %113 = select i1 %112, i64 %110, i64 %111
  %114 = icmp eq i64 %103, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %102
  %116 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %91, align 8
  br label %133

117:                                              ; preds = %102, %99
  %118 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %91, align 8
  %119 = icmp eq %"class.base::ObserverList.90"* %118, null
  br i1 %119, label %233, label %120

120:                                              ; preds = %117
  %121 = load i64, i64* %92, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %118, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.base::ObserverList.90"* %118 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 3
  %129 = load i64, i64* %93, align 8
  %130 = icmp ult i64 %128, %129
  %131 = select i1 %130, i64 %128, i64 %129
  %132 = icmp eq i64 %121, %131
  br i1 %132, label %142, label %133

133:                                              ; preds = %120, %115
  %134 = phi %"class.base::ObserverList.90"* [ %116, %115 ], [ %118, %120 ]
  %135 = icmp eq %"class.base::ObserverList.90"* %100, %134
  %136 = load i64, i64* %38, align 8
  %137 = load i64, i64* %92, align 8
  %138 = icmp eq i64 %136, %137
  %139 = and i1 %135, %138
  br i1 %139, label %140, label %333

140:                                              ; preds = %133
  %141 = icmp eq %"class.base::ObserverList.90"* %100, null
  br i1 %141, label %233, label %142

142:                                              ; preds = %120, %140
  %143 = phi %"class.base::ObserverList.90"* [ %100, %140 ], [ %118, %120 ]
  %144 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %143, i64 0, i32 1
  %145 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %143, i64 0, i32 1, i32 0, i32 0, i32 1
  %146 = bitcast %"class.base::internal::LinkNodeBase"** %145 to %"class.base::LinkNode.92"**
  %147 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %146, align 8
  %148 = bitcast %"class.base::LinkedList.91"* %144 to %"class.base::LinkNode.92"**
  %149 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %148, align 8
  %150 = icmp eq %"class.base::LinkNode.92"* %147, %149
  br i1 %150, label %151, label %229

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %143, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %152, align 8
  %154 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %143, i64 0, i32 0, i32 0, i32 1
  %155 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %153, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %151, %162
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %162 ], [ %153, %151 ]
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %164 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %163, %155
  br i1 %164, label %229, label %157

165:                                              ; preds = %157, %151
  %166 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %153, %151 ], [ %158, %157 ]
  %167 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %166 to i64
  %168 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %166, %155
  br i1 %168, label %229, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %166, i64 1
  %171 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %155
  br i1 %171, label %224, label %172

172:                                              ; preds = %169
  %173 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 -2, i32 0
  %174 = ptrtoint i8** %173 to i64
  %175 = sub i64 %174, %167
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %198, label %180

180:                                              ; preds = %172, %193
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %195, %193 ], [ %170, %172 ]
  %182 = phi i64 [ %194, %193 ], [ %167, %172 ]
  %183 = phi i64 [ %196, %193 ], [ %178, %172 ]
  %184 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %180
  %188 = ptrtoint i8* %185 to i64
  %189 = inttoptr i64 %182 to %"class.base::internal::UncheckedObserverAdapter"*
  %190 = inttoptr i64 %182 to i64*
  store i64 %188, i64* %190, align 8
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %189, i64 1
  %192 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %191 to i64
  br label %193

193:                                              ; preds = %187, %180
  %194 = phi i64 [ %182, %180 ], [ %192, %187 ]
  %195 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %196 = add i64 %183, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %180, !llvm.loop !25

198:                                              ; preds = %193, %172
  %199 = phi i64 [ undef, %172 ], [ %194, %193 ]
  %200 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %172 ], [ %195, %193 ]
  %201 = phi i64 [ %167, %172 ], [ %194, %193 ]
  %202 = icmp ult i64 %175, 24
  br i1 %202, label %220, label %203

203:                                              ; preds = %198, %836
  %204 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %838, %836 ], [ %200, %198 ]
  %205 = phi i64 [ %837, %836 ], [ %201, %198 ]
  %206 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %203
  %210 = ptrtoint i8* %207 to i64
  %211 = inttoptr i64 %205 to %"class.base::internal::UncheckedObserverAdapter"*
  %212 = inttoptr i64 %205 to i64*
  store i64 %210, i64* %212, align 8
  %213 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %211, i64 1
  %214 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %213 to i64
  br label %215

215:                                              ; preds = %209, %203
  %216 = phi i64 [ %205, %203 ], [ %214, %209 ]
  %217 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 1, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %814, label %808

220:                                              ; preds = %836, %198
  %221 = phi i64 [ %199, %198 ], [ %837, %836 ]
  %222 = inttoptr i64 %221 to %"class.base::internal::UncheckedObserverAdapter"*
  %223 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %224

224:                                              ; preds = %220, %169
  %225 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %169 ], [ %223, %220 ]
  %226 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %166, %169 ], [ %222, %220 ]
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %225
  br i1 %227, label %229, label %228

228:                                              ; preds = %224
  store %"class.base::internal::UncheckedObserverAdapter"* %226, %"class.base::internal::UncheckedObserverAdapter"** %154, align 8
  br label %229

229:                                              ; preds = %162, %228, %224, %165, %142
  %230 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %91, align 8
  %231 = icmp eq %"class.base::ObserverList.90"* %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  store %"class.base::ObserverList.90"* null, %"class.base::ObserverList.90"** %91, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %94) #9
  br label %233

233:                                              ; preds = %117, %140, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #9
  %234 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %37, align 8
  %235 = icmp eq %"class.base::ObserverList.90"* %234, null
  br i1 %235, label %326, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %234, i64 0, i32 1
  %238 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %234, i64 0, i32 1, i32 0, i32 0, i32 1
  %239 = bitcast %"class.base::internal::LinkNodeBase"** %238 to %"class.base::LinkNode.92"**
  %240 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %239, align 8
  %241 = bitcast %"class.base::LinkedList.91"* %237 to %"class.base::LinkNode.92"**
  %242 = load %"class.base::LinkNode.92"*, %"class.base::LinkNode.92"** %241, align 8
  %243 = icmp eq %"class.base::LinkNode.92"* %240, %242
  br i1 %243, label %244, label %322

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %234, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %245, align 8
  %247 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %234, i64 0, i32 0, i32 0, i32 1
  %248 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %246, %248
  br i1 %249, label %258, label %250

250:                                              ; preds = %244, %255
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %255 ], [ %246, %244 ]
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %257 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %256, %248
  br i1 %257, label %322, label %250

258:                                              ; preds = %250, %244
  %259 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %246, %244 ], [ %251, %250 ]
  %260 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %259 to i64
  %261 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %259, %248
  br i1 %261, label %322, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %259, i64 1
  %264 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %248
  br i1 %264, label %317, label %265

265:                                              ; preds = %262
  %266 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 -2, i32 0
  %267 = ptrtoint i8** %266 to i64
  %268 = sub i64 %267, %260
  %269 = lshr i64 %268, 3
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 3
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %291, label %273

273:                                              ; preds = %265, %286
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %288, %286 ], [ %263, %265 ]
  %275 = phi i64 [ %287, %286 ], [ %260, %265 ]
  %276 = phi i64 [ %289, %286 ], [ %271, %265 ]
  %277 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = icmp eq i8* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %273
  %281 = ptrtoint i8* %278 to i64
  %282 = inttoptr i64 %275 to %"class.base::internal::UncheckedObserverAdapter"*
  %283 = inttoptr i64 %275 to i64*
  store i64 %281, i64* %283, align 8
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %282, i64 1
  %285 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %284 to i64
  br label %286

286:                                              ; preds = %280, %273
  %287 = phi i64 [ %275, %273 ], [ %285, %280 ]
  %288 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %289 = add i64 %276, -1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %291, label %273, !llvm.loop !26

291:                                              ; preds = %286, %265
  %292 = phi i64 [ undef, %265 ], [ %287, %286 ]
  %293 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %265 ], [ %288, %286 ]
  %294 = phi i64 [ %260, %265 ], [ %287, %286 ]
  %295 = icmp ult i64 %268, 24
  br i1 %295, label %313, label %296

296:                                              ; preds = %291, %804
  %297 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %806, %804 ], [ %293, %291 ]
  %298 = phi i64 [ %805, %804 ], [ %294, %291 ]
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %308, label %302

302:                                              ; preds = %296
  %303 = ptrtoint i8* %300 to i64
  %304 = inttoptr i64 %298 to %"class.base::internal::UncheckedObserverAdapter"*
  %305 = inttoptr i64 %298 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %304, i64 1
  %307 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %306 to i64
  br label %308

308:                                              ; preds = %302, %296
  %309 = phi i64 [ %298, %296 ], [ %307, %302 ]
  %310 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 1, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %782, label %776

313:                                              ; preds = %804, %291
  %314 = phi i64 [ %292, %291 ], [ %805, %804 ]
  %315 = inttoptr i64 %314 to %"class.base::internal::UncheckedObserverAdapter"*
  %316 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %317

317:                                              ; preds = %313, %262
  %318 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %262 ], [ %316, %313 ]
  %319 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %262 ], [ %315, %313 ]
  %320 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %319, %318
  br i1 %320, label %322, label %321

321:                                              ; preds = %317
  store %"class.base::internal::UncheckedObserverAdapter"* %319, %"class.base::internal::UncheckedObserverAdapter"** %247, align 8
  br label %322

322:                                              ; preds = %255, %321, %317, %258, %236
  %323 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %37, align 8
  %324 = icmp eq %"class.base::ObserverList.90"* %323, null
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  store %"class.base::ObserverList.90"* null, %"class.base::ObserverList.90"** %37, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %46) #9
  br label %326

326:                                              ; preds = %233, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #9
  %327 = load %"class.aura::Window"*, %"class.aura::Window"** %97, align 8
  %328 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %327, i64 0, i32 13
  %329 = load %"class.aura::Window"*, %"class.aura::Window"** %328, align 8
  %330 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %331 = load %"class.aura::Window"*, %"class.aura::Window"** %330, align 8
  %332 = icmp eq %"class.aura::Window"* %329, %331
  br i1 %332, label %376, label %377

333:                                              ; preds = %133
  %334 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %100, i64 0, i32 0, i32 0, i32 0
  %335 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %334, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %335, i64 %136
  %337 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %336 to %"class.aura::client::TransientWindowClientObserver"**
  %338 = load %"class.aura::client::TransientWindowClientObserver"*, %"class.aura::client::TransientWindowClientObserver"** %337, align 8
  %339 = load %"class.aura::Window"*, %"class.aura::Window"** %97, align 8
  %340 = bitcast %"class.aura::client::TransientWindowClientObserver"* %338 to void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %341 = load void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %341, i64 1
  %343 = load void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.aura::client::TransientWindowClientObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %342, align 8
  call void %343(%"class.aura::client::TransientWindowClientObserver"* %338, %"class.aura::Window"* %339, %"class.aura::Window"* %1) #9
  %344 = load %"class.base::ObserverList.90"*, %"class.base::ObserverList.90"** %37, align 8
  %345 = icmp eq %"class.base::ObserverList.90"* %344, null
  br i1 %345, label %346, label %347

346:                                              ; preds = %371, %367, %333, %347, %361
  br label %99

347:                                              ; preds = %333
  %348 = load i64, i64* %38, align 8
  %349 = add i64 %348, 1
  store i64 %349, i64* %38, align 8
  %350 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %344, i64 0, i32 0, i32 0, i32 1
  %351 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.base::ObserverList.90"* %344 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = sub i64 %352, %354
  %356 = ashr exact i64 %355, 3
  %357 = load i64, i64* %39, align 8
  %358 = icmp ult i64 %356, %357
  %359 = select i1 %358, i64 %356, i64 %357
  %360 = icmp ult i64 %349, %359
  br i1 %360, label %361, label %346

361:                                              ; preds = %347
  %362 = inttoptr i64 %354 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = getelementptr inbounds %"class.base::ObserverList.90", %"class.base::ObserverList.90"* %344, i64 0, i32 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 %349, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = icmp eq i8* %365, null
  br i1 %366, label %367, label %346

367:                                              ; preds = %361, %371
  %368 = phi i64 [ %369, %371 ], [ %349, %361 ]
  %369 = add nuw i64 %368, 1
  store i64 %369, i64* %38, align 8
  %370 = icmp ult i64 %369, %359
  br i1 %370, label %371, label %346

371:                                              ; preds = %367
  %372 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %363, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 %369, i32 0
  %374 = load i8*, i8** %373, align 8
  %375 = icmp eq i8* %374, null
  br i1 %375, label %367, label %346

376:                                              ; preds = %326
  call void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* %0)
  br label %377

377:                                              ; preds = %376, %326
  %378 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10
  %379 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %379) #9
  %380 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %381 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %382 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %383 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %378, i64 0, i32 0, i32 0, i32 0
  %384 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %384, i8 -86, i64 40, i1 false)
  %385 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %383, align 8, !noalias !27
  %386 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %387 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %386, align 8, !noalias !27
  %388 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %385, %387
  %389 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %389) #9
  br i1 %388, label %390, label %392

390:                                              ; preds = %377
  %391 = bitcast %"class.base::ObserverList.86"** %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 24, i1 false) #9, !alias.scope !27
  br label %432

392:                                              ; preds = %377
  store %"class.base::ObserverList.86"* %378, %"class.base::ObserverList.86"** %380, align 8
  %393 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %389, %"class.base::internal::LinkNodeBase"* %393) #9
  store i64 0, i64* %381, align 8
  %394 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 3
  %395 = load i32, i32* %394, align 8
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %404, label %397

397:                                              ; preds = %392
  %398 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %386 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = bitcast %"class.base::ObserverList.86"* %378 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = sub i64 %399, %401
  %403 = ashr exact i64 %402, 3
  br label %404

404:                                              ; preds = %397, %392
  %405 = phi i64 [ %403, %397 ], [ -1, %392 ]
  store i64 %405, i64* %382, align 8
  %406 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %380, align 8
  %407 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %406, i64 0, i32 0, i32 0, i32 1
  %408 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %407 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"class.base::ObserverList.86"* %406 to i64*
  %411 = load i64, i64* %410, align 8
  %412 = sub i64 %409, %411
  %413 = ashr exact i64 %412, 3
  %414 = icmp ult i64 %413, %405
  %415 = select i1 %414, i64 %413, i64 %405
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %432, label %417

417:                                              ; preds = %404
  %418 = inttoptr i64 %411 to %"class.base::internal::UncheckedObserverAdapter"*
  %419 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %406, i64 0, i32 0, i32 0, i32 0
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %418, i64 0, i32 0
  %421 = load i8*, i8** %420, align 8
  %422 = icmp eq i8* %421, null
  br i1 %422, label %423, label %432

423:                                              ; preds = %417, %427
  %424 = phi i64 [ %425, %427 ], [ 0, %417 ]
  %425 = add nuw i64 %424, 1
  store i64 %425, i64* %381, align 8
  %426 = icmp ult i64 %425, %415
  br i1 %426, label %427, label %432

427:                                              ; preds = %423
  %428 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %419, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %428, i64 %425, i32 0
  %430 = load i8*, i8** %429, align 8
  %431 = icmp eq i8* %430, null
  br i1 %431, label %423, label %432

432:                                              ; preds = %427, %423, %417, %404, %390
  %433 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %433) #9
  %434 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %435 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %436 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %437 = getelementptr inbounds %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.base::ObserverList<wm::TransientWindowObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %438, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %437) #9
  %439 = bitcast %"class.base::ObserverList.86"** %434 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %439, i8 0, i64 24, i1 false) #9, !alias.scope !30
  %440 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %380, align 8
  br label %441

441:                                              ; preds = %682, %432
  %442 = phi %"class.base::ObserverList.86"* [ %440, %432 ], [ %680, %682 ]
  %443 = icmp eq %"class.base::ObserverList.86"* %442, null
  br i1 %443, label %459, label %444

444:                                              ; preds = %441
  %445 = load i64, i64* %381, align 8
  %446 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %442, i64 0, i32 0, i32 0, i32 1
  %447 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %446 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = bitcast %"class.base::ObserverList.86"* %442 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = sub i64 %448, %450
  %452 = ashr exact i64 %451, 3
  %453 = load i64, i64* %382, align 8
  %454 = icmp ult i64 %452, %453
  %455 = select i1 %454, i64 %452, i64 %453
  %456 = icmp eq i64 %445, %455
  br i1 %456, label %459, label %457

457:                                              ; preds = %444
  %458 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %434, align 8
  br label %475

459:                                              ; preds = %444, %441
  %460 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %434, align 8
  %461 = icmp eq %"class.base::ObserverList.86"* %460, null
  br i1 %461, label %575, label %462

462:                                              ; preds = %459
  %463 = load i64, i64* %435, align 8
  %464 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %460, i64 0, i32 0, i32 0, i32 1
  %465 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.base::ObserverList.86"* %460 to i64*
  %468 = load i64, i64* %467, align 8
  %469 = sub i64 %466, %468
  %470 = ashr exact i64 %469, 3
  %471 = load i64, i64* %436, align 8
  %472 = icmp ult i64 %470, %471
  %473 = select i1 %472, i64 %470, i64 %471
  %474 = icmp eq i64 %463, %473
  br i1 %474, label %484, label %475

475:                                              ; preds = %462, %457
  %476 = phi %"class.base::ObserverList.86"* [ %458, %457 ], [ %460, %462 ]
  %477 = icmp eq %"class.base::ObserverList.86"* %442, %476
  %478 = load i64, i64* %381, align 8
  %479 = load i64, i64* %435, align 8
  %480 = icmp eq i64 %478, %479
  %481 = and i1 %477, %480
  br i1 %481, label %482, label %669

482:                                              ; preds = %475
  %483 = icmp eq %"class.base::ObserverList.86"* %442, null
  br i1 %483, label %575, label %484

484:                                              ; preds = %462, %482
  %485 = phi %"class.base::ObserverList.86"* [ %442, %482 ], [ %460, %462 ]
  %486 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %485, i64 0, i32 1
  %487 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %485, i64 0, i32 1, i32 0, i32 0, i32 1
  %488 = bitcast %"class.base::internal::LinkNodeBase"** %487 to %"class.base::LinkNode.88"**
  %489 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %488, align 8
  %490 = bitcast %"class.base::LinkedList.87"* %486 to %"class.base::LinkNode.88"**
  %491 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %490, align 8
  %492 = icmp eq %"class.base::LinkNode.88"* %489, %491
  br i1 %492, label %493, label %571

493:                                              ; preds = %484
  %494 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %485, i64 0, i32 0, i32 0, i32 0
  %495 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %494, align 8
  %496 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %485, i64 0, i32 0, i32 0, i32 1
  %497 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %496, align 8
  %498 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %495, %497
  br i1 %498, label %507, label %499

499:                                              ; preds = %493, %504
  %500 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %505, %504 ], [ %495, %493 ]
  %501 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %500, i64 0, i32 0
  %502 = load i8*, i8** %501, align 8
  %503 = icmp eq i8* %502, null
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %500, i64 1
  %506 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %505, %497
  br i1 %506, label %571, label %499

507:                                              ; preds = %499, %493
  %508 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %495, %493 ], [ %500, %499 ]
  %509 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %508 to i64
  %510 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %508, %497
  br i1 %510, label %571, label %511

511:                                              ; preds = %507
  %512 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %508, i64 1
  %513 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %512, %497
  br i1 %513, label %566, label %514

514:                                              ; preds = %511
  %515 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %497, i64 -2, i32 0
  %516 = ptrtoint i8** %515 to i64
  %517 = sub i64 %516, %509
  %518 = lshr i64 %517, 3
  %519 = add nuw nsw i64 %518, 1
  %520 = and i64 %519, 3
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %540, label %522

522:                                              ; preds = %514, %535
  %523 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %537, %535 ], [ %512, %514 ]
  %524 = phi i64 [ %536, %535 ], [ %509, %514 ]
  %525 = phi i64 [ %538, %535 ], [ %520, %514 ]
  %526 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %523, i64 0, i32 0
  %527 = load i8*, i8** %526, align 8
  %528 = icmp eq i8* %527, null
  br i1 %528, label %535, label %529

529:                                              ; preds = %522
  %530 = ptrtoint i8* %527 to i64
  %531 = inttoptr i64 %524 to %"class.base::internal::UncheckedObserverAdapter"*
  %532 = inttoptr i64 %524 to i64*
  store i64 %530, i64* %532, align 8
  %533 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %531, i64 1
  %534 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %533 to i64
  br label %535

535:                                              ; preds = %529, %522
  %536 = phi i64 [ %524, %522 ], [ %534, %529 ]
  %537 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %523, i64 1
  %538 = add i64 %525, -1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %522, !llvm.loop !33

540:                                              ; preds = %535, %514
  %541 = phi i64 [ undef, %514 ], [ %536, %535 ]
  %542 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %512, %514 ], [ %537, %535 ]
  %543 = phi i64 [ %509, %514 ], [ %536, %535 ]
  %544 = icmp ult i64 %517, 24
  br i1 %544, label %562, label %545

545:                                              ; preds = %540, %772
  %546 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %774, %772 ], [ %542, %540 ]
  %547 = phi i64 [ %773, %772 ], [ %543, %540 ]
  %548 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %546, i64 0, i32 0
  %549 = load i8*, i8** %548, align 8
  %550 = icmp eq i8* %549, null
  br i1 %550, label %557, label %551

551:                                              ; preds = %545
  %552 = ptrtoint i8* %549 to i64
  %553 = inttoptr i64 %547 to %"class.base::internal::UncheckedObserverAdapter"*
  %554 = inttoptr i64 %547 to i64*
  store i64 %552, i64* %554, align 8
  %555 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %553, i64 1
  %556 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %555 to i64
  br label %557

557:                                              ; preds = %551, %545
  %558 = phi i64 [ %547, %545 ], [ %556, %551 ]
  %559 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %546, i64 1, i32 0
  %560 = load i8*, i8** %559, align 8
  %561 = icmp eq i8* %560, null
  br i1 %561, label %750, label %744

562:                                              ; preds = %772, %540
  %563 = phi i64 [ %541, %540 ], [ %773, %772 ]
  %564 = inttoptr i64 %563 to %"class.base::internal::UncheckedObserverAdapter"*
  %565 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %496, align 8
  br label %566

566:                                              ; preds = %562, %511
  %567 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %497, %511 ], [ %565, %562 ]
  %568 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %508, %511 ], [ %564, %562 ]
  %569 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %568, %567
  br i1 %569, label %571, label %570

570:                                              ; preds = %566
  store %"class.base::internal::UncheckedObserverAdapter"* %568, %"class.base::internal::UncheckedObserverAdapter"** %496, align 8
  br label %571

571:                                              ; preds = %504, %570, %566, %507, %484
  %572 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %434, align 8
  %573 = icmp eq %"class.base::ObserverList.86"* %572, null
  br i1 %573, label %575, label %574

574:                                              ; preds = %571
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %434, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %437) #9
  br label %575

575:                                              ; preds = %459, %482, %571, %574
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %433) #9
  %576 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %380, align 8
  %577 = icmp eq %"class.base::ObserverList.86"* %576, null
  br i1 %577, label %668, label %578

578:                                              ; preds = %575
  %579 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %576, i64 0, i32 1
  %580 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %576, i64 0, i32 1, i32 0, i32 0, i32 1
  %581 = bitcast %"class.base::internal::LinkNodeBase"** %580 to %"class.base::LinkNode.88"**
  %582 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %581, align 8
  %583 = bitcast %"class.base::LinkedList.87"* %579 to %"class.base::LinkNode.88"**
  %584 = load %"class.base::LinkNode.88"*, %"class.base::LinkNode.88"** %583, align 8
  %585 = icmp eq %"class.base::LinkNode.88"* %582, %584
  br i1 %585, label %586, label %664

586:                                              ; preds = %578
  %587 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %576, i64 0, i32 0, i32 0, i32 0
  %588 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %587, align 8
  %589 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %576, i64 0, i32 0, i32 0, i32 1
  %590 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %589, align 8
  %591 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %588, %590
  br i1 %591, label %600, label %592

592:                                              ; preds = %586, %597
  %593 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %598, %597 ], [ %588, %586 ]
  %594 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %593, i64 0, i32 0
  %595 = load i8*, i8** %594, align 8
  %596 = icmp eq i8* %595, null
  br i1 %596, label %600, label %597

597:                                              ; preds = %592
  %598 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %593, i64 1
  %599 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %598, %590
  br i1 %599, label %664, label %592

600:                                              ; preds = %592, %586
  %601 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %588, %586 ], [ %593, %592 ]
  %602 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %601 to i64
  %603 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %601, %590
  br i1 %603, label %664, label %604

604:                                              ; preds = %600
  %605 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %601, i64 1
  %606 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %605, %590
  br i1 %606, label %659, label %607

607:                                              ; preds = %604
  %608 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %590, i64 -2, i32 0
  %609 = ptrtoint i8** %608 to i64
  %610 = sub i64 %609, %602
  %611 = lshr i64 %610, 3
  %612 = add nuw nsw i64 %611, 1
  %613 = and i64 %612, 3
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %633, label %615

615:                                              ; preds = %607, %628
  %616 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %630, %628 ], [ %605, %607 ]
  %617 = phi i64 [ %629, %628 ], [ %602, %607 ]
  %618 = phi i64 [ %631, %628 ], [ %613, %607 ]
  %619 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %616, i64 0, i32 0
  %620 = load i8*, i8** %619, align 8
  %621 = icmp eq i8* %620, null
  br i1 %621, label %628, label %622

622:                                              ; preds = %615
  %623 = ptrtoint i8* %620 to i64
  %624 = inttoptr i64 %617 to %"class.base::internal::UncheckedObserverAdapter"*
  %625 = inttoptr i64 %617 to i64*
  store i64 %623, i64* %625, align 8
  %626 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %624, i64 1
  %627 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %626 to i64
  br label %628

628:                                              ; preds = %622, %615
  %629 = phi i64 [ %617, %615 ], [ %627, %622 ]
  %630 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %616, i64 1
  %631 = add i64 %618, -1
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %633, label %615, !llvm.loop !34

633:                                              ; preds = %628, %607
  %634 = phi i64 [ undef, %607 ], [ %629, %628 ]
  %635 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %605, %607 ], [ %630, %628 ]
  %636 = phi i64 [ %602, %607 ], [ %629, %628 ]
  %637 = icmp ult i64 %610, 24
  br i1 %637, label %655, label %638

638:                                              ; preds = %633, %740
  %639 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %742, %740 ], [ %635, %633 ]
  %640 = phi i64 [ %741, %740 ], [ %636, %633 ]
  %641 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 0, i32 0
  %642 = load i8*, i8** %641, align 8
  %643 = icmp eq i8* %642, null
  br i1 %643, label %650, label %644

644:                                              ; preds = %638
  %645 = ptrtoint i8* %642 to i64
  %646 = inttoptr i64 %640 to %"class.base::internal::UncheckedObserverAdapter"*
  %647 = inttoptr i64 %640 to i64*
  store i64 %645, i64* %647, align 8
  %648 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %646, i64 1
  %649 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %648 to i64
  br label %650

650:                                              ; preds = %644, %638
  %651 = phi i64 [ %640, %638 ], [ %649, %644 ]
  %652 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 1, i32 0
  %653 = load i8*, i8** %652, align 8
  %654 = icmp eq i8* %653, null
  br i1 %654, label %718, label %712

655:                                              ; preds = %740, %633
  %656 = phi i64 [ %634, %633 ], [ %741, %740 ]
  %657 = inttoptr i64 %656 to %"class.base::internal::UncheckedObserverAdapter"*
  %658 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %589, align 8
  br label %659

659:                                              ; preds = %655, %604
  %660 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %590, %604 ], [ %658, %655 ]
  %661 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %601, %604 ], [ %657, %655 ]
  %662 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %661, %660
  br i1 %662, label %664, label %663

663:                                              ; preds = %659
  store %"class.base::internal::UncheckedObserverAdapter"* %661, %"class.base::internal::UncheckedObserverAdapter"** %589, align 8
  br label %664

664:                                              ; preds = %597, %663, %659, %600, %578
  %665 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %380, align 8
  %666 = icmp eq %"class.base::ObserverList.86"* %665, null
  br i1 %666, label %668, label %667

667:                                              ; preds = %664
  store %"class.base::ObserverList.86"* null, %"class.base::ObserverList.86"** %380, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %389) #9
  br label %668

668:                                              ; preds = %575, %664, %667
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %379) #9
  ret void

669:                                              ; preds = %475
  %670 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %442, i64 0, i32 0, i32 0, i32 0
  %671 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %670, align 8
  %672 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %671, i64 %478
  %673 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %672 to %"class.wm::TransientWindowObserver"**
  %674 = load %"class.wm::TransientWindowObserver"*, %"class.wm::TransientWindowObserver"** %673, align 8
  %675 = load %"class.aura::Window"*, %"class.aura::Window"** %97, align 8
  %676 = bitcast %"class.wm::TransientWindowObserver"* %674 to void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)***
  %677 = load void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)**, void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*** %676, align 8
  %678 = getelementptr inbounds void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %677, i64 1
  %679 = load void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)*, void (%"class.wm::TransientWindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)** %678, align 8
  call void %679(%"class.wm::TransientWindowObserver"* %674, %"class.aura::Window"* %675, %"class.aura::Window"* %1) #9
  %680 = load %"class.base::ObserverList.86"*, %"class.base::ObserverList.86"** %380, align 8
  %681 = icmp eq %"class.base::ObserverList.86"* %680, null
  br i1 %681, label %682, label %683

682:                                              ; preds = %707, %703, %669, %683, %697
  br label %441

683:                                              ; preds = %669
  %684 = load i64, i64* %381, align 8
  %685 = add i64 %684, 1
  store i64 %685, i64* %381, align 8
  %686 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %680, i64 0, i32 0, i32 0, i32 1
  %687 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"class.base::ObserverList.86"* %680 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = sub i64 %688, %690
  %692 = ashr exact i64 %691, 3
  %693 = load i64, i64* %382, align 8
  %694 = icmp ult i64 %692, %693
  %695 = select i1 %694, i64 %692, i64 %693
  %696 = icmp ult i64 %685, %695
  br i1 %696, label %697, label %682

697:                                              ; preds = %683
  %698 = inttoptr i64 %690 to %"class.base::internal::UncheckedObserverAdapter"*
  %699 = getelementptr inbounds %"class.base::ObserverList.86", %"class.base::ObserverList.86"* %680, i64 0, i32 0, i32 0, i32 0
  %700 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %698, i64 %685, i32 0
  %701 = load i8*, i8** %700, align 8
  %702 = icmp eq i8* %701, null
  br i1 %702, label %703, label %682

703:                                              ; preds = %697, %707
  %704 = phi i64 [ %705, %707 ], [ %685, %697 ]
  %705 = add nuw i64 %704, 1
  store i64 %705, i64* %381, align 8
  %706 = icmp ult i64 %705, %695
  br i1 %706, label %707, label %682

707:                                              ; preds = %703
  %708 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %699, align 8
  %709 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %708, i64 %705, i32 0
  %710 = load i8*, i8** %709, align 8
  %711 = icmp eq i8* %710, null
  br i1 %711, label %703, label %682

712:                                              ; preds = %650
  %713 = ptrtoint i8* %653 to i64
  %714 = inttoptr i64 %651 to %"class.base::internal::UncheckedObserverAdapter"*
  %715 = inttoptr i64 %651 to i64*
  store i64 %713, i64* %715, align 8
  %716 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %714, i64 1
  %717 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %716 to i64
  br label %718

718:                                              ; preds = %712, %650
  %719 = phi i64 [ %651, %650 ], [ %717, %712 ]
  %720 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 2, i32 0
  %721 = load i8*, i8** %720, align 8
  %722 = icmp eq i8* %721, null
  br i1 %722, label %729, label %723

723:                                              ; preds = %718
  %724 = ptrtoint i8* %721 to i64
  %725 = inttoptr i64 %719 to %"class.base::internal::UncheckedObserverAdapter"*
  %726 = inttoptr i64 %719 to i64*
  store i64 %724, i64* %726, align 8
  %727 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %725, i64 1
  %728 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %727 to i64
  br label %729

729:                                              ; preds = %723, %718
  %730 = phi i64 [ %719, %718 ], [ %728, %723 ]
  %731 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 3, i32 0
  %732 = load i8*, i8** %731, align 8
  %733 = icmp eq i8* %732, null
  br i1 %733, label %740, label %734

734:                                              ; preds = %729
  %735 = ptrtoint i8* %732 to i64
  %736 = inttoptr i64 %730 to %"class.base::internal::UncheckedObserverAdapter"*
  %737 = inttoptr i64 %730 to i64*
  store i64 %735, i64* %737, align 8
  %738 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %736, i64 1
  %739 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %738 to i64
  br label %740

740:                                              ; preds = %734, %729
  %741 = phi i64 [ %730, %729 ], [ %739, %734 ]
  %742 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %639, i64 4
  %743 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %742, %590
  br i1 %743, label %655, label %638

744:                                              ; preds = %557
  %745 = ptrtoint i8* %560 to i64
  %746 = inttoptr i64 %558 to %"class.base::internal::UncheckedObserverAdapter"*
  %747 = inttoptr i64 %558 to i64*
  store i64 %745, i64* %747, align 8
  %748 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %746, i64 1
  %749 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %748 to i64
  br label %750

750:                                              ; preds = %744, %557
  %751 = phi i64 [ %558, %557 ], [ %749, %744 ]
  %752 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %546, i64 2, i32 0
  %753 = load i8*, i8** %752, align 8
  %754 = icmp eq i8* %753, null
  br i1 %754, label %761, label %755

755:                                              ; preds = %750
  %756 = ptrtoint i8* %753 to i64
  %757 = inttoptr i64 %751 to %"class.base::internal::UncheckedObserverAdapter"*
  %758 = inttoptr i64 %751 to i64*
  store i64 %756, i64* %758, align 8
  %759 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %757, i64 1
  %760 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %759 to i64
  br label %761

761:                                              ; preds = %755, %750
  %762 = phi i64 [ %751, %750 ], [ %760, %755 ]
  %763 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %546, i64 3, i32 0
  %764 = load i8*, i8** %763, align 8
  %765 = icmp eq i8* %764, null
  br i1 %765, label %772, label %766

766:                                              ; preds = %761
  %767 = ptrtoint i8* %764 to i64
  %768 = inttoptr i64 %762 to %"class.base::internal::UncheckedObserverAdapter"*
  %769 = inttoptr i64 %762 to i64*
  store i64 %767, i64* %769, align 8
  %770 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %768, i64 1
  %771 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %770 to i64
  br label %772

772:                                              ; preds = %766, %761
  %773 = phi i64 [ %762, %761 ], [ %771, %766 ]
  %774 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %546, i64 4
  %775 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %774, %497
  br i1 %775, label %562, label %545

776:                                              ; preds = %308
  %777 = ptrtoint i8* %311 to i64
  %778 = inttoptr i64 %309 to %"class.base::internal::UncheckedObserverAdapter"*
  %779 = inttoptr i64 %309 to i64*
  store i64 %777, i64* %779, align 8
  %780 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %778, i64 1
  %781 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %780 to i64
  br label %782

782:                                              ; preds = %776, %308
  %783 = phi i64 [ %309, %308 ], [ %781, %776 ]
  %784 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 2, i32 0
  %785 = load i8*, i8** %784, align 8
  %786 = icmp eq i8* %785, null
  br i1 %786, label %793, label %787

787:                                              ; preds = %782
  %788 = ptrtoint i8* %785 to i64
  %789 = inttoptr i64 %783 to %"class.base::internal::UncheckedObserverAdapter"*
  %790 = inttoptr i64 %783 to i64*
  store i64 %788, i64* %790, align 8
  %791 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %789, i64 1
  %792 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %791 to i64
  br label %793

793:                                              ; preds = %787, %782
  %794 = phi i64 [ %783, %782 ], [ %792, %787 ]
  %795 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 3, i32 0
  %796 = load i8*, i8** %795, align 8
  %797 = icmp eq i8* %796, null
  br i1 %797, label %804, label %798

798:                                              ; preds = %793
  %799 = ptrtoint i8* %796 to i64
  %800 = inttoptr i64 %794 to %"class.base::internal::UncheckedObserverAdapter"*
  %801 = inttoptr i64 %794 to i64*
  store i64 %799, i64* %801, align 8
  %802 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %800, i64 1
  %803 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %802 to i64
  br label %804

804:                                              ; preds = %798, %793
  %805 = phi i64 [ %794, %793 ], [ %803, %798 ]
  %806 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 4
  %807 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %806, %248
  br i1 %807, label %313, label %296

808:                                              ; preds = %215
  %809 = ptrtoint i8* %218 to i64
  %810 = inttoptr i64 %216 to %"class.base::internal::UncheckedObserverAdapter"*
  %811 = inttoptr i64 %216 to i64*
  store i64 %809, i64* %811, align 8
  %812 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %810, i64 1
  %813 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %812 to i64
  br label %814

814:                                              ; preds = %808, %215
  %815 = phi i64 [ %216, %215 ], [ %813, %808 ]
  %816 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 2, i32 0
  %817 = load i8*, i8** %816, align 8
  %818 = icmp eq i8* %817, null
  br i1 %818, label %825, label %819

819:                                              ; preds = %814
  %820 = ptrtoint i8* %817 to i64
  %821 = inttoptr i64 %815 to %"class.base::internal::UncheckedObserverAdapter"*
  %822 = inttoptr i64 %815 to i64*
  store i64 %820, i64* %822, align 8
  %823 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %821, i64 1
  %824 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %823 to i64
  br label %825

825:                                              ; preds = %819, %814
  %826 = phi i64 [ %815, %814 ], [ %824, %819 ]
  %827 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 3, i32 0
  %828 = load i8*, i8** %827, align 8
  %829 = icmp eq i8* %828, null
  br i1 %829, label %836, label %830

830:                                              ; preds = %825
  %831 = ptrtoint i8* %828 to i64
  %832 = inttoptr i64 %826 to %"class.base::internal::UncheckedObserverAdapter"*
  %833 = inttoptr i64 %826 to i64*
  store i64 %831, i64* %833, align 8
  %834 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %832, i64 1
  %835 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %834 to i64
  br label %836

836:                                              ; preds = %830, %825
  %837 = phi i64 [ %826, %825 ], [ %835, %830 ]
  %838 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %204, i64 4
  %839 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %838, %155
  br i1 %839, label %220, label %203
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.41", align 8
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 1, !range !35
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %81

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %9 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %8, i64 0, i32 13
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %81, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.std::__1::vector.41"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %17 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 14, i32 0, i32 1
  %18 = bitcast %"class.aura::Window"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.41"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %12
  %26 = icmp ugt i64 %23, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.41"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %28) #11
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #10
  %31 = bitcast i8* %30 to %"class.aura::Window"**
  %32 = bitcast %"class.aura::Window"*** %14 to i8**
  store i8* %30, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector.41"* %2 to i8**
  store i8* %30, i8** %33, align 8
  %34 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %31, i64 %23
  store %"class.aura::Window"** %34, %"class.aura::Window"*** %15, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %16, i64 0, i32 0, i32 0
  %36 = load %"class.aura::Window"**, %"class.aura::Window"*** %35, align 8
  %37 = load i64, i64* %18, align 8
  %38 = bitcast %"class.aura::Window"*** %14 to i64*
  %39 = ptrtoint i8* %30 to i64
  %40 = ptrtoint %"class.aura::Window"** %36 to i64
  %41 = sub i64 %37, %40
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %29
  %44 = lshr exact i64 %41, 3
  %45 = bitcast %"class.aura::Window"** %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %45, i64 %41, i1 false) #9
  %46 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %31, i64 %44
  %47 = ptrtoint %"class.aura::Window"** %46 to i64
  br label %48

48:                                               ; preds = %29, %43
  %49 = phi i64 [ %47, %43 ], [ %39, %29 ]
  store i64 %49, i64* %38, align 8
  %50 = inttoptr i64 %49 to %"class.aura::Window"**
  %51 = icmp eq %"class.aura::Window"** %50, %31
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.aura::Window"** %7 to i64*
  br label %58

54:                                               ; preds = %77, %48
  %55 = ptrtoint i8* %30 to i64
  %56 = bitcast %"class.aura::Window"*** %14 to i64*
  store i64 %55, i64* %56, align 8
  tail call void @_ZdlPv(i8* nonnull %30) #10
  br label %57

57:                                               ; preds = %12, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br label %81

58:                                               ; preds = %79, %52
  %59 = phi %"class.aura::Window"* [ %8, %52 ], [ %80, %79 ]
  %60 = phi %"class.aura::Window"** [ %50, %52 ], [ %61, %79 ]
  %61 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %60, i64 -1
  %62 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %63 = icmp eq %"class.aura::Window"* %62, %59
  br i1 %63, label %77, label %64

64:                                               ; preds = %58
  %65 = tail call zeroext i1 @_ZN2wm20HasTransientAncestorEPKN4aura6WindowES3_(%"class.aura::Window"* %62, %"class.aura::Window"* %59) #9
  br i1 %65, label %66, label %77

66:                                               ; preds = %64
  %67 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %68 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %67)
  %69 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %68, i64 0, i32 4
  %70 = bitcast %"class.aura::Window"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = load i64, i64* %53, align 8
  store i64 %72, i64* %70, align 8
  %73 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %74 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  tail call void @_ZN4aura6Window15StackChildAboveEPS0_S1_(%"class.aura::Window"* nonnull %10, %"class.aura::Window"* %73, %"class.aura::Window"* %74) #9
  %75 = icmp eq %"class.aura::Window"** %69, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %66
  store i64 %71, i64* %70, align 8
  br label %77

77:                                               ; preds = %76, %66, %58, %64
  %78 = icmp eq %"class.aura::Window"** %61, %31
  br i1 %78, label %54, label %79

79:                                               ; preds = %77
  %80 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  br label %58

81:                                               ; preds = %57, %6, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2wm22TransientWindowManager19IsStackingTransientEPKN4aura6WindowE(%"class.wm::TransientWindowManager"* nocapture readonly, %"class.aura::Window"* readnone) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 4
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManagerC2EPN4aura6WindowE(%"class.wm::TransientWindowManager"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #9
  %4 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN2wm22TransientWindowManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  store %"class.aura::Window"* %1, %"class.aura::Window"** %5, align 8
  %6 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10
  %8 = bitcast %"class.base::ObserverList.86"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  %10 = bitcast %"class.aura::Window"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 44, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9, %"class.base::internal::LinkNodeBase"* %9) #9
  %11 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 10, i32 3
  store i32 0, i32* %12, align 8
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %13, %"class.aura::WindowObserver"* %3) #9
  ret void
}

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #6

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #6

declare zeroext i1 @_ZN2wm20HasTransientAncestorEPKN4aura6WindowES3_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #6

declare void @_ZN4aura6Window15StackChildAboveEPS0_S1_(%"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager24OnWindowHierarchyChangedERKN4aura14WindowObserver21HierarchyChangeParamsE(%"class.wm::TransientWindowManager"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = icmp eq %"class.aura::Window"* %4, %6
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 1
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  %11 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 2
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  %13 = icmp eq %"class.aura::Window"* %10, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 8
  %16 = load i8, i8* %15, align 1, !range !35
  store i8 1, i8* %15, align 1
  %17 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.aura::Window"**, %"class.aura::Window"*** %17, align 8
  %19 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = load %"class.aura::Window"**, %"class.aura::Window"*** %19, align 8
  %21 = icmp eq %"class.aura::Window"** %18, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %34, %14
  %23 = phi i8 [ 0, %14 ], [ %35, %34 ]
  %24 = icmp eq i8* %15, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  store i8 %16, i8* %15, align 1
  br label %38

26:                                               ; preds = %14, %34
  %27 = phi i8 [ %35, %34 ], [ 0, %14 ]
  %28 = phi %"class.aura::Window"** [ %36, %34 ], [ %18, %14 ]
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  %30 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %29, i64 0, i32 13
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %32 = icmp eq %"class.aura::Window"* %31, %12
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  tail call void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"* nonnull %10, %"class.aura::Window"* %29) #9
  br label %34

34:                                               ; preds = %33, %26
  %35 = phi i8 [ 1, %33 ], [ %27, %26 ]
  %36 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %28, i64 1
  %37 = icmp eq %"class.aura::Window"** %36, %20
  br i1 %37, label %22, label %26

38:                                               ; preds = %25, %22
  %39 = and i8 %23, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* %0)
  br label %42

42:                                               ; preds = %8, %38, %41
  %43 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 2
  %44 = load %"class.aura::Window"*, %"class.aura::Window"** %43, align 8
  %45 = icmp eq %"class.aura::Window"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %44, i64 0, i32 13
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp eq %"class.aura::Window"* %48, %10
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* nonnull %44)
  tail call void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* %51)
  br label %52

52:                                               ; preds = %46, %50, %42, %2
  ret void
}

declare void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager30UpdateTransientChildVisibilityEb(%"class.wm::TransientWindowManager"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 1, !range !35
  store i8 1, i8* %3, align 1
  br i1 %1, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %7, i64 0, i32 15
  %9 = load i8, i8* %8, align 8, !range !35
  %10 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 6
  store i8 %9, i8* %10, align 1
  tail call void @_ZN4aura6Window4HideEv(%"class.aura::Window"* %7) #9
  br label %23

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 1, !range !35
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 5
  %17 = load i8, i8* %16, align 8, !range !35
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %21) #9
  br label %22

22:                                               ; preds = %15, %11, %19
  store i8 0, i8* %12, align 1
  br label %23

23:                                               ; preds = %22, %5
  %24 = icmp eq i8* %3, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  store i8 %4, i8* %3, align 1
  br label %26

26:                                               ; preds = %23, %25
  ret void
}

declare void @_ZN4aura6Window4HideEv(%"class.aura::Window"*) local_unnamed_addr #6

declare void @_ZN4aura6Window4ShowEv(%"class.aura::Window"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager25OnWindowVisibilityChangedEPN4aura6WindowEb(%"class.wm::TransientWindowManager"*, %"class.aura::Window"* readnone, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.aura::WindowTracker", align 8
  %5 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = icmp eq %"class.aura::Window"* %6, %1
  br i1 %7, label %8, label %68

8:                                                ; preds = %3
  %9 = bitcast %"class.aura::WindowTracker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %4, i64 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.aura::WindowTracker", %"class.aura::WindowTracker"* %4, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3
  %13 = bitcast %"class.aura::WindowTracker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4aura13WindowTrackerC1ERKNSt3__16vectorIPNS_6WindowENS1_9allocatorIS4_EEEE(%"class.aura::WindowTracker"* nonnull %4, %"class.std::__1::vector.41"* dereferenceable(24) %12) #9
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %15 = load %"class.aura::Window"**, %"class.aura::Window"*** %11, align 8
  %16 = icmp eq %"class.aura::Window"** %14, %15
  br i1 %16, label %44, label %17

17:                                               ; preds = %8, %40
  %18 = call %"class.aura::Window"* @_ZN4aura13WindowTracker3PopEv(%"class.aura::WindowTracker"* nonnull %4) #9
  %19 = call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* %18)
  %20 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 7
  %21 = load i8, i8* %20, align 1, !range !35
  store i8 1, i8* %20, align 1
  br i1 %2, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 1
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  %25 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %24, i64 0, i32 15
  %26 = load i8, i8* %25, align 8, !range !35
  %27 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 6
  store i8 %26, i8* %27, align 1
  call void @_ZN4aura6Window4HideEv(%"class.aura::Window"* %24) #9
  br label %40

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 6
  %30 = load i8, i8* %29, align 1, !range !35
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 5
  %34 = load i8, i8* %33, align 8, !range !35
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %19, i64 0, i32 1
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %38) #9
  br label %39

39:                                               ; preds = %36, %32, %28
  store i8 0, i8* %29, align 1
  br label %40

40:                                               ; preds = %22, %39
  store i8 %21, i8* %20, align 1
  %41 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %42 = load %"class.aura::Window"**, %"class.aura::Window"*** %11, align 8
  %43 = icmp eq %"class.aura::Window"** %41, %42
  br i1 %43, label %44, label %17

44:                                               ; preds = %40, %8
  %45 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 7
  %46 = load i8, i8* %45, align 2, !range !35
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %67

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 2
  %50 = load %"class.aura::Window"*, %"class.aura::Window"** %49, align 8
  %51 = icmp eq %"class.aura::Window"* %50, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 5
  %54 = load i8, i8* %53, align 8, !range !35
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %50, i64 0, i32 15
  %58 = load i8, i8* %57, align 8, !range !35
  %59 = icmp ne i8 %58, 0
  %60 = xor i1 %2, true
  %61 = or i1 %59, %60
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  store i8 1, i8* %45, align 1
  %63 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 6
  store i8 1, i8* %63, align 1
  %64 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  call void @_ZN4aura6Window4HideEv(%"class.aura::Window"* %64) #9
  %65 = icmp eq i8* %45, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  store i8 0, i8* %45, align 1
  br label %67

67:                                               ; preds = %66, %62, %56, %44, %48, %52
  call void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  br label %68

68:                                               ; preds = %3, %67
  ret void
}

declare void @_ZN4aura13WindowTrackerC1ERKNSt3__16vectorIPNS_6WindowENS1_9allocatorIS4_EEEE(%"class.aura::WindowTracker"*, %"class.std::__1::vector.41"* dereferenceable(24)) unnamed_addr #6

declare %"class.aura::Window"* @_ZN4aura13WindowTracker3PopEv(%"class.aura::WindowTracker"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4aura13WindowTrackerD1Ev(%"class.aura::WindowTracker"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager23OnWindowStackingChangedEPN4aura6WindowE(%"class.wm::TransientWindowManager"* nocapture readonly, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %4 = tail call i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"* %3, i8* bitcast (%"struct.ui::ClassProperty"* @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_118kPropertyKey_ValueE to i8*), i64 0) #9
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to %"class.wm::TransientWindowManager"*
  %8 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %7, i64 0, i32 4
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = icmp eq %"class.aura::Window"* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %12, align 8
  %14 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %13, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.aura::Window"**, %"class.aura::Window"*** %14, align 8
  %16 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %13, i64 0, i32 14, i32 0, i32 1
  %17 = load %"class.aura::Window"**, %"class.aura::Window"*** %16, align 8
  %18 = icmp eq %"class.aura::Window"** %15, %17
  br i1 %18, label %33, label %19

19:                                               ; preds = %11, %23
  %20 = phi %"class.aura::Window"** [ %24, %23 ], [ %15, %11 ]
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp eq %"class.aura::Window"* %21, %1
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 1
  %25 = icmp eq %"class.aura::Window"** %24, %17
  br i1 %25, label %26, label %19

26:                                               ; preds = %19, %23
  %27 = phi %"class.aura::Window"** [ %17, %23 ], [ %20, %19 ]
  %28 = icmp eq %"class.aura::Window"** %27, %15
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %27, i64 -1
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %32 = icmp eq %"class.aura::Window"* %31, %9
  br i1 %32, label %34, label %33

33:                                               ; preds = %26, %11, %29, %6, %2
  tail call void @_ZN2wm22TransientWindowManager27RestackTransientDescendantsEv(%"class.wm::TransientWindowManager"* %0)
  br label %34

34:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm22TransientWindowManager18OnWindowDestroyingEPN4aura6WindowE(%"class.wm::TransientWindowManager"* nocapture readonly, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.41", align 8
  %4 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 2
  %5 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %6 = icmp eq %"class.aura::Window"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.wm::TransientWindowManager"* @_ZN2wm22TransientWindowManager11GetOrCreateEPN4aura6WindowE(%"class.aura::Window"* nonnull %5)
  %9 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 1
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %9, align 8
  tail call void @_ZN2wm22TransientWindowManager20RemoveTransientChildEPN4aura6WindowE(%"class.wm::TransientWindowManager"* %8, %"class.aura::Window"* %10)
  br label %11

11:                                               ; preds = %2, %7
  %12 = bitcast %"class.std::__1::vector.41"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #9
  %16 = getelementptr inbounds %"class.wm::TransientWindowManager", %"class.wm::TransientWindowManager"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %"class.aura::Window"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.41"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %11
  %25 = icmp ugt i64 %22, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.41"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #10
  %30 = bitcast i8* %29 to %"class.aura::Window"**
  %31 = bitcast %"class.aura::Window"*** %13 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast %"class.std::__1::vector.41"* %3 to i8**
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %30, i64 %22
  store %"class.aura::Window"** %33, %"class.aura::Window"*** %14, align 8
  %34 = bitcast %"class.aura::Window"*** %13 to i64*
  %35 = ptrtoint i8* %29 to i64
  %36 = icmp sgt i64 %21, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %28
  %38 = lshr exact i64 %21, 3
  %39 = inttoptr i64 %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %39, i64 %21, i1 false) #9
  %40 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %30, i64 %38
  %41 = ptrtoint %"class.aura::Window"** %40 to i64
  br label %42

42:                                               ; preds = %28, %37
  %43 = phi i64 [ %41, %37 ], [ %35, %28 ]
  store i64 %43, i64* %34, align 8
  %44 = inttoptr i64 %43 to %"class.aura::Window"**
  %45 = icmp eq %"class.aura::Window"** %30, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %59, %42
  %47 = ptrtoint i8* %29 to i64
  %48 = bitcast %"class.aura::Window"*** %13 to i64*
  store i64 %47, i64* %48, align 8
  tail call void @_ZdlPv(i8* nonnull %29) #10
  br label %49

49:                                               ; preds = %11, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  ret void

50:                                               ; preds = %42, %59
  %51 = phi %"class.aura::Window"** [ %60, %59 ], [ %30, %42 ]
  %52 = load %"class.aura::Window"*, %"class.aura::Window"** %51, align 8
  %53 = icmp eq %"class.aura::Window"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.aura::Window"* %52 to void (%"class.aura::Window"*)***
  %56 = load void (%"class.aura::Window"*)**, void (%"class.aura::Window"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %56, i64 9
  %58 = load void (%"class.aura::Window"*)*, void (%"class.aura::Window"*)** %57, align 8
  tail call void %58(%"class.aura::Window"* nonnull %52) #9
  br label %59

59:                                               ; preds = %54, %50
  %60 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %51, i64 1
  %61 = icmp eq %"class.aura::Window"** %60, %44
  br i1 %61, label %46, label %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2wm12_GLOBAL__N_112_GLOBAL__N_123DeallocatorkPropertyKeyEl(i64) #0 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = inttoptr i64 %0 to %"class.wm::TransientWindowManager"*
  %5 = inttoptr i64 %0 to void (%"class.wm::TransientWindowManager"*)***
  %6 = load void (%"class.wm::TransientWindowManager"*)**, void (%"class.wm::TransientWindowManager"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.wm::TransientWindowManager"*)*, void (%"class.wm::TransientWindowManager"*)** %6, i64 1
  %8 = load void (%"class.wm::TransientWindowManager"*)*, void (%"class.wm::TransientWindowManager"*)** %7, align 8
  tail call void %8(%"class.wm::TransientWindowManager"* nonnull %4) #9
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZN2ui15PropertyHandler19SetPropertyInternalEPKvPKcPFvlEll(%"class.ui::PropertyHandler"*, i8*, i8*, void (i64)*, i64, i64) local_unnamed_addr #6

declare i64 @_ZNK2ui15PropertyHandler19GetPropertyInternalEPKvl(%"class.ui::PropertyHandler"*, i8*, i64) local_unnamed_addr #6

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #6

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #6

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !9}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListIN4aura6client29TransientWindowClientObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !9}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base12ObserverListIN2wm23TransientWindowObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !9}
!35 = !{i8 0, i8 2}
