; ModuleID = '../../third_party/blink/renderer/core/svg/svg_point_list.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_point_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.175", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.115", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { float }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.118", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.127" }
%"class.WTF::Vector.127" = type { %"class.WTF::VectorBuffer.128" }
%"class.WTF::VectorBuffer.128" = type { %"class.WTF::VectorBufferBase.129" }
%"class.WTF::VectorBufferBase.129" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.179" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.174 }
%class.scoped_refptr.174 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGPointList" = type { %"class.blink::SVGListPropertyHelper" }
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::SVGListPropertyBase"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SVGElement" = type opaque
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::FloatPoint" = type { float, float }
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE22AdjustFromToListValuesEPKS1_S5_f = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CloneForAnimationERKN3WTF6StringE = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE7GetTypeEv = comdat any

$_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE5CloneEv = comdat any

$_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CreatePaddingItemEv = comdat any

$_ZN5blink12SVGPointList5ParseIhEENS_15SVGParsingErrorEPKT_S5_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink12SVGPointList5ParseIDsEENS_15SVGParsingErrorEPKT_S5_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12SVGPointListE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPointList"*)* @_ZN5blink12SVGPointListD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGPointList"*)* @_ZN5blink12SVGPointListD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGListPropertyHelper"*, %"class.WTF::String"*)* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CloneForAnimationERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGListPropertyBase"*)* @_ZNK5blink19SVGListPropertyBase13ValueAsStringEv to i8*), i8* bitcast (void (%"class.blink::SVGPointList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink12SVGPointList3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (void (%"class.blink::SVGPointList"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink12SVGPointList22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE to i8*), i8* bitcast (float (%"class.blink::SVGPointList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZNK5blink12SVGPointList17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (i32 (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE7GetTypeEv to i8*), i8* bitcast (void (%"class.blink::SVGListPropertyBase"*, %"class.blink::Visitor"*)* @_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SVGPointList"* (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE5CloneEv to i8*), i8* bitcast (%"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CreatePaddingItemEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink12SVGPointListC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGPointList"*), void (%"class.blink::SVGPointList"*)* @_ZN5blink12SVGPointListC2Ev
@_ZN5blink12SVGPointListD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGPointList"*), void (%"class.blink::SVGPointList"*)* @_ZN5blink12SVGPointListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12SVGPointListC2Ev(%"class.blink::SVGPointList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::HeapVector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #6
  %4 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12SVGPointListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12SVGPointListD2Ev(%"class.blink::SVGPointList"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12SVGPointListD0Ev(%"class.blink::SVGPointList"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12SVGPointList16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGPointList"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %3) #6
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %15, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %19 = zext i32 %9 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = tail call i32 @_ZN5blink12SVGPointList5ParseIhEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"* %0, i8* %18, i8* %20) #6
  br label %27

22:                                               ; preds = %11
  %23 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %24 = zext i32 %9 to i64
  %25 = getelementptr inbounds i16, i16* %23, i64 %24
  %26 = tail call i32 @_ZN5blink12SVGPointList5ParseIDsEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"* %0, i16* %23, i16* %25) #6
  br label %27

27:                                               ; preds = %2, %22, %17, %7
  %28 = phi i32 [ 0, %7 ], [ %21, %17 ], [ %26, %22 ], [ 0, %2 ]
  ret i32 %28
}

declare void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12SVGPointList3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGPointList"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %"class.blink::SVGPropertyBase"* %1 to %"class.blink::SVGListPropertyBase"*
  %7 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ne i32 %5, %8
  %10 = icmp eq i32 %5, 0
  %11 = or i1 %9, %10
  br i1 %11, label %39, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %15 = bitcast %"class.blink::SVGPropertyBase"* %14 to %"class.WTF::Vector"*
  br label %16

16:                                               ; preds = %12, %16
  %17 = phi i32 [ 0, %12 ], [ %36, %16 ]
  %18 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %17) #6
  %19 = bitcast %"class.blink::Member"* %18 to %"class.blink::SVGPoint"**
  %20 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %19, align 8
  %21 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %17) #6
  %22 = bitcast %"class.blink::Member"* %21 to %"class.blink::SVGPoint"**
  %23 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %22, align 8
  %24 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %17) #6
  %25 = bitcast %"class.blink::Member"* %24 to %"class.blink::SVGPoint"**
  %26 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %23, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %26, i64 0, i32 1, i32 0
  %29 = bitcast float* %27 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = bitcast float* %28 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = fadd <2 x float> %30, %32
  %34 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %20, i64 0, i32 1
  %35 = bitcast %"class.blink::FloatPoint"* %34 to <2 x float>*
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = add nuw i32 %17, 1
  %37 = load i32, i32* %4, align 4
  %38 = icmp ult i32 %36, %37
  br i1 %38, label %16, label %39

39:                                               ; preds = %16, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12SVGPointList22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE(%"class.blink::SVGPointList"*, %"struct.blink::SMILAnimationEffectParameters"* nocapture readonly dereferenceable(3), float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.blink::SVGPropertyBase"* %4 to %"class.blink::SVGPointList"*
  %10 = bitcast %"class.blink::SVGPropertyBase"* %5 to %"class.blink::SVGPointList"*
  %11 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE22AdjustFromToListValuesEPKS1_S5_f(%"class.blink::SVGListPropertyHelper"* %11, %"class.blink::SVGPointList"* %9, %"class.blink::SVGPointList"* %10, float %2)
  br i1 %12, label %13, label %125

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::SVGPropertyBase"* %5 to %"class.blink::SVGListPropertyBase"*
  %15 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"class.blink::SVGPropertyBase"* %6 to %"class.blink::SVGListPropertyBase"*
  %18 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %125, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.blink::SVGPropertyBase"* %4 to %"class.blink::SVGListPropertyBase"*
  %23 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 1
  %27 = bitcast %"class.blink::SVGPropertyBase"* %26 to %"class.WTF::Vector"*
  %28 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 1
  %29 = bitcast %"class.blink::SVGPropertyBase"* %28 to %"class.WTF::Vector"*
  %30 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 1
  %31 = bitcast %"class.blink::SVGPropertyBase"* %30 to %"class.WTF::Vector"*
  %32 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 0
  %33 = fcmp olt float %2, 5.000000e-01
  %34 = icmp eq i32 %3, 0
  %35 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %36 = uitofp i32 %3 to float
  %37 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 1
  %38 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br label %39

39:                                               ; preds = %114, %21
  %40 = phi i32 [ 0, %21 ], [ %123, %114 ]
  br i1 %25, label %49, label %41

41:                                               ; preds = %39
  %42 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %40) #6
  %43 = bitcast %"class.blink::Member"* %42 to %"class.blink::SVGPoint"**
  %44 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %44, i64 0, i32 1, i32 0
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %44, i64 0, i32 1, i32 1
  %48 = load float, float* %47, align 4
  br label %49

49:                                               ; preds = %39, %41
  %50 = phi float [ 0.000000e+00, %39 ], [ %48, %41 ]
  %51 = phi float [ 0.000000e+00, %39 ], [ %46, %41 ]
  %52 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %29, i32 %40) #6
  %53 = bitcast %"class.blink::Member"* %52 to %"class.blink::SVGPoint"**
  %54 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %54, i64 0, i32 1, i32 0
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %54, i64 0, i32 1, i32 1
  %58 = load float, float* %57, align 4
  %59 = icmp ult i32 %40, %19
  br i1 %59, label %60, label %68

60:                                               ; preds = %49
  %61 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %31, i32 %40) #6
  %62 = bitcast %"class.blink::Member"* %61 to %"class.blink::SVGPoint"**
  %63 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %63, i64 0, i32 1, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %63, i64 0, i32 1, i32 1
  %67 = load float, float* %66, align 4
  br label %68

68:                                               ; preds = %60, %49
  %69 = phi float [ %67, %60 ], [ 0.000000e+00, %49 ]
  %70 = phi float [ %65, %60 ], [ 0.000000e+00, %49 ]
  %71 = load i8, i8* %32, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %68
  %74 = select i1 %33, float %51, float %56
  %75 = load i8, i8* %35, align 1
  %76 = icmp eq i8 %75, 0
  %77 = or i1 %34, %76
  %78 = fmul float %70, %36
  %79 = fadd float %78, %74
  %80 = select i1 %77, float %74, float %79
  %81 = select i1 %33, float %50, float %58
  br label %95

82:                                               ; preds = %68
  %83 = fsub float %56, %51
  %84 = fmul float %83, %2
  %85 = fadd float %51, %84
  %86 = load i8, i8* %35, align 1
  %87 = icmp eq i8 %86, 0
  %88 = or i1 %34, %87
  %89 = fmul float %70, %36
  %90 = fadd float %89, %85
  %91 = select i1 %88, float %85, float %90
  %92 = fsub float %58, %50
  %93 = fmul float %92, %2
  %94 = fadd float %50, %93
  br label %95

95:                                               ; preds = %82, %73
  %96 = phi float [ %80, %73 ], [ %91, %82 ]
  %97 = phi i1 [ %77, %73 ], [ %88, %82 ]
  %98 = phi float [ %81, %73 ], [ %94, %82 ]
  %99 = fmul float %69, %36
  %100 = fadd float %99, %98
  %101 = select i1 %97, float %98, float %100
  %102 = load i8, i8* %37, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = insertelement <2 x float> undef, float %96, i32 0
  %105 = insertelement <2 x float> %104, float %101, i32 1
  br i1 %103, label %114, label %106

106:                                              ; preds = %95
  %107 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %38, i32 %40) #6
  %108 = bitcast %"class.blink::Member"* %107 to %"class.blink::SVGPoint"**
  %109 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %109, i64 0, i32 1, i32 0
  %111 = bitcast float* %110 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = fadd <2 x float> %105, %112
  br label %114

114:                                              ; preds = %95, %106
  %115 = phi <2 x float> [ %105, %95 ], [ %113, %106 ]
  %116 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %38, i32 %40) #6
  %117 = bitcast %"class.blink::Member"* %116 to %"class.blink::SVGPoint"**
  %118 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %118, i64 0, i32 1, i32 0
  %120 = extractelement <2 x float> %115, i32 0
  store float %120, float* %119, align 8
  %121 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %118, i64 0, i32 1, i32 1
  %122 = extractelement <2 x float> %115, i32 1
  store float %122, float* %121, align 4
  %123 = add nuw i32 %40, 1
  %124 = icmp eq i32 %123, %16
  br i1 %124, label %125, label %39

125:                                              ; preds = %114, %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE22AdjustFromToListValuesEPKS1_S5_f(%"class.blink::SVGListPropertyHelper"*, %"class.blink::SVGPointList"*, %"class.blink::SVGPointList"*, float) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, %6
  %12 = icmp ne i32 %10, 0
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %36

14:                                               ; preds = %8
  %15 = fcmp olt float %3, 5.000000e-01
  %16 = select i1 %15, %"class.blink::SVGPointList"* %1, %"class.blink::SVGPointList"* %2
  %17 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %16, i64 0, i32 0
  %18 = icmp eq %"class.blink::SVGListPropertyHelper"* %17, %0
  br i1 %18, label %52, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %20) #6
  %21 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %19, %28
  %29 = phi %"class.blink::Member"* [ %34, %28 ], [ %22, %19 ]
  %30 = bitcast %"class.blink::Member"* %29 to %"class.blink::SVGPoint"**
  %31 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %30, align 8
  %32 = tail call %"class.blink::SVGPoint"* @_ZNK5blink8SVGPoint5CloneEv(%"class.blink::SVGPoint"* %31) #6
  %33 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %32, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %20, %"class.blink::SVGListablePropertyBase"* %33) #6
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %29, i64 1
  %35 = icmp eq %"class.blink::Member"* %34, %26
  br i1 %35, label %52, label %28

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %39, %6
  br i1 %40, label %41, label %52

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::SVGListPropertyHelper"* %0 to %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)***
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i32 [ %39, %41 ], [ %50, %43 ]
  %45 = load %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)**, %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)*** %42, align 8
  %46 = getelementptr inbounds %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)*, %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)** %45, i64 10
  %47 = load %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)*, %"class.blink::SVGPoint"* (%"class.blink::SVGListPropertyHelper"*)** %46, align 8
  %48 = tail call %"class.blink::SVGPoint"* %47(%"class.blink::SVGListPropertyHelper"* %0) #6
  %49 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %48, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %37, %"class.blink::SVGListablePropertyBase"* %49) #6
  %50 = add i32 %44, 1
  %51 = icmp eq i32 %50, %6
  br i1 %51, label %52, label %43

52:                                               ; preds = %43, %28, %36, %19, %14, %4
  %53 = phi i1 [ false, %4 ], [ false, %14 ], [ false, %19 ], [ true, %36 ], [ false, %28 ], [ true, %43 ]
  ret i1 %53
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK5blink12SVGPointList17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGPointList"* nocapture readnone, %"class.blink::SVGPropertyBase"* nocapture readnone, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #1 align 2 {
  ret float -1.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGListPropertyHelper"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %4 = bitcast i8* %3 to %"class.blink::SVGPointList"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #6
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12SVGPointListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %3 to %"class.blink::SVGListPropertyBase"*
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %11) #6
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %30, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = zext i32 %17 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = tail call i32 @_ZN5blink12SVGPointList5ParseIhEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"* %4, i8* %26, i8* %28) #6
  br label %35

30:                                               ; preds = %19
  %31 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %32 = zext i32 %17 to i64
  %33 = getelementptr inbounds i16, i16* %31, i64 %32
  %34 = tail call i32 @_ZN5blink12SVGPointList5ParseIDsEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"* %4, i16* %31, i16* %33) #6
  br label %35

35:                                               ; preds = %2, %15, %25, %30
  %36 = bitcast i8* %3 to %"class.blink::SVGPropertyBase"*
  ret %"class.blink::SVGPropertyBase"* %36
}

declare %"class.WTF::StringImpl"* @_ZNK5blink19SVGListPropertyBase13ValueAsStringEv(%"class.blink::SVGListPropertyBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE7GetTypeEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  ret i32 14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19SVGListPropertyBase5TraceEPNS_7VisitorE(%"class.blink::SVGListPropertyBase"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGListPropertyBase", %"class.blink::SVGListPropertyBase"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #6
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGPointList"* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE5CloneEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %3 = bitcast i8* %2 to %"class.blink::SVGPointList"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #6
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12SVGPointListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %2 to %"class.blink::SVGListPropertyBase"*
  tail call void @_ZN5blink19SVGListPropertyBase5ClearEv(%"class.blink::SVGListPropertyBase"* %10) #6
  %11 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member"*, %"class.blink::Member"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGListPropertyHelper", %"class.blink::SVGListPropertyHelper"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %1, %18
  %19 = phi %"class.blink::Member"* [ %24, %18 ], [ %12, %1 ]
  %20 = bitcast %"class.blink::Member"* %19 to %"class.blink::SVGPoint"**
  %21 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %20, align 8
  %22 = tail call %"class.blink::SVGPoint"* @_ZNK5blink8SVGPoint5CloneEv(%"class.blink::SVGPoint"* %21) #6
  %23 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %22, i64 0, i32 0
  tail call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %10, %"class.blink::SVGListablePropertyBase"* %23) #6
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %19, i64 1
  %25 = icmp eq %"class.blink::Member"* %24, %16
  br i1 %25, label %26, label %18

26:                                               ; preds = %18, %1
  ret %"class.blink::SVGPointList"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGPoint"* @_ZNK5blink21SVGListPropertyHelperINS_12SVGPointListENS_8SVGPointEE17CreatePaddingItemEv(%"class.blink::SVGListPropertyHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %3 = bitcast i8* %2 to %"class.blink::SVGPoint"*
  tail call void @_ZN5blink8SVGPointC1Ev(%"class.blink::SVGPoint"* %3) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::SVGPoint"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink12SVGPointList5ParseIhEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.blink::FloatPoint", align 4
  store i8* %1, i8** %4, align 8
  %8 = icmp ult i8* %1, %2
  %9 = ptrtoint i8* %1 to i64
  br i1 %8, label %10, label %106

10:                                               ; preds = %3
  %11 = load i8, i8* %1, align 1
  %12 = icmp ult i8 %11, 33
  br i1 %12, label %16, label %33

13:                                               ; preds = %21
  %14 = load i8, i8* %22, align 1
  %15 = icmp ult i8 %14, 33
  br i1 %15, label %16, label %26

16:                                               ; preds = %10, %13
  %17 = phi i64 [ %25, %13 ], [ %9, %10 ]
  %18 = phi i8 [ %14, %13 ], [ %11, %10 ]
  %19 = phi i8* [ %22, %13 ], [ %1, %10 ]
  %20 = phi i1 [ %23, %13 ], [ true, %10 ]
  switch i8 %18, label %30 [
    i8 32, label %21
    i8 10, label %21
    i8 9, label %21
    i8 13, label %21
    i8 12, label %21
  ]

21:                                               ; preds = %16, %16, %16, %16, %16
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %22, i8** %4, align 8
  %23 = icmp ult i8* %22, %2
  %24 = icmp eq i8* %22, %2
  %25 = ptrtoint i8* %22 to i64
  br i1 %24, label %28, label %13

26:                                               ; preds = %13
  %27 = ptrtoint i8* %22 to i64
  br label %30

28:                                               ; preds = %21
  %29 = ptrtoint i8* %22 to i64
  br label %30

30:                                               ; preds = %28, %16, %26
  %31 = phi i64 [ %27, %26 ], [ %29, %28 ], [ %17, %16 ]
  %32 = phi i1 [ %23, %26 ], [ %23, %28 ], [ %20, %16 ]
  br i1 %32, label %33, label %106

33:                                               ; preds = %10, %30
  %34 = phi i64 [ %9, %10 ], [ %31, %30 ]
  %35 = bitcast i8** %4 to i64*
  %36 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #6
  store float 0.000000e+00, float* %5, align 4
  %37 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  store float 0.000000e+00, float* %6, align 4
  %38 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %38, label %39, label %49

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::FloatPoint"* %7 to i8*
  %41 = bitcast float* %5 to i32*
  %42 = bitcast float* %6 to i32*
  %43 = bitcast %"class.blink::FloatPoint"* %7 to i32*
  %44 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %7, i64 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %39, %103
  %48 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %6, i32 0) #6
  br i1 %48, label %57, label %49

49:                                               ; preds = %47, %103, %33
  %50 = load i64, i64* %35, align 8
  %51 = sub i64 %50, %34
  %52 = icmp ult i64 %51, 16777215
  %53 = select i1 %52, i64 %51, i64 16777215
  %54 = trunc i64 %53 to i32
  %55 = shl nuw i32 %54, 8
  %56 = or i32 %55, 10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #6
  br label %106

57:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %58 = load i32, i32* %41, align 4
  %59 = load i32, i32* %42, align 4
  store i32 %58, i32* %43, align 4
  store i32 %59, i32* %45, align 4
  %60 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %61 = bitcast i8* %60 to %"class.blink::SVGPoint"*
  call void @_ZN5blink8SVGPointC1ERKNS_10FloatPointE(%"class.blink::SVGPoint"* %61, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %7) #6
  %62 = getelementptr inbounds i8, i8* %60, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  %66 = bitcast i8* %60 to %"class.blink::SVGListablePropertyBase"*
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %46, %"class.blink::SVGListablePropertyBase"* %66) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  %67 = load i8*, i8** %4, align 8
  %68 = icmp ult i8* %67, %2
  br i1 %68, label %69, label %105

69:                                               ; preds = %57
  %70 = load i8, i8* %67, align 1
  %71 = icmp ult i8 %70, 33
  br i1 %71, label %75, label %88

72:                                               ; preds = %79
  %73 = load i8, i8* %80, align 1
  %74 = icmp ult i8 %73, 33
  br i1 %74, label %75, label %83

75:                                               ; preds = %69, %72
  %76 = phi i8 [ %73, %72 ], [ %70, %69 ]
  %77 = phi i8* [ %80, %72 ], [ %67, %69 ]
  %78 = phi i1 [ %81, %72 ], [ true, %69 ]
  switch i8 %76, label %83 [
    i8 32, label %79
    i8 10, label %79
    i8 9, label %79
    i8 13, label %79
    i8 12, label %79
  ]

79:                                               ; preds = %75, %75, %75, %75, %75
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %80, i8** %4, align 8
  %81 = icmp ult i8* %80, %2
  %82 = icmp eq i8* %80, %2
  br i1 %82, label %83, label %72

83:                                               ; preds = %79, %75, %72
  %84 = phi i8* [ %80, %72 ], [ %77, %75 ], [ %2, %79 ]
  %85 = phi i1 [ %81, %72 ], [ %78, %75 ], [ %81, %79 ]
  br i1 %85, label %86, label %105

86:                                               ; preds = %83
  %87 = load i8, i8* %84, align 1
  br label %88

88:                                               ; preds = %86, %69
  %89 = phi i8 [ %70, %69 ], [ %87, %86 ]
  %90 = phi i8* [ %67, %69 ], [ %84, %86 ]
  %91 = icmp eq i8 %89, 44
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  store i8* %93, i8** %4, align 8
  %94 = icmp ult i8* %93, %2
  br i1 %94, label %95, label %103

95:                                               ; preds = %92, %100
  %96 = phi i8* [ %101, %100 ], [ %93, %92 ]
  %97 = load i8, i8* %96, align 1
  %98 = icmp ult i8 %97, 33
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  switch i8 %97, label %103 [
    i8 32, label %100
    i8 10, label %100
    i8 9, label %100
    i8 13, label %100
    i8 12, label %100
  ]

100:                                              ; preds = %99, %99, %99, %99, %99
  %101 = getelementptr inbounds i8, i8* %96, i64 1
  store i8* %101, i8** %4, align 8
  %102 = icmp eq i8* %101, %2
  br i1 %102, label %103, label %95

103:                                              ; preds = %100, %99, %95, %92, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #6
  store float 0.000000e+00, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  store float 0.000000e+00, float* %6, align 4
  %104 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %104, label %47, label %49

105:                                              ; preds = %57, %83
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #6
  br label %106

106:                                              ; preds = %3, %49, %30, %105
  %107 = phi i32 [ 0, %105 ], [ 0, %30 ], [ %56, %49 ], [ 0, %3 ]
  ret i32 %107
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8), i8*, float* dereferenceable(4), i32) local_unnamed_addr #2

declare void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"*, %"class.blink::SVGListablePropertyBase"*) local_unnamed_addr #2

declare void @_ZN5blink8SVGPointC1ERKNS_10FloatPointE(%"class.blink::SVGPoint"*, %"class.blink::FloatPoint"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink12SVGPointList5ParseIDsEENS_15SVGParsingErrorEPKT_S5_(%"class.blink::SVGPointList"*, i16*, i16*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i16*, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.blink::FloatPoint", align 4
  store i16* %1, i16** %4, align 8
  %8 = icmp ult i16* %1, %2
  br i1 %8, label %9, label %78

9:                                                ; preds = %3, %14
  %10 = phi i16* [ %15, %14 ], [ %1, %3 ]
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 33
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  switch i16 %11, label %17 [
    i16 32, label %14
    i16 10, label %14
    i16 9, label %14
    i16 13, label %14
    i16 12, label %14
  ]

14:                                               ; preds = %13, %13, %13, %13, %13
  %15 = getelementptr inbounds i16, i16* %10, i64 1
  store i16* %15, i16** %4, align 8
  %16 = icmp ult i16* %15, %2
  br i1 %16, label %9, label %78

17:                                               ; preds = %13, %9
  %18 = ptrtoint i16* %10 to i64
  %19 = bitcast i16** %4 to i64*
  %20 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  store float 0.000000e+00, float* %5, align 4
  %21 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #6
  store float 0.000000e+00, float* %6, align 4
  %22 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %22, label %23, label %33

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::FloatPoint"* %7 to i8*
  %25 = bitcast float* %5 to i32*
  %26 = bitcast float* %6 to i32*
  %27 = bitcast %"class.blink::FloatPoint"* %7 to i32*
  %28 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %7, i64 0, i32 1
  %29 = bitcast float* %28 to i32*
  %30 = getelementptr inbounds %"class.blink::SVGPointList", %"class.blink::SVGPointList"* %0, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %23, %75
  %32 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %6, i32 0) #6
  br i1 %32, label %42, label %33

33:                                               ; preds = %31, %75, %17
  %34 = load i64, i64* %19, align 8
  %35 = sub i64 %34, %18
  %36 = ashr exact i64 %35, 1
  %37 = icmp ult i64 %36, 16777215
  %38 = select i1 %37, i64 %36, i64 16777215
  %39 = trunc i64 %38 to i32
  %40 = shl nuw i32 %39, 8
  %41 = or i32 %40, 10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  br label %78

42:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %43 = load i32, i32* %25, align 4
  %44 = load i32, i32* %26, align 4
  store i32 %43, i32* %27, align 4
  store i32 %44, i32* %29, align 4
  %45 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %46 = bitcast i8* %45 to %"class.blink::SVGPoint"*
  call void @_ZN5blink8SVGPointC1ERKNS_10FloatPointE(%"class.blink::SVGPoint"* %46, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %7) #6
  %47 = getelementptr inbounds i8, i8* %45, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  %51 = bitcast i8* %45 to %"class.blink::SVGListablePropertyBase"*
  call void @_ZN5blink19SVGListPropertyBase6AppendEPNS_23SVGListablePropertyBaseE(%"class.blink::SVGListPropertyBase"* %30, %"class.blink::SVGListablePropertyBase"* %51) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  %52 = load i16*, i16** %4, align 8
  %53 = icmp ult i16* %52, %2
  br i1 %53, label %54, label %77

54:                                               ; preds = %42, %59
  %55 = phi i16* [ %60, %59 ], [ %52, %42 ]
  %56 = load i16, i16* %55, align 2
  %57 = icmp ult i16 %56, 33
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  switch i16 %56, label %75 [
    i16 32, label %59
    i16 10, label %59
    i16 9, label %59
    i16 13, label %59
    i16 12, label %59
  ]

59:                                               ; preds = %58, %58, %58, %58, %58
  %60 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %60, i16** %4, align 8
  %61 = icmp ult i16* %60, %2
  br i1 %61, label %54, label %77

62:                                               ; preds = %54
  %63 = icmp eq i16 %56, 44
  br i1 %63, label %64, label %75

64:                                               ; preds = %62
  %65 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %65, i16** %4, align 8
  %66 = icmp ult i16* %65, %2
  br i1 %66, label %67, label %75

67:                                               ; preds = %64, %72
  %68 = phi i16* [ %73, %72 ], [ %65, %64 ]
  %69 = load i16, i16* %68, align 2
  %70 = icmp ult i16 %69, 33
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  switch i16 %69, label %75 [
    i16 32, label %72
    i16 10, label %72
    i16 9, label %72
    i16 13, label %72
    i16 12, label %72
  ]

72:                                               ; preds = %71, %71, %71, %71, %71
  %73 = getelementptr inbounds i16, i16* %68, i64 1
  store i16* %73, i16** %4, align 8
  %74 = icmp ult i16* %73, %2
  br i1 %74, label %67, label %75

75:                                               ; preds = %58, %72, %71, %67, %64, %62
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  store float 0.000000e+00, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #6
  store float 0.000000e+00, float* %6, align 4
  %76 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %76, label %31, label %33

77:                                               ; preds = %42, %59
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  br label %78

78:                                               ; preds = %14, %33, %3, %77
  %79 = phi i32 [ 0, %77 ], [ 0, %3 ], [ %41, %33 ], [ 0, %14 ]
  ret i32 %79
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8), i16*, float* dereferenceable(4), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_23SVGListablePropertyBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare %"class.blink::SVGPoint"* @_ZNK5blink8SVGPoint5CloneEv(%"class.blink::SVGPoint"*) local_unnamed_addr #2

declare void @_ZN5blink8SVGPointC1Ev(%"class.blink::SVGPoint"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
