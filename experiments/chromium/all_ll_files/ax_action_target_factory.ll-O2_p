; ModuleID = '../../content/renderer/accessibility/ax_action_target_factory.cc'
source_filename = "../../content/renderer/accessibility/ax_action_target_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::AXActionTarget" = type { i32 (...)** }
%"class.blink::WebDocument" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.content::PluginAXTreeSource" = type { %"class.ui::AXTreeSource" }
%"class.ui::AXTreeSource" = type { i32 (...)** }
%"class.blink::WebAXObject" = type { %"class.blink::WebPrivatePtr.1" }
%"class.blink::WebPrivatePtr.1" = type { i8* }
%"class.content::BlinkAXActionTarget" = type { %"class.ui::AXActionTarget", %"class.blink::WebAXObject" }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.92" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.11", %"class.std::__1::vector.18", %"class.std::__1::vector.26", %"class.std::__1::vector.34", %"class.std::__1::vector.42", %"class.std::__1::vector.50", %"class.std::__1::vector.58", %"class.std::__1::vector.66", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair.20" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair.20"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair.28"*, %"struct.std::__1::pair.28"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair.28" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair.28"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.std::__1::pair.36"*, %"struct.std::__1::pair.36"*, %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::pair.36" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::pair.36"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair.44" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair.44"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.std::__1::pair.52"*, %"struct.std::__1::pair.52"*, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::pair.52" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::pair.52"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.std::__1::pair.60"*, %"struct.std::__1::pair.60"*, %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::pair.60" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::pair.60"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { i32*, i32*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.73" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque

@_ZTVN2ui18NullAXActionTargetE = external unnamed_addr constant { [15 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXActionTarget"* @_ZN7content21AXActionTargetFactory16CreateFromNodeIdERKN5blink11WebDocumentEPNS_18PluginAXTreeSourceEi(%"class.blink::WebDocument"* dereferenceable(16), %"class.content::PluginAXTreeSource"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebAXObject", align 8
  %5 = bitcast %"class.blink::WebAXObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.blink::WebAXObject", %"class.blink::WebAXObject"* %4, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  call void @_ZN5blink11WebAXObject19FromWebDocumentByIDERKNS_11WebDocumentEi(%"class.blink::WebAXObject"* nonnull sret %4, %"class.blink::WebDocument"* dereferenceable(16) %0, i32 %2) #4
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = call i8* @_Znwm(i64 16) #5
  %11 = bitcast i8* %10 to %"class.content::BlinkAXActionTarget"*
  call void @_ZN7content19BlinkAXActionTargetC1ERKN5blink11WebAXObjectE(%"class.content::BlinkAXActionTarget"* nonnull %11, %"class.blink::WebAXObject"* nonnull dereferenceable(8) %4) #4
  %12 = ptrtoint i8* %10 to i64
  br label %34

13:                                               ; preds = %3
  %14 = icmp eq %"class.content::PluginAXTreeSource"* %1, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.content::PluginAXTreeSource", %"class.content::PluginAXTreeSource"* %1, i64 0, i32 0
  %17 = bitcast %"class.content::PluginAXTreeSource"* %1 to %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)***
  %18 = load %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)*** %17, align 8
  %19 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)** %18, i64 4
  %20 = load %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTreeSource"*, i32)** %19, align 8
  %21 = call %"class.ui::AXNode"* %20(%"class.ui::AXTreeSource"* %16, i32 %2) #4
  %22 = icmp eq %"class.ui::AXNode"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.content::PluginAXTreeSource"* %1 to %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)***
  %25 = load %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)**, %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)*, %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)** %25, i64 15
  %27 = load %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)*, %"class.ui::AXActionTarget"* (%"class.content::PluginAXTreeSource"*, %"class.ui::AXNode"*)** %26, align 8
  %28 = call %"class.ui::AXActionTarget"* %27(%"class.content::PluginAXTreeSource"* nonnull %1, %"class.ui::AXNode"* nonnull dereferenceable(456) %21) #4
  %29 = ptrtoint %"class.ui::AXActionTarget"* %28 to i64
  br label %34

30:                                               ; preds = %13, %15
  %31 = call i8* @_Znwm(i64 8) #5
  %32 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN2ui18NullAXActionTargetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = ptrtoint i8* %31 to i64
  br label %34

34:                                               ; preds = %23, %30, %9
  %35 = phi i64 [ %33, %30 ], [ %29, %23 ], [ %12, %9 ]
  call void @_ZN5blink11WebAXObject5ResetEv(%"class.blink::WebAXObject"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %36 = inttoptr i64 %35 to %"class.ui::AXActionTarget"*
  ret %"class.ui::AXActionTarget"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink11WebAXObject19FromWebDocumentByIDERKNS_11WebDocumentEi(%"class.blink::WebAXObject"* sret, %"class.blink::WebDocument"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink11WebAXObject5ResetEv(%"class.blink::WebAXObject"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN7content19BlinkAXActionTargetC1ERKN5blink11WebAXObjectE(%"class.content::BlinkAXActionTarget"*, %"class.blink::WebAXObject"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
