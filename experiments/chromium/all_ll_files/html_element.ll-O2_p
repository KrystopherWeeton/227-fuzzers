; ModuleID = '../../third_party/blink/renderer/core/html/html_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::AttributeTriggers" = type { %"class.blink::QualifiedName"*, i32, %"class.WTF::AtomicString"*, { i64, i64 } }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, unsigned int, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<unsigned int>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::QualifiedName, unsigned int, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<unsigned int>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.2605" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.739", i32, [4 x i8], %"class.std::__1::unique_ptr.877", %"class.std::__1::unique_ptr.877", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.888", %"class.std::__1::unique_ptr.894", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.912", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.760", %"class.std::__1::unique_ptr.766", %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.797", %"class.std::__1::unique_ptr.804", %"class.std::__1::unique_ptr.811", %"class.std::__1::unique_ptr.811", %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.857", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.775" = type { %"struct.std::__1::__atomic_base.776" }
%"struct.std::__1::__atomic_base.776" = type { %"struct.std::__1::__atomic_base.777" }
%"struct.std::__1::__atomic_base.777" = type { %"struct.std::__1::__cxx_atomic_impl.778" }
%"struct.std::__1::__cxx_atomic_impl.778" = type { %"struct.std::__1::__cxx_atomic_base_impl.779" }
%"struct.std::__1::__cxx_atomic_base_impl.779" = type { i64 }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.blink::Worklist.786"* }
%"class.blink::Worklist.786" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::Worklist.793"* }
%"class.blink::Worklist.793" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.blink::Worklist.800"* }
%"class.blink::Worklist.800" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::Worklist.807"* }
%"class.blink::Worklist.807" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::Worklist.814"* }
%"class.blink::Worklist.814" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.blink::Worklist.821"* }
%"class.blink::Worklist.821" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::Worklist.828"* }
%"class.blink::Worklist.828" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.775" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.835", %"class.std::__1::__compressed_pair.843", %"class.std::__1::__compressed_pair.848", %"class.std::__1::__compressed_pair.850", [4 x i8] }>
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837", %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i64 }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { float }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.860", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.869" }
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.885" }
%"class.WTF::VectorBuffer.885" = type { %"class.WTF::VectorBufferBase.886" }
%"class.WTF::VectorBufferBase.886" = type { %"struct.std::__1::pair.887"*, i32, i32 }
%"struct.std::__1::pair.887" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.900" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.786"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.793"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.800"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.807"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.814"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1777", i64 }
%"class.std::__1::vector.1777" = type { %"class.std::__1::__vector_base.1778" }
%"class.std::__1::__vector_base.1778" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1779" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.918 }
%class.scoped_refptr.918 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.119" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i32 }
%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1513", i32, i32, %"class.blink::Persistent.1515" }
%"class.WTF::RefCounted.1513" = type { %"class.base::RefCounted.1514" }
%"class.base::RefCounted.1514" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1515" = type { %"class.blink::PersistentBase.1516" }
%"class.blink::PersistentBase.1516" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1519" }
%"class.blink::HeapHashMap.1519" = type { %"class.WTF::HashMap.1522" }
%"class.WTF::HashMap.1522" = type { %"class.WTF::HashTable.1523" }
%"class.WTF::HashTable.1523" = type <{ %"struct.WTF::KeyValuePair.1525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1525" = type { %"class.blink::WeakMember.1526", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.953" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", %"class.blink::Member.23", %"class.blink::Member.1", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.115", %"class.WTF::Vector.115", i8, i32, %"class.blink::Member.126", %"class.blink::Member.400", %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.blink::Member.1488", %"class.blink::Member.1490", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1498", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1504", %"class.blink::Member.1506", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1509", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.36", %"class.blink::Member.1459", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::UserActionElementSet", %"class.blink::Member.1540", double, double, i64, i64, %"class.blink::HeapHashSet.1542", %"class.blink::HeapHashSet.1549", i16, i8, %"class.blink::Member.1556", %"class.blink::Member.1574", %"class.blink::Member.1576", %"class.blink::Member.1578", %"class.blink::TextLinkColors", %"class.blink::Member.1580", i8, [7 x i8], %"class.blink::HeapHashMap.1582", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.36", %"class.WTF::Vector.1589", %"class.blink::Member.1594", %"class.blink::Member.1596", i8, %"class.blink::Member.36", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1598", %"class.blink::HeapVector.1600", %"class.std::__1::unique_ptr.1608", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1614", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1627", %"class.WTF::Vector.1629", i8, i8, %"class.std::__1::unique_ptr.1634", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1640", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1648", i8, i32, %"class.blink::Member.1650", %"class.blink::Member.1652", %"class.blink::Member.1654", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1656", %"class.WTF::HashMap.1658", %"class.blink::Member.1663", %"class.blink::Member.1665", %"class.blink::Member.1667", %"class.blink::Member.1669", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1671", i8, i32, %"class.blink::Member.1678", %"class.blink::Member.1680", i32, %"class.blink::Member.1682", %"class.blink::Member.1684", %"class.blink::Member.1686", %"class.std::__1::unique_ptr.1688", i64, %"class.std::__1::unique_ptr.1694", i32, i32, %"class.blink::Member.1705", %"class.blink::Member.1707", %"class.blink::Member.1709", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1711", %"class.WTF::Vector.1470", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1713", %"class.blink::Member.1720", %"class.std::__1::unique_ptr.1722", %"class.blink::Member.1728", i8, i8, %"class.WTF::String", %"class.blink::Member.1730", i8, [7 x i8], %"class.blink::HeapHashMap.1732", %"class.blink::HeapObserverSet.1739", %"class.blink::Member.1747", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1749", i32, i8, i8, %"class.blink::WeakMember.1751", %"class.blink::Member.1752" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.108" }
%"class.blink::HeapHashMap.108" = type { %"class.WTF::HashMap.111" }
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.119" }
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.500", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.508", %"class.blink::Member.23", %"class.blink::Member.510", i8, %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.blink::Member.516", %"class.blink::Member.516", %"class.blink::Member.516", %"class.blink::Member.516", %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.blink::Member.522", %"class.blink::Member.561", %"class.blink::Member.563", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.457", %"class.blink::Member.565", %class.scoped_refptr.567, %"class.blink::HeapHashSet.629", %"class.blink::Member.636", %"class.blink::HeapHashMap.649", %"class.std::__1::unique_ptr.656", %"class.blink::Member.668", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", %"class.WTF::Vector.1470", %"class.util::TokenType", %"class.WTF::HashSet.1475", %"class.WTF::Deque.1479" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", i8, %"class.WTF::Vector.156" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.141" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.130" }
%"class.blink::HeapVector.130" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135", [32 x i8] }
%"class.WTF::VectorBufferBase.135" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.136" }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::HeapVector.138"* }
%"class.blink::HeapVector.138" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.WTF::Vector.144"* }
%"class.WTF::Vector.144" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1788", %"class.blink::Member.1790", %"class.blink::Member.1792", i8, i32, i8, i32, %"class.blink::Member.1794", %"class.blink::Member.150", %"class.blink::FrameLifecycle", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.674", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1805", i8, %"class.base::UnguessableToken", %"class.absl::optional.1807", %"class.absl::optional.1812", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.148", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1788" = type { %"class.blink::MemberBase.1789" }
%"class.blink::MemberBase.1789" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1824", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1832", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1840", %"class.blink::FrameLoader", %"class.blink::Member.1861", %"class.blink::Member.36", %"class.blink::Member.1863", %"class.blink::Member.1865", %"class.blink::Member.1867", %"class.blink::Member.1869", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1871", %class.scoped_refptr.2091, %"class.blink::Member.2092", %"class.blink::Member.2094", %"class.blink::Member.2096", %"class.blink::Member.2098", %"class.blink::Member.2100", %"class.blink::Member.2104", %"class.blink::Member.2106", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2108", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2111", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2117", %"class.std::__1::unique_ptr.2118", %"class.absl::optional.1812", i32, [4 x i8], %"class.std::__1::unique_ptr.2124", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2132", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2137", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2142", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2145", %"class.blink::Member.2147", %"class.blink::Member.2149", %"class.blink::Member.2151", %"class.mojo::StructPtr.2154", %"class.blink::Member.2163", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2165", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1824" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1825" }
%"class.blink::HeapHashMap.1825" = type { %"class.WTF::HashMap.1828" }
%"class.WTF::HashMap.1828" = type { %"class.WTF::HashTable.1829" }
%"class.WTF::HashTable.1829" = type <{ %"struct.WTF::KeyValuePair.1831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1831" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1832" = type { %"class.std::__1::__compressed_pair.1833" }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.1834" }
%"struct.std::__1::__compressed_pair_elem.1834" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.659", %"class.base::WeakPtrFactory.664" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.663"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.663" = type opaque
%"class.base::WeakPtrFactory.664" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.179", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.179" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.180" }
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1838" }
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.672" }
%"class.blink::WeakMember.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.343" }
%"class.blink::HeapHashSet.343" = type { %"class.WTF::HashSet.346" }
%"class.WTF::HashSet.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.349" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.280", %"class.base::RepeatingCallback.2804", i64, %"class.std::__1::map.2805", i8*, i64, %"class.base::WeakPtrFactory.2814" }
%"class.base::RepeatingCallback.280" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2804" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2805" = type { %"class.std::__1::__tree.2806" }
%"class.std::__1::__tree.2806" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2807", %"class.std::__1::__compressed_pair.2811" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2811" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::WeakPtrFactory.2814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1840" = type { %"class.WTF::HashSet.1843" }
%"class.WTF::HashSet.1843" = type { %"class.WTF::HashTable.1844" }
%"class.WTF::HashTable.1844" = type <{ %"class.blink::WeakMember.1846"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1846" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.674", %"class.blink::Member.1847", %"class.blink::Member.1849", %"class.std::__1::unique_ptr.1851", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1857" }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1851" = type { %"class.std::__1::__compressed_pair.1852" }
%"class.std::__1::__compressed_pair.1852" = type { %"struct.std::__1::__compressed_pair_elem.1853" }
%"struct.std::__1::__compressed_pair_elem.1853" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1857" = type { %"class.WTF::HashTable.1858" }
%"class.WTF::HashTable.1858" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2244", %"class.blink::Member.674", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2249", i8, i32, %"class.blink::Color", %"class.absl::optional.2251", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2256", %"class.blink::Member.2258", %"class.blink::Member.2258", %"class.std::__1::unique_ptr.2261", i32, [4 x i8], %"class.WTF::HashSet.2264", %"class.blink::Member.2271", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2273", %"class.blink::HeapHashSet.2280", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2288", i8, %"class.blink::Member.2294", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2306", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2320", i8, %"class.std::__1::unique_ptr.2326", %"class.std::__1::unique_ptr.2407", %"class.WTF::Vector.2413", i32, %class.scoped_refptr.2418, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2419", %"class.blink::Member.2421", %"class.blink::Member.2423", %"class.blink::HeapHashSet.2425", %"class.blink::HeapHashSet.2432", %"class.std::__1::unique_ptr.2439", %"class.std::__1::unique_ptr.2446", %"class.WTF::Vector.115" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2244" = type { %"class.WTF::HashTable.2245" }
%"class.WTF::HashTable.2245" = type <{ %class.scoped_refptr.2248*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2248 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2249" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2250", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1530, %"class.base::WeakPtrFactory.1531" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1530 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.162" }>
%"class.base::RefCountedThreadSafe.162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1531" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2250" = type { %"class.blink::MemberBase.1862" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2251" = type { %"class.absl::optional_internal::optional_data.2252" }
%"class.absl::optional_internal::optional_data.2252" = type { %"class.absl::optional_internal::optional_data_base.2253" }
%"class.absl::optional_internal::optional_data_base.2253" = type { %"class.absl::optional_internal::optional_data_dtor_base.2254" }
%"class.absl::optional_internal::optional_data_dtor_base.2254" = type { i8, %union.anon.2255 }
%union.anon.2255 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2258" = type { %"class.blink::MemberBase.2259" }
%"class.blink::MemberBase.2259" = type { %"class.blink::HeapHashSet.2260"* }
%"class.blink::HeapHashSet.2260" = type opaque
%"class.std::__1::unique_ptr.2261" = type { %"class.std::__1::__compressed_pair.2262" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"class.WTF::HashSet.2264"* }
%"class.WTF::HashSet.2264" = type { %"class.WTF::HashTable.2265" }
%"class.WTF::HashTable.2265" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.678, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.678 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1286", %"class.std::__1::unique_ptr.1288" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.921", %"class.blink::DataRef.1002", %"class.blink::DataRef.1006", %"class.blink::DataRef.1202", %"class.blink::DataRef.1269", %"class.blink::DataRef.1273", %"class.blink::DataRef.1277", %"class.blink::DataRef.1281", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.680", %"class.blink::DataRef.682", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.682" = type { %class.scoped_refptr.683 }
%class.scoped_refptr.683 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.684", %"class.blink::Font" }
%"class.WTF::RefCounted.684" = type { %"class.base::RefCounted.685" }
%"class.base::RefCounted.685" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.712 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.687, %class.scoped_refptr.695, %class.scoped_refptr.705, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.711 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1784", [4 x i8] }>
%"class.WTF::RefCounted.1784" = type { %"class.base::RefCounted.1785" }
%"class.base::RefCounted.1785" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.687 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.693", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.688" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.695 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.696", %"class.WTF::RefCounted.703", [4 x i8] }>
%"class.blink::FontSettings.696" = type { %"class.WTF::Vector.697" }
%"class.WTF::Vector.697" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { %"class.blink::FontTagValuePair.700"*, i32, i32 }
%"class.blink::FontTagValuePair.700" = type { i32, float }
%"class.WTF::RefCounted.703" = type { %"class.base::RefCounted.704" }
%"class.base::RefCounted.704" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.705 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.706", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.708, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.706" = type { %"class.base::RefCounted.707" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.708 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.709", [4 x i8] }>
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.711 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.712 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.713", %"class.WTF::Vector.715", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.919" }
%"class.WTF::RefCounted.713" = type { %"class.base::RefCounted.714" }
%"class.base::RefCounted.714" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.715" = type { %"class.WTF::VectorBuffer.716" }
%"class.WTF::VectorBuffer.716" = type { %"class.WTF::VectorBufferBase.717", [8 x i8] }
%"class.WTF::VectorBufferBase.717" = type { %class.scoped_refptr.718*, i32, i32 }
%class.scoped_refptr.718 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.719", [4 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.729", %class.scoped_refptr.736, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.719" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.723", %"class.absl::optional.723", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.728, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.119" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.119" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.180" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.728 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.732, %class.scoped_refptr.732 }
%class.scoped_refptr.732 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.736 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.737", [4 x i8] }>
%"class.WTF::RefCounted.737" = type { %"class.base::RefCounted.738" }
%"class.base::RefCounted.738" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.919" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.920, i8, i8, i8, i8 }>
%union.anon.920 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.921" = type { %class.scoped_refptr.922 }
%class.scoped_refptr.922 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.923", [4 x i8], %"class.blink::DataRef.925", %"class.blink::DataRef.967", %"class.WTF::Vector.971", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.975, %class.scoped_refptr.984, %"class.blink::Persistent.992", %"class.blink::Persistent.994", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.923" = type { %"class.base::RefCounted.924" }
%"class.base::RefCounted.924" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.925" = type { %class.scoped_refptr.926 }
%class.scoped_refptr.926 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.927", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.929, %class.scoped_refptr.937, %"class.blink::Persistent.954", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.927" = type { %"class.base::RefCounted.928" }
%"class.base::RefCounted.928" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.929 = type { %"class.base::RefCountedData.930"* }
%"class.base::RefCountedData.930" = type { %"class.base::RefCountedThreadSafe.931", %"class.WTF::Vector.932" }
%"class.base::RefCountedThreadSafe.931" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.932" = type { %"class.WTF::VectorBuffer.933" }
%"class.WTF::VectorBuffer.933" = type { %"class.WTF::VectorBufferBase.934" }
%"class.WTF::VectorBufferBase.934" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.937 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.938", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.938" = type { %"class.base::RefCounted.939" }
%"class.base::RefCounted.939" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.940", %"class.blink::Persistent" }
%"class.WTF::HashMap.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.WTF::KeyValuePair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.944" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2782 }
%class.scoped_refptr.2782 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2783", %"class.WTF::Vector.457", %"class.WTF::Vector.2785", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2783" = type { %"class.base::RefCounted.2784" }
%"class.base::RefCounted.2784" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2785" = type { %"class.WTF::VectorBuffer.2786" }
%"class.WTF::VectorBuffer.2786" = type { %"class.WTF::VectorBufferBase.2787" }
%"class.WTF::VectorBufferBase.2787" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2788 }
%union.anon.2788 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.945" }
%"class.blink::PersistentBase.945" = type { %"class.blink::HeapHashMap.946"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::HeapHashMap.946" = type { %"class.WTF::HashMap.949" }
%"class.WTF::HashMap.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"struct.WTF::KeyValuePair.952"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.952" = type opaque
%"class.blink::Persistent.954" = type { %"class.blink::PersistentBase.955" }
%"class.blink::PersistentBase.955" = type { %"class.blink::HeapVector.956"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::HeapVector.956" = type { %"class.WTF::Vector.959" }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.962", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.967" = type { %class.scoped_refptr.968 }
%class.scoped_refptr.968 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.969", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.969" = type { %"class.base::RefCounted.970" }
%"class.base::RefCounted.970" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.975 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.976", %"class.WTF::Vector.978" }
%"class.WTF::RefCounted.976" = type { %"class.base::RefCounted.977" }
%"class.base::RefCounted.977" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"struct.std::__1::pair.981"*, i32, i32 }
%"struct.std::__1::pair.981" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.984 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.985", [4 x i8], %"class.WTF::Vector.987" }
%"class.WTF::RefCounted.985" = type { %"class.base::RefCounted.986" }
%"class.base::RefCounted.986" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.989", [28 x i8] }>
%"class.WTF::VectorBufferBase.989" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.992" = type { %"class.blink::PersistentBase.993" }
%"class.blink::PersistentBase.993" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::Persistent.994" = type { %"class.blink::PersistentBase.995" }
%"class.blink::PersistentBase.995" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.998", %"class.blink::Member.1000" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1002" = type { %class.scoped_refptr.1003 }
%class.scoped_refptr.1003 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1004", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1004" = type { %"class.base::RefCounted.1005" }
%"class.base::RefCounted.1005" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1006" = type { %class.scoped_refptr.1007 }
%class.scoped_refptr.1007 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1008", [4 x i8], %"class.blink::DataRef.1010", %"class.blink::DataRef.1076", %"class.blink::TransformOperations", %class.scoped_refptr.984, %"class.blink::Persistent.1196", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1008" = type { %"class.base::RefCounted.1009" }
%"class.base::RefCounted.1009" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1010" = type { %class.scoped_refptr.1011 }
%class.scoped_refptr.1011 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1012", [4 x i8], %"class.blink::DataRef.1014", %"class.blink::Persistent.1052", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1012" = type { %"class.base::RefCounted.1013" }
%"class.base::RefCounted.1013" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1014" = type { %class.scoped_refptr.1015 }
%class.scoped_refptr.1015 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1016", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1034, %class.scoped_refptr.1037, %class.scoped_refptr.1040, %class.scoped_refptr.1043, %class.scoped_refptr.1044, %class.scoped_refptr.1045, %"class.blink::Persistent.1052", %"class.blink::Persistent.1067", %"class.absl::optional.1071", %"class.absl::optional.1071", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1016" = type { %"class.base::RefCounted.1017" }
%"class.base::RefCounted.1017" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1018", %"class.std::__1::unique_ptr.1023" }
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020" }
%"class.WTF::VectorBufferBase.1020" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1026", %"class.WTF::Vector.1018", i32, i32 }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1034 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1035", [4 x i8] }>
%"class.WTF::RefCounted.1035" = type { %"class.base::RefCounted.1036" }
%"class.base::RefCounted.1036" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1037 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1038", [4 x i8] }>
%"class.WTF::RefCounted.1038" = type { %"class.base::RefCounted.1039" }
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1040 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1041" }>
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1043 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1044 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1045 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1046", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1046" = type { %"class.base::RefCounted.1047" }
%"class.base::RefCounted.1047" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1048" }
%"class.blink::DataRef.1048" = type { %class.scoped_refptr.1049 }
%class.scoped_refptr.1049 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.992", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1050" }
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1067" = type { %"class.blink::PersistentBase.1068" }
%"class.blink::PersistentBase.1068" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1037, %"class.blink::Member.962", i32, [4 x i8] }>
%"class.absl::optional.1071" = type { %"class.absl::optional_internal::optional_data.1072" }
%"class.absl::optional_internal::optional_data.1072" = type { %"class.absl::optional_internal::optional_data_base.1073" }
%"class.absl::optional_internal::optional_data_base.1073" = type { %"class.absl::optional_internal::optional_data_dtor_base.1074" }
%"class.absl::optional_internal::optional_data_dtor_base.1074" = type { i8, [3 x i8], %union.anon.1075 }
%union.anon.1075 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1052" = type { %"class.blink::PersistentBase.1053" }
%"class.blink::PersistentBase.1053" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1056" }
%"class.blink::HeapVector.1056" = type { %"class.WTF::Vector.1059" }
%"class.WTF::Vector.1059" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061" }
%"class.WTF::VectorBufferBase.1061" = type { %"class.blink::Member.1062"*, i32, i32 }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1076" = type { %class.scoped_refptr.1077 }
%class.scoped_refptr.1077 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1078", %"class.blink::DataRef.1080", %"class.blink::DataRef.1084", %"class.blink::DataRef.1093", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1112", %"class.std::__1::unique_ptr.1123", %"class.std::__1::unique_ptr.1162", %"class.std::__1::unique_ptr.1173", %"class.std::__1::unique_ptr.1184", %"class.WTF::Vector.457", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1080" = type { %class.scoped_refptr.1081 }
%class.scoped_refptr.1081 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1082", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1082" = type { %"class.base::RefCounted.1083" }
%"class.base::RefCounted.1083" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1086", [4 x i8], %"class.WTF::Vector.1088", i8, [7 x i8] }>
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { i32*, i32, i32 }
%"class.blink::DataRef.1093" = type { %class.scoped_refptr.1094 }
%class.scoped_refptr.1094 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1095", [4 x i8], %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1097", %"class.WTF::HashMap.1102", %"class.WTF::HashMap.1102", %"class.WTF::HashMap.1102", %"class.WTF::HashMap.1102", %"class.WTF::HashMap.1107", %"class.WTF::Vector.1018", %"class.WTF::Vector.1018", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1095" = type { %"class.base::RefCounted.1096" }
%"class.base::RefCounted.1096" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1097" = type { %"class.WTF::HashTable.1098" }
%"class.WTF::HashTable.1098" = type <{ %"struct.WTF::KeyValuePair.1101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1101" = type { %"class.WTF::String", %"class.WTF::Vector.2772" }
%"class.WTF::Vector.2772" = type { %"class.WTF::VectorBuffer.2773" }
%"class.WTF::VectorBuffer.2773" = type { %"class.WTF::VectorBufferBase.2774" }
%"class.WTF::VectorBufferBase.2774" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1102" = type { %"class.WTF::HashTable.1103" }
%"class.WTF::HashTable.1103" = type <{ %"struct.WTF::KeyValuePair.1106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1106" = type { i64, %"class.WTF::Vector.457" }
%"class.WTF::HashMap.1107" = type { %"class.WTF::HashTable.1108" }
%"class.WTF::HashTable.1108" = type <{ %"struct.WTF::KeyValuePair.1111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1111" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1115" }
%"class.WTF::HashMap.1115" = type { %"class.WTF::HashTable.1116" }
%"class.WTF::HashTable.1116" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2777", %"class.absl::optional.2777", %"class.absl::optional.2777" }
%"class.absl::optional.2777" = type { %"class.absl::optional_internal::optional_data.2778" }
%"class.absl::optional_internal::optional_data.2778" = type { %"class.absl::optional_internal::optional_data_base.2779" }
%"class.absl::optional_internal::optional_data_base.2779" = type { %"class.absl::optional_internal::optional_data_dtor_base.2780" }
%"class.absl::optional_internal::optional_data_dtor_base.2780" = type { i8, %union.anon.2781 }
%union.anon.2781 = type { i32 }
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.971", %"class.WTF::Vector.1139", %"class.WTF::Vector.1126", %"class.WTF::Vector.1144", %"class.WTF::Vector.1149", %"class.WTF::Vector.1154" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1126", %"class.WTF::Vector.1126", %"class.WTF::Vector.1131" }
%"class.WTF::Vector.1131" = type { %"class.WTF::VectorBuffer.1132" }
%"class.WTF::VectorBuffer.1132" = type { %"class.WTF::VectorBufferBase.1133" }
%"class.WTF::VectorBufferBase.1133" = type { %class.scoped_refptr.1134*, i32, i32 }
%class.scoped_refptr.1134 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1135", i32 }
%"class.WTF::ThreadSafeRefCounted.1135" = type { %"class.base::RefCountedThreadSafe.1136" }
%"class.base::RefCountedThreadSafe.1136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1126" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { double*, i32, i32 }
%"class.WTF::Vector.1144" = type { %"class.WTF::VectorBuffer.1145" }
%"class.WTF::VectorBuffer.1145" = type { %"class.WTF::VectorBufferBase.1146" }
%"class.WTF::VectorBufferBase.1146" = type { i32*, i32, i32 }
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.1150" }
%"class.WTF::VectorBuffer.1150" = type { %"class.WTF::VectorBufferBase.1151" }
%"class.WTF::VectorBufferBase.1151" = type { i32*, i32, i32 }
%"class.WTF::Vector.1154" = type { %"class.WTF::VectorBuffer.1155" }
%"class.WTF::VectorBuffer.1155" = type { %"class.WTF::VectorBufferBase.1156" }
%"class.WTF::VectorBufferBase.1156" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1165" }
%"class.WTF::Vector.1165" = type { %"class.WTF::VectorBuffer.1166" }
%"class.WTF::VectorBuffer.1166" = type { %"class.WTF::VectorBufferBase.1167" }
%"class.WTF::VectorBufferBase.1167" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1176" }
%"class.WTF::Vector.1176" = type { %"class.WTF::VectorBuffer.1177" }
%"class.WTF::VectorBuffer.1177" = type { %"class.WTF::VectorBufferBase.1178" }
%"class.WTF::VectorBufferBase.1178" = type { %"class.blink::Persistent.992"*, i32, i32 }
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.992", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1190" }
%"class.WTF::Vector.1190" = type { %"class.WTF::VectorBuffer.1191" }
%"class.WTF::VectorBuffer.1191" = type { %"class.WTF::VectorBufferBase.1192" }
%"class.WTF::VectorBufferBase.1192" = type { %class.scoped_refptr.1193*, i32, i32 }
%class.scoped_refptr.1193 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1041", [4 x i8] }>
%"class.blink::Persistent.1196" = type { %"class.blink::PersistentBase.1197" }
%"class.blink::PersistentBase.1197" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1200" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1202" = type { %class.scoped_refptr.1203 }
%class.scoped_refptr.1203 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1204", [4 x i8], %"class.blink::DataRef.1206", %"class.blink::DataRef.1210", %"class.blink::DataRef.1231", %"class.blink::DataRef.1249", %"class.blink::DataRef.1261", %"class.blink::DataRef.1265", %class.scoped_refptr.1235, i32, [4 x i8] }>
%"class.WTF::RefCounted.1204" = type { %"class.base::RefCounted.1205" }
%"class.base::RefCounted.1205" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1206" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1208", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1212", %class.scoped_refptr.1214, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1214 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1215", %"class.std::__1::unique_ptr.1221", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1038" }>
%"class.std::__1::unique_ptr.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1224, i32, %"struct.std::__1::atomic.180", %"struct.std::__1::atomic.180", i8, i8 }>
%class.sk_sp.1224 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1225, %class.SkTDArray.1226, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.119" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1225 = type { i8*, i32, i32 }
%class.SkTDArray.1226 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1227 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.119", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1227 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.196", [3 x i8] }
%"class.blink::DataRef.1231" = type { %class.scoped_refptr.1232 }
%class.scoped_refptr.1232 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1233", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1233" = type { %"class.base::RefCounted.1234" }
%"class.base::RefCounted.1234" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1235, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1249" = type { %class.scoped_refptr.1250 }
%class.scoped_refptr.1250 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1251", [4 x i8], %class.scoped_refptr.1253, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1251" = type { %"class.base::RefCounted.1252" }
%"class.base::RefCounted.1252" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1253 = type { %"class.base::RefCountedData.1254"* }
%"class.base::RefCountedData.1254" = type { %"class.base::RefCountedThreadSafe.1255", %"class.WTF::Vector.1256" }
%"class.base::RefCountedThreadSafe.1255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase.1258" }
%"class.WTF::VectorBufferBase.1258" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1261" = type { %class.scoped_refptr.1262 }
%class.scoped_refptr.1262 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1263", %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235 }
%"class.WTF::RefCounted.1263" = type { %"class.base::RefCounted.1264" }
%"class.base::RefCounted.1264" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1265" = type { %class.scoped_refptr.1266 }
%class.scoped_refptr.1266 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1267", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1267" = type { %"class.base::RefCounted.1268" }
%"class.base::RefCounted.1268" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1235 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1236", %"class.blink::Persistent.1238", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1236" = type { %"class.base::RefCounted.1237" }
%"class.base::RefCounted.1237" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1238" = type { %"class.blink::PersistentBase.1239" }
%"class.blink::PersistentBase.1239" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.953" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.36", %"class.blink::HeapHashMap.1242" }
%"class.blink::HeapHashMap.1242" = type { %"class.WTF::HashMap.1245" }
%"class.WTF::HashMap.1245" = type { %"class.WTF::HashTable.1246" }
%"class.WTF::HashTable.1246" = type <{ %"struct.WTF::KeyValuePair.1248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1248" = type opaque
%"class.blink::DataRef.1269" = type { %class.scoped_refptr.1270 }
%class.scoped_refptr.1270 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1271", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1271" = type { %"class.base::RefCounted.1272" }
%"class.base::RefCounted.1272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1273" = type { %class.scoped_refptr.1274 }
%class.scoped_refptr.1274 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1275", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1275" = type { %"class.base::RefCounted.1276" }
%"class.base::RefCounted.1276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1277" = type { %class.scoped_refptr.1278 }
%class.scoped_refptr.1278 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1279", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1279" = type { %"class.base::RefCounted.1280" }
%"class.base::RefCounted.1280" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1281" = type { %class.scoped_refptr.1282 }
%class.scoped_refptr.1282 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1283", %class.scoped_refptr.1285 }
%"class.WTF::RefCounted.1283" = type { %"class.base::RefCounted.1284" }
%"class.base::RefCounted.1284" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1285 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1775", %"class.blink::StyleVariables", %class.scoped_refptr.1285 }
%"class.WTF::RefCounted.1775" = type { %"class.base::RefCounted.1776" }
%"class.base::RefCounted.1776" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1286" = type { %"class.base::RefCounted.1287" }
%"class.base::RefCounted.1287" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1288" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1291" }
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"class.WTF::Vector.1294"* }
%"class.WTF::Vector.1294" = type { %"class.WTF::VectorBuffer.2792" }
%"class.WTF::VectorBuffer.2792" = type { %"class.WTF::VectorBufferBase.2793", [32 x i8] }
%"class.WTF::VectorBufferBase.2793" = type { %class.scoped_refptr.678*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1302" }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1305", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1311", %"class.std::__1::unique_ptr.1432", i8, %"class.absl::optional.1438", %class.scoped_refptr.1414, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1443" }
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1314, %class.scoped_refptr.1349, %class.scoped_refptr.1363, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1364, %class.scoped_refptr.1404, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1405, %class.scoped_refptr.1428 }
%class.scoped_refptr.1314 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1331" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1315", i8, i8, %class.scoped_refptr.1317, i32, i32 }
%"class.WTF::RefCounted.1315" = type { %"class.base::RefCounted.1316" }
%"class.base::RefCounted.1316" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1317 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1324, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1325", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1318" }
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1324 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1350", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1350" = type { %"class.WTF::RefCounted.1351", i8, i8, %class.scoped_refptr.1324, i32, i32 }
%"class.WTF::RefCounted.1351" = type { %"class.base::RefCounted.1352" }
%"class.base::RefCounted.1352" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1353" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1353" = type { %"class.absl::optional_internal::optional_data.1354" }
%"class.absl::optional_internal::optional_data.1354" = type { %"class.absl::optional_internal::optional_data_base.1355" }
%"class.absl::optional_internal::optional_data_base.1355" = type { %"class.absl::optional_internal::optional_data_dtor_base.1356" }
%"class.absl::optional_internal::optional_data_dtor_base.1356" = type { i8, %union.anon.1357 }
%union.anon.1357 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1358" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1334", %"class.std::__1::unique_ptr.1340", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1349 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1363 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1364 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1365" }
%"class.blink::PaintPropertyNode.1365" = type { %"class.WTF::RefCounted.1366", i8, i8, %class.scoped_refptr.1368, i32, i32 }
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1368 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1317, %class.scoped_refptr.1369, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1391", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1369 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1406" }
%"class.blink::PaintPropertyNode.1406" = type { %"class.WTF::RefCounted.1407", i8, i8, %class.scoped_refptr.1369, i32, i32 }
%"class.WTF::RefCounted.1407" = type { %"class.base::RefCounted.1408" }
%"class.base::RefCounted.1408" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1370" }
%"class.std::__1::vector.1370" = type { %"class.std::__1::__vector_base.1371" }
%"class.std::__1::__vector_base.1371" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1386" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1372, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1379", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1372 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1373, i32, %"class.absl::optional.1374", i8, i32 }
%class.sk_sp.1373 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1374" = type { %"class.absl::optional_internal::optional_data.1375" }
%"class.absl::optional_internal::optional_data.1375" = type { %"class.absl::optional_internal::optional_data_base.1376" }
%"class.absl::optional_internal::optional_data_base.1376" = type { %"class.absl::optional_internal::optional_data_dtor_base.1377" }
%"class.absl::optional_internal::optional_data_dtor_base.1377" = type { i8, %union.anon.1378 }
%union.anon.1378 = type { %struct.SkRect }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1397" }
%"class.std::__1::vector.1397" = type { %"class.std::__1::__vector_base.1398" }
%"class.std::__1::__vector_base.1398" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { i32* }
%class.scoped_refptr.1404 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1405 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1417" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1317, %"class.absl::optional.1409", %class.scoped_refptr.1414, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1409" = type { %"class.absl::optional_internal::optional_data.1410" }
%"class.absl::optional_internal::optional_data.1410" = type { %"class.absl::optional_internal::optional_data_base.1411" }
%"class.absl::optional_internal::optional_data_base.1411" = type { %"class.absl::optional_internal::optional_data_dtor_base.1412" }
%"class.absl::optional_internal::optional_data_dtor_base.1412" = type { i8, [3 x i8], %union.anon.1413 }
%union.anon.1413 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1420", i32, [4 x i8] }>
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1428 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1317, %class.scoped_refptr.1369, %class.scoped_refptr.1368 }
%"class.absl::optional.1438" = type { %"class.absl::optional_internal::optional_data.1439" }
%"class.absl::optional_internal::optional_data.1439" = type { %"class.absl::optional_internal::optional_data_base.1440" }
%"class.absl::optional_internal::optional_data_base.1440" = type { %"class.absl::optional_internal::optional_data_dtor_base.1441" }
%"class.absl::optional_internal::optional_data_dtor_base.1441" = type { i8, %union.anon.1442 }
%union.anon.1442 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1414 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1415", [4 x i8] }
%"class.WTF::RefCounted.1415" = type { %"class.base::RefCounted.1416" }
%"class.base::RefCounted.1416" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1443" = type { %"class.std::__1::__compressed_pair.1444" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2273" = type { %"class.WTF::HashSet.2276" }
%"class.WTF::HashSet.2276" = type { %"class.WTF::HashTable.2277" }
%"class.WTF::HashTable.2277" = type <{ %"class.blink::Member.2279"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2279" = type opaque
%"class.blink::HeapHashSet.2280" = type { %"class.WTF::HashSet.2283" }
%"class.WTF::HashSet.2283" = type { %"class.WTF::HashTable.2284" }
%"class.WTF::HashTable.2284" = type <{ %"class.blink::Member.2286"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2286" = type { %"class.blink::MemberBase.2287" }
%"class.blink::MemberBase.2287" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2459", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2470", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.36" }
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2461", %"class.blink::Member.2462", %"class.blink::Member.2464", %"class.blink::Member.2466", %"class.blink::Member.2468", %"class.WTF::Vector.115", i16, %class.scoped_refptr.1530 }
%"class.blink::ThreadState::PrefinalizerRegistration.2461" = type { i8 }
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2466" = type { %"class.blink::MemberBase.2467" }
%"class.blink::MemberBase.2467" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2470" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2471", { i64, i64 } }
%"class.blink::WeakMember.2471" = type { %"class.blink::MemberBase.2287" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2288" = type { %"class.std::__1::__compressed_pair.2289" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.2290" }
%"struct.std::__1::__compressed_pair_elem.2290" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2298", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2298" = type { %"class.WTF::HashTable.2299" }
%"class.WTF::HashTable.2299" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2302", i32, i32 }
%"class.WTF::Vector.2302" = type { %"class.WTF::VectorBuffer.2303" }
%"class.WTF::VectorBuffer.2303" = type { %"class.WTF::VectorBufferBase.2304" }
%"class.WTF::VectorBufferBase.2304" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2306" = type { %"class.WTF::LinkedHashSet.2309" }
%"class.WTF::LinkedHashSet.2309" = type { %"class.WTF::HashMap.2310", %"class.WTF::VectorBackedLinkedList.2314" }
%"class.WTF::HashMap.2310" = type { %"class.WTF::HashTable.2311" }
%"class.WTF::HashTable.2311" = type <{ %"struct.WTF::KeyValuePair.2313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2313" = type opaque
%"class.WTF::VectorBackedLinkedList.2314" = type { %"class.WTF::Vector.2315", i32, i32 }
%"class.WTF::Vector.2315" = type { %"class.WTF::VectorBuffer.2316" }
%"class.WTF::VectorBuffer.2316" = type { %"class.WTF::VectorBufferBase.2317" }
%"class.WTF::VectorBufferBase.2317" = type { %"class.WTF::VectorBackedLinkedListNode.2318"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2318" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2320" = type { %"class.std::__1::__compressed_pair.2321" }
%"class.std::__1::__compressed_pair.2321" = type { %"struct.std::__1::__compressed_pair_elem.2322" }
%"struct.std::__1::__compressed_pair_elem.2322" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2326" = type { %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2329, %class.scoped_refptr.2329, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2384", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2389", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2329 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2330", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2337" }
%"class.WTF::RefCounted.2330" = type { %"class.base::RefCounted.2331" }
%"class.base::RefCounted.2331" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2332", i32, [4 x i8] }>
%"class.WTF::Vector.2332" = type { %"class.WTF::VectorBuffer.2333" }
%"class.WTF::VectorBuffer.2333" = type { %"class.WTF::VectorBufferBase.2334" }
%"class.WTF::VectorBufferBase.2334" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2337" = type { %"class.WTF::VectorBuffer.2338" }
%"class.WTF::VectorBuffer.2338" = type { %"class.WTF::VectorBufferBase.2339" }
%"class.WTF::VectorBufferBase.2339" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2340", %"class.std::__1::unique_ptr.2356", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2343", %"class.WTF::Vector.2348", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2343" = type { %"class.WTF::VectorBuffer.2344" }
%"class.WTF::VectorBuffer.2344" = type { %"class.WTF::VectorBufferBase.2345" }
%"class.WTF::VectorBufferBase.2345" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2348" = type { %"class.WTF::VectorBuffer.2349" }
%"class.WTF::VectorBuffer.2349" = type { %"class.WTF::VectorBufferBase.2350" }
%"class.WTF::VectorBufferBase.2350" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2356" = type { %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2359", %"class.absl::optional.2359" }
%"class.absl::optional.2359" = type { %"class.absl::optional_internal::optional_data.2360" }
%"class.absl::optional_internal::optional_data.2360" = type { %"class.absl::optional_internal::optional_data_base.2361" }
%"class.absl::optional_internal::optional_data_base.2361" = type { %"class.absl::optional_internal::optional_data_dtor_base.2362" }
%"class.absl::optional_internal::optional_data_dtor_base.2362" = type { i8, [3 x i8], %union.anon.2363 }
%union.anon.2363 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2337"*, %"class.absl::optional.2369", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2369" = type { %"class.absl::optional_internal::optional_data.2370" }
%"class.absl::optional_internal::optional_data.2370" = type { %"class.absl::optional_internal::optional_data_base.2371" }
%"class.absl::optional_internal::optional_data_base.2371" = type { %"class.absl::optional_internal::optional_data_dtor_base.2372" }
%"class.absl::optional_internal::optional_data_dtor_base.2372" = type { i8, %union.anon.2373 }
%union.anon.2373 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2374", %"class.WTF::Vector.2379" }
%"class.WTF::Vector.2374" = type { %"class.WTF::VectorBuffer.2375" }
%"class.WTF::VectorBuffer.2375" = type { %"class.WTF::VectorBufferBase.2376", [128 x i8] }
%"class.WTF::VectorBufferBase.2376" = type { i32*, i32, i32 }
%"class.WTF::Vector.2379" = type { %"class.WTF::VectorBuffer.2380" }
%"class.WTF::VectorBuffer.2380" = type { %"class.WTF::VectorBufferBase.2381", [128 x i8] }
%"class.WTF::VectorBufferBase.2381" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2384" = type { %"class.WTF::VectorBuffer.2385" }
%"class.WTF::VectorBuffer.2385" = type { %"class.WTF::VectorBufferBase.2386" }
%"class.WTF::VectorBufferBase.2386" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2389" = type { %"class.WTF::HashTable.2390" }
%"class.WTF::HashTable.2390" = type <{ %"struct.WTF::KeyValuePair.2393"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2393" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2394", %"class.WTF::Vector.2399" }
%"class.WTF::HashMap.2394" = type { %"class.WTF::HashTable.2395" }
%"class.WTF::HashTable.2395" = type <{ %"struct.WTF::KeyValuePair.2398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2398" = type opaque
%"class.WTF::Vector.2399" = type { %"class.WTF::VectorBuffer.2400" }
%"class.WTF::VectorBuffer.2400" = type { %"class.WTF::VectorBufferBase.2401" }
%"class.WTF::VectorBufferBase.2401" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2407" = type { %"class.std::__1::__compressed_pair.2408" }
%"class.std::__1::__compressed_pair.2408" = type { %"struct.std::__1::__compressed_pair_elem.2409" }
%"struct.std::__1::__compressed_pair_elem.2409" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2413" = type { %"class.WTF::VectorBuffer.2414" }
%"class.WTF::VectorBuffer.2414" = type { %"class.WTF::VectorBufferBase.2415" }
%"class.WTF::VectorBufferBase.2415" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2418 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2425" = type { %"class.WTF::HashSet.2428" }
%"class.WTF::HashSet.2428" = type { %"class.WTF::HashTable.2429" }
%"class.WTF::HashTable.2429" = type <{ %"class.blink::WeakMember.2431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2431" = type opaque
%"class.blink::HeapHashSet.2432" = type { %"class.WTF::HashSet.2435" }
%"class.WTF::HashSet.2435" = type { %"class.WTF::HashTable.2436" }
%"class.WTF::HashTable.2436" = type <{ %"class.blink::WeakMember.2438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2438" = type opaque
%"class.std::__1::unique_ptr.2439" = type { %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.2441" }
%"struct.std::__1::__compressed_pair_elem.2441" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2442" }
%"class.base::time_internal::TimeBase.2442" = type { i64 }
%"class.std::__1::unique_ptr.2446" = type { %"class.std::__1::__compressed_pair.2447" }
%"class.std::__1::__compressed_pair.2447" = type { %"struct.std::__1::__compressed_pair_elem.2448" }
%"struct.std::__1::__compressed_pair_elem.2448" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2449", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2449" = type { %"class.absl::optional_internal::optional_data.2450" }
%"class.absl::optional_internal::optional_data.2450" = type { %"class.absl::optional_internal::optional_data_base.2451" }
%"class.absl::optional_internal::optional_data_base.2451" = type { %"class.absl::optional_internal::optional_data_dtor_base.2452" }
%"class.absl::optional_internal::optional_data_dtor_base.2452" = type { i8, %union.anon.2453 }
%union.anon.2453 = type { %"class.base::Time" }
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1882", %"class.blink::HeapListHashSet.1893", %"class.blink::HeapListHashSet.1904", %"class.blink::HeapListHashSet.1915", %"class.blink::HeapListHashSet.1926", %"class.blink::HeapListHashSet.1937", %"class.blink::HeapListHashSet.1948", %"class.blink::HeapListHashSet.1959", %"class.blink::HeapListHashSet.1970", %"class.blink::HeapListHashSet.1981", %"class.blink::HeapListHashSet.1992", %"class.blink::HeapListHashSet.2003", %"class.blink::HeapListHashSet.2014", %"class.blink::HeapListHashSet.2025", %"class.blink::HeapListHashSet.2036", %"class.blink::HeapListHashSet.2047", %"class.blink::HeapListHashSet.2058", %"class.blink::HeapListHashSet.2069", %"class.blink::HeapListHashSet.2080" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1878", %"class.blink::Member.1880", %"class.blink::Member.1880", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1878" = type <{ %"class.blink::Member.1880"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2094", %"class.blink::Member.1880", %"class.blink::Member.1880" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1882" = type { %"class.WTF::ListHashSet.base.1892", [7 x i8] }
%"class.WTF::ListHashSet.base.1892" = type <{ %"class.WTF::HashTable.1887", %"class.blink::Member.1889", %"class.blink::Member.1889", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1887" = type <{ %"class.blink::Member.1889"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::HeapListHashSetNode.1891"* }
%"class.blink::HeapListHashSetNode.1891" = type { %"class.blink::Member.2238", %"class.blink::Member.1889", %"class.blink::Member.1889" }
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1893" = type { %"class.WTF::ListHashSet.base.1903", [7 x i8] }
%"class.WTF::ListHashSet.base.1903" = type <{ %"class.WTF::HashTable.1898", %"class.blink::Member.1900", %"class.blink::Member.1900", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1898" = type <{ %"class.blink::Member.1900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::HeapListHashSetNode.1902"* }
%"class.blink::HeapListHashSetNode.1902" = type { %"class.blink::Member.2234", %"class.blink::Member.1900", %"class.blink::Member.1900" }
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1904" = type { %"class.WTF::ListHashSet.base.1914", [7 x i8] }
%"class.WTF::ListHashSet.base.1914" = type <{ %"class.WTF::HashTable.1909", %"class.blink::Member.1911", %"class.blink::Member.1911", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1909" = type <{ %"class.blink::Member.1911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1911" = type { %"class.blink::MemberBase.1912" }
%"class.blink::MemberBase.1912" = type { %"class.blink::HeapListHashSetNode.1913"* }
%"class.blink::HeapListHashSetNode.1913" = type { %"class.blink::Member.2230", %"class.blink::Member.1911", %"class.blink::Member.1911" }
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1915" = type { %"class.WTF::ListHashSet.base.1925", [7 x i8] }
%"class.WTF::ListHashSet.base.1925" = type <{ %"class.WTF::HashTable.1920", %"class.blink::Member.1922", %"class.blink::Member.1922", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1920" = type <{ %"class.blink::Member.1922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::HeapListHashSetNode.1924"* }
%"class.blink::HeapListHashSetNode.1924" = type { %"class.blink::Member.2226", %"class.blink::Member.1922", %"class.blink::Member.1922" }
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1926" = type { %"class.WTF::ListHashSet.base.1936", [7 x i8] }
%"class.WTF::ListHashSet.base.1936" = type <{ %"class.WTF::HashTable.1931", %"class.blink::Member.1933", %"class.blink::Member.1933", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1931" = type <{ %"class.blink::Member.1933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1933" = type { %"class.blink::MemberBase.1934" }
%"class.blink::MemberBase.1934" = type { %"class.blink::HeapListHashSetNode.1935"* }
%"class.blink::HeapListHashSetNode.1935" = type { %"class.blink::Member.2222", %"class.blink::Member.1933", %"class.blink::Member.1933" }
%"class.blink::Member.2222" = type { %"class.blink::MemberBase.2223" }
%"class.blink::MemberBase.2223" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1937" = type { %"class.WTF::ListHashSet.base.1947", [7 x i8] }
%"class.WTF::ListHashSet.base.1947" = type <{ %"class.WTF::HashTable.1942", %"class.blink::Member.1944", %"class.blink::Member.1944", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1942" = type <{ %"class.blink::Member.1944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::HeapListHashSetNode.1946"* }
%"class.blink::HeapListHashSetNode.1946" = type { %"class.blink::Member.2218", %"class.blink::Member.1944", %"class.blink::Member.1944" }
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1948" = type { %"class.WTF::ListHashSet.base.1958", [7 x i8] }
%"class.WTF::ListHashSet.base.1958" = type <{ %"class.WTF::HashTable.1953", %"class.blink::Member.1955", %"class.blink::Member.1955", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1953" = type <{ %"class.blink::Member.1955"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1955" = type { %"class.blink::MemberBase.1956" }
%"class.blink::MemberBase.1956" = type { %"class.blink::HeapListHashSetNode.1957"* }
%"class.blink::HeapListHashSetNode.1957" = type { %"class.blink::Member.2214", %"class.blink::Member.1955", %"class.blink::Member.1955" }
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1959" = type { %"class.WTF::ListHashSet.base.1969", [7 x i8] }
%"class.WTF::ListHashSet.base.1969" = type <{ %"class.WTF::HashTable.1964", %"class.blink::Member.1966", %"class.blink::Member.1966", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1964" = type <{ %"class.blink::Member.1966"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::HeapListHashSetNode.1968"* }
%"class.blink::HeapListHashSetNode.1968" = type { %"class.blink::Member.2210", %"class.blink::Member.1966", %"class.blink::Member.1966" }
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1970" = type { %"class.WTF::ListHashSet.base.1980", [7 x i8] }
%"class.WTF::ListHashSet.base.1980" = type <{ %"class.WTF::HashTable.1975", %"class.blink::Member.1977", %"class.blink::Member.1977", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1975" = type <{ %"class.blink::Member.1977"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1977" = type { %"class.blink::MemberBase.1978" }
%"class.blink::MemberBase.1978" = type { %"class.blink::HeapListHashSetNode.1979"* }
%"class.blink::HeapListHashSetNode.1979" = type { %"class.blink::Member.2206", %"class.blink::Member.1977", %"class.blink::Member.1977" }
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1981" = type { %"class.WTF::ListHashSet.base.1991", [7 x i8] }
%"class.WTF::ListHashSet.base.1991" = type <{ %"class.WTF::HashTable.1986", %"class.blink::Member.1988", %"class.blink::Member.1988", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1986" = type <{ %"class.blink::Member.1988"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::HeapListHashSetNode.1990"* }
%"class.blink::HeapListHashSetNode.1990" = type { %"class.blink::Member.2098", %"class.blink::Member.1988", %"class.blink::Member.1988" }
%"class.blink::HeapListHashSet.1992" = type { %"class.WTF::ListHashSet.base.2002", [7 x i8] }
%"class.WTF::ListHashSet.base.2002" = type <{ %"class.WTF::HashTable.1997", %"class.blink::Member.1999", %"class.blink::Member.1999", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1997" = type <{ %"class.blink::Member.1999"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::HeapListHashSetNode.2001"* }
%"class.blink::HeapListHashSetNode.2001" = type { %"class.blink::Member.2200", %"class.blink::Member.1999", %"class.blink::Member.1999" }
%"class.blink::Member.2200" = type { %"class.blink::MemberBase.2201" }
%"class.blink::MemberBase.2201" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2003" = type { %"class.WTF::ListHashSet.base.2013", [7 x i8] }
%"class.WTF::ListHashSet.base.2013" = type <{ %"class.WTF::HashTable.2008", %"class.blink::Member.2010", %"class.blink::Member.2010", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2008" = type <{ %"class.blink::Member.2010"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2010" = type { %"class.blink::MemberBase.2011" }
%"class.blink::MemberBase.2011" = type { %"class.blink::HeapListHashSetNode.2012"* }
%"class.blink::HeapListHashSetNode.2012" = type { %"class.blink::Member.2196", %"class.blink::Member.2010", %"class.blink::Member.2010" }
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2014" = type { %"class.WTF::ListHashSet.base.2024", [7 x i8] }
%"class.WTF::ListHashSet.base.2024" = type <{ %"class.WTF::HashTable.2019", %"class.blink::Member.2021", %"class.blink::Member.2021", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2019" = type <{ %"class.blink::Member.2021"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::HeapListHashSetNode.2023"* }
%"class.blink::HeapListHashSetNode.2023" = type { %"class.blink::Member.2192", %"class.blink::Member.2021", %"class.blink::Member.2021" }
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2025" = type { %"class.WTF::ListHashSet.base.2035", [7 x i8] }
%"class.WTF::ListHashSet.base.2035" = type <{ %"class.WTF::HashTable.2030", %"class.blink::Member.2032", %"class.blink::Member.2032", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2030" = type <{ %"class.blink::Member.2032"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::HeapListHashSetNode.2034"* }
%"class.blink::HeapListHashSetNode.2034" = type { %"class.blink::Member.2188", %"class.blink::Member.2032", %"class.blink::Member.2032" }
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2036" = type { %"class.WTF::ListHashSet.base.2046", [7 x i8] }
%"class.WTF::ListHashSet.base.2046" = type <{ %"class.WTF::HashTable.2041", %"class.blink::Member.2043", %"class.blink::Member.2043", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2041" = type <{ %"class.blink::Member.2043"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::HeapListHashSetNode.2045"* }
%"class.blink::HeapListHashSetNode.2045" = type { %"class.blink::Member.2184", %"class.blink::Member.2043", %"class.blink::Member.2043" }
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2047" = type { %"class.WTF::ListHashSet.base.2057", [7 x i8] }
%"class.WTF::ListHashSet.base.2057" = type <{ %"class.WTF::HashTable.2052", %"class.blink::Member.2054", %"class.blink::Member.2054", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2052" = type <{ %"class.blink::Member.2054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::HeapListHashSetNode.2056"* }
%"class.blink::HeapListHashSetNode.2056" = type { %"class.blink::Member.2180", %"class.blink::Member.2054", %"class.blink::Member.2054" }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2058" = type { %"class.WTF::ListHashSet.base.2068", [7 x i8] }
%"class.WTF::ListHashSet.base.2068" = type <{ %"class.WTF::HashTable.2063", %"class.blink::Member.2065", %"class.blink::Member.2065", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2063" = type <{ %"class.blink::Member.2065"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::HeapListHashSetNode.2067"* }
%"class.blink::HeapListHashSetNode.2067" = type { %"class.blink::Member.2176", %"class.blink::Member.2065", %"class.blink::Member.2065" }
%"class.blink::Member.2176" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2069" = type { %"class.WTF::ListHashSet.base.2079", [7 x i8] }
%"class.WTF::ListHashSet.base.2079" = type <{ %"class.WTF::HashTable.2074", %"class.blink::Member.2076", %"class.blink::Member.2076", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2074" = type <{ %"class.blink::Member.2076"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::HeapListHashSetNode.2078"* }
%"class.blink::HeapListHashSetNode.2078" = type { %"class.blink::Member.2100", %"class.blink::Member.2076", %"class.blink::Member.2076" }
%"class.blink::HeapListHashSet.2080" = type { %"class.WTF::ListHashSet.base.2090", [7 x i8] }
%"class.WTF::ListHashSet.base.2090" = type <{ %"class.WTF::HashTable.2085", %"class.blink::Member.2087", %"class.blink::Member.2087", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2085" = type <{ %"class.blink::Member.2087"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::HeapListHashSetNode.2089"* }
%"class.blink::HeapListHashSetNode.2089" = type { %"class.blink::Member.2092", %"class.blink::Member.2087", %"class.blink::Member.2087" }
%class.scoped_refptr.2091 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2108" = type { %"class.blink::Member.2109" }
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2817" }
%"class.mojo::Remote.2817" = type { %"class.mojo::internal::InterfacePtrState.2818" }
%"class.mojo::internal::InterfacePtrState.2818" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2819" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.159, %"class.std::__1::unique_ptr.277", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.161, i32 }>
%class.scoped_refptr.159 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.161, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.239", %"class.absl::optional.244", %"class.absl::optional.200", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.268", i8, [7 x i8], %class.scoped_refptr.161, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160" }>
%"class.base::RefCountedThreadSafe.160" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.161, %"class.std::__1::unique_ptr.185", %"class.absl::optional", %"struct.std::__1::atomic.196", i8, i8, i8, i8, i32, i32, %"class.absl::optional.200", %"class.std::__1::unique_ptr.205", i8, i64, %class.scoped_refptr.235, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.238" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.161, i8, %"class.mojo::ScopedHandleBase.188", %class.scoped_refptr.189, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.190" }
%"class.mojo::ScopedHandleBase.188" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.189 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.190" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.194 }
%union.anon.194 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.195", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.195" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.208", i8, i64, %class.scoped_refptr.209, %class.scoped_refptr.231 }
%"class.base::RepeatingCallback.208" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.209 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.210", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.220", i8, [7 x i8] }>
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%class.scoped_refptr.231 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.235 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2472", [4 x i8], %"class.base::RepeatingCallback.280", %class.scoped_refptr.161, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2472" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.239" = type { %"class.absl::optional_internal::optional_data.240" }
%"class.absl::optional_internal::optional_data.240" = type { %"class.absl::optional_internal::optional_data_base.241" }
%"class.absl::optional_internal::optional_data_base.241" = type { %"class.absl::optional_internal::optional_data_dtor_base.242" }
%"class.absl::optional_internal::optional_data_dtor_base.242" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, [7 x i8], %union.anon.248 }
%union.anon.248 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.253 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.253 = type { %"class.std::__1::map.256" }
%"class.std::__1::map.256" = type { %"class.std::__1::__tree.257" }
%"class.std::__1::__tree.257" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.267"*, i64 }
%"class.std::__1::unique_ptr.267" = type opaque
%"class.std::__1::map.268" = type { %"class.std::__1::__tree.269" }
%"class.std::__1::__tree.269" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.280", %"class.base::OnceCallback.281", %"class.absl::optional.282", %"class.absl::optional.287", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.294", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.302", %"class.std::__1::map.313", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.322", i8, %class.scoped_refptr.161, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.323" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.281" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.282" = type { %"class.absl::optional_internal::optional_data.283" }
%"class.absl::optional_internal::optional_data.283" = type { %"class.absl::optional_internal::optional_data_base.284" }
%"class.absl::optional_internal::optional_data_base.284" = type { %"class.absl::optional_internal::optional_data_dtor_base.285" }
%"class.absl::optional_internal::optional_data_dtor_base.285" = type { i8, %union.anon.286 }
%union.anon.286 = type { %"class.base::TimeDelta" }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.161, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.292" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.297", %class.scoped_refptr.298 }
%"class.base::RepeatingCallback.297" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.298 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.302" = type { %"class.std::__1::__tree.303" }
%"class.std::__1::__tree.303" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.313" = type { %"class.std::__1::__tree.314" }
%"class.std::__1::__tree.314" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::OnceCallback.322" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.323" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.161 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.2819" = type { %"class.std::__1::__compressed_pair.2820" }
%"class.std::__1::__compressed_pair.2820" = type { %"struct.std::__1::__compressed_pair_elem.2821" }
%"struct.std::__1::__compressed_pair_elem.2821" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2111" = type { %"class.std::__1::__compressed_pair.2112" }
%"class.std::__1::__compressed_pair.2112" = type { %"struct.std::__1::__compressed_pair_elem.2113" }
%"struct.std::__1::__compressed_pair_elem.2113" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2117" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2118" = type { %"class.std::__1::__compressed_pair.2119" }
%"class.std::__1::__compressed_pair.2119" = type { %"struct.std::__1::__compressed_pair_elem.2120" }
%"struct.std::__1::__compressed_pair_elem.2120" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2130" }
%"class.blink::Member.2130" = type { %"class.blink::MemberBase.2131" }
%"class.blink::MemberBase.2131" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2827" }
%"class.mojo::AssociatedRemote.2827" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2828" }
%"class.mojo::internal::AssociatedInterfacePtrState.2828" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2829" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.277", i32 }>
%"class.std::__1::unique_ptr.2829" = type { %"class.std::__1::__compressed_pair.2830" }
%"class.std::__1::__compressed_pair.2830" = type { %"struct.std::__1::__compressed_pair_elem.2831" }
%"struct.std::__1::__compressed_pair_elem.2831" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2132" = type { %"class.blink::Member.2133" }
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2837" }
%"class.mojo::AssociatedRemote.2837" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2838" }
%"class.mojo::internal::AssociatedInterfacePtrState.2838" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2839" }
%"class.std::__1::unique_ptr.2839" = type { %"class.std::__1::__compressed_pair.2840" }
%"class.std::__1::__compressed_pair.2840" = type { %"struct.std::__1::__compressed_pair_elem.2841" }
%"struct.std::__1::__compressed_pair_elem.2841" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2135" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2847", %"class.blink::Member.674", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2847" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2848" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.277" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2848" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2137" = type { %"class.blink::Member.2138" }
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2851", %"class.blink::Member.674", %"class.mojo::AssociatedReceiver.2852" }
%"class.blink::ThreadState::PrefinalizerRegistration.2851" = type { i8 }
%"class.mojo::AssociatedReceiver.2852" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2853" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2853" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2140" }
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2856", %"class.blink::Member.674", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2856" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.159, %"class.std::__1::unique_ptr.277", %"class.base::WeakPtrFactory.2857" }
%"class.base::WeakPtrFactory.2857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2142" = type { %"class.blink::Member.2143" }
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2860", %"class.blink::Member.674", %"class.mojo::AssociatedReceiver.2861" }
%"class.blink::ThreadState::PrefinalizerRegistration.2860" = type { i8 }
%"class.mojo::AssociatedReceiver.2861" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2862" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2145" = type { %"class.blink::MemberBase.2146" }
%"class.blink::MemberBase.2146" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::HeapHashMap.2153"* }
%"class.blink::HeapHashMap.2153" = type opaque
%"class.mojo::StructPtr.2154" = type { %"class.std::__1::unique_ptr.2155" }
%"class.std::__1::unique_ptr.2155" = type { %"class.std::__1::__compressed_pair.2156" }
%"class.std::__1::__compressed_pair.2156" = type { %"struct.std::__1::__compressed_pair_elem.2157" }
%"struct.std::__1::__compressed_pair_elem.2157" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2158", %"class.mojo::InlinedStructPtr.2159" }
%"class.mojo::InlinedStructPtr.2158" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2159" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2163" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2165" = type { %"class.absl::optional_internal::optional_data.2166" }
%"class.absl::optional_internal::optional_data.2166" = type { %"class.absl::optional_internal::optional_data_base.2167" }
%"class.absl::optional_internal::optional_data_base.2167" = type { %"class.absl::optional_internal::optional_data_dtor_base.2168" }
%"class.absl::optional_internal::optional_data_dtor_base.2168" = type { i8, %union.anon.2169 }
%union.anon.2169 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.148", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1796" }
%"class.base::internal::flat_tree.1796" = type { %"class.std::__1::vector.1797" }
%"class.std::__1::vector.1797" = type { %"class.std::__1::__vector_base.1798" }
%"class.std::__1::__vector_base.1798" = type { %"struct.std::__1::pair.1799"*, %"struct.std::__1::pair.1799"*, %"class.std::__1::__compressed_pair.1800" }
%"struct.std::__1::pair.1799" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"struct.std::__1::pair.1799"* }
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1812" = type { %"class.absl::optional_internal::optional_data.1813" }
%"class.absl::optional_internal::optional_data.1813" = type { %"class.absl::optional_internal::optional_data_base.1814" }
%"class.absl::optional_internal::optional_data_base.1814" = type { %"class.absl::optional_internal::optional_data_dtor_base.1815" }
%"class.absl::optional_internal::optional_data_dtor_base.1815" = type { i8, %union.anon.1816 }
%union.anon.1816 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1817" }
%"class.blink::HeapHashSet.1817" = type { %"class.WTF::HashSet.1820" }
%"class.WTF::HashSet.1820" = type { %"class.WTF::HashTable.1821" }
%"class.WTF::HashTable.1821" = type <{ %"class.blink::WeakMember.1823"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1823" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.335", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.406", i32, i8, [3 x i8], %"class.blink::HeapVector.408", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.427", %"class.blink::Member.486", %"class.blink::Member.488", i8 }>
%"class.blink::Supplementable.335" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.336" }
%"class.blink::HeapHashMap.336" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.342" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.350" }
%"class.blink::Supplementable.350" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.351" }
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type { i8*, %"class.blink::Member.2768" }
%"class.blink::Member.2768" = type { %"class.blink::MemberBase.2769" }
%"class.blink::MemberBase.2769" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2770" }
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.358, %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.394", %"class.blink::Member.400", i32, [4 x i8], %"class.WTF::HashSet.402", i32, i32 }
%class.scoped_refptr.358 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.359", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.361", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.366 }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.366 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.370", %"class.std::__1::map.381", %"class.std::__1::map.390"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.361" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.381" = type { %"class.std::__1::__tree.382" }
%"class.std::__1::__tree.382" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.390" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::Member.414"*, i32, i32 }
%"class.blink::Member.414" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.420", i32, i32 }
%"class.blink::HeapHashMap.420" = type { %"class.WTF::HashMap.423" }
%"class.WTF::HashMap.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"struct.WTF::KeyValuePair.426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.426" = type opaque
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.430" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.mojo::StructPtr.436"*, i32, i32 }
%"class.mojo::StructPtr.436" = type { %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.440", %"class.WTF::HashMap.447", %"class.WTF::HashMap.452", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.457", i32, %"class.mojo::StructPtr.462", %"class.WTF::Vector.457" }
%"class.mojo::StructPtr.440" = type { %"class.std::__1::unique_ptr.441" }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type opaque
%"class.WTF::HashMap.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"struct.WTF::KeyValuePair.456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.456" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.462" = type { %"class.std::__1::unique_ptr.463" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.457", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.477" }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.418", i8, [7 x i8], %"class.WTF::Vector.433", %"class.blink::HeapVector.492", i8, [7 x i8], %"class.WTF::HashSet.402", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.492" = type { %"class.WTF::Vector.495" }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"class.blink::Member.498"*, i32, i32 }
%"class.blink::Member.498" = type opaque
%"class.blink::Supplementable.500" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.501" }
%"class.blink::HeapHashMap.501" = type { %"class.WTF::HashMap.504" }
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.507" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::HeapVector.524", %"class.WTF::HashMap.542", %"class.blink::Member.547", %"class.blink::Member.549", %"class.blink::HeapHashMap.552", %"class.blink::Member.559" }
%"class.blink::HeapVector.524" = type { %"class.WTF::Vector.527" }
%"class.WTF::Vector.527" = type { %"class.WTF::VectorBuffer.528" }
%"class.WTF::VectorBuffer.528" = type { %"class.WTF::VectorBufferBase.529" }
%"class.WTF::VectorBufferBase.529" = type { %"class.blink::Member.530"*, i32, i32 }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::CustomElementDefinition"* }
%"class.blink::CustomElementDefinition" = type { %"class.blink::NameClient", %"class.blink::CustomElementDescriptor", %"class.blink::HeapVector.534", %"class.WTF::HashSet.92", i8, i8, i8, i8, i8, %"class.blink::HeapVector.55" }
%"class.blink::CustomElementDescriptor" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HeapVector.534" = type { %"class.WTF::Vector.537" }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.42", [8 x i8] }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.36"*, i32, i32 }
%"class.WTF::HashSet.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::HeapHashMap.551"* }
%"class.blink::HeapHashMap.551" = type opaque
%"class.blink::HeapHashMap.552" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::CustomElementReactionStack"* }
%"class.blink::CustomElementReactionStack" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.457" = type { %"class.WTF::VectorBuffer.458" }
%"class.WTF::VectorBuffer.458" = type { %"class.WTF::VectorBufferBase.459" }
%"class.WTF::VectorBufferBase.459" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.567 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.569", i64, %"class.WTF::Vector.573", %"class.WTF::Vector.578", %"class.WTF::Vector.584", %"class.WTF::Vector.602", %class.scoped_refptr.358, %"class.WTF::HashMap.608", %"class.WTF::Vector.613", %"class.WTF::Vector.573", %"class.WTF::Vector.619", %"class.WTF::HashMap.624", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.568" }
%"class.base::RefCountedThreadSafe.568" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { i8* }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580", [8 x i8] }
%"class.WTF::VectorBufferBase.580" = type { %class.scoped_refptr.581*, i32, i32 }
%class.scoped_refptr.581 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.594" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.587 }
%class.scoped_refptr.587 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.602" = type { %"class.WTF::VectorBuffer.603" }
%"class.WTF::VectorBuffer.603" = type { %"class.WTF::VectorBufferBase.604" }
%"class.WTF::VectorBufferBase.604" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.605", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.605" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.608" = type { %"class.WTF::HashTable.609" }
%"class.WTF::HashTable.609" = type <{ %"struct.WTF::KeyValuePair.612"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.612" = type opaque
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"class.mojo::ScopedHandleBase.616"*, i32, i32 }
%"class.mojo::ScopedHandleBase.616" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.573" = type { %"class.WTF::VectorBuffer.574" }
%"class.WTF::VectorBuffer.574" = type { %"class.WTF::VectorBufferBase.575", [16 x i8] }
%"class.WTF::VectorBufferBase.575" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.619" = type { %"class.WTF::VectorBuffer.620" }
%"class.WTF::VectorBuffer.620" = type { %"class.WTF::VectorBufferBase.621" }
%"class.WTF::VectorBufferBase.621" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"struct.WTF::KeyValuePair.628"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.628" = type { i8**, %"class.std::__1::unique_ptr.2796" }
%"class.std::__1::unique_ptr.2796" = type { %"class.std::__1::__compressed_pair.2797" }
%"class.std::__1::__compressed_pair.2797" = type { %"struct.std::__1::__compressed_pair_elem.2798" }
%"struct.std::__1::__compressed_pair_elem.2798" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::WeakMember.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.635" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.643", %"class.blink::Member.643", %"class.blink::Member.645", %"class.blink::Member.647", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.638" }
%"class.absl::optional.638" = type { %"class.absl::optional_internal::optional_data.639" }
%"class.absl::optional_internal::optional_data.639" = type { %"class.absl::optional_internal::optional_data_base.640" }
%"class.absl::optional_internal::optional_data_base.640" = type { %"class.absl::optional_internal::optional_data_dtor_base.641" }
%"class.absl::optional_internal::optional_data_dtor_base.641" = type { i8, %union.anon.642 }
%union.anon.642 = type { i64 }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::Event"* }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.649" = type { %"class.WTF::HashMap.652" }
%"class.WTF::HashMap.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type opaque
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.674", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1459", %"class.blink::Member.1461", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.676", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1452", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1452" = type { %"class.WTF::HashMap.1455" }
%"class.WTF::HashMap.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"struct.WTF::KeyValuePair.1458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1458" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.126", %"class.blink::Member.1771", %"class.blink::Member.1773" }
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.126", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1767" }
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::HeapHashMap.1469"* }
%"class.blink::HeapHashMap.1469" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1479" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1482" }
%"class.WTF::VectorBuffer.1482" = type { %"class.WTF::VectorBufferBase.1483" }
%"class.WTF::VectorBufferBase.1483" = type { i64*, i32, i32 }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.335", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.406", i32, i8, [3 x i8], %"class.blink::HeapVector.408", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.427", %"class.blink::Member.486", %"class.blink::Member.488", i8, [7 x i8] }>
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1492" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::KURL"* }
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.79", %"class.WTF::Vector.79", %"class.blink::Member", %"class.blink::Member.84", %"class.blink::HeapHashSet", %"class.blink::Member.23", %"class.WTF::HashSet.92", %"class.WTF::TextPosition", %"class.blink::Member.96", %"class.blink::HeapVector.98", %"class.blink::Member.105" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.66", %"class.WTF::Vector.68" }
%"class.WTF::RefCounted.66" = type { %"class.base::RefCounted.67" }
%"class.base::RefCounted.67" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.71", %"class.WTF::String" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type opaque
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.86" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.65, %"class.blink::Member.61", %"class.blink::Member.84" }
%"class.blink::HeapVector.98" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1508 }
%class.scoped_refptr.1508 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1509" = type { %"class.WTF::VectorBuffer.1510" }
%"class.WTF::VectorBuffer.1510" = type { %"class.WTF::VectorBufferBase.1511" }
%"class.WTF::VectorBufferBase.1511" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1512 }
%class.scoped_refptr.1512 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.23", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1533" }
%"class.blink::HeapHashMap.1533" = type { %"class.WTF::HashMap.1536" }
%"class.WTF::HashMap.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"struct.WTF::KeyValuePair.1539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1539" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1542" = type { %"class.WTF::HashSet.1545" }
%"class.WTF::HashSet.1545" = type { %"class.WTF::HashTable.1546" }
%"class.WTF::HashTable.1546" = type <{ %"class.blink::WeakMember.1548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1548" = type opaque
%"class.blink::HeapHashSet.1549" = type { %"class.WTF::HashSet.1552" }
%"class.WTF::HashSet.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"class.blink::WeakMember.1555"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1555" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type { %"class.blink::NameClient", %"class.blink::HeapHashMap.1560", %"class.blink::HeapHashSet.1567" }
%"class.blink::HeapHashMap.1560" = type { %"class.WTF::HashMap.1563" }
%"class.WTF::HashMap.1563" = type { %"class.WTF::HashTable.1564" }
%"class.WTF::HashTable.1564" = type <{ %"struct.WTF::KeyValuePair.1566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1566" = type opaque
%"class.blink::HeapHashSet.1567" = type { %"class.WTF::HashSet.1570" }
%"class.WTF::HashSet.1570" = type { %"class.WTF::HashTable.1571" }
%"class.WTF::HashTable.1571" = type <{ %"class.blink::WeakMember.1573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1573" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1", %"class.blink::HeapVector.55" }
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1582" = type { %"class.WTF::HashMap.1585" }
%"class.WTF::HashMap.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ %"struct.WTF::KeyValuePair.1588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1588" = type opaque
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591" }
%"class.WTF::VectorBufferBase.1591" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1600" = type { %"class.WTF::Vector.1603" }
%"class.WTF::Vector.1603" = type { %"class.WTF::VectorBuffer.1604" }
%"class.WTF::VectorBuffer.1604" = type { %"class.WTF::VectorBufferBase.1605" }
%"class.WTF::VectorBufferBase.1605" = type { %"class.blink::Member.1606"*, i32, i32 }
%"class.blink::Member.1606" = type opaque
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::WeakMember.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1620" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1621", i32, [4 x i8] }>
%"class.WTF::Vector.1621" = type { %"class.WTF::VectorBuffer.1622" }
%"class.WTF::VectorBuffer.1622" = type { %"class.WTF::VectorBufferBase.1623" }
%"class.WTF::VectorBufferBase.1623" = type { %"struct.std::__1::pair.1624"*, i32, i32 }
%"struct.std::__1::pair.1624" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1629" = type { %"class.WTF::VectorBuffer.1630" }
%"class.WTF::VectorBuffer.1630" = type { %"class.WTF::VectorBufferBase.1631" }
%"class.WTF::VectorBufferBase.1631" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1634" = type { %"class.std::__1::__compressed_pair.1635" }
%"class.std::__1::__compressed_pair.1635" = type { %"struct.std::__1::__compressed_pair_elem.1636" }
%"struct.std::__1::__compressed_pair_elem.1636" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.blink::HeapVector.1640" = type { %"class.WTF::Vector.1643" }
%"class.WTF::Vector.1643" = type { %"class.WTF::VectorBuffer.1644" }
%"class.WTF::VectorBuffer.1644" = type { %"class.WTF::VectorBufferBase.1645" }
%"class.WTF::VectorBufferBase.1645" = type { %"class.blink::Member.1646"*, i32, i32 }
%"class.blink::Member.1646" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.23" }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1532", { i64, i64 } }
%"class.blink::WeakMember.1532" = type { %"class.blink::MemberBase.24" }
%"class.blink::HeapHashSet.1671" = type { %"class.WTF::HashSet.1674" }
%"class.WTF::HashSet.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ %"class.blink::Member.1677"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1677" = type opaque
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1682" = type { %"class.blink::MemberBase.1683" }
%"class.blink::MemberBase.1683" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", i32, [4 x i8], %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", %"class.WTF::HashMap.1697", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1697" = type { %"class.WTF::HashTable.1698" }
%"class.WTF::HashTable.1698" = type <{ %"struct.WTF::KeyValuePair.1701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1701" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1711" = type { %"class.blink::MemberBase.1712" }
%"class.blink::MemberBase.1712" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1470" = type { %"class.WTF::VectorBuffer.1471" }
%"class.WTF::VectorBuffer.1471" = type { %"class.WTF::VectorBufferBase.1472" }
%"class.WTF::VectorBufferBase.1472" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1713" = type { %"class.WTF::HashMap.1716" }
%"class.WTF::HashMap.1716" = type { %"class.WTF::HashTable.1717" }
%"class.WTF::HashTable.1717" = type <{ %"struct.WTF::KeyValuePair.1719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1719" = type opaque
%"class.blink::Member.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1722" = type { %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.1724" }
%"struct.std::__1::__compressed_pair_elem.1724" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1730" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1732" = type { %"class.WTF::HashMap.1735" }
%"class.WTF::HashMap.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"struct.WTF::KeyValuePair.1738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1738" = type opaque
%"class.blink::HeapObserverSet.1739" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1740" }
%"class.blink::HeapHashSet.1740" = type { %"class.WTF::HashSet.1743" }
%"class.WTF::HashSet.1743" = type { %"class.WTF::HashTable.1744" }
%"class.WTF::HashTable.1744" = type <{ %"class.blink::WeakMember.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1746" = type opaque
%"class.blink::Member.1747" = type { %"class.blink::MemberBase.1748" }
%"class.blink::MemberBase.1748" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.23", %"class.blink::HeapHashSet.1756", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1763", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1756" = type { %"class.WTF::HashSet.1759" }
%"class.WTF::HashSet.1759" = type { %"class.WTF::HashTable.1760" }
%"class.WTF::HashTable.1760" = type <{ %"class.blink::Member.1762"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1762" = type opaque
%"class.blink::HeapTaskRunnerTimer.1763" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1764", { i64, i64 } }
%"class.blink::WeakMember.1764" = type { %"class.blink::MemberBase.1750" }
%"class.blink::WeakMember.1751" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.36", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2473", %"class.blink::HeapVector.2478", i8, [7 x i8] }>
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2476" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2475" }
%"class.blink::WeakMember.2475" = type { %"class.blink::MemberBase.401" }
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.2478" = type { %"class.WTF::Vector.2481" }
%"class.WTF::Vector.2481" = type { %"class.WTF::VectorBuffer.2482" }
%"class.WTF::VectorBuffer.2482" = type { %"class.WTF::VectorBufferBase.2483", [96 x i8] }
%"class.WTF::VectorBufferBase.2483" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.2484" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2864" }
%"class.WTF::Vector.2864" = type { %"class.WTF::VectorBuffer.2865" }
%"class.WTF::VectorBuffer.2865" = type { %"class.WTF::VectorBufferBase.2866", [64 x i8] }
%"class.WTF::VectorBufferBase.2866" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.WTF::KeyValuePair.2496" = type <{ %"class.blink::QualifiedName", i32, [4 x i8] }>
%"class.WTF::HashTable.2493" = type <{ %"struct.WTF::KeyValuePair.2496"*, i32, i32, i32, [4 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.2522", %"class.blink::Member.2524", %"class.blink::Member.2524", i8, %"class.blink::Member.2526", %"class.blink::Member.36", %"class.blink::Member.2528", %"class.WTF::HashMap.2530", %"class.blink::HeapHashMap.2535" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2497", %"class.blink::Member.2499", %"class.blink::Member.2520", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.2501", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.2504", %"class.blink::HeapVector.2512", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::HeapHashMap.2503"* }
%"class.blink::HeapHashMap.2503" = type opaque
%"class.blink::HeapVector.2504" = type { %"class.WTF::Vector.2507" }
%"class.WTF::Vector.2507" = type { %"class.WTF::VectorBuffer.2508" }
%"class.WTF::VectorBuffer.2508" = type { %"class.WTF::VectorBufferBase.2509" }
%"class.WTF::VectorBufferBase.2509" = type { %"class.blink::Member.2510"*, i32, i32 }
%"class.blink::Member.2510" = type opaque
%"class.blink::HeapVector.2512" = type { %"class.WTF::Vector.2515" }
%"class.WTF::Vector.2515" = type { %"class.WTF::VectorBuffer.2516" }
%"class.WTF::VectorBuffer.2516" = type { %"class.WTF::VectorBufferBase.2517" }
%"class.WTF::VectorBufferBase.2517" = type { %"class.blink::Member.2518"*, i32, i32 }
%"class.blink::Member.2518" = type opaque
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.2524" = type { %"class.blink::MemberBase.2525" }
%"class.blink::MemberBase.2525" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.2526" = type { %"class.blink::MemberBase.2527" }
%"class.blink::MemberBase.2527" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.2528" = type { %"class.blink::MemberBase.2529" }
%"class.blink::MemberBase.2529" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.2530" = type { %"class.WTF::HashTable.2531" }
%"class.WTF::HashTable.2531" = type <{ %"struct.WTF::KeyValuePair.2534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2534" = type opaque
%"class.blink::HeapHashMap.2535" = type { %"class.WTF::HashMap.2538" }
%"class.WTF::HashMap.2538" = type { %"class.WTF::HashTable.2539" }
%"class.WTF::HashTable.2539" = type <{ %"struct.WTF::KeyValuePair.2541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2541" = type opaque
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2497", %"class.blink::Member.2499", %"class.blink::Member.2520", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.148", %"class.blink::Member.2700", %"struct.blink::FramePolicy", %"class.blink::Member.2716", i8, i8, [6 x i8] }>
%"class.blink::Member.2700" = type { %"class.blink::MemberBase.2701" }
%"class.blink::MemberBase.2701" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2702", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2702" = type { %"class.std::__1::__vector_base.2703" }
%"class.std::__1::__vector_base.2703" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2711" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2704", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2704" = type { %"class.std::__1::__vector_base.2705" }
%"class.std::__1::__vector_base.2705" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2706" }
%"class.std::__1::__compressed_pair.2706" = type { %"struct.std::__1::__compressed_pair_elem.2707" }
%"struct.std::__1::__compressed_pair_elem.2707" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2711" = type { %"struct.std::__1::__compressed_pair_elem.2712" }
%"struct.std::__1::__compressed_pair_elem.2712" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2716" = type { %"class.blink::MemberBase.2717" }
%"class.blink::MemberBase.2717" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.2544", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.2544" = type { %"class.blink::MemberBase.2545" }
%"class.blink::MemberBase.2545" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.2548", %"class.blink::Member.2548" }
%"class.blink::Member.2548" = type { %"class.blink::MemberBase.2549" }
%"class.blink::MemberBase.2549" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2552, %"class.blink::Member.2553", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2557" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2552 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2555" }
%"class.blink::Persistent.2555" = type { %"class.blink::PersistentBase.2556" }
%"class.blink::PersistentBase.2556" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.953" }
%"class.util::TokenType.2557" = type { %"class.base::StrongAlias.2558" }
%"class.base::StrongAlias.2558" = type { %"class.base::UnguessableToken" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1576", %"class.blink::Member.2657", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2657" = type { %"class.blink::MemberBase.2658" }
%"class.blink::MemberBase.2658" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type { %"class.blink::HeapVector.2661", %"class.blink::Member.25", %"class.blink::WeakMember.2669", i32, [4 x i8], %"class.blink::HeapHashSet.2671" }
%"class.blink::HeapVector.2661" = type { %"class.WTF::Vector.2664" }
%"class.WTF::Vector.2664" = type { %"class.WTF::VectorBuffer.2665" }
%"class.WTF::VectorBuffer.2665" = type { %"class.WTF::VectorBufferBase.2666" }
%"class.WTF::VectorBufferBase.2666" = type { %"class.blink::Member.2667"*, i32, i32 }
%"class.blink::Member.2667" = type opaque
%"class.blink::WeakMember.2669" = type { %"class.blink::MemberBase.2670" }
%"class.blink::MemberBase.2670" = type { %"class.blink::ShadowRoot"* }
%"class.blink::HeapHashSet.2671" = type { %"class.WTF::HashSet.2674" }
%"class.WTF::HashSet.2674" = type { %"class.WTF::HashTable.2675" }
%"class.WTF::HashTable.2675" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2559" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2559" = type { %"class.v8::TracedReference.2560" }
%"class.v8::TracedReference.2560" = type { %"class.v8::BasicTracedReference.2561" }
%"class.v8::BasicTracedReference.2561" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2562 }
%class.scoped_refptr.2562 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2563", %"class.WTF::String", %"class.std::__1::unique_ptr.2565" }
%"class.WTF::RefCounted.2563" = type { %"class.base::RefCounted.2564" }
%"class.base::RefCounted.2564" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2565" = type { %"class.std::__1::__compressed_pair.2566" }
%"class.std::__1::__compressed_pair.2566" = type { %"struct.std::__1::__compressed_pair_elem.2567" }
%"struct.std::__1::__compressed_pair_elem.2567" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2568", %"class.std::__1::unique_ptr.2579", %"class.WTF::Vector.2585", i8, i32 }
%"class.std::__1::unique_ptr.2568" = type { %"class.std::__1::__compressed_pair.2569" }
%"class.std::__1::__compressed_pair.2569" = type { %"struct.std::__1::__compressed_pair_elem.2570" }
%"struct.std::__1::__compressed_pair_elem.2570" = type { %"class.WTF::Vector.2571"* }
%"class.WTF::Vector.2571" = type { %"class.WTF::VectorBuffer.2572" }
%"class.WTF::VectorBuffer.2572" = type { %"class.WTF::VectorBufferBase.2573" }
%"class.WTF::VectorBufferBase.2573" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2579" = type { %"class.std::__1::__compressed_pair.2580" }
%"class.std::__1::__compressed_pair.2580" = type { %"struct.std::__1::__compressed_pair_elem.2581" }
%"struct.std::__1::__compressed_pair_elem.2581" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2585" = type { %"class.WTF::VectorBuffer.2586" }
%"class.WTF::VectorBuffer.2586" = type { %"class.WTF::VectorBufferBase.2573", [32 x i8] }
%"class.blink::HTMLBRElement" = type { %"class.blink::HTMLElement" }
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.blink::Member.2594" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.2594" = type { %"class.blink::MemberBase.2595" }
%"class.blink::MemberBase.2595" = type { %"class.blink::TrustedScript"* }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::HTMLDimension" = type { i32, double }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.2596" }
%"class.blink::HeapVector.2596" = type { %"class.WTF::Vector.2599" }
%"class.WTF::Vector.2599" = type { %"class.WTF::VectorBuffer.2600" }
%"class.WTF::VectorBuffer.2600" = type { %"class.WTF::VectorBufferBase.2601", [32 x i8] }
%"class.WTF::VectorBufferBase.2601" = type { %"class.blink::Member.2484"*, i32, i32 }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2604", i8* }
%"class.WTF::StringAppend.2604" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.3011" = type <{ i8*, i32, [4 x i8] }>
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2626", %"class.WTF::String"* }
%"class.blink::HeapVector.2626" = type { %"class.WTF::Vector.2629" }
%"class.WTF::Vector.2629" = type { %"class.WTF::VectorBuffer.2630" }
%"class.WTF::VectorBuffer.2630" = type { %"class.WTF::VectorBufferBase.2631" }
%"class.WTF::VectorBufferBase.2631" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.2635", %"class.blink::Member.2637", %"class.blink::Member.2639", %"class.blink::Member.2641", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.2633", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2926", %"class.blink::Member.2928", %"class.blink::Member.2968", %"class.blink::Member.2987", %"class.blink::Member.2989" }
%"class.blink::Member.2926" = type { %"class.blink::MemberBase.2927" }
%"class.blink::MemberBase.2927" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.678 }
%"class.blink::Member.2928" = type { %"class.blink::MemberBase.2929" }
%"class.blink::MemberBase.2929" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type { %"class.blink::Member.2932", %"class.blink::HeapHashMap.2934", %"class.blink::HeapHashMap.2944" }
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::NodeList"* }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2934" = type { %"class.WTF::HashMap.2937" }
%"class.WTF::HashMap.2937" = type { %"class.WTF::HashTable.2938" }
%"class.WTF::HashTable.2938" = type <{ %"struct.WTF::KeyValuePair.2940"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2940" = type { %"struct.std::__1::pair.2941", %"class.blink::Member.2942" }
%"struct.std::__1::pair.2941" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::Member.2942" = type { %"class.blink::MemberBase.2943" }
%"class.blink::MemberBase.2943" = type { %"class.blink::LiveNodeListBase"* }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", i16, [6 x i8] }>
%"class.blink::HeapHashMap.2944" = type { %"class.WTF::HashMap.2947" }
%"class.WTF::HashMap.2947" = type { %"class.WTF::HashTable.2948" }
%"class.WTF::HashTable.2948" = type <{ %"struct.WTF::KeyValuePair.2950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2950" = type { %"class.blink::QualifiedName", %"class.blink::Member.2951" }
%"class.blink::Member.2951" = type { %"class.blink::MemberBase.2952" }
%"class.blink::MemberBase.2952" = type { %"class.blink::TagCollectionNS"* }
%"class.blink::TagCollectionNS" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.2953", %"class.blink::CollectionItemsCache.2966" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", i16 }>
%"class.blink::Member.2953" = type { %"class.blink::MemberBase.2954" }
%"class.blink::MemberBase.2954" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.2957", %"class.blink::HeapHashMap.2957" }
%"class.blink::HeapHashMap.2957" = type { %"class.WTF::HashMap.2960" }
%"class.WTF::HashMap.2960" = type { %"class.WTF::HashTable.2961" }
%"class.WTF::HashTable.2961" = type <{ %"struct.WTF::KeyValuePair.2963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2963" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.2964" }
%"class.blink::Member.2964" = type { %"class.blink::MemberBase.2965" }
%"class.blink::MemberBase.2965" = type { %"class.blink::HeapVector"* }
%"class.blink::CollectionItemsCache.2966" = type { %"class.blink::CollectionIndexCache.2967", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache.2967" = type { i32 (...)**, %"class.blink::Member.36", i32, i32 }
%"class.blink::Member.2968" = type { %"class.blink::MemberBase.2969" }
%"class.blink::MemberBase.2969" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2972", %"class.blink::HeapHashSet.2981" }
%"class.blink::HeapVector.2972" = type { %"class.WTF::Vector.2975" }
%"class.WTF::Vector.2975" = type { %"class.WTF::VectorBuffer.2976" }
%"class.WTF::VectorBuffer.2976" = type { %"class.WTF::VectorBufferBase.2977" }
%"class.WTF::VectorBufferBase.2977" = type { %"class.blink::Member.2978"*, i32, i32 }
%"class.blink::Member.2978" = type { %"class.blink::MemberBase.2979" }
%"class.blink::MemberBase.2979" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2981" = type { %"class.WTF::HashSet.2984" }
%"class.WTF::HashSet.2984" = type { %"class.WTF::HashTable.2985" }
%"class.WTF::HashTable.2985" = type <{ %"class.blink::Member.2978"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2987" = type { %"class.blink::MemberBase.2988" }
%"class.blink::MemberBase.2988" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2989" = type { %"class.blink::MemberBase.2990" }
%"class.blink::MemberBase.2990" = type { %"class.blink::HeapHashSet.2991"* }
%"class.blink::HeapHashSet.2991" = type opaque
%"class.blink::HeapHashSet.2677" = type { %"class.WTF::HashSet.2680" }
%"class.WTF::HashSet.2680" = type { %"class.WTF::HashTable.2681" }
%"class.WTF::HashTable.2681" = type <{ %"class.blink::Member.2522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.2626", %"class.blink::HeapVector.2626", i8, %"class.blink::HeapLinkedHashSet.2643" }
%"class.blink::HeapLinkedHashSet.2643" = type { %"class.WTF::LinkedHashSet.2646" }
%"class.WTF::LinkedHashSet.2646" = type { %"class.WTF::HashMap.2647", %"class.WTF::VectorBackedLinkedList.2651" }
%"class.WTF::HashMap.2647" = type { %"class.WTF::HashTable.2648" }
%"class.WTF::HashTable.2648" = type <{ %"struct.WTF::KeyValuePair.2650"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2650" = type opaque
%"class.WTF::VectorBackedLinkedList.2651" = type { %"class.WTF::Vector.2652", i32, i32 }
%"class.WTF::Vector.2652" = type { %"class.WTF::VectorBuffer.2653" }
%"class.WTF::VectorBuffer.2653" = type { %"class.WTF::VectorBufferBase.2654" }
%"class.WTF::VectorBufferBase.2654" = type { %"class.WTF::VectorBackedLinkedListNode.2655"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2655" = type opaque
%"class.WTF::Vector.2992" = type { %"class.WTF::VectorBuffer.base.2995", [6 x i8] }
%"class.WTF::VectorBuffer.base.2995" = type <{ %"class.WTF::VectorBufferBase.2994", [130 x i8] }>
%"class.WTF::VectorBufferBase.2994" = type { i8*, i32, i32 }
%"class.WTF::VectorBuffer.2993" = type <{ %"class.WTF::VectorBufferBase.2994", [130 x i8], [6 x i8] }>
%"class.blink::cssvalue::CSSColor" = type { %"class.blink::CSSValue", %"class.blink::Color" }
%"class.blink::LabelsNodeList" = type { %"class.blink::LiveNodeList" }
%"class.blink::LiveNodeList" = type { %"class.blink::NodeList", %"class.blink::LiveNodeListBase.base", %"class.blink::CollectionItemsCache" }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.36", i32, i32 }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.2689", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.1792", i32, %"class.blink::Member.2687" }
%"class.blink::Member.2687" = type { %"class.blink::MemberBase.2688" }
%"class.blink::MemberBase.2688" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.2689" = type { %"class.std::__1::__compressed_pair.2690" }
%"class.std::__1::__compressed_pair.2690" = type { %"struct.std::__1::__compressed_pair_elem.2691" }
%"struct.std::__1::__compressed_pair_elem.2691" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2720", i8, [7 x i8] }>
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2722, %"class.WTF::Vector.2723", %"class.std::__1::unique_ptr.2728", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2749, %"class.blink::Persistent.2750" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2722 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2723" = type { %"class.WTF::VectorBuffer.2724" }
%"class.WTF::VectorBuffer.2724" = type { %"class.WTF::VectorBufferBase.2725", [8 x i8] }
%"class.WTF::VectorBufferBase.2725" = type { %class.scoped_refptr.2722*, i32, i32 }
%"class.std::__1::unique_ptr.2728" = type { %"class.std::__1::__compressed_pair.2729" }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2731", %"class.absl::optional.2736", %"class.absl::optional.2741" }
%"class.absl::optional.2731" = type { %"class.absl::optional_internal::optional_data.2732" }
%"class.absl::optional_internal::optional_data.2732" = type { %"class.absl::optional_internal::optional_data_base.2733" }
%"class.absl::optional_internal::optional_data_base.2733" = type { %"class.absl::optional_internal::optional_data_dtor_base.2734" }
%"class.absl::optional_internal::optional_data_dtor_base.2734" = type { i8, %union.anon.2735 }
%union.anon.2735 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2736" = type { %"class.absl::optional_internal::optional_data.2737" }
%"class.absl::optional_internal::optional_data.2737" = type { %"class.absl::optional_internal::optional_data_base.2738" }
%"class.absl::optional_internal::optional_data_base.2738" = type { %"class.absl::optional_internal::optional_data_dtor_base.2739" }
%"class.absl::optional_internal::optional_data_dtor_base.2739" = type { i8, [3 x i8], %union.anon.2740 }
%union.anon.2740 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2741" = type { %"class.absl::optional_internal::optional_data.2742" }
%"class.absl::optional_internal::optional_data.2742" = type { %"class.absl::optional_internal::optional_data_base.2743" }
%"class.absl::optional_internal::optional_data_base.2743" = type { %"class.absl::optional_internal::optional_data_dtor_base.2744" }
%"class.absl::optional_internal::optional_data_dtor_base.2744" = type { i8, %union.anon.2745 }
%union.anon.2745 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2749 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.2750" = type { %"class.blink::PersistentBase.2751" }
%"class.blink::PersistentBase.2751" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.953" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2754", %"struct.blink::PhysicalRect", %"class.blink::Member.2764" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.2754" = type { %"class.std::__1::__compressed_pair.2755" }
%"class.std::__1::__compressed_pair.2755" = type { %"struct.std::__1::__compressed_pair_elem.2756" }
%"struct.std::__1::__compressed_pair_elem.2756" = type { %"class.WTF::HashSet.2757"* }
%"class.WTF::HashSet.2757" = type { %"class.WTF::HashTable.2758" }
%"class.WTF::HashTable.2758" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2764" = type { %"class.blink::MemberBase.2765" }
%"class.blink::MemberBase.2765" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.WTF::HashMap.2766" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.3012" = type { %"class.WTF::StringTypeAdapter.3013" }
%"class.WTF::StringTypeAdapter.3013" = type { %"class.WTF::StringView" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.3028" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2870", %"class.blink::FreeList", %"class.WTF::Vector.2875" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.2870" = type { %"class.WTF::VectorBuffer.2871" }
%"class.WTF::VectorBuffer.2871" = type { %"class.WTF::VectorBufferBase.2872" }
%"class.WTF::VectorBufferBase.2872" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2875" = type { %"class.WTF::VectorBuffer.2876" }
%"class.WTF::VectorBuffer.2876" = type { %"class.WTF::VectorBufferBase.2877" }
%"class.WTF::VectorBufferBase.2877" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm15EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm12EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink7ElementD2Ev = comdat any

$_ZN5blink11HTMLElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_ = comdat any

$_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF12VectorBufferIcLj130ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc = comdat any

$_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_ = comdat any

$_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERKS2_RjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE13AllocateTableEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE4findERKS2_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17NodeListsNodeData8AddCacheINS_14LabelsNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kBasefontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kBgsoundTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kColTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kKeygenTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kParamTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSourceTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTrackTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kWbrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kContenteditableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kLangAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9xml_names9kLangAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kDraggableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kDirAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [7 x i8] c"middle\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"plaintext-only\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"ltr\00", align 1
@_ZN5blink10html_names7kBdiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kBdoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOutputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers = internal global [157 x %"struct.blink::AttributeTriggers"] zeroinitializer, align 16
@_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers = internal global i64 0, align 8
@_ZN5blink10html_names9kFormAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kInertAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kNonceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kTabindexAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kOnabortAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kAbortE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names19kOnanimationendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names13kAnimationendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names25kOnanimationiterationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names19kAnimationiterationE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names21kOnanimationstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names15kAnimationstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnauxclickAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kAuxclickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnbeforecopyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kBeforecopyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnbeforecutAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kBeforecutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOnbeforepasteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kBeforepasteE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOnblurAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kBlurE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOncancelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kCancelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOncanplayAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kCanplayE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names21kOncanplaythroughAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names15kCanplaythroughE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnchangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnclickAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOncloseAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kCloseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOncontextmenuAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kContextmenuE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOncopyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kCopyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOncuechangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kCuechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kOncutAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names4kCutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOndblclickAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kDblclickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOndragAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kDragE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOndragendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kDragendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOndragenterAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kDragenterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOndragleaveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kDragleaveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOndragoverAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kDragoverE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOndragstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kDragstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOndropAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kDropE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names21kOndurationchangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names15kDurationchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnemptiedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kEmptiedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnendedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kEndedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnerrorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnfocusAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kFocusE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnfocusinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kFocusinE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnfocusoutAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kFocusoutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnformdataAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kFormdataE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names24kOngotpointercaptureAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names18kGotpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOninputAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kInputE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOninvalidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kInvalidE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnkeydownAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kKeydownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnkeypressAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kKeypressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnkeyupAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kKeyupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOnloadAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnloadeddataAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kLoadeddataE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names21kOnloadedmetadataAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names15kLoadedmetadataE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnloadstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kLoadstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names25kOnlostpointercaptureAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names19kLostpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnmousedownAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kMousedownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnmouseenterAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kMouseenterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnmouseleaveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kMouseleaveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnmousemoveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kMousemoveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnmouseoutAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kMouseoutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnmouseoverAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kMouseoverE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnmouseupAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kMouseupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnmousewheelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kMousewheelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnoverscrollAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kOverscrollE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnpasteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kPasteE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnpauseAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kPauseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kOnplayAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names5kPlayE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnplayingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kPlayingE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names20kOnpointercancelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names14kPointercancelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOnpointerdownAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kPointerdownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names19kOnpointerenterAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names13kPointerenterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names19kOnpointerleaveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names13kPointerleaveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOnpointermoveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kPointermoveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnpointeroutAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kPointeroutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOnpointeroverAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kPointeroverE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names23kOnpointerrawupdateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names17kPointerrawupdateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnpointerupAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kPointerupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOnprogressAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kProgressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOnratechangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kRatechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnresetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kResetE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnresizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kResizeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnscrollAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kScrollE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOnscrollendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kScrollendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnseekedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kSeekedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnseekingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kSeekingE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnselectAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kSelectE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOnselectstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kSelectstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnstalledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kStalledE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnsubmitAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kSubmitE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnsuspendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kSuspendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOntimeupdateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kTimeupdateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOntoggleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kToggleE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names18kOntouchcancelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kTouchcancelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names15kOntouchendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kTouchendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kOntouchmoveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names10kTouchmoveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names17kOntouchstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kTouchstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names20kOntransitionendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names20kWebkitTransitionEndE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names19kOnvolumechangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names13kVolumechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kOnwaitingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kWaitingE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names25kOnwebkitanimationendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names19kWebkitAnimationEndE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names31kOnwebkitanimationiterationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names25kWebkitAnimationIterationE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names27kOnwebkitanimationstartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names21kWebkitAnimationStartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names29kOnwebkitfullscreenchangeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names23kWebkitfullscreenchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names28kOnwebkitfullscreenerrorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names22kWebkitfullscreenerrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names26kOnwebkittransitionendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kOnwheelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kWheelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names25kAriaActivedescendantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaAtomicAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaAutocompleteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaBusyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaColcountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaColindexAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaColspanAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaControlsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaCurrentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescribedbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescriptionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaDetailsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kAriaDropeffectAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaErrormessageAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaExpandedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaFlowtoAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaGrabbedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaHaspopupAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaInvalidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaKeyshortcutsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaLabeledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kAriaLabelledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLevelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaLiveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaModalAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaMultilineAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAriaMultiselectableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaOrientationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaOwnsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaPosinsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaPressedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRelevantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRequiredAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAriaRoledescriptionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRowcountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRowindexAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaRowspanAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaSelectedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaSetsizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaSortAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names25kAriaTouchpassthroughAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValuemaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValueminAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValuenowAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaValuetextAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names23kAriaVirtualcontentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kAutocapitalizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map = internal global i64 0, align 8
@_ZN5blink10html_names13kDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kSpellcheckAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [27 x i8] c"The element has no parent.\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"absmiddle\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"absbottom\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"bottom\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"texttop\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"inherit\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"The value provided ('\00", align 1
@.str.17 = private unnamed_addr constant [66 x i8] c"') is not one of 'true', 'false', 'plaintext-only', or 'inherit'.\00", align 1
@_ZZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff = internal global i64 0, align 8
@_ZZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone = internal global i64 0, align 8
@_ZZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters = internal global i64 0, align 8
@_ZZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords = internal global i64 0, align 8
@_ZZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences = internal global i64 0, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kTranslateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.18 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink19style_change_reason18kWritingModeChangeE = external constant [0 x i8], align 1
@_ZN5blink19style_change_reason12kPseudoClassE = external constant [0 x i8], align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"transparent\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@.str.25 = private unnamed_addr constant [68 x i8] c"Unable to attach ElementInternals to a customized built-in element.\00", align 1
@.str.26 = private unnamed_addr constant [58 x i8] c"Unable to attach ElementInternals to non-custom elements.\00", align 1
@.str.27 = private unnamed_addr constant [62 x i8] c"ElementInternals is disabled by disabledFeature static field.\00", align 1
@.str.28 = private unnamed_addr constant [65 x i8] c"ElementInternals for the specified element was already attached.\00", align 1
@.str.29 = private unnamed_addr constant [106 x i8] c"The attachInternals() function cannot be called prior to the execution of the custom element constructor.\00", align 1
@_ZTVN5blink11HTMLElementE = hidden unnamed_addr constant { [172 x i8*], [3 x i8*] } { [172 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7ElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Visitor"*)* @_ZNK5blink7Element5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2766"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.30 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.33 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.34 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.37 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.38 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.40 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::CSSValue>, WTF::VectorTraits<blink::Member<const blink::CSSValue> > >]\00", align 1
@_ZN5blink12mathml_names8kMathTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink9svg_names7kSVGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value = internal global i64 0, align 8
@_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value = internal global i64 0, align 8
@_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value = internal global %"class.WTF::StaticSingleton.2605" zeroinitializer, align 8
@_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value = internal global i64 0, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase26is_css_pseudo_dir_enabled_E = external local_unnamed_addr global i8, align 1
@.str.41 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_focusless_spatial_navigation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN5blink11HTMLElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.43 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.44 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameEjEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::QualifiedName, unsigned int>]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.46 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.47 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"characters\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"words\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"sentences\00", align 1
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.54 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_11HTMLElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [351 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::HTMLElement>, blink::Member<blink::HTMLElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::HTMLElement>, WTF::HashTraits<blink::Member<blink::HTMLElement> >, WTF::HashTraits<blink::Member<blink::HTMLElement> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [616 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<std::__1::pair<blink::CollectionType, WTF::AtomicString>, WTF::KeyValuePair<std::__1::pair<blink::CollectionType, WTF::AtomicString>, blink::Member<blink::LiveNodeListBase> >, WTF::KeyValuePairKeyExtractor, blink::NodeListsNodeData::NodeListAtomicCacheMapEntryHash, WTF::HashMapValueTraits<WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, WTF::HashTraits<blink::Member<blink::LiveNodeListBase> > >, WTF::HashTraits<std::__1::pair<blink::CollectionType, WTF::AtomicString> >, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 107
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br i1 %10, label %75, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %54

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3
  %23 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10UpperASCIIEv(%"class.WTF::AtomicString"* %22) #12
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %77, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %42

32:                                               ; preds = %25
  %33 = zext i32 %31 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #12
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  tail call void @llvm.trap() #12
  unreachable

40:                                               ; preds = %32
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %30, align 4
  br label %42

42:                                               ; preds = %25, %40
  %43 = phi i32 [ %41, %40 ], [ %31, %25 ]
  %44 = load atomic i32, i32* %26 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %49 = add i32 %43, -1
  store i32 %49, i32* %48, align 4
  br label %50

50:                                               ; preds = %47, %42
  %51 = phi i32 [ %49, %47 ], [ %43, %42 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %77

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #12
  br label %77

54:                                               ; preds = %12
  %55 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"* %11) #12
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"* nonnull %2) #12
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %54, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %77

75:                                               ; preds = %1
  %76 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"* %11) #12
  br label %77

77:                                               ; preds = %53, %50, %21, %74, %75
  %78 = phi %"class.WTF::StringImpl"* [ %58, %74 ], [ %76, %75 ], [ null, %21 ], [ %23, %50 ], [ %23, %53 ]
  ret %"class.WTF::StringImpl"* %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10UpperASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 107
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br i1 %10, label %70, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %49

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %13) #12
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %72, label %31

31:                                               ; preds = %22, %26
  %32 = phi %"class.WTF::StringImpl"* [ %29, %26 ], [ %24, %22 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %72

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %72

49:                                               ; preds = %12
  %50 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  %51 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"* %11) #12
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  %53 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"* nonnull %2) #12
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %49, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  br label %72

70:                                               ; preds = %1
  %71 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"* %11) #12
  br label %72

72:                                               ; preds = %47, %31, %26, %70, %69
  %73 = phi %"class.WTF::StringImpl"* [ %53, %69 ], [ %71, %70 ], [ null, %26 ], [ %32, %31 ], [ %32, %47 ]
  ret %"class.WTF::StringImpl"* %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement21ShouldSerializeEndTagEv(%"class.blink::HTMLElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %131, label %12

12:                                               ; preds = %1
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %8, %17
  br i1 %18, label %131, label %19

19:                                               ; preds = %12
  %20 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kBasefontTagE, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %8, %24
  br i1 %25, label %131, label %26

26:                                               ; preds = %19
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kBgsoundTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %8, %31
  br i1 %32, label %131, label %33

33:                                               ; preds = %26
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %8, %38
  br i1 %39, label %131, label %40

40:                                               ; preds = %33
  %41 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %8, %45
  br i1 %46, label %131, label %47

47:                                               ; preds = %40
  %48 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %8, %52
  br i1 %53, label %131, label %54

54:                                               ; preds = %47
  %55 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %8, %59
  br i1 %60, label %131, label %61

61:                                               ; preds = %54
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %8, %66
  br i1 %67, label %131, label %68

68:                                               ; preds = %61
  %69 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %70 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %8, %73
  br i1 %74, label %131, label %75

75:                                               ; preds = %68
  %76 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %77 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %8, %80
  br i1 %81, label %131, label %82

82:                                               ; preds = %75
  %83 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kKeygenTagE, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %8, %87
  br i1 %88, label %131, label %89

89:                                               ; preds = %82
  %90 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %8, %94
  br i1 %95, label %131, label %96

96:                                               ; preds = %89
  %97 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %8, %101
  br i1 %102, label %131, label %103

103:                                              ; preds = %96
  %104 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kParamTagE, align 8
  %105 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %106, i64 0, i32 3, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %8, %108
  br i1 %109, label %131, label %110

110:                                              ; preds = %103
  %111 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE, align 8
  %112 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %8, %115
  br i1 %116, label %131, label %117

117:                                              ; preds = %110
  %118 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTrackTagE, align 8
  %119 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %8, %122
  br i1 %123, label %131, label %124

124:                                              ; preds = %117
  %125 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kWbrTagE, align 8
  %126 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp ne %"class.WTF::StringImpl"* %8, %129
  ret i1 %130

131:                                              ; preds = %1, %12, %19, %26, %33, %40, %47, %54, %61, %68, %75, %82, %89, %96, %103, %110, %117
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11HTMLElement25ParseBorderWidthAttributeERKN3WTF12AtomicStringE(%"class.blink::HTMLElement"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %14 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %13, i32* nonnull dereferenceable(4) %3) #12
  br i1 %14, label %31, label %15

15:                                               ; preds = %12
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %17

17:                                               ; preds = %15, %2, %8
  %18 = phi %"class.WTF::StringImpl"* [ %16, %15 ], [ null, %2 ], [ %6, %8 ]
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp ne %"class.WTF::StringImpl"* %25, %27
  %29 = icmp eq %"class.WTF::StringImpl"* %18, null
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %17, %12
  %32 = load i32, i32* %3, align 4
  br label %33

33:                                               ; preds = %17, %31
  %34 = phi i32 [ %32, %31 ], [ 1, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  ret i32 %34
}

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #12
  store i32 0, i32* %4, align 4
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %16 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %15, i32* nonnull dereferenceable(4) %4) #12
  br i1 %16, label %33, label %17

17:                                               ; preds = %14
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  br label %19

19:                                               ; preds = %17, %10, %3
  %20 = phi %"class.WTF::StringImpl"* [ %18, %17 ], [ null, %3 ], [ %8, %10 ]
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp ne %"class.WTF::StringImpl"* %27, %29
  %31 = icmp eq %"class.WTF::StringImpl"* %20, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %36

33:                                               ; preds = %19, %14
  %34 = load i32, i32* %4, align 4
  %35 = uitofp i32 %34 to double
  br label %36

36:                                               ; preds = %19, %33
  %37 = phi double [ %35, %33 ], [ 1.000000e+00, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"* %5, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 471, double %37, i32 5) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %5, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 469, i32 11) #12
  ret void
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, double, i32) local_unnamed_addr #2

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement28MapLanguageAttributeToLocaleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br label %411

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br i1 %17, label %411, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink15SerializeStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %21) #12
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %18, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 23, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %19, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %40 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 2
  %46 = bitcast %"class.blink::UseCounter"* %45 to void (%"class.blink::UseCounter"*, i32)***
  %47 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %47, i64 3
  %49 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %48, align 8
  call void %49(%"class.blink::UseCounter"* %45, i32 587) #12
  %50 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %50, label %98, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 48
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %98

56:                                               ; preds = %51
  %57 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 2
  %61 = bitcast %"class.blink::Member"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %68, label %77

68:                                               ; preds = %56
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %71, i64 0, i32 2
  %73 = bitcast %"class.blink::UseCounter"* %72 to void (%"class.blink::UseCounter"*, i32)***
  %74 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %74, i64 3
  %76 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %75, align 8
  call void %76(%"class.blink::UseCounter"* %72, i32 588) #12
  br label %98

77:                                               ; preds = %56
  %78 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 2
  %82 = bitcast %"class.blink::Member"* %81 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %85, %87
  br i1 %88, label %89, label %98

89:                                               ; preds = %77
  %90 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %91 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %90, i64 0, i32 2, i32 0, i32 0
  %92 = load %"class.blink::Document"*, %"class.blink::Document"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %92, i64 0, i32 2
  %94 = bitcast %"class.blink::UseCounter"* %93 to void (%"class.blink::UseCounter"*, i32)***
  %95 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %95, i64 3
  %97 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %96, align 8
  call void %97(%"class.blink::UseCounter"* %93, i32 589) #12
  br label %98

98:                                               ; preds = %51, %39, %77, %89, %68
  %99 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %179, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #12
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %108
  call void @llvm.trap() #12
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %179, label %122

122:                                              ; preds = %103, %118
  %123 = phi %"class.WTF::StringImpl"* [ %120, %118 ], [ %101, %103 ]
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1
  br i1 %127, label %141, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %179, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::StringImpl"* %128 to i8*
  %135 = zext i32 %131 to i64
  %136 = call i8* @memchr(i8* %134, i32 45, i64 %135) #13
  %137 = icmp eq i8* %136, null
  %138 = ptrtoint i8* %136 to i64
  %139 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  %140 = sub i64 %138, %139
  br i1 %137, label %179, label %156

141:                                              ; preds = %122
  %142 = bitcast %"class.WTF::StringImpl"* %128 to i16*
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %179, label %146

146:                                              ; preds = %141
  %147 = zext i32 %144 to i64
  br label %148

148:                                              ; preds = %146, %153
  %149 = phi i64 [ %154, %153 ], [ 0, %146 ]
  %150 = getelementptr inbounds i16, i16* %142, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = icmp eq i16 %151, 45
  br i1 %152, label %156, label %153

153:                                              ; preds = %148
  %154 = add nuw nsw i64 %149, 1
  %155 = icmp eq i64 %154, %147
  br i1 %155, label %179, label %148

156:                                              ; preds = %148, %133
  %157 = phi i64 [ %140, %133 ], [ %149, %148 ]
  %158 = trunc i64 %157 to i32
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %179, label %160

160:                                              ; preds = %156
  %161 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 0, i32 %158) #12
  %162 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %163 = bitcast %"class.WTF::String"* %5 to i64*
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %162, i64* %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #12
  br label %179

179:                                              ; preds = %153, %141, %129, %133, %98, %118, %160, %175, %178, %156
  %180 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #12
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %181, align 8
  %182 = call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #12
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %272, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %201

191:                                              ; preds = %184
  %192 = zext i32 %190 to i33
  %193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #12
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !2

198:                                              ; preds = %191
  call void @llvm.trap() #12
  unreachable

199:                                              ; preds = %191
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %189, align 4
  br label %201

201:                                              ; preds = %184, %199
  %202 = phi i32 [ %200, %199 ], [ %190, %184 ]
  %203 = load atomic i32, i32* %185 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %208 = add i32 %202, -1
  store i32 %208, i32* %207, align 4
  br label %209

209:                                              ; preds = %206, %201
  %210 = phi i32 [ %208, %206 ], [ %202, %201 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #12
  br label %213

213:                                              ; preds = %209, %212
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %272, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 1
  br i1 %220, label %234, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %272, label %226

226:                                              ; preds = %222
  %227 = bitcast %"class.WTF::StringImpl"* %221 to i8*
  %228 = zext i32 %224 to i64
  %229 = call i8* @memchr(i8* %227, i32 45, i64 %228) #13
  %230 = icmp eq i8* %229, null
  %231 = ptrtoint i8* %229 to i64
  %232 = ptrtoint %"class.WTF::StringImpl"* %221 to i64
  %233 = sub i64 %231, %232
  br i1 %230, label %272, label %249

234:                                              ; preds = %216
  %235 = bitcast %"class.WTF::StringImpl"* %221 to i16*
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %272, label %239

239:                                              ; preds = %234
  %240 = zext i32 %237 to i64
  br label %241

241:                                              ; preds = %239, %246
  %242 = phi i64 [ %247, %246 ], [ 0, %239 ]
  %243 = getelementptr inbounds i16, i16* %235, i64 %242
  %244 = load i16, i16* %243, align 2
  %245 = icmp eq i16 %244, 45
  br i1 %245, label %249, label %246

246:                                              ; preds = %241
  %247 = add nuw nsw i64 %242, 1
  %248 = icmp eq i64 %247, %240
  br i1 %248, label %272, label %241

249:                                              ; preds = %241, %226
  %250 = phi i64 [ %233, %226 ], [ %242, %241 ]
  %251 = trunc i64 %250 to i32
  %252 = icmp eq i32 %251, -1
  br i1 %252, label %272, label %253

253:                                              ; preds = %249
  %254 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 0, i32 %251) #12
  %255 = ptrtoint %"class.WTF::StringImpl"* %254 to i64
  %256 = bitcast %"class.WTF::String"* %6 to i64*
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  store i64 %255, i64* %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %274, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #12
  br label %272

272:                                              ; preds = %246, %234, %222, %226, %179, %213, %249, %271, %268
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  br label %274

274:                                              ; preds = %272, %253
  %275 = phi %"class.WTF::StringImpl"* [ %273, %272 ], [ %254, %253 ]
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %333, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 1
  br i1 %281, label %295, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %333, label %287

287:                                              ; preds = %283
  %288 = bitcast %"class.WTF::StringImpl"* %282 to i8*
  %289 = zext i32 %285 to i64
  %290 = call i8* @memchr(i8* %288, i32 95, i64 %289) #13
  %291 = icmp eq i8* %290, null
  %292 = ptrtoint i8* %290 to i64
  %293 = ptrtoint %"class.WTF::StringImpl"* %282 to i64
  %294 = sub i64 %292, %293
  br i1 %291, label %333, label %310

295:                                              ; preds = %277
  %296 = bitcast %"class.WTF::StringImpl"* %282 to i16*
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %333, label %300

300:                                              ; preds = %295
  %301 = zext i32 %298 to i64
  br label %302

302:                                              ; preds = %300, %307
  %303 = phi i64 [ %308, %307 ], [ 0, %300 ]
  %304 = getelementptr inbounds i16, i16* %296, i64 %303
  %305 = load i16, i16* %304, align 2
  %306 = icmp eq i16 %305, 95
  br i1 %306, label %310, label %307

307:                                              ; preds = %302
  %308 = add nuw nsw i64 %303, 1
  %309 = icmp eq i64 %308, %301
  br i1 %309, label %333, label %302

310:                                              ; preds = %302, %287
  %311 = phi i64 [ %294, %287 ], [ %303, %302 ]
  %312 = trunc i64 %311 to i32
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %333, label %314

314:                                              ; preds = %310
  %315 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 0, i32 %312) #12
  %316 = ptrtoint %"class.WTF::StringImpl"* %315 to i64
  %317 = bitcast %"class.WTF::String"* %6 to i64*
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  store i64 %316, i64* %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #12
  br label %333

333:                                              ; preds = %307, %295, %283, %287, %274, %314, %329, %332, %310
  %334 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #12
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %336, label %337, label %341

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %338, align 8
  %339 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %340 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %339, i64* %340, align 8
  br label %348

341:                                              ; preds = %333
  %342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %335, %"class.WTF::StringImpl"** %342, align 8
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 1
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %347 = bitcast i8** %346 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"** %347, align 8
  br label %348

348:                                              ; preds = %337, %341
  %349 = phi i32 [ %344, %341 ], [ 0, %337 ]
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %349, i32* %350, align 8
  %351 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #12
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %354, label %358

354:                                              ; preds = %348
  %355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %355, align 8
  %356 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %357 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %356, i64* %357, align 8
  br label %365

358:                                              ; preds = %348
  %359 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %352, %"class.WTF::StringImpl"** %359, align 8
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 1
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %364 = bitcast i8** %363 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %364, align 8
  br label %365

365:                                              ; preds = %354, %358
  %366 = phi i32 [ %361, %358 ], [ 0, %354 ]
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %366, i32* %367, align 8
  %368 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #12
  br i1 %368, label %378, label %369

369:                                              ; preds = %365
  %370 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %371 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %370, i64 0, i32 2, i32 0, i32 0
  %372 = load %"class.blink::Document"*, %"class.blink::Document"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %372, i64 0, i32 2
  %374 = bitcast %"class.blink::UseCounter"* %373 to void (%"class.blink::UseCounter"*, i32)***
  %375 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %374, align 8
  %376 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %375, i64 3
  %377 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %376, align 8
  call void %377(%"class.blink::UseCounter"* %373, i32 590) #12
  br label %378

378:                                              ; preds = %365, %369
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #12
  br label %394

394:                                              ; preds = %378, %390, %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #12
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #12
  br label %410

410:                                              ; preds = %394, %406, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  br label %413

411:                                              ; preds = %12, %14
  %412 = phi %"class.blink::Element"* [ %13, %12 ], [ %18, %14 ]
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %412, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 23, i32 405) #12
  br label %413

413:                                              ; preds = %411, %410
  ret void
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15SerializeStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* nocapture readnone, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %51, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %51, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %51, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLangAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %51, label %24

24:                                               ; preds = %19
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9xml_names9kLangAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %51, label %41

41:                                               ; preds = %29, %35
  %42 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %44
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %49
  ret i1 %50

51:                                               ; preds = %24, %2, %9, %14, %19, %35, %41
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %4
  %21 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %27, i64* %28, align 8
  br label %36

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %35 = bitcast i8** %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %35, align 8
  br label %36

36:                                               ; preds = %25, %29
  %37 = phi i32 [ %32, %29 ], [ 0, %25 ]
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %37, i32* %38, align 8
  %39 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %40 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  br i1 %39, label %41, label %42

41:                                               ; preds = %36
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %40, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 349, i32 310) #12
  br label %578

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %40, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 349, %"class.WTF::String"* dereferenceable(8) %43) #12
  br label %578

44:                                               ; preds = %4
  %45 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %47
  br i1 %48, label %49, label %151

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  br label %68

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  %59 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  br i1 %58, label %68, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %61, align 8
  %62 = load i32, i32* %56, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %65 = bitcast i8** %64 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %62, i32* %66, align 8
  %67 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  br i1 %67, label %70, label %100

68:                                               ; preds = %53, %55
  %69 = phi i8* [ %54, %53 ], [ %59, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  br label %70

70:                                               ; preds = %68, %60
  %71 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %71, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 435, i32 531) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %71, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 264, i32 546) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %71, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 400, i32 550) #12
  %72 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 2
  %77 = bitcast %"class.blink::UseCounter"* %76 to void (%"class.blink::UseCounter"*, i32)***
  %78 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %78, i64 3
  %80 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %79, align 8
  call void %80(%"class.blink::UseCounter"* %76, i32 1130) #12
  %81 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %87, %89
  br i1 %90, label %91, label %578

91:                                               ; preds = %70
  %92 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %93 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %92, i64 0, i32 2, i32 0, i32 0
  %94 = load %"class.blink::Document"*, %"class.blink::Document"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %94, i64 0, i32 2
  %96 = bitcast %"class.blink::UseCounter"* %95 to void (%"class.blink::UseCounter"*, i32)***
  %97 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %97, i64 3
  %99 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %98, align 8
  call void %99(%"class.blink::UseCounter"* %95, i32 1131) #12
  br label %578

100:                                              ; preds = %60
  %101 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #12
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %105, align 8
  %106 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %107 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %106, i64* %107, align 8
  br label %115

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 1
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %114 = bitcast i8** %113 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %114, align 8
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i32 [ %111, %108 ], [ 0, %104 ]
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %116, i32* %117, align 8
  %118 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm15EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [15 x i8]* nonnull dereferenceable(15) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #12
  br i1 %118, label %119, label %130

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %120, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 435, i32 532) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %120, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 264, i32 546) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %120, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 400, i32 550) #12
  %121 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %122 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %122, i64 0, i32 2, i32 0, i32 0
  %124 = load %"class.blink::Document"*, %"class.blink::Document"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %124, i64 0, i32 2
  %126 = bitcast %"class.blink::UseCounter"* %125 to void (%"class.blink::UseCounter"*, i32)***
  %127 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %127, i64 3
  %129 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %128, align 8
  call void %129(%"class.blink::UseCounter"* %125, i32 1132) #12
  br label %578

130:                                              ; preds = %115
  %131 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %135, align 8
  %136 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %137 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %136, i64* %137, align 8
  br label %145

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 1
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %144 = bitcast i8** %143 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %144, align 8
  br label %145

145:                                              ; preds = %134, %138
  %146 = phi i32 [ %141, %138 ], [ 0, %134 ]
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %146, i32* %147, align 8
  %148 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [6 x i8]* nonnull dereferenceable(6) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  br i1 %148, label %149, label %578

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %150, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 435, i32 530) #12
  br label %578

151:                                              ; preds = %44
  %152 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %153, align 8
  %155 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %157, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 137, i32 3) #12
  br label %578

158:                                              ; preds = %151
  %159 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %160 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %160, align 8
  %162 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %161
  br i1 %162, label %163, label %215

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %167, i64 0, i32 2
  %169 = bitcast %"class.blink::UseCounter"* %168 to void (%"class.blink::UseCounter"*, i32)***
  %170 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %170, i64 3
  %172 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %171, align 8
  tail call void %172(%"class.blink::UseCounter"* %168, i32 1539) #12
  %173 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #12
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %177, label %181

177:                                              ; preds = %163
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %178, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %179, i64* %180, align 8
  br label %188

181:                                              ; preds = %163
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  br label %188

188:                                              ; preds = %177, %181
  %189 = phi i32 [ %184, %181 ], [ 0, %177 ]
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %189, i32* %190, align 8
  %191 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #12
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %193, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 434, i32 533) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %193, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 380, i32 3) #12
  br label %578

194:                                              ; preds = %188
  %195 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #12
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %199, align 8
  %200 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %201 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %200, i64* %201, align 8
  br label %209

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 1
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %208 = bitcast i8** %207 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %208, align 8
  br label %209

209:                                              ; preds = %198, %202
  %210 = phi i32 [ %205, %202 ], [ 0, %198 ]
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %210, i32* %211, align 8
  %212 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, [6 x i8]* nonnull dereferenceable(6) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #12
  br i1 %212, label %213, label %578

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %214, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 434, i32 3) #12
  br label %578

215:                                              ; preds = %158
  %216 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %218
  br i1 %219, label %220, label %504

220:                                              ; preds = %215
  %221 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #12
  %222 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %225, label %229

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %226, align 8
  %227 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %228 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %227, i64* %228, align 8
  br label %236

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %230, align 8
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 1
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %235 = bitcast i8** %234 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %233, %"class.WTF::StringImpl"** %235, align 8
  br label %236

236:                                              ; preds = %225, %229
  %237 = phi i32 [ %232, %229 ], [ 0, %225 ]
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %237, i32* %238, align 8
  %239 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, [5 x i8]* nonnull dereferenceable(5) @.str.4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #12
  br i1 %239, label %240, label %262

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %242 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE, align 8
  %243 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %246 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %246, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %244, i64 0, i32 3, i32 0, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %248, %250
  br i1 %251, label %260, label %252

252:                                              ; preds = %240
  %253 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %254 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %248, %257
  %259 = select i1 %258, i32 472, i32 470
  br label %260

260:                                              ; preds = %240, %252
  %261 = phi i32 [ %259, %252 ], [ 472, %240 ]
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %241, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 378, i32 %261) #12
  br label %578

262:                                              ; preds = %236
  %263 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #12
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %266, label %270

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %267, align 8
  %268 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %269 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %268, i64* %269, align 8
  br label %277

270:                                              ; preds = %262
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"** %271, align 8
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 1
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %276 = bitcast i8** %275 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %276, align 8
  br label %277

277:                                              ; preds = %270, %266
  %278 = phi i32 [ %273, %270 ], [ 0, %266 ]
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %278, i32* %279, align 8
  %280 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %280, label %423, label %281

281:                                              ; preds = %277
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %422, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 1
  %288 = bitcast %"class.WTF::StringImpl"* %287 to i8*
  %289 = icmp eq i32 %286, 3
  br i1 %289, label %290, label %422

290:                                              ; preds = %284
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 1
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %314, label %295

295:                                              ; preds = %290
  %296 = load i8, i8* %288, align 1
  %297 = zext i8 %296 to i64
  %298 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %302 = sext i8 %301 to i32
  %303 = icmp eq i32 %300, %302
  br i1 %303, label %304, label %361

304:                                              ; preds = %295
  %305 = getelementptr inbounds i8, i8* %288, i64 1
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i64
  %308 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i32
  %311 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %312 = sext i8 %311 to i32
  %313 = icmp eq i32 %310, %312
  br i1 %313, label %351, label %361

314:                                              ; preds = %290
  %315 = bitcast %"class.WTF::StringImpl"* %287 to i16*
  %316 = load i16, i16* %315, align 2
  %317 = add i16 %316, -65
  %318 = icmp ult i16 %317, 26
  %319 = zext i1 %318 to i16
  %320 = shl nuw nsw i16 %319, 5
  %321 = or i16 %320, %316
  %322 = zext i16 %321 to i32
  %323 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %324 = sext i8 %323 to i32
  %325 = icmp eq i32 %322, %324
  br i1 %325, label %326, label %361

326:                                              ; preds = %314
  %327 = getelementptr inbounds i16, i16* %315, i64 1
  %328 = load i16, i16* %327, align 2
  %329 = add i16 %328, -65
  %330 = icmp ult i16 %329, 26
  %331 = zext i1 %330 to i16
  %332 = shl nuw nsw i16 %331, 5
  %333 = or i16 %332, %328
  %334 = zext i16 %333 to i32
  %335 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %336 = sext i8 %335 to i32
  %337 = icmp eq i32 %334, %336
  br i1 %337, label %338, label %361

338:                                              ; preds = %326
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 1, i32 1
  %340 = bitcast i32* %339 to i16*
  %341 = load i16, i16* %340, align 2
  %342 = add i16 %341, -65
  %343 = icmp ult i16 %342, 26
  %344 = zext i1 %343 to i16
  %345 = shl nuw nsw i16 %344, 5
  %346 = or i16 %345, %341
  %347 = zext i16 %346 to i32
  %348 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %349 = sext i8 %348 to i32
  %350 = icmp eq i32 %347, %349
  br i1 %350, label %423, label %361

351:                                              ; preds = %304
  %352 = getelementptr inbounds i8, i8* %288, i64 2
  %353 = load i8, i8* %352, align 1
  %354 = zext i8 %353 to i64
  %355 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %359 = sext i8 %358 to i32
  %360 = icmp eq i32 %357, %359
  br i1 %360, label %423, label %361

361:                                              ; preds = %304, %295, %326, %314, %351, %338
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %385, label %366

366:                                              ; preds = %361
  %367 = load i8, i8* %288, align 1
  %368 = zext i8 %367 to i64
  %369 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %373 = sext i8 %372 to i32
  %374 = icmp eq i32 %371, %373
  br i1 %374, label %375, label %422

375:                                              ; preds = %366
  %376 = getelementptr inbounds i8, i8* %288, i64 1
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i64
  %379 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  %382 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %383 = sext i8 %382 to i32
  %384 = icmp eq i32 %381, %383
  br i1 %384, label %424, label %422

385:                                              ; preds = %361
  %386 = bitcast %"class.WTF::StringImpl"* %287 to i16*
  %387 = load i16, i16* %386, align 2
  %388 = add i16 %387, -65
  %389 = icmp ult i16 %388, 26
  %390 = zext i1 %389 to i16
  %391 = shl nuw nsw i16 %390, 5
  %392 = or i16 %391, %387
  %393 = zext i16 %392 to i32
  %394 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %395 = sext i8 %394 to i32
  %396 = icmp eq i32 %393, %395
  br i1 %396, label %397, label %422

397:                                              ; preds = %385
  %398 = getelementptr inbounds i16, i16* %386, i64 1
  %399 = load i16, i16* %398, align 2
  %400 = add i16 %399, -65
  %401 = icmp ult i16 %400, 26
  %402 = zext i1 %401 to i16
  %403 = shl nuw nsw i16 %402, 5
  %404 = or i16 %403, %399
  %405 = zext i16 %404 to i32
  %406 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %407 = sext i8 %406 to i32
  %408 = icmp eq i32 %405, %407
  br i1 %408, label %409, label %422

409:                                              ; preds = %397
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 1, i32 1
  %411 = bitcast i32* %410 to i16*
  %412 = load i16, i16* %411, align 2
  %413 = add i16 %412, -65
  %414 = icmp ult i16 %413, 26
  %415 = zext i1 %414 to i16
  %416 = shl nuw nsw i16 %415, 5
  %417 = or i16 %416, %412
  %418 = zext i16 %417 to i32
  %419 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %420 = sext i8 %419 to i32
  %421 = icmp eq i32 %418, %420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  br i1 %421, label %434, label %437

422:                                              ; preds = %284, %385, %397, %366, %375, %281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  br label %437

423:                                              ; preds = %351, %277, %338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  br label %434

424:                                              ; preds = %375
  %425 = getelementptr inbounds i8, i8* %288, i64 2
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i64
  %428 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %427
  %429 = load i8, i8* %428, align 1
  %430 = zext i8 %429 to i32
  %431 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %432 = sext i8 %431 to i32
  %433 = icmp eq i32 %430, %432
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  br i1 %433, label %434, label %437

434:                                              ; preds = %409, %423, %424
  %435 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %436 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %435, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 3, %"class.WTF::String"* dereferenceable(8) %436) #12
  br label %477

437:                                              ; preds = %409, %422, %424
  %438 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %439 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %440 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %440, label %477, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %443 = load i32, i32* %442, align 8
  %444 = and i32 %443, 48
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %477

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %438, i64 0, i32 0, i32 0, i32 0
  %448 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %439, i64 1, i32 2
  %450 = bitcast %"class.blink::Member"* %449 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %451 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %450, align 8
  %452 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %451, i64 0, i32 3, i32 0, i32 0, i32 0
  %453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %452, align 8
  %454 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %448, i64 0, i32 3, i32 0, i32 0, i32 0
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %453, %455
  br i1 %456, label %457, label %477

457:                                              ; preds = %446
  %458 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %459 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #12
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %458, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  %460 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %476, label %463

463:                                              ; preds = %457
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  br i1 %467, label %470, label %472

470:                                              ; preds = %463
  %471 = add i32 %469, -1
  store i32 %471, i32* %468, align 4
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i32 [ %471, %470 ], [ %469, %463 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %461) #12
  br label %476

476:                                              ; preds = %457, %472, %475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #12
  br label %477

477:                                              ; preds = %437, %441, %446, %476, %434
  %478 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %479 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %478, i64 0, i32 0, i32 0, i32 0
  %480 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %482 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %482, i64 0, i32 3, i32 0, i32 0, i32 0
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %485 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %480, i64 0, i32 3, i32 0, i32 0, i32 0
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %485, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %484, %486
  br i1 %487, label %578, label %488

488:                                              ; preds = %477
  %489 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdoTagE, align 8
  %490 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %489, i64 0, i32 0, i32 0, i32 0
  %491 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %491, i64 0, i32 3, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %484, %493
  br i1 %494, label %578, label %495

495:                                              ; preds = %488
  %496 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOutputTagE, align 8
  %497 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %496, i64 0, i32 0, i32 0, i32 0
  %498 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %497, align 8
  %499 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %498, i64 0, i32 3, i32 0, i32 0, i32 0
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %499, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %484, %500
  br i1 %501, label %578, label %502

502:                                              ; preds = %495
  %503 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %503, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 378, i32 470) #12
  br label %578

504:                                              ; preds = %215
  %505 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9xml_names9kLangAttrE, align 8
  %506 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %505, i64 0, i32 0, i32 0
  %507 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %506, align 8
  %508 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %507
  br i1 %508, label %521, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %512 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %507, i64 0, i32 3, i32 0, i32 0, i32 0
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %511, %513
  br i1 %514, label %515, label %522

515:                                              ; preds = %509
  %516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %507, i64 0, i32 4, i32 0, i32 0, i32 0
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %517, %519
  br i1 %520, label %521, label %522

521:                                              ; preds = %504, %515
  tail call void @_ZN5blink11HTMLElement28MapLanguageAttributeToLocaleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3)
  br label %578

522:                                              ; preds = %509, %515
  %523 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLangAttrE, align 8
  %524 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %523, i64 0, i32 0, i32 0
  %525 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %524, align 8
  %526 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %525
  br i1 %526, label %527, label %578

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %529 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %528, align 8
  %530 = icmp eq %"class.blink::ElementData"* %529, null
  br i1 %530, label %577, label %531

531:                                              ; preds = %527
  %532 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %529, i64 0, i32 0, i32 0, i32 0
  %533 = load i32, i32* %532, align 4
  %534 = and i32 %533, 1
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %543, label %536

536:                                              ; preds = %531
  %537 = bitcast %"class.blink::ElementData"* %529 to %"class.blink::UniqueElementData"*
  %538 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %529, i64 1, i32 1
  %539 = bitcast %"class.blink::Member.14"* %538 to %"class.blink::Attribute"**
  %540 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %539, align 8
  %541 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %537, i64 0, i32 2, i32 0, i32 0, i32 2
  %542 = load i32, i32* %541, align 4
  br label %548

543:                                              ; preds = %531
  %544 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %529, i64 1
  %545 = bitcast %"class.blink::ElementData"* %544 to %"class.blink::Attribute"*
  %546 = lshr i32 %533, 1
  %547 = and i32 %546, 268435455
  br label %548

548:                                              ; preds = %543, %536
  %549 = phi %"class.blink::Attribute"* [ %545, %543 ], [ %540, %536 ]
  %550 = phi i32 [ %547, %543 ], [ %542, %536 ]
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %549, i64 %551
  %553 = icmp eq i32 %550, 0
  br i1 %553, label %577, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %507, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %556

556:                                              ; preds = %571, %554
  %557 = phi %"class.blink::Attribute"* [ %549, %554 ], [ %572, %571 ]
  %558 = phi i32 [ 0, %554 ], [ %573, %571 ]
  %559 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %557, i64 0, i32 0, i32 0, i32 0
  %560 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %559, align 8
  %561 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %560, %507
  br i1 %561, label %575, label %562

562:                                              ; preds = %556
  %563 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %560, i64 0, i32 3, i32 0, i32 0, i32 0
  %564 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %563, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %564, %513
  br i1 %565, label %566, label %571

566:                                              ; preds = %562
  %567 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %560, i64 0, i32 4, i32 0, i32 0, i32 0
  %568 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %555, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %568, %569
  br i1 %570, label %575, label %571

571:                                              ; preds = %566, %562
  %572 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %557, i64 1
  %573 = add i32 %558, 1
  %574 = icmp eq %"class.blink::Attribute"* %572, %552
  br i1 %574, label %577, label %556

575:                                              ; preds = %556, %566
  %576 = icmp eq i32 %558, -1
  br i1 %576, label %577, label %578

577:                                              ; preds = %571, %575, %548, %527
  tail call void @_ZN5blink11HTMLElement28MapLanguageAttributeToLocaleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3)
  br label %578

578:                                              ; preds = %575, %522, %119, %149, %145, %70, %91, %209, %213, %192, %521, %577, %260, %502, %495, %488, %477, %156, %41, %42
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm15EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [15 x i8]* dereferenceable(15)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 14
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %250, label %80

62:                                               ; preds = %250, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %250 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %250, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %208, %222, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %208 ], [ false, %222 ], [ false, %62 ], [ false, %45 ], [ true, %250 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  br i1 %221, label %222, label %80

222:                                              ; preds = %208
  %223 = getelementptr inbounds i8, i8* %15, i64 12
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 12
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %228, %234
  br i1 %235, label %236, label %80

236:                                              ; preds = %222
  %237 = getelementptr inbounds i8, i8* %15, i64 13
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [15 x i8], [15 x i8]* %1, i64 0, i64 13
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %242, %248
  ret i1 %249

250:                                              ; preds = %45
  %251 = icmp eq i64 %61, 14
  br i1 %251, label %80, label %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::AttributeTriggers"* @_ZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE to i64*), align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %263, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %263, label %9

9:                                                ; preds = %6
  %10 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE to i64*), align 8
  store i64 %10, i64* bitcast ([157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 0, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 0, i32 2) to i64*), align 16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16OnDirAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 0, i32 3, i32 0) to <2 x i64>*), align 8
  %11 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE to i64*), align 8
  store i64 %11, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 1, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 1, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 1, i32 2) to i64*), align 8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement17OnFormAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 1, i32 3, i32 0) to <2 x i64>*), align 8
  %12 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kInertAttrE to i64*), align 8
  store i64 %12, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 2, i32 0) to i64*), align 16
  store i32 1995, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 2, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 2, i32 2) to i64*), align 16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement18OnInertAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 2, i32 3, i32 0) to <2 x i64>*), align 8
  %13 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names9kLangAttrE to i64*), align 8
  store i64 %13, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 3, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 3, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 3, i32 2) to i64*), align 8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement17OnLangAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 3, i32 3, i32 0) to <2 x i64>*), align 8
  %14 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kNonceAttrE to i64*), align 8
  store i64 %14, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 4, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 4, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 4, i32 2) to i64*), align 16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement18OnNonceAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 4, i32 3, i32 0) to <2 x i64>*), align 8
  %15 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kTabindexAttrE to i64*), align 8
  store i64 %15, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 5, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 5, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 5, i32 2) to i64*), align 8
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement21OnTabIndexAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 5, i32 3, i32 0) to <2 x i64>*), align 8
  %16 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink9xml_names9kLangAttrE to i64*), align 8
  store i64 %16, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 6, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 6, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 6, i32 2) to i64*), align 16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement20OnXMLLangAttrChangedERKNS_7Element27AttributeModificationParamsE to i64), i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 6, i32 3, i32 0) to <2 x i64>*), align 8
  %17 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnabortAttrE to i64*), align 8
  store i64 %17, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 7, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 7, i32 1), align 8
  %18 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kAbortE to i64*), align 8
  store i64 %18, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 7, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 7, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %19 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kOnanimationendAttrE to i64*), align 8
  store i64 %19, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 8, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 8, i32 1), align 8
  %20 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kAnimationendE to i64*), align 8
  store i64 %20, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 8, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 8, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %21 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names25kOnanimationiterationAttrE to i64*), align 8
  store i64 %21, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 9, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 9, i32 1), align 8
  %22 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kAnimationiterationE to i64*), align 8
  store i64 %22, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 9, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 9, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kOnanimationstartAttrE to i64*), align 8
  store i64 %23, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 10, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 10, i32 1), align 8
  %24 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kAnimationstartE to i64*), align 8
  store i64 %24, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 10, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 10, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %25 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnauxclickAttrE to i64*), align 8
  store i64 %25, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 11, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 11, i32 1), align 8
  %26 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kAuxclickE to i64*), align 8
  store i64 %26, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 11, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 11, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %27 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnbeforecopyAttrE to i64*), align 8
  store i64 %27, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 12, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 12, i32 1), align 8
  %28 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kBeforecopyE to i64*), align 8
  store i64 %28, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 12, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 12, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %29 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnbeforecutAttrE to i64*), align 8
  store i64 %29, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 13, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 13, i32 1), align 8
  %30 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kBeforecutE to i64*), align 8
  store i64 %30, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 13, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 13, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %31 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOnbeforepasteAttrE to i64*), align 8
  store i64 %31, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 14, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 14, i32 1), align 8
  %32 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kBeforepasteE to i64*), align 8
  store i64 %32, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 14, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 14, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %33 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOnblurAttrE to i64*), align 8
  store i64 %33, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 15, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 15, i32 1), align 8
  %34 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kBlurE to i64*), align 8
  store i64 %34, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 15, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 15, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %35 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOncancelAttrE to i64*), align 8
  store i64 %35, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 16, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 16, i32 1), align 8
  %36 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kCancelE to i64*), align 8
  store i64 %36, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 16, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 16, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %37 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOncanplayAttrE to i64*), align 8
  store i64 %37, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 17, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 17, i32 1), align 8
  %38 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kCanplayE to i64*), align 8
  store i64 %38, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 17, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 17, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %39 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kOncanplaythroughAttrE to i64*), align 8
  store i64 %39, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 18, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 18, i32 1), align 8
  %40 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kCanplaythroughE to i64*), align 8
  store i64 %40, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 18, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 18, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %41 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnchangeAttrE to i64*), align 8
  store i64 %41, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 19, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 19, i32 1), align 8
  %42 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE to i64*), align 8
  store i64 %42, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 19, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 19, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %43 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnclickAttrE to i64*), align 8
  store i64 %43, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 20, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 20, i32 1), align 8
  %44 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE to i64*), align 8
  store i64 %44, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 20, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 20, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %45 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOncloseAttrE to i64*), align 8
  store i64 %45, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 21, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 21, i32 1), align 8
  %46 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kCloseE to i64*), align 8
  store i64 %46, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 21, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 21, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %47 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOncontextmenuAttrE to i64*), align 8
  store i64 %47, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 22, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 22, i32 1), align 8
  %48 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kContextmenuE to i64*), align 8
  store i64 %48, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 22, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 22, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %49 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOncopyAttrE to i64*), align 8
  store i64 %49, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 23, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 23, i32 1), align 8
  %50 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kCopyE to i64*), align 8
  store i64 %50, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 23, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 23, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %51 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOncuechangeAttrE to i64*), align 8
  store i64 %51, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 24, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 24, i32 1), align 8
  %52 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kCuechangeE to i64*), align 8
  store i64 %52, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 24, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 24, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %53 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kOncutAttrE to i64*), align 8
  store i64 %53, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 25, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 25, i32 1), align 8
  %54 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names4kCutE to i64*), align 8
  store i64 %54, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 25, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 25, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %55 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOndblclickAttrE to i64*), align 8
  store i64 %55, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 26, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 26, i32 1), align 8
  %56 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kDblclickE to i64*), align 8
  store i64 %56, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 26, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 26, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %57 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOndragAttrE to i64*), align 8
  store i64 %57, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 27, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 27, i32 1), align 8
  %58 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kDragE to i64*), align 8
  store i64 %58, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 27, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 27, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %59 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOndragendAttrE to i64*), align 8
  store i64 %59, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 28, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 28, i32 1), align 8
  %60 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kDragendE to i64*), align 8
  store i64 %60, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 28, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 28, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %61 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOndragenterAttrE to i64*), align 8
  store i64 %61, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 29, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 29, i32 1), align 8
  %62 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kDragenterE to i64*), align 8
  store i64 %62, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 29, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 29, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %63 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOndragleaveAttrE to i64*), align 8
  store i64 %63, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 30, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 30, i32 1), align 8
  %64 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kDragleaveE to i64*), align 8
  store i64 %64, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 30, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 30, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %65 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOndragoverAttrE to i64*), align 8
  store i64 %65, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 31, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 31, i32 1), align 8
  %66 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kDragoverE to i64*), align 8
  store i64 %66, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 31, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 31, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %67 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOndragstartAttrE to i64*), align 8
  store i64 %67, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 32, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 32, i32 1), align 8
  %68 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kDragstartE to i64*), align 8
  store i64 %68, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 32, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 32, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %69 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOndropAttrE to i64*), align 8
  store i64 %69, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 33, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 33, i32 1), align 8
  %70 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kDropE to i64*), align 8
  store i64 %70, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 33, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 33, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %71 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kOndurationchangeAttrE to i64*), align 8
  store i64 %71, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 34, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 34, i32 1), align 8
  %72 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kDurationchangeE to i64*), align 8
  store i64 %72, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 34, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 34, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %73 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnemptiedAttrE to i64*), align 8
  store i64 %73, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 35, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 35, i32 1), align 8
  %74 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kEmptiedE to i64*), align 8
  store i64 %74, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 35, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 35, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %75 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnendedAttrE to i64*), align 8
  store i64 %75, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 36, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 36, i32 1), align 8
  %76 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kEndedE to i64*), align 8
  store i64 %76, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 36, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 36, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %77 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnerrorAttrE to i64*), align 8
  store i64 %77, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 37, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 37, i32 1), align 8
  %78 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE to i64*), align 8
  store i64 %78, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 37, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 37, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %79 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnfocusAttrE to i64*), align 8
  store i64 %79, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 38, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 38, i32 1), align 8
  %80 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kFocusE to i64*), align 8
  store i64 %80, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 38, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 38, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %81 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnfocusinAttrE to i64*), align 8
  store i64 %81, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 39, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 39, i32 1), align 8
  %82 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kFocusinE to i64*), align 8
  store i64 %82, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 39, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 39, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %83 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnfocusoutAttrE to i64*), align 8
  store i64 %83, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 40, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 40, i32 1), align 8
  %84 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kFocusoutE to i64*), align 8
  store i64 %84, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 40, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 40, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %85 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnformdataAttrE to i64*), align 8
  store i64 %85, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 41, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 41, i32 1), align 8
  %86 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kFormdataE to i64*), align 8
  store i64 %86, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 41, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 41, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %87 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names24kOngotpointercaptureAttrE to i64*), align 8
  store i64 %87, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 42, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 42, i32 1), align 8
  %88 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names18kGotpointercaptureE to i64*), align 8
  store i64 %88, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 42, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 42, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %89 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOninputAttrE to i64*), align 8
  store i64 %89, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 43, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 43, i32 1), align 8
  %90 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kInputE to i64*), align 8
  store i64 %90, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 43, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 43, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %91 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOninvalidAttrE to i64*), align 8
  store i64 %91, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 44, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 44, i32 1), align 8
  %92 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kInvalidE to i64*), align 8
  store i64 %92, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 44, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 44, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %93 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnkeydownAttrE to i64*), align 8
  store i64 %93, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 45, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 45, i32 1), align 8
  %94 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE to i64*), align 8
  store i64 %94, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 45, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 45, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %95 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnkeypressAttrE to i64*), align 8
  store i64 %95, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 46, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 46, i32 1), align 8
  %96 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE to i64*), align 8
  store i64 %96, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 46, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 46, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %97 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnkeyupAttrE to i64*), align 8
  store i64 %97, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 47, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 47, i32 1), align 8
  %98 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kKeyupE to i64*), align 8
  store i64 %98, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 47, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 47, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %99 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOnloadAttrE to i64*), align 8
  store i64 %99, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 48, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 48, i32 1), align 8
  %100 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE to i64*), align 8
  store i64 %100, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 48, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 48, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %101 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnloadeddataAttrE to i64*), align 8
  store i64 %101, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 49, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 49, i32 1), align 8
  %102 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kLoadeddataE to i64*), align 8
  store i64 %102, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 49, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 49, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %103 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kOnloadedmetadataAttrE to i64*), align 8
  store i64 %103, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 50, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 50, i32 1), align 8
  %104 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kLoadedmetadataE to i64*), align 8
  store i64 %104, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 50, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 50, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %105 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnloadstartAttrE to i64*), align 8
  store i64 %105, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 51, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 51, i32 1), align 8
  %106 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kLoadstartE to i64*), align 8
  store i64 %106, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 51, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 51, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %107 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names25kOnlostpointercaptureAttrE to i64*), align 8
  store i64 %107, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 52, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 52, i32 1), align 8
  %108 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kLostpointercaptureE to i64*), align 8
  store i64 %108, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 52, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 52, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %109 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnmousedownAttrE to i64*), align 8
  store i64 %109, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 53, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 53, i32 1), align 8
  %110 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kMousedownE to i64*), align 8
  store i64 %110, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 53, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 53, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %111 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnmouseenterAttrE to i64*), align 8
  store i64 %111, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 54, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 54, i32 1), align 8
  %112 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kMouseenterE to i64*), align 8
  store i64 %112, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 54, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 54, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %113 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnmouseleaveAttrE to i64*), align 8
  store i64 %113, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 55, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 55, i32 1), align 8
  %114 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kMouseleaveE to i64*), align 8
  store i64 %114, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 55, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 55, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %115 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnmousemoveAttrE to i64*), align 8
  store i64 %115, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 56, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 56, i32 1), align 8
  %116 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kMousemoveE to i64*), align 8
  store i64 %116, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 56, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 56, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %117 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnmouseoutAttrE to i64*), align 8
  store i64 %117, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 57, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 57, i32 1), align 8
  %118 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kMouseoutE to i64*), align 8
  store i64 %118, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 57, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 57, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %119 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnmouseoverAttrE to i64*), align 8
  store i64 %119, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 58, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 58, i32 1), align 8
  %120 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kMouseoverE to i64*), align 8
  store i64 %120, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 58, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 58, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %121 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnmouseupAttrE to i64*), align 8
  store i64 %121, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 59, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 59, i32 1), align 8
  %122 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMouseupE to i64*), align 8
  store i64 %122, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 59, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 59, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %123 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnmousewheelAttrE to i64*), align 8
  store i64 %123, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 60, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 60, i32 1), align 8
  %124 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kMousewheelE to i64*), align 8
  store i64 %124, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 60, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 60, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %125 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnoverscrollAttrE to i64*), align 8
  store i64 %125, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 61, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 61, i32 1), align 8
  %126 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kOverscrollE to i64*), align 8
  store i64 %126, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 61, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 61, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %127 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnpasteAttrE to i64*), align 8
  store i64 %127, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 62, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 62, i32 1), align 8
  %128 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kPasteE to i64*), align 8
  store i64 %128, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 62, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 62, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %129 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnpauseAttrE to i64*), align 8
  store i64 %129, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 63, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 63, i32 1), align 8
  %130 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kPauseE to i64*), align 8
  store i64 %130, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 63, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 63, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %131 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names11kOnplayAttrE to i64*), align 8
  store i64 %131, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 64, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 64, i32 1), align 8
  %132 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kPlayE to i64*), align 8
  store i64 %132, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 64, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 64, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %133 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnplayingAttrE to i64*), align 8
  store i64 %133, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 65, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 65, i32 1), align 8
  %134 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kPlayingE to i64*), align 8
  store i64 %134, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 65, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 65, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %135 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kOnpointercancelAttrE to i64*), align 8
  store i64 %135, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 66, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 66, i32 1), align 8
  %136 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE to i64*), align 8
  store i64 %136, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 66, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 66, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %137 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOnpointerdownAttrE to i64*), align 8
  store i64 %137, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 67, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 67, i32 1), align 8
  %138 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointerdownE to i64*), align 8
  store i64 %138, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 67, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 67, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %139 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kOnpointerenterAttrE to i64*), align 8
  store i64 %139, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 68, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 68, i32 1), align 8
  %140 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE to i64*), align 8
  store i64 %140, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 68, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 68, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %141 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kOnpointerleaveAttrE to i64*), align 8
  store i64 %141, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 69, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 69, i32 1), align 8
  %142 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE to i64*), align 8
  store i64 %142, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 69, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 69, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %143 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOnpointermoveAttrE to i64*), align 8
  store i64 %143, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 70, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 70, i32 1), align 8
  %144 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointermoveE to i64*), align 8
  store i64 %144, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 70, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 70, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %145 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnpointeroutAttrE to i64*), align 8
  store i64 %145, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 71, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 71, i32 1), align 8
  %146 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kPointeroutE to i64*), align 8
  store i64 %146, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 71, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 71, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %147 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOnpointeroverAttrE to i64*), align 8
  store i64 %147, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 72, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 72, i32 1), align 8
  %148 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointeroverE to i64*), align 8
  store i64 %148, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 72, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 72, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %149 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names23kOnpointerrawupdateAttrE to i64*), align 8
  store i64 %149, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 73, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 73, i32 1), align 8
  %150 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE to i64*), align 8
  store i64 %150, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 73, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 73, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %151 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnpointerupAttrE to i64*), align 8
  store i64 %151, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 74, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 74, i32 1), align 8
  %152 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kPointerupE to i64*), align 8
  store i64 %152, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 74, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 74, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %153 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOnprogressAttrE to i64*), align 8
  store i64 %153, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 75, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 75, i32 1), align 8
  %154 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kProgressE to i64*), align 8
  store i64 %154, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 75, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 75, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %155 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOnratechangeAttrE to i64*), align 8
  store i64 %155, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 76, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 76, i32 1), align 8
  %156 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kRatechangeE to i64*), align 8
  store i64 %156, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 76, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 76, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %157 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnresetAttrE to i64*), align 8
  store i64 %157, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 77, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 77, i32 1), align 8
  %158 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kResetE to i64*), align 8
  store i64 %158, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 77, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 77, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %159 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnresizeAttrE to i64*), align 8
  store i64 %159, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 78, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 78, i32 1), align 8
  %160 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kResizeE to i64*), align 8
  store i64 %160, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 78, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 78, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %161 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnscrollAttrE to i64*), align 8
  store i64 %161, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 79, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 79, i32 1), align 8
  %162 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kScrollE to i64*), align 8
  store i64 %162, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 79, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 79, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %163 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOnscrollendAttrE to i64*), align 8
  store i64 %163, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 80, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 80, i32 1), align 8
  %164 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kScrollendE to i64*), align 8
  store i64 %164, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 80, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 80, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %165 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnseekedAttrE to i64*), align 8
  store i64 %165, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 81, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 81, i32 1), align 8
  %166 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSeekedE to i64*), align 8
  store i64 %166, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 81, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 81, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %167 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnseekingAttrE to i64*), align 8
  store i64 %167, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 82, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 82, i32 1), align 8
  %168 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSeekingE to i64*), align 8
  store i64 %168, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 82, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 82, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %169 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnselectAttrE to i64*), align 8
  store i64 %169, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 83, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 83, i32 1), align 8
  %170 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE to i64*), align 8
  store i64 %170, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 83, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 83, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %171 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOnselectstartAttrE to i64*), align 8
  store i64 %171, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 84, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 84, i32 1), align 8
  %172 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kSelectstartE to i64*), align 8
  store i64 %172, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 84, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 84, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %173 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnstalledAttrE to i64*), align 8
  store i64 %173, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 85, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 85, i32 1), align 8
  %174 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kStalledE to i64*), align 8
  store i64 %174, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 85, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 85, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %175 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnsubmitAttrE to i64*), align 8
  store i64 %175, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 86, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 86, i32 1), align 8
  %176 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSubmitE to i64*), align 8
  store i64 %176, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 86, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 86, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %177 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnsuspendAttrE to i64*), align 8
  store i64 %177, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 87, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 87, i32 1), align 8
  %178 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSuspendE to i64*), align 8
  store i64 %178, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 87, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 87, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %179 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOntimeupdateAttrE to i64*), align 8
  store i64 %179, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 88, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 88, i32 1), align 8
  %180 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kTimeupdateE to i64*), align 8
  store i64 %180, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 88, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 88, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %181 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kOntoggleAttrE to i64*), align 8
  store i64 %181, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 89, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 89, i32 1), align 8
  %182 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kToggleE to i64*), align 8
  store i64 %182, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 89, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 89, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %183 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kOntouchcancelAttrE to i64*), align 8
  store i64 %183, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 90, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 90, i32 1), align 8
  %184 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kTouchcancelE to i64*), align 8
  store i64 %184, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 90, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 90, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %185 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kOntouchendAttrE to i64*), align 8
  store i64 %185, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 91, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 91, i32 1), align 8
  %186 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kTouchendE to i64*), align 8
  store i64 %186, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 91, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 91, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %187 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kOntouchmoveAttrE to i64*), align 8
  store i64 %187, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 92, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 92, i32 1), align 8
  %188 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kTouchmoveE to i64*), align 8
  store i64 %188, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 92, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 92, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %189 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kOntouchstartAttrE to i64*), align 8
  store i64 %189, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 93, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 93, i32 1), align 8
  %190 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kTouchstartE to i64*), align 8
  store i64 %190, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 93, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 93, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %191 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kOntransitionendAttrE to i64*), align 8
  store i64 %191, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 94, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 94, i32 1), align 8
  %192 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names20kWebkitTransitionEndE to i64*), align 8
  store i64 %192, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 94, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 94, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %193 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kOnvolumechangeAttrE to i64*), align 8
  store i64 %193, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 95, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 95, i32 1), align 8
  %194 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kVolumechangeE to i64*), align 8
  store i64 %194, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 95, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 95, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %195 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kOnwaitingAttrE to i64*), align 8
  store i64 %195, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 96, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 96, i32 1), align 8
  %196 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kWaitingE to i64*), align 8
  store i64 %196, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 96, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 96, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %197 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names25kOnwebkitanimationendAttrE to i64*), align 8
  store i64 %197, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 97, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 97, i32 1), align 8
  %198 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kWebkitAnimationEndE to i64*), align 8
  store i64 %198, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 97, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 97, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %199 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names31kOnwebkitanimationiterationAttrE to i64*), align 8
  store i64 %199, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 98, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 98, i32 1), align 8
  %200 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kWebkitAnimationIterationE to i64*), align 8
  store i64 %200, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 98, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 98, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %201 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names27kOnwebkitanimationstartAttrE to i64*), align 8
  store i64 %201, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 99, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 99, i32 1), align 8
  %202 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names21kWebkitAnimationStartE to i64*), align 8
  store i64 %202, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 99, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 99, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %203 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names29kOnwebkitfullscreenchangeAttrE to i64*), align 8
  store i64 %203, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 100, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 100, i32 1), align 8
  %204 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names23kWebkitfullscreenchangeE to i64*), align 8
  store i64 %204, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 100, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 100, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %205 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names28kOnwebkitfullscreenerrorAttrE to i64*), align 8
  store i64 %205, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 101, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 101, i32 1), align 8
  %206 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names22kWebkitfullscreenerrorE to i64*), align 8
  store i64 %206, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 101, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 101, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %207 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names26kOnwebkittransitionendAttrE to i64*), align 8
  store i64 %207, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 102, i32 0) to i64*), align 16
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 102, i32 1), align 8
  store i64 %192, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 102, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 102, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %208 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnwheelAttrE to i64*), align 8
  store i64 %208, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 103, i32 0) to i64*), align 8
  store i32 0, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 103, i32 1), align 8
  %209 = load i64, i64* bitcast (%"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kWheelE to i64*), align 8
  store i64 %209, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 103, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 103, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %210 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names25kAriaActivedescendantAttrE to i64*), align 8
  store i64 %210, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 104, i32 0) to i64*), align 16
  store i32 2069, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 104, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 104, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 104, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %211 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaAtomicAttrE to i64*), align 8
  store i64 %211, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 105, i32 0) to i64*), align 8
  store i32 2070, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 105, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 105, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 105, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %212 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaAutocompleteAttrE to i64*), align 8
  store i64 %212, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 106, i32 0) to i64*), align 16
  store i32 2071, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 106, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 106, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 106, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %213 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaBusyAttrE to i64*), align 8
  store i64 %213, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 107, i32 0) to i64*), align 8
  store i32 2072, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 107, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 107, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 107, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %214 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE to i64*), align 8
  store i64 %214, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 108, i32 0) to i64*), align 16
  store i32 2073, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 108, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 108, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 108, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %215 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColcountAttrE to i64*), align 8
  store i64 %215, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 109, i32 0) to i64*), align 8
  store i32 2074, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 109, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 109, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 109, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %216 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColindexAttrE to i64*), align 8
  store i64 %216, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 110, i32 0) to i64*), align 16
  store i32 2075, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 110, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 110, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 110, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %217 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaColspanAttrE to i64*), align 8
  store i64 %217, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 111, i32 0) to i64*), align 8
  store i32 2076, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 111, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 111, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 111, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %218 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaControlsAttrE to i64*), align 8
  store i64 %218, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 112, i32 0) to i64*), align 16
  store i32 2077, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 112, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 112, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 112, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %219 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCurrentAttrE to i64*), align 8
  store i64 %219, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 113, i32 0) to i64*), align 8
  store i32 2078, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 113, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 113, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 113, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %220 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE to i64*), align 8
  store i64 %220, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 114, i32 0) to i64*), align 16
  store i32 2079, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 114, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 114, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 114, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %221 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescriptionAttrE to i64*), align 8
  store i64 %221, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 115, i32 0) to i64*), align 8
  store i32 3089, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 115, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 115, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 115, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %222 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaDetailsAttrE to i64*), align 8
  store i64 %222, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 116, i32 0) to i64*), align 16
  store i32 2080, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 116, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 116, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 116, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %223 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaDisabledAttrE to i64*), align 8
  store i64 %223, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 117, i32 0) to i64*), align 8
  store i32 2081, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 117, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 117, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 117, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %224 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaDropeffectAttrE to i64*), align 8
  store i64 %224, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 118, i32 0) to i64*), align 16
  store i32 2082, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 118, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 118, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 118, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %225 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaErrormessageAttrE to i64*), align 8
  store i64 %225, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 119, i32 0) to i64*), align 8
  store i32 2083, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 119, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 119, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 119, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %226 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaExpandedAttrE to i64*), align 8
  store i64 %226, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 120, i32 0) to i64*), align 16
  store i32 2084, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 120, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 120, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 120, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %227 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaFlowtoAttrE to i64*), align 8
  store i64 %227, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 121, i32 0) to i64*), align 8
  store i32 2085, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 121, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 121, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 121, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %228 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaGrabbedAttrE to i64*), align 8
  store i64 %228, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 122, i32 0) to i64*), align 16
  store i32 2086, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 122, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 122, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 122, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %229 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaHaspopupAttrE to i64*), align 8
  store i64 %229, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 123, i32 0) to i64*), align 8
  store i32 2087, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 123, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 123, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 123, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %230 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaHiddenAttrE to i64*), align 8
  store i64 %230, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 124, i32 0) to i64*), align 16
  store i32 2089, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 124, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 124, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 124, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %231 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaInvalidAttrE to i64*), align 8
  store i64 %231, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 125, i32 0) to i64*), align 8
  store i32 2090, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 125, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 125, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 125, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %232 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaKeyshortcutsAttrE to i64*), align 8
  store i64 %232, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 126, i32 0) to i64*), align 16
  store i32 2091, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 126, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 126, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 126, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %233 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE to i64*), align 8
  store i64 %233, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 127, i32 0) to i64*), align 8
  store i32 2092, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 127, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 127, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 127, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %234 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE to i64*), align 8
  store i64 %234, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 128, i32 0) to i64*), align 16
  store i32 2093, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 128, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 128, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 128, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %235 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE to i64*), align 8
  store i64 %235, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 129, i32 0) to i64*), align 8
  store i32 2094, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 129, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 129, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 129, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %236 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLevelAttrE to i64*), align 8
  store i64 %236, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 130, i32 0) to i64*), align 16
  store i32 2095, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 130, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 130, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 130, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %237 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaLiveAttrE to i64*), align 8
  store i64 %237, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 131, i32 0) to i64*), align 8
  store i32 2096, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 131, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 131, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 131, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %238 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaModalAttrE to i64*), align 8
  store i64 %238, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 132, i32 0) to i64*), align 16
  store i32 2097, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 132, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 132, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 132, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %239 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaMultilineAttrE to i64*), align 8
  store i64 %239, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 133, i32 0) to i64*), align 8
  store i32 2098, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 133, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 133, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 133, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %240 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaMultiselectableAttrE to i64*), align 8
  store i64 %240, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 134, i32 0) to i64*), align 16
  store i32 2099, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 134, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 134, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 134, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %241 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaOrientationAttrE to i64*), align 8
  store i64 %241, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 135, i32 0) to i64*), align 8
  store i32 2100, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 135, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 135, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 135, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %242 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE to i64*), align 8
  store i64 %242, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 136, i32 0) to i64*), align 16
  store i32 2101, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 136, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 136, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 136, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %243 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaPlaceholderAttrE to i64*), align 8
  store i64 %243, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 137, i32 0) to i64*), align 8
  store i32 2102, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 137, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 137, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 137, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %244 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaPosinsetAttrE to i64*), align 8
  store i64 %244, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 138, i32 0) to i64*), align 16
  store i32 2103, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 138, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 138, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 138, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %245 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaPressedAttrE to i64*), align 8
  store i64 %245, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 139, i32 0) to i64*), align 8
  store i32 2104, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 139, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 139, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 139, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %246 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaReadonlyAttrE to i64*), align 8
  store i64 %246, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 140, i32 0) to i64*), align 16
  store i32 2105, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 140, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 140, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 140, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %247 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRelevantAttrE to i64*), align 8
  store i64 %247, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 141, i32 0) to i64*), align 8
  store i32 2106, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 141, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 141, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 141, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %248 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRequiredAttrE to i64*), align 8
  store i64 %248, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 142, i32 0) to i64*), align 16
  store i32 2107, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 142, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 142, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 142, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %249 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaRoledescriptionAttrE to i64*), align 8
  store i64 %249, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 143, i32 0) to i64*), align 8
  store i32 2108, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 143, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 143, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 143, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %250 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowcountAttrE to i64*), align 8
  store i64 %250, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 144, i32 0) to i64*), align 16
  store i32 2109, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 144, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 144, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 144, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %251 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowindexAttrE to i64*), align 8
  store i64 %251, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 145, i32 0) to i64*), align 8
  store i32 2110, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 145, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 145, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 145, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %252 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaRowspanAttrE to i64*), align 8
  store i64 %252, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 146, i32 0) to i64*), align 16
  store i32 2111, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 146, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 146, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 146, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %253 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaSelectedAttrE to i64*), align 8
  store i64 %253, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 147, i32 0) to i64*), align 8
  store i32 2112, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 147, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 147, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 147, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %254 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaSetsizeAttrE to i64*), align 8
  store i64 %254, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 148, i32 0) to i64*), align 16
  store i32 2113, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 148, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 148, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 148, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %255 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaSortAttrE to i64*), align 8
  store i64 %255, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 149, i32 0) to i64*), align 8
  store i32 2114, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 149, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 149, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 149, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %256 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names25kAriaTouchpassthroughAttrE to i64*), align 8
  store i64 %256, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 150, i32 0) to i64*), align 16
  store i32 3918, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 150, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 150, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 150, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %257 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuemaxAttrE to i64*), align 8
  store i64 %257, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 151, i32 0) to i64*), align 8
  store i32 2115, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 151, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 151, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 151, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %258 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValueminAttrE to i64*), align 8
  store i64 %258, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 152, i32 0) to i64*), align 16
  store i32 2116, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 152, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 152, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 152, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %259 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuenowAttrE to i64*), align 8
  store i64 %259, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 153, i32 0) to i64*), align 8
  store i32 2117, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 153, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 153, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 153, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %260 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaValuetextAttrE to i64*), align 8
  store i64 %260, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 154, i32 0) to i64*), align 16
  store i32 2118, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 154, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 154, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 154, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %261 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names23kAriaVirtualcontentAttrE to i64*), align 8
  store i64 %261, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 155, i32 0) to i64*), align 8
  store i32 3919, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 155, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 155, i32 2) to i64*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 155, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  %262 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names19kAutocapitalizeAttrE to i64*), align 8
  store i64 %262, i64* bitcast (%"class.blink::QualifiedName"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 156, i32 0) to i64*), align 16
  store i32 764, i32* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 156, i32 1), align 8
  store i64 %3, i64* bitcast (%"class.WTF::AtomicString"** getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 156, i32 2) to i64*), align 16
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i64* getelementptr inbounds ([157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 156, i32 3, i32 0) to i8*), i8 0, i64 16, i1 false)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers) #12
  br label %263

263:                                              ; preds = %6, %9, %1
  %264 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map to i8*) acquire, align 8
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %270, !prof !3

266:                                              ; preds = %263
  %267 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map) #12
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %266
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map) #12
  br label %270

270:                                              ; preds = %266, %269, %263
  %271 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %270
  %274 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %274) #12
  store i32 0, i32* %2, align 4
  br label %276

275:                                              ; preds = %276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %274) #12
  br label %285

276:                                              ; preds = %273, %276
  %277 = phi i32 [ 0, %273 ], [ %283, %276 ]
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds [157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 %278, i32 0
  %280 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %279, align 8
  %281 = call { %"struct.WTF::KeyValuePair.2496"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERKS2_RjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_(%"class.WTF::HashTable.2493"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map to %"class.WTF::HashTable.2493"*), %"class.blink::QualifiedName"* dereferenceable(8) %280, i32* nonnull dereferenceable(4) %2) #12
  %282 = load i32, i32* %2, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %2, align 4
  %284 = icmp ult i32 %283, 157
  br i1 %284, label %276, label %275

285:                                              ; preds = %270, %275
  %286 = call { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable.2493"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map to %"class.WTF::HashTable.2493"*), %"class.blink::QualifiedName"* dereferenceable(8) %0) #12
  %287 = extractvalue { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } %286, 0
  %288 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map to %"struct.WTF::KeyValuePair.2496"**), align 8
  %289 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE32s_attribute_to_trigger_index_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %288, i64 %290
  %292 = icmp eq %"struct.WTF::KeyValuePair.2496"* %287, %291
  br i1 %292, label %298, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %287, i64 0, i32 1
  %295 = load i32, i32* %294, align 8
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds [157 x %"struct.blink::AttributeTriggers"], [157 x %"struct.blink::AttributeTriggers"]* @_ZZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameEE18attribute_triggers, i64 0, i64 %296
  br label %298

298:                                              ; preds = %285, %293
  %299 = phi %"struct.blink::AttributeTriggers"* [ %297, %293 ], [ null, %285 ]
  ret %"struct.blink::AttributeTriggers"* %299
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement16OnDirAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* nocapture readonly dereferenceable(32)) #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %7 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %7, align 8
  %9 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %15, i64* %16, align 8
  br label %24

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  br label %24

24:                                               ; preds = %17, %13
  %25 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %27, label %170, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %169, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %35 = bitcast %"class.WTF::StringImpl"* %34 to i8*
  %36 = icmp eq i32 %33, 3
  br i1 %36, label %37, label %169

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = load i8, i8* %35, align 1
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %108

51:                                               ; preds = %42
  %52 = getelementptr inbounds i8, i8* %35, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %98, label %108

61:                                               ; preds = %37
  %62 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, -65
  %65 = icmp ult i16 %64, 26
  %66 = zext i1 %65 to i16
  %67 = shl nuw nsw i16 %66, 5
  %68 = or i16 %67, %63
  %69 = zext i16 %68 to i32
  %70 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %108

73:                                               ; preds = %61
  %74 = getelementptr inbounds i16, i16* %62, i64 1
  %75 = load i16, i16* %74, align 2
  %76 = add i16 %75, -65
  %77 = icmp ult i16 %76, 26
  %78 = zext i1 %77 to i16
  %79 = shl nuw nsw i16 %78, 5
  %80 = or i16 %79, %75
  %81 = zext i16 %80 to i32
  %82 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %85, label %108

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1, i32 1
  %87 = bitcast i32* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = add i16 %88, -65
  %90 = icmp ult i16 %89, 26
  %91 = zext i1 %90 to i16
  %92 = shl nuw nsw i16 %91, 5
  %93 = or i16 %92, %88
  %94 = zext i16 %93 to i32
  %95 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %96 = sext i8 %95 to i32
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %170, label %108

98:                                               ; preds = %51
  %99 = getelementptr inbounds i8, i8* %35, i64 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %170, label %108

108:                                              ; preds = %51, %42, %73, %61, %98, %85
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %132, label %113

113:                                              ; preds = %108
  %114 = load i8, i8* %35, align 1
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %120 = sext i8 %119 to i32
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %169

122:                                              ; preds = %113
  %123 = getelementptr inbounds i8, i8* %35, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %171, label %169

132:                                              ; preds = %108
  %133 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %134 = load i16, i16* %133, align 2
  %135 = add i16 %134, -65
  %136 = icmp ult i16 %135, 26
  %137 = zext i1 %136 to i16
  %138 = shl nuw nsw i16 %137, 5
  %139 = or i16 %138, %134
  %140 = zext i16 %139 to i32
  %141 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %142 = sext i8 %141 to i32
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %144, label %169

144:                                              ; preds = %132
  %145 = getelementptr inbounds i16, i16* %133, i64 1
  %146 = load i16, i16* %145, align 2
  %147 = add i16 %146, -65
  %148 = icmp ult i16 %147, 26
  %149 = zext i1 %148 to i16
  %150 = shl nuw nsw i16 %149, 5
  %151 = or i16 %150, %146
  %152 = zext i16 %151 to i32
  %153 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %154 = sext i8 %153 to i32
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %169

156:                                              ; preds = %144
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1, i32 1
  %158 = bitcast i32* %157 to i16*
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %165, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br i1 %168, label %356, label %181

169:                                              ; preds = %31, %132, %144, %113, %122, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br label %181

170:                                              ; preds = %98, %24, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br label %356

171:                                              ; preds = %122
  %172 = getelementptr inbounds i8, i8* %35, i64 2
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %177, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br i1 %180, label %356, label %181

181:                                              ; preds = %156, %169, %171
  %182 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %183 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %182, align 8
  %184 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #12
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %188, label %192

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %189, align 8
  %190 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %191 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %190, i64* %191, align 8
  br label %199

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %193, align 8
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %198 = bitcast i8** %197 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %198, align 8
  br label %199

199:                                              ; preds = %192, %188
  %200 = phi i32 [ %195, %192 ], [ 0, %188 ]
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %200, i32* %201, align 8
  %202 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %202, label %345, label %203

203:                                              ; preds = %199
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %344, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1
  %210 = bitcast %"class.WTF::StringImpl"* %209 to i8*
  %211 = icmp eq i32 %208, 3
  br i1 %211, label %212, label %344

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %236, label %217

217:                                              ; preds = %212
  %218 = load i8, i8* %210, align 1
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %224 = sext i8 %223 to i32
  %225 = icmp eq i32 %222, %224
  br i1 %225, label %226, label %283

226:                                              ; preds = %217
  %227 = getelementptr inbounds i8, i8* %210, i64 1
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i64
  %230 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %273, label %283

236:                                              ; preds = %212
  %237 = bitcast %"class.WTF::StringImpl"* %209 to i16*
  %238 = load i16, i16* %237, align 2
  %239 = add i16 %238, -65
  %240 = icmp ult i16 %239, 26
  %241 = zext i1 %240 to i16
  %242 = shl nuw nsw i16 %241, 5
  %243 = or i16 %242, %238
  %244 = zext i16 %243 to i32
  %245 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %246 = sext i8 %245 to i32
  %247 = icmp eq i32 %244, %246
  br i1 %247, label %248, label %283

248:                                              ; preds = %236
  %249 = getelementptr inbounds i16, i16* %237, i64 1
  %250 = load i16, i16* %249, align 2
  %251 = add i16 %250, -65
  %252 = icmp ult i16 %251, 26
  %253 = zext i1 %252 to i16
  %254 = shl nuw nsw i16 %253, 5
  %255 = or i16 %254, %250
  %256 = zext i16 %255 to i32
  %257 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %258 = sext i8 %257 to i32
  %259 = icmp eq i32 %256, %258
  br i1 %259, label %260, label %283

260:                                              ; preds = %248
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1, i32 1
  %262 = bitcast i32* %261 to i16*
  %263 = load i16, i16* %262, align 2
  %264 = add i16 %263, -65
  %265 = icmp ult i16 %264, 26
  %266 = zext i1 %265 to i16
  %267 = shl nuw nsw i16 %266, 5
  %268 = or i16 %267, %263
  %269 = zext i16 %268 to i32
  %270 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %269, %271
  br i1 %272, label %345, label %283

273:                                              ; preds = %226
  %274 = getelementptr inbounds i8, i8* %210, i64 2
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %281 = sext i8 %280 to i32
  %282 = icmp eq i32 %279, %281
  br i1 %282, label %345, label %283

283:                                              ; preds = %226, %217, %248, %236, %273, %260
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 1
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %307, label %288

288:                                              ; preds = %283
  %289 = load i8, i8* %210, align 1
  %290 = zext i8 %289 to i64
  %291 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %295 = sext i8 %294 to i32
  %296 = icmp eq i32 %293, %295
  br i1 %296, label %297, label %344

297:                                              ; preds = %288
  %298 = getelementptr inbounds i8, i8* %210, i64 1
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i64
  %301 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %305 = sext i8 %304 to i32
  %306 = icmp eq i32 %303, %305
  br i1 %306, label %346, label %344

307:                                              ; preds = %283
  %308 = bitcast %"class.WTF::StringImpl"* %209 to i16*
  %309 = load i16, i16* %308, align 2
  %310 = add i16 %309, -65
  %311 = icmp ult i16 %310, 26
  %312 = zext i1 %311 to i16
  %313 = shl nuw nsw i16 %312, 5
  %314 = or i16 %313, %309
  %315 = zext i16 %314 to i32
  %316 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %317 = sext i8 %316 to i32
  %318 = icmp eq i32 %315, %317
  br i1 %318, label %319, label %344

319:                                              ; preds = %307
  %320 = getelementptr inbounds i16, i16* %308, i64 1
  %321 = load i16, i16* %320, align 2
  %322 = add i16 %321, -65
  %323 = icmp ult i16 %322, 26
  %324 = zext i1 %323 to i16
  %325 = shl nuw nsw i16 %324, 5
  %326 = or i16 %325, %321
  %327 = zext i16 %326 to i32
  %328 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %329 = sext i8 %328 to i32
  %330 = icmp eq i32 %327, %329
  br i1 %330, label %331, label %344

331:                                              ; preds = %319
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1, i32 1
  %333 = bitcast i32* %332 to i16*
  %334 = load i16, i16* %333, align 2
  %335 = add i16 %334, -65
  %336 = icmp ult i16 %335, 26
  %337 = zext i1 %336 to i16
  %338 = shl nuw nsw i16 %337, 5
  %339 = or i16 %338, %334
  %340 = zext i16 %339 to i32
  %341 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %342 = sext i8 %341 to i32
  %343 = icmp eq i32 %340, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  br i1 %343, label %356, label %622

344:                                              ; preds = %206, %307, %319, %288, %297, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  br label %622

345:                                              ; preds = %273, %199, %260
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  br label %356

346:                                              ; preds = %297
  %347 = getelementptr inbounds i8, i8* %210, i64 2
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i64
  %350 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %354 = sext i8 %353 to i32
  %355 = icmp eq i32 %352, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  br i1 %355, label %356, label %622

356:                                              ; preds = %331, %345, %156, %170, %346, %171
  %357 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %358 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %359 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %359, i64 0, i32 2, i32 0, i32 0
  %361 = load %"class.blink::Document"*, %"class.blink::Document"** %360, align 8
  %362 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %361, i64 0, i32 185
  store i8 1, i8* %362, align 1
  %363 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %364 = load i32, i32* %363, align 8
  %365 = and i32 %364, 134217728
  %366 = icmp ne i32 %365, 0
  %367 = call zeroext i1 @_ZNK5blink11HTMLElement16HasDirectionAutoEv(%"class.blink::HTMLElement"* %0)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %368 = call fastcc %"class.blink::HTMLElement"* @_ZN5blink12_GLOBAL__N_126GetParentForDirectionalityERKNS_11HTMLElementERb(%"class.blink::HTMLElement"* dereferenceable(104) %0, i8* nonnull dereferenceable(1) %5)
  %369 = xor i1 %366, true
  %370 = xor i1 %367, true
  %371 = and i1 %367, %366
  %372 = icmp eq %"class.blink::HTMLElement"* %368, null
  %373 = or i1 %371, %372
  br i1 %373, label %380, label %374

374:                                              ; preds = %356
  %375 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %368, i64 0, i32 0, i32 0, i32 0, i32 1
  %376 = load i32, i32* %375, align 8
  %377 = and i32 %376, 134217728
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %380, label %379

379:                                              ; preds = %374
  call void @_ZN5blink11HTMLElement54AdjustDirectionalityIfNeededAfterChildAttributeChangedEPNS_7ElementE(%"class.blink::HTMLElement"* nonnull %368, %"class.blink::Element"* undef)
  br label %380

380:                                              ; preds = %374, %356, %379
  %381 = or i1 %367, %369
  br i1 %381, label %385, label %382

382:                                              ; preds = %380
  %383 = load i32, i32* %363, align 8
  %384 = and i32 %383, -134217729
  br label %390

385:                                              ; preds = %380
  %386 = or i1 %366, %370
  br i1 %386, label %393, label %387

387:                                              ; preds = %385
  %388 = load i32, i32* %363, align 8
  %389 = or i32 %388, 134217728
  br label %390

390:                                              ; preds = %382, %387
  %391 = phi i32 [ %389, %387 ], [ %384, %382 ]
  %392 = phi i1 [ true, %387 ], [ false, %382 ]
  store i32 %391, i32* %363, align 8
  call void @_ZN5blink11HTMLElement35UpdateDescendantHasDirAutoAttributeEb(%"class.blink::HTMLElement"* %0, i1 zeroext %392)
  br label %393

393:                                              ; preds = %390, %385
  br i1 %367, label %394, label %396

394:                                              ; preds = %393
  %395 = call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* %0, %"class.blink::Node"* %357)
  br label %575

396:                                              ; preds = %393
  %397 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %398 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %397, align 8
  %399 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %398, i64 0, i32 0, i32 0, i32 0
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %399, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %554, label %402

402:                                              ; preds = %396
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 1
  %406 = bitcast %"class.WTF::StringImpl"* %405 to i8*
  %407 = icmp eq i32 %404, 3
  br i1 %407, label %408, label %554

408:                                              ; preds = %402
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %432, label %413

413:                                              ; preds = %408
  %414 = load i8, i8* %406, align 1
  %415 = zext i8 %414 to i64
  %416 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %415
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %420 = sext i8 %419 to i32
  %421 = icmp eq i32 %418, %420
  br i1 %421, label %422, label %479

422:                                              ; preds = %413
  %423 = getelementptr inbounds i8, i8* %406, i64 1
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i64
  %426 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %430 = sext i8 %429 to i32
  %431 = icmp eq i32 %428, %430
  br i1 %431, label %469, label %479

432:                                              ; preds = %408
  %433 = bitcast %"class.WTF::StringImpl"* %405 to i16*
  %434 = load i16, i16* %433, align 2
  %435 = add i16 %434, -65
  %436 = icmp ult i16 %435, 26
  %437 = zext i1 %436 to i16
  %438 = shl nuw nsw i16 %437, 5
  %439 = or i16 %438, %434
  %440 = zext i16 %439 to i32
  %441 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %442 = sext i8 %441 to i32
  %443 = icmp eq i32 %440, %442
  br i1 %443, label %444, label %479

444:                                              ; preds = %432
  %445 = getelementptr inbounds i16, i16* %433, i64 1
  %446 = load i16, i16* %445, align 2
  %447 = add i16 %446, -65
  %448 = icmp ult i16 %447, 26
  %449 = zext i1 %448 to i16
  %450 = shl nuw nsw i16 %449, 5
  %451 = or i16 %450, %446
  %452 = zext i16 %451 to i32
  %453 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %454 = sext i8 %453 to i32
  %455 = icmp eq i32 %452, %454
  br i1 %455, label %456, label %479

456:                                              ; preds = %444
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 1, i32 1
  %458 = bitcast i32* %457 to i16*
  %459 = load i16, i16* %458, align 2
  %460 = add i16 %459, -65
  %461 = icmp ult i16 %460, 26
  %462 = zext i1 %461 to i16
  %463 = shl nuw nsw i16 %462, 5
  %464 = or i16 %463, %459
  %465 = zext i16 %464 to i32
  %466 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %467 = sext i8 %466 to i32
  %468 = icmp eq i32 %465, %467
  br i1 %468, label %561, label %479

469:                                              ; preds = %422
  %470 = getelementptr inbounds i8, i8* %406, i64 2
  %471 = load i8, i8* %470, align 1
  %472 = zext i8 %471 to i64
  %473 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %472
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i32
  %476 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %477 = sext i8 %476 to i32
  %478 = icmp eq i32 %475, %477
  br i1 %478, label %561, label %479

479:                                              ; preds = %422, %413, %444, %432, %469, %456
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load atomic i32, i32* %480 monotonic, align 4
  %482 = and i32 %481, 1
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %503, label %484

484:                                              ; preds = %479
  %485 = load i8, i8* %406, align 1
  %486 = zext i8 %485 to i64
  %487 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %486
  %488 = load i8, i8* %487, align 1
  %489 = zext i8 %488 to i32
  %490 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %491 = sext i8 %490 to i32
  %492 = icmp eq i32 %489, %491
  br i1 %492, label %493, label %554

493:                                              ; preds = %484
  %494 = getelementptr inbounds i8, i8* %406, i64 1
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i64
  %497 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %496
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i32
  %500 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %501 = sext i8 %500 to i32
  %502 = icmp eq i32 %499, %501
  br i1 %502, label %542, label %554

503:                                              ; preds = %479
  %504 = bitcast %"class.WTF::StringImpl"* %405 to i16*
  %505 = load i16, i16* %504, align 2
  %506 = add i16 %505, -65
  %507 = icmp ult i16 %506, 26
  %508 = zext i1 %507 to i16
  %509 = shl nuw nsw i16 %508, 5
  %510 = or i16 %509, %505
  %511 = zext i16 %510 to i32
  %512 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %513 = sext i8 %512 to i32
  %514 = icmp eq i32 %511, %513
  br i1 %514, label %515, label %554

515:                                              ; preds = %503
  %516 = getelementptr inbounds i16, i16* %504, i64 1
  %517 = load i16, i16* %516, align 2
  %518 = add i16 %517, -65
  %519 = icmp ult i16 %518, 26
  %520 = zext i1 %519 to i16
  %521 = shl nuw nsw i16 %520, 5
  %522 = or i16 %521, %517
  %523 = zext i16 %522 to i32
  %524 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %525 = sext i8 %524 to i32
  %526 = icmp eq i32 %523, %525
  br i1 %526, label %527, label %554

527:                                              ; preds = %515
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 1, i32 1
  %529 = bitcast i32* %528 to i16*
  %530 = load i16, i16* %529, align 2
  %531 = add i16 %530, -65
  %532 = icmp ult i16 %531, 26
  %533 = zext i1 %532 to i16
  %534 = shl nuw nsw i16 %533, 5
  %535 = or i16 %534, %530
  %536 = zext i16 %535 to i32
  %537 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %538 = sext i8 %537 to i32
  %539 = icmp eq i32 %536, %538
  %540 = or i1 %372, %539
  %541 = zext i1 %539 to i8
  br i1 %540, label %561, label %555

542:                                              ; preds = %493
  %543 = getelementptr inbounds i8, i8* %406, i64 2
  %544 = load i8, i8* %543, align 1
  %545 = zext i8 %544 to i64
  %546 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %545
  %547 = load i8, i8* %546, align 1
  %548 = zext i8 %547 to i32
  %549 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %550 = sext i8 %549 to i32
  %551 = icmp eq i32 %548, %550
  %552 = or i1 %372, %551
  %553 = zext i1 %551 to i8
  br i1 %552, label %561, label %555

554:                                              ; preds = %402, %396, %493, %484, %515, %503
  br i1 %372, label %561, label %555

555:                                              ; preds = %527, %542, %554
  %556 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %368, i64 0, i32 0, i32 0, i32 0, i32 1
  %557 = load i32, i32* %556, align 8
  %558 = lshr i32 %557, 28
  %559 = trunc i32 %558 to i8
  %560 = and i8 %559, 1
  br label %561

561:                                              ; preds = %527, %542, %469, %456, %554, %555
  %562 = phi i8 [ %560, %555 ], [ 0, %554 ], [ 0, %469 ], [ 0, %456 ], [ %541, %527 ], [ %553, %542 ]
  %563 = load i8, i8* %5, align 1, !range !4
  %564 = icmp eq i8 %563, 0
  br i1 %564, label %568, label %565

565:                                              ; preds = %561
  %566 = load i32, i32* %363, align 8
  %567 = or i32 %566, 536870912
  store i32 %567, i32* %363, align 8
  br label %575

568:                                              ; preds = %561
  %569 = icmp eq i8 %562, 0
  %570 = load i32, i32* %363, align 8
  %571 = and i32 %570, -805306369
  %572 = or i32 %570, 268435456
  %573 = select i1 %569, i32 %571, i32 %572
  %574 = and i32 %573, -536870913
  store i32 %574, i32* %363, align 8
  call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* %0, i8 zeroext %562) #12
  br label %575

575:                                              ; preds = %565, %568, %394
  %576 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_css_pseudo_dir_enabled_E, align 1, !range !4
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %621, label %578

578:                                              ; preds = %575
  %579 = bitcast %"class.blink::StyleChangeReasonForTracing"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %579) #12
  %580 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %581 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %580, i64 0, i32 0, i32 0, i32 0
  %582 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %581, align 8
  %583 = icmp eq %"class.WTF::StringImpl"* %582, null
  br i1 %583, label %601, label %584

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %601

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  %592 = zext i32 %591 to i33
  %593 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %592, i33 1) #12
  %594 = extractvalue { i33, i1 } %593, 1
  %595 = extractvalue { i33, i1 } %593, 0
  %596 = icmp slt i33 %595, 0
  %597 = or i1 %594, %596
  br i1 %597, label %598, label %599, !prof !2

598:                                              ; preds = %589
  call void @llvm.trap() #12
  unreachable

599:                                              ; preds = %589
  %600 = trunc i33 %595 to i32
  store i32 %600, i32* %590, align 4
  br label %601

601:                                              ; preds = %578, %584, %599
  %602 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %602, align 8
  %603 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %582, %"class.WTF::StringImpl"** %603, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %357, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %6) #12
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %605 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %605, label %619, label %606

606:                                              ; preds = %601
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i32 %608, 2
  %610 = icmp eq i32 %609, 0
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %612 = load i32, i32* %611, align 4
  br i1 %610, label %613, label %615

613:                                              ; preds = %606
  %614 = add i32 %612, -1
  store i32 %614, i32* %611, align 4
  br label %615

615:                                              ; preds = %613, %606
  %616 = phi i32 [ %614, %613 ], [ %612, %606 ]
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %615
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #12
  br label %619

619:                                              ; preds = %601, %615, %618
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %579) #12
  %620 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %620, i32 108) #12
  br label %621

621:                                              ; preds = %575, %619
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  br label %622

622:                                              ; preds = %331, %344, %346, %621
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement17OnFormAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* nocapture readnone dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 917504
  %6 = icmp eq i32 %5, 131072
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %9 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %8) #12
  %10 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %9, i64 0, i32 8
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %8) #12
  %15 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %14, i64 0, i32 1
  %16 = bitcast %"class.blink::ListedElement.base"* %15 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement20FormAttributeChangedEv(%"class.blink::ListedElement"* %16) #12
  br label %17

17:                                               ; preds = %7, %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement18OnInertAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* nocapture readnone dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node35UpdateDistributionForUnknownReasonsEv(%"class.blink::Node"* %3) #12
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #12
  %9 = icmp eq %"class.blink::LocalFrame"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %13) #12
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %17) #12
  %19 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %10
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %23) #12
  %25 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = tail call zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"* %25) #12
  br label %27

27:                                               ; preds = %10, %20
  %28 = phi i1 [ false, %10 ], [ %26, %20 ]
  tail call void @_ZN5blink10LocalFrame10SetIsInertEb(%"class.blink::LocalFrame"* %14, i1 zeroext %28) #12
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement17OnLangAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* nocapture readnone dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %3, i32 51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement18OnNonceAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* nocapture readonly dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element8setNonceERKN3WTF12AtomicStringE(%"class.blink::Element"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %4) #12
  br label %13

13:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement21OnTabIndexAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element14ParseAttributeERKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %3, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement20OnXMLLangAttrChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element14ParseAttributeERKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %3, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  ret void
}

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink11HTMLElement25EventNameForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.blink::AttributeTriggers"* @_ZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %0)
  %3 = icmp eq %"struct.blink::AttributeTriggers"* %2, null
  %4 = getelementptr inbounds %"struct.blink::AttributeTriggers", %"struct.blink::AttributeTriggers"* %2, i64 0, i32 2
  %5 = select i1 %3, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, %"class.WTF::AtomicString"** %4
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %5, align 8
  ret %"class.WTF::AtomicString"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element16AttributeChangedERKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %3, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %59

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  %18 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = xor i1 %17, %22
  br i1 %23, label %24, label %59

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 917504
  %28 = icmp eq i32 %27, 131072
  br i1 %28, label %29, label %137

29:                                               ; preds = %24
  %30 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %3) #12
  %31 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %30, i64 0, i32 8
  %32 = load i8, i8* %31, align 4, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %137, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %3) #12
  %36 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %35, i64 0, i32 1
  %37 = bitcast %"class.blink::ListedElement.base"* %36 to %"class.blink::ListedElement"*
  %38 = bitcast %"class.blink::ListedElement.base"* %36 to void (%"class.blink::ListedElement"*)***
  %39 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %39, i64 23
  %41 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %40, align 8
  tail call void %41(%"class.blink::ListedElement"* %37) #12
  %42 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %137

45:                                               ; preds = %34
  %46 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %47 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %47, i64 138
  %49 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::HTMLElement"* %0) #12
  br i1 %50, label %51, label %137

51:                                               ; preds = %45
  %52 = tail call %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"* %3) #12
  %53 = icmp eq %"class.blink::Element"* %52, %3
  br i1 %53, label %54, label %137

54:                                               ; preds = %51
  %55 = bitcast %"class.blink::HTMLElement"* %0 to void (%"class.blink::Element"*)***
  %56 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %56, i64 101
  %58 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %57, align 8
  tail call void %58(%"class.blink::Element"* %3) #12
  br label %137

59:                                               ; preds = %12, %2
  %60 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %137

63:                                               ; preds = %59
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %66
  br i1 %67, label %68, label %82

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %70 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %69, align 8
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %68
  %75 = tail call %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"* %3) #12
  %76 = icmp eq %"class.blink::Element"* %75, %3
  br i1 %76, label %77, label %137

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::HTMLElement"* %0 to void (%"class.blink::Element"*)***
  %79 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %79, i64 101
  %81 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %80, align 8
  tail call void %81(%"class.blink::Element"* %3) #12
  br label %137

82:                                               ; preds = %68, %63
  %83 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kSpellcheckAttrE, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %85
  br i1 %86, label %87, label %101

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  %92 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %91) #12
  %93 = icmp eq %"class.blink::LocalFrame"* %92, null
  br i1 %93, label %137, label %94

94:                                               ; preds = %87
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Document"*, %"class.blink::Document"** %96, align 8
  %98 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %97) #12
  %99 = tail call dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"* %98) #12
  %100 = tail call zeroext i1 @_ZNK5blink7Element22IsSpellCheckingEnabledEv(%"class.blink::Element"* %3) #12
  tail call void @_ZN5blink12SpellChecker26RespondToChangedEnablementERKNS_11HTMLElementEb(%"class.blink::SpellChecker"* %99, %"class.blink::HTMLElement"* dereferenceable(104) %0, i1 zeroext %100) #12
  br label %137

101:                                              ; preds = %82
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %104
  br i1 %105, label %106, label %137

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %110, align 8
  %112 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %111) #12
  %113 = icmp eq %"class.blink::LocalFrame"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %106
  %115 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %116 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::Document"*, %"class.blink::Document"** %116, align 8
  %118 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %117) #12
  %119 = tail call dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"* %118) #12
  tail call void @_ZN5blink12SpellChecker31RemoveSpellingAndGrammarMarkersERKNS_11HTMLElementENS0_12ElementsTypeE(%"class.blink::SpellChecker"* %119, %"class.blink::HTMLElement"* dereferenceable(104) %0, i32 1) #12
  br label %120

120:                                              ; preds = %106, %114
  %121 = tail call %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"* %3) #12
  %122 = icmp eq %"class.blink::Element"* %121, %3
  br i1 %122, label %123, label %137

123:                                              ; preds = %120
  %124 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %125, align 8
  tail call void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"* %126, %"class.blink::Node"* %107) #12
  %127 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %128 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %128, i64 102
  %130 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::HTMLElement"* %0) #12
  br i1 %131, label %137, label %132

132:                                              ; preds = %123
  %133 = bitcast %"class.blink::HTMLElement"* %0 to void (%"class.blink::Element"*)***
  %134 = load void (%"class.blink::Element"*)**, void (%"class.blink::Element"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %134, i64 101
  %136 = load void (%"class.blink::Element"*)*, void (%"class.blink::Element"*)** %135, align 8
  tail call void %136(%"class.blink::Element"* %3) #12
  br label %137

137:                                              ; preds = %29, %24, %87, %120, %59, %94, %123, %132, %101, %74, %77, %54, %51, %45, %34
  ret void
}

declare void @_ZN5blink7Element16AttributeChangedERKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %6, %1
  %13 = phi i1 [ false, %1 ], [ %11, %6 ]
  ret i1 %13
}

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink7Element33AdjustedFocusedElementInTreeScopeEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink12SpellChecker26RespondToChangedEnablementERKNS_11HTMLElementEb(%"class.blink::SpellChecker"*, %"class.blink::HTMLElement"* dereferenceable(104), i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element22IsSpellCheckingEnabledEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink12SpellChecker31RemoveSpellingAndGrammarMarkersERKNS_11HTMLElementENS0_12ElementsTypeE(%"class.blink::SpellChecker"*, %"class.blink::HTMLElement"* dereferenceable(104), i32) local_unnamed_addr #2

declare void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = tail call %"struct.blink::AttributeTriggers"* @_ZN5blink11HTMLElement24TriggersForAttributeNameERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %4)
  %6 = icmp eq %"struct.blink::AttributeTriggers"* %5, null
  br i1 %6, label %78, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::AttributeTriggers", %"struct.blink::AttributeTriggers"* %5, i64 0, i32 2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::HTMLElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %20 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %20, i64 10
  %22 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %21, align 8
  %23 = tail call %"class.blink::ExecutionContext"* %22(%"class.blink::Node"* %18) #12
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %25 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %25, align 8
  %27 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %23, %"class.blink::QualifiedName"* dereferenceable(8) %24, %"class.WTF::AtomicString"* dereferenceable(8) %26, i32 0) #12
  %28 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %17, %"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.blink::EventListener"* %28) #12
  br label %30

30:                                               ; preds = %7, %16
  %31 = getelementptr inbounds %"struct.blink::AttributeTriggers", %"struct.blink::AttributeTriggers"* %5, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %55, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %35) #12
  %37 = icmp eq %"class.blink::ShadowRoot"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %35) #12
  %40 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %39, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 196608
  %43 = icmp eq i32 %42, 131072
  br i1 %43, label %55, label %44

44:                                               ; preds = %34, %38
  %45 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %48, i64 0, i32 2
  %50 = load i32, i32* %31, align 8
  %51 = bitcast %"class.blink::UseCounter"* %49 to void (%"class.blink::UseCounter"*, i32)***
  %52 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %52, i64 3
  %54 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %53, align 8
  tail call void %54(%"class.blink::UseCounter"* %49, i32 %50) #12
  br label %55

55:                                               ; preds = %30, %38, %44
  %56 = getelementptr inbounds %"struct.blink::AttributeTriggers", %"struct.blink::AttributeTriggers"* %5, i64 0, i32 3, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.blink::AttributeTriggers", %"struct.blink::AttributeTriggers"* %5, i64 0, i32 3, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::HTMLElement"* %0 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  %64 = bitcast i8* %63 to %"class.blink::HTMLElement"*
  %65 = and i64 %57, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %59
  %68 = bitcast i8* %63 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = add i64 %57, -1
  %71 = getelementptr i8, i8* %69, i64 %70
  %72 = bitcast i8* %71 to void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)**
  %73 = load void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)*, void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)** %72, align 8
  br label %76

74:                                               ; preds = %59
  %75 = inttoptr i64 %57 to void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)*
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* [ %73, %67 ], [ %75, %74 ]
  tail call void %77(%"class.blink::HTMLElement"* %64, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  br label %78

78:                                               ; preds = %76, %55, %2
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #2

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink11HTMLElement14TextToFragmentERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %8) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %144, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %9, i64 0, i32 0
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %144, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %22 = zext i32 %15 to i64
  br label %23

23:                                               ; preds = %18, %140
  %24 = phi i32 [ 0, %18 ], [ %142, %140 ]
  %25 = phi i16 [ 0, %18 ], [ %95, %140 ]
  %26 = icmp ult i32 %24, %15
  br i1 %26, label %27, label %94

27:                                               ; preds = %23
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  %33 = bitcast %"class.WTF::StringImpl"* %32 to i8*
  %34 = bitcast %"class.WTF::StringImpl"* %32 to i16*
  %35 = zext i32 %24 to i64
  br label %36

36:                                               ; preds = %56, %27
  %37 = phi i64 [ %35, %27 ], [ %58, %56 ]
  %38 = phi i32 [ %24, %27 ], [ %59, %56 ]
  br i1 %29, label %56, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %30, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp ult i64 %37, %41
  br i1 %42, label %43, label %56

43:                                               ; preds = %39
  %44 = load atomic i32, i32* %31 monotonic, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %33, i64 %37
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  br label %54

51:                                               ; preds = %43
  %52 = getelementptr inbounds i16, i16* %34, i64 %37
  %53 = load i16, i16* %52, align 2
  br label %54

54:                                               ; preds = %47, %51
  %55 = phi i16 [ %50, %47 ], [ %53, %51 ]
  switch i16 %55, label %56 [
    i16 13, label %61
    i16 10, label %61
  ]

56:                                               ; preds = %36, %39, %54
  %57 = phi i16 [ %55, %54 ], [ 0, %39 ], [ 0, %36 ]
  %58 = add nuw nsw i64 %37, 1
  %59 = add nuw i32 %38, 1
  %60 = icmp eq i64 %58, %22
  br i1 %60, label %63, label %36

61:                                               ; preds = %54, %54
  %62 = trunc i64 %37 to i32
  br label %63

63:                                               ; preds = %56, %61
  %64 = phi i32 [ %62, %61 ], [ %59, %56 ]
  %65 = phi i16 [ %55, %61 ], [ %57, %56 ]
  %66 = icmp ugt i32 %64, %24
  br i1 %66, label %67, label %94

67:                                               ; preds = %63
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %71 = sub i32 %64, %24
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %24, i32 %71) #12
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %20, align 8
  %73 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %70, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %74 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %73, i64 0, i32 0, i32 0
  %75 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %16, %"class.blink::Node"* %74, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #12
  br label %91

91:                                               ; preds = %67, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %92 = load i32, i32* %21, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %144

94:                                               ; preds = %23, %91, %63
  %95 = phi i16 [ %65, %91 ], [ %65, %63 ], [ %25, %23 ]
  %96 = phi i32 [ %64, %91 ], [ %64, %63 ], [ %24, %23 ]
  %97 = icmp eq i32 %96, %15
  br i1 %97, label %144, label %98

98:                                               ; preds = %94
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %100 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Document"*, %"class.blink::Document"** %100, align 8
  %102 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %101) #12
  %103 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %16, %"class.blink::Node"* %103, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  %105 = load i32, i32* %21, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %144

107:                                              ; preds = %98
  %108 = icmp eq i16 %95, 13
  br i1 %108, label %109, label %140

109:                                              ; preds = %107
  %110 = add i32 %96, 1
  %111 = icmp ult i32 %110, %15
  br i1 %111, label %112, label %140

112:                                              ; preds = %109
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp ugt i32 %117, %110
  br i1 %118, label %119, label %140

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  br i1 %123, label %131, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.WTF::StringImpl"* %124 to i8*
  %127 = zext i32 %110 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i16
  br label %136

131:                                              ; preds = %119
  %132 = bitcast %"class.WTF::StringImpl"* %124 to i16*
  %133 = zext i32 %110 to i64
  %134 = getelementptr inbounds i16, i16* %132, i64 %133
  %135 = load i16, i16* %134, align 2
  br label %136

136:                                              ; preds = %125, %131
  %137 = phi i16 [ %130, %125 ], [ %135, %131 ]
  %138 = icmp eq i16 %137, 10
  %139 = select i1 %138, i32 %110, i32 %96
  br label %140

140:                                              ; preds = %136, %112, %115, %109, %107
  %141 = phi i32 [ %96, %109 ], [ %96, %107 ], [ %96, %115 ], [ %96, %112 ], [ %139, %136 ]
  %142 = add i32 %141, 1
  %143 = icmp ult i32 %142, %15
  br i1 %143, label %23, label %144

144:                                              ; preds = %140, %94, %98, %91, %3, %13
  %145 = phi %"class.blink::DocumentFragment"* [ %9, %13 ], [ %9, %3 ], [ null, %91 ], [ null, %98 ], [ %9, %94 ], [ %9, %140 ]
  ret %"class.blink::DocumentFragment"* %145
}

declare %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* @_ZN5blink11HTMLElement19innerTextForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* %2) #12
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 32) #12
  %5 = bitcast i8* %4 to %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %36

29:                                               ; preds = %1
  %30 = getelementptr inbounds i8, i8* %4, i64 24
  %31 = bitcast i8* %30 to %"class.blink::TrustedScript"**
  store %"class.blink::TrustedScript"* null, %"class.blink::TrustedScript"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %4, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  br label %54

36:                                               ; preds = %12, %27
  %37 = getelementptr inbounds i8, i8* %4, i64 24
  %38 = bitcast i8* %37 to %"class.blink::TrustedScript"**
  store %"class.blink::TrustedScript"* null, %"class.blink::TrustedScript"** %38, align 8
  %39 = getelementptr inbounds i8, i8* %4, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  %43 = load atomic i32, i32* %13 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %36
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %36
  %51 = phi i32 [ %49, %48 ], [ %47, %36 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %54

54:                                               ; preds = %29, %50, %53
  ret %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink11HTMLElement9innerTextEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* %2) #12
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %94 [
    i32 0, label %9
    i32 1, label %50
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %13, %9
  %29 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %30 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %29, i64* %30, align 8
  br label %94

31:                                               ; preds = %18
  %32 = trunc i33 %24 to i32
  store i32 %32, i32* %19, align 4
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %34 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %35 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %36, label %94, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %94

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %94

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript", %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"* %1, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TrustedScript"*, %"class.blink::TrustedScript"** %51, align 8
  %53 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %52) #12
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %72, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #12
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #12
  unreachable

72:                                               ; preds = %57, %50
  %73 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %74 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %73, i64* %74, align 8
  br label %94

75:                                               ; preds = %62
  %76 = trunc i33 %68 to i32
  store i32 %76, i32* %63, align 4
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %78 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %79 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %78, i64* %79, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %94

94:                                               ; preds = %72, %28, %93, %90, %75, %49, %46, %31, %3
  call void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %79, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %11, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.WTF::StringImpl"* %12 to i8*
  %19 = zext i32 %15 to i64
  %20 = tail call i8* @memchr(i8* %18, i32 10, i64 %19) #13
  %21 = icmp eq i8* %20, null
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %24 = sub i64 %22, %23
  br i1 %21, label %45, label %40

25:                                               ; preds = %7
  %26 = bitcast %"class.WTF::StringImpl"* %12 to i16*
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  br label %32

32:                                               ; preds = %37, %30
  %33 = phi i64 [ %38, %37 ], [ 0, %30 ]
  %34 = getelementptr inbounds i16, i16* %26, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 10
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nuw nsw i64 %33, 1
  %39 = icmp eq i64 %38, %31
  br i1 %39, label %45, label %32

40:                                               ; preds = %32, %17
  %41 = phi i32 [ %15, %17 ], [ %28, %32 ]
  %42 = phi i64 [ %24, %17 ], [ %33, %32 ]
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %90

45:                                               ; preds = %37, %40, %13, %25, %17
  %46 = phi i32 [ 0, %13 ], [ 0, %25 ], [ %15, %17 ], [ %41, %40 ], [ %28, %37 ]
  %47 = load atomic i32, i32* %8 monotonic, align 4
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %45
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %81, label %52

52:                                               ; preds = %50
  %53 = bitcast %"class.WTF::StringImpl"* %12 to i8*
  %54 = zext i32 %46 to i64
  %55 = tail call i8* @memchr(i8* %53, i32 13, i64 %54) #13
  %56 = icmp eq i8* %55, null
  %57 = ptrtoint i8* %55 to i64
  %58 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %59 = sub i64 %57, %58
  br i1 %56, label %60, label %75

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  br label %88

62:                                               ; preds = %45
  %63 = bitcast %"class.WTF::StringImpl"* %12 to i16*
  %64 = icmp eq i32 %46, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %62
  %66 = zext i32 %46 to i64
  br label %67

67:                                               ; preds = %72, %65
  %68 = phi i64 [ %73, %72 ], [ 0, %65 ]
  %69 = getelementptr inbounds i16, i16* %63, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, 13
  br i1 %71, label %75, label %72

72:                                               ; preds = %67
  %73 = add nuw nsw i64 %68, 1
  %74 = icmp eq i64 %73, %66
  br i1 %74, label %83, label %67

75:                                               ; preds = %67, %52
  %76 = phi i64 [ %59, %52 ], [ %68, %67 ]
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %83, label %90

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  br label %86

81:                                               ; preds = %50, %62
  %82 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  br label %86

83:                                               ; preds = %72, %75
  %84 = icmp eq i32 %46, 0
  %85 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  br i1 %84, label %86, label %88

86:                                               ; preds = %81, %79, %83
  %87 = phi %"class.blink::ContainerNode"* [ %80, %79 ], [ %85, %83 ], [ %82, %81 ]
  tail call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %87, i32 0) #12
  br label %97

88:                                               ; preds = %60, %83
  %89 = phi %"class.blink::ContainerNode"* [ %61, %60 ], [ %85, %83 ]
  tail call void @_ZN5blink23ReplaceChildrenWithTextEPNS_13ContainerNodeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %89, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  br label %97

90:                                               ; preds = %75, %40
  %91 = tail call %"class.blink::DocumentFragment"* @_ZN5blink11HTMLElement14TextToFragmentERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink27ReplaceChildrenWithFragmentEPNS_13ContainerNodeEPNS_16DocumentFragmentERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %96, %"class.blink::DocumentFragment"* %91, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  br label %97

97:                                               ; preds = %90, %95, %88, %86
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #2

declare void @_ZN5blink23ReplaceChildrenWithTextEPNS_13ContainerNodeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink27ReplaceChildrenWithFragmentEPNS_13ContainerNodeEPNS_16DocumentFragmentERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::DocumentFragment"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement12setOuterTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %4) #12
  %6 = icmp eq %"class.blink::ContainerNode"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %136

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %89, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  br i1 %20, label %34, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %54, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::StringImpl"* %21 to i8*
  %28 = zext i32 %24 to i64
  %29 = tail call i8* @memchr(i8* %27, i32 13, i64 %28) #13
  %30 = icmp eq i8* %29, null
  %31 = ptrtoint i8* %29 to i64
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = sub i64 %31, %32
  br i1 %30, label %54, label %49

34:                                               ; preds = %16
  %35 = bitcast %"class.WTF::StringImpl"* %21 to i16*
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %54, label %39

39:                                               ; preds = %34
  %40 = zext i32 %37 to i64
  br label %41

41:                                               ; preds = %46, %39
  %42 = phi i64 [ %47, %46 ], [ 0, %39 ]
  %43 = getelementptr inbounds i16, i16* %35, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 13
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, %40
  br i1 %48, label %54, label %41

49:                                               ; preds = %41, %26
  %50 = phi i32 [ %24, %26 ], [ %37, %41 ]
  %51 = phi i64 [ %33, %26 ], [ %42, %41 ]
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %86

54:                                               ; preds = %46, %49, %22, %34, %26
  %55 = phi i32 [ 0, %22 ], [ 0, %34 ], [ %24, %26 ], [ %50, %49 ], [ %37, %46 ]
  %56 = load atomic i32, i32* %17 monotonic, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %54
  %60 = icmp eq i32 %55, 0
  br i1 %60, label %89, label %61

61:                                               ; preds = %59
  %62 = bitcast %"class.WTF::StringImpl"* %21 to i8*
  %63 = zext i32 %55 to i64
  %64 = tail call i8* @memchr(i8* %62, i32 10, i64 %63) #13
  %65 = icmp eq i8* %64, null
  %66 = ptrtoint i8* %64 to i64
  %67 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %68 = sub i64 %66, %67
  br i1 %65, label %89, label %82

69:                                               ; preds = %54
  %70 = bitcast %"class.WTF::StringImpl"* %21 to i16*
  %71 = icmp eq i32 %55, 0
  br i1 %71, label %89, label %72

72:                                               ; preds = %69
  %73 = zext i32 %55 to i64
  br label %74

74:                                               ; preds = %79, %72
  %75 = phi i64 [ %80, %79 ], [ 0, %72 ]
  %76 = getelementptr inbounds i16, i16* %70, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 10
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = add nuw nsw i64 %75, 1
  %81 = icmp eq i64 %80, %73
  br i1 %81, label %89, label %74

82:                                               ; preds = %74, %61
  %83 = phi i64 [ %68, %61 ], [ %75, %74 ]
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %89, label %86

86:                                               ; preds = %82, %49
  %87 = tail call %"class.blink::DocumentFragment"* @_ZN5blink11HTMLElement14TextToFragmentERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %88 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %87, i64 0, i32 0, i32 0
  br label %96

89:                                               ; preds = %79, %82, %8, %61, %69, %59
  %90 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::Document"*, %"class.blink::Document"** %92, align 8
  %94 = tail call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %93, %"class.WTF::String"* dereferenceable(8) %1) #12
  %95 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %94, i64 0, i32 0, i32 0
  br label %96

96:                                               ; preds = %89, %86
  %97 = phi %"class.blink::Node"* [ %88, %86 ], [ %95, %89 ]
  %98 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %4) #12
  %99 = icmp eq %"class.blink::ContainerNode"* %98, null
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %101

101:                                              ; preds = %96, %100
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %136

105:                                              ; preds = %101
  %106 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* nonnull %5, %"class.blink::Node"* %97, %"class.blink::Node"* %4, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  %107 = icmp eq %"class.blink::Node"* %12, null
  br i1 %107, label %122, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 4, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 12
  %116 = icmp eq i32 %115, 4
  %117 = load i32, i32* %102, align 8
  %118 = icmp eq i32 %117, 0
  %119 = and i1 %116, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %112
  %121 = bitcast %"class.blink::Node"* %110 to %"class.blink::Text"*
  tail call void @_ZN5blink21MergeWithNextTextNodeEPNS_4TextERNS_14ExceptionStateE(%"class.blink::Text"* nonnull %121, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  br label %122

122:                                              ; preds = %105, %108, %112, %120
  %123 = icmp eq %"class.blink::Node"* %10, null
  br i1 %123, label %136, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 12
  %128 = icmp eq i32 %127, 4
  %129 = load i32, i32* %102, align 8
  %130 = icmp ne i32 %129, 0
  %131 = xor i1 %128, true
  %132 = or i1 %130, %131
  br i1 %132, label %136, label %133

133:                                              ; preds = %124
  %134 = bitcast %"class.blink::Node"* %10 to %"class.blink::Text"*
  %135 = select i1 %128, %"class.blink::Text"* %134, %"class.blink::Text"* null
  tail call void @_ZN5blink21MergeWithNextTextNodeEPNS_4TextERNS_14ExceptionStateE(%"class.blink::Text"* %135, %"class.blink::ExceptionState"* dereferenceable(72) %2) #12
  br label %136

136:                                              ; preds = %124, %101, %122, %133, %7
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink21MergeWithNextTextNodeEPNS_4TextERNS_14ExceptionStateE(%"class.blink::Text"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* nocapture readnone, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HTMLDimension", align 8
  %6 = alloca %"class.blink::HTMLDimension", align 8
  %7 = bitcast %"class.blink::HTMLDimension"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = bitcast %"class.blink::HTMLDimension"* %5 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %5, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %5, i64 0, i32 1
  store double 0.000000e+00, double* %10, align 8
  %11 = bitcast %"class.blink::HTMLDimension"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = bitcast %"class.blink::HTMLDimension"* %6 to i64*
  store i64 -6148914691236517206, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %6, i64 0, i32 0
  store i32 2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %6, i64 0, i32 1
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %16 = call zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8) %15, %"class.blink::HTMLDimension"* nonnull dereferenceable(16) %5) #12
  br i1 %16, label %17, label %142

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %19 = call zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8) %18, %"class.blink::HTMLDimension"* nonnull dereferenceable(16) %6) #12
  %20 = load i32, i32* %9, align 8
  %21 = icmp eq i32 %20, 2
  %22 = and i1 %19, %21
  %23 = load i32, i32* %13, align 8
  %24 = icmp eq i32 %23, 2
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %142

26:                                               ; preds = %17
  %27 = load double, double* %10, align 8
  %28 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %27, i32 1) #12
  %29 = load double, double* %14, align 8
  %30 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %29, i32 1) #12
  %31 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %30, i64 0, i32 0, i32 0
  %32 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #12
  %33 = bitcast i8* %32 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %33, i32 2) #12
  %34 = getelementptr inbounds i8, i8* %32, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = getelementptr inbounds i8, i8* %32, i64 8
  %39 = bitcast i8* %38 to %"class.WTF::Vector.2599"*
  %40 = getelementptr inbounds i8, i8* %32, i64 20
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i8, i8* %32, i64 16
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %42, %45
  br i1 %46, label %62, label %47, !prof !2

47:                                               ; preds = %26
  %48 = bitcast i8* %38 to %"class.blink::Member.2484"**
  %49 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %48, align 8
  %50 = zext i32 %42 to i64
  %51 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %49, i64 %50
  %52 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %28 to i64
  %53 = bitcast %"class.blink::Member.2484"* %51 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %28, i64 0, i32 0, i32 0, i32 0
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #12
  br label %59

59:                                               ; preds = %56, %47
  %60 = load i32, i32* %41, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %41, align 4
  br label %65

62:                                               ; preds = %26
  %63 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %28, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2599"* %39, %"class.blink::CSSValue"* dereferenceable(3) %63) #12
  %64 = load i32, i32* %41, align 4
  br label %65

65:                                               ; preds = %59, %62
  %66 = phi i32 [ %61, %59 ], [ %64, %62 ]
  %67 = load i32, i32* %44, align 8
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %84, label %69, !prof !2

69:                                               ; preds = %65
  %70 = bitcast i8* %38 to %"class.blink::Member.2484"**
  %71 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %70, align 8
  %72 = zext i32 %66 to i64
  %73 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %71, i64 %72
  %74 = ptrtoint %"class.blink::CSSNumericLiteralValue"* %30 to i64
  %75 = bitcast %"class.blink::Member.2484"* %73 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %30, i64 0, i32 0, i32 0, i32 0
  %80 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #12
  br label %81

81:                                               ; preds = %78, %69
  %82 = load i32, i32* %41, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %41, align 4
  br label %85

84:                                               ; preds = %65
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2599"* %39, %"class.blink::CSSValue"* dereferenceable(3) %31) #12
  br label %85

85:                                               ; preds = %81, %84
  %86 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64 56) #12
  %87 = bitcast i8* %86 to %"class.blink::CSSValueList"*
  call void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"* %87, i32 0) #12
  %88 = getelementptr inbounds i8, i8* %86, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  %92 = call %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32 405) #12
  %93 = getelementptr inbounds i8, i8* %86, i64 8
  %94 = bitcast i8* %93 to %"class.WTF::Vector.2599"*
  %95 = getelementptr inbounds i8, i8* %86, i64 20
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds i8, i8* %86, i64 16
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %97, %100
  br i1 %101, label %117, label %102, !prof !2

102:                                              ; preds = %85
  %103 = bitcast i8* %93 to %"class.blink::Member.2484"**
  %104 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %103, align 8
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %104, i64 %105
  %107 = ptrtoint %"class.blink::CSSIdentifierValue"* %92 to i64
  %108 = bitcast %"class.blink::Member.2484"* %106 to i64*
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %92, i64 0, i32 0, i32 0
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #12
  br label %114

114:                                              ; preds = %111, %102
  %115 = load i32, i32* %96, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %96, align 4
  br label %120

117:                                              ; preds = %85
  %118 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %92, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2599"* %94, %"class.blink::CSSValue"* dereferenceable(3) %118) #12
  %119 = load i32, i32* %96, align 4
  br label %120

120:                                              ; preds = %114, %117
  %121 = phi i32 [ %116, %114 ], [ %119, %117 ]
  %122 = load i32, i32* %99, align 8
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %138, label %124, !prof !2

124:                                              ; preds = %120
  %125 = bitcast i8* %93 to %"class.blink::Member.2484"**
  %126 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %125, align 8
  %127 = zext i32 %121 to i64
  %128 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %126, i64 %127
  %129 = ptrtoint i8* %32 to i64
  %130 = bitcast %"class.blink::Member.2484"* %128 to i64*
  store atomic i64 %129, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %124
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #12
  br label %135

135:                                              ; preds = %133, %124
  %136 = load i32, i32* %96, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %96, align 4
  br label %140

138:                                              ; preds = %120
  %139 = bitcast i8* %32 to %"class.blink::CSSValue"*
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2599"* %94, %"class.blink::CSSValue"* dereferenceable(3) %139) #12
  br label %140

140:                                              ; preds = %135, %138
  %141 = bitcast i8* %86 to %"class.blink::CSSValue"*
  call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %3, i32 46, %"class.blink::CSSValue"* dereferenceable(3) %141, i1 zeroext false) #12
  br label %142

142:                                              ; preds = %17, %4, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLDimension"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

declare %"class.blink::CSSIdentifierValue"* @_ZN5blink18CSSIdentifierValue6CreateENS_10CSSValueIDE(i32) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %18, i64* %19, align 8
  br label %27

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  br label %27

27:                                               ; preds = %16, %20
  %28 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [10 x i8]* nonnull dereferenceable(10) @.str.7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br i1 %30, label %248, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %37, i64* %38, align 8
  br label %46

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  br label %46

46:                                               ; preds = %35, %39
  %47 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [10 x i8]* nonnull dereferenceable(10) @.str.8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  br i1 %49, label %248, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %56, i64* %57, align 8
  br label %65

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %64, align 8
  br label %65

65:                                               ; preds = %54, %58
  %66 = phi i32 [ %61, %58 ], [ 0, %54 ]
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  %68 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  br i1 %68, label %245, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %74, align 8
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %76 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %75, i64* %76, align 8
  br label %84

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %83 = bitcast i8** %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %83, align 8
  br label %84

84:                                               ; preds = %73, %77
  %85 = phi i32 [ %80, %77 ], [ 0, %73 ]
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %85, i32* %86, align 8
  %87 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [6 x i8]* nonnull dereferenceable(6) @.str.10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br i1 %87, label %245, label %88

88:                                               ; preds = %84
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %172, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %95 = bitcast %"class.WTF::StringImpl"* %94 to i8*
  %96 = icmp eq i32 %93, 3
  br i1 %96, label %97, label %170

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %121, label %102

102:                                              ; preds = %97
  %103 = load i8, i8* %95, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %109 = sext i8 %108 to i32
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %111, label %170

111:                                              ; preds = %102
  %112 = getelementptr inbounds i8, i8* %95, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %119 = sext i8 %118 to i32
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %158, label %170

121:                                              ; preds = %97
  %122 = bitcast %"class.WTF::StringImpl"* %94 to i16*
  %123 = load i16, i16* %122, align 2
  %124 = add i16 %123, -65
  %125 = icmp ult i16 %124, 26
  %126 = zext i1 %125 to i16
  %127 = shl nuw nsw i16 %126, 5
  %128 = or i16 %127, %123
  %129 = zext i16 %128 to i32
  %130 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %131 = sext i8 %130 to i32
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %133, label %170

133:                                              ; preds = %121
  %134 = getelementptr inbounds i16, i16* %122, i64 1
  %135 = load i16, i16* %134, align 2
  %136 = add i16 %135, -65
  %137 = icmp ult i16 %136, 26
  %138 = zext i1 %137 to i16
  %139 = shl nuw nsw i16 %138, 5
  %140 = or i16 %139, %135
  %141 = zext i16 %140 to i32
  %142 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %143 = sext i8 %142 to i32
  %144 = icmp eq i32 %141, %143
  br i1 %144, label %145, label %170

145:                                              ; preds = %133
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1, i32 1
  %147 = bitcast i32* %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = add i16 %148, -65
  %150 = icmp ult i16 %149, 26
  %151 = zext i1 %150 to i16
  %152 = shl nuw nsw i16 %151, 5
  %153 = or i16 %152, %148
  %154 = zext i16 %153 to i32
  %155 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %156 = sext i8 %155 to i32
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %248, label %168

158:                                              ; preds = %111
  %159 = getelementptr inbounds i8, i8* %95, i64 2
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %166 = sext i8 %165 to i32
  %167 = icmp eq i32 %164, %166
  br i1 %167, label %248, label %168

168:                                              ; preds = %145, %158
  %169 = bitcast %"class.WTF::StringView"* %8 to i8*
  br label %177

170:                                              ; preds = %91, %121, %133, %102, %111
  %171 = bitcast %"class.WTF::StringView"* %8 to i8*
  br label %177

172:                                              ; preds = %88
  %173 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #12
  %174 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %174, align 8
  %175 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %176 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %175, i64* %176, align 8
  br label %183

177:                                              ; preds = %170, %168
  %178 = phi i8* [ %171, %170 ], [ %169, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #12
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %179, align 8
  %180 = load i32, i32* %92, align 4
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %182, align 8
  br label %183

183:                                              ; preds = %172, %177
  %184 = phi i8* [ %178, %177 ], [ %173, %172 ]
  %185 = phi i32 [ %180, %177 ], [ 0, %172 ]
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %185, i32* %186, align 8
  %187 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #12
  br i1 %187, label %248, label %188

188:                                              ; preds = %183
  %189 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #12
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %192, label %196

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %193, align 8
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %195 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %194, i64* %195, align 8
  br label %203

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %197, align 8
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %202 = bitcast i8** %201 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %202, align 8
  br label %203

203:                                              ; preds = %192, %196
  %204 = phi i32 [ %199, %196 ], [ 0, %192 ]
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %204, i32* %205, align 8
  %206 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [7 x i8]* nonnull dereferenceable(7) @.str.12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #12
  br i1 %206, label %248, label %207

207:                                              ; preds = %203
  %208 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #12
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %211, label %215

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %212, align 8
  %213 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %214 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %213, i64* %214, align 8
  br label %222

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 1
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %221 = bitcast i8** %220 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %221, align 8
  br label %222

222:                                              ; preds = %211, %215
  %223 = phi i32 [ %218, %215 ], [ 0, %211 ]
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %223, i32* %224, align 8
  %225 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [7 x i8]* nonnull dereferenceable(7) @.str.13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #12
  br i1 %225, label %248, label %226

226:                                              ; preds = %222
  %227 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #12
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %230, label %234

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %231, align 8
  %232 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %233 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %232, i64* %233, align 8
  br label %241

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %235, align 8
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 1
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %240 = bitcast i8** %239 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %240, align 8
  br label %241

241:                                              ; preds = %230, %234
  %242 = phi i32 [ %237, %234 ], [ 0, %230 ]
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %242, i32* %243, align 8
  %244 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, [8 x i8]* nonnull dereferenceable(8) @.str.14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #12
  br i1 %244, label %248, label %251

245:                                              ; preds = %84, %65
  %246 = phi i32 [ 306, %65 ], [ 307, %84 ]
  %247 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %247, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 151, i32 %246) #12
  br label %248

248:                                              ; preds = %241, %27, %46, %158, %183, %203, %222, %145, %245
  %249 = phi i32 [ 302, %245 ], [ 297, %27 ], [ 303, %46 ], [ 302, %158 ], [ 304, %183 ], [ 297, %203 ], [ 296, %222 ], [ 302, %145 ], [ 300, %241 ]
  %250 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %250, %"class.blink::MutableCSSPropertyValueSet"* %2, i32 383, i32 %249) #12
  br label %251

251:                                              ; preds = %241, %248
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11HTMLElement25contentEditableNormalizedEv(%"class.blink::HTMLElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ElementData"* %7 to %"class.blink::UniqueElementData"*
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1, i32 1
  %17 = bitcast %"class.blink::Member.14"* %16 to %"class.blink::Attribute"**
  %18 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  br label %26

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1
  %23 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::Attribute"*
  %24 = lshr i32 %11, 1
  %25 = and i32 %24, 268435455
  br label %26

26:                                               ; preds = %21, %14
  %27 = phi %"class.blink::Attribute"* [ %23, %21 ], [ %18, %14 ]
  %28 = phi i32 [ %25, %21 ], [ %20, %14 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %27, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %59, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %52, %32
  %38 = phi %"class.blink::Attribute"* [ %27, %32 ], [ %53, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %34
  br i1 %41, label %55, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 1
  %54 = icmp eq %"class.blink::Attribute"* %53, %30
  br i1 %54, label %59, label %37

55:                                               ; preds = %47, %37
  %56 = icmp eq %"class.blink::Attribute"* %38, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 1
  br label %61

59:                                               ; preds = %52, %55, %26, %1
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi %"class.WTF::AtomicString"* [ %60, %59 ], [ %58, %57 ]
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %119, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  %70 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  br i1 %69, label %79, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %72, align 8
  %73 = load i32, i32* %67, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %73, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br i1 %78, label %119, label %80

79:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  br label %119

80:                                               ; preds = %71
  %81 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %85, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %87 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %86, i64* %87, align 8
  br label %95

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %94 = bitcast i8** %93 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %94, align 8
  br label %95

95:                                               ; preds = %84, %88
  %96 = phi i32 [ %91, %88 ], [ 0, %84 ]
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %96, i32* %97, align 8
  %98 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br i1 %98, label %119, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #12
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %104, align 8
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %106 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %105, i64* %106, align 8
  br label %114

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %113 = bitcast i8** %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %113, align 8
  br label %114

114:                                              ; preds = %103, %107
  %115 = phi i32 [ %110, %107 ], [ 0, %103 ]
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %115, i32* %116, align 8
  %117 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm15EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [15 x i8]* nonnull dereferenceable(15) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #12
  %118 = select i1 %117, i32 3, i32 0
  br label %119

119:                                              ; preds = %114, %95, %71, %79, %61
  %120 = phi i32 [ 0, %61 ], [ 1, %79 ], [ 1, %71 ], [ 2, %95 ], [ %118, %114 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement15contentEditableEv(%"class.blink::HTMLElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = tail call i32 @_ZNK5blink11HTMLElement25contentEditableNormalizedEv(%"class.blink::HTMLElement"* %0)
  switch i32 %3, label %8 [
    i32 0, label %4
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
  ]

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 7) #12
  br label %9

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #12
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #12
  br label %9

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #12
  br label %9

8:                                                ; preds = %1
  unreachable

9:                                                ; preds = %7, %6, %5, %4
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement18setContentEditableERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %19, i64* %20, align 8
  br label %28

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  br label %28

28:                                               ; preds = %17, %21
  %29 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %31, label %32, label %53

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %35 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %33, %"class.blink::QualifiedName"* dereferenceable(8) %34, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #12
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %32, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %304

53:                                               ; preds = %28
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %59, i64* %60, align 8
  br label %68

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %67, align 8
  br label %68

68:                                               ; preds = %57, %61
  %69 = phi i32 [ %64, %61 ], [ 0, %57 ]
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  %71 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [6 x i8]* nonnull dereferenceable(6) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br i1 %71, label %72, label %93

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %75 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %73, %"class.blink::QualifiedName"* dereferenceable(8) %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #12
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %72, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #12
  br label %304

93:                                               ; preds = %68
  %94 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %98, align 8
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %100 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %99, i64* %100, align 8
  br label %108

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 1
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %107 = bitcast i8** %106 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %107, align 8
  br label %108

108:                                              ; preds = %97, %101
  %109 = phi i32 [ %104, %101 ], [ 0, %97 ]
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %109, i32* %110, align 8
  %111 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm15EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [15 x i8]* nonnull dereferenceable(15) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  br i1 %111, label %112, label %133

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %114 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  %115 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %113, %"class.blink::QualifiedName"* dereferenceable(8) %114, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #12
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #12
  br label %132

132:                                              ; preds = %112, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12
  br label %304

133:                                              ; preds = %108
  %134 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #12
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %138, align 8
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %140 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %139, i64* %140, align 8
  br label %148

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %147 = bitcast i8** %146 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %147, align 8
  br label %148

148:                                              ; preds = %137, %141
  %149 = phi i32 [ %144, %141 ], [ 0, %137 ]
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %149, i32* %150, align 8
  %151 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [8 x i8]* nonnull dereferenceable(8) @.str.15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #12
  br i1 %151, label %152, label %155

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %154 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  call void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %153, %"class.blink::QualifiedName"* dereferenceable(8) %154) #12
  br label %304

155:                                              ; preds = %148
  %156 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #12
  %157 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #12
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %235, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %177

167:                                              ; preds = %160
  %168 = zext i32 %166 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #12
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %167
  call void @llvm.trap() #12
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %165, align 4
  br label %177

177:                                              ; preds = %175, %160
  %178 = phi i32 [ %176, %175 ], [ %166, %160 ]
  %179 = load atomic i32, i32* %161 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %192

182:                                              ; preds = %177
  %183 = zext i32 %178 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #12
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !2

189:                                              ; preds = %182
  call void @llvm.trap() #12
  unreachable

190:                                              ; preds = %182
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %165, align 4
  br label %192

192:                                              ; preds = %190, %177
  %193 = phi i32 [ %191, %190 ], [ %178, %177 ]
  %194 = load atomic i32, i32* %161 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  %198 = add i32 %193, -1
  store i32 %198, i32* %165, align 4
  br label %199

199:                                              ; preds = %197, %192
  %200 = phi i32 [ %198, %197 ], [ %193, %192 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #12
  br label %203

203:                                              ; preds = %199, %202
  %204 = load atomic i32, i32* %161 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %218

207:                                              ; preds = %203
  %208 = load i32, i32* %165, align 4
  %209 = zext i32 %208 to i33
  %210 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %209, i33 1) #12
  %211 = extractvalue { i33, i1 } %210, 1
  %212 = extractvalue { i33, i1 } %210, 0
  %213 = icmp slt i33 %212, 0
  %214 = or i1 %211, %213
  br i1 %214, label %215, label %216, !prof !2

215:                                              ; preds = %207
  call void @llvm.trap() #12
  unreachable

216:                                              ; preds = %207
  %217 = trunc i33 %212 to i32
  store i32 %217, i32* %165, align 4
  br label %218

218:                                              ; preds = %203, %216
  %219 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.16 to i64), i64* %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %220, align 8
  %221 = load atomic i32, i32* %161 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %239

224:                                              ; preds = %218
  %225 = load i32, i32* %165, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #12
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %224
  call void @llvm.trap() #12
  unreachable

233:                                              ; preds = %224
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %165, align 4
  br label %239

235:                                              ; preds = %155
  %236 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.16 to i64), i64* %236, align 8
  %237 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.17, i64 0, i64 0), i8** %238, align 8
  br label %251

239:                                              ; preds = %233, %218
  %240 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.17, i64 0, i64 0), i8** %240, align 8
  %241 = load atomic i32, i32* %161 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = load i32, i32* %165, align 4
  br i1 %243, label %245, label %247

245:                                              ; preds = %239
  %246 = add i32 %244, -1
  store i32 %246, i32* %165, align 4
  br label %247

247:                                              ; preds = %245, %239
  %248 = phi i32 [ %246, %245 ], [ %244, %239 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #12
  br label %251

251:                                              ; preds = %235, %247, %250
  %252 = phi %"class.WTF::StringImpl"** [ %237, %235 ], [ %220, %247 ], [ %220, %250 ]
  %253 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %12)
  %254 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %253, %"class.WTF::StringImpl"** %254, align 8
  %255 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %256 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %255, align 8
  %257 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %256, align 8
  call void %257(%"class.blink::ExceptionState"* %2, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %11) #12
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #12
  br label %273

273:                                              ; preds = %251, %269, %272
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #12
  br label %289

289:                                              ; preds = %273, %285, %288
  br i1 %159, label %303, label %290

290:                                              ; preds = %289
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %299

297:                                              ; preds = %290
  %298 = add i32 %296, -1
  store i32 %298, i32* %295, align 4
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi i32 [ %298, %297 ], [ %296, %290 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #12
  br label %303

303:                                              ; preds = %289, %299, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #12
  br label %304

304:                                              ; preds = %92, %152, %303, %132, %52
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink7Element15removeAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3011"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.3011"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !3

12:                                               ; preds = %1
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i64 3) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff) #12
  br label %16

16:                                               ; preds = %12, %15, %1
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23, !prof !3

19:                                               ; preds = %16
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64 4) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone) #12
  br label %23

23:                                               ; preds = %19, %22, %16
  %24 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters to i8*) acquire, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30, !prof !3

26:                                               ; preds = %23
  %27 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters) #12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i64 10) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters) #12
  br label %30

30:                                               ; preds = %26, %29, %23
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %37, !prof !3

33:                                               ; preds = %30
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i64 5) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords) #12
  br label %37

37:                                               ; preds = %33, %36, %30
  %38 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences to i8*) acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44, !prof !3

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences) #12
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0), i64 9) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences) #12
  br label %44

44:                                               ; preds = %40, %43, %37
  %45 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAutocapitalizeAttrE, align 8
  %46 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %46, align 8
  %48 = icmp eq %"class.blink::ElementData"* %47, null
  br i1 %48, label %99, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::UniqueElementData"*
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 1, i32 1
  %57 = bitcast %"class.blink::Member.14"* %56 to %"class.blink::Attribute"**
  %58 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %55, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  br label %66

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 1
  %63 = bitcast %"class.blink::ElementData"* %62 to %"class.blink::Attribute"*
  %64 = lshr i32 %51, 1
  %65 = and i32 %64, 268435455
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi %"class.blink::Attribute"* [ %63, %61 ], [ %58, %54 ]
  %68 = phi i32 [ %65, %61 ], [ %60, %54 ]
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %67, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %99, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %45, i64 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %77

77:                                               ; preds = %92, %72
  %78 = phi %"class.blink::Attribute"* [ %67, %72 ], [ %93, %92 ]
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %80, %74
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %89, %90
  br i1 %91, label %95, label %92

92:                                               ; preds = %87, %82
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 1
  %94 = icmp eq %"class.blink::Attribute"* %93, %70
  br i1 %94, label %99, label %77

95:                                               ; preds = %87, %77
  %96 = icmp eq %"class.blink::Attribute"* %78, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 0, i32 1
  br label %101

99:                                               ; preds = %92, %95, %66, %44
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %101

101:                                              ; preds = %97, %99
  %102 = phi %"class.WTF::AtomicString"* [ %100, %99 ], [ %98, %97 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %101, %106
  %111 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  br label %248

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #12
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %114, align 8
  %115 = load i32, i32* %107, align 4
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 1
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %118 = bitcast i8** %117 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %115, i32* %119, align 8
  %120 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #12
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone to %"class.WTF::StringImpl"**), align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %124, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %126 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %125, i64* %126, align 8
  br label %134

127:                                              ; preds = %112
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %133 = bitcast i8** %132 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %133, align 8
  br label %134

134:                                              ; preds = %123, %127
  %135 = phi i32 [ %130, %127 ], [ 0, %123 ]
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %135, i32* %136, align 8
  %137 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  %138 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #12
  %139 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #12
  br i1 %137, label %174, label %140

140:                                              ; preds = %134
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %144, align 8
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %145, i64* %146, align 8
  br label %154

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %153 = bitcast i8** %152 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %153, align 8
  br label %154

154:                                              ; preds = %143, %147
  %155 = phi i32 [ %150, %147 ], [ 0, %143 ]
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %155, i32* %156, align 8
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE6s_kOff to %"class.WTF::StringImpl"**), align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %160, align 8
  %161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %162 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %161, i64* %162, align 8
  br label %170

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 1
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %169 = bitcast i8** %168 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %169, align 8
  br label %170

170:                                              ; preds = %159, %163
  %171 = phi i32 [ %166, %163 ], [ 0, %159 ]
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %171, i32* %172, align 8
  %173 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #12
  br i1 %173, label %248, label %175

174:                                              ; preds = %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #12
  br label %248

175:                                              ; preds = %170
  %176 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #12
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %179, label %183

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %180, align 8
  %181 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %182 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %181, i64* %182, align 8
  br label %190

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 1
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %189 = bitcast i8** %188 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %189, align 8
  br label %190

190:                                              ; preds = %179, %183
  %191 = phi i32 [ %186, %183 ], [ 0, %179 ]
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %191, i32* %192, align 8
  %193 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #12
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters to %"class.WTF::StringImpl"**), align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %190
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %197, align 8
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %199 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %198, i64* %199, align 8
  br label %207

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %201, align 8
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 1
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %206 = bitcast i8** %205 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %206, align 8
  br label %207

207:                                              ; preds = %196, %200
  %208 = phi i32 [ %203, %200 ], [ 0, %196 ]
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %208, i32* %209, align 8
  %210 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #12
  br i1 %210, label %248, label %211

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #12
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %215, label %219

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %217, i64* %218, align 8
  br label %226

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %225 = bitcast i8** %224 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %225, align 8
  br label %226

226:                                              ; preds = %215, %219
  %227 = phi i32 [ %222, %219 ], [ 0, %215 ]
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %227, i32* %228, align 8
  %229 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #12
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords to %"class.WTF::StringImpl"**), align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %233, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %235 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %234, i64* %235, align 8
  br label %243

236:                                              ; preds = %226
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 1
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %242 = bitcast i8** %241 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %240, %"class.WTF::StringImpl"** %242, align 8
  br label %243

243:                                              ; preds = %232, %236
  %244 = phi i32 [ %239, %236 ], [ 0, %232 ]
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %244, i32* %245, align 8
  %246 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #12
  %247 = select i1 %246, %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE8s_kWords to %"class.WTF::AtomicString"*), %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE12s_kSentences to %"class.WTF::AtomicString"*)
  br label %248

248:                                              ; preds = %243, %207, %170, %174, %110
  %249 = phi %"class.WTF::AtomicString"* [ %111, %110 ], [ bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone to %"class.WTF::AtomicString"*), %174 ], [ bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE7s_kNone to %"class.WTF::AtomicString"*), %170 ], [ bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZNK5blink11HTMLElement14autocapitalizeEvE13s_kCharacters to %"class.WTF::AtomicString"*), %207 ], [ %247, %243 ]
  ret %"class.WTF::AtomicString"* %249
}

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement17setAutocapitalizeERKN3WTF12AtomicStringE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAutocapitalizeAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement27isContentEditableForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123IsEditableOrEditingHostERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123IsEditableOrEditingHostERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp eq i32 %4, 0
  %6 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLElement"*
  %7 = select i1 %5, %"class.blink::HTMLElement"* %6, %"class.blink::HTMLElement"* null
  %8 = icmp ne %"class.blink::HTMLElement"* %7, null
  br i1 %8, label %9, label %28

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink11HTMLElement25contentEditableNormalizedEv(%"class.blink::HTMLElement"* nonnull %7)
  %11 = or i32 %10, 2
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %86, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 96
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 256
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %86

26:                                               ; preds = %21, %13
  %27 = icmp eq i32 %10, 2
  br i1 %27, label %86, label %28

28:                                               ; preds = %26, %1
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #12
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %86, label %31

31:                                               ; preds = %28
  %32 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #12
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %32, i64 0, i32 0
  %34 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123IsEditableOrEditingHostERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %33)
  %35 = xor i1 %34, true
  %36 = or i1 %8, %35
  br i1 %36, label %86, label %37

37:                                               ; preds = %31
  %38 = load i32, i32* %2, align 8
  %39 = and i32 %38, 48
  %40 = icmp ne i32 %39, 32
  %41 = icmp eq %"class.blink::Node"* %0, null
  %42 = or i1 %41, %40
  br i1 %42, label %55, label %43

43:                                               ; preds = %37
  %44 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %45 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %48 = bitcast %"class.blink::Member"* %47 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br i1 %54, label %86, label %55

55:                                               ; preds = %37, %43
  %56 = and i32 %38, 12
  %57 = icmp ne i32 %56, 0
  %58 = or i1 %41, %57
  br i1 %58, label %80, label %59

59:                                               ; preds = %55
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMathTagE to %"class.blink::QualifiedName"**), align 8
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %62 = bitcast %"class.blink::Member"* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %63, %65
  br i1 %66, label %79, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, %71
  br i1 %72, label %73, label %86

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %75, %77
  br i1 %78, label %79, label %86

79:                                               ; preds = %59, %73
  br label %86

80:                                               ; preds = %55
  %81 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #12
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %81, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 48
  %85 = icmp eq i32 %84, 0
  br label %86

86:                                               ; preds = %21, %26, %67, %9, %79, %73, %31, %80, %43, %28
  %87 = phi i1 [ false, %26 ], [ false, %28 ], [ %34, %31 ], [ true, %43 ], [ %85, %80 ], [ true, %79 ], [ false, %73 ], [ true, %9 ], [ true, %21 ], [ false, %67 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %67, i64* %68, align 8
  br label %76

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  br label %76

76:                                               ; preds = %65, %69
  %77 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %77, i32* %78, align 8
  %79 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement12setDraggableEb(%"class.blink::HTMLElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = select i1 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)
  %8 = select i1 %1, i64 4, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* %7, i64 %8) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement10spellcheckEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element22IsSpellCheckingEnabledEv(%"class.blink::Element"* %2) #12
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement13setSpellcheckEb(%"class.blink::HTMLElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kSpellcheckAttrE, align 8
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = select i1 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)
  %8 = select i1 %1, i64 4, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* %7, i64 %8) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement5clickEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %2, %"class.blink::Event"* null, i32 0) #12
  ret void
}

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %3, %"class.blink::Event"* null, i32 %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11HTMLElement25GetTranslateAttributeModeEv(%"class.blink::HTMLElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kTranslateAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, %64
  %66 = icmp eq %"class.WTF::StringImpl"* %62, null
  %67 = or i1 %66, %65
  br i1 %67, label %204, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %72 = bitcast %"class.WTF::StringImpl"* %71 to i8*
  %73 = icmp eq i32 %70, 3
  br i1 %73, label %74, label %146

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %98, label %79

79:                                               ; preds = %74
  %80 = load i8, i8* %72, align 1
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %86 = sext i8 %85 to i32
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %145

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, i8* %72, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 101), align 1
  %96 = sext i8 %95 to i32
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %135, label %145

98:                                               ; preds = %74
  %99 = bitcast %"class.WTF::StringImpl"* %71 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = add i16 %100, -65
  %102 = icmp ult i16 %101, 26
  %103 = zext i1 %102 to i16
  %104 = shl nuw nsw i16 %103, 5
  %105 = or i16 %104, %100
  %106 = zext i16 %105 to i32
  %107 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %110, label %145

110:                                              ; preds = %98
  %111 = getelementptr inbounds i16, i16* %99, i64 1
  %112 = load i16, i16* %111, align 2
  %113 = add i16 %112, -65
  %114 = icmp ult i16 %113, 26
  %115 = zext i1 %114 to i16
  %116 = shl nuw nsw i16 %115, 5
  %117 = or i16 %116, %112
  %118 = zext i16 %117 to i32
  %119 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 101), align 1
  %120 = sext i8 %119 to i32
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %145

122:                                              ; preds = %110
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1, i32 1
  %124 = bitcast i32* %123 to i16*
  %125 = load i16, i16* %124, align 2
  %126 = add i16 %125, -65
  %127 = icmp ult i16 %126, 26
  %128 = zext i1 %127 to i16
  %129 = shl nuw nsw i16 %128, 5
  %130 = or i16 %129, %125
  %131 = zext i16 %130 to i32
  %132 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %204, label %145

135:                                              ; preds = %88
  %136 = getelementptr inbounds i8, i8* %72, i64 2
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %143 = sext i8 %142 to i32
  %144 = icmp eq i32 %141, %143
  br i1 %144, label %204, label %145

145:                                              ; preds = %122, %135, %98, %110, %79, %88
  br label %204

146:                                              ; preds = %68
  %147 = icmp ne i32 %70, 0
  %148 = icmp eq %"class.WTF::StringImpl"* %71, null
  %149 = or i1 %148, %147
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  br label %204

153:                                              ; preds = %146
  %154 = icmp eq i32 %70, 2
  br i1 %154, label %155, label %204

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %169, label %160

160:                                              ; preds = %155
  %161 = load i8, i8* %72, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %165, %167
  br i1 %168, label %193, label %204

169:                                              ; preds = %155
  %170 = bitcast %"class.WTF::StringImpl"* %71 to i16*
  %171 = load i16, i16* %170, align 2
  %172 = add i16 %171, -65
  %173 = icmp ult i16 %172, 26
  %174 = zext i1 %173 to i16
  %175 = shl nuw nsw i16 %174, 5
  %176 = or i16 %175, %171
  %177 = zext i16 %176 to i32
  %178 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %177, %179
  br i1 %180, label %181, label %204

181:                                              ; preds = %169
  %182 = getelementptr inbounds i16, i16* %170, i64 1
  %183 = load i16, i16* %182, align 2
  %184 = add i16 %183, -65
  %185 = icmp ult i16 %184, 26
  %186 = zext i1 %185 to i16
  %187 = shl nuw nsw i16 %186, 5
  %188 = or i16 %187, %183
  %189 = zext i16 %188 to i32
  %190 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %189, %191
  br i1 %192, label %203, label %204

193:                                              ; preds = %160
  %194 = getelementptr inbounds i8, i8* %72, i64 1
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %199, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %181, %193
  br label %204

204:                                              ; preds = %145, %160, %169, %153, %203, %193, %181, %135, %122, %150, %58
  %205 = phi i32 [ 2, %58 ], [ 0, %150 ], [ 0, %122 ], [ 0, %135 ], [ 1, %203 ], [ 2, %193 ], [ 2, %181 ], [ 2, %153 ], [ 2, %169 ], [ 2, %160 ], [ 2, %145 ]
  ret i32 %205
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement9translateEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = tail call i32 @_ZNK5blink11HTMLElement25GetTranslateAttributeModeEv(%"class.blink::HTMLElement"* nonnull %0)
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %25

6:                                                ; preds = %3, %21
  %7 = phi %"class.blink::HTMLElement"* [ %22, %21 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %8) #12
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %6, %17
  %12 = phi %"class.blink::ContainerNode"* [ %19, %17 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %19 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %18) #12
  %20 = icmp eq %"class.blink::ContainerNode"* %19, null
  br i1 %20, label %28, label %11

21:                                               ; preds = %11
  %22 = bitcast %"class.blink::ContainerNode"* %12 to %"class.blink::HTMLElement"*
  %23 = tail call i32 @_ZNK5blink11HTMLElement25GetTranslateAttributeModeEv(%"class.blink::HTMLElement"* nonnull %22)
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %6, label %25

25:                                               ; preds = %21, %3
  %26 = phi i32 [ %4, %3 ], [ %23, %21 ]
  %27 = icmp eq i32 %26, 0
  br label %28

28:                                               ; preds = %6, %17, %25, %1
  %29 = phi i1 [ true, %1 ], [ %27, %25 ], [ true, %17 ], [ true, %6 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement12setTranslateEb(%"class.blink::HTMLElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kTranslateAttrE, align 8
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = select i1 %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)
  %8 = select i1 %1, i64 3, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* %7, i64 %8) #12
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink11HTMLElement3dirEv(%"class.blink::HTMLElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %9, align 8
  %11 = icmp eq %"class.blink::ElementData"* %10, null
  br i1 %11, label %62, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %10 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.14"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1
  %26 = bitcast %"class.blink::ElementData"* %25 to %"class.blink::Attribute"*
  %27 = lshr i32 %14, 1
  %28 = and i32 %27, 268435455
  br label %29

29:                                               ; preds = %24, %17
  %30 = phi %"class.blink::Attribute"* [ %26, %24 ], [ %21, %17 ]
  %31 = phi i32 [ %28, %24 ], [ %23, %17 ]
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %55, %35
  %41 = phi %"class.blink::Attribute"* [ %30, %35 ], [ %56, %55 ]
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %37
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50, %45
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 1
  %57 = icmp eq %"class.blink::Attribute"* %56, %33
  br i1 %57, label %62, label %40

58:                                               ; preds = %50, %40
  %59 = icmp eq %"class.blink::Attribute"* %41, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 1
  br label %64

62:                                               ; preds = %55, %58, %29, %1
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi %"class.WTF::AtomicString"* [ %63, %62 ], [ %61, %60 ]
  %66 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value to i8*) acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %72, !prof !3

68:                                               ; preds = %64
  %69 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value) #12
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value) #12
  br label %72

72:                                               ; preds = %71, %68, %64
  %73 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value to i8*) acquire, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %79, !prof !3

75:                                               ; preds = %72
  %76 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value) #12
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i64 3) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value) #12
  br label %79

79:                                               ; preds = %78, %75, %72
  %80 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value to i8*) acquire, align 8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %86, !prof !3

82:                                               ; preds = %79
  %83 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value) #12
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value) #12
  br label %86

86:                                               ; preds = %85, %82, %79
  %87 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %93, i64* %94, align 8
  br label %102

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  br label %102

102:                                              ; preds = %95, %91
  %103 = phi i32 [ %98, %95 ], [ 0, %91 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %103, i32* %104, align 8
  %105 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #12
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value to %"class.WTF::StringImpl"**), align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %110, i64* %111, align 8
  br label %119

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 1
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %118 = bitcast i8** %117 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %118, align 8
  br label %119

119:                                              ; preds = %112, %108
  %120 = phi i32 [ %115, %112 ], [ 0, %108 ]
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %120, i32* %121, align 8
  %122 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  br i1 %122, label %197, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #12
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %128, align 8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %129, i64* %130, align 8
  br label %138

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %137 = bitcast i8** %136 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %137, align 8
  br label %138

138:                                              ; preds = %131, %127
  %139 = phi i32 [ %134, %131 ], [ 0, %127 ]
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %139, i32* %140, align 8
  %141 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #12
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value to %"class.WTF::StringImpl"**), align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %144, label %148

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %145, align 8
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %147 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %146, i64* %147, align 8
  br label %155

148:                                              ; preds = %138
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 1
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %154 = bitcast i8** %153 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %154, align 8
  br label %155

155:                                              ; preds = %148, %144
  %156 = phi i32 [ %151, %148 ], [ 0, %144 ]
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %156, i32* %157, align 8
  %158 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #12
  br i1 %158, label %197, label %159

159:                                              ; preds = %155
  %160 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #12
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %163, label %167

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %164, align 8
  %165 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %166 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %165, i64* %166, align 8
  br label %174

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %168, align 8
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 1
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %173 = bitcast i8** %172 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %173, align 8
  br label %174

174:                                              ; preds = %167, %163
  %175 = phi i32 [ %170, %167 ], [ 0, %163 ]
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %175, i32* %176, align 8
  %177 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #12
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value to %"class.WTF::StringImpl"**), align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %180, label %184

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %181, align 8
  %182 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %183 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %182, i64* %183, align 8
  br label %191

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %190 = bitcast i8** %189 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %190, align 8
  br label %191

191:                                              ; preds = %184, %180
  %192 = phi i32 [ %187, %184 ], [ 0, %180 ]
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %192, i32* %193, align 8
  %194 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #12
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %196 = select i1 %194, %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE12s_auto_value to %"class.WTF::AtomicString"*), %"class.WTF::AtomicString"* %195
  br label %197

197:                                              ; preds = %119, %155, %191
  %198 = phi %"class.WTF::AtomicString"* [ %196, %191 ], [ bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_ltr_value to %"class.WTF::AtomicString"*), %119 ], [ bitcast (%"class.WTF::StaticSingleton.2605"* @_ZZN5blinkL15ToValidDirValueERKN3WTF12AtomicStringEE11s_rtl_value to %"class.WTF::AtomicString"*), %155 ]
  ret %"class.WTF::AtomicString"* %198
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement6setDirERKN3WTF12AtomicStringE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::ElementInternals"* @_ZNK5blink7Element19GetElementInternalsEv(%"class.blink::Element"* %2) #12
  %4 = icmp eq %"class.blink::ElementInternals"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %3, i64 0, i32 1, i32 4, i32 0, i32 0
  %7 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::HTMLFormElement"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::HTMLFormElement"* %9
}

declare %"class.blink::ElementInternals"* @_ZNK5blink7Element19GetElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #12
  %4 = icmp eq %"class.blink::ContainerNode"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %25, %5
  %9 = phi %"class.blink::ContainerNode"* [ %3, %5 ], [ %26, %25 ]
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %8
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %15, %8
  %26 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #12
  %27 = icmp eq %"class.blink::ContainerNode"* %26, null
  br i1 %27, label %28, label %8

28:                                               ; preds = %15, %25, %1
  %29 = phi %"class.blink::ContainerNode"* [ null, %1 ], [ null, %25 ], [ %9, %15 ]
  %30 = bitcast %"class.blink::ContainerNode"* %29 to %"class.blink::HTMLFormElement"*
  ret %"class.blink::HTMLFormElement"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::Element"* %4, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #12
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 185
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %286, label %12

12:                                               ; preds = %2
  tail call void @_ZN5blink11HTMLElement48AdjustDirectionalityIfNeededAfterChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"* %0, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1)
  %13 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = icmp ult i8 %14, 2
  br i1 %15, label %16, label %286

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 134217728
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %286

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %286, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %"class.blink::Node"* %23 to %"class.blink::HTMLElement"*
  %29 = and i32 %27, 536870960
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %286

31:                                               ; preds = %25
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %36 = bitcast %"class.blink::Member"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %286, label %43

43:                                               ; preds = %31
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 3
  %46 = bitcast %"class.blink::Member.1"* %45 to %"class.blink::ElementData"**
  %47 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %46, align 8
  %48 = icmp eq %"class.blink::ElementData"* %47, null
  br i1 %48, label %99, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::UniqueElementData"*
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 1, i32 1
  %57 = bitcast %"class.blink::Member.14"* %56 to %"class.blink::Attribute"**
  %58 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %55, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  br label %66

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %47, i64 1
  %63 = bitcast %"class.blink::ElementData"* %62 to %"class.blink::Attribute"*
  %64 = lshr i32 %51, 1
  %65 = and i32 %64, 268435455
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi %"class.blink::Attribute"* [ %63, %61 ], [ %58, %54 ]
  %68 = phi i32 [ %65, %61 ], [ %60, %54 ]
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %67, i64 %69
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %99, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %44, i64 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %77

77:                                               ; preds = %92, %72
  %78 = phi %"class.blink::Attribute"* [ %67, %72 ], [ %93, %92 ]
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %80, %74
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %89, %90
  br i1 %91, label %95, label %92

92:                                               ; preds = %87, %82
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 1
  %94 = icmp eq %"class.blink::Attribute"* %93, %70
  br i1 %94, label %99, label %77

95:                                               ; preds = %87, %77
  %96 = icmp eq %"class.blink::Attribute"* %78, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %78, i64 0, i32 1
  br label %101

99:                                               ; preds = %92, %95, %66, %43
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi %"class.WTF::AtomicString"* [ %100, %99 ], [ %98, %97 ]
  %103 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #12
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %110 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %109, i64* %110, align 8
  br label %118

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 1
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %117 = bitcast i8** %116 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %117, align 8
  br label %118

118:                                              ; preds = %111, %107
  %119 = phi i32 [ %114, %111 ], [ 0, %107 ]
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %119, i32* %120, align 8
  %121 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %121, label %264, label %122

122:                                              ; preds = %118
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %263, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1
  %129 = bitcast %"class.WTF::StringImpl"* %128 to i8*
  %130 = icmp eq i32 %127, 3
  br i1 %130, label %131, label %263

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %155, label %136

136:                                              ; preds = %131
  %137 = load i8, i8* %129, align 1
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %143 = sext i8 %142 to i32
  %144 = icmp eq i32 %141, %143
  br i1 %144, label %145, label %202

145:                                              ; preds = %136
  %146 = getelementptr inbounds i8, i8* %129, i64 1
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %151, %153
  br i1 %154, label %192, label %202

155:                                              ; preds = %131
  %156 = bitcast %"class.WTF::StringImpl"* %128 to i16*
  %157 = load i16, i16* %156, align 2
  %158 = add i16 %157, -65
  %159 = icmp ult i16 %158, 26
  %160 = zext i1 %159 to i16
  %161 = shl nuw nsw i16 %160, 5
  %162 = or i16 %161, %157
  %163 = zext i16 %162 to i32
  %164 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %163, %165
  br i1 %166, label %167, label %202

167:                                              ; preds = %155
  %168 = getelementptr inbounds i16, i16* %156, i64 1
  %169 = load i16, i16* %168, align 2
  %170 = add i16 %169, -65
  %171 = icmp ult i16 %170, 26
  %172 = zext i1 %171 to i16
  %173 = shl nuw nsw i16 %172, 5
  %174 = or i16 %173, %169
  %175 = zext i16 %174 to i32
  %176 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %175, %177
  br i1 %178, label %179, label %202

179:                                              ; preds = %167
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1, i32 1
  %181 = bitcast i32* %180 to i16*
  %182 = load i16, i16* %181, align 2
  %183 = add i16 %182, -65
  %184 = icmp ult i16 %183, 26
  %185 = zext i1 %184 to i16
  %186 = shl nuw nsw i16 %185, 5
  %187 = or i16 %186, %182
  %188 = zext i16 %187 to i32
  %189 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %190 = sext i8 %189 to i32
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %264, label %202

192:                                              ; preds = %145
  %193 = getelementptr inbounds i8, i8* %129, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i64
  %196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %200 = sext i8 %199 to i32
  %201 = icmp eq i32 %198, %200
  br i1 %201, label %264, label %202

202:                                              ; preds = %145, %136, %167, %155, %192, %179
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %226, label %207

207:                                              ; preds = %202
  %208 = load i8, i8* %129, align 1
  %209 = zext i8 %208 to i64
  %210 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %214 = sext i8 %213 to i32
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %216, label %263

216:                                              ; preds = %207
  %217 = getelementptr inbounds i8, i8* %129, i64 1
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %224 = sext i8 %223 to i32
  %225 = icmp eq i32 %222, %224
  br i1 %225, label %265, label %263

226:                                              ; preds = %202
  %227 = bitcast %"class.WTF::StringImpl"* %128 to i16*
  %228 = load i16, i16* %227, align 2
  %229 = add i16 %228, -65
  %230 = icmp ult i16 %229, 26
  %231 = zext i1 %230 to i16
  %232 = shl nuw nsw i16 %231, 5
  %233 = or i16 %232, %228
  %234 = zext i16 %233 to i32
  %235 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %236 = sext i8 %235 to i32
  %237 = icmp eq i32 %234, %236
  br i1 %237, label %238, label %263

238:                                              ; preds = %226
  %239 = getelementptr inbounds i16, i16* %227, i64 1
  %240 = load i16, i16* %239, align 2
  %241 = add i16 %240, -65
  %242 = icmp ult i16 %241, 26
  %243 = zext i1 %242 to i16
  %244 = shl nuw nsw i16 %243, 5
  %245 = or i16 %244, %240
  %246 = zext i16 %245 to i32
  %247 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %246, %248
  br i1 %249, label %250, label %263

250:                                              ; preds = %238
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1, i32 1
  %252 = bitcast i32* %251 to i16*
  %253 = load i16, i16* %252, align 2
  %254 = add i16 %253, -65
  %255 = icmp ult i16 %254, 26
  %256 = zext i1 %255 to i16
  %257 = shl nuw nsw i16 %256, 5
  %258 = or i16 %257, %253
  %259 = zext i16 %258 to i32
  %260 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %261 = sext i8 %260 to i32
  %262 = icmp eq i32 %259, %261
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  br i1 %262, label %286, label %275

263:                                              ; preds = %125, %226, %238, %207, %216, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  br label %275

264:                                              ; preds = %192, %118, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  br label %286

265:                                              ; preds = %216
  %266 = getelementptr inbounds i8, i8* %129, i64 2
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %271, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  br i1 %274, label %286, label %275

275:                                              ; preds = %250, %263, %265
  %276 = load i32, i32* %17, align 8
  %277 = lshr i32 %276, 28
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  %280 = icmp eq i8 %279, 0
  %281 = load i32, i32* %26, align 8
  %282 = and i32 %281, -805306369
  %283 = or i32 %281, 268435456
  %284 = select i1 %280, i32 %282, i32 %283
  %285 = and i32 %284, -536870913
  store i32 %285, i32* %26, align 8
  call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* nonnull %28, i8 zeroext %279) #12
  br label %286

286:                                              ; preds = %25, %16, %2, %31, %21, %250, %264, %265, %275, %12
  ret void
}

declare void @_ZN5blink7Element15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::Element"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement48AdjustDirectionalityIfNeededAfterChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 134217728
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %382, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %13 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 5
  br i1 %15, label %16, label %46

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 6
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  %19 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %18, i8* nonnull %4) #12
  %20 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Node"* %21 to i1 (%"class.blink::Node"*)***
  %25 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %25, i64 41
  %27 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.blink::Node"* nonnull %21) #12
  %29 = bitcast %"class.blink::Node"* %21 to %"class.blink::CharacterData"*
  %30 = select i1 %28, %"class.blink::CharacterData"* %29, %"class.blink::CharacterData"* null
  br label %31

31:                                               ; preds = %16, %23
  %32 = phi %"class.blink::CharacterData"* [ %30, %23 ], [ null, %16 ]
  %33 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %32, i64 0, i32 2
  %38 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %37) #12
  br label %41

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %32, i64 0, i32 3
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi %"class.WTF::String"* [ %38, %36 ], [ %40, %39 ]
  %43 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %42, i8* nonnull %4) #12
  %44 = icmp eq i8 %19, %43
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  br i1 %44, label %381, label %86

46:                                               ; preds = %12
  %47 = icmp ult i8 %14, 2
  br i1 %47, label %48, label %86

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %1, i64 0, i32 2
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 12
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %86

55:                                               ; preds = %48
  %56 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  %57 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %50, i1 zeroext true) #12
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  %59 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* nonnull dereferenceable(8) %5, i8* nonnull %4) #12
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %55, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  %76 = load i8, i8* %4, align 1, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %381, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %8, align 8
  %80 = lshr i32 %79, 28
  %81 = trunc i32 %80 to i8
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %59, %82
  br i1 %83, label %381, label %84

84:                                               ; preds = %78
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  br label %86

86:                                               ; preds = %48, %84, %41, %46
  %87 = phi %"class.blink::Node"* [ %45, %41 ], [ null, %46 ], [ %85, %84 ], [ %50, %48 ]
  call void @_ZN5blink11HTMLElement35UpdateDescendantHasDirAutoAttributeEb(%"class.blink::HTMLElement"* %0, i1 zeroext true)
  %88 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %88, label %381, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %91 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %96 = bitcast %"class.WTF::StringView"* %3 to i8*
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  %100 = bitcast %"class.WTF::StringView"* %3 to i64*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %102 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %103 = sext i8 %102 to i32
  %104 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %105 = sext i8 %104 to i32
  %106 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %107 = sext i8 %106 to i32
  br label %108

108:                                              ; preds = %375, %89
  %109 = phi %"class.blink::Element"* [ %90, %89 ], [ %380, %375 ]
  %110 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %109, i64 0, i32 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 48
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %372

115:                                              ; preds = %108
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 1, i32 2
  %118 = bitcast %"class.blink::Member"* %117 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %121, %123
  br i1 %124, label %322, label %125

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 1, i32 3
  %127 = bitcast %"class.blink::Member.1"* %126 to %"class.blink::ElementData"**
  %128 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %127, align 8
  %129 = icmp eq %"class.blink::ElementData"* %128, null
  br i1 %129, label %179, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %128, i64 0, i32 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %142, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.blink::ElementData"* %128 to %"class.blink::UniqueElementData"*
  %137 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %128, i64 1, i32 1
  %138 = bitcast %"class.blink::Member.14"* %137 to %"class.blink::Attribute"**
  %139 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %136, i64 0, i32 2, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  br label %147

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %128, i64 1
  %144 = bitcast %"class.blink::ElementData"* %143 to %"class.blink::Attribute"*
  %145 = lshr i32 %132, 1
  %146 = and i32 %145, 268435455
  br label %147

147:                                              ; preds = %142, %135
  %148 = phi %"class.blink::Attribute"* [ %144, %142 ], [ %139, %135 ]
  %149 = phi i32 [ %146, %142 ], [ %141, %135 ]
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %148, i64 %150
  %152 = icmp eq i32 %149, 0
  br i1 %152, label %179, label %153

153:                                              ; preds = %147
  %154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 3, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %154, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %157

157:                                              ; preds = %172, %153
  %158 = phi %"class.blink::Attribute"* [ %148, %153 ], [ %173, %172 ]
  %159 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %159, align 8
  %161 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %160, %154
  br i1 %161, label %175, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %164, %165
  br i1 %166, label %167, label %172

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 4, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %169, %170
  br i1 %171, label %175, label %172

172:                                              ; preds = %167, %162
  %173 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %158, i64 1
  %174 = icmp eq %"class.blink::Attribute"* %173, %151
  br i1 %174, label %179, label %157

175:                                              ; preds = %167, %157
  %176 = icmp eq %"class.blink::Attribute"* %158, null
  %177 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %158, i64 0, i32 1
  %178 = select i1 %176, %"class.WTF::AtomicString"* %95, %"class.WTF::AtomicString"* %177
  br label %179

179:                                              ; preds = %172, %175, %125, %147
  %180 = phi %"class.WTF::AtomicString"* [ %95, %147 ], [ %95, %125 ], [ %178, %175 ], [ %95, %172 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  %181 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %180, i64 0, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  store i8* null, i8** %98, align 8
  %185 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %185, i64* %100, align 8
  br label %190

186:                                              ; preds = %179
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %97, align 8
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 1
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %99, align 8
  br label %190

190:                                              ; preds = %186, %184
  %191 = phi i32 [ %188, %186 ], [ 0, %184 ]
  store i32 %191, i32* %101, align 8
  %192 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %192, label %313, label %193

193:                                              ; preds = %190
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %312, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 1
  %200 = bitcast %"class.WTF::StringImpl"* %199 to i8*
  %201 = icmp eq i32 %198, 3
  br i1 %201, label %202, label %312

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %222, label %207

207:                                              ; preds = %202
  %208 = load i8, i8* %200, align 1
  %209 = zext i8 %208 to i64
  %210 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = icmp eq i32 %212, %103
  br i1 %213, label %214, label %261

214:                                              ; preds = %207
  %215 = getelementptr inbounds i8, i8* %200, i64 1
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = icmp eq i32 %220, %105
  br i1 %221, label %253, label %261

222:                                              ; preds = %202
  %223 = bitcast %"class.WTF::StringImpl"* %199 to i16*
  %224 = load i16, i16* %223, align 2
  %225 = add i16 %224, -65
  %226 = icmp ult i16 %225, 26
  %227 = zext i1 %226 to i16
  %228 = shl nuw nsw i16 %227, 5
  %229 = or i16 %228, %224
  %230 = zext i16 %229 to i32
  %231 = icmp eq i32 %230, %103
  br i1 %231, label %232, label %261

232:                                              ; preds = %222
  %233 = getelementptr inbounds i16, i16* %223, i64 1
  %234 = load i16, i16* %233, align 2
  %235 = add i16 %234, -65
  %236 = icmp ult i16 %235, 26
  %237 = zext i1 %236 to i16
  %238 = shl nuw nsw i16 %237, 5
  %239 = or i16 %238, %234
  %240 = zext i16 %239 to i32
  %241 = icmp eq i32 %240, %105
  br i1 %241, label %242, label %261

242:                                              ; preds = %232
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 1, i32 1
  %244 = bitcast i32* %243 to i16*
  %245 = load i16, i16* %244, align 2
  %246 = add i16 %245, -65
  %247 = icmp ult i16 %246, 26
  %248 = zext i1 %247 to i16
  %249 = shl nuw nsw i16 %248, 5
  %250 = or i16 %249, %245
  %251 = zext i16 %250 to i32
  %252 = icmp eq i32 %251, %107
  br i1 %252, label %313, label %261

253:                                              ; preds = %214
  %254 = getelementptr inbounds i8, i8* %200, i64 2
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, %107
  br i1 %260, label %313, label %261

261:                                              ; preds = %214, %207, %232, %222, %253, %242
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %281, label %266

266:                                              ; preds = %261
  %267 = load i8, i8* %200, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = icmp eq i32 %271, %107
  br i1 %272, label %273, label %312

273:                                              ; preds = %266
  %274 = getelementptr inbounds i8, i8* %200, i64 1
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = icmp eq i32 %279, %105
  br i1 %280, label %314, label %312

281:                                              ; preds = %261
  %282 = bitcast %"class.WTF::StringImpl"* %199 to i16*
  %283 = load i16, i16* %282, align 2
  %284 = add i16 %283, -65
  %285 = icmp ult i16 %284, 26
  %286 = zext i1 %285 to i16
  %287 = shl nuw nsw i16 %286, 5
  %288 = or i16 %287, %283
  %289 = zext i16 %288 to i32
  %290 = icmp eq i32 %289, %107
  br i1 %290, label %291, label %312

291:                                              ; preds = %281
  %292 = getelementptr inbounds i16, i16* %282, i64 1
  %293 = load i16, i16* %292, align 2
  %294 = add i16 %293, -65
  %295 = icmp ult i16 %294, 26
  %296 = zext i1 %295 to i16
  %297 = shl nuw nsw i16 %296, 5
  %298 = or i16 %297, %293
  %299 = zext i16 %298 to i32
  %300 = icmp eq i32 %299, %105
  br i1 %300, label %301, label %312

301:                                              ; preds = %291
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 1, i32 1
  %303 = bitcast i32* %302 to i16*
  %304 = load i16, i16* %303, align 2
  %305 = add i16 %304, -65
  %306 = icmp ult i16 %305, 26
  %307 = zext i1 %306 to i16
  %308 = shl nuw nsw i16 %307, 5
  %309 = or i16 %308, %304
  %310 = zext i16 %309 to i32
  %311 = icmp eq i32 %310, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br i1 %311, label %322, label %372

312:                                              ; preds = %196, %281, %291, %266, %273, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br label %372

313:                                              ; preds = %253, %190, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br label %322

314:                                              ; preds = %273
  %315 = getelementptr inbounds i8, i8* %200, i64 2
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i64
  %318 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %320, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br i1 %321, label %322, label %372

322:                                              ; preds = %115, %301, %314, %313
  %323 = bitcast %"class.blink::Element"* %109 to %"class.blink::HTMLElement"*
  %324 = icmp eq %"class.blink::Node"* %87, null
  %325 = select i1 %324, %"class.blink::Node"* %110, %"class.blink::Node"* %87
  %326 = call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* nonnull %323, %"class.blink::Node"* %325)
  br i1 %326, label %327, label %368

327:                                              ; preds = %322
  %328 = bitcast %"class.blink::StyleChangeReasonForTracing"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328) #12
  %329 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %95, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %349, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %349

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i33
  %341 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %340, i33 1) #12
  %342 = extractvalue { i33, i1 } %341, 1
  %343 = extractvalue { i33, i1 } %341, 0
  %344 = icmp slt i33 %343, 0
  %345 = or i1 %342, %344
  br i1 %345, label %346, label %347, !prof !2

346:                                              ; preds = %337
  call void @llvm.trap() #12
  unreachable

347:                                              ; preds = %337
  %348 = trunc i33 %343 to i32
  store i32 %348, i32* %338, align 4
  br label %349

349:                                              ; preds = %327, %332, %347
  %350 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %350, align 8
  %351 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %351, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %7, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %6) #12
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #12
  br label %367

367:                                              ; preds = %349, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328) #12
  br label %368

368:                                              ; preds = %367, %322
  %369 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_css_pseudo_dir_enabled_E, align 1, !range !4
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %381, label %371

371:                                              ; preds = %368
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %109, i32 108) #12
  br label %381

372:                                              ; preds = %108, %301, %312, %314
  %373 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %110) #12
  %374 = icmp eq %"class.blink::ContainerNode"* %373, null
  br i1 %374, label %381, label %375

375:                                              ; preds = %372
  %376 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %373, i64 0, i32 0, i32 1
  %377 = load i32, i32* %376, align 8
  %378 = and i32 %377, 12
  %379 = icmp eq i32 %378, 0
  %380 = bitcast %"class.blink::ContainerNode"* %373 to %"class.blink::Element"*
  br i1 %379, label %108, label %381

381:                                              ; preds = %375, %372, %86, %41, %368, %371, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %382

382:                                              ; preds = %2, %381
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement33UpdateDirectionalityAndDescendantENS_13TextDirectionE(%"class.blink::HTMLElement"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %3 [
    i8 1, label %6
    i8 0, label %10
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  br label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = or i32 %8, 268435456
  store i32 %9, i32* %7, align 8
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, -268435457
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %3, %6, %10
  %15 = phi i32 [ %5, %3 ], [ %13, %10 ], [ %9, %6 ]
  %16 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = and i32 %15, -536870913
  store i32 %17, i32* %16, align 8
  tail call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* %0, i8 zeroext %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement16HasDirectionAutoEv(%"class.blink::HTMLElement"* readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %62 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 48
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %64, %59
  %70 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  br label %90

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %61, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 1, i32 2
  %75 = bitcast %"class.blink::Member"* %74 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %78, %80
  %82 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #12
  br i1 %81, label %83, label %90

83:                                               ; preds = %71
  %84 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %86, %88
  br i1 %89, label %110, label %90

90:                                               ; preds = %69, %83, %71
  %91 = phi i8* [ %70, %69 ], [ %82, %83 ], [ %82, %71 ]
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %96, align 8
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %98 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %97, i64* %98, align 8
  br label %106

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %105 = bitcast i8** %104 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %105, align 8
  br label %106

106:                                              ; preds = %95, %99
  %107 = phi i32 [ %102, %99 ], [ 0, %95 ]
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %107, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4)
  br label %110

110:                                              ; preds = %106, %83
  %111 = phi i8* [ %82, %83 ], [ %91, %106 ]
  %112 = phi i1 [ true, %83 ], [ %109, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #12
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink11HTMLElement25ResolveAutoDirectionalityERbPNS_4NodeE(%"class.blink::HTMLElement"*, i8* nocapture dereferenceable(1), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.WTF::String", align 8
  store i8 0, i8* %1, align 1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %11, label %54, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %54

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %21 = bitcast %"class.blink::Member"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %54

28:                                               ; preds = %17
  %29 = bitcast %"class.blink::HTMLElement"* %0 to %"class.blink::HTMLInputElement"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 -86, i8* %5, align 1
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = bitcast %"class.blink::HTMLElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %32 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %32, i64 195
  %34 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %33, align 8
  %35 = tail call %"class.WTF::StringImpl"* %34(%"class.blink::HTMLInputElement"* nonnull %29) #12
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* nonnull dereferenceable(8) %6, i8* nonnull %5) #12
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  br label %619

54:                                               ; preds = %17, %3, %12
  %55 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %10, i32 0) #12
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %619, label %57

57:                                               ; preds = %54
  %58 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 98), align 2
  %59 = sext i8 %58 to i32
  %60 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %61 = sext i8 %60 to i32
  %62 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 105), align 1
  %63 = sext i8 %62 to i32
  %64 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %65 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %67 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, align 8
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %75 = bitcast %"class.WTF::StringView"* %4 to i8*
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  %79 = bitcast %"class.WTF::StringView"* %4 to i64*
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %81 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %82 = sext i8 %81 to i32
  %83 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %84 = sext i8 %83 to i32
  %85 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %86 = sext i8 %85 to i32
  %87 = bitcast %"class.WTF::String"* %8 to i8*
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %57, %616
  %90 = phi %"class.blink::Node"* [ %55, %57 ], [ %617, %616 ]
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 12
  %94 = icmp eq i32 %93, 0
  %95 = bitcast %"class.blink::Node"* %90 to %"class.blink::Element"*
  %96 = select i1 %94, %"class.blink::Element"* %95, %"class.blink::Element"* null
  %97 = bitcast %"class.blink::Node"* %90 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %98 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %98, i64 27
  %100 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %99, align 8
  %101 = call %"class.WTF::StringImpl"* %100(%"class.blink::Node"* nonnull %90) #12
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %168, label %103

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  %108 = icmp eq i32 %105, 3
  br i1 %108, label %109, label %168

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %109
  %115 = load i8, i8* %107, align 1
  %116 = zext i8 %115 to i64
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, %59
  br i1 %120, label %121, label %168

121:                                              ; preds = %114
  %122 = getelementptr inbounds i8, i8* %107, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp eq i32 %127, %61
  br i1 %128, label %160, label %168

129:                                              ; preds = %109
  %130 = bitcast %"class.WTF::StringImpl"* %106 to i16*
  %131 = load i16, i16* %130, align 2
  %132 = add i16 %131, -65
  %133 = icmp ult i16 %132, 26
  %134 = zext i1 %133 to i16
  %135 = shl nuw nsw i16 %134, 5
  %136 = or i16 %135, %131
  %137 = zext i16 %136 to i32
  %138 = icmp eq i32 %137, %59
  br i1 %138, label %139, label %168

139:                                              ; preds = %129
  %140 = getelementptr inbounds i16, i16* %130, i64 1
  %141 = load i16, i16* %140, align 2
  %142 = add i16 %141, -65
  %143 = icmp ult i16 %142, 26
  %144 = zext i1 %143 to i16
  %145 = shl nuw nsw i16 %144, 5
  %146 = or i16 %145, %141
  %147 = zext i16 %146 to i32
  %148 = icmp eq i32 %147, %61
  br i1 %148, label %149, label %168

149:                                              ; preds = %139
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1, i32 1
  %151 = bitcast i32* %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = add i16 %152, -65
  %154 = icmp ult i16 %153, 26
  %155 = zext i1 %154 to i16
  %156 = shl nuw nsw i16 %155, 5
  %157 = or i16 %156, %152
  %158 = zext i16 %157 to i32
  %159 = icmp eq i32 %158, %63
  br i1 %159, label %260, label %168

160:                                              ; preds = %121
  %161 = getelementptr inbounds i8, i8* %107, i64 2
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, %63
  br i1 %167, label %260, label %168

168:                                              ; preds = %89, %121, %114, %139, %129, %103, %149, %160
  %169 = load i32, i32* %91, align 8
  %170 = and i32 %169, 48
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %187

172:                                              ; preds = %168
  %173 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %174 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1, i32 2
  %175 = bitcast %"class.blink::Member"* %174 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %173, i64 0, i32 3, i32 0, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %178, %180
  br i1 %181, label %246, label %182

182:                                              ; preds = %172
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %178, %185
  br i1 %186, label %232, label %187

187:                                              ; preds = %168, %182
  br i1 %94, label %188, label %284

188:                                              ; preds = %187
  %189 = bitcast %"class.blink::Element"* %96 to i1 (%"class.blink::Element"*)***
  %190 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %189, align 8
  %191 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %190, i64 126
  %192 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %191, align 8
  %193 = call zeroext i1 %192(%"class.blink::Element"* nonnull %96) #12
  br i1 %193, label %218, label %194

194:                                              ; preds = %188
  %195 = bitcast %"class.blink::Element"* %96 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %196 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %195, align 8
  %197 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %196, i64 110
  %198 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %197, align 8
  %199 = call dereferenceable(8) %"class.WTF::AtomicString"* %198(%"class.blink::Element"* nonnull %96) #12
  %200 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %199, i64 0, i32 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %201, %202
  br i1 %102, label %217, label %204

204:                                              ; preds = %194
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %217

217:                                              ; preds = %194, %213, %216
  br i1 %203, label %272, label %298

218:                                              ; preds = %188
  br i1 %102, label %272, label %219

219:                                              ; preds = %218
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %272

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %272

232:                                              ; preds = %182
  br i1 %102, label %272, label %233

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %272

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %272

246:                                              ; preds = %172
  br i1 %102, label %272, label %247

247:                                              ; preds = %246
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %272

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %272

260:                                              ; preds = %160, %149
  %261 = load atomic i32, i32* %110 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %260
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %260
  %269 = phi i32 [ %267, %266 ], [ %265, %260 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %272

272:                                              ; preds = %271, %268, %259, %256, %246, %245, %242, %232, %231, %228, %218, %217
  %273 = icmp eq %"class.blink::Node"* %90, %2
  br i1 %273, label %619, label %274

274:                                              ; preds = %272, %278
  %275 = phi %"class.blink::Node"* [ %280, %278 ], [ %90, %272 ]
  %276 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %275, i32 0) #12
  %277 = icmp eq %"class.blink::Node"* %276, null
  br i1 %277, label %278, label %616

278:                                              ; preds = %274
  %279 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %275) #12
  %280 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %279, i64 0, i32 0
  %281 = icmp eq %"class.blink::ContainerNode"* %279, null
  %282 = icmp eq %"class.blink::Node"* %280, %2
  %283 = or i1 %281, %282
  br i1 %283, label %619, label %274

284:                                              ; preds = %187
  br i1 %102, label %298, label %285

285:                                              ; preds = %284
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %298

298:                                              ; preds = %217, %284, %294, %297
  %299 = load i32, i32* %91, align 8
  %300 = and i32 %299, 48
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %321

302:                                              ; preds = %298
  %303 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %304 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1, i32 2
  %305 = bitcast %"class.blink::Member"* %304 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %306 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %306, i64 0, i32 3, i32 0, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %303, i64 0, i32 3, i32 0, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp ne %"class.WTF::StringImpl"* %308, %310
  %312 = and i32 %299, 512
  %313 = icmp eq i32 %312, 0
  %314 = or i1 %313, %311
  br i1 %314, label %321, label %315

315:                                              ; preds = %302
  %316 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %90) #12
  %317 = call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %316) #12
  br i1 %317, label %320, label %318

318:                                              ; preds = %315
  %319 = load i32, i32* %91, align 8
  br label %321

320:                                              ; preds = %315
  store i8 1, i8* %1, align 1
  br label %619

321:                                              ; preds = %318, %302, %298
  %322 = phi i32 [ %319, %318 ], [ %299, %302 ], [ %299, %298 ]
  %323 = and i32 %322, 12
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %573

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 1, i32 3
  %327 = bitcast %"class.blink::Member.1"* %326 to %"class.blink::ElementData"**
  %328 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %327, align 8
  %329 = icmp eq %"class.blink::ElementData"* %328, null
  br i1 %329, label %379, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %328, i64 0, i32 0, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %342, label %335

335:                                              ; preds = %330
  %336 = bitcast %"class.blink::ElementData"* %328 to %"class.blink::UniqueElementData"*
  %337 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %328, i64 1, i32 1
  %338 = bitcast %"class.blink::Member.14"* %337 to %"class.blink::Attribute"**
  %339 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %338, align 8
  %340 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %336, i64 0, i32 2, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  br label %347

342:                                              ; preds = %330
  %343 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %328, i64 1
  %344 = bitcast %"class.blink::ElementData"* %343 to %"class.blink::Attribute"*
  %345 = lshr i32 %332, 1
  %346 = and i32 %345, 268435455
  br label %347

347:                                              ; preds = %342, %335
  %348 = phi %"class.blink::Attribute"* [ %344, %342 ], [ %339, %335 ]
  %349 = phi i32 [ %346, %342 ], [ %341, %335 ]
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %348, i64 %350
  %352 = icmp eq i32 %349, 0
  br i1 %352, label %379, label %353

353:                                              ; preds = %347
  %354 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %355 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %354, i64 0, i32 3, i32 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %354, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %357

357:                                              ; preds = %372, %353
  %358 = phi %"class.blink::Attribute"* [ %348, %353 ], [ %373, %372 ]
  %359 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %359, align 8
  %361 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %360, %354
  br i1 %361, label %375, label %362

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %360, i64 0, i32 3, i32 0, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %355, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %364, %365
  br i1 %366, label %367, label %372

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %360, i64 0, i32 4, i32 0, i32 0, i32 0
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %368, align 8
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %369, %370
  br i1 %371, label %375, label %372

372:                                              ; preds = %367, %362
  %373 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 1
  %374 = icmp eq %"class.blink::Attribute"* %373, %351
  br i1 %374, label %379, label %357

375:                                              ; preds = %367, %357
  %376 = icmp eq %"class.blink::Attribute"* %358, null
  %377 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %358, i64 0, i32 1
  %378 = select i1 %376, %"class.WTF::AtomicString"* %74, %"class.WTF::AtomicString"* %377
  br label %379

379:                                              ; preds = %372, %375, %325, %347
  %380 = phi %"class.WTF::AtomicString"* [ %74, %347 ], [ %74, %325 ], [ %378, %375 ], [ %74, %372 ]
  %381 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %380, i64 0, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %401, label %384

384:                                              ; preds = %379
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %403

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = zext i32 %391 to i33
  %393 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %392, i33 1) #12
  %394 = extractvalue { i33, i1 } %393, 1
  %395 = extractvalue { i33, i1 } %393, 0
  %396 = icmp slt i33 %395, 0
  %397 = or i1 %394, %396
  br i1 %397, label %398, label %399, !prof !2

398:                                              ; preds = %389
  call void @llvm.trap() #12
  unreachable

399:                                              ; preds = %389
  %400 = trunc i33 %395 to i32
  store i32 %400, i32* %390, align 4
  br label %403

401:                                              ; preds = %379
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  store i8* null, i8** %77, align 8
  %402 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %402, i64* %79, align 8
  br label %407

403:                                              ; preds = %384, %399
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  store %"class.WTF::StringImpl"* %382, %"class.WTF::StringImpl"** %76, align 8
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1
  store %"class.WTF::StringImpl"* %406, %"class.WTF::StringImpl"** %78, align 8
  br label %407

407:                                              ; preds = %403, %401
  %408 = phi i32 [ %405, %403 ], [ 0, %401 ]
  store i32 %408, i32* %80, align 8
  %409 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %409, label %528, label %410

410:                                              ; preds = %407
  br i1 %383, label %527, label %411

411:                                              ; preds = %410
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1
  %415 = bitcast %"class.WTF::StringImpl"* %414 to i8*
  %416 = icmp eq i32 %413, 3
  br i1 %416, label %417, label %527

417:                                              ; preds = %411
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %437, label %422

422:                                              ; preds = %417
  %423 = load i8, i8* %415, align 1
  %424 = zext i8 %423 to i64
  %425 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i32
  %428 = icmp eq i32 %427, %82
  br i1 %428, label %429, label %476

429:                                              ; preds = %422
  %430 = getelementptr inbounds i8, i8* %415, i64 1
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i64
  %433 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = icmp eq i32 %435, %84
  br i1 %436, label %468, label %476

437:                                              ; preds = %417
  %438 = bitcast %"class.WTF::StringImpl"* %414 to i16*
  %439 = load i16, i16* %438, align 2
  %440 = add i16 %439, -65
  %441 = icmp ult i16 %440, 26
  %442 = zext i1 %441 to i16
  %443 = shl nuw nsw i16 %442, 5
  %444 = or i16 %443, %439
  %445 = zext i16 %444 to i32
  %446 = icmp eq i32 %445, %82
  br i1 %446, label %447, label %476

447:                                              ; preds = %437
  %448 = getelementptr inbounds i16, i16* %438, i64 1
  %449 = load i16, i16* %448, align 2
  %450 = add i16 %449, -65
  %451 = icmp ult i16 %450, 26
  %452 = zext i1 %451 to i16
  %453 = shl nuw nsw i16 %452, 5
  %454 = or i16 %453, %449
  %455 = zext i16 %454 to i32
  %456 = icmp eq i32 %455, %84
  br i1 %456, label %457, label %476

457:                                              ; preds = %447
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1, i32 1
  %459 = bitcast i32* %458 to i16*
  %460 = load i16, i16* %459, align 2
  %461 = add i16 %460, -65
  %462 = icmp ult i16 %461, 26
  %463 = zext i1 %462 to i16
  %464 = shl nuw nsw i16 %463, 5
  %465 = or i16 %464, %460
  %466 = zext i16 %465 to i32
  %467 = icmp eq i32 %466, %86
  br i1 %467, label %528, label %476

468:                                              ; preds = %429
  %469 = getelementptr inbounds i8, i8* %415, i64 2
  %470 = load i8, i8* %469, align 1
  %471 = zext i8 %470 to i64
  %472 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %471
  %473 = load i8, i8* %472, align 1
  %474 = zext i8 %473 to i32
  %475 = icmp eq i32 %474, %86
  br i1 %475, label %528, label %476

476:                                              ; preds = %429, %422, %447, %437, %468, %457
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load atomic i32, i32* %477 monotonic, align 4
  %479 = and i32 %478, 1
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %496, label %481

481:                                              ; preds = %476
  %482 = load i8, i8* %415, align 1
  %483 = zext i8 %482 to i64
  %484 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %483
  %485 = load i8, i8* %484, align 1
  %486 = zext i8 %485 to i32
  %487 = icmp eq i32 %486, %86
  br i1 %487, label %488, label %527

488:                                              ; preds = %481
  %489 = getelementptr inbounds i8, i8* %415, i64 1
  %490 = load i8, i8* %489, align 1
  %491 = zext i8 %490 to i64
  %492 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %491
  %493 = load i8, i8* %492, align 1
  %494 = zext i8 %493 to i32
  %495 = icmp eq i32 %494, %84
  br i1 %495, label %529, label %527

496:                                              ; preds = %476
  %497 = bitcast %"class.WTF::StringImpl"* %414 to i16*
  %498 = load i16, i16* %497, align 2
  %499 = add i16 %498, -65
  %500 = icmp ult i16 %499, 26
  %501 = zext i1 %500 to i16
  %502 = shl nuw nsw i16 %501, 5
  %503 = or i16 %502, %498
  %504 = zext i16 %503 to i32
  %505 = icmp eq i32 %504, %86
  br i1 %505, label %506, label %527

506:                                              ; preds = %496
  %507 = getelementptr inbounds i16, i16* %497, i64 1
  %508 = load i16, i16* %507, align 2
  %509 = add i16 %508, -65
  %510 = icmp ult i16 %509, 26
  %511 = zext i1 %510 to i16
  %512 = shl nuw nsw i16 %511, 5
  %513 = or i16 %512, %508
  %514 = zext i16 %513 to i32
  %515 = icmp eq i32 %514, %84
  br i1 %515, label %516, label %527

516:                                              ; preds = %506
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1, i32 1
  %518 = bitcast i32* %517 to i16*
  %519 = load i16, i16* %518, align 2
  %520 = add i16 %519, -65
  %521 = icmp ult i16 %520, 26
  %522 = zext i1 %521 to i16
  %523 = shl nuw nsw i16 %522, 5
  %524 = or i16 %523, %519
  %525 = zext i16 %524 to i32
  %526 = icmp eq i32 %525, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br i1 %526, label %537, label %552

527:                                              ; preds = %411, %496, %506, %481, %488, %410
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br label %549

528:                                              ; preds = %468, %407, %457
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br label %537

529:                                              ; preds = %488
  %530 = getelementptr inbounds i8, i8* %415, i64 2
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i64
  %533 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %532
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = icmp eq i32 %535, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br i1 %536, label %537, label %552

537:                                              ; preds = %516, %528, %529
  %538 = icmp eq %"class.blink::Node"* %90, %2
  br i1 %538, label %549, label %539

539:                                              ; preds = %537, %543
  %540 = phi %"class.blink::Node"* [ %545, %543 ], [ %90, %537 ]
  %541 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %540, i32 0) #12
  %542 = icmp eq %"class.blink::Node"* %541, null
  br i1 %542, label %543, label %549

543:                                              ; preds = %539
  %544 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %540) #12
  %545 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %544, i64 0, i32 0
  %546 = icmp eq %"class.blink::ContainerNode"* %544, null
  %547 = icmp eq %"class.blink::Node"* %545, %2
  %548 = or i1 %546, %547
  br i1 %548, label %549, label %539

549:                                              ; preds = %543, %539, %537, %527
  %550 = phi i32 [ 0, %527 ], [ 2, %537 ], [ 2, %539 ], [ 2, %543 ]
  %551 = phi %"class.blink::Node"* [ %90, %527 ], [ null, %537 ], [ null, %543 ], [ %541, %539 ]
  br i1 %383, label %567, label %552

552:                                              ; preds = %529, %516, %549
  %553 = phi %"class.blink::Node"* [ %551, %549 ], [ %90, %516 ], [ %90, %529 ]
  %554 = phi i32 [ %550, %549 ], [ 0, %516 ], [ 0, %529 ]
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %552
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %552
  %564 = phi i32 [ %562, %561 ], [ %560, %552 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #12
  br label %567

567:                                              ; preds = %549, %563, %566
  %568 = phi %"class.blink::Node"* [ %551, %549 ], [ %553, %563 ], [ %553, %566 ]
  %569 = phi i32 [ %550, %549 ], [ %554, %563 ], [ %554, %566 ]
  switch i32 %569, label %619 [
    i32 0, label %570
    i32 2, label %616
  ]

570:                                              ; preds = %567
  %571 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %568, i64 0, i32 1
  %572 = load i32, i32* %571, align 8
  br label %573

573:                                              ; preds = %570, %321
  %574 = phi i32 [ %572, %570 ], [ %322, %321 ]
  %575 = phi %"class.blink::Node"* [ %568, %570 ], [ %90, %321 ]
  %576 = and i32 %574, 12
  %577 = icmp eq i32 %576, 4
  br i1 %577, label %578, label %599

578:                                              ; preds = %573
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  store i8 -86, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %579 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %575, i1 zeroext true) #12
  store %"class.WTF::StringImpl"* %579, %"class.WTF::StringImpl"** %88, align 8
  %580 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* nonnull dereferenceable(8) %8, i8* nonnull %7) #12
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %582 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %582, label %596, label %583

583:                                              ; preds = %578
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  br i1 %587, label %590, label %592

590:                                              ; preds = %583
  %591 = add i32 %589, -1
  store i32 %591, i32* %588, align 4
  br label %592

592:                                              ; preds = %590, %583
  %593 = phi i32 [ %591, %590 ], [ %589, %583 ]
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %581) #12
  br label %596

596:                                              ; preds = %578, %592, %595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  %597 = load i8, i8* %7, align 1, !range !4
  %598 = icmp eq i8 %597, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  br i1 %598, label %599, label %619

599:                                              ; preds = %596, %573
  %600 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %575, i32 0) #12
  %601 = icmp eq %"class.blink::Node"* %600, null
  br i1 %601, label %602, label %616

602:                                              ; preds = %599
  %603 = icmp eq %"class.blink::Node"* %575, null
  %604 = icmp eq %"class.blink::Node"* %575, %2
  %605 = or i1 %603, %604
  br i1 %605, label %619, label %606

606:                                              ; preds = %602, %610
  %607 = phi %"class.blink::Node"* [ %612, %610 ], [ %575, %602 ]
  %608 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %607, i32 0) #12
  %609 = icmp eq %"class.blink::Node"* %608, null
  br i1 %609, label %610, label %616

610:                                              ; preds = %606
  %611 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %607) #12
  %612 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %611, i64 0, i32 0
  %613 = icmp eq %"class.blink::ContainerNode"* %611, null
  %614 = icmp eq %"class.blink::Node"* %612, %2
  %615 = or i1 %613, %614
  br i1 %615, label %619, label %606

616:                                              ; preds = %606, %274, %567, %599
  %617 = phi %"class.blink::Node"* [ %600, %599 ], [ %568, %567 ], [ %276, %274 ], [ %608, %606 ]
  %618 = icmp eq %"class.blink::Node"* %617, null
  br i1 %618, label %619, label %89

619:                                              ; preds = %272, %602, %596, %616, %567, %610, %278, %54, %320, %53
  %620 = phi i8 [ %37, %53 ], [ 0, %320 ], [ 0, %54 ], [ 0, %278 ], [ 0, %610 ], [ 0, %272 ], [ 0, %602 ], [ %580, %596 ], [ 0, %616 ], [ undef, %567 ]
  ret i8 %620
}

declare zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement54AdjustDirectionalityIfNeededAfterChildAttributeChangedEPNS_7ElementE(%"class.blink::HTMLElement"*, %"class.blink::Element"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = call zeroext i8 @_ZNK5blink11HTMLElement25ResolveAutoDirectionalityERbPNS_4NodeE(%"class.blink::HTMLElement"* %0, i8* nonnull dereferenceable(1) %4, %"class.blink::Node"* %6)
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 28
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = icmp ne i8 %12, %7
  %14 = load i8, i8* %4, align 1
  %15 = icmp eq i8 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %377

17:                                               ; preds = %2
  switch i8 %7, label %24 [
    i8 1, label %18
    i8 0, label %20
  ]

18:                                               ; preds = %17
  %19 = or i32 %9, 268435456
  br label %22

20:                                               ; preds = %17
  %21 = and i32 %9, -268435457
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i32 [ %19, %18 ], [ %21, %20 ]
  store i32 %23, i32* %8, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %9, %17 ], [ %23, %22 ]
  %26 = and i32 %25, -536870913
  store i32 %26, i32* %8, align 8
  %27 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %27, label %377, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %35 = bitcast %"class.WTF::StringView"* %3 to i8*
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %41 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %42 = sext i8 %41 to i32
  %43 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %44 = sext i8 %43 to i32
  %45 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %46 = sext i8 %45 to i32
  br label %47

47:                                               ; preds = %371, %28
  %48 = phi %"class.blink::Element"* [ %29, %28 ], [ %376, %371 ]
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %48, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %48, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 48
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %368

54:                                               ; preds = %47
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 1, i32 2
  %57 = bitcast %"class.blink::Member"* %56 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %60, %62
  br i1 %63, label %261, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 1, i32 3
  %66 = bitcast %"class.blink::Member.1"* %65 to %"class.blink::ElementData"**
  %67 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %66, align 8
  %68 = icmp eq %"class.blink::ElementData"* %67, null
  br i1 %68, label %118, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 0, i32 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::ElementData"* %67 to %"class.blink::UniqueElementData"*
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 1, i32 1
  %77 = bitcast %"class.blink::Member.14"* %76 to %"class.blink::Attribute"**
  %78 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %75, i64 0, i32 2, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  br label %86

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 1
  %83 = bitcast %"class.blink::ElementData"* %82 to %"class.blink::Attribute"*
  %84 = lshr i32 %71, 1
  %85 = and i32 %84, 268435455
  br label %86

86:                                               ; preds = %81, %74
  %87 = phi %"class.blink::Attribute"* [ %83, %81 ], [ %78, %74 ]
  %88 = phi i32 [ %85, %81 ], [ %80, %74 ]
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %87, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %91, label %118, label %92

92:                                               ; preds = %86
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %96

96:                                               ; preds = %111, %92
  %97 = phi %"class.blink::Attribute"* [ %87, %92 ], [ %112, %111 ]
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %99, %93
  br i1 %100, label %114, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %108, %109
  br i1 %110, label %114, label %111

111:                                              ; preds = %106, %101
  %112 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 1
  %113 = icmp eq %"class.blink::Attribute"* %112, %90
  br i1 %113, label %118, label %96

114:                                              ; preds = %106, %96
  %115 = icmp eq %"class.blink::Attribute"* %97, null
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %97, i64 0, i32 1
  %117 = select i1 %115, %"class.WTF::AtomicString"* %34, %"class.WTF::AtomicString"* %116
  br label %118

118:                                              ; preds = %111, %114, %64, %86
  %119 = phi %"class.WTF::AtomicString"* [ %34, %86 ], [ %34, %64 ], [ %117, %114 ], [ %34, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %120 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  store i8* null, i8** %37, align 8
  %124 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %124, i64* %39, align 8
  br label %129

125:                                              ; preds = %118
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %36, align 8
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %38, align 8
  br label %129

129:                                              ; preds = %125, %123
  %130 = phi i32 [ %127, %125 ], [ 0, %123 ]
  store i32 %130, i32* %40, align 8
  %131 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %131, label %252, label %132

132:                                              ; preds = %129
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %251, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1
  %139 = bitcast %"class.WTF::StringImpl"* %138 to i8*
  %140 = icmp eq i32 %137, 3
  br i1 %140, label %141, label %251

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %161, label %146

146:                                              ; preds = %141
  %147 = load i8, i8* %139, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = icmp eq i32 %151, %42
  br i1 %152, label %153, label %200

153:                                              ; preds = %146
  %154 = getelementptr inbounds i8, i8* %139, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = icmp eq i32 %159, %44
  br i1 %160, label %192, label %200

161:                                              ; preds = %141
  %162 = bitcast %"class.WTF::StringImpl"* %138 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = add i16 %163, -65
  %165 = icmp ult i16 %164, 26
  %166 = zext i1 %165 to i16
  %167 = shl nuw nsw i16 %166, 5
  %168 = or i16 %167, %163
  %169 = zext i16 %168 to i32
  %170 = icmp eq i32 %169, %42
  br i1 %170, label %171, label %200

171:                                              ; preds = %161
  %172 = getelementptr inbounds i16, i16* %162, i64 1
  %173 = load i16, i16* %172, align 2
  %174 = add i16 %173, -65
  %175 = icmp ult i16 %174, 26
  %176 = zext i1 %175 to i16
  %177 = shl nuw nsw i16 %176, 5
  %178 = or i16 %177, %173
  %179 = zext i16 %178 to i32
  %180 = icmp eq i32 %179, %44
  br i1 %180, label %181, label %200

181:                                              ; preds = %171
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1, i32 1
  %183 = bitcast i32* %182 to i16*
  %184 = load i16, i16* %183, align 2
  %185 = add i16 %184, -65
  %186 = icmp ult i16 %185, 26
  %187 = zext i1 %186 to i16
  %188 = shl nuw nsw i16 %187, 5
  %189 = or i16 %188, %184
  %190 = zext i16 %189 to i32
  %191 = icmp eq i32 %190, %46
  br i1 %191, label %252, label %200

192:                                              ; preds = %153
  %193 = getelementptr inbounds i8, i8* %139, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i64
  %196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp eq i32 %198, %46
  br i1 %199, label %252, label %200

200:                                              ; preds = %153, %146, %171, %161, %192, %181
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %220, label %205

205:                                              ; preds = %200
  %206 = load i8, i8* %139, align 1
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, %46
  br i1 %211, label %212, label %251

212:                                              ; preds = %205
  %213 = getelementptr inbounds i8, i8* %139, i64 1
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, %44
  br i1 %219, label %253, label %251

220:                                              ; preds = %200
  %221 = bitcast %"class.WTF::StringImpl"* %138 to i16*
  %222 = load i16, i16* %221, align 2
  %223 = add i16 %222, -65
  %224 = icmp ult i16 %223, 26
  %225 = zext i1 %224 to i16
  %226 = shl nuw nsw i16 %225, 5
  %227 = or i16 %226, %222
  %228 = zext i16 %227 to i32
  %229 = icmp eq i32 %228, %46
  br i1 %229, label %230, label %251

230:                                              ; preds = %220
  %231 = getelementptr inbounds i16, i16* %221, i64 1
  %232 = load i16, i16* %231, align 2
  %233 = add i16 %232, -65
  %234 = icmp ult i16 %233, 26
  %235 = zext i1 %234 to i16
  %236 = shl nuw nsw i16 %235, 5
  %237 = or i16 %236, %232
  %238 = zext i16 %237 to i32
  %239 = icmp eq i32 %238, %44
  br i1 %239, label %240, label %251

240:                                              ; preds = %230
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1, i32 1
  %242 = bitcast i32* %241 to i16*
  %243 = load i16, i16* %242, align 2
  %244 = add i16 %243, -65
  %245 = icmp ult i16 %244, 26
  %246 = zext i1 %245 to i16
  %247 = shl nuw nsw i16 %246, 5
  %248 = or i16 %247, %243
  %249 = zext i16 %248 to i32
  %250 = icmp eq i32 %249, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  br i1 %250, label %261, label %368

251:                                              ; preds = %135, %220, %230, %205, %212, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  br label %368

252:                                              ; preds = %192, %129, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  br label %261

253:                                              ; preds = %212
  %254 = getelementptr inbounds i8, i8* %139, i64 2
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  br i1 %260, label %261, label %368

261:                                              ; preds = %54, %240, %253, %252
  %262 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %48, i64 0, i32 0, i32 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = and i32 %263, 48
  %265 = icmp eq i32 %264, 0
  %266 = bitcast %"class.blink::Element"* %48 to %"class.blink::HTMLElement"*
  %267 = select i1 %265, %"class.blink::HTMLElement"* %266, %"class.blink::HTMLElement"* null
  switch i8 %7, label %268 [
    i8 1, label %271
    i8 0, label %275
  ]

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %267, i64 0, i32 0, i32 0, i32 0, i32 1
  %270 = load i32, i32* %269, align 8
  br label %279

271:                                              ; preds = %261
  %272 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %267, i64 0, i32 0, i32 0, i32 0, i32 1
  %273 = load i32, i32* %272, align 8
  %274 = or i32 %273, 268435456
  store i32 %274, i32* %272, align 8
  br label %279

275:                                              ; preds = %261
  %276 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %267, i64 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = and i32 %277, -268435457
  store i32 %278, i32* %276, align 8
  br label %279

279:                                              ; preds = %268, %271, %275
  %280 = phi i32 [ %270, %268 ], [ %278, %275 ], [ %274, %271 ]
  %281 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %267, i64 0, i32 0, i32 0, i32 0, i32 1
  %282 = and i32 %280, -536870913
  store i32 %282, i32* %281, align 8
  call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* %267, i8 zeroext %7) #12
  %283 = load i32, i32* %8, align 8
  %284 = and i32 %283, 12
  %285 = icmp eq i32 %284, 0
  %286 = and i32 %283, 1
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %285, label %289, label %300

289:                                              ; preds = %279
  br i1 %287, label %296, label %290

290:                                              ; preds = %289
  %291 = bitcast %"class.blink::NodeData"** %288 to %"class.blink::NodeRareData"**
  %292 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %292, i64 0, i32 1, i32 0, i32 0
  %294 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %294, i64 0, i32 2, i32 0
  br label %315

296:                                              ; preds = %289
  %297 = bitcast %"class.blink::NodeData"** %288 to %"class.blink::NodeRenderingData"**
  %298 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %298, i64 0, i32 2, i32 0
  br label %315

300:                                              ; preds = %279
  br i1 %287, label %305, label %301

301:                                              ; preds = %300
  %302 = bitcast %"class.blink::NodeData"** %288 to %"class.blink::NodeRareData"**
  %303 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %303, i64 0, i32 1, i32 0, i32 0
  br label %307

305:                                              ; preds = %300
  %306 = bitcast %"class.blink::NodeData"** %288 to %"class.blink::NodeRenderingData"**
  br label %307

307:                                              ; preds = %305, %301
  %308 = phi %"class.blink::NodeRenderingData"** [ %304, %301 ], [ %306, %305 ]
  %309 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %309, i64 0, i32 1
  %311 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %310, align 8
  %312 = icmp eq %"class.blink::LayoutObject"* %311, null
  br i1 %312, label %377, label %313

313:                                              ; preds = %307
  %314 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 5, i32 0
  br label %315

315:                                              ; preds = %290, %296, %313
  %316 = phi %"class.blink::ComputedStyle"** [ %314, %313 ], [ %295, %290 ], [ %299, %296 ]
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %316, align 8
  %318 = icmp eq %"class.blink::ComputedStyle"* %317, null
  br i1 %318, label %377, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %317, i64 0, i32 0, i32 9
  %321 = bitcast [20 x i8]* %320 to i160*
  %322 = load i160, i160* %321, align 8
  %323 = lshr i160 %322, 115
  %324 = trunc i160 %323 to i8
  %325 = and i8 %324, 1
  %326 = icmp eq i8 %325, %7
  br i1 %326, label %377, label %327

327:                                              ; preds = %319
  %328 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328) #12
  %329 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %349, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %349

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i33
  %341 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %340, i33 1) #12
  %342 = extractvalue { i33, i1 } %341, 1
  %343 = extractvalue { i33, i1 } %341, 0
  %344 = icmp slt i33 %343, 0
  %345 = or i1 %342, %344
  br i1 %345, label %346, label %347, !prof !2

346:                                              ; preds = %337
  call void @llvm.trap() #12
  unreachable

347:                                              ; preds = %337
  %348 = trunc i33 %343 to i32
  store i32 %348, i32* %338, align 4
  br label %349

349:                                              ; preds = %327, %332, %347
  %350 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason18kWritingModeChangeE, i64 0, i64 0), i8** %350, align 8
  %351 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %351, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %49, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #12
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #12
  br label %367

367:                                              ; preds = %349, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328) #12
  br label %377

368:                                              ; preds = %47, %240, %251, %253
  %369 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %49) #12
  %370 = icmp eq %"class.blink::ContainerNode"* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %369, i64 0, i32 0, i32 1
  %373 = load i32, i32* %372, align 8
  %374 = and i32 %373, 12
  %375 = icmp eq i32 %374, 0
  %376 = bitcast %"class.blink::ContainerNode"* %369 to %"class.blink::Element"*
  br i1 %375, label %47, label %377

377:                                              ; preds = %371, %368, %24, %307, %2, %319, %315, %367
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %5 = call zeroext i8 @_ZNK5blink11HTMLElement25ResolveAutoDirectionalityERbPNS_4NodeE(%"class.blink::HTMLElement"* %0, i8* nonnull dereferenceable(1) %3, %"class.blink::Node"* %1)
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 28
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = icmp ne i8 %11, %5
  %13 = load i8, i8* %3, align 1
  %14 = icmp eq i8 %13, 0
  %15 = and i1 %14, %12
  br i1 %15, label %16, label %112

16:                                               ; preds = %2
  switch i8 %5, label %23 [
    i8 1, label %17
    i8 0, label %19
  ]

17:                                               ; preds = %16
  %18 = or i32 %8, 268435456
  br label %21

19:                                               ; preds = %16
  %20 = and i32 %8, -268435457
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i32 [ %18, %17 ], [ %20, %19 ]
  store i32 %22, i32* %7, align 8
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i32 [ %8, %16 ], [ %22, %21 ]
  %25 = and i32 %24, -536870913
  store i32 %25, i32* %7, align 8
  tail call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* %0, i8 zeroext %5) #12
  %26 = load i32, i32* %7, align 8
  %27 = and i32 %26, 12
  %28 = icmp eq i32 %27, 0
  %29 = and i32 %26, 1
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %28, label %32, label %43

32:                                               ; preds = %23
  br i1 %30, label %39, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.blink::NodeData"** %31 to %"class.blink::NodeRareData"**
  %35 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 2, i32 0
  br label %58

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::NodeData"** %31 to %"class.blink::NodeRenderingData"**
  %41 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %41, i64 0, i32 2, i32 0
  br label %58

43:                                               ; preds = %23
  br i1 %30, label %48, label %44

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::NodeData"** %31 to %"class.blink::NodeRareData"**
  %46 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %46, i64 0, i32 1, i32 0, i32 0
  br label %50

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::NodeData"** %31 to %"class.blink::NodeRenderingData"**
  br label %50

50:                                               ; preds = %48, %44
  %51 = phi %"class.blink::NodeRenderingData"** [ %47, %44 ], [ %49, %48 ]
  %52 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %52, i64 0, i32 1
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %112, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 5, i32 0
  br label %58

58:                                               ; preds = %33, %39, %56
  %59 = phi %"class.blink::ComputedStyle"** [ %57, %56 ], [ %38, %33 ], [ %42, %39 ]
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyle"* %60, null
  br i1 %61, label %112, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = lshr i160 %65, 115
  %67 = trunc i160 %66 to i8
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, %5
  br i1 %69, label %112, label %70

70:                                               ; preds = %62
  %71 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #12
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #12
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %81
  tail call void @llvm.trap() #12
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %70, %76, %91
  %94 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason18kWritingModeChangeE, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %95, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %6, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #12
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %111

111:                                              ; preds = %93, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #12
  br label %112

112:                                              ; preds = %50, %2, %58, %62, %111
  %113 = phi i1 [ true, %111 ], [ false, %62 ], [ false, %58 ], [ false, %2 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  ret i1 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement35UpdateDescendantHasDirAutoAttributeEb(%"class.blink::HTMLElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %4, i32 0) #12
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %365, label %7

7:                                                ; preds = %2
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = bitcast %"class.WTF::StringView"* %3 to i8*
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %14 = bitcast i8** %13 to %"class.WTF::StringImpl"**
  %15 = bitcast %"class.WTF::StringView"* %3 to i64*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %17 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %18 = sext i8 %17 to i32
  %19 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %20 = sext i8 %19 to i32
  %21 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %22 = sext i8 %21 to i32
  %23 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %7, %362
  %26 = phi %"class.blink::Node"* [ %5, %7 ], [ %363, %362 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %344

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 3
  %33 = bitcast %"class.blink::Member.1"* %32 to %"class.blink::ElementData"**
  %34 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %33, align 8
  %35 = icmp eq %"class.blink::ElementData"* %34, null
  br i1 %35, label %85, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::UniqueElementData"*
  %43 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1, i32 1
  %44 = bitcast %"class.blink::Member.14"* %43 to %"class.blink::Attribute"**
  %45 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %42, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1
  %50 = bitcast %"class.blink::ElementData"* %49 to %"class.blink::Attribute"*
  %51 = lshr i32 %38, 1
  %52 = and i32 %51, 268435455
  br label %53

53:                                               ; preds = %48, %41
  %54 = phi %"class.blink::Attribute"* [ %50, %48 ], [ %45, %41 ]
  %55 = phi i32 [ %52, %48 ], [ %47, %41 ]
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %85, label %59

59:                                               ; preds = %53
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %78, %59
  %64 = phi %"class.blink::Attribute"* [ %54, %59 ], [ %79, %78 ]
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %60
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, %76
  br i1 %77, label %81, label %78

78:                                               ; preds = %73, %68
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 1
  %80 = icmp eq %"class.blink::Attribute"* %79, %57
  br i1 %80, label %85, label %63

81:                                               ; preds = %73, %63
  %82 = icmp eq %"class.blink::Attribute"* %64, null
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 0, i32 1
  %84 = select i1 %82, %"class.WTF::AtomicString"* %10, %"class.WTF::AtomicString"* %83
  br label %85

85:                                               ; preds = %78, %81, %31, %53
  %86 = phi %"class.WTF::AtomicString"* [ %10, %53 ], [ %10, %31 ], [ %84, %81 ], [ %10, %78 ]
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %109

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #12
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %95
  call void @llvm.trap() #12
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %109

107:                                              ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  store i8* null, i8** %13, align 8
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %108, i64* %15, align 8
  br label %113

109:                                              ; preds = %90, %105
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %12, align 8
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %14, align 8
  br label %113

113:                                              ; preds = %109, %107
  %114 = phi i32 [ %111, %109 ], [ 0, %107 ]
  store i32 %114, i32* %16, align 8
  %115 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %115, label %234, label %116

116:                                              ; preds = %113
  br i1 %89, label %233, label %117

117:                                              ; preds = %116
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  %121 = bitcast %"class.WTF::StringImpl"* %120 to i8*
  %122 = icmp eq i32 %119, 3
  br i1 %122, label %123, label %233

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %143, label %128

128:                                              ; preds = %123
  %129 = load i8, i8* %121, align 1
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp eq i32 %133, %18
  br i1 %134, label %135, label %182

135:                                              ; preds = %128
  %136 = getelementptr inbounds i8, i8* %121, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = icmp eq i32 %141, %20
  br i1 %142, label %174, label %182

143:                                              ; preds = %123
  %144 = bitcast %"class.WTF::StringImpl"* %120 to i16*
  %145 = load i16, i16* %144, align 2
  %146 = add i16 %145, -65
  %147 = icmp ult i16 %146, 26
  %148 = zext i1 %147 to i16
  %149 = shl nuw nsw i16 %148, 5
  %150 = or i16 %149, %145
  %151 = zext i16 %150 to i32
  %152 = icmp eq i32 %151, %18
  br i1 %152, label %153, label %182

153:                                              ; preds = %143
  %154 = getelementptr inbounds i16, i16* %144, i64 1
  %155 = load i16, i16* %154, align 2
  %156 = add i16 %155, -65
  %157 = icmp ult i16 %156, 26
  %158 = zext i1 %157 to i16
  %159 = shl nuw nsw i16 %158, 5
  %160 = or i16 %159, %155
  %161 = zext i16 %160 to i32
  %162 = icmp eq i32 %161, %20
  br i1 %162, label %163, label %182

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1, i32 1
  %165 = bitcast i32* %164 to i16*
  %166 = load i16, i16* %165, align 2
  %167 = add i16 %166, -65
  %168 = icmp ult i16 %167, 26
  %169 = zext i1 %168 to i16
  %170 = shl nuw nsw i16 %169, 5
  %171 = or i16 %170, %166
  %172 = zext i16 %171 to i32
  %173 = icmp eq i32 %172, %22
  br i1 %173, label %234, label %182

174:                                              ; preds = %135
  %175 = getelementptr inbounds i8, i8* %121, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, %22
  br i1 %181, label %234, label %182

182:                                              ; preds = %135, %128, %153, %143, %174, %163
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %182
  %188 = load i8, i8* %121, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, %22
  br i1 %193, label %194, label %233

194:                                              ; preds = %187
  %195 = getelementptr inbounds i8, i8* %121, i64 1
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, %20
  br i1 %201, label %235, label %233

202:                                              ; preds = %182
  %203 = bitcast %"class.WTF::StringImpl"* %120 to i16*
  %204 = load i16, i16* %203, align 2
  %205 = add i16 %204, -65
  %206 = icmp ult i16 %205, 26
  %207 = zext i1 %206 to i16
  %208 = shl nuw nsw i16 %207, 5
  %209 = or i16 %208, %204
  %210 = zext i16 %209 to i32
  %211 = icmp eq i32 %210, %22
  br i1 %211, label %212, label %233

212:                                              ; preds = %202
  %213 = getelementptr inbounds i16, i16* %203, i64 1
  %214 = load i16, i16* %213, align 2
  %215 = add i16 %214, -65
  %216 = icmp ult i16 %215, 26
  %217 = zext i1 %216 to i16
  %218 = shl nuw nsw i16 %217, 5
  %219 = or i16 %218, %214
  %220 = zext i16 %219 to i32
  %221 = icmp eq i32 %220, %20
  br i1 %221, label %222, label %233

222:                                              ; preds = %212
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1, i32 1
  %224 = bitcast i32* %223 to i16*
  %225 = load i16, i16* %224, align 2
  %226 = add i16 %225, -65
  %227 = icmp ult i16 %226, 26
  %228 = zext i1 %227 to i16
  %229 = shl nuw nsw i16 %228, 5
  %230 = or i16 %229, %225
  %231 = zext i16 %230 to i32
  %232 = icmp eq i32 %231, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %232, label %243, label %255

233:                                              ; preds = %117, %202, %212, %187, %194, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %255

234:                                              ; preds = %174, %113, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %243

235:                                              ; preds = %194
  %236 = getelementptr inbounds i8, i8* %121, i64 2
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp eq i32 %241, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br i1 %242, label %243, label %255

243:                                              ; preds = %222, %234, %235
  %244 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %244, label %326, label %245

245:                                              ; preds = %243, %249
  %246 = phi %"class.blink::Node"* [ %251, %249 ], [ %26, %243 ]
  %247 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %246, i32 0) #12
  %248 = icmp eq %"class.blink::Node"* %247, null
  br i1 %248, label %249, label %326

249:                                              ; preds = %245
  %250 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %246) #12
  %251 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %250, i64 0, i32 0
  %252 = icmp eq %"class.blink::ContainerNode"* %250, null
  %253 = icmp eq %"class.blink::Node"* %251, %4
  %254 = or i1 %252, %253
  br i1 %254, label %326, label %245

255:                                              ; preds = %235, %233, %222
  %256 = load i32, i32* %27, align 8
  %257 = and i32 %256, 48
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %292

259:                                              ; preds = %255
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %261 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %262 = bitcast %"class.blink::Member"* %261 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %263 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %263, i64 0, i32 3, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp ne %"class.WTF::StringImpl"* %265, %267
  %269 = and i32 %256, 512
  %270 = icmp eq i32 %269, 0
  %271 = or i1 %270, %268
  br i1 %271, label %292, label %272

272:                                              ; preds = %259
  %273 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %26) #12
  %274 = call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %273) #12
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = load i32, i32* %27, align 8
  br label %292

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %273, i64 0, i32 4
  %279 = load i32, i32* %278, align 8
  %280 = or i32 %279, 8388608
  store i32 %280, i32* %278, align 8
  %281 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %281, label %326, label %282

282:                                              ; preds = %277, %286
  %283 = phi %"class.blink::Node"* [ %288, %286 ], [ %26, %277 ]
  %284 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %283, i32 0) #12
  %285 = icmp eq %"class.blink::Node"* %284, null
  br i1 %285, label %286, label %326

286:                                              ; preds = %282
  %287 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %283) #12
  %288 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %287, i64 0, i32 0
  %289 = icmp eq %"class.blink::ContainerNode"* %287, null
  %290 = icmp eq %"class.blink::Node"* %288, %4
  %291 = or i1 %289, %290
  br i1 %291, label %326, label %282

292:                                              ; preds = %275, %259, %255
  %293 = phi i32 [ %276, %275 ], [ %256, %259 ], [ %256, %255 ]
  %294 = and i32 %293, 134217728
  %295 = icmp ne i32 %294, 0
  br i1 %1, label %311, label %296

296:                                              ; preds = %292
  br i1 %295, label %309, label %297

297:                                              ; preds = %296
  %298 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %298, label %326, label %299

299:                                              ; preds = %297, %303
  %300 = phi %"class.blink::Node"* [ %305, %303 ], [ %26, %297 ]
  %301 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %300, i32 0) #12
  %302 = icmp eq %"class.blink::Node"* %301, null
  br i1 %302, label %303, label %326

303:                                              ; preds = %299
  %304 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %300) #12
  %305 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %304, i64 0, i32 0
  %306 = icmp eq %"class.blink::ContainerNode"* %304, null
  %307 = icmp eq %"class.blink::Node"* %305, %4
  %308 = or i1 %306, %307
  br i1 %308, label %326, label %299

309:                                              ; preds = %296
  %310 = and i32 %293, -134217729
  store i32 %310, i32* %27, align 8
  br label %326

311:                                              ; preds = %292
  br i1 %295, label %312, label %324

312:                                              ; preds = %311
  %313 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %313, label %326, label %314

314:                                              ; preds = %312, %318
  %315 = phi %"class.blink::Node"* [ %320, %318 ], [ %26, %312 ]
  %316 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %315, i32 0) #12
  %317 = icmp eq %"class.blink::Node"* %316, null
  br i1 %317, label %318, label %326

318:                                              ; preds = %314
  %319 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %315) #12
  %320 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %319, i64 0, i32 0
  %321 = icmp eq %"class.blink::ContainerNode"* %319, null
  %322 = icmp eq %"class.blink::Node"* %320, %4
  %323 = or i1 %321, %322
  br i1 %323, label %326, label %314

324:                                              ; preds = %311
  %325 = or i32 %293, 134217728
  store i32 %325, i32* %27, align 8
  br label %326

326:                                              ; preds = %286, %282, %303, %299, %318, %314, %249, %245, %312, %297, %277, %243, %309, %324
  %327 = phi %"class.blink::Node"* [ %26, %324 ], [ %26, %309 ], [ null, %243 ], [ null, %277 ], [ null, %297 ], [ null, %312 ], [ %247, %245 ], [ null, %249 ], [ %316, %314 ], [ null, %318 ], [ %301, %299 ], [ null, %303 ], [ null, %286 ], [ %284, %282 ]
  %328 = phi i32 [ 0, %324 ], [ 0, %309 ], [ 2, %243 ], [ 2, %277 ], [ 2, %297 ], [ 2, %312 ], [ 2, %245 ], [ 2, %249 ], [ 2, %314 ], [ 2, %318 ], [ 2, %299 ], [ 2, %303 ], [ 2, %282 ], [ 2, %286 ]
  br i1 %89, label %342, label %329

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %342

342:                                              ; preds = %326, %338, %341
  %343 = icmp eq i32 %328, 0
  br i1 %343, label %344, label %362

344:                                              ; preds = %25, %342
  %345 = phi %"class.blink::Node"* [ %327, %342 ], [ %26, %25 ]
  %346 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %345, i32 0) #12
  %347 = icmp eq %"class.blink::Node"* %346, null
  br i1 %347, label %348, label %362

348:                                              ; preds = %344
  %349 = icmp eq %"class.blink::Node"* %345, null
  %350 = icmp eq %"class.blink::Node"* %345, %4
  %351 = or i1 %349, %350
  br i1 %351, label %365, label %352

352:                                              ; preds = %348, %356
  %353 = phi %"class.blink::Node"* [ %358, %356 ], [ %345, %348 ]
  %354 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %353, i32 0) #12
  %355 = icmp eq %"class.blink::Node"* %354, null
  br i1 %355, label %356, label %362

356:                                              ; preds = %352
  %357 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %353) #12
  %358 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %357, i64 0, i32 0
  %359 = icmp eq %"class.blink::ContainerNode"* %357, null
  %360 = icmp eq %"class.blink::Node"* %358, %4
  %361 = or i1 %359, %360
  br i1 %361, label %365, label %352

362:                                              ; preds = %352, %344, %342
  %363 = phi %"class.blink::Node"* [ %327, %342 ], [ %346, %344 ], [ %354, %352 ]
  %364 = icmp eq %"class.blink::Node"* %363, null
  br i1 %364, label %365, label %25

365:                                              ; preds = %348, %362, %356, %2
  ret void
}

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement50AdjustDirectionalityIfNeededAfterShadowRootChangedEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 134217728
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %255, label %7

7:                                                ; preds = %1
  %8 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %8, label %254, label %9

9:                                                ; preds = %7
  %10 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %15 = bitcast %"class.WTF::StringView"* %2 to i8*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  %19 = bitcast %"class.WTF::StringView"* %2 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %21 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %22 = sext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %24 = sext i8 %23 to i32
  %25 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %26 = sext i8 %25 to i32
  br label %27

27:                                               ; preds = %250, %9
  %28 = phi i32 [ %4, %9 ], [ %253, %250 ]
  %29 = phi %"class.blink::HTMLElement"* [ %0, %9 ], [ %251, %250 ]
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = and i32 %28, 48
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %242

33:                                               ; preds = %27
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 2
  %36 = bitcast %"class.blink::Member"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %240, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 3
  %45 = bitcast %"class.blink::Member.1"* %44 to %"class.blink::ElementData"**
  %46 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %45, align 8
  %47 = icmp eq %"class.blink::ElementData"* %46, null
  br i1 %47, label %97, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::ElementData"* %46 to %"class.blink::UniqueElementData"*
  %55 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 1, i32 1
  %56 = bitcast %"class.blink::Member.14"* %55 to %"class.blink::Attribute"**
  %57 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  br label %65

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 1
  %62 = bitcast %"class.blink::ElementData"* %61 to %"class.blink::Attribute"*
  %63 = lshr i32 %50, 1
  %64 = and i32 %63, 268435455
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi %"class.blink::Attribute"* [ %62, %60 ], [ %57, %53 ]
  %67 = phi i32 [ %64, %60 ], [ %59, %53 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %65
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %90, %71
  %76 = phi %"class.blink::Attribute"* [ %66, %71 ], [ %91, %90 ]
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %78, %72
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %82, %83
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %87, %88
  br i1 %89, label %93, label %90

90:                                               ; preds = %85, %80
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 1
  %92 = icmp eq %"class.blink::Attribute"* %91, %69
  br i1 %92, label %97, label %75

93:                                               ; preds = %85, %75
  %94 = icmp eq %"class.blink::Attribute"* %76, null
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 0, i32 1
  %96 = select i1 %94, %"class.WTF::AtomicString"* %14, %"class.WTF::AtomicString"* %95
  br label %97

97:                                               ; preds = %90, %93, %43, %65
  %98 = phi %"class.WTF::AtomicString"* [ %14, %65 ], [ %14, %43 ], [ %96, %93 ], [ %14, %90 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  store i8* null, i8** %17, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %103, i64* %19, align 8
  br label %108

104:                                              ; preds = %97
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %16, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %18, align 8
  br label %108

108:                                              ; preds = %104, %102
  %109 = phi i32 [ %106, %104 ], [ 0, %102 ]
  store i32 %109, i32* %20, align 8
  %110 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %110, label %231, label %111

111:                                              ; preds = %108
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %230, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %118 = bitcast %"class.WTF::StringImpl"* %117 to i8*
  %119 = icmp eq i32 %116, 3
  br i1 %119, label %120, label %230

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %140, label %125

125:                                              ; preds = %120
  %126 = load i8, i8* %118, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, %22
  br i1 %131, label %132, label %179

132:                                              ; preds = %125
  %133 = getelementptr inbounds i8, i8* %118, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = icmp eq i32 %138, %24
  br i1 %139, label %171, label %179

140:                                              ; preds = %120
  %141 = bitcast %"class.WTF::StringImpl"* %117 to i16*
  %142 = load i16, i16* %141, align 2
  %143 = add i16 %142, -65
  %144 = icmp ult i16 %143, 26
  %145 = zext i1 %144 to i16
  %146 = shl nuw nsw i16 %145, 5
  %147 = or i16 %146, %142
  %148 = zext i16 %147 to i32
  %149 = icmp eq i32 %148, %22
  br i1 %149, label %150, label %179

150:                                              ; preds = %140
  %151 = getelementptr inbounds i16, i16* %141, i64 1
  %152 = load i16, i16* %151, align 2
  %153 = add i16 %152, -65
  %154 = icmp ult i16 %153, 26
  %155 = zext i1 %154 to i16
  %156 = shl nuw nsw i16 %155, 5
  %157 = or i16 %156, %152
  %158 = zext i16 %157 to i32
  %159 = icmp eq i32 %158, %24
  br i1 %159, label %160, label %179

160:                                              ; preds = %150
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1, i32 1
  %162 = bitcast i32* %161 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = add i16 %163, -65
  %165 = icmp ult i16 %164, 26
  %166 = zext i1 %165 to i16
  %167 = shl nuw nsw i16 %166, 5
  %168 = or i16 %167, %163
  %169 = zext i16 %168 to i32
  %170 = icmp eq i32 %169, %26
  br i1 %170, label %231, label %179

171:                                              ; preds = %132
  %172 = getelementptr inbounds i8, i8* %118, i64 2
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = icmp eq i32 %177, %26
  br i1 %178, label %231, label %179

179:                                              ; preds = %132, %125, %150, %140, %171, %160
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %199, label %184

184:                                              ; preds = %179
  %185 = load i8, i8* %118, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, %26
  br i1 %190, label %191, label %230

191:                                              ; preds = %184
  %192 = getelementptr inbounds i8, i8* %118, i64 1
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = icmp eq i32 %197, %24
  br i1 %198, label %232, label %230

199:                                              ; preds = %179
  %200 = bitcast %"class.WTF::StringImpl"* %117 to i16*
  %201 = load i16, i16* %200, align 2
  %202 = add i16 %201, -65
  %203 = icmp ult i16 %202, 26
  %204 = zext i1 %203 to i16
  %205 = shl nuw nsw i16 %204, 5
  %206 = or i16 %205, %201
  %207 = zext i16 %206 to i32
  %208 = icmp eq i32 %207, %26
  br i1 %208, label %209, label %230

209:                                              ; preds = %199
  %210 = getelementptr inbounds i16, i16* %200, i64 1
  %211 = load i16, i16* %210, align 2
  %212 = add i16 %211, -65
  %213 = icmp ult i16 %212, 26
  %214 = zext i1 %213 to i16
  %215 = shl nuw nsw i16 %214, 5
  %216 = or i16 %215, %211
  %217 = zext i16 %216 to i32
  %218 = icmp eq i32 %217, %24
  br i1 %218, label %219, label %230

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1, i32 1
  %221 = bitcast i32* %220 to i16*
  %222 = load i16, i16* %221, align 2
  %223 = add i16 %222, -65
  %224 = icmp ult i16 %223, 26
  %225 = zext i1 %224 to i16
  %226 = shl nuw nsw i16 %225, 5
  %227 = or i16 %226, %222
  %228 = zext i16 %227 to i32
  %229 = icmp eq i32 %228, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %229, label %240, label %242

230:                                              ; preds = %114, %199, %209, %184, %191, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %242

231:                                              ; preds = %171, %108, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %240

232:                                              ; preds = %191
  %233 = getelementptr inbounds i8, i8* %118, i64 2
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i64
  %236 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %239, label %240, label %242

240:                                              ; preds = %33, %219, %232, %231
  %241 = call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* nonnull %29, %"class.blink::Node"* %30)
  br label %254

242:                                              ; preds = %27, %219, %230, %232
  %243 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %30) #12
  %244 = icmp eq %"class.blink::ContainerNode"* %243, null
  br i1 %244, label %254, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %243, i64 0, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = and i32 %247, 60
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %254

250:                                              ; preds = %245
  %251 = bitcast %"class.blink::ContainerNode"* %243 to %"class.blink::HTMLElement"*
  %252 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %243, i64 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  br label %27

254:                                              ; preds = %242, %245, %7, %255, %258, %240
  ret void

255:                                              ; preds = %1
  %256 = and i32 %4, 536870912
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %254

258:                                              ; preds = %255
  %259 = lshr i32 %4, 28
  %260 = trunc i32 %259 to i8
  %261 = and i8 %260, 1
  tail call void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"* %0, i8 zeroext %261)
  br label %254
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement30UpdateDescendantDirectionalityENS_13TextDirectionE(%"class.blink::HTMLElement"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %4, i32 0) #12
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %283, label %7

7:                                                ; preds = %2
  %8 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i8*
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %16 = bitcast i8** %15 to %"class.WTF::StringImpl"**
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %19 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %20 = sext i8 %19 to i32
  %21 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %22 = sext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %24 = sext i8 %23 to i32
  br label %25

25:                                               ; preds = %269, %7
  %26 = phi %"class.blink::Node"* [ %5, %7 ], [ %270, %269 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 48
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %266

31:                                               ; preds = %25
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %34 = bitcast %"class.blink::Member"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %244, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 3
  %43 = bitcast %"class.blink::Member.1"* %42 to %"class.blink::ElementData"**
  %44 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %43, align 8
  %45 = icmp eq %"class.blink::ElementData"* %44, null
  br i1 %45, label %95, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::UniqueElementData"*
  %53 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1, i32 1
  %54 = bitcast %"class.blink::Member.14"* %53 to %"class.blink::Attribute"**
  %55 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %52, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %63

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %44, i64 1
  %60 = bitcast %"class.blink::ElementData"* %59 to %"class.blink::Attribute"*
  %61 = lshr i32 %48, 1
  %62 = and i32 %61, 268435455
  br label %63

63:                                               ; preds = %58, %51
  %64 = phi %"class.blink::Attribute"* [ %60, %58 ], [ %55, %51 ]
  %65 = phi i32 [ %62, %58 ], [ %57, %51 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %64, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %95, label %69

69:                                               ; preds = %63
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %73

73:                                               ; preds = %88, %69
  %74 = phi %"class.blink::Attribute"* [ %64, %69 ], [ %89, %88 ]
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %70
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %80, %81
  br i1 %82, label %83, label %88

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %85, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %83, %78
  %89 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %74, i64 1
  %90 = icmp eq %"class.blink::Attribute"* %89, %67
  br i1 %90, label %95, label %73

91:                                               ; preds = %83, %73
  %92 = icmp eq %"class.blink::Attribute"* %74, null
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %74, i64 0, i32 1
  %94 = select i1 %92, %"class.WTF::AtomicString"* %12, %"class.WTF::AtomicString"* %93
  br label %95

95:                                               ; preds = %88, %91, %41, %63
  %96 = phi %"class.WTF::AtomicString"* [ %12, %63 ], [ %12, %41 ], [ %94, %91 ], [ %12, %88 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  store i8* null, i8** %15, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %101, i64* %17, align 8
  br label %106

102:                                              ; preds = %95
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %14, align 8
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %16, align 8
  br label %106

106:                                              ; preds = %102, %100
  %107 = phi i32 [ %104, %102 ], [ 0, %100 ]
  store i32 %107, i32* %18, align 8
  %108 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %108, label %229, label %109

109:                                              ; preds = %106
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %228, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  %116 = bitcast %"class.WTF::StringImpl"* %115 to i8*
  %117 = icmp eq i32 %114, 3
  br i1 %117, label %118, label %228

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %138, label %123

123:                                              ; preds = %118
  %124 = load i8, i8* %116, align 1
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp eq i32 %128, %20
  br i1 %129, label %130, label %177

130:                                              ; preds = %123
  %131 = getelementptr inbounds i8, i8* %116, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, %22
  br i1 %137, label %169, label %177

138:                                              ; preds = %118
  %139 = bitcast %"class.WTF::StringImpl"* %115 to i16*
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, -65
  %142 = icmp ult i16 %141, 26
  %143 = zext i1 %142 to i16
  %144 = shl nuw nsw i16 %143, 5
  %145 = or i16 %144, %140
  %146 = zext i16 %145 to i32
  %147 = icmp eq i32 %146, %20
  br i1 %147, label %148, label %177

148:                                              ; preds = %138
  %149 = getelementptr inbounds i16, i16* %139, i64 1
  %150 = load i16, i16* %149, align 2
  %151 = add i16 %150, -65
  %152 = icmp ult i16 %151, 26
  %153 = zext i1 %152 to i16
  %154 = shl nuw nsw i16 %153, 5
  %155 = or i16 %154, %150
  %156 = zext i16 %155 to i32
  %157 = icmp eq i32 %156, %22
  br i1 %157, label %158, label %177

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1, i32 1
  %160 = bitcast i32* %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = add i16 %161, -65
  %163 = icmp ult i16 %162, 26
  %164 = zext i1 %163 to i16
  %165 = shl nuw nsw i16 %164, 5
  %166 = or i16 %165, %161
  %167 = zext i16 %166 to i32
  %168 = icmp eq i32 %167, %24
  br i1 %168, label %229, label %177

169:                                              ; preds = %130
  %170 = getelementptr inbounds i8, i8* %116, i64 2
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, %24
  br i1 %176, label %229, label %177

177:                                              ; preds = %130, %123, %148, %138, %169, %158
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %197, label %182

182:                                              ; preds = %177
  %183 = load i8, i8* %116, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, %24
  br i1 %188, label %189, label %228

189:                                              ; preds = %182
  %190 = getelementptr inbounds i8, i8* %116, i64 1
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, %22
  br i1 %196, label %230, label %228

197:                                              ; preds = %177
  %198 = bitcast %"class.WTF::StringImpl"* %115 to i16*
  %199 = load i16, i16* %198, align 2
  %200 = add i16 %199, -65
  %201 = icmp ult i16 %200, 26
  %202 = zext i1 %201 to i16
  %203 = shl nuw nsw i16 %202, 5
  %204 = or i16 %203, %199
  %205 = zext i16 %204 to i32
  %206 = icmp eq i32 %205, %24
  br i1 %206, label %207, label %228

207:                                              ; preds = %197
  %208 = getelementptr inbounds i16, i16* %198, i64 1
  %209 = load i16, i16* %208, align 2
  %210 = add i16 %209, -65
  %211 = icmp ult i16 %210, 26
  %212 = zext i1 %211 to i16
  %213 = shl nuw nsw i16 %212, 5
  %214 = or i16 %213, %209
  %215 = zext i16 %214 to i32
  %216 = icmp eq i32 %215, %22
  br i1 %216, label %217, label %228

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1, i32 1
  %219 = bitcast i32* %218 to i16*
  %220 = load i16, i16* %219, align 2
  %221 = add i16 %220, -65
  %222 = icmp ult i16 %221, 26
  %223 = zext i1 %222 to i16
  %224 = shl nuw nsw i16 %223, 5
  %225 = or i16 %224, %220
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %227, label %244, label %238

228:                                              ; preds = %112, %197, %207, %182, %189, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br label %238

229:                                              ; preds = %169, %106, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br label %244

230:                                              ; preds = %189
  %231 = getelementptr inbounds i8, i8* %116, i64 2
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i64
  %234 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = icmp eq i32 %236, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %237, label %244, label %238

238:                                              ; preds = %217, %228, %230
  %239 = load i32, i32* %27, align 8
  %240 = lshr i32 %239, 28
  %241 = trunc i32 %240 to i8
  %242 = and i8 %241, 1
  %243 = icmp eq i8 %242, %1
  br i1 %243, label %244, label %256

244:                                              ; preds = %31, %217, %229, %238, %230
  %245 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %245, label %283, label %246

246:                                              ; preds = %244, %250
  %247 = phi %"class.blink::Node"* [ %252, %250 ], [ %26, %244 ]
  %248 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %247, i32 0) #12
  %249 = icmp eq %"class.blink::Node"* %248, null
  br i1 %249, label %250, label %269

250:                                              ; preds = %246
  %251 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %247) #12
  %252 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %251, i64 0, i32 0
  %253 = icmp eq %"class.blink::ContainerNode"* %251, null
  %254 = icmp eq %"class.blink::Node"* %252, %4
  %255 = or i1 %253, %254
  br i1 %255, label %283, label %246

256:                                              ; preds = %238
  switch i8 %1, label %263 [
    i8 1, label %257
    i8 0, label %259
  ]

257:                                              ; preds = %256
  %258 = or i32 %239, 268435456
  br label %261

259:                                              ; preds = %256
  %260 = and i32 %239, -268435457
  br label %261

261:                                              ; preds = %259, %257
  %262 = phi i32 [ %258, %257 ], [ %260, %259 ]
  store i32 %262, i32* %27, align 8
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i32 [ %239, %256 ], [ %262, %261 ]
  %265 = and i32 %264, -536870913
  store i32 %265, i32* %27, align 8
  br label %266

266:                                              ; preds = %263, %25
  %267 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %26, i32 0) #12
  %268 = icmp eq %"class.blink::Node"* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %273, %246, %266
  %270 = phi %"class.blink::Node"* [ %267, %266 ], [ %248, %246 ], [ %275, %273 ]
  br label %25

271:                                              ; preds = %266
  %272 = icmp eq %"class.blink::Node"* %26, %4
  br i1 %272, label %283, label %273

273:                                              ; preds = %271, %277
  %274 = phi %"class.blink::Node"* [ %279, %277 ], [ %26, %271 ]
  %275 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %274, i32 0) #12
  %276 = icmp eq %"class.blink::Node"* %275, null
  br i1 %276, label %277, label %269

277:                                              ; preds = %273
  %278 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %274) #12
  %279 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %278, i64 0, i32 0
  %280 = icmp eq %"class.blink::ContainerNode"* %278, null
  %281 = icmp eq %"class.blink::Node"* %279, %4
  %282 = or i1 %280, %281
  br i1 %282, label %283, label %273

283:                                              ; preds = %271, %244, %277, %250, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement36AdjustCandidateDirectionalityForSlotENS_11HeapHashSetINS_6MemberINS_4NodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEE(%"class.blink::HeapHashSet.2671"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::HeapHashSet.2677", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.blink::HTMLElement"*, align 8
  %8 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %9 = bitcast %"class.blink::HeapHashSet.2677"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::HeapHashSet.2677", %"class.blink::HeapHashSet.2677"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapHashSet.2677", %"class.blink::HeapHashSet.2677"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapHashSet.2677", %"class.blink::HeapHashSet.2677"* %5, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.blink::HeapHashSet.2677"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 20, i1 false) #12
  %14 = getelementptr inbounds %"class.blink::HeapHashSet.2671", %"class.blink::HeapHashSet.2671"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::HeapHashSet.2671", %"class.blink::HeapHashSet.2671"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HeapHashSet.2671", %"class.blink::HeapHashSet.2671"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %18, i64 %21
  br i1 %16, label %836, label %23

23:                                               ; preds = %1
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %29
  %26 = phi %"class.blink::Member"* [ %30, %29 ], [ %18, %23 ]
  %27 = bitcast %"class.blink::Member"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  switch i64 %28, label %32 [
    i64 -1, label %29
    i64 0, label %29
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %26, i64 1
  %31 = icmp eq %"class.blink::Member"* %30, %22
  br i1 %31, label %836, label %25

32:                                               ; preds = %25, %23
  %33 = phi %"class.blink::Member"* [ %18, %23 ], [ %26, %25 ]
  %34 = icmp eq %"class.blink::Member"* %33, %22
  br i1 %34, label %836, label %35

35:                                               ; preds = %32
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %41 = bitcast %"class.WTF::StringView"* %2 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = bitcast %"class.WTF::StringView"* %2 to i64*
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %47 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %48 = sext i8 %47 to i32
  %49 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %50 = sext i8 %49 to i32
  %51 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %52 = sext i8 %51 to i32
  %53 = bitcast %"class.blink::HTMLElement"** %7 to i8*
  %54 = bitcast %"class.WTF::StringView"* %4 to i8*
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %57 = bitcast i8** %56 to %"class.WTF::StringImpl"**
  %58 = bitcast %"class.WTF::StringView"* %4 to i64*
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %60 = getelementptr inbounds %"class.blink::HeapHashSet.2677", %"class.blink::HeapHashSet.2677"* %5, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringView"* %3 to i8*
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  %65 = bitcast %"class.WTF::StringView"* %3 to i64*
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %67 = bitcast %"class.blink::HTMLElement"** %7 to %"class.blink::Node"**
  br label %93

68:                                               ; preds = %824, %834, %831
  %69 = load i32, i32* %12, align 4
  %70 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %10, align 8
  %71 = load i32, i32* %11, align 8
  %72 = icmp eq i32 %69, 0
  %73 = zext i32 %71 to i64
  %74 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %70, i64 %73
  br i1 %72, label %836, label %75

75:                                               ; preds = %68
  %76 = icmp eq i32 %71, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %75, %81
  %78 = phi %"class.blink::Member.2522"* [ %82, %81 ], [ %70, %75 ]
  %79 = bitcast %"class.blink::Member.2522"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  switch i64 %80, label %84 [
    i64 -1, label %81
    i64 0, label %81
  ]

81:                                               ; preds = %77, %77
  %82 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %78, i64 1
  %83 = icmp eq %"class.blink::Member.2522"* %82, %74
  br i1 %83, label %836, label %77

84:                                               ; preds = %77, %75
  %85 = phi %"class.blink::Member.2522"* [ %70, %75 ], [ %78, %77 ]
  %86 = icmp eq %"class.blink::Member.2522"* %85, %74
  br i1 %86, label %836, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.blink::StyleChangeReasonForTracing"* %8 to i8*
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %8, i64 0, i32 0
  %92 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %837

93:                                               ; preds = %35, %834
  %94 = phi %"class.blink::Member"* [ %33, %35 ], [ %828, %834 ]
  %95 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 134217728
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %592

101:                                              ; preds = %93
  %102 = call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %96) #12
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %104 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %103) #12
  %105 = icmp eq %"class.blink::ContainerNode"* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %104, i64 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 12
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = and i32 %108, 48
  %113 = icmp eq i32 %112, 0
  %114 = bitcast %"class.blink::ContainerNode"* %104 to %"class.blink::HTMLElement"*
  %115 = select i1 %113, %"class.blink::HTMLElement"* %114, %"class.blink::HTMLElement"* null
  br label %116

116:                                              ; preds = %106, %101, %111
  %117 = phi %"class.blink::HTMLElement"* [ %115, %111 ], [ null, %106 ], [ null, %101 ]
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %332, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 48
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %332

125:                                              ; preds = %120
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 1, i32 2
  %128 = bitcast %"class.blink::Member"* %127 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %131, %133
  br i1 %134, label %824, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 1, i32 3
  %137 = bitcast %"class.blink::Member.1"* %136 to %"class.blink::ElementData"**
  %138 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %137, align 8
  %139 = icmp eq %"class.blink::ElementData"* %138, null
  br i1 %139, label %189, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %138, i64 0, i32 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %140
  %146 = bitcast %"class.blink::ElementData"* %138 to %"class.blink::UniqueElementData"*
  %147 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %138, i64 1, i32 1
  %148 = bitcast %"class.blink::Member.14"* %147 to %"class.blink::Attribute"**
  %149 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %146, i64 0, i32 2, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  br label %157

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %138, i64 1
  %154 = bitcast %"class.blink::ElementData"* %153 to %"class.blink::Attribute"*
  %155 = lshr i32 %142, 1
  %156 = and i32 %155, 268435455
  br label %157

157:                                              ; preds = %152, %145
  %158 = phi %"class.blink::Attribute"* [ %154, %152 ], [ %149, %145 ]
  %159 = phi i32 [ %156, %152 ], [ %151, %145 ]
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %158, i64 %160
  %162 = icmp eq i32 %159, 0
  br i1 %162, label %189, label %163

163:                                              ; preds = %157
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %167

167:                                              ; preds = %182, %163
  %168 = phi %"class.blink::Attribute"* [ %158, %163 ], [ %183, %182 ]
  %169 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %169, align 8
  %171 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %170, %164
  br i1 %171, label %185, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %170, i64 0, i32 3, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %174, %175
  br i1 %176, label %177, label %182

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %170, i64 0, i32 4, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %179, %180
  br i1 %181, label %185, label %182

182:                                              ; preds = %177, %172
  %183 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %168, i64 1
  %184 = icmp eq %"class.blink::Attribute"* %183, %161
  br i1 %184, label %189, label %167

185:                                              ; preds = %177, %167
  %186 = icmp eq %"class.blink::Attribute"* %168, null
  %187 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %168, i64 0, i32 1
  %188 = select i1 %186, %"class.WTF::AtomicString"* %40, %"class.WTF::AtomicString"* %187
  br label %189

189:                                              ; preds = %182, %185, %135, %157
  %190 = phi %"class.WTF::AtomicString"* [ %40, %157 ], [ %40, %135 ], [ %188, %185 ], [ %40, %182 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %191 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  store i8* null, i8** %43, align 8
  %195 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %195, i64* %45, align 8
  br label %200

196:                                              ; preds = %189
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %42, align 8
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 1
  store %"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"** %44, align 8
  br label %200

200:                                              ; preds = %196, %194
  %201 = phi i32 [ %198, %196 ], [ 0, %194 ]
  store i32 %201, i32* %46, align 8
  %202 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %202, label %323, label %203

203:                                              ; preds = %200
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %322, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1
  %210 = bitcast %"class.WTF::StringImpl"* %209 to i8*
  %211 = icmp eq i32 %208, 3
  br i1 %211, label %212, label %322

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %232, label %217

217:                                              ; preds = %212
  %218 = load i8, i8* %210, align 1
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = icmp eq i32 %222, %48
  br i1 %223, label %224, label %271

224:                                              ; preds = %217
  %225 = getelementptr inbounds i8, i8* %210, i64 1
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i64
  %228 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = icmp eq i32 %230, %50
  br i1 %231, label %263, label %271

232:                                              ; preds = %212
  %233 = bitcast %"class.WTF::StringImpl"* %209 to i16*
  %234 = load i16, i16* %233, align 2
  %235 = add i16 %234, -65
  %236 = icmp ult i16 %235, 26
  %237 = zext i1 %236 to i16
  %238 = shl nuw nsw i16 %237, 5
  %239 = or i16 %238, %234
  %240 = zext i16 %239 to i32
  %241 = icmp eq i32 %240, %48
  br i1 %241, label %242, label %271

242:                                              ; preds = %232
  %243 = getelementptr inbounds i16, i16* %233, i64 1
  %244 = load i16, i16* %243, align 2
  %245 = add i16 %244, -65
  %246 = icmp ult i16 %245, 26
  %247 = zext i1 %246 to i16
  %248 = shl nuw nsw i16 %247, 5
  %249 = or i16 %248, %244
  %250 = zext i16 %249 to i32
  %251 = icmp eq i32 %250, %50
  br i1 %251, label %252, label %271

252:                                              ; preds = %242
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1, i32 1
  %254 = bitcast i32* %253 to i16*
  %255 = load i16, i16* %254, align 2
  %256 = add i16 %255, -65
  %257 = icmp ult i16 %256, 26
  %258 = zext i1 %257 to i16
  %259 = shl nuw nsw i16 %258, 5
  %260 = or i16 %259, %255
  %261 = zext i16 %260 to i32
  %262 = icmp eq i32 %261, %52
  br i1 %262, label %323, label %271

263:                                              ; preds = %224
  %264 = getelementptr inbounds i8, i8* %210, i64 2
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i64
  %267 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp eq i32 %269, %52
  br i1 %270, label %323, label %271

271:                                              ; preds = %224, %217, %242, %232, %263, %252
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %291, label %276

276:                                              ; preds = %271
  %277 = load i8, i8* %210, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = icmp eq i32 %281, %52
  br i1 %282, label %283, label %322

283:                                              ; preds = %276
  %284 = getelementptr inbounds i8, i8* %210, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i64
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = icmp eq i32 %289, %50
  br i1 %290, label %324, label %322

291:                                              ; preds = %271
  %292 = bitcast %"class.WTF::StringImpl"* %209 to i16*
  %293 = load i16, i16* %292, align 2
  %294 = add i16 %293, -65
  %295 = icmp ult i16 %294, 26
  %296 = zext i1 %295 to i16
  %297 = shl nuw nsw i16 %296, 5
  %298 = or i16 %297, %293
  %299 = zext i16 %298 to i32
  %300 = icmp eq i32 %299, %52
  br i1 %300, label %301, label %322

301:                                              ; preds = %291
  %302 = getelementptr inbounds i16, i16* %292, i64 1
  %303 = load i16, i16* %302, align 2
  %304 = add i16 %303, -65
  %305 = icmp ult i16 %304, 26
  %306 = zext i1 %305 to i16
  %307 = shl nuw nsw i16 %306, 5
  %308 = or i16 %307, %303
  %309 = zext i16 %308 to i32
  %310 = icmp eq i32 %309, %50
  br i1 %310, label %311, label %322

311:                                              ; preds = %301
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1, i32 1
  %313 = bitcast i32* %312 to i16*
  %314 = load i16, i16* %313, align 2
  %315 = add i16 %314, -65
  %316 = icmp ult i16 %315, 26
  %317 = zext i1 %316 to i16
  %318 = shl nuw nsw i16 %317, 5
  %319 = or i16 %318, %314
  %320 = zext i16 %319 to i32
  %321 = icmp eq i32 %320, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br i1 %321, label %824, label %332

322:                                              ; preds = %206, %291, %301, %276, %283, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br label %332

323:                                              ; preds = %263, %200, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br label %824

324:                                              ; preds = %283
  %325 = getelementptr inbounds i8, i8* %210, i64 2
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i64
  %328 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %327
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = icmp eq i32 %330, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br i1 %331, label %824, label %332

332:                                              ; preds = %116, %120, %311, %322, %324
  %333 = icmp eq %"class.blink::HTMLSlotElement"* %102, null
  br i1 %333, label %340, label %334

334:                                              ; preds = %332
  %335 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = and i32 %337, 134217728
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %592

340:                                              ; preds = %334, %332
  %341 = icmp ne %"class.blink::HTMLElement"* %117, null
  br i1 %341, label %342, label %348

342:                                              ; preds = %340
  %343 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %117, i64 0, i32 0, i32 0, i32 0
  %344 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %117, i64 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i32, i32* %344, align 8
  %346 = and i32 %345, 134217728
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %592

348:                                              ; preds = %342, %340
  %349 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %333, label %573, label %350

350:                                              ; preds = %348
  %351 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = and i32 %352, 48
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %573

355:                                              ; preds = %350
  %356 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %357 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 1, i32 2
  %358 = bitcast %"class.blink::Member"* %357 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %359 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %359, i64 0, i32 3, i32 0, i32 0, i32 0
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  %362 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %356, i64 0, i32 3, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %361, %363
  br i1 %364, label %562, label %365

365:                                              ; preds = %355
  %366 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %349, i64 1, i32 3
  %367 = bitcast %"class.blink::Member.1"* %366 to %"class.blink::ElementData"**
  %368 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %367, align 8
  %369 = icmp eq %"class.blink::ElementData"* %368, null
  br i1 %369, label %419, label %370

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %368, i64 0, i32 0, i32 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %382, label %375

375:                                              ; preds = %370
  %376 = bitcast %"class.blink::ElementData"* %368 to %"class.blink::UniqueElementData"*
  %377 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %368, i64 1, i32 1
  %378 = bitcast %"class.blink::Member.14"* %377 to %"class.blink::Attribute"**
  %379 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %376, i64 0, i32 2, i32 0, i32 0, i32 2
  %381 = load i32, i32* %380, align 4
  br label %387

382:                                              ; preds = %370
  %383 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %368, i64 1
  %384 = bitcast %"class.blink::ElementData"* %383 to %"class.blink::Attribute"*
  %385 = lshr i32 %372, 1
  %386 = and i32 %385, 268435455
  br label %387

387:                                              ; preds = %382, %375
  %388 = phi %"class.blink::Attribute"* [ %384, %382 ], [ %379, %375 ]
  %389 = phi i32 [ %386, %382 ], [ %381, %375 ]
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %388, i64 %390
  %392 = icmp eq i32 %389, 0
  br i1 %392, label %419, label %393

393:                                              ; preds = %387
  %394 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %395 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %394, i64 0, i32 3, i32 0, i32 0, i32 0
  %396 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %394, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %397

397:                                              ; preds = %412, %393
  %398 = phi %"class.blink::Attribute"* [ %388, %393 ], [ %413, %412 ]
  %399 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %398, i64 0, i32 0, i32 0, i32 0
  %400 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %399, align 8
  %401 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %400, %394
  br i1 %401, label %415, label %402

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %400, i64 0, i32 3, i32 0, i32 0, i32 0
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %403, align 8
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %404, %405
  br i1 %406, label %407, label %412

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %400, i64 0, i32 4, i32 0, i32 0, i32 0
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %409, %410
  br i1 %411, label %415, label %412

412:                                              ; preds = %407, %402
  %413 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %398, i64 1
  %414 = icmp eq %"class.blink::Attribute"* %413, %391
  br i1 %414, label %419, label %397

415:                                              ; preds = %407, %397
  %416 = icmp eq %"class.blink::Attribute"* %398, null
  %417 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %398, i64 0, i32 1
  %418 = select i1 %416, %"class.WTF::AtomicString"* %40, %"class.WTF::AtomicString"* %417
  br label %419

419:                                              ; preds = %412, %415, %365, %387
  %420 = phi %"class.WTF::AtomicString"* [ %40, %387 ], [ %40, %365 ], [ %418, %415 ], [ %40, %412 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  %421 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %420, i64 0, i32 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %424, label %426

424:                                              ; preds = %419
  store i8* null, i8** %63, align 8
  %425 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %425, i64* %65, align 8
  br label %430

426:                                              ; preds = %419
  store %"class.WTF::StringImpl"* %422, %"class.WTF::StringImpl"** %62, align 8
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 1
  store %"class.WTF::StringImpl"* %429, %"class.WTF::StringImpl"** %64, align 8
  br label %430

430:                                              ; preds = %426, %424
  %431 = phi i32 [ %428, %426 ], [ 0, %424 ]
  store i32 %431, i32* %66, align 8
  %432 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %432, label %553, label %433

433:                                              ; preds = %430
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %435 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %435, label %552, label %436

436:                                              ; preds = %433
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 1
  %440 = bitcast %"class.WTF::StringImpl"* %439 to i8*
  %441 = icmp eq i32 %438, 3
  br i1 %441, label %442, label %552

442:                                              ; preds = %436
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %462, label %447

447:                                              ; preds = %442
  %448 = load i8, i8* %440, align 1
  %449 = zext i8 %448 to i64
  %450 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %449
  %451 = load i8, i8* %450, align 1
  %452 = zext i8 %451 to i32
  %453 = icmp eq i32 %452, %48
  br i1 %453, label %454, label %501

454:                                              ; preds = %447
  %455 = getelementptr inbounds i8, i8* %440, i64 1
  %456 = load i8, i8* %455, align 1
  %457 = zext i8 %456 to i64
  %458 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %457
  %459 = load i8, i8* %458, align 1
  %460 = zext i8 %459 to i32
  %461 = icmp eq i32 %460, %50
  br i1 %461, label %493, label %501

462:                                              ; preds = %442
  %463 = bitcast %"class.WTF::StringImpl"* %439 to i16*
  %464 = load i16, i16* %463, align 2
  %465 = add i16 %464, -65
  %466 = icmp ult i16 %465, 26
  %467 = zext i1 %466 to i16
  %468 = shl nuw nsw i16 %467, 5
  %469 = or i16 %468, %464
  %470 = zext i16 %469 to i32
  %471 = icmp eq i32 %470, %48
  br i1 %471, label %472, label %501

472:                                              ; preds = %462
  %473 = getelementptr inbounds i16, i16* %463, i64 1
  %474 = load i16, i16* %473, align 2
  %475 = add i16 %474, -65
  %476 = icmp ult i16 %475, 26
  %477 = zext i1 %476 to i16
  %478 = shl nuw nsw i16 %477, 5
  %479 = or i16 %478, %474
  %480 = zext i16 %479 to i32
  %481 = icmp eq i32 %480, %50
  br i1 %481, label %482, label %501

482:                                              ; preds = %472
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 1, i32 1
  %484 = bitcast i32* %483 to i16*
  %485 = load i16, i16* %484, align 2
  %486 = add i16 %485, -65
  %487 = icmp ult i16 %486, 26
  %488 = zext i1 %487 to i16
  %489 = shl nuw nsw i16 %488, 5
  %490 = or i16 %489, %485
  %491 = zext i16 %490 to i32
  %492 = icmp eq i32 %491, %52
  br i1 %492, label %553, label %501

493:                                              ; preds = %454
  %494 = getelementptr inbounds i8, i8* %440, i64 2
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i64
  %497 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %496
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i32
  %500 = icmp eq i32 %499, %52
  br i1 %500, label %553, label %501

501:                                              ; preds = %454, %447, %472, %462, %493, %482
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = and i32 %503, 1
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %521, label %506

506:                                              ; preds = %501
  %507 = load i8, i8* %440, align 1
  %508 = zext i8 %507 to i64
  %509 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %508
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i32
  %512 = icmp eq i32 %511, %52
  br i1 %512, label %513, label %552

513:                                              ; preds = %506
  %514 = getelementptr inbounds i8, i8* %440, i64 1
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i64
  %517 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %516
  %518 = load i8, i8* %517, align 1
  %519 = zext i8 %518 to i32
  %520 = icmp eq i32 %519, %50
  br i1 %520, label %554, label %552

521:                                              ; preds = %501
  %522 = bitcast %"class.WTF::StringImpl"* %439 to i16*
  %523 = load i16, i16* %522, align 2
  %524 = add i16 %523, -65
  %525 = icmp ult i16 %524, 26
  %526 = zext i1 %525 to i16
  %527 = shl nuw nsw i16 %526, 5
  %528 = or i16 %527, %523
  %529 = zext i16 %528 to i32
  %530 = icmp eq i32 %529, %52
  br i1 %530, label %531, label %552

531:                                              ; preds = %521
  %532 = getelementptr inbounds i16, i16* %522, i64 1
  %533 = load i16, i16* %532, align 2
  %534 = add i16 %533, -65
  %535 = icmp ult i16 %534, 26
  %536 = zext i1 %535 to i16
  %537 = shl nuw nsw i16 %536, 5
  %538 = or i16 %537, %533
  %539 = zext i16 %538 to i32
  %540 = icmp eq i32 %539, %50
  br i1 %540, label %541, label %552

541:                                              ; preds = %531
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 1, i32 1
  %543 = bitcast i32* %542 to i16*
  %544 = load i16, i16* %543, align 2
  %545 = add i16 %544, -65
  %546 = icmp ult i16 %545, 26
  %547 = zext i1 %546 to i16
  %548 = shl nuw nsw i16 %547, 5
  %549 = or i16 %548, %544
  %550 = zext i16 %549 to i32
  %551 = icmp eq i32 %550, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br i1 %551, label %562, label %573

552:                                              ; preds = %436, %521, %531, %506, %513, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br label %573

553:                                              ; preds = %493, %430, %482
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br label %562

554:                                              ; preds = %513
  %555 = getelementptr inbounds i8, i8* %440, i64 2
  %556 = load i8, i8* %555, align 1
  %557 = zext i8 %556 to i64
  %558 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %557
  %559 = load i8, i8* %558, align 1
  %560 = zext i8 %559 to i32
  %561 = icmp eq i32 %560, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br i1 %561, label %562, label %573

562:                                              ; preds = %355, %541, %553, %554
  %563 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %564 = load i32, i32* %351, align 8
  %565 = and i32 %564, 268435456
  %566 = icmp eq i32 %565, 0
  %567 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %563, i64 0, i32 1
  %568 = load i32, i32* %567, align 8
  %569 = and i32 %568, -805306369
  %570 = or i32 %568, 268435456
  %571 = select i1 %566, i32 %569, i32 %570
  %572 = and i32 %571, -536870913
  store i32 %572, i32* %567, align 8
  br label %824

573:                                              ; preds = %348, %350, %541, %552, %554
  br i1 %341, label %574, label %824

574:                                              ; preds = %573
  %575 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %117, i64 0, i32 0, i32 0, i32 0, i32 1
  %576 = load i32, i32* %575, align 8
  %577 = and i32 %576, 536870912
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %824

579:                                              ; preds = %574
  %580 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %581 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %580, i64 0, i32 1
  %582 = load i32, i32* %581, align 8
  %583 = and i32 %582, 536870912
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %824, label %585

585:                                              ; preds = %579
  %586 = and i32 %576, 268435456
  %587 = icmp eq i32 %586, 0
  %588 = and i32 %582, -805306369
  %589 = or i32 %582, 268435456
  %590 = select i1 %587, i32 %588, i32 %589
  %591 = and i32 %590, -536870913
  store i32 %591, i32* %581, align 8
  br label %824

592:                                              ; preds = %342, %334, %93
  %593 = phi %"class.blink::Node"* [ %96, %93 ], [ %335, %334 ], [ %343, %342 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  store %"class.blink::HTMLElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLElement"*), %"class.blink::HTMLElement"** %7, align 8
  %594 = icmp eq %"class.blink::Node"* %593, null
  br i1 %594, label %600, label %595

595:                                              ; preds = %592
  %596 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %593, i64 0, i32 1
  %597 = load i32, i32* %596, align 8
  %598 = and i32 %597, 48
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %601, label %600

600:                                              ; preds = %595, %592
  store %"class.blink::HTMLElement"* null, %"class.blink::HTMLElement"** %7, align 8
  br label %603

601:                                              ; preds = %595
  %602 = bitcast %"class.blink::Node"* %593 to %"class.blink::HTMLElement"*
  store %"class.blink::Node"* %593, %"class.blink::Node"** %67, align 8
  br label %604

603:                                              ; preds = %820, %600
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  br label %824

604:                                              ; preds = %601, %820
  %605 = phi %"class.blink::HTMLElement"* [ %822, %820 ], [ %602, %601 ]
  %606 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %605, i64 0, i32 0, i32 0, i32 0
  %607 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %605, i64 0, i32 0, i32 0, i32 0, i32 1
  %608 = load i32, i32* %607, align 8
  %609 = and i32 %608, 48
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %820

611:                                              ; preds = %604
  %612 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %613 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %606, i64 1, i32 2
  %614 = bitcast %"class.blink::Member"* %613 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %615 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %614, align 8
  %616 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %615, i64 0, i32 3, i32 0, i32 0, i32 0
  %617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %618 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %612, i64 0, i32 3, i32 0, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %617, %619
  br i1 %620, label %818, label %621

621:                                              ; preds = %611
  %622 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %606, i64 1, i32 3
  %623 = bitcast %"class.blink::Member.1"* %622 to %"class.blink::ElementData"**
  %624 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %623, align 8
  %625 = icmp eq %"class.blink::ElementData"* %624, null
  br i1 %625, label %675, label %626

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %624, i64 0, i32 0, i32 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = and i32 %628, 1
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %638, label %631

631:                                              ; preds = %626
  %632 = bitcast %"class.blink::ElementData"* %624 to %"class.blink::UniqueElementData"*
  %633 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %624, i64 1, i32 1
  %634 = bitcast %"class.blink::Member.14"* %633 to %"class.blink::Attribute"**
  %635 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %634, align 8
  %636 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %632, i64 0, i32 2, i32 0, i32 0, i32 2
  %637 = load i32, i32* %636, align 4
  br label %643

638:                                              ; preds = %626
  %639 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %624, i64 1
  %640 = bitcast %"class.blink::ElementData"* %639 to %"class.blink::Attribute"*
  %641 = lshr i32 %628, 1
  %642 = and i32 %641, 268435455
  br label %643

643:                                              ; preds = %638, %631
  %644 = phi %"class.blink::Attribute"* [ %640, %638 ], [ %635, %631 ]
  %645 = phi i32 [ %642, %638 ], [ %637, %631 ]
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %644, i64 %646
  %648 = icmp eq i32 %645, 0
  br i1 %648, label %675, label %649

649:                                              ; preds = %643
  %650 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %651 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %650, i64 0, i32 3, i32 0, i32 0, i32 0
  %652 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %650, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %653

653:                                              ; preds = %668, %649
  %654 = phi %"class.blink::Attribute"* [ %644, %649 ], [ %669, %668 ]
  %655 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %654, i64 0, i32 0, i32 0, i32 0
  %656 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %655, align 8
  %657 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %656, %650
  br i1 %657, label %671, label %658

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %656, i64 0, i32 3, i32 0, i32 0, i32 0
  %660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %659, align 8
  %661 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %651, align 8
  %662 = icmp eq %"class.WTF::StringImpl"* %660, %661
  br i1 %662, label %663, label %668

663:                                              ; preds = %658
  %664 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %656, i64 0, i32 4, i32 0, i32 0, i32 0
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %665, %666
  br i1 %667, label %671, label %668

668:                                              ; preds = %663, %658
  %669 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %654, i64 1
  %670 = icmp eq %"class.blink::Attribute"* %669, %647
  br i1 %670, label %675, label %653

671:                                              ; preds = %663, %653
  %672 = icmp eq %"class.blink::Attribute"* %654, null
  %673 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %654, i64 0, i32 1
  %674 = select i1 %672, %"class.WTF::AtomicString"* %40, %"class.WTF::AtomicString"* %673
  br label %675

675:                                              ; preds = %668, %671, %621, %643
  %676 = phi %"class.WTF::AtomicString"* [ %40, %643 ], [ %40, %621 ], [ %674, %671 ], [ %40, %668 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %677 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %676, i64 0, i32 0, i32 0, i32 0
  %678 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %677, align 8
  %679 = icmp eq %"class.WTF::StringImpl"* %678, null
  br i1 %679, label %680, label %682

680:                                              ; preds = %675
  store i8* null, i8** %56, align 8
  %681 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %681, i64* %58, align 8
  br label %686

682:                                              ; preds = %675
  store %"class.WTF::StringImpl"* %678, %"class.WTF::StringImpl"** %55, align 8
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %678, i64 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %678, i64 1
  store %"class.WTF::StringImpl"* %685, %"class.WTF::StringImpl"** %57, align 8
  br label %686

686:                                              ; preds = %682, %680
  %687 = phi i32 [ %684, %682 ], [ 0, %680 ]
  store i32 %687, i32* %59, align 8
  %688 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %688, label %809, label %689

689:                                              ; preds = %686
  %690 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %677, align 8
  %691 = icmp eq %"class.WTF::StringImpl"* %690, null
  br i1 %691, label %808, label %692

692:                                              ; preds = %689
  %693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 1
  %694 = load i32, i32* %693, align 4
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 1
  %696 = bitcast %"class.WTF::StringImpl"* %695 to i8*
  %697 = icmp eq i32 %694, 3
  br i1 %697, label %698, label %808

698:                                              ; preds = %692
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 1
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %718, label %703

703:                                              ; preds = %698
  %704 = load i8, i8* %696, align 1
  %705 = zext i8 %704 to i64
  %706 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %705
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i32
  %709 = icmp eq i32 %708, %48
  br i1 %709, label %710, label %757

710:                                              ; preds = %703
  %711 = getelementptr inbounds i8, i8* %696, i64 1
  %712 = load i8, i8* %711, align 1
  %713 = zext i8 %712 to i64
  %714 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %713
  %715 = load i8, i8* %714, align 1
  %716 = zext i8 %715 to i32
  %717 = icmp eq i32 %716, %50
  br i1 %717, label %749, label %757

718:                                              ; preds = %698
  %719 = bitcast %"class.WTF::StringImpl"* %695 to i16*
  %720 = load i16, i16* %719, align 2
  %721 = add i16 %720, -65
  %722 = icmp ult i16 %721, 26
  %723 = zext i1 %722 to i16
  %724 = shl nuw nsw i16 %723, 5
  %725 = or i16 %724, %720
  %726 = zext i16 %725 to i32
  %727 = icmp eq i32 %726, %48
  br i1 %727, label %728, label %757

728:                                              ; preds = %718
  %729 = getelementptr inbounds i16, i16* %719, i64 1
  %730 = load i16, i16* %729, align 2
  %731 = add i16 %730, -65
  %732 = icmp ult i16 %731, 26
  %733 = zext i1 %732 to i16
  %734 = shl nuw nsw i16 %733, 5
  %735 = or i16 %734, %730
  %736 = zext i16 %735 to i32
  %737 = icmp eq i32 %736, %50
  br i1 %737, label %738, label %757

738:                                              ; preds = %728
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 1, i32 1
  %740 = bitcast i32* %739 to i16*
  %741 = load i16, i16* %740, align 2
  %742 = add i16 %741, -65
  %743 = icmp ult i16 %742, 26
  %744 = zext i1 %743 to i16
  %745 = shl nuw nsw i16 %744, 5
  %746 = or i16 %745, %741
  %747 = zext i16 %746 to i32
  %748 = icmp eq i32 %747, %52
  br i1 %748, label %809, label %757

749:                                              ; preds = %710
  %750 = getelementptr inbounds i8, i8* %696, i64 2
  %751 = load i8, i8* %750, align 1
  %752 = zext i8 %751 to i64
  %753 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %752
  %754 = load i8, i8* %753, align 1
  %755 = zext i8 %754 to i32
  %756 = icmp eq i32 %755, %52
  br i1 %756, label %809, label %757

757:                                              ; preds = %710, %703, %728, %718, %749, %738
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 1
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %777, label %762

762:                                              ; preds = %757
  %763 = load i8, i8* %696, align 1
  %764 = zext i8 %763 to i64
  %765 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %764
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = icmp eq i32 %767, %52
  br i1 %768, label %769, label %808

769:                                              ; preds = %762
  %770 = getelementptr inbounds i8, i8* %696, i64 1
  %771 = load i8, i8* %770, align 1
  %772 = zext i8 %771 to i64
  %773 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %772
  %774 = load i8, i8* %773, align 1
  %775 = zext i8 %774 to i32
  %776 = icmp eq i32 %775, %50
  br i1 %776, label %810, label %808

777:                                              ; preds = %757
  %778 = bitcast %"class.WTF::StringImpl"* %695 to i16*
  %779 = load i16, i16* %778, align 2
  %780 = add i16 %779, -65
  %781 = icmp ult i16 %780, 26
  %782 = zext i1 %781 to i16
  %783 = shl nuw nsw i16 %782, 5
  %784 = or i16 %783, %779
  %785 = zext i16 %784 to i32
  %786 = icmp eq i32 %785, %52
  br i1 %786, label %787, label %808

787:                                              ; preds = %777
  %788 = getelementptr inbounds i16, i16* %778, i64 1
  %789 = load i16, i16* %788, align 2
  %790 = add i16 %789, -65
  %791 = icmp ult i16 %790, 26
  %792 = zext i1 %791 to i16
  %793 = shl nuw nsw i16 %792, 5
  %794 = or i16 %793, %789
  %795 = zext i16 %794 to i32
  %796 = icmp eq i32 %795, %50
  br i1 %796, label %797, label %808

797:                                              ; preds = %787
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %690, i64 1, i32 1
  %799 = bitcast i32* %798 to i16*
  %800 = load i16, i16* %799, align 2
  %801 = add i16 %800, -65
  %802 = icmp ult i16 %801, 26
  %803 = zext i1 %802 to i16
  %804 = shl nuw nsw i16 %803, 5
  %805 = or i16 %804, %800
  %806 = zext i16 %805 to i32
  %807 = icmp eq i32 %806, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br i1 %807, label %818, label %820

808:                                              ; preds = %692, %777, %787, %762, %769, %689
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br label %820

809:                                              ; preds = %749, %686, %738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br label %818

810:                                              ; preds = %769
  %811 = getelementptr inbounds i8, i8* %696, i64 2
  %812 = load i8, i8* %811, align 1
  %813 = zext i8 %812 to i64
  %814 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %813
  %815 = load i8, i8* %814, align 1
  %816 = zext i8 %815 to i32
  %817 = icmp eq i32 %816, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  br i1 %817, label %818, label %820

818:                                              ; preds = %611, %797, %809, %810
  %819 = call { %"class.blink::Member.2522"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2681"* nonnull %60, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %7, %"class.blink::HTMLElement"** nonnull dereferenceable(8) %7) #12
  br label %820

820:                                              ; preds = %604, %797, %808, %810, %818
  %821 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %7, align 8
  %822 = call fastcc %"class.blink::HTMLElement"* @_ZN5blink12_GLOBAL__N_126GetParentForDirectionalityERKNS_11HTMLElementERb(%"class.blink::HTMLElement"* dereferenceable(104) %821, i8* nonnull dereferenceable(1) %6)
  store %"class.blink::HTMLElement"* %822, %"class.blink::HTMLElement"** %7, align 8
  %823 = icmp eq %"class.blink::HTMLElement"* %822, null
  br i1 %823, label %603, label %604

824:                                              ; preds = %579, %574, %125, %311, %323, %562, %585, %573, %324, %603
  %825 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %94, i64 1
  %826 = icmp eq %"class.blink::Member"* %825, %22
  br i1 %826, label %68, label %827

827:                                              ; preds = %824, %831
  %828 = phi %"class.blink::Member"* [ %832, %831 ], [ %825, %824 ]
  %829 = bitcast %"class.blink::Member"* %828 to i64*
  %830 = load i64, i64* %829, align 8
  switch i64 %830, label %834 [
    i64 -1, label %831
    i64 0, label %831
  ]

831:                                              ; preds = %827, %827
  %832 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %828, i64 1
  %833 = icmp eq %"class.blink::Member"* %832, %22
  br i1 %833, label %68, label %827

834:                                              ; preds = %827
  %835 = icmp eq %"class.blink::Member"* %828, %22
  br i1 %835, label %68, label %93

836:                                              ; preds = %29, %81, %885, %895, %892, %1, %32, %68, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void

837:                                              ; preds = %87, %895
  %838 = phi %"class.blink::Member.2522"* [ %85, %87 ], [ %889, %895 ]
  %839 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %838, i64 0, i32 0, i32 0
  %840 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %839, align 8
  %841 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %840, i64 0, i32 0, i32 0, i32 0
  %842 = call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* %840, %"class.blink::Node"* %841)
  %843 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_css_pseudo_dir_enabled_E, align 1
  %844 = icmp ne i8 %843, 0
  %845 = and i1 %842, %844
  br i1 %845, label %846, label %885

846:                                              ; preds = %837
  %847 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %839, align 8
  %848 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %847, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  %849 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %850 = icmp eq %"class.WTF::StringImpl"* %849, null
  br i1 %850, label %868, label %851

851:                                              ; preds = %846
  %852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load atomic i32, i32* %852 monotonic, align 4
  %854 = and i32 %853, 2
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %868

856:                                              ; preds = %851
  %857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 0
  %858 = load i32, i32* %857, align 4
  %859 = zext i32 %858 to i33
  %860 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %859, i33 1) #12
  %861 = extractvalue { i33, i1 } %860, 1
  %862 = extractvalue { i33, i1 } %860, 0
  %863 = icmp slt i33 %862, 0
  %864 = or i1 %861, %863
  br i1 %864, label %865, label %866, !prof !2

865:                                              ; preds = %856
  call void @llvm.trap() #12
  unreachable

866:                                              ; preds = %856
  %867 = trunc i33 %862 to i32
  store i32 %867, i32* %857, align 4
  br label %868

868:                                              ; preds = %846, %851, %866
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kPseudoClassE, i64 0, i64 0), i8** %91, align 8
  store %"class.WTF::StringImpl"* %849, %"class.WTF::StringImpl"** %92, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %848, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %8) #12
  %869 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %870 = icmp eq %"class.WTF::StringImpl"* %869, null
  br i1 %870, label %884, label %871

871:                                              ; preds = %868
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %873 = load atomic i32, i32* %872 monotonic, align 4
  %874 = and i32 %873, 2
  %875 = icmp eq i32 %874, 0
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %877 = load i32, i32* %876, align 4
  br i1 %875, label %878, label %880

878:                                              ; preds = %871
  %879 = add i32 %877, -1
  store i32 %879, i32* %876, align 4
  br label %880

880:                                              ; preds = %878, %871
  %881 = phi i32 [ %879, %878 ], [ %877, %871 ]
  %882 = icmp eq i32 %881, 0
  br i1 %882, label %883, label %884

883:                                              ; preds = %880
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %869) #12
  br label %884

884:                                              ; preds = %868, %880, %883
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  br label %885

885:                                              ; preds = %884, %837
  %886 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %838, i64 1
  %887 = icmp eq %"class.blink::Member.2522"* %886, %74
  br i1 %887, label %836, label %888

888:                                              ; preds = %885, %892
  %889 = phi %"class.blink::Member.2522"* [ %893, %892 ], [ %886, %885 ]
  %890 = bitcast %"class.blink::Member.2522"* %889 to i64*
  %891 = load i64, i64* %890, align 8
  switch i64 %891, label %895 [
    i64 -1, label %892
    i64 0, label %892
  ]

892:                                              ; preds = %888, %888
  %893 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %889, i64 1
  %894 = icmp eq %"class.blink::Member.2522"* %893, %74
  br i1 %894, label %836, label %888

895:                                              ; preds = %888
  %896 = icmp eq %"class.blink::Member.2522"* %889, %74
  br i1 %896, label %836, label %837
}

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::HTMLElement"* @_ZN5blink12_GLOBAL__N_126GetParentForDirectionalityERKNS_11HTMLElementERb(%"class.blink::HTMLElement"* dereferenceable(104), i8* nocapture dereferenceable(1)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::HTMLElement"* %0 to i8 (%"class.blink::Node"*)***
  %5 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %5, i64 34
  %7 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call zeroext i8 %7(%"class.blink::Node"* %3) #12
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.blink::Node"** %11 to %"class.blink::ContainerNode"**
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = icmp eq %"class.blink::ContainerNode"* %13, null
  br i1 %14, label %80, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %13, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  %20 = bitcast %"class.blink::ContainerNode"* %13 to %"class.blink::HTMLElement"*
  %21 = select i1 %19, %"class.blink::HTMLElement"* %20, %"class.blink::HTMLElement"* null
  br label %80

22:                                               ; preds = %2
  %23 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %3) #12
  br i1 %23, label %24, label %34

24:                                               ; preds = %22
  %25 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node18ShadowRootOfParentEv(%"class.blink::Node"* %3) #12
  %26 = icmp eq %"class.blink::ShadowRoot"* %25, null
  br i1 %26, label %80, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %25, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %28, align 8
  %30 = icmp eq %"class.blink::SlotAssignment"* %29, null
  br i1 %30, label %80, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* nonnull %25) #12
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  store i8 1, i8* %1, align 1
  br label %80

34:                                               ; preds = %31, %22
  %35 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %3) #12
  %36 = icmp eq %"class.blink::ContainerNode"* %35, null
  br i1 %36, label %67, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %67

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %53 = bitcast %"class.blink::Member"* %52 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp ne %"class.WTF::StringImpl"* %56, %58
  %60 = and i32 %45, 512
  %61 = icmp eq i32 %60, 0
  %62 = or i1 %61, %59
  br i1 %62, label %67, label %63

63:                                               ; preds = %48
  %64 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %43) #12
  %65 = tail call zeroext i1 @_ZNK5blink10ShadowRoot25NeedsSlotAssignmentRecalcEv(%"class.blink::ShadowRoot"* %64) #12
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  store i8 1, i8* %1, align 1
  br label %80

67:                                               ; preds = %34, %37, %48, %63, %42
  %68 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %3) #12
  %69 = icmp eq %"class.blink::ContainerNode"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %68, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 12
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = and i32 %72, 48
  %77 = icmp eq i32 %76, 0
  %78 = bitcast %"class.blink::ContainerNode"* %68 to %"class.blink::HTMLElement"*
  %79 = select i1 %77, %"class.blink::HTMLElement"* %78, %"class.blink::HTMLElement"* null
  br label %80

80:                                               ; preds = %27, %70, %67, %75, %66, %15, %10, %24, %33
  %81 = phi %"class.blink::HTMLElement"* [ null, %66 ], [ null, %33 ], [ null, %24 ], [ null, %27 ], [ %21, %15 ], [ null, %10 ], [ %79, %75 ], [ null, %70 ], [ null, %67 ]
  ret %"class.blink::HTMLElement"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink7Element12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Element"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  tail call void @_ZN5blink7Element9HideNonceEv(%"class.blink::Element"* %3) #12
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 917504
  %8 = icmp eq i32 %7, 131072
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %3) #12
  %11 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %10, i64 0, i32 8
  %12 = load i8, i8* %11, align 4, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %3) #12
  %16 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %15, i64 0, i32 1
  %17 = bitcast %"class.blink::ListedElement.base"* %16 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"* %17, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  br label %18

18:                                               ; preds = %9, %2, %14
  ret i32 0
}

declare i32 @_ZN5blink7Element12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Element"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink7Element9HideNonceEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element11RemovedFromERNS_13ContainerNodeE(%"class.blink::Element"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 917504
  %7 = icmp eq i32 %6, 131072
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %3) #12
  %10 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %9, i64 0, i32 8
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %3) #12
  %15 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %14, i64 0, i32 1
  %16 = bitcast %"class.blink::ListedElement.base"* %15 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::ListedElement"* %16, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  br label %17

17:                                               ; preds = %8, %2, %13
  ret void
}

declare void @_ZN5blink7Element11RemovedFromERNS_13ContainerNodeE(%"class.blink::Element"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink13ListedElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 917504
  %6 = icmp eq i32 %5, 131072
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %9 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %8) #12
  %10 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %9, i64 0, i32 8
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %8) #12
  %15 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %14, i64 0, i32 1
  %16 = bitcast %"class.blink::ListedElement.base"* %15 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::ListedElement"* %16, %"class.blink::Document"* dereferenceable(2848) %1) #12
  br label %17

17:                                               ; preds = %7, %2, %13
  %18 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"* %18, %"class.blink::Document"* dereferenceable(2848) %1) #12
  ret void
}

declare void @_ZN5blink13ListedElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::ListedElement"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::HTMLDimension", align 8
  %8 = bitcast %"class.blink::HTMLDimension"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast %"class.blink::HTMLDimension"* %7 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %7, i64 0, i32 0
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %7, i64 0, i32 1
  store double 0.000000e+00, double* %11, align 8
  %12 = call zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::HTMLDimension"* nonnull dereferenceable(16) %7) #12
  br i1 %12, label %13, label %44

13:                                               ; preds = %6
  %14 = icmp eq i32 %2, 438
  br i1 %14, label %15, label %28

15:                                               ; preds = %13
  %16 = load i32, i32* %10, align 8
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %18, label %35

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 2
  %24 = bitcast %"class.blink::UseCounter"* %23 to void (%"class.blink::UseCounter"*, i32)***
  %25 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %25, i64 3
  %27 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %26, align 8
  call void %27(%"class.blink::UseCounter"* %23, i32 905) #12
  br label %28

28:                                               ; preds = %18, %13
  %29 = load i32, i32* %10, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = icmp eq i32 %29, 1
  %33 = icmp eq i32 %4, 0
  %34 = and i1 %33, %32
  br i1 %34, label %44, label %35

35:                                               ; preds = %15, %31
  %36 = phi i1 [ %32, %31 ], [ false, %15 ]
  %37 = load double, double* %11, align 8
  %38 = fcmp oeq double %37, 0.000000e+00
  %39 = icmp eq i32 %5, 0
  %40 = and i1 %39, %38
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = select i1 %36, i32 2, i32 5
  %43 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::Element"* %43, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 %2, double %37, i32 %42) #12
  br label %44

44:                                               ; preds = %35, %31, %28, %6, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11HTMLElement25ParseColorWithLegacyRulesERKN3WTF6StringERNS_5ColorE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.2992", align 8
  %4 = alloca i8, align 1
  %5 = alloca i16, align 2
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %356, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %356, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #12
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %19, align 8
  %21 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %23, %27
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm12EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [12 x i8]* nonnull dereferenceable(12) @.str.22)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  br i1 %37, label %338, label %38

38:                                               ; preds = %34
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %62 [
    i32 4, label %44
    i32 7, label %44
  ]

44:                                               ; preds = %41, %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  br i1 %48, label %54, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.WTF::StringImpl"* %49 to i8*
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  br label %57

54:                                               ; preds = %44
  %55 = bitcast %"class.WTF::StringImpl"* %49 to i16*
  %56 = load i16, i16* %55, align 2
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi i16 [ %53, %50 ], [ %56, %54 ]
  %59 = icmp eq i16 %58, 35
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = call zeroext i1 @_ZN5blink5Color13SetFromStringERKN3WTF6StringE(%"class.blink::Color"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br i1 %61, label %338, label %62

62:                                               ; preds = %41, %60, %38, %57
  %63 = call zeroext i1 @_ZN5blink5Color13SetNamedColorERKN3WTF6StringE(%"class.blink::Color"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  br i1 %63, label %338, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::Vector.2992"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 136, i1 false) #12
  %67 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %66, i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 130, i32* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %69, align 4
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %93, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %93, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 1
  br i1 %80, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.WTF::StringImpl"* %81 to i8*
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  br label %89

86:                                               ; preds = %76
  %87 = bitcast %"class.WTF::StringImpl"* %81 to i16*
  %88 = load i16, i16* %87, align 2
  br label %89

89:                                               ; preds = %86, %82
  %90 = phi i16 [ %85, %82 ], [ %88, %86 ]
  %91 = icmp eq i16 %90, 35
  %92 = zext i1 %91 to i64
  br label %93

93:                                               ; preds = %89, %72, %64
  %94 = phi i64 [ 0, %72 ], [ 0, %64 ], [ %92, %89 ]
  %95 = bitcast i16* %5 to i8*
  br label %96

96:                                               ; preds = %176, %93
  %97 = phi %"class.WTF::StringImpl"* [ %178, %176 ], [ %70, %93 ]
  %98 = phi i64 [ %177, %176 ], [ %94, %93 ]
  %99 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  br label %103

103:                                              ; preds = %100, %96
  %104 = phi i32 [ %102, %100 ], [ 0, %96 ]
  %105 = zext i32 %104 to i64
  %106 = icmp ult i64 %98, %105
  %107 = load i32, i32* %69, align 4
  br i1 %106, label %108, label %179

108:                                              ; preds = %103
  %109 = icmp ult i32 %107, 128
  br i1 %109, label %110, label %181

110:                                              ; preds = %108
  br i1 %99, label %139, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = icmp ult i64 %98, %114
  br i1 %115, label %116, label %139

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  br i1 %120, label %127, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %98
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  br label %131

127:                                              ; preds = %116
  %128 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  %129 = getelementptr inbounds i16, i16* %128, i64 %98
  %130 = load i16, i16* %129, align 2
  br label %131

131:                                              ; preds = %127, %122
  %132 = phi i16 [ %126, %122 ], [ %130, %127 ]
  %133 = add i16 %132, -48
  %134 = icmp ult i16 %133, 10
  br i1 %134, label %150, label %135

135:                                              ; preds = %131
  %136 = or i16 %132, 32
  %137 = add i16 %136, -97
  %138 = icmp ult i16 %137, 6
  br i1 %138, label %150, label %139

139:                                              ; preds = %135, %111, %110
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 48, i8* %4, align 1
  %140 = load i32, i32* %68, align 8
  %141 = icmp eq i32 %107, %140
  br i1 %141, label %148, label %142, !prof !2

142:                                              ; preds = %139
  %143 = load i8*, i8** %67, align 8
  %144 = zext i32 %107 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  store i8 48, i8* %145, align 1
  %146 = load i32, i32* %69, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %69, align 4
  br label %149

148:                                              ; preds = %139
  call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.2992"* nonnull %3, i8* nonnull dereferenceable(1) %4) #12
  br label %149

149:                                              ; preds = %148, %142
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %176

150:                                              ; preds = %135, %131
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %95) #12
  %151 = load atomic i32, i32* %117 monotonic, align 4
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 %98
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  br label %163

159:                                              ; preds = %150
  %160 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  %161 = getelementptr inbounds i16, i16* %160, i64 %98
  %162 = load i16, i16* %161, align 2
  br label %163

163:                                              ; preds = %159, %154
  %164 = phi i16 [ %158, %154 ], [ %162, %159 ]
  store i16 %164, i16* %5, align 2
  %165 = load i32, i32* %68, align 8
  %166 = icmp eq i32 %107, %165
  br i1 %166, label %174, label %167, !prof !2

167:                                              ; preds = %163
  %168 = load i8*, i8** %67, align 8
  %169 = zext i32 %107 to i64
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  %171 = trunc i16 %164 to i8
  store i8 %171, i8* %170, align 1
  %172 = load i32, i32* %69, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %69, align 4
  br label %175

174:                                              ; preds = %163
  call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_(%"class.WTF::Vector.2992"* nonnull %3, i16* nonnull dereferenceable(2) %5) #12
  br label %175

175:                                              ; preds = %174, %167
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %95) #12
  br label %176

176:                                              ; preds = %175, %149
  %177 = add nuw nsw i64 %98, 1
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  br label %96

179:                                              ; preds = %103
  %180 = icmp eq i32 %107, 0
  br i1 %180, label %330, label %181

181:                                              ; preds = %108, %179
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 48, i8* %6, align 1
  %182 = load i32, i32* %68, align 8
  %183 = icmp eq i32 %107, %182
  br i1 %183, label %190, label %184, !prof !2

184:                                              ; preds = %181
  %185 = load i8*, i8** %67, align 8
  %186 = zext i32 %107 to i64
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  store i8 48, i8* %187, align 1
  %188 = load i32, i32* %69, align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* %69, align 4
  br label %192

190:                                              ; preds = %181
  call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.2992"* nonnull %3, i8* nonnull dereferenceable(1) %6) #12
  %191 = load i32, i32* %69, align 4
  br label %192

192:                                              ; preds = %190, %184
  %193 = phi i32 [ %189, %184 ], [ %191, %190 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  store i8 48, i8* %7, align 1
  %194 = load i32, i32* %68, align 8
  %195 = icmp eq i32 %193, %194
  br i1 %195, label %202, label %196, !prof !2

196:                                              ; preds = %192
  %197 = load i8*, i8** %67, align 8
  %198 = zext i32 %193 to i64
  %199 = getelementptr inbounds i8, i8* %197, i64 %198
  store i8 48, i8* %199, align 1
  %200 = load i32, i32* %69, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %69, align 4
  br label %204

202:                                              ; preds = %192
  call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.2992"* nonnull %3, i8* nonnull dereferenceable(1) %7) #12
  %203 = load i32, i32* %69, align 4
  br label %204

204:                                              ; preds = %202, %196
  %205 = phi i32 [ %201, %196 ], [ %203, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  %206 = icmp ult i32 %205, 6
  br i1 %206, label %207, label %233

207:                                              ; preds = %204
  %208 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 0) #12
  %209 = load i8, i8* %208, align 1
  %210 = sext i8 %209 to i32
  %211 = icmp slt i8 %209, 65
  %212 = add nsw i32 %210, -48
  %213 = add nsw i32 %210, 9
  %214 = and i32 %213, 15
  %215 = select i1 %211, i32 %212, i32 %214
  %216 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 1) #12
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp slt i8 %217, 65
  %220 = add nsw i32 %218, -48
  %221 = add nsw i32 %218, 9
  %222 = and i32 %221, 15
  %223 = select i1 %219, i32 %220, i32 %222
  %224 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 2) #12
  %225 = load i8, i8* %224, align 1
  %226 = sext i8 %225 to i32
  %227 = icmp slt i8 %225, 65
  %228 = add nsw i32 %226, -48
  %229 = add nsw i32 %226, 9
  %230 = and i32 %229, 15
  %231 = select i1 %227, i32 %228, i32 %230
  %232 = call i32 @_ZN5blink7MakeRGBEiii(i32 %215, i32 %223, i32 %231) #12
  br label %325

233:                                              ; preds = %204
  %234 = udiv i32 %205, 3
  %235 = icmp ult i32 %234, 8
  %236 = select i1 %235, i32 %234, i32 8
  %237 = sub nsw i32 %234, %236
  %238 = shl nuw i32 %234, 1
  %239 = sub i32 %238, %236
  %240 = mul i32 %234, 3
  %241 = sub i32 %240, %236
  %242 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %237) #12
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 48
  br i1 %244, label %245, label %266

245:                                              ; preds = %233, %259
  %246 = phi i32 [ %262, %259 ], [ %241, %233 ]
  %247 = phi i32 [ %261, %259 ], [ %239, %233 ]
  %248 = phi i32 [ %260, %259 ], [ %237, %233 ]
  %249 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %247) #12
  %250 = load i8, i8* %249, align 1
  %251 = icmp eq i8 %250, 48
  br i1 %251, label %252, label %266

252:                                              ; preds = %245
  %253 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %246) #12
  %254 = load i8, i8* %253, align 1
  %255 = icmp eq i8 %254, 48
  %256 = sub i32 %234, %248
  %257 = icmp ugt i32 %256, 2
  %258 = and i1 %257, %255
  br i1 %258, label %259, label %266

259:                                              ; preds = %252
  %260 = add i32 %248, 1
  %261 = add i32 %247, 1
  %262 = add i32 %246, 1
  %263 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %260) #12
  %264 = load i8, i8* %263, align 1
  %265 = icmp eq i8 %264, 48
  br i1 %265, label %245, label %266

266:                                              ; preds = %259, %252, %245, %233
  %267 = phi i32 [ %237, %233 ], [ %248, %252 ], [ %248, %245 ], [ %260, %259 ]
  %268 = phi i32 [ %239, %233 ], [ %247, %252 ], [ %247, %245 ], [ %261, %259 ]
  %269 = phi i32 [ %241, %233 ], [ %246, %252 ], [ %246, %245 ], [ %262, %259 ]
  %270 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %267) #12
  %271 = load i8, i8* %270, align 1
  %272 = add i32 %267, 1
  %273 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %272) #12
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %271 to i32
  %276 = icmp slt i8 %271, 65
  %277 = shl nsw i32 %275, 4
  %278 = add nsw i32 %277, 144
  %279 = select i1 %276, i32 %277, i32 %278
  %280 = and i32 %279, 240
  %281 = sext i8 %274 to i32
  %282 = icmp slt i8 %274, 65
  %283 = add nsw i32 %281, -48
  %284 = add nsw i32 %281, 9
  %285 = and i32 %284, 15
  %286 = select i1 %282, i32 %283, i32 %285
  %287 = or i32 %286, %280
  %288 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %268) #12
  %289 = load i8, i8* %288, align 1
  %290 = add i32 %268, 1
  %291 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %290) #12
  %292 = load i8, i8* %291, align 1
  %293 = sext i8 %289 to i32
  %294 = icmp slt i8 %289, 65
  %295 = shl nsw i32 %293, 4
  %296 = add nsw i32 %295, 144
  %297 = select i1 %294, i32 %295, i32 %296
  %298 = and i32 %297, 240
  %299 = sext i8 %292 to i32
  %300 = icmp slt i8 %292, 65
  %301 = add nsw i32 %299, -48
  %302 = add nsw i32 %299, 9
  %303 = and i32 %302, 15
  %304 = select i1 %300, i32 %301, i32 %303
  %305 = or i32 %304, %298
  %306 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %269) #12
  %307 = load i8, i8* %306, align 1
  %308 = add i32 %269, 1
  %309 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"* nonnull %3, i32 %308) #12
  %310 = load i8, i8* %309, align 1
  %311 = sext i8 %307 to i32
  %312 = icmp slt i8 %307, 65
  %313 = shl nsw i32 %311, 4
  %314 = add nsw i32 %313, 144
  %315 = select i1 %312, i32 %313, i32 %314
  %316 = and i32 %315, 240
  %317 = sext i8 %310 to i32
  %318 = icmp slt i8 %310, 65
  %319 = add nsw i32 %317, -48
  %320 = add nsw i32 %317, 9
  %321 = and i32 %320, 15
  %322 = select i1 %318, i32 %319, i32 %321
  %323 = or i32 %322, %316
  %324 = call i32 @_ZN5blink7MakeRGBEiii(i32 %287, i32 %305, i32 %323) #12
  br label %325

325:                                              ; preds = %266, %207
  %326 = phi i32 [ %324, %266 ], [ %232, %207 ]
  %327 = load i32, i32* %69, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %330, label %329, !prof !2

329:                                              ; preds = %325
  store i32 0, i32* %69, align 4
  br label %330

330:                                              ; preds = %329, %325, %179
  %331 = phi i32 [ %326, %329 ], [ %326, %325 ], [ -16777216, %179 ]
  %332 = load i8*, i8** %67, align 8
  %333 = icmp eq i8* %66, %332
  br i1 %333, label %336, label %334, !prof !5

334:                                              ; preds = %330
  %335 = bitcast %"class.WTF::Vector.2992"* %3 to %"class.WTF::VectorBuffer.2993"*
  call void @_ZN3WTF12VectorBufferIcLj130ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.2993"* nonnull %335, i8* %332) #12
  br label %336

336:                                              ; preds = %330, %334
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %65) #12
  %337 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %1, i64 0, i32 0
  store i32 %331, i32* %337, align 4
  br label %338

338:                                              ; preds = %336, %62, %60, %34
  %339 = phi i1 [ false, %34 ], [ true, %60 ], [ true, %62 ], [ true, %336 ]
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #12
  br label %355

355:                                              ; preds = %338, %351, %354
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %356

356:                                              ; preds = %2, %13, %355
  %357 = phi i1 [ %339, %355 ], [ false, %13 ], [ false, %2 ]
  ret i1 %357
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm12EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [12 x i8]* dereferenceable(12)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 11
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %221, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %333, %14, %28, %221, %235, %249, %263, %277, %291, %305, %319, %42, %59, %77, %93, %109, %125, %141, %157, %173, %189, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %189 ], [ false, %14 ], [ false, %28 ], [ false, %221 ], [ false, %235 ], [ false, %249 ], [ false, %263 ], [ false, %277 ], [ false, %291 ], [ false, %305 ], [ false, %319 ], [ %346, %333 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  br i1 %204, label %205, label %75

205:                                              ; preds = %189
  %206 = getelementptr inbounds i16, i16* %44, i64 10
  %207 = load i16, i16* %206, align 2
  %208 = add i16 %207, -65
  %209 = icmp ult i16 %208, 26
  %210 = zext i1 %209 to i16
  %211 = shl nuw nsw i16 %210, 5
  %212 = or i16 %211, %207
  %213 = zext i16 %212 to i32
  %214 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 10
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  ret i1 %220

221:                                              ; preds = %28
  %222 = getelementptr inbounds i8, i8* %15, i64 2
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 2
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %75

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 3
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 3
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  br i1 %248, label %249, label %75

249:                                              ; preds = %235
  %250 = getelementptr inbounds i8, i8* %15, i64 4
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 4
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i64
  %259 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = sext i8 %260 to i32
  %262 = icmp eq i32 %255, %261
  br i1 %262, label %263, label %75

263:                                              ; preds = %249
  %264 = getelementptr inbounds i8, i8* %15, i64 5
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i64
  %267 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 5
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i64
  %273 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = icmp eq i32 %269, %275
  br i1 %276, label %277, label %75

277:                                              ; preds = %263
  %278 = getelementptr inbounds i8, i8* %15, i64 6
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i64
  %281 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 6
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i64
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = sext i8 %288 to i32
  %290 = icmp eq i32 %283, %289
  br i1 %290, label %291, label %75

291:                                              ; preds = %277
  %292 = getelementptr inbounds i8, i8* %15, i64 7
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i64
  %295 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i32
  %298 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 7
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i64
  %301 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = sext i8 %302 to i32
  %304 = icmp eq i32 %297, %303
  br i1 %304, label %305, label %75

305:                                              ; preds = %291
  %306 = getelementptr inbounds i8, i8* %15, i64 8
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i64
  %309 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %308
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i64
  %315 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = sext i8 %316 to i32
  %318 = icmp eq i32 %311, %317
  br i1 %318, label %319, label %75

319:                                              ; preds = %305
  %320 = getelementptr inbounds i8, i8* %15, i64 9
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i64
  %323 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %322
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 9
  %327 = load i8, i8* %326, align 1
  %328 = zext i8 %327 to i64
  %329 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %328
  %330 = load i8, i8* %329, align 1
  %331 = sext i8 %330 to i32
  %332 = icmp eq i32 %325, %331
  br i1 %332, label %333, label %75

333:                                              ; preds = %319
  %334 = getelementptr inbounds i8, i8* %15, i64 10
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i64
  %337 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = getelementptr inbounds [12 x i8], [12 x i8]* %1, i64 0, i64 10
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i64
  %343 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = sext i8 %344 to i32
  %346 = icmp eq i32 %339, %345
  br label %75
}

declare zeroext i1 @_ZN5blink5Color13SetFromStringERKN3WTF6StringE(%"class.blink::Color"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5Color13SetNamedColorERKN3WTF6StringE(%"class.blink::Color"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement19AddHTMLColorToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::HTMLElement"* nocapture readnone, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = call zeroext i1 @_ZN5blink11HTMLElement25ParseColorWithLegacyRulesERKN3WTF6StringERNS_5ColorE(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::Color"* nonnull dereferenceable(4) %5)
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = load i32, i32* %7, align 4
  %11 = call %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32 %10) #12
  %12 = getelementptr inbounds %"class.blink::cssvalue::CSSColor", %"class.blink::cssvalue::CSSColor"* %11, i64 0, i32 0
  call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %1, i32 %2, %"class.blink::CSSValue"* dereferenceable(3) %12, i1 zeroext false) #12
  br label %13

13:                                               ; preds = %4, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #12
  ret void
}

declare %"class.blink::cssvalue::CSSColor"* @_ZN5blink8cssvalue8CSSColor6CreateEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %3 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %3, i64 166
  %5 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::HTMLElement"* %0) #12
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  %9 = tail call dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"* %8) #12
  %10 = tail call %"class.blink::LabelsNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14LabelsNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"* %9, %"class.blink::ContainerNode"* dereferenceable(80) %8, i32 28) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi %"class.blink::LabelsNodeList"* [ %10, %7 ], [ null, %1 ]
  ret %"class.blink::LabelsNodeList"* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %4 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %4, i64 14
  %6 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::Event"* %1) #12
  %8 = bitcast %"class.blink::Event"* %1 to %"class.blink::KeyboardEvent"*
  %9 = select i1 %7, %"class.blink::KeyboardEvent"* %8, %"class.blink::KeyboardEvent"* null
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE, align 8
  %11 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  %16 = icmp ne %"class.blink::KeyboardEvent"* %9, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  tail call void @_ZN5blink11HTMLElement19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::HTMLElement"* %0, %"class.blink::KeyboardEvent"* nonnull dereferenceable(176) %9)
  %19 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 64
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18, %2
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"* %24, %"class.blink::Event"* dereferenceable(104) %1) #12
  br label %25

25:                                               ; preds = %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::HTMLElement"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #12
  %9 = tail call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %8) #12
  br i1 %9, label %10, label %39

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %12 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %12, i64 102
  %14 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::HTMLElement"* %0) #12
  %16 = xor i1 %15, true
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_focusless_spatial_navigation_enabled_E, align 1
  %18 = icmp ne i8 %17, 0
  %19 = or i1 %18, %16
  br i1 %19, label %39, label %20

20:                                               ; preds = %10
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %23) #12
  %24 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %25 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::Element"*)***
  %26 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %26, i64 126
  %28 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::Element"* %24) #12
  br i1 %29, label %39, label %30

30:                                               ; preds = %20
  %31 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %3) #12
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = tail call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* %1) #12
  switch i32 %33, label %39 [
    i32 32, label %34
    i32 13, label %34
  ]

34:                                               ; preds = %32, %32
  %35 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %3, %"class.blink::Event"* %35, i32 1) #12
  %36 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %37 = load i16, i16* %36, align 8
  %38 = or i16 %37, 64
  store i16 %38, i16* %36, align 8
  br label %39

39:                                               ; preds = %10, %34, %32, %20, %30, %2
  ret void
}

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11HTMLElement24HandleKeyboardActivationERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %8 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %8, i64 14
  %10 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Event"* %1) #12
  %12 = bitcast %"class.blink::Event"* %1 to %"class.blink::KeyboardEvent"*
  %13 = icmp eq %"class.blink::Event"* %1, null
  %14 = xor i1 %11, true
  %15 = or i1 %13, %14
  br i1 %15, label %123, label %16

16:                                               ; preds = %2
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kKeydownE, align 8
  %18 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  br i1 %22, label %23, label %58

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 1, i32 5, i32 1
  %25 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = bitcast %"class.absl::optional.638"* %24 to %"class.WTF::StringImpl"**
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %30, align 8
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %31, i64* %32, align 8
  br label %41

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 1
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

41:                                               ; preds = %33, %29
  %42 = phi i64 [ %40, %33 ], [ %31, %29 ]
  %43 = phi i32 [ %36, %33 ], [ 0, %29 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  br label %58

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %54 = bitcast %"class.blink::HTMLElement"* %0 to void (%"class.blink::Element"*, i1)***
  %55 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %55, i64 140
  %57 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %56, align 8
  call void %57(%"class.blink::Element"* %53, i1 zeroext true) #12
  br label %123

58:                                               ; preds = %50, %16
  %59 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %19, %16 ]
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kKeypressE, align 8
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %59, %62
  br i1 %63, label %64, label %77

64:                                               ; preds = %58
  %65 = call i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"* nonnull %12) #12
  switch i32 %65, label %66 [
    i32 13, label %68
    i32 32, label %73
  ]

66:                                               ; preds = %64
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  br label %77

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %69, %"class.blink::Event"* nonnull %1, i32 1) #12
  %70 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %71 = load i16, i16* %70, align 8
  %72 = or i16 %71, 64
  store i16 %72, i16* %70, align 8
  br label %123

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %75 = load i16, i16* %74, align 8
  %76 = or i16 %75, 64
  store i16 %76, i16* %74, align 8
  br label %123

77:                                               ; preds = %66, %58
  %78 = phi %"class.WTF::StringImpl"* [ %67, %66 ], [ %59, %58 ]
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kKeyupE, align 8
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %78, %81
  br i1 %82, label %83, label %123

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 1, i32 5, i32 1
  %85 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = bitcast %"class.absl::optional.638"* %84 to %"class.WTF::StringImpl"**
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %91, i64* %92, align 8
  br label %101

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %101

101:                                              ; preds = %93, %89
  %102 = phi i64 [ %100, %93 ], [ %91, %89 ]
  %103 = phi i32 [ %96, %93 ], [ 0, %89 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %103, i32* %104, align 8
  %105 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #12
  %106 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %102, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  br i1 %109, label %110, label %123

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = trunc i32 %113 to i8
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  %117 = call zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"* %111) #12
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %111, %"class.blink::Event"* nonnull %1, i32 1) #12
  br label %119

119:                                              ; preds = %110, %118, %116
  %120 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %121 = load i16, i16* %120, align 8
  %122 = or i16 %121, 64
  store i16 %122, i16* %120, align 8
  br label %123

123:                                              ; preds = %101, %77, %2, %119, %73, %68, %52
  %124 = phi i1 [ true, %52 ], [ true, %119 ], [ true, %73 ], [ true, %68 ], [ false, %2 ], [ false, %77 ], [ false, %101 ]
  ret i1 %124
}

declare i32 @_ZNK5blink13KeyboardEvent8charCodeEv(%"class.blink::KeyboardEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %3 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %3, i64 117
  %5 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::HTMLElement"* %0) #12
  %7 = xor i1 %6, true
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_123IsEditableOrEditingHostERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %2)
  ret i1 %3
}

declare zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11HTMLElement20offsetLeftForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, %"class.blink::Node"* %2, i32 15) #12
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, %"class.blink::Node"* %2, i32 15) #12
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %29 = tail call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %25, %"class.blink::Element"* %28) #12
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi %"class.blink::Element"* [ %29, %27 ], [ null, %21 ]
  %32 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %2) #12
  %33 = icmp eq %"class.blink::LayoutBoxModelObject"* %32, null
  br i1 %33, label %76, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %36, i64 108
  %38 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::LayoutBoxModelObject"* nonnull %32, %"class.blink::Element"* %31) #12
  %40 = sdiv i32 %39, 64
  %41 = srem i32 %39, 64
  %42 = add nsw i32 %41, 32
  %43 = ashr i32 %42, 6
  %44 = add nsw i32 %43, %40
  %45 = icmp sgt i32 %44, 33554431
  br i1 %45, label %52, label %46

46:                                               ; preds = %34
  %47 = icmp slt i32 %44, -33554432
  %48 = shl i32 %44, 6
  %49 = select i1 %47, i32 -2147483648, i32 %48
  %50 = sitofp i32 %49 to float
  %51 = fmul float %50, 1.562500e-02
  br label %52

52:                                               ; preds = %46, %34
  %53 = phi float [ 0x4180000000000000, %34 ], [ %51, %46 ]
  %54 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %59, i64 0, i32 6
  %61 = load float, float* %60, align 8
  %62 = fdiv float %53, %61
  %63 = fmul float %62, 6.400000e+01
  %64 = fcmp ult float %63, 0xC1E0000000000000
  %65 = fcmp ugt float %63, 0x41DFFFFFE0000000
  %66 = fcmp ogt float %63, 0xC1E0000000000000
  %67 = select i1 %66, float %63, float 0xC1E0000000000000
  %68 = fptosi float %67 to i32
  %69 = select i1 %64, i32 0, i32 2147483647
  %70 = select i1 %65, i32 %69, i32 %68
  %71 = sdiv i32 %70, 64
  %72 = srem i32 %70, 64
  %73 = add nsw i32 %72, 32
  %74 = ashr i32 %73, 6
  %75 = add nsw i32 %74, %71
  br label %76

76:                                               ; preds = %30, %52
  %77 = phi i32 [ %75, %52 ], [ 0, %30 ]
  ret i32 %77
}

declare void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink11HTMLElement20unclosedOffsetParentEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, %"class.blink::Node"* %2, i32 15) #12
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %26 = tail call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %22, %"class.blink::Element"* %25) #12
  br label %27

27:                                               ; preds = %18, %24
  %28 = phi %"class.blink::Element"* [ %26, %24 ], [ null, %18 ]
  ret %"class.blink::Element"* %28
}

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11HTMLElement19offsetTopForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, %"class.blink::Node"* %2, i32 15) #12
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, %"class.blink::Node"* %2, i32 15) #12
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %29 = tail call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %25, %"class.blink::Element"* %28) #12
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi %"class.blink::Element"* [ %29, %27 ], [ null, %21 ]
  %32 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %2) #12
  %33 = icmp eq %"class.blink::LayoutBoxModelObject"* %32, null
  br i1 %33, label %76, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %36, i64 109
  %38 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::LayoutBoxModelObject"* nonnull %32, %"class.blink::Element"* %31) #12
  %40 = sdiv i32 %39, 64
  %41 = srem i32 %39, 64
  %42 = add nsw i32 %41, 32
  %43 = ashr i32 %42, 6
  %44 = add nsw i32 %43, %40
  %45 = icmp sgt i32 %44, 33554431
  br i1 %45, label %52, label %46

46:                                               ; preds = %34
  %47 = icmp slt i32 %44, -33554432
  %48 = shl i32 %44, 6
  %49 = select i1 %47, i32 -2147483648, i32 %48
  %50 = sitofp i32 %49 to float
  %51 = fmul float %50, 1.562500e-02
  br label %52

52:                                               ; preds = %46, %34
  %53 = phi float [ 0x4180000000000000, %34 ], [ %51, %46 ]
  %54 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %59, i64 0, i32 6
  %61 = load float, float* %60, align 8
  %62 = fdiv float %53, %61
  %63 = fmul float %62, 6.400000e+01
  %64 = fcmp ult float %63, 0xC1E0000000000000
  %65 = fcmp ugt float %63, 0x41DFFFFFE0000000
  %66 = fcmp ogt float %63, 0xC1E0000000000000
  %67 = select i1 %66, float %63, float 0xC1E0000000000000
  %68 = fptosi float %67 to i32
  %69 = select i1 %64, i32 0, i32 2147483647
  %70 = select i1 %65, i32 %69, i32 %68
  %71 = sdiv i32 %70, 64
  %72 = srem i32 %70, 64
  %73 = add nsw i32 %72, 32
  %74 = ashr i32 %73, 6
  %75 = add nsw i32 %74, %71
  br label %76

76:                                               ; preds = %30, %52
  %77 = phi i32 [ %75, %52 ], [ 0, %30 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11HTMLElement21offsetWidthForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, %"class.blink::Node"* %2, i32 15) #12
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, %"class.blink::Node"* %2, i32 15) #12
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %29 = tail call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %25, %"class.blink::Element"* %28) #12
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi %"class.blink::Element"* [ %29, %27 ], [ null, %21 ]
  %32 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %2) #12
  %33 = icmp eq %"class.blink::LayoutBoxModelObject"* %32, null
  br i1 %33, label %72, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %36, i64 112
  %38 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::LayoutBoxModelObject"* nonnull %32, %"class.blink::Element"* %31) #12
  %40 = icmp sgt i32 %39, 33554431
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = icmp slt i32 %39, -33554432
  %43 = shl i32 %39, 6
  %44 = select i1 %42, i32 -2147483648, i32 %43
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  br label %47

47:                                               ; preds = %41, %34
  %48 = phi float [ 0x4180000000000000, %34 ], [ %46, %41 ]
  %49 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %54, i64 0, i32 6
  %56 = load float, float* %55, align 8
  %57 = fdiv float %48, %56
  %58 = fmul float %57, 6.400000e+01
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = sdiv i32 %65, 64
  %67 = srem i32 %65, 64
  %68 = add nsw i32 %67, 32
  %69 = ashr i32 %68, 6
  %70 = add nsw i32 %69, %66
  %71 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element27RecordScrollbarSizeForStudyEibb(%"class.blink::Element"* %71, i32 %70, i1 zeroext true, i1 zeroext true) #12
  br label %72

72:                                               ; preds = %30, %47
  %73 = phi i32 [ %70, %47 ], [ 0, %30 ]
  ret i32 %73
}

declare void @_ZN5blink7Element27RecordScrollbarSizeForStudyEibb(%"class.blink::Element"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11HTMLElement22offsetHeightForBindingEv(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document35EnsurePaintLocationDataValidForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, %"class.blink::Node"* %2, i32 15) #12
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, %"class.blink::Node"* %2, i32 15) #12
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %29 = tail call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %25, %"class.blink::Element"* %28) #12
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi %"class.blink::Element"* [ %29, %27 ], [ null, %21 ]
  %32 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %2) #12
  %33 = icmp eq %"class.blink::LayoutBoxModelObject"* %32, null
  br i1 %33, label %72, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %36, i64 113
  %38 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::LayoutBoxModelObject"* nonnull %32, %"class.blink::Element"* %31) #12
  %40 = icmp sgt i32 %39, 33554431
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = icmp slt i32 %39, -33554432
  %43 = shl i32 %39, 6
  %44 = select i1 %42, i32 -2147483648, i32 %43
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  br label %47

47:                                               ; preds = %41, %34
  %48 = phi float [ 0x4180000000000000, %34 ], [ %46, %41 ]
  %49 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %54, i64 0, i32 6
  %56 = load float, float* %55, align 8
  %57 = fdiv float %48, %56
  %58 = fmul float %57, 6.400000e+01
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = sdiv i32 %65, 64
  %67 = srem i32 %65, 64
  %68 = add nsw i32 %67, 32
  %69 = ashr i32 %68, 6
  %70 = add nsw i32 %69, %66
  %71 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element27RecordScrollbarSizeForStudyEibb(%"class.blink::Element"* %71, i32 %70, i1 zeroext false, i1 zeroext true) #12
  br label %72

72:                                               ; preds = %30, %47
  %73 = phi i32 [ %70, %47 ], [ 0, %30 ]
  ret i32 %73
}

declare void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"*, %"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink13ListedElement20FormAttributeChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

declare void @_ZN5blink4Node35UpdateDistributionForUnknownReasonsEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink10LocalFrame10SetIsInertEb(%"class.blink::LocalFrame"*, i1 zeroext) unnamed_addr #2

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node7IsInertEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink7Element8setNonceERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink7Element14ParseAttributeERKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ElementInternals"* @_ZN5blink11HTMLElement15attachInternalsERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"* %3) #12
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25, i64 0, i64 0)) #12
  br label %43

9:                                                ; preds = %2
  %10 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %3) #12
  %11 = icmp eq %"class.blink::CustomElementRegistry"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3
  %16 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %10, %"class.WTF::AtomicString"* dereferenceable(8) %15) #12
  %17 = icmp eq %"class.blink::CustomElementDefinition"* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %9, %12
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.26, i64 0, i64 0)) #12
  br label %43

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %16, i64 0, i32 7
  %21 = load i8, i8* %20, align 1, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.27, i64 0, i64 0)) #12
  br label %43

24:                                               ; preds = %19
  %25 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* %3) #12
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.28, i64 0, i64 0)) #12
  br label %43

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 917504
  switch i32 %30, label %31 [
    i32 131072, label %32
    i32 262144, label %32
  ]

31:                                               ; preds = %27
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.29, i64 0, i64 0)) #12
  br label %43

32:                                               ; preds = %27, %27
  tail call void @_ZN5blink7Element21SetDidAttachInternalsEv(%"class.blink::Element"* %3) #12
  %33 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 2
  %38 = bitcast %"class.blink::UseCounter"* %37 to void (%"class.blink::UseCounter"*, i32)***
  %39 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %39, i64 3
  %41 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %40, align 8
  tail call void %41(%"class.blink::UseCounter"* %37, i32 3435) #12
  %42 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %3) #12
  br label %43

43:                                               ; preds = %18, %23, %26, %31, %32, %8
  %44 = phi %"class.blink::ElementInternals"* [ null, %8 ], [ null, %23 ], [ null, %26 ], [ null, %31 ], [ %42, %32 ], [ null, %18 ]
  ret %"class.blink::ElementInternals"* %44
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element7IsValueEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink7Element21SetDidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"* %2) #12
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::HTMLElement"* %0 to i1 (%"class.blink::HTMLElement"*)***
  %6 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %6, i64 138
  %8 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::HTMLElement"* %0) #12
  %10 = xor i1 %9, true
  br label %11

11:                                               ; preds = %4, %1
  %12 = phi i1 [ false, %1 ], [ %10, %4 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %7) #12
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %13, i64 0, i32 1
  %15 = bitcast %"class.blink::ListedElement.base"* %14 to %"class.blink::ListedElement"*
  %16 = tail call zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"* %15) #12
  br label %17

17:                                               ; preds = %6, %1, %12
  %18 = phi i1 [ %16, %12 ], [ false, %6 ], [ false, %1 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %7) #12
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %13, i64 0, i32 1
  %15 = bitcast %"class.blink::ListedElement.base"* %14 to %"class.blink::ListedElement"*
  %16 = tail call zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"* %15) #12
  %17 = xor i1 %16, true
  br label %18

18:                                               ; preds = %6, %1, %12
  %19 = phi i1 [ false, %6 ], [ %17, %12 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i1 [ false, %1 ], [ %11, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %7) #12
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %13, i64 0, i32 1
  %15 = bitcast %"class.blink::ListedElement.base"* %14 to %"class.blink::ListedElement"*
  %16 = tail call zeroext i1 @_ZNK5blink13ListedElement12WillValidateEv(%"class.blink::ListedElement"* %15) #12
  br label %17

17:                                               ; preds = %6, %1, %12
  %18 = phi i1 [ false, %6 ], [ %16, %12 ], [ false, %1 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink13ListedElement12WillValidateEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %7) #12
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %13, i64 0, i32 1
  %15 = bitcast %"class.blink::ListedElement.base"* %14 to %"class.blink::ListedElement"*
  %16 = tail call zeroext i1 @_ZN5blink13ListedElement14IsValidElementEv(%"class.blink::ListedElement"* %15) #12
  br label %17

17:                                               ; preds = %6, %1, %12
  %18 = phi i1 [ false, %6 ], [ %16, %12 ], [ false, %1 ]
  ret i1 %18
}

declare zeroext i1 @_ZN5blink13ListedElement14IsValidElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 917504
  %5 = icmp eq i32 %4, 131072
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %7) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i1 [ false, %1 ], [ %11, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"* %2) #12
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 917504
  %6 = icmp eq i32 %5, 131072
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink7Element26GetCustomElementDefinitionEv(%"class.blink::Element"* %2) #12
  %9 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %2) #12
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %13, i64 0, i32 1
  %15 = bitcast %"class.blink::ListedElement.base"* %14 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement19TakeStateAndRestoreEv(%"class.blink::ListedElement"* %15) #12
  br label %16

16:                                               ; preds = %7, %1, %12
  ret void
}

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink13ListedElement19TakeStateAndRestoreEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, -1025
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 185
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %292, label %15

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZNK5blink11HTMLElement16HasDirectionAutoEv(%"class.blink::HTMLElement"* %0)
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = load i32, i32* %4, align 8
  %19 = or i32 %18, 134217728
  store i32 %19, i32* %4, align 8
  br label %292

20:                                               ; preds = %15
  %21 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %21, label %270, label %22

22:                                               ; preds = %20
  %23 = load i32, i32* %4, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %270

26:                                               ; preds = %22
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kBdiTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %31 = bitcast %"class.blink::Member"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %292, label %38

38:                                               ; preds = %26
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 3
  %41 = bitcast %"class.blink::Member.1"* %40 to %"class.blink::ElementData"**
  %42 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %41, align 8
  %43 = icmp eq %"class.blink::ElementData"* %42, null
  br i1 %43, label %94, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::UniqueElementData"*
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 1, i32 1
  %52 = bitcast %"class.blink::Member.14"* %51 to %"class.blink::Attribute"**
  %53 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %50, i64 0, i32 2, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  br label %61

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 1
  %58 = bitcast %"class.blink::ElementData"* %57 to %"class.blink::Attribute"*
  %59 = lshr i32 %46, 1
  %60 = and i32 %59, 268435455
  br label %61

61:                                               ; preds = %56, %49
  %62 = phi %"class.blink::Attribute"* [ %58, %56 ], [ %53, %49 ]
  %63 = phi i32 [ %60, %56 ], [ %55, %49 ]
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %87, %67
  %73 = phi %"class.blink::Attribute"* [ %62, %67 ], [ %88, %87 ]
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %75, %69
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, %85
  br i1 %86, label %90, label %87

87:                                               ; preds = %82, %77
  %88 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 1
  %89 = icmp eq %"class.blink::Attribute"* %88, %65
  br i1 %89, label %94, label %72

90:                                               ; preds = %82, %72
  %91 = icmp eq %"class.blink::Attribute"* %73, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 1
  br label %96

94:                                               ; preds = %87, %90, %61, %38
  %95 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %96

96:                                               ; preds = %94, %92
  %97 = phi %"class.WTF::AtomicString"* [ %95, %94 ], [ %93, %92 ]
  %98 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %103, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %105 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %104, i64* %105, align 8
  br label %113

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %112, align 8
  br label %113

113:                                              ; preds = %106, %102
  %114 = phi i32 [ %109, %106 ], [ 0, %102 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %114, i32* %115, align 8
  %116 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4) #12
  br i1 %116, label %259, label %117

117:                                              ; preds = %113
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %258, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %124 = bitcast %"class.WTF::StringImpl"* %123 to i8*
  %125 = icmp eq i32 %122, 3
  br i1 %125, label %126, label %258

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %150, label %131

131:                                              ; preds = %126
  %132 = load i8, i8* %124, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %138 = sext i8 %137 to i32
  %139 = icmp eq i32 %136, %138
  br i1 %139, label %140, label %197

140:                                              ; preds = %131
  %141 = getelementptr inbounds i8, i8* %124, i64 1
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %148 = sext i8 %147 to i32
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %187, label %197

150:                                              ; preds = %126
  %151 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = add i16 %152, -65
  %154 = icmp ult i16 %153, 26
  %155 = zext i1 %154 to i16
  %156 = shl nuw nsw i16 %155, 5
  %157 = or i16 %156, %152
  %158 = zext i16 %157 to i32
  %159 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %160 = sext i8 %159 to i32
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %162, label %197

162:                                              ; preds = %150
  %163 = getelementptr inbounds i16, i16* %151, i64 1
  %164 = load i16, i16* %163, align 2
  %165 = add i16 %164, -65
  %166 = icmp ult i16 %165, 26
  %167 = zext i1 %166 to i16
  %168 = shl nuw nsw i16 %167, 5
  %169 = or i16 %168, %164
  %170 = zext i16 %169 to i32
  %171 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %172 = sext i8 %171 to i32
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %174, label %197

174:                                              ; preds = %162
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1, i32 1
  %176 = bitcast i32* %175 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = add i16 %177, -65
  %179 = icmp ult i16 %178, 26
  %180 = zext i1 %179 to i16
  %181 = shl nuw nsw i16 %180, 5
  %182 = or i16 %181, %177
  %183 = zext i16 %182 to i32
  %184 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %183, %185
  br i1 %186, label %259, label %197

187:                                              ; preds = %140
  %188 = getelementptr inbounds i8, i8* %124, i64 2
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %193, %195
  br i1 %196, label %259, label %197

197:                                              ; preds = %140, %131, %162, %150, %187, %174
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %221, label %202

202:                                              ; preds = %197
  %203 = load i8, i8* %124, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %209 = sext i8 %208 to i32
  %210 = icmp eq i32 %207, %209
  br i1 %210, label %211, label %258

211:                                              ; preds = %202
  %212 = getelementptr inbounds i8, i8* %124, i64 1
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %217, %219
  br i1 %220, label %260, label %258

221:                                              ; preds = %197
  %222 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %223 = load i16, i16* %222, align 2
  %224 = add i16 %223, -65
  %225 = icmp ult i16 %224, 26
  %226 = zext i1 %225 to i16
  %227 = shl nuw nsw i16 %226, 5
  %228 = or i16 %227, %223
  %229 = zext i16 %228 to i32
  %230 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %233, label %258

233:                                              ; preds = %221
  %234 = getelementptr inbounds i16, i16* %222, i64 1
  %235 = load i16, i16* %234, align 2
  %236 = add i16 %235, -65
  %237 = icmp ult i16 %236, 26
  %238 = zext i1 %237 to i16
  %239 = shl nuw nsw i16 %238, 5
  %240 = or i16 %239, %235
  %241 = zext i16 %240 to i32
  %242 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %241, %243
  br i1 %244, label %245, label %258

245:                                              ; preds = %233
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1, i32 1
  %247 = bitcast i32* %246 to i16*
  %248 = load i16, i16* %247, align 2
  %249 = add i16 %248, -65
  %250 = icmp ult i16 %249, 26
  %251 = zext i1 %250 to i16
  %252 = shl nuw nsw i16 %251, 5
  %253 = or i16 %252, %248
  %254 = zext i16 %253 to i32
  %255 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %256 = sext i8 %255 to i32
  %257 = icmp eq i32 %254, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  br i1 %257, label %292, label %270

258:                                              ; preds = %120, %221, %233, %202, %211, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  br label %270

259:                                              ; preds = %187, %113, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  br label %292

260:                                              ; preds = %211
  %261 = getelementptr inbounds i8, i8* %124, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %268 = sext i8 %267 to i32
  %269 = icmp eq i32 %266, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  br i1 %269, label %292, label %270

270:                                              ; preds = %20, %22, %245, %258, %260
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %271 = call fastcc %"class.blink::HTMLElement"* @_ZN5blink12_GLOBAL__N_126GetParentForDirectionalityERKNS_11HTMLElementERb(%"class.blink::HTMLElement"* dereferenceable(104) %0, i8* nonnull dereferenceable(1) %3)
  %272 = load i8, i8* %3, align 1, !range !4
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  %275 = load i32, i32* %4, align 8
  %276 = or i32 %275, 536870912
  br label %289

277:                                              ; preds = %270
  %278 = icmp eq %"class.blink::HTMLElement"* %271, null
  br i1 %278, label %291, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %271, i64 0, i32 0, i32 0, i32 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 268435456
  %283 = icmp eq i32 %282, 0
  %284 = load i32, i32* %4, align 8
  %285 = and i32 %284, -805306369
  %286 = or i32 %284, 268435456
  %287 = select i1 %283, i32 %285, i32 %286
  %288 = and i32 %287, -536870913
  br label %289

289:                                              ; preds = %274, %279
  %290 = phi i32 [ %288, %279 ], [ %276, %274 ]
  store i32 %290, i32* %4, align 8
  br label %291

291:                                              ; preds = %289, %277
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  br label %292

292:                                              ; preds = %1, %26, %245, %259, %17, %291, %260
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7ElementD2Ev(%"class.blink::Element"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #12
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11HTMLElementD0Ev(%"class.blink::HTMLElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #12
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11HTMLElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #12
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.WTF::HashMap.2766"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #2

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #2

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_12CSSValueListEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink12CSSValueListC1ENS_8CSSValue18ValueListSeparatorE(%"class.blink::CSSValueList"*, i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.2599"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2599"* %0, i32 %5) #12
  %6 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %7, i64 %9
  %11 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %12 = bitcast %"class.blink::Member.2484"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #12
  br label %18

18:                                               ; preds = %2, %15
  %19 = load i32, i32* %3, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2599"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2599"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2599"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2484"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.2599"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #12
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.2599"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.2484"*
  %33 = icmp eq %"class.blink::Member.2484"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %37) #12
  %39 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %8, align 8
  %40 = icmp eq %"class.blink::Member.2484"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 32, %34 ]
  %43 = phi %"class.blink::Member.2484"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.2484"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #12
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #12
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #12
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #12
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2599"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2599"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %5, align 8
  %7 = icmp eq %"class.blink::Member.2484"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.2484"*
  %10 = icmp eq %"class.blink::Member.2484"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2599"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.2599"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.2484"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #12
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.2484"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.2484"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #12
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #12
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2600"* %20, %"class.blink::Member.2484"* %6) #12
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64 %44) #12
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #12
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.2484"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !5

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.2484"*
  %58 = icmp ne %"class.blink::Member.2484"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.2484"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #12
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.2484"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.2484"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.2484"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #12
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.2599"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #12
  %87 = load %"class.blink::Member.2484"*, %"class.blink::Member.2484"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.2484"*
  %90 = icmp eq %"class.blink::Member.2484"* %87, %89
  br i1 %90, label %93, label %91, !prof !5

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2600"* %92, %"class.blink::Member.2484"* %87) #12
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.2599"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.2599", %"class.WTF::Vector.2599"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #12
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_8CSSValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.38, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.40, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_8CSSValueEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2484"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.2484", %"class.blink::Member.2484"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2484"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::CSSValue"*
  %35 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_8CSSValueEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2600"*, %"class.blink::Member.2484"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::Member.2484"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node18ShadowRootOfParentEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN5blink7MakeRGBEiii(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.2992"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2992"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2992"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 130
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %38) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2992"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2992"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 130, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2992"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 131
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2992"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 130, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = bitcast %"class.WTF::Vector.2992"* %0 to %"class.WTF::VectorBuffer.2993"*
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2992"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 130, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIcLj130ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.2993"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %28) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::Vector.2992"* %0 to %"class.WTF::VectorBuffer.2993"*
  tail call void @_ZN3WTF12VectorBufferIcLj130ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.2993"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2992"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.41, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIcLj130ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.2993"*, i8*) local_unnamed_addr #11 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_(%"class.WTF::Vector.2992"*, i16* dereferenceable(2)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2992"* %0, i32 %5) #12
  %6 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = load i16, i16* %1, align 2
  %12 = trunc i16 %11 to i8
  store i8 %12, i8* %10, align 1
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIcLj130ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2992", %"class.WTF::Vector.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #10

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2496"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S6_SC_EERKS2_RjEENS_18HashTableAddResultISD_S4_EEOT0_OT1_(%"class.WTF::HashTable.2493"*, %"class.blink::QualifiedName"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.2496", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2496"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2493"* %0, %"struct.WTF::KeyValuePair.2496"* null)
  %10 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.2496"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #12
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %109, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.2496"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.2496"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.2496"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %152, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.2496"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.2496"* %67, null
  br i1 %77, label %109, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2496"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #12
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !6
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 0, i32 1
  store i32 0, i32* %83, align 8, !alias.scope !6
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  br label %100

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %87 = load i32, i32* %86, align 4, !noalias !6
  %88 = and i32 %87, 16777216
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #12, !noalias !6
  br label %92

92:                                               ; preds = %90, %85
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 0, i32 1
  store i32 0, i32* %93, align 8, !alias.scope !6
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %67, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %95 = load i32, i32* %86, align 4
  %96 = and i32 %95, 16777216
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #12
  br label %100

100:                                              ; preds = %82, %92, %98
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %67, i64 0, i32 1
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %102) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #12
  %103 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 2147483647
  %106 = and i32 %105, 2147483647
  %107 = and i32 %104, -2147483648
  %108 = or i32 %106, %107
  store i32 %108, i32* %103, align 8
  br label %109

109:                                              ; preds = %29, %76, %100
  %110 = phi %"struct.WTF::KeyValuePair.2496"* [ %67, %100 ], [ %72, %76 ], [ %33, %29 ]
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %112 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, null
  br i1 %112, label %120, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16777216
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #12
  br label %120

120:                                              ; preds = %118, %113, %109
  %121 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %111 to i64
  %122 = bitcast %"struct.WTF::KeyValuePair.2496"* %110 to i64*
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %110, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %124, null
  br i1 %125, label %138, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 16777216
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #12
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %124) #12
  %137 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %124 to i8*
  call void @free(i8* %137) #12
  br label %138

138:                                              ; preds = %120, %126, %131, %136
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %110, i64 0, i32 1
  %140 = load i32, i32* %2, align 4
  store i32 %140, i32* %139, align 4
  %141 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %13, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %138
  %151 = call %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2493"* %0, %"struct.WTF::KeyValuePair.2496"* %110)
  br label %152

152:                                              ; preds = %63, %138, %150
  %153 = phi i8 [ 1, %138 ], [ 1, %150 ], [ 0, %63 ]
  %154 = phi %"struct.WTF::KeyValuePair.2496"* [ %110, %138 ], [ %151, %150 ], [ %56, %63 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, i8 } undef, %"struct.WTF::KeyValuePair.2496"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.2496"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2493"*, %"struct.WTF::KeyValuePair.2496"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE13AllocateTableEj(i32 %32) #12
  %34 = call %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_(%"class.WTF::HashTable.2493"* %0, %"struct.WTF::KeyValuePair.2496"* %33, i32 %32, %"struct.WTF::KeyValuePair.2496"* %1) #12
  ret %"struct.WTF::KeyValuePair.2496"* %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE13AllocateTableEj(i32) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair.2496", align 8
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameEjEEEEPKcv, i64 0, i64 0)) #12
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.2496"*
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.WTF::KeyValuePair.2496"* %2 to i8*
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !9
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %2, i64 0, i32 0
  br label %16

15:                                               ; preds = %37, %1
  ret %"struct.WTF::KeyValuePair.2496"* %6

16:                                               ; preds = %37, %8
  %17 = phi i64 [ 0, %8 ], [ %39, %37 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %6, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !noalias !9
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !alias.scope !9
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  store i32 0, i32* %13, align 8, !alias.scope !9
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* null, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  br label %37

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !9
  %26 = and i32 %25, 16777216
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #12, !noalias !9
  br label %30

30:                                               ; preds = %28, %23
  store i32 0, i32* %13, align 8, !alias.scope !9
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %32 = load i32, i32* %24, align 4
  %33 = and i32 %32, 16777216
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #12
  br label %37

37:                                               ; preds = %21, %30, %35
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %6, i64 %17, i32 1
  store i32 0, i32* %38, align 8
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  %39 = add nuw nsw i64 %17, 1
  %40 = icmp eq i64 %39, %3
  br i1 %40, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2496"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSE_(%"class.WTF::HashTable.2493"*, %"struct.WTF::KeyValuePair.2496"*, i32, %"struct.WTF::KeyValuePair.2496"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2493", align 8
  %6 = bitcast %"class.WTF::HashTable.2493"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2493"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2496"* %1, %"struct.WTF::KeyValuePair.2496"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2493"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2493"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %15, align 8
  %25 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %24 to i64
  br label %60

26:                                               ; preds = %99
  %27 = bitcast %"class.WTF::HashTable.2493"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.2493"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %100, %26 ]
  %35 = phi %"struct.WTF::KeyValuePair.2496"* [ null, %16 ], [ %103, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %101, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"struct.WTF::KeyValuePair.2496"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %51, %41
  %44 = phi i64 [ 0, %41 ], [ %52, %51 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %37, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair.2496"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %50) #12
  br label %51

51:                                               ; preds = %49, %43
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, %42
  br i1 %53, label %54, label %43

54:                                               ; preds = %51, %39
  %55 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #12
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %56

56:                                               ; preds = %30, %54
  %57 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -2147483648
  store i32 %59, i32* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.2496"* %35

60:                                               ; preds = %21, %99
  %61 = phi i64 [ %25, %21 ], [ %100, %99 ]
  %62 = phi i32 [ %13, %21 ], [ %101, %99 ]
  %63 = phi %"struct.WTF::KeyValuePair.2496"* [ %24, %21 ], [ %102, %99 ]
  %64 = phi %"struct.WTF::KeyValuePair.2496"* [ null, %21 ], [ %103, %99 ]
  %65 = phi i32 [ 0, %21 ], [ %104, %99 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %63, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %70
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %73 = or i1 %72, %71
  br i1 %73, label %99, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %67, i64 0, i32 0
  %76 = call { %"struct.WTF::KeyValuePair.2496"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2493"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %75) #12
  %77 = extractvalue { %"struct.WTF::KeyValuePair.2496"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %77, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %78) #12
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %77, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %79, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %79, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777216
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #12
  br label %89

89:                                               ; preds = %74, %82, %87
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %77, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %63, i64 %66, i32 1
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %15, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %93, i64 %66
  %95 = icmp eq %"struct.WTF::KeyValuePair.2496"* %94, %3
  %96 = select i1 %95, %"struct.WTF::KeyValuePair.2496"* %77, %"struct.WTF::KeyValuePair.2496"* %64
  %97 = load i32, i32* %12, align 8
  %98 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %93 to i64
  br label %99

99:                                               ; preds = %60, %89
  %100 = phi i64 [ %61, %60 ], [ %98, %89 ]
  %101 = phi i32 [ %62, %60 ], [ %97, %89 ]
  %102 = phi %"struct.WTF::KeyValuePair.2496"* [ %63, %60 ], [ %93, %89 ]
  %103 = phi %"struct.WTF::KeyValuePair.2496"* [ %64, %60 ], [ %96, %89 ]
  %104 = add i32 %65, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %26, label %60
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2496"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2493"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #12
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.2496"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.2496"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.2496"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.2496"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.2496"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.2496"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.2496"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.2496"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, i8 } undef, %"struct.WTF::KeyValuePair.2496"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.2496"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_jEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IjEEEES9_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable.2493"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2496"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #12
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.2496"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.2496"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %70, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair.2496"* %50, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %59, %68, %23, %2
  %71 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %3, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2493", %"class.WTF::HashTable.2493"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %71, i64 %74
  br label %81

76:                                               ; preds = %68
  %77 = load %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"** %3, align 8
  %78 = load i32, i32* %7, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2496", %"struct.WTF::KeyValuePair.2496"* %77, i64 %79
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi %"struct.WTF::KeyValuePair.2496"* [ %50, %76 ], [ %75, %70 ]
  %83 = phi %"struct.WTF::KeyValuePair.2496"* [ %80, %76 ], [ %75, %70 ]
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } undef, %"struct.WTF::KeyValuePair.2496"* %82, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } %84, %"struct.WTF::KeyValuePair.2496"* %83, 1
  ret { %"struct.WTF::KeyValuePair.2496"*, %"struct.WTF::KeyValuePair.2496"* } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #12
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBRElement"*
  tail call void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #12
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLBRElement"* %51
}

declare void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8 1 }
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3011"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3011", %"class.WTF::StringTypeAdapter.3011"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3011"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2604"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2604"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3012", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3011"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3011"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.3011"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3011", %"class.WTF::StringTypeAdapter.3011"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.3012"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3012"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3011"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3013"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2604"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3011"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3012", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3011"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3011"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.3011"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3011", %"class.WTF::StringTypeAdapter.3011"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.3012"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3012"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3011"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3012", %"class.WTF::StringTypeAdapter.3012"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3013"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2604"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3011"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2604"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3011", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3011"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3011", %"class.WTF::StringTypeAdapter.3011"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2604", %"class.WTF::StringAppend.2604"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3011"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3011"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2604", %"class.WTF::StringAppend.2604"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3011"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3013"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3011"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3013"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.2522"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2681"*, %"class.blink::HTMLElement"** dereferenceable(8), %"class.blink::HTMLElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %4, align 8
  %6 = icmp eq %"class.blink::Member.2522"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2681"* %0, %"class.blink::Member.2522"* null)
  %9 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.2522"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::HTMLElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %40, align 8
  %42 = icmp eq %"class.blink::HTMLElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::HTMLElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::HTMLElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.2522"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.2522"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::HTMLElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::HTMLElement"* %59, inttoptr (i64 -1 to %"class.blink::HTMLElement"*)
  %67 = select i1 %66, %"class.blink::Member.2522"* %60, %"class.blink::Member.2522"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %73, align 8
  %75 = icmp eq %"class.blink::HTMLElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.2522"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.2522"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.2522"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %89 = ptrtoint %"class.blink::HTMLElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.2522"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::HTMLElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #12
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.2522"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #12
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2681"* %0, %"class.blink::Member.2522"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.2522"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.2522"*, i8 } undef, %"class.blink::Member.2522"* %117, 0
  %119 = insertvalue { %"class.blink::Member.2522"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.2522"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2681"*, %"class.blink::Member.2522"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2681"* %0, i32 %35, %"class.blink::Member.2522"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.2522"*
  %44 = call %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2681"* %0, %"class.blink::Member.2522"* %43, i32 %40, %"class.blink::Member.2522"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.2522"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.2522"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2681"*, i32, %"class.blink::Member.2522"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %31, align 8
  %33 = icmp eq %"class.blink::Member.2522"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.2522"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.2522"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.2522"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.2522"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.2522"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.2522"* %61, %"class.blink::Member.2522"* %55
  %63 = bitcast %"class.blink::Member.2522"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.2522"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.2522"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.2681"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #12
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.2522"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2681"* %0, %"class.blink::Member.2522"* %42, i32 %1, %"class.blink::Member.2522"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.2522"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.2522"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.2522"* %87, %"class.blink::Member.2522"* %82
  %89 = bitcast %"class.blink::Member.2522"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.2522"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.2522"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.2522"* %99, %"class.blink::Member.2522"* %88
  %101 = bitcast %"class.blink::Member.2522"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.2522"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.2522"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.2522"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2522"* @_ZN3WTF9HashTableIN5blink6MemberINS1_11HTMLElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2681"*, %"class.blink::Member.2522"*, i32, %"class.blink::Member.2522"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.2522"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.2522"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.2522"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #12
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2681"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.2522"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.2522"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.2522"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #12
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2681", %"class.WTF::HashTable.2681"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.2522"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.2522"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.2522"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.2522"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.2522"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %70, align 8
  %72 = icmp eq %"class.blink::HTMLElement"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::HTMLElement"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.2522"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.2522"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.2522"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.2522"* %93, null
  %95 = ptrtoint %"class.blink::Member.2522"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::HTMLElement"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::HTMLElement"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::HTMLElement"* %99, inttoptr (i64 -1 to %"class.blink::HTMLElement"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.2522"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %113, align 8
  %115 = icmp eq %"class.blink::HTMLElement"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.2522"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.2522"*, %"class.blink::Member.2522"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.2522"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.2522"* %118, %"class.blink::Member.2522"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.2522"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.2522"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.54, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([351 x i8], [351 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_11HTMLElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2522"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.2522", %"class.blink::Member.2522"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.2522"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_11HTMLElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare dereferenceable(56) %"class.blink::NodeListsNodeData"* @_ZN5blink13ContainerNode15EnsureNodeListsEv(%"class.blink::ContainerNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LabelsNodeList"* @_ZN5blink17NodeListsNodeData8AddCacheINS_14LabelsNodeListEEEPT_RNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::NodeListsNodeData"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.2941", align 8
  %5 = alloca i8*, align 8
  %6 = bitcast %"struct.std::__1::pair.2941"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %4, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  store i8* null, i8** %5, align 8
  %32 = getelementptr inbounds %"class.blink::NodeListsNodeData", %"class.blink::NodeListsNodeData"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = call { %"struct.WTF::KeyValuePair.2940"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2938"* %32, %"struct.std::__1::pair.2941"* nonnull dereferenceable(16) %4, i8** nonnull dereferenceable(8) %5) #12
  %34 = extractvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } %33, 0
  %35 = extractvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } %33, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %51

51:                                               ; preds = %30, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  %52 = and i8 %35, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %34, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %55, align 8
  %57 = icmp eq %"class.blink::LiveNodeListBase"* %56, null
  %58 = getelementptr inbounds %"class.blink::LiveNodeListBase", %"class.blink::LiveNodeListBase"* %56, i64 -1, i32 1
  %59 = bitcast %"class.blink::Member.21"* %58 to %"class.blink::LabelsNodeList"*
  %60 = select i1 %57, %"class.blink::LabelsNodeList"* null, %"class.blink::LabelsNodeList"* %59
  br label %79

61:                                               ; preds = %51
  %62 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #12
  %63 = bitcast i8* %62 to %"class.blink::LabelsNodeList"*
  call void @_ZN5blink14LabelsNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::LabelsNodeList"* %63, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %2) #12
  %64 = getelementptr inbounds i8, i8* %62, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %34, i64 0, i32 1
  %69 = icmp eq i8* %62, null
  %70 = getelementptr inbounds i8, i8* %62, i64 16
  %71 = ptrtoint i8* %70 to i64
  %72 = select i1 %69, i64 0, i64 %71
  %73 = bitcast %"class.blink::Member.2942"* %68 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = inttoptr i64 %72 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #12
  br label %79

79:                                               ; preds = %76, %61, %54
  %80 = phi %"class.blink::LabelsNodeList"* [ %60, %54 ], [ %63, %61 ], [ %63, %76 ]
  ret %"class.blink::LabelsNodeList"* %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2940"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES6_DnEENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2938"*, %"struct.std::__1::pair.2941"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2940"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2938"* %0, %"struct.WTF::KeyValuePair.2940"* null)
  %9 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2940"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %1, i64 0, i32 1
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %24 = select i1 %22, %"class.WTF::AtomicString"* %23, %"class.WTF::AtomicString"* %16
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %29, %31
  %33 = and i32 %32, %14
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %11, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -128
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %11, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  %42 = and i1 %38, %41
  br i1 %42, label %118, label %43

43:                                               ; preds = %10
  %44 = xor i32 %32, -1
  %45 = lshr i32 %32, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %69
  %58 = phi %"class.WTF::StringImpl"* [ %40, %43 ], [ %80, %69 ]
  %59 = phi i32 [ %37, %43 ], [ %77, %69 ]
  %60 = phi %"struct.WTF::KeyValuePair.2940"* [ %35, %43 ], [ %75, %69 ]
  %61 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %43 ], [ %70, %69 ]
  %62 = phi i64 [ %34, %43 ], [ %74, %69 ]
  %63 = phi i64 [ 0, %43 ], [ %72, %69 ]
  %64 = icmp eq i32 %59, -127
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = icmp eq i32 %59, %31
  %67 = icmp eq %"class.WTF::StringImpl"* %58, %19
  %68 = and i1 %66, %67
  br i1 %68, label %156, label %69

69:                                               ; preds = %57, %65
  %70 = phi %"struct.WTF::KeyValuePair.2940"* [ %60, %57 ], [ %61, %65 ]
  %71 = icmp eq i64 %63, 0
  %72 = select i1 %71, i64 %56, i64 %63
  %73 = add i64 %72, %62
  %74 = and i64 %73, %15
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %11, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %75, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, -128
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %11, i64 %74, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = and i1 %78, %81
  br i1 %82, label %83, label %57

83:                                               ; preds = %69
  %84 = icmp eq %"struct.WTF::KeyValuePair.2940"* %70, null
  br i1 %84, label %118, label %85

85:                                               ; preds = %83
  %86 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4, !noalias !12
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !12
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #12
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %92
  tail call void @llvm.trap() #12, !noalias !12
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4, !noalias !12
  br label %104

104:                                              ; preds = %85, %87, %102
  %105 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %70, i64 0, i32 0, i32 0
  store i32 -128, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %70, i64 0, i32 0, i32 1
  %108 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  store i64 %105, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %70, i64 0, i32 1
  %110 = bitcast %"class.blink::Member.2942"* %109 to i64*
  store i64 0, i64* %110, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* nonnull %70) #12
  %111 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 2147483647
  %114 = and i32 %113, 2147483647
  %115 = and i32 %112, -2147483648
  %116 = or i32 %114, %115
  store i32 %116, i32* %111, align 8
  %117 = load i32, i32* %30, align 4
  br label %118

118:                                              ; preds = %10, %83, %104
  %119 = phi i32 [ %117, %104 ], [ %31, %83 ], [ %31, %10 ]
  %120 = phi %"struct.WTF::KeyValuePair.2940"* [ %70, %104 ], [ %75, %83 ], [ %35, %10 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %120, i64 0, i32 0, i32 0
  store i32 %119, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %120, i64 0, i32 0, i32 1
  %123 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %125 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store i64 %124, i64* %125, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #12
  br label %142

142:                                              ; preds = %118, %138, %141
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %120, i64 0, i32 1
  %144 = bitcast %"class.blink::Member.2942"* %143 to i64*
  store atomic i64 0, i64* %144 monotonic, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* %120) #12
  %145 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 4
  %148 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  %150 = add i32 %149, %147
  %151 = shl i32 %150, 1
  %152 = load i32, i32* %12, align 8
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %156, label %154

154:                                              ; preds = %142
  %155 = tail call %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2938"* %0, %"struct.WTF::KeyValuePair.2940"* %120)
  br label %156

156:                                              ; preds = %65, %142, %154
  %157 = phi i8 [ 1, %142 ], [ 1, %154 ], [ 0, %65 ]
  %158 = phi %"struct.WTF::KeyValuePair.2940"* [ %120, %142 ], [ %155, %154 ], [ %60, %65 ]
  %159 = insertvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } undef, %"struct.WTF::KeyValuePair.2940"* %158, 0
  %160 = insertvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } %159, i8 %157, 1
  ret { %"struct.WTF::KeyValuePair.2940"*, i8 } %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2938"*, %"struct.WTF::KeyValuePair.2940"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %44, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.2938"* %0, i32 %35, %"struct.WTF::KeyValuePair.2940"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %44, label %90

39:                                               ; preds = %31
  %40 = zext i32 %14 to i64
  %41 = call %"class.blink::HeapHashTableBacking.3028"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %40) #12
  %42 = bitcast %"class.blink::HeapHashTableBacking.3028"* %41 to %"struct.WTF::KeyValuePair.2940"*
  %43 = icmp eq i32 %14, 0
  br i1 %43, label %86, label %49

44:                                               ; preds = %34, %10
  %45 = phi i32 [ %8, %10 ], [ %35, %34 ]
  %46 = zext i32 %45 to i64
  %47 = call %"class.blink::HeapHashTableBacking.3028"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #12
  %48 = bitcast %"class.blink::HeapHashTableBacking.3028"* %47 to %"struct.WTF::KeyValuePair.2940"*
  br label %49

49:                                               ; preds = %44, %39
  %50 = phi i32 [ %14, %39 ], [ %45, %44 ]
  %51 = phi %"struct.WTF::KeyValuePair.2940"* [ %42, %39 ], [ %48, %44 ]
  %52 = phi i64 [ %40, %39 ], [ %46, %44 ]
  %53 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !15
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %77, %49
  %56 = phi i64 [ 0, %49 ], [ %84, %77 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %51, i64 %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8, !noalias !15
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4, !noalias !15
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !15
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  call void @llvm.trap() #12, !noalias !15
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4, !noalias !15
  br label %77

77:                                               ; preds = %75, %60, %55
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %57, i64 0, i32 0, i32 0
  store i32 -128, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %51, i64 %56, i32 0, i32 1
  %81 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %78, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %51, i64 %56, i32 1
  %83 = bitcast %"class.blink::Member.2942"* %82 to i64*
  store i64 0, i64* %83, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* %57) #12
  %84 = add nuw nsw i64 %56, 1
  %85 = icmp eq i64 %84, %52
  br i1 %85, label %86, label %55

86:                                               ; preds = %77, %39
  %87 = phi i32 [ 0, %39 ], [ %50, %77 ]
  %88 = phi %"struct.WTF::KeyValuePair.2940"* [ %42, %39 ], [ %51, %77 ]
  %89 = call %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2938"* %0, %"struct.WTF::KeyValuePair.2940"* %88, i32 %87, %"struct.WTF::KeyValuePair.2940"* %1) #12
  br label %90

90:                                               ; preds = %34, %86
  %91 = phi %"struct.WTF::KeyValuePair.2940"* [ %89, %86 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2940"* %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE12ExpandBufferEjPSB_Rb(%"class.WTF::HashTable.2938"*, i32, %"struct.WTF::KeyValuePair.2940"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2940"* %32, null
  br i1 %33, label %196, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = mul nuw nsw i64 %35, 24
  %37 = bitcast %"struct.WTF::KeyValuePair.2940"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %196

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.3028"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking.3028"* %44 to %"struct.WTF::KeyValuePair.2940"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %85, label %47

47:                                               ; preds = %39
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !18
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %72, %47
  %51 = phi i64 [ 0, %47 ], [ %79, %72 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %51
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !18
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4, !noalias !18
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4, !noalias !18
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #12
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !2

69:                                               ; preds = %60
  call void @llvm.trap() #12, !noalias !18
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4, !noalias !18
  br label %72

72:                                               ; preds = %70, %55, %50
  %73 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %52, i64 0, i32 0, i32 0
  store i32 -128, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %51, i32 0, i32 1
  %76 = bitcast %"class.WTF::AtomicString"* %75 to i64*
  store i64 %73, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %51, i32 1
  %78 = bitcast %"class.blink::Member.2942"* %77 to i64*
  store i64 0, i64* %78, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* %52) #12
  %79 = add nuw nsw i64 %51, 1
  %80 = icmp eq i64 %79, %43
  br i1 %80, label %81, label %50

81:                                               ; preds = %72
  br i1 %46, label %85, label %82

82:                                               ; preds = %81
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  br label %98

85:                                               ; preds = %160, %39, %81
  %86 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %81 ], [ null, %39 ], [ %105, %160 ]
  %87 = bitcast %"class.WTF::HashTable.2938"* %0 to %"class.blink::HeapHashTableBacking.3028"**
  store %"class.blink::HeapHashTableBacking.3028"* %44, %"class.blink::HeapHashTableBacking.3028"** %87, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::HeapHashTableBacking.3028", %"class.blink::HeapHashTableBacking.3028"* %44, i64 0, i32 0
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #12
  br label %93

93:                                               ; preds = %85, %90
  %94 = icmp eq i32 %1, 0
  br i1 %94, label %163, label %95

95:                                               ; preds = %93
  %96 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !21
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0, i32 0, i32 0
  br label %165

98:                                               ; preds = %160, %82
  %99 = phi i64 [ 0, %82 ], [ %161, %160 ]
  %100 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %82 ], [ %105, %160 ]
  %101 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %31, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %101, i64 %99
  %103 = icmp eq %"struct.WTF::KeyValuePair.2940"* %102, %2
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %99
  %105 = select i1 %103, %"struct.WTF::KeyValuePair.2940"* %104, %"struct.WTF::KeyValuePair.2940"* %100
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %102, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, -128
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %101, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  %112 = and i1 %108, %111
  %113 = icmp eq i32 %107, -127
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %142

115:                                              ; preds = %98
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8, !noalias !24
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4, !noalias !24
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4, !noalias !24
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #12
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  call void @llvm.trap() #12, !noalias !24
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4, !noalias !24
  br label %135

135:                                              ; preds = %115, %118, %133
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %104, i64 0, i32 0, i32 0
  store i32 -128, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %99, i32 0, i32 1
  %139 = bitcast %"class.WTF::AtomicString"* %138 to i64*
  store i64 %136, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %45, i64 %99, i32 1
  %141 = bitcast %"class.blink::Member.2942"* %140 to i64*
  store i64 0, i64* %141, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* %104) #12
  br label %160

142:                                              ; preds = %98
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2940"* dereferenceable(24) %102, %"struct.WTF::KeyValuePair.2940"* dereferenceable(24) %104)
  %143 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %31, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %143, i64 %99, i32 0, i32 1, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #12
  br label %160

160:                                              ; preds = %159, %156, %142, %135
  %161 = add nuw nsw i64 %99, 1
  %162 = icmp eq i64 %161, %43
  br i1 %162, label %85, label %98

163:                                              ; preds = %187, %93
  %164 = call %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2938"* %0, %"struct.WTF::KeyValuePair.2940"* %42, i32 %1, %"struct.WTF::KeyValuePair.2940"* %86)
  br label %196

165:                                              ; preds = %187, %95
  %166 = phi i64 [ 0, %95 ], [ %194, %187 ]
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %42, i64 %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8, !noalias !21
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4, !noalias !21
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %177 = load i32, i32* %176, align 4, !noalias !21
  %178 = zext i32 %177 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #12
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %175
  call void @llvm.trap() #12, !noalias !21
  unreachable

185:                                              ; preds = %175
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %176, align 4, !noalias !21
  br label %187

187:                                              ; preds = %165, %170, %185
  %188 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %167, i64 0, i32 0, i32 0
  store i32 -128, i32* %189, align 8
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %42, i64 %166, i32 0, i32 1
  %191 = bitcast %"class.WTF::AtomicString"* %190 to i64*
  store i64 %188, i64* %191, align 8
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %42, i64 %166, i32 1
  %193 = bitcast %"class.blink::Member.2942"* %192 to i64*
  store i64 0, i64* %193, align 8
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"* %167) #12
  %194 = add nuw nsw i64 %166, 1
  %195 = icmp eq i64 %194, %35
  br i1 %195, label %163, label %165

196:                                              ; preds = %34, %30, %163
  %197 = phi %"struct.WTF::KeyValuePair.2940"* [ %164, %163 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2940"* %197
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2940"* @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2938"*, %"struct.WTF::KeyValuePair.2940"*, i32, %"struct.WTF::KeyValuePair.2940"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2938", align 8
  %6 = bitcast %"class.WTF::HashTable.2938"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2938"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2940"* %1, %"struct.WTF::KeyValuePair.2940"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2940"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2940"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %19, align 8
  br label %95

21:                                               ; preds = %120
  %22 = bitcast %"class.WTF::HashTable.2938"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %121, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %15 ], [ %123, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2938"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #12
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2938"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2938"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.2940"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %89, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %86, %54
  %57 = phi i64 [ 0, %54 ], [ %87, %86 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %50, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, -128
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %50, i64 %57, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  %64 = and i1 %60, %63
  %65 = icmp eq i32 %59, -127
  %66 = or i1 %65, %64
  br i1 %66, label %86, label %67

67:                                               ; preds = %56
  br i1 %63, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %81

81:                                               ; preds = %80, %77, %67
  store i32 -127, i32* %58, align 4
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %50, i64 %57, i32 0, i32 1
  %83 = bitcast %"class.WTF::AtomicString"* %82 to i64*
  store i64 0, i64* %83, align 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %50, i64 %57, i32 1
  %85 = bitcast %"class.blink::Member.2942"* %84 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  br label %86

86:                                               ; preds = %81, %56
  %87 = add nuw nsw i64 %57, 1
  %88 = icmp eq i64 %87, %55
  br i1 %88, label %89, label %56

89:                                               ; preds = %86, %52
  %90 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %90) #12
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %91

91:                                               ; preds = %49, %89
  %92 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, -2147483648
  store i32 %94, i32* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.2940"* %29

95:                                               ; preds = %18, %120
  %96 = phi i32 [ %13, %18 ], [ %121, %120 ]
  %97 = phi %"struct.WTF::KeyValuePair.2940"* [ %20, %18 ], [ %122, %120 ]
  %98 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %18 ], [ %123, %120 ]
  %99 = phi i32 [ 0, %18 ], [ %124, %120 ]
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %97, i64 %100
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %101, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, -128
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %97, i64 %100, i32 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  %108 = and i1 %104, %107
  %109 = icmp eq i32 %103, -127
  %110 = or i1 %109, %108
  br i1 %110, label %120, label %111

111:                                              ; preds = %95
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %101, i64 0, i32 0
  %113 = call { %"struct.WTF::KeyValuePair.2940"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.2938"* nonnull %5, %"struct.std::__1::pair.2941"* dereferenceable(16) %112) #12
  %114 = extractvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } %113, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2940"* dereferenceable(24) %101, %"struct.WTF::KeyValuePair.2940"* dereferenceable(24) %114) #12
  %115 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %19, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %115, i64 %100
  %117 = icmp eq %"struct.WTF::KeyValuePair.2940"* %116, %3
  %118 = select i1 %117, %"struct.WTF::KeyValuePair.2940"* %114, %"struct.WTF::KeyValuePair.2940"* %98
  %119 = load i32, i32* %12, align 8
  br label %120

120:                                              ; preds = %95, %111
  %121 = phi i32 [ %96, %95 ], [ %119, %111 ]
  %122 = phi %"struct.WTF::KeyValuePair.2940"* [ %97, %95 ], [ %115, %111 ]
  %123 = phi %"struct.WTF::KeyValuePair.2940"* [ %98, %95 ], [ %118, %111 ]
  %124 = add i32 %99, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %21, label %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS4_6MemberINS4_16LiveNodeListBaseEEEEENS4_13HeapAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSE_ISA_EEEELb1EE4MoveEOSB_RSB_(%"struct.WTF::KeyValuePair.2940"* dereferenceable(24), %"struct.WTF::KeyValuePair.2940"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %9, %28, %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %0, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %1, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::AtomicString"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::AtomicString"* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %0, i64 0, i32 1
  %44 = bitcast %"class.blink::Member.2942"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Member.2942"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #12
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %32
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #12
  br label %53

53:                                               ; preds = %32, %51
  %54 = phi i8* [ %52, %51 ], [ %49, %32 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 14
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.3028"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.54, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.3028"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.3028"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS1_12AtomicStringEEENS1_12KeyValuePairIS7_NS_6MemberINS_16LiveNodeListBaseEEEEENS1_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([616 x i8], [616 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINSt3__14pairINS1_14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS1_6MemberINS1_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS1_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #12
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #12
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS3_12AtomicStringEEENS3_12KeyValuePairIS9_NS_6MemberINS_16LiveNodeListBaseEEEEENS3_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS9_EENSJ_ISD_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2940"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %51

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %22, i64 %25, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  %32 = icmp eq i32 %28, -127
  %33 = or i1 %32, %31
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #12
  br label %47

47:                                               ; preds = %46, %43, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS2_12KeyValuePairIS8_NS_6MemberINS_16LiveNodeListBaseEEEEENS2_24KeyValuePairKeyExtractorENS_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS8_NS5_6MemberINS5_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS5_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS8_EENSI_ISC_EEEESJ_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2940"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = udiv i64 %22, 24
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp ugt i64 %22, 23
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %198, %20
  ret void

33:                                               ; preds = %30, %198
  %34 = phi i64 [ 0, %30 ], [ %199, %198 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %3, i64 %34
  br i1 %28, label %36, label %118

36:                                               ; preds = %33
  %37 = bitcast %"struct.WTF::KeyValuePair.2940"* %35 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %3, i64 %34, i32 0, i32 1
  %41 = bitcast %"class.WTF::AtomicString"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i32 %39, -128
  %44 = icmp eq i64 %42, 0
  %45 = and i1 %44, %43
  %46 = icmp eq i32 %39, -127
  %47 = or i1 %46, %45
  br i1 %47, label %198, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %3, i64 %34, i32 1
  %50 = bitcast %"class.blink::Member.2942"* %49 to i64*
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %48
  %54 = inttoptr i64 %51 to i8*
  %55 = and i64 %51, -131072
  %56 = inttoptr i64 %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 4138
  %58 = load i8, i8* %57, align 2
  %59 = icmp eq i8 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 4160
  br label %100

62:                                               ; preds = %53
  %63 = getelementptr inbounds i8, i8* %56, i64 4096
  %64 = bitcast i8* %63 to %"class.blink::NormalPage"*
  %65 = getelementptr inbounds i8, i8* %56, i64 4400
  %66 = bitcast i8* %65 to i8**
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %51, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %71
  %73 = load atomic i8, i8* %72 acquire, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 2, %75
  %77 = trunc i32 %76 to i8
  %78 = add i8 %77, -1
  %79 = and i8 %78, %73
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %62, %81
  %82 = phi i64 [ %83, %81 ], [ %71, %62 ]
  %83 = add i64 %82, -1
  %84 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %64, i64 0, i32 2, i32 0, i32 1, i64 %83
  %85 = load atomic i8, i8* %84 acquire, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %81, label %87

87:                                               ; preds = %81, %62
  %88 = phi i64 [ %71, %62 ], [ %83, %81 ]
  %89 = phi i8 [ %79, %62 ], [ %85, %81 ]
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @llvm.ctlz.i32(i32 %90, i1 true) #12, !range !27
  %92 = add nsw i32 %91, -24
  %93 = shl i64 %88, 3
  %94 = or i64 %93, 7
  %95 = sext i32 %92 to i64
  %96 = sub i64 %94, %95
  %97 = shl i64 %96, 3
  %98 = load i8*, i8** %66, align 16
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  br label %100

100:                                              ; preds = %87, %60
  %101 = phi i8* [ %61, %60 ], [ %99, %87 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 8
  %103 = getelementptr inbounds i8, i8* %101, i64 4
  %104 = bitcast i8* %103 to i16*
  %105 = load atomic i16, i16* %104 acquire, align 2
  %106 = lshr i16 %105, 2
  %107 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %108 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %107, i64 0, i32 0
  %109 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %108, align 8
  %110 = zext i16 %106 to i64
  %111 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %109, i64 %110
  %112 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %111, align 8
  %113 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %112, i64 0, i32 0
  %114 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %113, align 8
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, i64 5
  %117 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %0, i8* nonnull %54, i8* %102, void (%"class.blink::Visitor"*, i8*)* %114) #12
  br label %198

118:                                              ; preds = %33
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %35, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, -128
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %3, i64 %34, i32 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  %125 = and i1 %121, %124
  %126 = icmp eq i32 %120, -127
  %127 = or i1 %126, %125
  br i1 %127, label %198, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %3, i64 %34, i32 1
  %130 = bitcast %"class.blink::Member.2942"* %129 to i64*
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %198, label %133

133:                                              ; preds = %128
  %134 = inttoptr i64 %131 to i8*
  %135 = and i64 %131, -131072
  %136 = inttoptr i64 %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 4138
  %138 = load i8, i8* %137, align 2
  %139 = icmp eq i8 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = getelementptr inbounds i8, i8* %136, i64 4160
  br label %180

142:                                              ; preds = %133
  %143 = getelementptr inbounds i8, i8* %136, i64 4096
  %144 = bitcast i8* %143 to %"class.blink::NormalPage"*
  %145 = getelementptr inbounds i8, i8* %136, i64 4400
  %146 = bitcast i8* %145 to i8**
  %147 = bitcast i8* %145 to i64*
  %148 = load i64, i64* %147, align 16
  %149 = sub i64 %131, %148
  %150 = lshr i64 %149, 3
  %151 = lshr i64 %149, 6
  %152 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %151
  %153 = load atomic i8, i8* %152 acquire, align 1
  %154 = trunc i64 %150 to i32
  %155 = and i32 %154, 7
  %156 = shl i32 2, %155
  %157 = trunc i32 %156 to i8
  %158 = add i8 %157, -1
  %159 = and i8 %158, %153
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %167

161:                                              ; preds = %142, %161
  %162 = phi i64 [ %163, %161 ], [ %151, %142 ]
  %163 = add i64 %162, -1
  %164 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %144, i64 0, i32 2, i32 0, i32 1, i64 %163
  %165 = load atomic i8, i8* %164 acquire, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %161, label %167

167:                                              ; preds = %161, %142
  %168 = phi i64 [ %151, %142 ], [ %163, %161 ]
  %169 = phi i8 [ %159, %142 ], [ %165, %161 ]
  %170 = zext i8 %169 to i32
  %171 = tail call i32 @llvm.ctlz.i32(i32 %170, i1 true) #12, !range !27
  %172 = add nsw i32 %171, -24
  %173 = shl i64 %168, 3
  %174 = or i64 %173, 7
  %175 = sext i32 %172 to i64
  %176 = sub i64 %174, %175
  %177 = shl i64 %176, 3
  %178 = load i8*, i8** %146, align 16
  %179 = getelementptr inbounds i8, i8* %178, i64 %177
  br label %180

180:                                              ; preds = %167, %140
  %181 = phi i8* [ %141, %140 ], [ %179, %167 ]
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = getelementptr inbounds i8, i8* %181, i64 4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 acquire, align 2
  %186 = lshr i16 %185, 2
  %187 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %188 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %187, i64 0, i32 0
  %189 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %188, align 8
  %190 = zext i16 %186 to i64
  %191 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %189, i64 %190
  %192 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %191, align 8
  %193 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %192, i64 0, i32 0
  %194 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %193, align 8
  %195 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %196 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %195, i64 5
  %197 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %196, align 8
  tail call void %197(%"class.blink::Visitor"* %0, i8* nonnull %134, i8* %182, void (%"class.blink::Visitor"*, i8*)* %194) #12
  br label %198

198:                                              ; preds = %180, %128, %36, %48, %100, %118
  %199 = add nuw nsw i64 %34, 1
  %200 = icmp ult i64 %199, %23
  br i1 %200, label %33, label %32
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2940"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEENS_12KeyValuePairIS6_NS3_6MemberINS3_16LiveNodeListBaseEEEEENS_24KeyValuePairKeyExtractorENS3_17NodeListsNodeData31NodeListAtomicCacheMapEntryHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEE16LookupForWritingERKS6_(%"class.WTF::HashTable.2938"*, %"struct.std::__1::pair.2941"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2940"*, %"struct.WTF::KeyValuePair.2940"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2938", %"class.WTF::HashTable.2938"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %1, i64 0, i32 1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %17 = select i1 %15, %"class.WTF::AtomicString"* %16, %"class.WTF::AtomicString"* %9
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.2941", %"struct.std::__1::pair.2941"* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %22, %24
  %26 = and i32 %25, %7
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %4, i64 %27
  %29 = ptrtoint %"struct.WTF::KeyValuePair.2940"* %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, -128
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %4, i64 %27, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  %36 = and i1 %32, %35
  br i1 %36, label %53, label %37

37:                                               ; preds = %2
  %38 = xor i32 %25, -1
  %39 = lshr i32 %25, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %59

51:                                               ; preds = %72
  %52 = ptrtoint %"struct.WTF::KeyValuePair.2940"* %78 to i64
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi i64 [ %29, %2 ], [ %52, %51 ]
  %55 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %2 ], [ %73, %51 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.2940"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.2940"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %87

59:                                               ; preds = %72, %37
  %60 = phi %"class.WTF::StringImpl"* [ %34, %37 ], [ %84, %72 ]
  %61 = phi %"struct.WTF::KeyValuePair.2940"* [ null, %37 ], [ %73, %72 ]
  %62 = phi i32 [ %31, %37 ], [ %81, %72 ]
  %63 = phi i64 [ %29, %37 ], [ %79, %72 ]
  %64 = phi %"struct.WTF::KeyValuePair.2940"* [ %28, %37 ], [ %78, %72 ]
  %65 = phi i64 [ %27, %37 ], [ %77, %72 ]
  %66 = phi i64 [ 0, %37 ], [ %75, %72 ]
  %67 = icmp eq i32 %62, -127
  br i1 %67, label %72, label %68

68:                                               ; preds = %59
  %69 = icmp eq i32 %62, %24
  %70 = icmp eq %"class.WTF::StringImpl"* %60, %12
  %71 = and i1 %70, %69
  br i1 %71, label %87, label %72

72:                                               ; preds = %68, %59
  %73 = phi %"struct.WTF::KeyValuePair.2940"* [ %61, %68 ], [ %64, %59 ]
  %74 = icmp eq i64 %66, 0
  %75 = select i1 %74, i64 %50, i64 %66
  %76 = add i64 %75, %65
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.2940"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %78, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, -128
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %4, i64 %77, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = and i1 %82, %85
  br i1 %86, label %51, label %59

87:                                               ; preds = %68, %53
  %88 = phi i64 [ %58, %53 ], [ %63, %68 ]
  %89 = phi i8 [ 0, %53 ], [ 1, %68 ]
  %90 = inttoptr i64 %88 to %"struct.WTF::KeyValuePair.2940"*
  %91 = insertvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } undef, %"struct.WTF::KeyValuePair.2940"* %90, 0
  %92 = insertvalue { %"struct.WTF::KeyValuePair.2940"*, i8 } %91, i8 %89, 1
  ret { %"struct.WTF::KeyValuePair.2940"*, i8 } %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINSt3__14pairINS_14CollectionTypeENS2_12AtomicStringEEENS_6MemberINS_16LiveNodeListBaseEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS8_EENSE_ISB_EEEEEEvPT_(%"struct.WTF::KeyValuePair.2940"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %98, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %98, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2940", %"struct.WTF::KeyValuePair.2940"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.2942"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %75

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4400
  %40 = bitcast i8* %39 to %"class.blink::ObjectStartBitmap"*
  %41 = bitcast i8* %39 to i8**
  %42 = bitcast i8* %39 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = sub i64 %27, %43
  %45 = lshr i64 %44, 3
  %46 = lshr i64 %44, 6
  %47 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = trunc i64 %45 to i32
  %50 = and i32 %49, 7
  %51 = shl i32 2, %50
  %52 = trunc i32 %51 to i8
  %53 = add i8 %52, -1
  %54 = and i8 %53, %48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %38, %56
  %57 = phi i64 [ %58, %56 ], [ %46, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %40, i64 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %56, label %62

62:                                               ; preds = %56, %38
  %63 = phi i64 [ %46, %38 ], [ %58, %56 ]
  %64 = phi i8 [ %54, %38 ], [ %60, %56 ]
  %65 = zext i8 %64 to i32
  %66 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #12, !range !27
  %67 = add nsw i32 %66, -24
  %68 = shl i64 %63, 3
  %69 = or i64 %68, 7
  %70 = sext i32 %67 to i64
  %71 = sub i64 %69, %70
  %72 = shl i64 %71, 3
  %73 = load i8*, i8** %41, align 16
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  br label %75

75:                                               ; preds = %36, %62
  %76 = phi i8* [ %37, %36 ], [ %74, %62 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 acquire, align 2
  %81 = lshr i16 %80, 2
  %82 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %83 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %82, i64 0, i32 0
  %84 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %83, align 8
  %85 = zext i16 %81 to i64
  %86 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %84, i64 %85
  %87 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %87, i64 0, i32 0
  %89 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  %90 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, i64 5
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, align 8
  tail call void %93(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %77, void (%"class.blink::Visitor"*, i8*)* %89) #12
  %94 = load i64, i64* %19, align 8
  br label %95

95:                                               ; preds = %18, %75
  %96 = phi i64 [ %21, %18 ], [ %94, %75 ]
  %97 = add i64 %96, -1
  store i64 %97, i64* %19, align 8
  br label %98

98:                                               ; preds = %1, %11, %95
  ret void
}

declare void @_ZN5blink14LabelsNodeListC1ERNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::LabelsNodeList"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IjEEE10EmptyValueEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IjEEE10EmptyValueEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IjEEE10EmptyValueEv: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_IjEEE10EmptyValueEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINSt3__14pairIN5blink14CollectionTypeENS_12AtomicStringEEEEENS1_INS4_6MemberINS4_16LiveNodeListBaseEEEEEE10EmptyValueEv"}
!27 = !{i32 24, i32 33}
