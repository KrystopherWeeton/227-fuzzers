; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/reconintra4x4.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/reconintra4x4.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@pred = internal unnamed_addr global [10 x void (i8*, i64, i8*, i8*)*] zeroinitializer, align 16
@vpx_d153_predictor_4x4 = external local_unnamed_addr global void (i8*, i64, i8*, i8*)*, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_init_intra4x4_predictors_internal() local_unnamed_addr #0 {
  store <2 x void (i8*, i64, i8*, i8*)*> <void (i8*, i64, i8*, i8*)* @vpx_dc_predictor_4x4_sse2, void (i8*, i64, i8*, i8*)* @vpx_tm_predictor_4x4_sse2>, <2 x void (i8*, i64, i8*, i8*)*>* bitcast ([10 x void (i8*, i64, i8*, i8*)*]* @pred to <2 x void (i8*, i64, i8*, i8*)*>*), align 16
  store <2 x void (i8*, i64, i8*, i8*)*> <void (i8*, i64, i8*, i8*)* @vpx_ve_predictor_4x4_c, void (i8*, i64, i8*, i8*)* @vpx_he_predictor_4x4_c>, <2 x void (i8*, i64, i8*, i8*)*>* bitcast (void (i8*, i64, i8*, i8*)** getelementptr inbounds ([10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 2) to <2 x void (i8*, i64, i8*, i8*)*>*), align 16
  store <2 x void (i8*, i64, i8*, i8*)*> <void (i8*, i64, i8*, i8*)* @vpx_d45e_predictor_4x4_c, void (i8*, i64, i8*, i8*)* @vpx_d135_predictor_4x4_c>, <2 x void (i8*, i64, i8*, i8*)*>* bitcast (void (i8*, i64, i8*, i8*)** getelementptr inbounds ([10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 4) to <2 x void (i8*, i64, i8*, i8*)*>*), align 16
  store <2 x void (i8*, i64, i8*, i8*)*> <void (i8*, i64, i8*, i8*)* @vpx_d117_predictor_4x4_c, void (i8*, i64, i8*, i8*)* @vpx_d63e_predictor_4x4_c>, <2 x void (i8*, i64, i8*, i8*)*>* bitcast (void (i8*, i64, i8*, i8*)** getelementptr inbounds ([10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 6) to <2 x void (i8*, i64, i8*, i8*)*>*), align 16
  %1 = load i64, i64* bitcast (void (i8*, i64, i8*, i8*)** @vpx_d153_predictor_4x4 to i64*), align 8
  store i64 %1, i64* bitcast (void (i8*, i64, i8*, i8*)** getelementptr inbounds ([10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 8) to i64*), align 16
  store void (i8*, i64, i8*, i8*)* @vpx_d207_predictor_4x4_sse2, void (i8*, i64, i8*, i8*)** getelementptr inbounds ([10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 9), align 8
  ret void
}

declare void @vpx_dc_predictor_4x4_sse2(i8*, i64, i8*, i8*) #1

declare void @vpx_tm_predictor_4x4_sse2(i8*, i64, i8*, i8*) #1

declare void @vpx_ve_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_he_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_d45e_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_d135_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_d117_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_d63e_predictor_4x4_c(i8*, i64, i8*, i8*) #1

declare void @vpx_d207_predictor_4x4_sse2(i8*, i64, i8*, i8*) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_intra4x4_predict(i8* nocapture readonly, i8* nocapture readonly, i32, i32, i8*, i32, i8 zeroext) local_unnamed_addr #2 {
  %8 = alloca [12 x i8], align 1
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to [4 x i8]*
  %11 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #4
  %12 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 3
  %13 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 -86, i64 3, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 3
  %18 = load i8, i8* %1, align 1
  store i8 %18, i8* %14, align 4
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %15, align 1
  %22 = shl nsw i32 %2, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %1, i64 %23
  %25 = load i8, i8* %24, align 1
  store i8 %25, i8* %16, align 2
  %26 = mul nsw i32 %2, 3
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = load i8, i8* %28, align 1
  store i8 %29, i8* %17, align 1
  %30 = bitcast i8* %0 to i64*
  %31 = bitcast i8* %13 to i64*
  %32 = load i64, i64* %30, align 1
  store i64 %32, i64* %31, align 1
  store i8 %6, i8* %12, align 1
  %33 = zext i32 %3 to i64
  %34 = getelementptr inbounds [10 x void (i8*, i64, i8*, i8*)*], [10 x void (i8*, i64, i8*, i8*)*]* @pred, i64 0, i64 %33
  %35 = load void (i8*, i64, i8*, i8*)*, void (i8*, i64, i8*, i8*)** %34, align 8
  %36 = sext i32 %5 to i64
  call void %35(i8* %4, i64 %36, i8* %13, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
