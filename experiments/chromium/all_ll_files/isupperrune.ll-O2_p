; ModuleID = '../../third_party/utf/src/runetype/isupperrune.c'
source_filename = "../../third_party/utf/src/runetype/isupperrune.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ranges = internal global [73 x [3 x i32]] [[3 x i32] [i32 65, i32 90, i32 97], [3 x i32] [i32 192, i32 214, i32 224], [3 x i32] [i32 216, i32 222, i32 248], [3 x i32] [i32 393, i32 394, i32 598], [3 x i32] [i32 433, i32 434, i32 650], [3 x i32] [i32 904, i32 906, i32 941], [3 x i32] [i32 910, i32 911, i32 973], [3 x i32] [i32 913, i32 929, i32 945], [3 x i32] [i32 931, i32 939, i32 963], [3 x i32] [i32 978, i32 980, i32 978], [3 x i32] [i32 1021, i32 1023, i32 891], [3 x i32] [i32 1024, i32 1039, i32 1104], [3 x i32] [i32 1040, i32 1071, i32 1072], [3 x i32] [i32 1329, i32 1366, i32 1377], [3 x i32] [i32 4256, i32 4293, i32 11520], [3 x i32] [i32 5024, i32 5103, i32 43888], [3 x i32] [i32 5104, i32 5109, i32 5112], [3 x i32] [i32 7944, i32 7951, i32 7936], [3 x i32] [i32 7960, i32 7965, i32 7952], [3 x i32] [i32 7976, i32 7983, i32 7968], [3 x i32] [i32 7992, i32 7999, i32 7984], [3 x i32] [i32 8008, i32 8013, i32 8000], [3 x i32] [i32 8040, i32 8047, i32 8032], [3 x i32] [i32 8120, i32 8121, i32 8112], [3 x i32] [i32 8122, i32 8123, i32 8048], [3 x i32] [i32 8136, i32 8139, i32 8050], [3 x i32] [i32 8152, i32 8153, i32 8144], [3 x i32] [i32 8154, i32 8155, i32 8054], [3 x i32] [i32 8168, i32 8169, i32 8160], [3 x i32] [i32 8170, i32 8171, i32 8058], [3 x i32] [i32 8184, i32 8185, i32 8056], [3 x i32] [i32 8186, i32 8187, i32 8060], [3 x i32] [i32 8459, i32 8461, i32 8459], [3 x i32] [i32 8464, i32 8466, i32 8464], [3 x i32] [i32 8473, i32 8477, i32 8473], [3 x i32] [i32 8492, i32 8493, i32 8492], [3 x i32] [i32 8496, i32 8497, i32 8496], [3 x i32] [i32 8510, i32 8511, i32 8510], [3 x i32] [i32 11264, i32 11310, i32 11312], [3 x i32] [i32 11390, i32 11391, i32 575], [3 x i32] [i32 65313, i32 65338, i32 65345], [3 x i32] [i32 66560, i32 66599, i32 66600], [3 x i32] [i32 66736, i32 66771, i32 66776], [3 x i32] [i32 68736, i32 68786, i32 68800], [3 x i32] [i32 71840, i32 71871, i32 71872], [3 x i32] [i32 119808, i32 119833, i32 119808], [3 x i32] [i32 119860, i32 119885, i32 119860], [3 x i32] [i32 119912, i32 119937, i32 119912], [3 x i32] [i32 119966, i32 119967, i32 119966], [3 x i32] [i32 119973, i32 119974, i32 119973], [3 x i32] [i32 119977, i32 119980, i32 119977], [3 x i32] [i32 119982, i32 119989, i32 119982], [3 x i32] [i32 120016, i32 120041, i32 120016], [3 x i32] [i32 120068, i32 120069, i32 120068], [3 x i32] [i32 120071, i32 120074, i32 120071], [3 x i32] [i32 120077, i32 120084, i32 120077], [3 x i32] [i32 120086, i32 120092, i32 120086], [3 x i32] [i32 120120, i32 120121, i32 120120], [3 x i32] [i32 120123, i32 120126, i32 120123], [3 x i32] [i32 120128, i32 120132, i32 120128], [3 x i32] [i32 120138, i32 120144, i32 120138], [3 x i32] [i32 120172, i32 120197, i32 120172], [3 x i32] [i32 120224, i32 120249, i32 120224], [3 x i32] [i32 120276, i32 120301, i32 120276], [3 x i32] [i32 120328, i32 120353, i32 120328], [3 x i32] [i32 120380, i32 120405, i32 120380], [3 x i32] [i32 120432, i32 120457, i32 120432], [3 x i32] [i32 120488, i32 120512, i32 120488], [3 x i32] [i32 120546, i32 120570, i32 120546], [3 x i32] [i32 120604, i32 120628, i32 120604], [3 x i32] [i32 120662, i32 120686, i32 120662], [3 x i32] [i32 120720, i32 120744, i32 120720], [3 x i32] [i32 125184, i32 125217, i32 125218]], align 16
@laces1 = internal global [33 x [2 x i32]] [[2 x i32] [i32 256, i32 302], [2 x i32] [i32 306, i32 310], [2 x i32] [i32 313, i32 327], [2 x i32] [i32 330, i32 374], [2 x i32] [i32 377, i32 381], [2 x i32] [i32 386, i32 388], [2 x i32] [i32 416, i32 420], [2 x i32] [i32 435, i32 437], [2 x i32] [i32 461, i32 475], [2 x i32] [i32 478, i32 494], [2 x i32] [i32 504, i32 542], [2 x i32] [i32 546, i32 562], [2 x i32] [i32 582, i32 590], [2 x i32] [i32 880, i32 882], [2 x i32] [i32 984, i32 1006], [2 x i32] [i32 1120, i32 1152], [2 x i32] [i32 1162, i32 1214], [2 x i32] [i32 1217, i32 1229], [2 x i32] [i32 1232, i32 1326], [2 x i32] [i32 7680, i32 7828], [2 x i32] [i32 7840, i32 7934], [2 x i32] [i32 11367, i32 11371], [2 x i32] [i32 11392, i32 11490], [2 x i32] [i32 11499, i32 11501], [2 x i32] [i32 42560, i32 42604], [2 x i32] [i32 42624, i32 42650], [2 x i32] [i32 42786, i32 42798], [2 x i32] [i32 42802, i32 42862], [2 x i32] [i32 42873, i32 42875], [2 x i32] [i32 42878, i32 42886], [2 x i32] [i32 42896, i32 42898], [2 x i32] [i32 42902, i32 42920], [2 x i32] [i32 42932, i32 42934]], align 16
@singles = internal global [100 x [2 x i32]] [[2 x i32] [i32 304, i32 105], [2 x i32] [i32 376, i32 255], [2 x i32] [i32 385, i32 595], [2 x i32] [i32 390, i32 596], [2 x i32] [i32 391, i32 392], [2 x i32] [i32 395, i32 396], [2 x i32] [i32 398, i32 477], [2 x i32] [i32 399, i32 601], [2 x i32] [i32 400, i32 603], [2 x i32] [i32 401, i32 402], [2 x i32] [i32 403, i32 608], [2 x i32] [i32 404, i32 611], [2 x i32] [i32 406, i32 617], [2 x i32] [i32 407, i32 616], [2 x i32] [i32 408, i32 409], [2 x i32] [i32 412, i32 623], [2 x i32] [i32 413, i32 626], [2 x i32] [i32 415, i32 629], [2 x i32] [i32 422, i32 640], [2 x i32] [i32 423, i32 424], [2 x i32] [i32 425, i32 643], [2 x i32] [i32 428, i32 429], [2 x i32] [i32 430, i32 648], [2 x i32] [i32 431, i32 432], [2 x i32] [i32 439, i32 658], [2 x i32] [i32 440, i32 441], [2 x i32] [i32 444, i32 445], [2 x i32] [i32 452, i32 454], [2 x i32] [i32 455, i32 457], [2 x i32] [i32 458, i32 460], [2 x i32] [i32 497, i32 499], [2 x i32] [i32 500, i32 501], [2 x i32] [i32 502, i32 405], [2 x i32] [i32 503, i32 447], [2 x i32] [i32 544, i32 414], [2 x i32] [i32 570, i32 11365], [2 x i32] [i32 571, i32 572], [2 x i32] [i32 573, i32 410], [2 x i32] [i32 574, i32 11366], [2 x i32] [i32 577, i32 578], [2 x i32] [i32 579, i32 384], [2 x i32] [i32 580, i32 649], [2 x i32] [i32 581, i32 652], [2 x i32] [i32 886, i32 887], [2 x i32] [i32 895, i32 1011], [2 x i32] [i32 902, i32 940], [2 x i32] [i32 908, i32 972], [2 x i32] [i32 975, i32 983], [2 x i32] [i32 1012, i32 952], [2 x i32] [i32 1015, i32 1016], [2 x i32] [i32 1017, i32 1010], [2 x i32] [i32 1018, i32 1019], [2 x i32] [i32 1216, i32 1231], [2 x i32] [i32 4295, i32 11559], [2 x i32] [i32 4301, i32 11565], [2 x i32] [i32 7838, i32 223], [2 x i32] [i32 8025, i32 8017], [2 x i32] [i32 8027, i32 8019], [2 x i32] [i32 8029, i32 8021], [2 x i32] [i32 8031, i32 8023], [2 x i32] [i32 8172, i32 8165], [2 x i32] [i32 8450, i32 8450], [2 x i32] [i32 8455, i32 8455], [2 x i32] [i32 8469, i32 8469], [2 x i32] [i32 8484, i32 8484], [2 x i32] [i32 8486, i32 969], [2 x i32] [i32 8488, i32 8488], [2 x i32] [i32 8490, i32 107], [2 x i32] [i32 8491, i32 229], [2 x i32] [i32 8498, i32 8526], [2 x i32] [i32 8499, i32 8499], [2 x i32] [i32 8517, i32 8517], [2 x i32] [i32 8579, i32 8580], [2 x i32] [i32 11360, i32 11361], [2 x i32] [i32 11362, i32 619], [2 x i32] [i32 11363, i32 7549], [2 x i32] [i32 11364, i32 637], [2 x i32] [i32 11373, i32 593], [2 x i32] [i32 11374, i32 625], [2 x i32] [i32 11375, i32 592], [2 x i32] [i32 11376, i32 594], [2 x i32] [i32 11378, i32 11379], [2 x i32] [i32 11381, i32 11382], [2 x i32] [i32 11506, i32 11507], [2 x i32] [i32 42877, i32 7545], [2 x i32] [i32 42891, i32 42892], [2 x i32] [i32 42893, i32 613], [2 x i32] [i32 42922, i32 614], [2 x i32] [i32 42923, i32 604], [2 x i32] [i32 42924, i32 609], [2 x i32] [i32 42925, i32 620], [2 x i32] [i32 42926, i32 618], [2 x i32] [i32 42928, i32 670], [2 x i32] [i32 42929, i32 647], [2 x i32] [i32 42930, i32 669], [2 x i32] [i32 42931, i32 43859], [2 x i32] [i32 119964, i32 119964], [2 x i32] [i32 119970, i32 119970], [2 x i32] [i32 120134, i32 120134], [2 x i32] [i32 120778, i32 120778]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @isupperrune(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast i32* %2 to i8*
  br label %4

4:                                                ; preds = %17, %1
  %5 = phi i64 [ %19, %17 ], [ 73, %1 ]
  %6 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %7 = add i64 %6, %5
  %8 = lshr i64 %7, 1
  %9 = getelementptr [73 x [3 x i32]], [73 x [3 x i32]]* @ranges, i64 0, i64 %8
  %10 = bitcast [3 x i32]* %9 to i8*
  %11 = call i32 @rune2cmp(i8* nonnull %3, i8* %10) #2
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %8, 1
  br label %17

17:                                               ; preds = %15, %4
  %18 = phi i64 [ %16, %15 ], [ %6, %4 ]
  %19 = phi i64 [ %5, %15 ], [ %8, %4 ]
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %4, label %23

21:                                               ; preds = %13
  %22 = icmp eq [3 x i32]* %9, null
  br i1 %22, label %23, label %71

23:                                               ; preds = %17, %21
  br label %24

24:                                               ; preds = %23, %37
  %25 = phi i64 [ %39, %37 ], [ 33, %23 ]
  %26 = phi i64 [ %38, %37 ], [ 0, %23 ]
  %27 = add i64 %26, %25
  %28 = lshr i64 %27, 1
  %29 = getelementptr [33 x [2 x i32]], [33 x [2 x i32]]* @laces1, i64 0, i64 %28
  %30 = bitcast [2 x i32]* %29 to i8*
  %31 = call i32 @rune2cmp(i8* nonnull %3, i8* %30) #2
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %24
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %28, 1
  br label %37

37:                                               ; preds = %35, %24
  %38 = phi i64 [ %36, %35 ], [ %26, %24 ]
  %39 = phi i64 [ %25, %35 ], [ %28, %24 ]
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %24, label %43

41:                                               ; preds = %33
  %42 = icmp eq [2 x i32]* %29, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %37, %41
  br label %51

44:                                               ; preds = %41
  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %29, i64 0, i64 0
  %46 = load i32, i32* %2, align 4
  %47 = load i32, i32* %45, align 8
  %48 = sub nsw i32 %46, %47
  %49 = and i32 %48, 1
  %50 = xor i32 %49, 1
  br label %71

51:                                               ; preds = %43, %64
  %52 = phi i64 [ %66, %64 ], [ 100, %43 ]
  %53 = phi i64 [ %65, %64 ], [ 0, %43 ]
  %54 = add i64 %53, %52
  %55 = lshr i64 %54, 1
  %56 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @singles, i64 0, i64 %55
  %57 = bitcast [2 x i32]* %56 to i8*
  %58 = call i32 @rune1cmp(i8* nonnull %3, i8* %57) #2
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %51
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %55, 1
  br label %64

64:                                               ; preds = %62, %51
  %65 = phi i64 [ %63, %62 ], [ %53, %51 ]
  %66 = phi i64 [ %52, %62 ], [ %55, %51 ]
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %51, label %71

68:                                               ; preds = %60
  %69 = icmp ne [2 x i32]* %56, null
  %70 = zext i1 %69 to i32
  br label %71

71:                                               ; preds = %64, %68, %21, %44
  %72 = phi i32 [ %50, %44 ], [ 1, %21 ], [ %70, %68 ], [ 0, %64 ]
  ret i32 %72
}

declare i32 @rune2cmp(i8*, i8*) local_unnamed_addr #1

declare i32 @rune1cmp(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @tolowerrune(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast i32* %2 to i8*
  br label %4

4:                                                ; preds = %17, %1
  %5 = phi i64 [ %19, %17 ], [ 73, %1 ]
  %6 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %7 = add i64 %6, %5
  %8 = lshr i64 %7, 1
  %9 = getelementptr [73 x [3 x i32]], [73 x [3 x i32]]* @ranges, i64 0, i64 %8
  %10 = bitcast [3 x i32]* %9 to i8*
  %11 = call i32 @rune2cmp(i8* nonnull %3, i8* %10) #2
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %8, 1
  br label %17

17:                                               ; preds = %15, %4
  %18 = phi i64 [ %16, %15 ], [ %6, %4 ]
  %19 = phi i64 [ %5, %15 ], [ %8, %4 ]
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %4, label %23

21:                                               ; preds = %13
  %22 = icmp eq [3 x i32]* %9, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %17, %21
  br label %32

24:                                               ; preds = %21
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 0
  %26 = getelementptr [73 x [3 x i32]], [73 x [3 x i32]]* @ranges, i64 0, i64 %8, i64 2
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %2, align 4
  %29 = load i32, i32* %25, align 4
  %30 = add i32 %28, %27
  %31 = sub i32 %30, %29
  br label %84

32:                                               ; preds = %23, %45
  %33 = phi i64 [ %47, %45 ], [ 33, %23 ]
  %34 = phi i64 [ %46, %45 ], [ 0, %23 ]
  %35 = add i64 %34, %33
  %36 = lshr i64 %35, 1
  %37 = getelementptr [33 x [2 x i32]], [33 x [2 x i32]]* @laces1, i64 0, i64 %36
  %38 = bitcast [2 x i32]* %37 to i8*
  %39 = call i32 @rune2cmp(i8* nonnull %3, i8* %38) #2
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %36, 1
  br label %45

45:                                               ; preds = %43, %32
  %46 = phi i64 [ %44, %43 ], [ %34, %32 ]
  %47 = phi i64 [ %33, %43 ], [ %36, %32 ]
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %32, label %51

49:                                               ; preds = %41
  %50 = icmp eq [2 x i32]* %37, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %45, %49
  br label %60

52:                                               ; preds = %49
  %53 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, i64 0
  %54 = load i32, i32* %2, align 4
  %55 = load i32, i32* %53, align 8
  %56 = sub nsw i32 %54, %55
  %57 = and i32 %56, 1
  %58 = xor i32 %57, 1
  %59 = add nsw i32 %58, %54
  br label %84

60:                                               ; preds = %51, %73
  %61 = phi i64 [ %75, %73 ], [ 100, %51 ]
  %62 = phi i64 [ %74, %73 ], [ 0, %51 ]
  %63 = add i64 %62, %61
  %64 = lshr i64 %63, 1
  %65 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @singles, i64 0, i64 %64
  %66 = bitcast [2 x i32]* %65 to i8*
  %67 = call i32 @rune1cmp(i8* nonnull %3, i8* %66) #2
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %60
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %69
  %72 = add nuw i64 %64, 1
  br label %73

73:                                               ; preds = %71, %60
  %74 = phi i64 [ %72, %71 ], [ %62, %60 ]
  %75 = phi i64 [ %61, %71 ], [ %64, %60 ]
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %60, label %82

77:                                               ; preds = %69
  %78 = icmp eq [2 x i32]* %65, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  %80 = getelementptr [100 x [2 x i32]], [100 x [2 x i32]]* @singles, i64 0, i64 %64, i64 1
  %81 = load i32, i32* %80, align 4
  br label %84

82:                                               ; preds = %73, %77
  %83 = load i32, i32* %2, align 4
  br label %84

84:                                               ; preds = %82, %79, %52, %24
  %85 = phi i32 [ %31, %24 ], [ %59, %52 ], [ %81, %79 ], [ %83, %82 ]
  ret i32 %85
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
