; ModuleID = '../../chrome/browser/extensions/chrome_extensions_browser_api_provider.cc'
source_filename = "../../chrome/browser/extensions/chrome_extensions_browser_api_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ChromeExtensionsBrowserAPIProvider" = type { %"class.extensions::ExtensionsBrowserAPIProvider" }
%"class.extensions::ExtensionsBrowserAPIProvider" = type { i32 (...)** }
%class.ExtensionFunctionRegistry = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.ExtensionFunctionRegistry::FactoryEntry" = type <{ %class.ExtensionFunction* ()*, i8*, i32, [4 x i8] }>
%class.ExtensionFunction = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %class.scoped_refptr.5, %"class.std::__1::unique_ptr.98", %"class.base::ElapsedTimer", %"class.std::__1::unique_ptr.98", %"class.std::__1::basic_string", %"class.base::OnceCallback", i32, [4 x i8], i8*, i8*, %class.GURL, i8, i8, i8, i8, i32, i32, i32, i64, %"class.std::__1::unique_ptr.106", i8, [7 x i8], %"class.base::WeakPtr", %"class.content::BrowserContext"*, %"class.content::BrowserContext"*, %"class.base::CallbackListSubscription", %"class.content::RenderFrameHost"*, %"class.std::__1::unique_ptr.137", %"class.std::__1::vector.143", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.5 = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.6", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.24", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.48", %"class.std::__1::map.89", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.30" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i32*, i32*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i32* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"union.absl::variant_internal::DestructibleUnionImpl.57" }
%"union.absl::variant_internal::DestructibleUnionImpl.57" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.base::ListValue"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.104 }
%class.scoped_refptr.104 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.105", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.105" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.35" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i32* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.113", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.114" }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i8 }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.130" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.119", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback.136" }
%"class.base::OnceCallback.136" = type { %"class.base::internal::CallbackBase" }
%"class.content::RenderFrameHost" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.ExtensionFunction::RenderFrameHostTracker"* }
%"class.ExtensionFunction::RenderFrameHostTracker" = type opaque
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::basic_string"* }

$_Z20NewExtensionFunctionIN10extensions21GetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv = comdat any

$_Z20NewExtensionFunctionIN10extensions21SetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv = comdat any

$_Z20NewExtensionFunctionIN10extensions23ClearPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv = comdat any

@_ZTVN10extensions34ChromeExtensionsBrowserAPIProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*)* @_ZN10extensions34ChromeExtensionsBrowserAPIProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*)* @_ZN10extensions34ChromeExtensionsBrowserAPIProviderD0Ev to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*, %class.ExtensionFunctionRegistry*)* @_ZN10extensions34ChromeExtensionsBrowserAPIProvider26RegisterExtensionFunctionsEP25ExtensionFunctionRegistry to i8*)] }, align 8
@_ZTVN10extensions21GetPreferenceFunctionE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"types.ChromeSetting.get\00", align 1
@_ZTVN10extensions21SetPreferenceFunctionE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"types.ChromeSetting.set\00", align 1
@_ZTVN10extensions23ClearPreferenceFunctionE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [26 x i8] c"types.ChromeSetting.clear\00", align 1

@_ZN10extensions34ChromeExtensionsBrowserAPIProviderC1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*), void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*)* @_ZN10extensions34ChromeExtensionsBrowserAPIProviderC2Ev
@_ZN10extensions34ChromeExtensionsBrowserAPIProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*), void (%"class.extensions::ChromeExtensionsBrowserAPIProvider"*)* @_ZN10extensions34ChromeExtensionsBrowserAPIProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions34ChromeExtensionsBrowserAPIProviderC2Ev(%"class.extensions::ChromeExtensionsBrowserAPIProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChromeExtensionsBrowserAPIProvider", %"class.extensions::ChromeExtensionsBrowserAPIProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions34ChromeExtensionsBrowserAPIProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions34ChromeExtensionsBrowserAPIProviderD2Ev(%"class.extensions::ChromeExtensionsBrowserAPIProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions34ChromeExtensionsBrowserAPIProviderD0Ev(%"class.extensions::ChromeExtensionsBrowserAPIProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::ChromeExtensionsBrowserAPIProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions34ChromeExtensionsBrowserAPIProvider26RegisterExtensionFunctionsEP25ExtensionFunctionRegistry(%"class.extensions::ChromeExtensionsBrowserAPIProvider"* nocapture readnone, %class.ExtensionFunctionRegistry*) unnamed_addr #2 align 2 {
  %3 = alloca %"struct.ExtensionFunctionRegistry::FactoryEntry", align 8
  %4 = alloca %"struct.ExtensionFunctionRegistry::FactoryEntry", align 8
  %5 = alloca %"struct.ExtensionFunctionRegistry::FactoryEntry", align 8
  %6 = bitcast %"struct.ExtensionFunctionRegistry::FactoryEntry"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %5, i64 0, i32 0
  store %class.ExtensionFunction* ()* @_Z20NewExtensionFunctionIN10extensions21GetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv, %class.ExtensionFunction* ()** %7, align 8
  %8 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %5, i64 0, i32 2
  store i32 231, i32* %9, align 8
  call void @_ZN25ExtensionFunctionRegistry8RegisterERKNS_12FactoryEntryE(%class.ExtensionFunctionRegistry* %1, %"struct.ExtensionFunctionRegistry::FactoryEntry"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %10 = bitcast %"struct.ExtensionFunctionRegistry::FactoryEntry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %4, i64 0, i32 0
  store %class.ExtensionFunction* ()* @_Z20NewExtensionFunctionIN10extensions21SetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv, %class.ExtensionFunction* ()** %11, align 8
  %12 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %4, i64 0, i32 2
  store i32 306, i32* %13, align 8
  call void @_ZN25ExtensionFunctionRegistry8RegisterERKNS_12FactoryEntryE(%class.ExtensionFunctionRegistry* %1, %"struct.ExtensionFunctionRegistry::FactoryEntry"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  %14 = bitcast %"struct.ExtensionFunctionRegistry::FactoryEntry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %3, i64 0, i32 0
  store %class.ExtensionFunction* ()* @_Z20NewExtensionFunctionIN10extensions23ClearPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv, %class.ExtensionFunction* ()** %15, align 8
  %16 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"struct.ExtensionFunctionRegistry::FactoryEntry", %"struct.ExtensionFunctionRegistry::FactoryEntry"* %3, i64 0, i32 2
  store i32 219, i32* %17, align 8
  call void @_ZN25ExtensionFunctionRegistry8RegisterERKNS_12FactoryEntryE(%class.ExtensionFunctionRegistry* %1, %"struct.ExtensionFunctionRegistry::FactoryEntry"* nonnull dereferenceable(24) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  call void @_ZN10extensions3api31ChromeGeneratedFunctionRegistry11RegisterAllEP25ExtensionFunctionRegistry(%class.ExtensionFunctionRegistry* %1) #8
  ret void
}

declare void @_ZN10extensions3api31ChromeGeneratedFunctionRegistry11RegisterAllEP25ExtensionFunctionRegistry(%class.ExtensionFunctionRegistry*) local_unnamed_addr #4

declare void @_ZN25ExtensionFunctionRegistry8RegisterERKNS_12FactoryEntryE(%class.ExtensionFunctionRegistry*, %"struct.ExtensionFunctionRegistry::FactoryEntry"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.ExtensionFunction* @_Z20NewExtensionFunctionIN10extensions21GetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv() #2 comdat {
  %1 = tail call i8* @_Znwm(i64 352) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1, i8 0, i64 352, i1 false) #8
  %2 = bitcast i8* %1 to %class.ExtensionFunction*
  tail call void @_ZN17ExtensionFunctionC2Ev(%class.ExtensionFunction* nonnull %2) #8
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN10extensions21GetPreferenceFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  ret %class.ExtensionFunction* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN17ExtensionFunctionC2Ev(%class.ExtensionFunction*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.ExtensionFunction* @_Z20NewExtensionFunctionIN10extensions21SetPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv() #2 comdat {
  %1 = tail call i8* @_Znwm(i64 352) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1, i8 0, i64 352, i1 false) #8
  %2 = bitcast i8* %1 to %class.ExtensionFunction*
  tail call void @_ZN17ExtensionFunctionC2Ev(%class.ExtensionFunction* nonnull %2) #8
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN10extensions21SetPreferenceFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  ret %class.ExtensionFunction* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.ExtensionFunction* @_Z20NewExtensionFunctionIN10extensions23ClearPreferenceFunctionEE13scoped_refptrI17ExtensionFunctionEv() #2 comdat {
  %1 = tail call i8* @_Znwm(i64 352) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1, i8 0, i64 352, i1 false) #8
  %2 = bitcast i8* %1 to %class.ExtensionFunction*
  tail call void @_ZN17ExtensionFunctionC2Ev(%class.ExtensionFunction* nonnull %2) #8
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN10extensions23ClearPreferenceFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  ret %class.ExtensionFunction* %2
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
