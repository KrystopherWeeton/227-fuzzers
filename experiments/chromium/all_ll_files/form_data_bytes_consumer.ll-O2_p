; ModuleID = '../../third_party/blink/renderer/core/fetch/form_data_bytes_consumer.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/form_data_bytes_consumer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.291", i32, [4 x i8], %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.57", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.335", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.409", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i64 }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::Worklist.338"* }
%"class.blink::Worklist.338" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::Worklist.345"* }
%"class.blink::Worklist.345" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::Worklist.352"* }
%"class.blink::Worklist.352" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::Worklist.359"* }
%"class.blink::Worklist.359" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::Worklist.366"* }
%"class.blink::Worklist.366" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::Worklist.373"* }
%"class.blink::Worklist.373" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::Worklist.380"* }
%"class.blink::Worklist.380" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.327" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.387", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { i64 }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { float }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.412", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"struct.std::__1::pair.439"*, i32, i32 }
%"struct.std::__1::pair.439" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.338"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.345"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.352"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.359"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.366"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.471" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.148" }
%"class.base::time_internal::TimeBase.148" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FormDataBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member" }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::BytesConsumer"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.195" }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.239", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.248", %"class.blink::Member.250", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.259", %"class.blink::Member.265", %"class.blink::Member.267", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.204" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.202" }
%"class.WTF::HashTable.202" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.204" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.205" }
%"class.blink::HeapHashMap.205" = type { %"class.WTF::HashMap.208" }
%"class.WTF::HashMap.208" = type { %"class.WTF::HashTable.209" }
%"class.WTF::HashTable.209" = type <{ %"struct.WTF::KeyValuePair.211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.211" = type { i8*, %"class.blink::Member.287" }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.289" }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.212, %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227", %"class.blink::Member.233", i32, [4 x i8], %"class.WTF::HashSet.235", i32, i32 }
%class.scoped_refptr.212 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.213", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.215", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.220 }
%"class.WTF::RefCounted.213" = type { %"class.base::RefCounted.214" }
%"class.base::RefCounted.214" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.215" = type { %"class.absl::optional_internal::optional_data.216" }
%"class.absl::optional_internal::optional_data.216" = type { %"class.absl::optional_internal::optional_data_base.217" }
%"class.absl::optional_internal::optional_data_base.217" = type { %"class.absl::optional_internal::optional_data_dtor_base.218" }
%"class.absl::optional_internal::optional_data_dtor_base.218" = type { i8, %union.anon.219 }
%union.anon.219 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.220 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.235" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.243" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"class.blink::Member.246"*, i32, i32 }
%"class.blink::Member.246" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.252", i32, i32 }
%"class.blink::HeapHashMap.252" = type { %"class.WTF::HashMap.255" }
%"class.WTF::HashMap.255" = type { %"class.WTF::HashTable.256" }
%"class.WTF::HashTable.256" = type <{ %"struct.WTF::KeyValuePair.258"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.258" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector", i64, %"class.WTF::Vector.2", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.2", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.5, i64, i64, %"class.absl::optional", %class.scoped_refptr.11 }
%class.scoped_refptr.5 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.11 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type { %"class.WTF::RefCounted.12", %"class.mojo::Remote" }
%"class.WTF::RefCounted.12" = type { %"class.base::RefCounted.13" }
%"class.base::RefCounted.13" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.184" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.14, %"class.std::__1::unique_ptr.133", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.16, i32 }>
%class.scoped_refptr.14 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.16, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.100", %"class.absl::optional.105", %"class.absl::optional.61", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.124", i8, [7 x i8], %class.scoped_refptr.16, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.30", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.16, %"class.std::__1::unique_ptr.38", %"class.absl::optional.47", %"struct.std::__1::atomic.57", i8, i8, i8, i8, i32, i32, %"class.absl::optional.61", %"class.std::__1::unique_ptr.66", i8, i64, %class.scoped_refptr.96, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.99" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.16, i8, %"class.mojo::ScopedHandleBase.41", %class.scoped_refptr.42, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.43" }
%"class.mojo::ScopedHandleBase.41" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.42 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.43" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.52", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.52" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.69", i8, i64, %class.scoped_refptr.70, %class.scoped_refptr.92 }
%"class.base::RepeatingCallback.69" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.70 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.71", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.81", i8, [7 x i8] }>
%"class.base::RefCounted.71" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%class.scoped_refptr.92 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.96 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.97 }
%class.scoped_refptr.97 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.192", [4 x i8], %"class.base::RepeatingCallback.136", %class.scoped_refptr.16, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.136" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.99" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, [7 x i8], %union.anon.109 }
%union.anon.109 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.110 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.110 = type { %"class.std::__1::map.112" }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.123"*, i64 }
%"class.std::__1::unique_ptr.123" = type opaque
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.136", %"class.base::OnceCallback.137", %"class.absl::optional.138", %"class.absl::optional.143", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.151", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.159", %"class.std::__1::map.170", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.179", i8, %class.scoped_refptr.16, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.180" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.137" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.16, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.149" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.149" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.150 }
%class.scoped_refptr.150 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.154", %class.scoped_refptr.155 }
%"class.base::RepeatingCallback.154" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.155 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.159" = type { %"class.std::__1::__tree.160" }
%"class.std::__1::__tree.160" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.base::OnceCallback.179" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.180" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.16 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.network::mojom::blink::DataPipeGetterProxy"* }
%"class.network::mojom::blink::DataPipeGetterProxy" = type { %"class.network::mojom::blink::DataPipeGetter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::DataPipeGetter" = type { i32 (...)** }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { i8*, i32, i32 }
%"class.WTF::TextEncoding" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::BytesConsumer::Error" = type { %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::AtomicString", i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.494", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%"class.blink::BlobBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.233", %class.scoped_refptr.5, %"class.blink::Member.506", %"class.blink::Member", %"class.blink::Member.269" }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::BlobBytesConsumer::BlobClient"* }
%"class.blink::BlobBytesConsumer::BlobClient" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.mojo::ScopedHandleBase.276" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer" = type <{ %"class.blink::BytesConsumer", %class.scoped_refptr.1, %"class.WTF::Vector.2", i64, i32, [4 x i8] }>
%class.scoped_refptr.1 = type { %"class.blink::EncodedFormData"* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.512" }
%"class.WTF::StringTypeAdapter.512" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.513" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer" = type { %"class.blink::BytesConsumer", %class.scoped_refptr.1, %"class.blink::Member" }
%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.233", i32, %class.scoped_refptr.1, %"class.blink::FormDataElement"*, %"class.blink::BytesConsumer::Error", %"class.blink::Member.269", %"class.blink::Member.271", %"class.blink::Member.273", %"class.blink::Member.282" }
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* }
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::DataPipeBytesConsumer"* }
%"class.blink::DataPipeBytesConsumer" = type <{ %"class.blink::BytesConsumer", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %class.scoped_refptr.275, %"class.mojo::ScopedHandleBase.276", [4 x i8], %"class.mojo::SimpleWatcher", %"class.blink::Member.269", i32, [4 x i8], %"class.blink::BytesConsumer::Error", i64, %"class.absl::optional.277", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%class.scoped_refptr.275 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.absl::optional.277" = type { %"class.absl::optional_internal::optional_data.278" }
%"class.absl::optional_internal::optional_data.278" = type { %"class.absl::optional_internal::optional_data_base.279" }
%"class.absl::optional_internal::optional_data_base.279" = type { %"class.absl::optional_internal::optional_data_dtor_base.280" }
%"class.absl::optional_internal::optional_data_dtor_base.280" = type { i8, %union.anon.281 }
%union.anon.281 = type { i64 }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* }
%"class.blink::DataPipeBytesConsumer::CompletionNotifier" = type { %"class.blink::WeakMember.286" }
%"class.blink::WeakMember.286" = type { %"class.blink::MemberBase.274" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::ScopedHandleBase.514" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.base::OnceCallback.515" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.14, %"class.std::__1::unique_ptr.133", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.16, i32, [4 x i8] }>
%struct.MojoCreateDataPipeOptions = type { i32, i32, i32, i32 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.476", %"class.blink::FreeList", %"class.WTF::Vector.481" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.476" = type { %"class.WTF::VectorBuffer.477" }
%"class.WTF::VectorBuffer.477" = type { %"class.WTF::VectorBufferBase.478" }
%"class.WTF::VectorBufferBase.478" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN5blink21FormDataBytesConsumerD0Ev = comdat any

$_ZN5blink21FormDataBytesConsumer9BeginReadEPPKcPm = comdat any

$_ZN5blink21FormDataBytesConsumer7EndReadEm = comdat any

$_ZN5blink21FormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE = comdat any

$_ZN5blink21FormDataBytesConsumer15DrainAsFormDataEv = comdat any

$_ZN5blink13BytesConsumer15DrainAsDataPipeEv = comdat any

$_ZN5blink21FormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE = comdat any

$_ZN5blink21FormDataBytesConsumer11ClearClientEv = comdat any

$_ZN5blink21FormDataBytesConsumer6CancelEv = comdat any

$_ZNK5blink21FormDataBytesConsumer14GetPublicStateEv = comdat any

$_ZNK5blink21FormDataBytesConsumer8GetErrorEv = comdat any

$_ZNK5blink21FormDataBytesConsumer9DebugNameEv = comdat any

$_ZNK5blink21FormDataBytesConsumer5TraceEPNS_7VisitorE = comdat any

$_ZN5blink13BytesConsumerD2Ev = comdat any

$_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE = comdat any

$_ZNK5blink13BytesConsumer5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink21FormDataBytesConsumerE = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21FormDataBytesConsumerE = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::FormDataBytesConsumer"*)* @_ZN5blink21FormDataBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::FormDataBytesConsumer"*, i8**, i64*)* @_ZN5blink21FormDataBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::FormDataBytesConsumer"*, i64)* @_ZN5blink21FormDataBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::FormDataBytesConsumer"*, i32)* @_ZN5blink21FormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::FormDataBytesConsumer"*)* @_ZN5blink21FormDataBytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.276"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink21FormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::FormDataBytesConsumer"*)* @_ZN5blink21FormDataBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::FormDataBytesConsumer"*)* @_ZN5blink21FormDataBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::FormDataBytesConsumer"*)* @_ZNK5blink21FormDataBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::FormDataBytesConsumer"*)* @_ZNK5blink21FormDataBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::FormDataBytesConsumer"*)* @_ZNK5blink21FormDataBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink21FormDataBytesConsumer5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i32)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.276"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink13BytesConsumer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"SimpleFormDataBytesConsumer\00", align 1
@_ZTVN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*, i8**, i64*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*, i64)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*, i32)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.276"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"Cannot determine a file size\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"multipart/form-data; boundary=\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.8 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.11 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"ComplexFormDataBytesConsumer\00", align 1
@_ZTVN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i8**, i64*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i64)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.276"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*)* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN7network5mojom5blink14DataPipeGetter5Name_E = external constant [0 x i8], align 1
@_ZTVN7network5mojom5blink31DataPipeGetterResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.17 = private unnamed_addr constant [29 x i8] c"DataPipeAndDataBytesConsumer\00", align 1
@switch.table._ZN5blink21FormDataBytesConsumer7GetImplEPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE = private unnamed_addr constant [3 x i32] [i32 1, i32 1, i32 2], align 4

@_ZN5blink21FormDataBytesConsumerC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, %"class.WTF::String"*), void (%"class.blink::FormDataBytesConsumer"*, %"class.WTF::String"*)* @_ZN5blink21FormDataBytesConsumerC2ERKN3WTF6StringE
@_ZN5blink21FormDataBytesConsumerC1EPNS_14DOMArrayBufferE = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBuffer"*), void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBuffer"*)* @_ZN5blink21FormDataBytesConsumerC2EPNS_14DOMArrayBufferE
@_ZN5blink21FormDataBytesConsumerC1EPNS_18DOMArrayBufferViewE = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBufferView"*), void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::DOMArrayBufferView"*)* @_ZN5blink21FormDataBytesConsumerC2EPNS_18DOMArrayBufferViewE
@_ZN5blink21FormDataBytesConsumerC1EPKvj = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, i8*, i32), void (%"class.blink::FormDataBytesConsumer"*, i8*, i32)* @_ZN5blink21FormDataBytesConsumerC2EPKvj
@_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*), void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*)* @_ZN5blink21FormDataBytesConsumerC2EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE
@_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE = hidden unnamed_addr alias void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*, %"class.blink::BytesConsumer"*), void (%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*, %"class.blink::BytesConsumer"*)* @_ZN5blink21FormDataBytesConsumerC2EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2ERKN3WTF6StringE(%"class.blink::FormDataBytesConsumer"* nocapture, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #13
  call void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::TextEncoding"* %6, %"class.WTF::String"* dereferenceable(8) %1, i32 3) #13
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i64 %15, i64 %16
  %18 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 %17, i8* %13) #13
  %19 = ptrtoint %"class.blink::EncodedFormData"* %18 to i64
  %20 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 28, i1 false) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.blink::BytesConsumer"** %29 to i8**
  store i8* %20, i8** %30, align 8
  %31 = load i8, i8* %8, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %2
  %34 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %2, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

declare void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* sret, %"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2EPNS_14DOMArrayBufferE(%"class.blink::FormDataBytesConsumer"* nocapture, %"class.blink::DOMArrayBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %3, align 8
  %5 = icmp eq %"class.v8::BackingStore"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %4) #13
  %8 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %3, align 8
  %9 = icmp eq %"class.v8::BackingStore"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %8) #13
  %12 = icmp ult i64 %11, 4294967296
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

14:                                               ; preds = %2, %6, %10
  %15 = phi i64 [ %11, %10 ], [ 0, %6 ], [ 0, %2 ]
  %16 = phi i8* [ %7, %10 ], [ %7, %6 ], [ null, %2 ]
  %17 = trunc i64 %15 to i32
  %18 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %16, i32 %17) #13
  %20 = ptrtoint %"class.blink::EncodedFormData"* %19 to i64
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 28, i1 false) #13
  %26 = getelementptr inbounds i8, i8* %21, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.blink::BytesConsumer"** %30 to i8**
  store i8* %21, i8** %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2EPKvj(%"class.blink::FormDataBytesConsumer"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %1, i32 %2) #13
  %6 = ptrtoint %"class.blink::EncodedFormData"* %5 to i64
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 28, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %7, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.blink::BytesConsumer"** %16 to i8**
  store i8* %7, i8** %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2EPNS_18DOMArrayBufferViewE(%"class.blink::FormDataBytesConsumer"* nocapture, %"class.blink::DOMArrayBufferView"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %4, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i8* [ %10, %8 ], [ null, %2 ]
  %13 = bitcast %"class.blink::DOMArrayBufferView"* %1 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %14 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %14, i64 10
  %16 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::DOMArrayBufferView"* %1) #13
  %18 = icmp ult i64 %17, 4294967296
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %11
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %11
  %21 = trunc i64 %17 to i32
  %22 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %12, i32 %21) #13
  %24 = ptrtoint %"class.blink::EncodedFormData"* %23 to i64
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 28, i1 false) #13
  %30 = getelementptr inbounds i8, i8* %25, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.blink::BytesConsumer"** %34 to i8**
  store i8* %25, i8** %35, align 8
  ret void
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* nocapture, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.blink::BytesConsumer"* @_ZN5blink21FormDataBytesConsumer7GetImplEPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE(%"class.blink::ExecutionContext"* %1, %"class.blink::EncodedFormData"* %2, %"class.blink::BytesConsumer"* null) #13
  %6 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::BytesConsumer"* %5, %"class.blink::BytesConsumer"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FormDataBytesConsumerC2EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE(%"class.blink::FormDataBytesConsumer"* nocapture, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*, %"class.blink::BytesConsumer"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21FormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call %"class.blink::BytesConsumer"* @_ZN5blink21FormDataBytesConsumer7GetImplEPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE(%"class.blink::ExecutionContext"* %1, %"class.blink::EncodedFormData"* %2, %"class.blink::BytesConsumer"* %3)
  %7 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::BytesConsumer"* %6, %"class.blink::BytesConsumer"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BytesConsumer"* @_ZN5blink21FormDataBytesConsumer7GetImplEPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE(%"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*, %"class.blink::BytesConsumer"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::BytesConsumer::Error", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::Vector.2", align 8
  %12 = ptrtoint %"class.blink::EncodedFormData"* %1 to i64
  %13 = ptrtoint %"class.blink::ExecutionContext"* %0 to i64
  %14 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %3, %32
  %22 = phi i32 [ %33, %32 ], [ 0, %3 ]
  %23 = phi %"class.blink::FormDataElement"* [ %34, %32 ], [ %15, %3 ]
  %24 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -1
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5blink21FormDataBytesConsumer7GetImplEPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEEPNS_13BytesConsumerE, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %28, %21
  %33 = phi i32 [ %22, %21 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %23, i64 1
  %35 = icmp eq %"class.blink::FormDataElement"* %34, %19
  br i1 %35, label %36, label %21

36:                                               ; preds = %32
  switch i32 %33, label %377 [
    i32 0, label %37
    i32 1, label %48
    i32 2, label %329
  ]

37:                                               ; preds = %3, %36
  %38 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %39 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 %12, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %38, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 28, i1 false) #13
  %43 = getelementptr inbounds i8, i8* %38, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  %47 = bitcast i8* %38 to %"class.blink::BytesConsumer"*
  br label %387

48:                                               ; preds = %36
  %49 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 24) #13
  %50 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %12, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 16
  %54 = bitcast i8* %53 to %"class.blink::BytesConsumer"**
  store %"class.blink::BytesConsumer"* null, %"class.blink::BytesConsumer"** %54, align 8
  %55 = icmp eq %"class.blink::BytesConsumer"* %2, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %48
  %57 = ptrtoint %"class.blink::BytesConsumer"* %2 to i64
  %58 = bitcast i8* %53 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %323, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.blink::BytesConsumer"* %2 to i8*
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %62) #13
  br label %323

64:                                               ; preds = %48
  %65 = tail call noalias i8* @malloc(i64 48) #13
  %66 = bitcast i8* %65 to %"class.blink::BlobData"*
  tail call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %66, i32 1) #13
  %67 = bitcast i8* %51 to %"class.blink::EncodedFormData"**
  %68 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %68, i64 0, i32 2, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %197, label %76

76:                                               ; preds = %64
  %77 = bitcast %"class.logging::CheckError"* %4 to i8*
  %78 = bitcast i64* %5 to i8*
  %79 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1
  br label %80

80:                                               ; preds = %194, %76
  %81 = phi %"class.blink::FormDataElement"* [ %70, %76 ], [ %195, %194 ]
  %82 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %194 [
    i32 0, label %84
    i32 1, label %90
    i32 2, label %180
  ]

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 1, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %66, i8* %86, i64 %89) #13
  br label %194

90:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  %91 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 6
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %5, align 8
  %93 = icmp slt i64 %92, 0
  br i1 %93, label %94, label %174

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 2
  %96 = call zeroext i1 @_ZN5blink11GetFileSizeERKN3WTF6StringERKNS_18MojoBindingContextERl(%"class.WTF::String"* dereferenceable(8) %95, %"class.blink::MojoBindingContext"* dereferenceable(72) %79, i64* nonnull dereferenceable(8) %5) #13
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i64, i64* %5, align 8
  br label %174

99:                                               ; preds = %94
  %100 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %67, align 8
  store i64 0, i64* %52, align 8
  %101 = icmp eq %"class.blink::EncodedFormData"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %100, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #13
  %104 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %100) #13
  %108 = bitcast %"class.blink::EncodedFormData"* %100 to i8*
  call void @free(i8* %108) #13
  br label %109

109:                                              ; preds = %107, %102, %99
  %110 = bitcast %"class.blink::BytesConsumer::Error"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  %111 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i64 28) #13
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %115, label %133, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %133

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #13
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !4

130:                                              ; preds = %121
  call void @llvm.trap() #13
  unreachable

131:                                              ; preds = %121
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  br label %133

133:                                              ; preds = %131, %116, %109
  %134 = call %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer13CreateErroredERKNS0_5ErrorE(%"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %6) #13
  %135 = ptrtoint %"class.blink::BytesConsumer"* %134 to i64
  %136 = bitcast i8* %53 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.blink::BytesConsumer"* %134 to i8*
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #13
  br label %142

142:                                              ; preds = %139, %133
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #13
  br label %158

158:                                              ; preds = %157, %154, %142
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %320, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %320

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #13
  br label %320

174:                                              ; preds = %97, %90
  %175 = phi i64 [ %98, %97 ], [ %92, %90 ]
  %176 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 2
  %177 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 5
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 7
  call void @_ZN5blink8BlobData10AppendFileERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE(%"class.blink::BlobData"* %66, %"class.WTF::String"* dereferenceable(8) %176, i64 %178, i64 %175, %"class.absl::optional"* dereferenceable(16) %179) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  br label %194

180:                                              ; preds = %80
  %181 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 4, i32 0
  %182 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %181, align 8
  %183 = icmp eq %"class.blink::BlobDataHandle"* %182, null
  br i1 %183, label %194, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw add i32* %185, i32 1 monotonic
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #13
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  br label %190

190:                                              ; preds = %188, %184
  %191 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %181, align 8
  %192 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %191, i64 0, i32 3
  %193 = load i64, i64* %192, align 8
  call void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"* %66, %"class.blink::BlobDataHandle"* nonnull %182, i64 0, i64 %193) #13
  br label %194

194:                                              ; preds = %190, %180, %174, %84, %80
  %195 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 1
  %196 = icmp eq %"class.blink::FormDataElement"* %195, %74
  br i1 %196, label %197, label %80

197:                                              ; preds = %194, %64
  %198 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #13
  %199 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #13
  %200 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i64 30) #13
  %201 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %67, align 8
  %202 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %201, i64 0, i32 4, i32 0, i32 0, i32 0
  %203 = bitcast i8** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %251, label %208

208:                                              ; preds = %197
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %214 = load i32, i32* %213, align 4
  br i1 %212, label %215, label %225

215:                                              ; preds = %208
  %216 = zext i32 %214 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #13
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !4

222:                                              ; preds = %215
  call void @llvm.trap() #13
  unreachable

223:                                              ; preds = %215
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %213, align 4
  br label %225

225:                                              ; preds = %223, %208
  %226 = phi i32 [ %224, %223 ], [ %214, %208 ]
  %227 = load atomic i32, i32* %209 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %240

230:                                              ; preds = %225
  %231 = zext i32 %226 to i33
  %232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %231, i33 1) #13
  %233 = extractvalue { i33, i1 } %232, 1
  %234 = extractvalue { i33, i1 } %232, 0
  %235 = icmp slt i33 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %237, label %238, !prof !4

237:                                              ; preds = %230
  call void @llvm.trap() #13
  unreachable

238:                                              ; preds = %230
  %239 = trunc i33 %234 to i32
  store i32 %239, i32* %213, align 4
  br label %240

240:                                              ; preds = %238, %225
  %241 = phi i32 [ %239, %238 ], [ %226, %225 ]
  %242 = load atomic i32, i32* %209 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %240
  %246 = add i32 %241, -1
  store i32 %246, i32* %213, align 4
  br label %247

247:                                              ; preds = %245, %240
  %248 = phi i32 [ %246, %245 ], [ %241, %240 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %206) #13
  br label %251

251:                                              ; preds = %250, %247, %197
  %252 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  %254 = bitcast i8** %253 to i64*
  store i64 %204, i64* %254, align 8
  %255 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %9) #13
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %256, align 8
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %66, %"class.WTF::String"* nonnull dereferenceable(8) %8) #13
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %251
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #13
  br label %272

272:                                              ; preds = %271, %268, %251
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #13
  br label %288

288:                                              ; preds = %287, %284, %272
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #13
  br label %304

304:                                              ; preds = %303, %300, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #13
  %305 = call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* %66) #13
  %306 = call noalias i8* @malloc(i64 88) #13
  %307 = bitcast i8* %306 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %307, %"class.blink::BlobData"* %66, i64 %305) #13
  %308 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %309 = bitcast i8* %308 to %"class.blink::BlobBytesConsumer"*
  call void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"* %309, %"class.blink::ExecutionContext"* %0, %"class.blink::BlobDataHandle"* %307) #13
  %310 = getelementptr inbounds i8, i8* %308, i64 -4
  %311 = bitcast i8* %310 to i16*
  %312 = load atomic i16, i16* %311 monotonic, align 2
  %313 = or i16 %312, 1
  store atomic i16 %313, i16* %311 release, align 2
  %314 = ptrtoint i8* %308 to i64
  %315 = bitcast i8* %53 to i64*
  store atomic i64 %314, i64* %315 monotonic, align 8
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %304
  %319 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %308) #13
  br label %323

320:                                              ; preds = %173, %170, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %321 = icmp eq i8* %65, null
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %66) #13
  call void @free(i8* nonnull %65) #13
  br label %323

323:                                              ; preds = %56, %61, %304, %318, %320, %322
  %324 = getelementptr inbounds i8, i8* %49, i64 -4
  %325 = bitcast i8* %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = or i16 %326, 1
  store atomic i16 %327, i16* %325 release, align 2
  %328 = bitcast i8* %49 to %"class.blink::BytesConsumer"*
  br label %387

329:                                              ; preds = %36
  %330 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 80) #13
  %331 = bitcast %"class.WTF::Vector.2"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %331) #13
  %332 = bitcast i8* %330 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %332, align 8
  %333 = getelementptr inbounds i8, i8* %330, i64 8
  %334 = bitcast i8* %333 to i64*
  store i64 %13, i64* %334, align 8
  %335 = getelementptr inbounds i8, i8* %330, i64 16
  %336 = bitcast i8* %335 to i32*
  store i32 0, i32* %336, align 8
  %337 = getelementptr inbounds i8, i8* %330, i64 24
  %338 = bitcast i8* %337 to %"class.blink::EncodedFormData"**
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %338, align 8
  %339 = getelementptr inbounds i8, i8* %330, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %339, i8 0, i64 40, i1 false) #13
  %340 = tail call %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData4CopyEv(%"class.blink::EncodedFormData"* %1) #13
  %341 = ptrtoint %"class.blink::EncodedFormData"* %340 to i64
  %342 = bitcast i8* %337 to i64*
  %343 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %338, align 8
  store i64 %341, i64* %342, align 8
  %344 = icmp eq %"class.blink::EncodedFormData"* %343, null
  br i1 %344, label %352, label %345

345:                                              ; preds = %329
  %346 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %343, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %346) #13
  %347 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %343, i64 0, i32 0, i32 0, i32 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %345
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %343) #13
  %351 = bitcast %"class.blink::EncodedFormData"* %343 to i8*
  tail call void @free(i8* %351) #13
  br label %352

352:                                              ; preds = %350, %345, %329
  %353 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %338, align 8
  call void @_ZN5blink15FormDataEncoder28GenerateUniqueBoundaryStringEv(%"class.WTF::Vector.2"* nonnull sret %11) #13
  %354 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %353, i64 0, i32 4
  %355 = call dereferenceable(16) %"class.WTF::Vector.2"* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.2"* %354, %"class.WTF::Vector.2"* nonnull dereferenceable(16) %11) #13
  %356 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %11, i64 0, i32 0, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359, !prof !2

359:                                              ; preds = %352
  %360 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %11, i64 0, i32 0, i32 0, i32 2
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %364, label %363, !prof !4

363:                                              ; preds = %359
  store i32 0, i32* %360, align 4
  br label %364

364:                                              ; preds = %363, %359
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %357) #13
  store i8* null, i8** %356, align 8
  br label %365

365:                                              ; preds = %352, %364
  %366 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %338, align 8
  %367 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %366, i64 0, i32 2, i32 0, i32 0, i32 0
  %368 = bitcast %"class.blink::FormDataElement"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = getelementptr inbounds i8, i8* %330, i64 32
  %371 = bitcast i8* %370 to i64*
  store i64 %369, i64* %371, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %331) #13
  %372 = getelementptr inbounds i8, i8* %330, i64 -4
  %373 = bitcast i8* %372 to i16*
  %374 = load atomic i16, i16* %373 monotonic, align 2
  %375 = or i16 %374, 1
  store atomic i16 %375, i16* %373 release, align 2
  %376 = bitcast i8* %330 to %"class.blink::BytesConsumer"*
  br label %377

377:                                              ; preds = %36, %365
  %378 = phi %"class.blink::BytesConsumer"* [ %376, %365 ], [ null, %36 ]
  %379 = icmp eq %"class.blink::EncodedFormData"* %1, null
  br i1 %379, label %387, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %381) #13
  %382 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %380
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %1) #13
  %386 = bitcast %"class.blink::EncodedFormData"* %1 to i8*
  call void @free(i8* %386) #13
  br label %387

387:                                              ; preds = %37, %323, %377, %380, %385
  %388 = phi %"class.blink::BytesConsumer"* [ %378, %377 ], [ %378, %380 ], [ %378, %385 ], [ %47, %37 ], [ %328, %323 ]
  ret %"class.blink::BytesConsumer"* %388
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21FormDataBytesConsumerD0Ev(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21FormDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::FormDataBytesConsumer"*, i8**, i64*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %4, align 8
  %6 = bitcast %"class.blink::BytesConsumer"* %5 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %7 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %7, i64 2
  %9 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::BytesConsumer"* %5, i8** %1, i64* %2) #13
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21FormDataBytesConsumer7EndReadEm(%"class.blink::FormDataBytesConsumer"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %6 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %6, i64 3
  %8 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::BytesConsumer"* %4, i64 %1) #13
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BlobDataHandle"* @_ZN5blink21FormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::FormDataBytesConsumer"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)***
  %6 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)**, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %6, i64 4
  %8 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %7, align 8
  %9 = tail call %"class.blink::BlobDataHandle"* %8(%"class.blink::BytesConsumer"* %4, i32 %1) #13
  ret %"class.blink::BlobDataHandle"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EncodedFormData"* @_ZN5blink21FormDataBytesConsumer15DrainAsFormDataEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)**, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %5, i64 5
  %7 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.blink::EncodedFormData"* %7(%"class.blink::BytesConsumer"* %3) #13
  ret %"class.blink::EncodedFormData"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumer15DrainAsDataPipeEv(%"class.mojo::ScopedHandleBase.276"* noalias sret, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::ScopedHandleBase.276", %"class.mojo::ScopedHandleBase.276"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21FormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %6 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %6, i64 7
  %8 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %7, align 8
  tail call void %8(%"class.blink::BytesConsumer"* %4, %"class.blink::BytesConsumer::Client"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21FormDataBytesConsumer11ClearClientEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 8
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21FormDataBytesConsumer6CancelEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink21FormDataBytesConsumer14GetPublicStateEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to i32 (%"class.blink::BytesConsumer"*)***
  %5 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %5, i64 10
  %7 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::BytesConsumer"* %3) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21FormDataBytesConsumer8GetErrorEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)**, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %5, i64 11
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::BytesConsumer"* %3) #13
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21FormDataBytesConsumer9DebugNameEv(%"class.blink::FormDataBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)**, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %5, i64 12
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::BytesConsumer"* %3) #13
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21FormDataBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataBytesConsumer", %"class.blink::FormDataBytesConsumer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumerD2Ev(%"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BlobDataHandle"* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE(%"class.blink::BytesConsumer"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::BlobDataHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13BytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #13
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::BytesConsumer"*
  %3 = bitcast i8* %0 to void (%"class.blink::BytesConsumer"*)***
  %4 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %3, align 8
  %5 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %4, align 8
  tail call void %5(%"class.blink::BytesConsumer"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerD2Ev(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #13
  store i8* null, i8** %3, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %13, align 8
  %15 = icmp eq %"class.blink::EncodedFormData"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %14) #13
  %22 = bitcast %"class.blink::EncodedFormData"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerD0Ev(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #13
  store i8* null, i8** %3, align 8
  br label %12

12:                                               ; preds = %11, %1
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %13, align 8
  %15 = icmp eq %"class.blink::EncodedFormData"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %14) #13
  %22 = bitcast %"class.blink::EncodedFormData"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8** nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %4, i64 0, i32 0
  %6 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %5, align 8
  %7 = icmp eq %"class.blink::EncodedFormData"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2
  tail call void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"* nonnull %6, %"class.WTF::Vector.2"* dereferenceable(16) %9) #13
  %10 = bitcast %class.scoped_refptr.1* %4 to i64*
  %11 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %5, align 8
  store i64 0, i64* %10, align 8
  %12 = icmp eq %"class.blink::EncodedFormData"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #13
  %15 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %11) #13
  %19 = bitcast %"class.blink::EncodedFormData"* %11 to i8*
  tail call void @free(i8* %19) #13
  br label %20

20:                                               ; preds = %3, %18, %13, %8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = icmp eq i64 %22, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %22
  store i8* %30, i8** %1, align 8
  %31 = load i32, i32* %23, align 4
  %32 = zext i32 %31 to i64
  %33 = load i64, i64* %21, align 8
  %34 = sub i64 %32, %33
  store i64 %34, i64* %2, align 8
  br label %35

35:                                               ; preds = %20, %27
  %36 = phi i32 [ 0, %27 ], [ 2, %20 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer7EndReadEm(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp eq i64 %5, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 4
  store i32 1, i32* %11, align 8
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i32 [ 2, %10 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::BlobDataHandle"* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.2", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %4, i64 0, i32 0
  %6 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %5, align 8
  %7 = icmp eq %"class.blink::EncodedFormData"* %6, null
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::Vector.2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #13
  call void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"* nonnull %6, %"class.WTF::Vector.2"* nonnull dereferenceable(16) %3) #13
  %12 = bitcast %class.scoped_refptr.1* %4 to i64*
  %13 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %5, align 8
  store i64 0, i64* %12, align 8
  %14 = icmp eq %"class.blink::EncodedFormData"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #13
  %17 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %13) #13
  %21 = bitcast %"class.blink::EncodedFormData"* %13 to i8*
  call void @free(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %15, %8
  %23 = call noalias i8* @malloc(i64 48) #13
  %24 = bitcast i8* %23 to %"class.blink::BlobData"*
  call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %24, i32 1) #13
  %25 = load i8*, i8** %10, align 8
  %26 = load i32, i32* %11, align 4
  %27 = zext i32 %26 to i64
  call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %24, i8* %25, i64 %27) #13
  %28 = call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* %24) #13
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 4
  store i32 1, i32* %29, align 8
  %30 = call noalias i8* @malloc(i64 88) #13
  %31 = bitcast i8* %30 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %31, %"class.blink::BlobData"* %24, i64 %28) #13
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %39, label %34, !prof !2

34:                                               ; preds = %22
  %35 = load i32, i32* %11, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !4

37:                                               ; preds = %34
  store i32 0, i32* %11, align 4
  br label %38

38:                                               ; preds = %37, %34
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #13
  store i8* null, i8** %10, align 8
  br label %39

39:                                               ; preds = %22, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br label %40

40:                                               ; preds = %2, %39
  %41 = phi %"class.blink::BlobDataHandle"* [ %31, %39 ], [ null, %2 ]
  ret %"class.blink::BlobDataHandle"* %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.blink::EncodedFormData"* @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer15DrainAsFormDataEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %2, align 8
  %4 = icmp eq %"class.blink::EncodedFormData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 4
  store i32 1, i32* %6, align 8
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.blink::EncodedFormData"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture, %"class.blink::BytesConsumer::Client"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer11ClearClientEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer6CancelEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 4
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 1
  %4 = bitcast %class.scoped_refptr.1* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  %6 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.blink::EncodedFormData"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #13
  %10 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %6) #13
  %14 = bitcast %"class.blink::EncodedFormData"* %6 to i8*
  tail call void @free(i8* %14) #13
  br label %15

15:                                               ; preds = %1, %8, %13
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  %26 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %16, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.WTF::Vector.2"* %16 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  store i32 0, i32* %17, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #13
  br label %29

29:                                               ; preds = %15, %25
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 3
  store i64 0, i64* %30, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer14GetPublicStateEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer", %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer8GetErrorEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture readnone) unnamed_addr #8 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_127SimpleFormDataBytesConsumer9DebugNameEv(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 27) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"*, %"class.WTF::Vector.2"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"*) local_unnamed_addr #2

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN5blink11GetFileSizeERKN3WTF6StringERKNS_18MojoBindingContextERl(%"class.WTF::String"* dereferenceable(8), %"class.blink::MojoBindingContext"* dereferenceable(72), i64* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::BytesConsumer"* @_ZN5blink13BytesConsumer13CreateErroredERKNS0_5ErrorE(%"class.blink::BytesConsumer::Error"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData10AppendFileERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8), i64, i64, %"class.absl::optional"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"*, %"class.blink::BlobDataHandle"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.513", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.513", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.513", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.513"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.513"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.513"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.513"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.512"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.513"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !4

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.513"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.513"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.512"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.513"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !4

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerD2Ev(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %3, align 8
  %5 = icmp eq %"class.blink::EncodedFormData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %4) #13
  %12 = bitcast %"class.blink::EncodedFormData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerD0Ev(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %3, align 8
  %5 = icmp eq %"class.blink::EncodedFormData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %4) #13
  %12 = bitcast %"class.blink::EncodedFormData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture, i8**, i64*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1
  %5 = bitcast %class.scoped_refptr.1* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %4, i64 0, i32 0
  %7 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %6, align 8
  store i64 0, i64* %5, align 8
  %8 = icmp eq %"class.blink::EncodedFormData"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %7) #13
  %15 = bitcast %"class.blink::EncodedFormData"* %7 to i8*
  tail call void @free(i8* %15) #13
  br label %16

16:                                               ; preds = %3, %9, %14
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %17, align 8
  %19 = bitcast %"class.blink::BytesConsumer"* %18 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %20 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %20, i64 2
  %22 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::BytesConsumer"* %18, i8** %1, i64* %2) #13
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer7EndReadEm(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %6 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %6, i64 3
  %8 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::BytesConsumer"* %4, i64 %1) #13
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::BlobDataHandle"* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer21DrainAsBlobDataHandleENS_13BytesConsumer14BlobSizePolicyE(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)***
  %6 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)**, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %6, i64 4
  %8 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %7, align 8
  %9 = tail call %"class.blink::BlobDataHandle"* %8(%"class.blink::BytesConsumer"* %4, i32 %1) #13
  %10 = icmp eq %"class.blink::BlobDataHandle"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1
  %13 = bitcast %class.scoped_refptr.1* %12 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %12, i64 0, i32 0
  %15 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %14, align 8
  store i64 0, i64* %13, align 8
  %16 = icmp eq %"class.blink::EncodedFormData"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #13
  %19 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %15) #13
  %23 = bitcast %"class.blink::EncodedFormData"* %15 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %2, %22, %17, %11
  ret %"class.blink::BlobDataHandle"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::EncodedFormData"* @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer15DrainAsFormDataEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %2, align 8
  %4 = icmp eq %"class.blink::EncodedFormData"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %6, align 8
  %8 = bitcast %"class.blink::BytesConsumer"* %7 to void (%"class.blink::BytesConsumer"*)***
  %9 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %9, i64 9
  %11 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %10, align 8
  tail call void %11(%"class.blink::BytesConsumer"* %7) #13
  %12 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %2, align 8
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %2, align 8
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.blink::EncodedFormData"* [ %12, %5 ], [ null, %1 ]
  ret %"class.blink::EncodedFormData"* %14
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %3, align 8
  %5 = bitcast %"class.blink::BytesConsumer"* %4 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %6 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %6, i64 7
  %8 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %7, align 8
  tail call void %8(%"class.blink::BytesConsumer"* %4, %"class.blink::BytesConsumer::Client"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer11ClearClientEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 8
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer6CancelEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 1
  %3 = bitcast %class.scoped_refptr.1* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %5 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.blink::EncodedFormData"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #13
  %9 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %5) #13
  %13 = bitcast %"class.blink::EncodedFormData"* %5 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %7, %12
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %15, align 8
  %17 = bitcast %"class.blink::BytesConsumer"* %16 to void (%"class.blink::BytesConsumer"*)***
  %18 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %18, i64 9
  %20 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %19, align 8
  tail call void %20(%"class.blink::BytesConsumer"* %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer14GetPublicStateEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to i32 (%"class.blink::BytesConsumer"*)***
  %5 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %5, i64 10
  %7 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::BytesConsumer"* %3) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer8GetErrorEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)**, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %5, i64 11
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::BytesConsumer"* %3) #13
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer9DebugNameEv(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_128ComplexFormDataBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer", %"class.blink::(anonymous namespace)::ComplexFormDataBytesConsumer"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.513", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.513"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.513", %"class.WTF::StringTypeAdapter.513"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.513"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.513"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.513"*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.512"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.513"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.512"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.513"*, i16*) local_unnamed_addr #2

declare void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData4CopyEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare void @_ZN5blink15FormDataEncoder28GenerateUniqueBoundaryStringEv(%"class.WTF::Vector.2"* sret) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerD2Ev(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 3, i32 0
  %21 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %20, align 8
  %22 = icmp eq %"class.blink::EncodedFormData"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #13
  %25 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %21) #13
  %29 = bitcast %"class.blink::EncodedFormData"* %21 to i8*
  tail call void @free(i8* %29) #13
  br label %30

30:                                               ; preds = %19, %23, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerD0Ev(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 3, i32 0
  %21 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %20, align 8
  %22 = icmp eq %"class.blink::EncodedFormData"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #13
  %25 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %21) #13
  %29 = bitcast %"class.blink::EncodedFormData"* %21 to i8*
  tail call void @free(i8* %29) #13
  br label %30

30:                                               ; preds = %19, %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i8**, i64*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase.276", align 4
  %5 = alloca %"class.mojo::DataPipeProducerHandle", align 4
  %6 = alloca %"class.mojo::DataPipeConsumerHandle", align 4
  %7 = alloca %"class.mojo::ScopedHandleBase.514", align 4
  %8 = alloca %"class.base::OnceCallback.515", align 8
  %9 = alloca %"class.blink::WeakPersistent", align 8
  %10 = alloca %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, align 8
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %14 [
    i32 1, label %318
    i32 2, label %13
  ]

13:                                               ; preds = %3
  br label %318

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 4
  %16 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %20, i64 %23
  %25 = icmp eq %"class.blink::FormDataElement"* %16, %24
  br i1 %25, label %26, label %53

26:                                               ; preds = %14
  store i32 1, i32* %11, align 8
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %28 = bitcast %"class.blink::Member.269"* %27 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %30 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %29, align 8
  %31 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %30 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)***
  %34 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %34, i64 8
  %36 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %35, align 8
  tail call void %36(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %30) #13
  br label %42

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %39 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %38, align 8
  %40 = icmp eq %"class.blink::DataPipeBytesConsumer"* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  tail call void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"* nonnull %39) #13
  br label %42

42:                                               ; preds = %41, %37, %32
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %44 = bitcast %"class.blink::Member.271"* %43 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8
  %46 = getelementptr inbounds %"class.blink::Member.273", %"class.blink::Member.273"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %46, align 8
  %48 = icmp eq %"class.blink::DataPipeBytesConsumer"* %47, null
  br i1 %48, label %318, label %49

49:                                               ; preds = %42
  tail call void @_ZN5blink21DataPipeBytesConsumer6CancelEv(%"class.blink::DataPipeBytesConsumer"* nonnull %47) #13
  %50 = bitcast %"class.blink::Member.273"* %45 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %52 = bitcast %"class.blink::Member.282"* %51 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  br label %318

53:                                               ; preds = %14
  %54 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %318 [
    i32 0, label %56
    i32 3, label %103
  ]

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %58 = getelementptr inbounds %"class.blink::Member.271", %"class.blink::Member.271"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %58, align 8
  %60 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %59, null
  br i1 %60, label %61, label %90

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 1
  %63 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.2"* dereferenceable(16) %62) #13
  %64 = ptrtoint %"class.blink::EncodedFormData"* %63 to i64
  %65 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #13
  %66 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127SimpleFormDataBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 %64, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %65, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 28, i1 false) #13
  %70 = getelementptr inbounds i8, i8* %65, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  %74 = bitcast %"class.blink::Member.271"* %57 to i64*
  %75 = ptrtoint i8* %65 to i64
  store atomic i64 %75, i64* %74 monotonic, align 8
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %61
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #13
  br label %80

80:                                               ; preds = %61, %78
  %81 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %81, align 8
  %83 = icmp eq %"class.blink::BytesConsumer::Client"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %58, align 8
  %86 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %85 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %87 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %87, i64 7
  %89 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %88, align 8
  tail call void %89(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %85, %"class.blink::BytesConsumer::Client"* nonnull %82) #13
  br label %90

90:                                               ; preds = %80, %56, %84
  %91 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %58, align 8
  %92 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %91 to i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)***
  %93 = load i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)** %93, i64 2
  %95 = load i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i8**, i64*)** %94, align 8
  %96 = tail call i32 %95(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %91, i8** %1, i64* %2) #13
  switch i32 %96, label %318 [
    i32 3, label %97
    i32 2, label %98
  ]

97:                                               ; preds = %90
  tail call fastcc void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8SetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0)
  br label %318

98:                                               ; preds = %90
  %99 = bitcast %"class.blink::Member.271"* %57 to i64*
  store atomic i64 0, i64* %99 monotonic, align 8
  %100 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %15, align 8
  %101 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %100, i64 1
  store %"class.blink::FormDataElement"* %101, %"class.blink::FormDataElement"** %15, align 8
  %102 = tail call i32 @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i8** %1, i64* %2)
  br label %318

103:                                              ; preds = %53
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8
  %105 = getelementptr inbounds %"class.blink::Member.273", %"class.blink::Member.273"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %105, align 8
  %107 = icmp eq %"class.blink::DataPipeBytesConsumer"* %106, null
  br i1 %107, label %108, label %307

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 8, i32 0
  %110 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %110, i64 0, i32 1, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %112, align 8
  %114 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %113, null
  br i1 %114, label %115, label %137

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %110, i64 0, i32 1
  %117 = bitcast %"class.mojo::Remote"* %116 to %"class.mojo::internal::InterfacePtrStateBase"*
  %118 = tail call i8* @_Znwm(i64 8) #14
  %119 = bitcast i8* %118 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink31DataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = bitcast i8* %118 to %"class.mojo::MessageReceiver"*
  %121 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %117, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %120, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink14DataPipeGetter5Name_E, i64 0, i64 0)) #13
  br i1 %121, label %122, label %137

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %110, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = bitcast %"class.mojo::InterfaceEndpointClient"** %123 to %"class.mojo::MessageReceiverWithResponder"**
  %125 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %124, align 8
  %126 = tail call i8* @_Znwm(i64 16) #14
  %127 = bitcast i8* %126 to %"class.network::mojom::blink::DataPipeGetterProxy"*
  tail call void @_ZN7network5mojom5blink19DataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %127, %"class.mojo::MessageReceiverWithResponder"* %125) #13
  %128 = ptrtoint i8* %126 to i64
  %129 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %112, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.184"* %111 to i64*
  store i64 %128, i64* %130, align 8
  %131 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %122
  %133 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %129 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %134 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %134, i64 1
  %136 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %135, align 8
  tail call void %136(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %129) #13
  br label %137

137:                                              ; preds = %108, %115, %122, %132
  %138 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %112, align 8
  %139 = getelementptr inbounds %"class.network::mojom::blink::DataPipeGetterProxy", %"class.network::mojom::blink::DataPipeGetterProxy"* %138, i64 0, i32 0
  %140 = bitcast %"class.mojo::DataPipeProducerHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #13
  %141 = getelementptr inbounds %"class.mojo::DataPipeProducerHandle", %"class.mojo::DataPipeProducerHandle"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %141, align 4
  %142 = bitcast %"class.mojo::DataPipeConsumerHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #13
  %143 = getelementptr inbounds %"class.mojo::DataPipeConsumerHandle", %"class.mojo::DataPipeConsumerHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %143, align 4
  %144 = call i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions* null, i32* nonnull %141, i32* nonnull %143) #13
  %145 = load i32, i32* %141, align 4
  %146 = load i32, i32* %143, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #13
  %147 = icmp eq i32 %144, 0
  br i1 %147, label %148, label %299

148:                                              ; preds = %137
  %149 = getelementptr inbounds %"class.mojo::ScopedHandleBase.514", %"class.mojo::ScopedHandleBase.514"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 %145, i32* %149, align 4, !alias.scope !5
  %150 = bitcast %"class.blink::WeakPersistent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #13
  %151 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0
  %152 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"** %152, align 8, !alias.scope !8
  %153 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %153, align 8, !alias.scope !8
  %154 = ptrtoint %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0 to i64
  switch i64 %154, label %155 [
    i64 0, label %181
    i64 -1, label %181
  ]

155:                                              ; preds = %148
  %156 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !8
  %157 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %156, i64 0, i32 1
  %158 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %157) #13, !noalias !8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %160, label %162, !prof !4

160:                                              ; preds = %155
  %161 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %157, i8* %161) #13
  br label %162

162:                                              ; preds = %160, %155
  %163 = phi i8* [ %161, %160 ], [ %158, %155 ]
  %164 = bitcast i8* %163 to %"class.blink::ThreadState"**
  %165 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %164, align 8, !noalias !8
  %166 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %165, i64 0, i32 4, i32 0, i32 0, i32 0
  %167 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %166, align 8, !noalias !8
  %168 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %168, align 8, !noalias !8
  %170 = icmp eq %"class.blink::PersistentNode"* %169, null
  br i1 %170, label %171, label %174, !prof !4

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %167, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %172) #13
  %173 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %168, align 8
  br label %174

174:                                              ; preds = %171, %162
  %175 = phi %"class.blink::PersistentNode"* [ %173, %171 ], [ %169, %162 ]
  %176 = bitcast %"class.blink::PersistentNode"* %175 to i64*
  %177 = load i64, i64* %176, align 8, !noalias !8
  %178 = bitcast %"class.blink::PersistentRegion"* %167 to i64*
  store i64 %177, i64* %178, align 8, !noalias !8
  %179 = bitcast %"class.blink::PersistentNode"* %175 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %151, %"class.blink::PersistentBase"** %179, align 8, !noalias !8
  %180 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %175, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %180, align 8
  store %"class.blink::PersistentNode"* %175, %"class.blink::PersistentNode"** %153, align 8, !alias.scope !8
  br label %181

181:                                              ; preds = %148, %148, %174
  %182 = getelementptr inbounds %"class.base::OnceCallback.515", %"class.base::OnceCallback.515"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %182, align 8, !alias.scope !11
  %183 = call i8* @_Znwm(i64 64) #14, !noalias !14
  %184 = bitcast i8* %183 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %184, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEFvimEE7RunOnceEPNS0_13BindStateBaseEim to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #13, !noalias !14
  %185 = getelementptr inbounds i8, i8* %183, i64 32
  %186 = bitcast i8* %185 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer22DataPipeGetterCallbackEim to i64), i64 0>, <2 x i64>* %186, align 8, !noalias !14
  %187 = getelementptr inbounds i8, i8* %183, i64 48
  %188 = bitcast %"class.blink::WeakPersistent"* %9 to i64*
  %189 = load i64, i64* %188, align 8, !noalias !14
  %190 = bitcast i8* %187 to i64*
  store i64 %189, i64* %190, align 8, !noalias !14
  %191 = getelementptr inbounds i8, i8* %183, i64 56
  %192 = bitcast i8* %191 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %192, align 8, !noalias !14
  switch i64 %189, label %193 [
    i64 0, label %219
    i64 -1, label %219
  ]

193:                                              ; preds = %181
  %194 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !14
  %195 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %194, i64 0, i32 1
  %196 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %195) #13, !noalias !14
  %197 = icmp eq i8* %196, null
  br i1 %197, label %198, label %200, !prof !4

198:                                              ; preds = %193
  %199 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13, !noalias !14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %195, i8* %199) #13, !noalias !14
  br label %200

200:                                              ; preds = %198, %193
  %201 = phi i8* [ %199, %198 ], [ %196, %193 ]
  %202 = bitcast i8* %201 to %"class.blink::ThreadState"**
  %203 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %202, align 8, !noalias !14
  %204 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %203, i64 0, i32 4, i32 0, i32 0, i32 0
  %205 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %204, align 8, !noalias !14
  %206 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %206, align 8, !noalias !14
  %208 = icmp eq %"class.blink::PersistentNode"* %207, null
  br i1 %208, label %209, label %212, !prof !4

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %205, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %210) #13, !noalias !14
  %211 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %206, align 8, !noalias !14
  br label %212

212:                                              ; preds = %209, %200
  %213 = phi %"class.blink::PersistentNode"* [ %211, %209 ], [ %207, %200 ]
  %214 = bitcast %"class.blink::PersistentNode"* %213 to i64*
  %215 = load i64, i64* %214, align 8, !noalias !14
  %216 = bitcast %"class.blink::PersistentRegion"* %205 to i64*
  store i64 %215, i64* %216, align 8, !noalias !14
  %217 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %213, i64 0, i32 0
  store i8* %187, i8** %217, align 8, !noalias !14
  %218 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %213, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %218, align 8, !noalias !14
  store %"class.blink::PersistentNode"* %213, %"class.blink::PersistentNode"** %192, align 8, !noalias !14
  br label %219

219:                                              ; preds = %181, %181, %212
  %220 = bitcast %"class.base::OnceCallback.515"* %8 to i8**
  store i8* %183, i8** %220, align 8, !alias.scope !14
  %221 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %138 to void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)***
  %222 = load void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)**, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)*, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)** %222, i64 2
  %224 = load void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)*, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::ScopedHandleBase.514"*, %"class.base::OnceCallback.515"*)** %223, align 8
  call void %224(%"class.network::mojom::blink::DataPipeGetter"* %139, %"class.mojo::ScopedHandleBase.514"* nonnull %7, %"class.base::OnceCallback.515"* nonnull %8) #13
  %225 = getelementptr inbounds %"class.base::OnceCallback.515", %"class.base::OnceCallback.515"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %225) #13
  %226 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %153, align 8
  %227 = icmp eq %"class.blink::PersistentNode"* %226, null
  br i1 %227, label %247, label %228

228:                                              ; preds = %219
  %229 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %230 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %229, i64 0, i32 1
  %231 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %230) #13
  %232 = icmp eq i8* %231, null
  br i1 %232, label %233, label %235, !prof !4

233:                                              ; preds = %228
  %234 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %230, i8* %234) #13
  br label %235

235:                                              ; preds = %233, %228
  %236 = phi i8* [ %234, %233 ], [ %231, %228 ]
  %237 = bitcast i8* %236 to %"class.blink::ThreadState"**
  %238 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %238, i64 0, i32 4, i32 0, i32 0, i32 0
  %240 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %239, align 8
  %241 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %153, align 8
  %242 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %240, i64 0, i32 0, i32 0
  %243 = bitcast %"class.blink::PersistentRegion"* %240 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.blink::PersistentNode"* %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %241, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %246, align 8
  store %"class.blink::PersistentNode"* %241, %"class.blink::PersistentNode"** %242, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %153, align 8
  br label %247

247:                                              ; preds = %219, %235
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #13
  %248 = load i32, i32* %149, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = call i32 @MojoClose(i32 %248) #13
  br label %252

252:                                              ; preds = %247, %250
  %253 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #13
  store %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* null, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %10, align 8
  %254 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 1, i32 0, i32 0
  %255 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %255, i64 0, i32 1
  %257 = bitcast %"class.blink::MojoBindingContext"* %256 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %258 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %257, align 8
  %259 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %258, i64 6
  %260 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %259, align 8
  %261 = call %"class.base::SingleThreadTaskRunner"* %260(%"class.blink::MojoBindingContext"* %256, i8 zeroext 3) #13
  %262 = bitcast %"class.mojo::ScopedHandleBase.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262) #13
  %263 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 160) #13
  %264 = bitcast i8* %263 to %"class.blink::DataPipeBytesConsumer"*
  %265 = getelementptr inbounds %"class.mojo::ScopedHandleBase.276", %"class.mojo::ScopedHandleBase.276"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %146, i32* %265, align 4, !alias.scope !19
  call void @_ZN5blink21DataPipeBytesConsumerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE(%"class.blink::DataPipeBytesConsumer"* %264, %"class.base::SingleThreadTaskRunner"* %261, %"class.mojo::ScopedHandleBase.276"* nonnull %4, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** nonnull %10) #13
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %270, label %268

268:                                              ; preds = %252
  %269 = call i32 @MojoClose(i32 %266) #13
  br label %270

270:                                              ; preds = %252, %268
  %271 = getelementptr inbounds i8, i8* %263, i64 -4
  %272 = bitcast i8* %271 to i16*
  %273 = load atomic i16, i16* %272 monotonic, align 2
  %274 = or i16 %273, 1
  store atomic i16 %274, i16* %272 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #13
  %275 = ptrtoint i8* %263 to i64
  %276 = bitcast %"class.blink::Member.273"* %104 to i64*
  store atomic i64 %275, i64* %276 monotonic, align 8
  %277 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %270
  %280 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %263) #13
  br label %281

281:                                              ; preds = %279, %270
  %282 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %10, align 8
  %283 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %284 = ptrtoint %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %282 to i64
  %285 = bitcast %"class.blink::Member.282"* %283 to i64*
  store atomic i64 %284, i64* %285 monotonic, align 8
  %286 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %281
  %289 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %282 to i8*
  %290 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %289) #13
  br label %291

291:                                              ; preds = %281, %288
  %292 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6, i32 0, i32 0
  %293 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %292, align 8
  %294 = icmp eq %"class.blink::BytesConsumer::Client"* %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %105, align 8
  call void @_ZN5blink21DataPipeBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::DataPipeBytesConsumer"* %296, %"class.blink::BytesConsumer::Client"* nonnull %293) #13
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #13
  %298 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %105, align 8
  br label %307

299:                                              ; preds = %137
  %300 = icmp eq i32 %146, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  %302 = call i32 @MojoClose(i32 %146) #13
  br label %303

303:                                              ; preds = %299, %301
  %304 = icmp eq i32 %145, 0
  br i1 %304, label %318, label %305

305:                                              ; preds = %303
  %306 = call i32 @MojoClose(i32 %145) #13
  br label %318

307:                                              ; preds = %103, %297
  %308 = phi %"class.blink::DataPipeBytesConsumer"* [ %106, %103 ], [ %298, %297 ]
  %309 = call i32 @_ZN5blink21DataPipeBytesConsumer9BeginReadEPPKcPm(%"class.blink::DataPipeBytesConsumer"* %308, i8** %1, i64* %2) #13
  switch i32 %309, label %318 [
    i32 3, label %310
    i32 2, label %311
  ]

310:                                              ; preds = %307
  call fastcc void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8SetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0)
  br label %318

311:                                              ; preds = %307
  %312 = bitcast %"class.blink::Member.273"* %104 to i64*
  store atomic i64 0, i64* %312 monotonic, align 8
  %313 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %314 = bitcast %"class.blink::Member.282"* %313 to i64*
  store atomic i64 0, i64* %314 monotonic, align 8
  %315 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %15, align 8
  %316 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %315, i64 1
  store %"class.blink::FormDataElement"* %316, %"class.blink::FormDataElement"** %15, align 8
  %317 = call i32 @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i8** %1, i64* %2)
  br label %318

318:                                              ; preds = %305, %303, %49, %42, %53, %310, %311, %307, %97, %98, %90, %3, %13
  %319 = phi i32 [ 3, %13 ], [ 2, %3 ], [ 3, %97 ], [ %102, %98 ], [ %96, %90 ], [ 3, %310 ], [ %317, %311 ], [ %309, %307 ], [ 3, %53 ], [ 2, %42 ], [ 2, %49 ], [ 3, %303 ], [ 3, %305 ]
  ret i32 %319
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer7EndReadEm(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %6 [
    i32 1, label %26
    i32 2, label %5
  ]

5:                                                ; preds = %2
  br label %26

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %7, align 8
  %9 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %8 to i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)***
  %12 = load i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)**, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)*, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)** %12, i64 3
  %14 = load i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)*, i32 (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, i64)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %8, i64 %1) #13
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  tail call fastcc void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8SetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0)
  br label %26

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %20 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %19, align 8
  %21 = icmp eq %"class.blink::DataPipeBytesConsumer"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = tail call i32 @_ZN5blink21DataPipeBytesConsumer7EndReadEm(%"class.blink::DataPipeBytesConsumer"* nonnull %20, i64 %1) #13
  %24 = icmp eq i32 %23, 3
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call fastcc void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8SetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0)
  br label %26

26:                                               ; preds = %18, %25, %22, %17, %10, %2, %5
  %27 = phi i32 [ 3, %5 ], [ 2, %2 ], [ 3, %17 ], [ 0, %10 ], [ 3, %25 ], [ 0, %22 ], [ 3, %18 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::EncodedFormData"* @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer15DrainAsFormDataEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %22, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %7, align 8
  %9 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %12 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %11, align 8
  %13 = icmp eq %"class.blink::DataPipeBytesConsumer"* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  store i32 1, i32* %2, align 8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %16 = bitcast %"class.blink::Member.269"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %18 = bitcast %"class.blink::Member.271"* %17 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 3, i32 0
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %21, align 8
  br label %22

22:                                               ; preds = %10, %6, %1, %14
  %23 = phi %"class.blink::EncodedFormData"* [ %20, %14 ], [ null, %1 ], [ null, %10 ], [ null, %6 ]
  ret %"class.blink::EncodedFormData"* %23
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %4 = ptrtoint %"class.blink::BytesConsumer::Client"* %1 to i64
  %5 = bitcast %"class.blink::Member.269"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::BytesConsumer::Client"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #13
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %12, align 8
  %14 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Member.269", %"class.blink::Member.269"* %3, i64 0, i32 0, i32 0
  %17 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %16, align 8
  %18 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %13 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %19 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %19, i64 7
  %21 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %20, align 8
  tail call void %21(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %13, %"class.blink::BytesConsumer::Client"* %17) #13
  br label %29

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %24 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %23, align 8
  %25 = icmp eq %"class.blink::DataPipeBytesConsumer"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::Member.269", %"class.blink::Member.269"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %27, align 8
  tail call void @_ZN5blink21DataPipeBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::DataPipeBytesConsumer"* nonnull %24, %"class.blink::BytesConsumer::Client"* %28) #13
  br label %29

29:                                               ; preds = %22, %26, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer11ClearClientEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %3 = bitcast %"class.blink::Member.269"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %4, align 8
  %6 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %5 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)***
  %9 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %9, i64 8
  %11 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %10, align 8
  tail call void %11(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %5) #13
  br label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %13, align 8
  %15 = icmp eq %"class.blink::DataPipeBytesConsumer"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"* nonnull %14) #13
  br label %17

17:                                               ; preds = %12, %16, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer6CancelEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %49, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %7, align 8
  %9 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %8 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)***
  %12 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %12, i64 9
  %14 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %13, align 8
  tail call void %14(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %8) #13
  br label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %17 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %16, align 8
  %18 = icmp eq %"class.blink::DataPipeBytesConsumer"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN5blink21DataPipeBytesConsumer6CancelEv(%"class.blink::DataPipeBytesConsumer"* nonnull %17) #13
  br label %20

20:                                               ; preds = %15, %19, %10
  %21 = load i32, i32* %2, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %49, label %23

23:                                               ; preds = %20
  store i32 1, i32* %2, align 8
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %25 = bitcast %"class.blink::Member.269"* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %7, align 8
  %27 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %26 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)***
  %30 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %30, i64 8
  %32 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %31, align 8
  tail call void %32(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %26) #13
  br label %38

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %35 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %34, align 8
  %36 = icmp eq %"class.blink::DataPipeBytesConsumer"* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"* nonnull %35) #13
  br label %38

38:                                               ; preds = %37, %33, %28
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %40 = bitcast %"class.blink::Member.271"* %39 to i64*
  store atomic i64 0, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8
  %42 = getelementptr inbounds %"class.blink::Member.273", %"class.blink::Member.273"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %42, align 8
  %44 = icmp eq %"class.blink::DataPipeBytesConsumer"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  tail call void @_ZN5blink21DataPipeBytesConsumer6CancelEv(%"class.blink::DataPipeBytesConsumer"* nonnull %43) #13
  %46 = bitcast %"class.blink::Member.273"* %41 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %48 = bitcast %"class.blink::Member.282"* %47 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  br label %49

49:                                               ; preds = %45, %38, %20, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer14GetPublicStateEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8GetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer9DebugNameEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i64 28) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #13, !range !22
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #13
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %75 = bitcast %"class.blink::Member.269"* %74 to i64*
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %144, label %78

78:                                               ; preds = %73
  %79 = inttoptr i64 %76 to i8*
  %80 = and i64 %76, -131072
  %81 = inttoptr i64 %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 4138
  %83 = load i8, i8* %82, align 2
  %84 = icmp eq i8 %83, 1
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = getelementptr inbounds i8, i8* %81, i64 4160
  br label %125

87:                                               ; preds = %78
  %88 = getelementptr inbounds i8, i8* %81, i64 4096
  %89 = bitcast i8* %88 to %"class.blink::NormalPage"*
  %90 = getelementptr inbounds i8, i8* %81, i64 4400
  %91 = bitcast i8* %90 to i8**
  %92 = bitcast i8* %90 to i64*
  %93 = load i64, i64* %92, align 16
  %94 = sub i64 %76, %93
  %95 = lshr i64 %94, 3
  %96 = lshr i64 %94, 6
  %97 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %89, i64 0, i32 2, i32 0, i32 1, i64 %96
  %98 = load atomic i8, i8* %97 acquire, align 1
  %99 = trunc i64 %95 to i32
  %100 = and i32 %99, 7
  %101 = shl i32 2, %100
  %102 = trunc i32 %101 to i8
  %103 = add i8 %102, -1
  %104 = and i8 %103, %98
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %87, %106
  %107 = phi i64 [ %108, %106 ], [ %96, %87 ]
  %108 = add i64 %107, -1
  %109 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %89, i64 0, i32 2, i32 0, i32 1, i64 %108
  %110 = load atomic i8, i8* %109 acquire, align 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %106, label %112

112:                                              ; preds = %106, %87
  %113 = phi i64 [ %96, %87 ], [ %108, %106 ]
  %114 = phi i8 [ %104, %87 ], [ %110, %106 ]
  %115 = zext i8 %114 to i32
  %116 = tail call i32 @llvm.ctlz.i32(i32 %115, i1 true) #13, !range !22
  %117 = add nsw i32 %116, -24
  %118 = shl i64 %113, 3
  %119 = or i64 %118, 7
  %120 = sext i32 %117 to i64
  %121 = sub i64 %119, %120
  %122 = shl i64 %121, 3
  %123 = load i8*, i8** %91, align 16
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  br label %125

125:                                              ; preds = %112, %85
  %126 = phi i8* [ %86, %85 ], [ %124, %112 ]
  %127 = getelementptr inbounds i8, i8* %126, i64 8
  %128 = getelementptr inbounds i8, i8* %126, i64 4
  %129 = bitcast i8* %128 to i16*
  %130 = load atomic i16, i16* %129 acquire, align 2
  %131 = lshr i16 %130, 2
  %132 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %133 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %132, i64 0, i32 0
  %134 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %133, align 8
  %135 = zext i16 %131 to i64
  %136 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %134, i64 %135
  %137 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %136, align 8
  %138 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %137, i64 0, i32 0
  %139 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %138, align 8
  %140 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %141 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %141, i64 5
  %143 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %142, align 8
  tail call void %143(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* %127, void (%"class.blink::Visitor"*, i8*)* %139) #13
  br label %144

144:                                              ; preds = %73, %125
  %145 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %146 = bitcast %"class.blink::Member.271"* %145 to i64*
  %147 = load atomic i64, i64* %146 monotonic, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %144
  %150 = inttoptr i64 %147 to i8*
  %151 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %152 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %152, i64 5
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %1, i8* nonnull %150, i8* nonnull %150, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_127SimpleFormDataBytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %155

155:                                              ; preds = %144, %149
  %156 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8
  %157 = bitcast %"class.blink::Member.273"* %156 to i64*
  %158 = load atomic i64, i64* %157 monotonic, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %166, label %160

160:                                              ; preds = %155
  %161 = inttoptr i64 %158 to i8*
  %162 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %163 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %163, i64 5
  %165 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %164, align 8
  tail call void %165(%"class.blink::Visitor"* %1, i8* nonnull %161, i8* nonnull %161, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %166

166:                                              ; preds = %155, %160
  %167 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %168 = bitcast %"class.blink::Member.282"* %167 to i64*
  %169 = load atomic i64, i64* %168 monotonic, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %177, label %171

171:                                              ; preds = %166
  %172 = inttoptr i64 %169 to i8*
  %173 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %174 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %174, i64 5
  %176 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %175, align 8
  tail call void %176(%"class.blink::Visitor"* %1, i8* nonnull %172, i8* nonnull %172, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv) #13
  br label %177

177:                                              ; preds = %166, %171
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.2"* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.2"*, %"class.WTF::Vector.2"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.2"* %1, %0
  br i1 %3, label %79, label %4, !prof !4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #13
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %54, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %34) #13
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %35) #13
  %37 = ptrtoint i8* %36 to i64
  br i1 %33, label %38, label %41

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %37, i64* %39 monotonic, align 8
  %40 = trunc i64 %35 to i32
  store i32 %40, i32* %12, align 8
  br label %54

41:                                               ; preds = %30
  %42 = load i8*, i8** %31, align 8
  %43 = icmp ne i8* %36, null
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50, !prof !2

46:                                               ; preds = %41
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %42, i64 %48, i1 false) #13
  %49 = load i8*, i8** %31, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi i8* [ %42, %41 ], [ %49, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  %52 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %37, i64* %52 monotonic, align 8
  %53 = trunc i64 %35 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %50, %38, %26, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #13
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !2

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #13
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector.2"* %0
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.2"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer8SetErrorEv(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %91, label %6

6:                                                ; preds = %1
  store i32 2, i32* %3, align 8
  %7 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %6, %12, %27
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 5
  %31 = bitcast %"class.blink::BytesConsumer::Error"* %30 to i64*
  %32 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %10, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %47, %44, %29
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %48, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %65 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 6
  %66 = bitcast %"class.blink::Member.269"* %65 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  %67 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %68 = load %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*, %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"** %67, align 8
  %69 = icmp eq %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* %68 to void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)***
  %72 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)**, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %72, i64 8
  %74 = load void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)*, void (%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"*)** %73, align 8
  call void %74(%"class.blink::(anonymous namespace)::SimpleFormDataBytesConsumer"* nonnull %68) #13
  br label %80

75:                                               ; preds = %64
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8, i32 0, i32 0
  %77 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %76, align 8
  %78 = icmp eq %"class.blink::DataPipeBytesConsumer"* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  call void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"* nonnull %77) #13
  br label %80

80:                                               ; preds = %70, %75, %79
  %81 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 7
  %82 = bitcast %"class.blink::Member.271"* %81 to i64*
  store atomic i64 0, i64* %82 monotonic, align 8
  %83 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9
  %84 = getelementptr inbounds %"class.blink::Member.282", %"class.blink::Member.282"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %84, align 8
  %86 = icmp eq %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* nonnull %85, %"class.blink::BytesConsumer::Error"* dereferenceable(8) %30) #13
  %88 = bitcast %"class.blink::Member.282"* %83 to i64*
  store atomic i64 0, i64* %88 monotonic, align 8
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 8
  %90 = bitcast %"class.blink::Member.273"* %89 to i64*
  store atomic i64 0, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %80, %1, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumer22DataPipeGetterCallbackEim(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* nocapture readonly, i32, i64) #0 align 2 {
  %4 = alloca %"class.blink::BytesConsumer::Error", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = icmp eq i32 %1, 0
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = load %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %12, align 8
  br i1 %11, label %71, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::BytesConsumer::Error"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #13
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !4

35:                                               ; preds = %26
  call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %14, %21, %36
  call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %13, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %4) #13
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #13
  br label %54

54:                                               ; preds = %38, %50, %53
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #13
  br label %70

70:                                               ; preds = %54, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  br label %72

71:                                               ; preds = %10
  tail call void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier14SignalCompleteEv(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %13) #13
  br label %72

72:                                               ; preds = %3, %71, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare void @_ZN5blink21DataPipeBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::DataPipeBytesConsumer"*, %"class.blink::BytesConsumer::Client"*) unnamed_addr #2

declare i32 @_ZN5blink21DataPipeBytesConsumer9BeginReadEPPKcPm(%"class.blink::DataPipeBytesConsumer"*, i8**, i64*) unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumer6CancelEv(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::BytesConsumer::Error"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN7network5mojom5blink19DataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEFvimEE7RunOnceEPNS0_13BindStateBaseEim(%"class.base::internal::BindStateBase"* nocapture readonly, i32, i64) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"**
  %6 = load %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"** %5, align 8
  %7 = icmp eq %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %10 = bitcast %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %6 to i8*
  %11 = bitcast %"class.base::internal::BindStateBase"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = bitcast i8* %16 to %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %8
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)**
  %26 = load void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)*, void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)** %25, align 8
  br label %29

27:                                               ; preds = %8
  %28 = inttoptr i64 %12 to void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)*
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi void (%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, i32, i64)* [ %26, %20 ], [ %28, %27 ]
  tail call void %30(%"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %17, i32 %1, i64 %2) #13
  br label %31

31:                                               ; preds = %3, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !4

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #9 {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"**
  %6 = load %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"** %5, align 8
  %7 = icmp eq %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1), i8* nocapture) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"**
  %4 = load %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"*, %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer", %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* %4, i64 -1, i32 9
  %20 = bitcast %"class.blink::Member.282"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"* null, %"class.blink::(anonymous namespace)::DataPipeAndDataBytesConsumer"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !4

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier14SignalCompleteEv(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*) local_unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE(%"class.blink::DataPipeBytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::ScopedHandleBase.276"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"**) unnamed_addr #2

declare i32 @_ZN5blink21DataPipeBytesConsumer7EndReadEm(%"class.blink::DataPipeBytesConsumer"*, i64) unnamed_addr #2

declare void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_127SimpleFormDataBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer"*
  tail call void @_ZNK5blink21DataPipeBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink21DataPipeBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer::CompletionNotifier"*
  tail call void @_ZNK5blink21DataPipeBytesConsumer18CompletionNotifier5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink21DataPipeBytesConsumer18CompletionNotifier5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::Visitor"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerEEENS_14WeakPersistentIT_EEPS4_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_128DataPipeAndDataBytesConsumerEEENS_14WeakPersistentIT_EEPS4_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS1_14WeakPersistentIS3_EEEFvimEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS1_14WeakPersistentIS3_EEEFvimEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{!15, !17, !12}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_128DataPipeAndDataBytesConsumerEFvimEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!21 = distinct !{!21, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!22 = !{i32 24, i32 33}
