; ModuleID = '../../third_party/webrtc/modules/audio_processing/transient/transient_detector.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/transient/transient_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::TransientDetector" = type <{ i64, %"class.std::__1::unique_ptr", i64, [8 x %"class.std::__1::unique_ptr.8"], %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", [8 x float], [8 x float], %"class.std::__1::deque", i32, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::WPDTree"* }
%"class.webrtc::WPDTree" = type { i64, i32, i32, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr.3"* }
%"class.std::__1::unique_ptr.3" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.webrtc::MovingMoments"* }
%"class.webrtc::MovingMoments" = type { i64, %"class.std::__1::queue", float, float }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__split_buffer" = type { float**, float**, float**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float** }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.webrtc::WPDNode" = type { %"class.std::__1::unique_ptr.22", i64, %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.webrtc::FIRFilter"* }
%"class.webrtc::FIRFilter" = type opaque
%"struct.std::__1::__split_buffer.35" = type { float**, float**, float**, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPfRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

@_ZN6webrtcL32kDaubechies8HighPassCoefficientsE = internal constant [16 x float] [float 0xBFABDC64A0000000, float 0x3FD40616A0000000, float 0xBFE59EC460000000, float 0x3FE2BB39C0000000, float 0x3F90358140000000, float 0xBFD22D4F80000000, float 0xBF3EF6F9C0000000, float 0x3FC07ACBC0000000, float 0x3F91C94200000000, float 0xBFA692BC60000000, float 0xBF8CA215C0000000, float 0x3F81E978E0000000, float 0x3F73F2EF60000000, float 0xBF39AC5020000000, float 0xBF46221480000000, float 0xBF1ECBBBC0000000], align 16
@_ZN6webrtcL31kDaubechies8LowPassCoefficientsE = internal constant [16 x float] [float 0xBF1ECBBBC0000000, float 0x3F46221480000000, float 0xBF39AC5020000000, float 0xBF73F2EF60000000, float 0x3F81E978E0000000, float 0x3F8CA215C0000000, float 0xBFA692BC60000000, float 0xBF91C94200000000, float 0x3FC07ACBC0000000, float 0x3F3EF6F9C0000000, float 0xBFD22D4F80000000, float 0xBF90358140000000, float 0x3FE2BB39C0000000, float 0x3FE59EC460000000, float 0x3FD40616A0000000, float 0x3FABDC64A0000000], align 16

@_ZN6webrtc17TransientDetectorC1Ei = hidden unnamed_addr alias void (%"class.webrtc::TransientDetector"*, i32), void (%"class.webrtc::TransientDetector"*, i32)* @_ZN6webrtc17TransientDetectorC2Ei
@_ZN6webrtc17TransientDetectorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::TransientDetector"*), void (%"class.webrtc::TransientDetector"*)* @_ZN6webrtc17TransientDetectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17TransientDetectorC2Ei(%"class.webrtc::TransientDetector"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 0
  %4 = sdiv i32 %1, 100
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 0
  %9 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 9
  %13 = bitcast %"class.std::__1::unique_ptr.8"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 192, i1 false)
  store i32 3, i32* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 10
  store float 1.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 11
  store i8 0, i8* %15, align 8
  %16 = mul nsw i32 %1, 30
  %17 = sdiv i32 %16, 1000
  %18 = and i64 %5, -8
  store i64 %18, i64* %3, align 8
  %19 = lshr i64 %5, 3
  %20 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = tail call i8* @_Znwm(i64 24) #10
  %22 = bitcast i8* %21 to %"class.webrtc::WPDTree"*
  tail call void @_ZN6webrtc7WPDTreeC1EmPKfS2_mi(%"class.webrtc::WPDTree"* nonnull %22, i64 %18, float* getelementptr inbounds ([16 x float], [16 x float]* @_ZN6webrtcL32kDaubechies8HighPassCoefficientsE, i64 0, i64 0), float* getelementptr inbounds ([16 x float], [16 x float]* @_ZN6webrtcL31kDaubechies8LowPassCoefficientsE, i64 0, i64 0), i64 16, i32 3) #11
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.webrtc::WPDTree"*, %"class.webrtc::WPDTree"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %21, i8** %25, align 8
  %26 = icmp eq %"class.webrtc::WPDTree"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %2
  tail call void @_ZN6webrtc7WPDTreeD1Ev(%"class.webrtc::WPDTree"* nonnull %24) #11
  %28 = bitcast %"class.webrtc::WPDTree"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %2, %27
  %30 = sext i32 %17 to i64
  %31 = lshr i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 64) #10
  %33 = bitcast i8* %32 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %33, i64 %31) #11
  %34 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %34, align 8
  %36 = bitcast %"class.webrtc::MovingMoments"** %34 to i8**
  store i8* %32, i8** %36, align 8
  %37 = icmp eq %"class.webrtc::MovingMoments"* %35, null
  br i1 %37, label %76, label %74

38:                                               ; preds = %229
  %39 = bitcast float* %237 to i8*
  tail call void @_ZdaPv(i8* %39) #10
  %40 = load i64, i64* %20, align 8
  %41 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %40, i64 4)
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 -1, i64 %43
  br label %45

45:                                               ; preds = %229, %38
  %46 = phi i64 [ %234, %229 ], [ %44, %38 ]
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %10, i64 0, i32 0, i32 0, i32 0
  %49 = load float*, float** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.22"* %10 to i8**
  store i8* %47, i8** %50, align 8
  %51 = icmp eq float* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = bitcast float* %49 to i8*
  tail call void @_ZdaPv(i8* %53) #10
  br label %54

54:                                               ; preds = %45, %52
  %55 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %56 = bitcast float*** %55 to i64*
  %57 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %58 = bitcast float*** %57 to i64*
  %59 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %60 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %56, align 8
  %62 = load i64, i64* %58, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 0
  %65 = shl i64 %63, 7
  %66 = add i64 %65, -1
  %67 = select i1 %64, i64 0, i64 %66
  %68 = load i64, i64* %59, align 8
  %69 = load i64, i64* %60, align 8
  %70 = add i64 %69, %68
  %71 = icmp eq i64 %67, %70
  %72 = inttoptr i64 %62 to float**
  %73 = inttoptr i64 %61 to float**
  br i1 %71, label %83, label %89

74:                                               ; preds = %29
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %35) #11
  %75 = bitcast %"class.webrtc::MovingMoments"* %35 to i8*
  tail call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %29, %74
  %77 = tail call i8* @_Znwm(i64 64) #10
  %78 = bitcast i8* %77 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %78, i64 %31) #11
  %79 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 1, i32 0, i32 0, i32 0
  %80 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %79, align 8
  %81 = bitcast %"class.webrtc::MovingMoments"** %79 to i8**
  store i8* %77, i8** %81, align 8
  %82 = icmp eq %"class.webrtc::MovingMoments"* %80, null
  br i1 %82, label %175, label %173

83:                                               ; preds = %54
  tail call void @_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv(%"class.std::__1::deque"* %11) #11
  %84 = load i64, i64* %60, align 8
  %85 = load i64, i64* %59, align 8
  %86 = load float**, float*** %57, align 8
  %87 = load float**, float*** %55, align 8
  %88 = add i64 %85, %84
  br label %89

89:                                               ; preds = %83, %54
  %90 = phi i64 [ %88, %83 ], [ %70, %54 ]
  %91 = phi float** [ %87, %83 ], [ %73, %54 ]
  %92 = phi float** [ %86, %83 ], [ %72, %54 ]
  %93 = icmp eq float** %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = lshr i64 %90, 10
  %96 = getelementptr inbounds float*, float** %92, i64 %95
  %97 = load float*, float** %96, align 8
  %98 = and i64 %90, 1023
  %99 = getelementptr inbounds float, float* %97, i64 %98
  %100 = bitcast float* %99 to i32*
  br label %101

101:                                              ; preds = %89, %94
  %102 = phi i32* [ %100, %94 ], [ null, %89 ]
  store i32 0, i32* %102, align 4
  %103 = load i64, i64* %60, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %60, align 8
  %105 = load i64, i64* %56, align 8
  %106 = load i64, i64* %58, align 8
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  %109 = shl i64 %107, 7
  %110 = add i64 %109, -1
  %111 = select i1 %108, i64 0, i64 %110
  %112 = load i64, i64* %59, align 8
  %113 = add i64 %104, %112
  %114 = icmp eq i64 %111, %113
  %115 = inttoptr i64 %106 to float**
  %116 = inttoptr i64 %105 to float**
  br i1 %114, label %117, label %123

117:                                              ; preds = %101
  tail call void @_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv(%"class.std::__1::deque"* %11) #11
  %118 = load i64, i64* %60, align 8
  %119 = load i64, i64* %59, align 8
  %120 = load float**, float*** %57, align 8
  %121 = load float**, float*** %55, align 8
  %122 = add i64 %119, %118
  br label %123

123:                                              ; preds = %117, %101
  %124 = phi i64 [ %122, %117 ], [ %113, %101 ]
  %125 = phi float** [ %121, %117 ], [ %116, %101 ]
  %126 = phi float** [ %120, %117 ], [ %115, %101 ]
  %127 = icmp eq float** %125, %126
  br i1 %127, label %135, label %128

128:                                              ; preds = %123
  %129 = lshr i64 %124, 10
  %130 = getelementptr inbounds float*, float** %126, i64 %129
  %131 = load float*, float** %130, align 8
  %132 = and i64 %124, 1023
  %133 = getelementptr inbounds float, float* %131, i64 %132
  %134 = bitcast float* %133 to i32*
  br label %135

135:                                              ; preds = %128, %123
  %136 = phi i32* [ %134, %128 ], [ null, %123 ]
  store i32 0, i32* %136, align 4
  %137 = load i64, i64* %60, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %60, align 8
  %139 = load i64, i64* %56, align 8
  %140 = load i64, i64* %58, align 8
  %141 = sub i64 %139, %140
  %142 = icmp eq i64 %141, 0
  %143 = shl i64 %141, 7
  %144 = add i64 %143, -1
  %145 = select i1 %142, i64 0, i64 %144
  %146 = load i64, i64* %59, align 8
  %147 = add i64 %138, %146
  %148 = icmp eq i64 %145, %147
  %149 = inttoptr i64 %140 to float**
  %150 = inttoptr i64 %139 to float**
  br i1 %148, label %151, label %157

151:                                              ; preds = %135
  tail call void @_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv(%"class.std::__1::deque"* %11) #11
  %152 = load i64, i64* %60, align 8
  %153 = load i64, i64* %59, align 8
  %154 = load float**, float*** %57, align 8
  %155 = load float**, float*** %55, align 8
  %156 = add i64 %153, %152
  br label %157

157:                                              ; preds = %151, %135
  %158 = phi i64 [ %156, %151 ], [ %147, %135 ]
  %159 = phi float** [ %155, %151 ], [ %150, %135 ]
  %160 = phi float** [ %154, %151 ], [ %149, %135 ]
  %161 = icmp eq float** %159, %160
  br i1 %161, label %169, label %162

162:                                              ; preds = %157
  %163 = lshr i64 %158, 10
  %164 = getelementptr inbounds float*, float** %160, i64 %163
  %165 = load float*, float** %164, align 8
  %166 = and i64 %158, 1023
  %167 = getelementptr inbounds float, float* %165, i64 %166
  %168 = bitcast float* %167 to i32*
  br label %169

169:                                              ; preds = %162, %157
  %170 = phi i32* [ %168, %162 ], [ null, %157 ]
  store i32 0, i32* %170, align 4
  %171 = load i64, i64* %60, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %60, align 8
  ret void

173:                                              ; preds = %76
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %80) #11
  %174 = bitcast %"class.webrtc::MovingMoments"* %80 to i8*
  tail call void @_ZdlPv(i8* %174) #10
  br label %175

175:                                              ; preds = %173, %76
  %176 = tail call i8* @_Znwm(i64 64) #10
  %177 = bitcast i8* %176 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %177, i64 %31) #11
  %178 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 2, i32 0, i32 0, i32 0
  %179 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %178, align 8
  %180 = bitcast %"class.webrtc::MovingMoments"** %178 to i8**
  store i8* %176, i8** %180, align 8
  %181 = icmp eq %"class.webrtc::MovingMoments"* %179, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %175
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %179) #11
  %183 = bitcast %"class.webrtc::MovingMoments"* %179 to i8*
  tail call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %175
  %185 = tail call i8* @_Znwm(i64 64) #10
  %186 = bitcast i8* %185 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %186, i64 %31) #11
  %187 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 3, i32 0, i32 0, i32 0
  %188 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %187, align 8
  %189 = bitcast %"class.webrtc::MovingMoments"** %187 to i8**
  store i8* %185, i8** %189, align 8
  %190 = icmp eq %"class.webrtc::MovingMoments"* %188, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %184
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %188) #11
  %192 = bitcast %"class.webrtc::MovingMoments"* %188 to i8*
  tail call void @_ZdlPv(i8* %192) #10
  br label %193

193:                                              ; preds = %191, %184
  %194 = tail call i8* @_Znwm(i64 64) #10
  %195 = bitcast i8* %194 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %195, i64 %31) #11
  %196 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 4, i32 0, i32 0, i32 0
  %197 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %196, align 8
  %198 = bitcast %"class.webrtc::MovingMoments"** %196 to i8**
  store i8* %194, i8** %198, align 8
  %199 = icmp eq %"class.webrtc::MovingMoments"* %197, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %193
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %197) #11
  %201 = bitcast %"class.webrtc::MovingMoments"* %197 to i8*
  tail call void @_ZdlPv(i8* %201) #10
  br label %202

202:                                              ; preds = %200, %193
  %203 = tail call i8* @_Znwm(i64 64) #10
  %204 = bitcast i8* %203 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %204, i64 %31) #11
  %205 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 5, i32 0, i32 0, i32 0
  %206 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %205, align 8
  %207 = bitcast %"class.webrtc::MovingMoments"** %205 to i8**
  store i8* %203, i8** %207, align 8
  %208 = icmp eq %"class.webrtc::MovingMoments"* %206, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %202
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %206) #11
  %210 = bitcast %"class.webrtc::MovingMoments"* %206 to i8*
  tail call void @_ZdlPv(i8* %210) #10
  br label %211

211:                                              ; preds = %209, %202
  %212 = tail call i8* @_Znwm(i64 64) #10
  %213 = bitcast i8* %212 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %213, i64 %31) #11
  %214 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 6, i32 0, i32 0, i32 0
  %215 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %214, align 8
  %216 = bitcast %"class.webrtc::MovingMoments"** %214 to i8**
  store i8* %212, i8** %216, align 8
  %217 = icmp eq %"class.webrtc::MovingMoments"* %215, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %211
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %215) #11
  %219 = bitcast %"class.webrtc::MovingMoments"* %215 to i8*
  tail call void @_ZdlPv(i8* %219) #10
  br label %220

220:                                              ; preds = %218, %211
  %221 = tail call i8* @_Znwm(i64 64) #10
  %222 = bitcast i8* %221 to %"class.webrtc::MovingMoments"*
  tail call void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"* nonnull %222, i64 %31) #11
  %223 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 7, i32 0, i32 0, i32 0
  %224 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %223, align 8
  %225 = bitcast %"class.webrtc::MovingMoments"** %223 to i8**
  store i8* %221, i8** %225, align 8
  %226 = icmp eq %"class.webrtc::MovingMoments"* %224, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %220
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %224) #11
  %228 = bitcast %"class.webrtc::MovingMoments"* %224 to i8*
  tail call void @_ZdlPv(i8* %228) #10
  br label %229

229:                                              ; preds = %227, %220
  %230 = load i64, i64* %20, align 8
  %231 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %230, i64 4)
  %232 = extractvalue { i64, i1 } %231, 1
  %233 = extractvalue { i64, i1 } %231, 0
  %234 = select i1 %232, i64 -1, i64 %233
  %235 = tail call i8* @_Znam(i64 %234) #10
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %9, i64 0, i32 0, i32 0, i32 0
  %237 = load float*, float** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.22"* %9 to i8**
  store i8* %235, i8** %238, align 8
  %239 = icmp eq float* %237, null
  br i1 %239, label %45, label %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN6webrtc7WPDTreeC1EmPKfS2_mi(%"class.webrtc::WPDTree"*, i64, float*, float*, i64, i32) unnamed_addr #3

declare void @_ZN6webrtc13MovingMomentsC1Em(%"class.webrtc::MovingMoments"*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17TransientDetectorD2Ev(%"class.webrtc::TransientDetector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %3 = load float**, float*** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds float*, float** %3, i64 %6
  %8 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %9 = load float**, float*** %8, align 8
  %10 = icmp eq float** %9, %3
  %11 = ptrtoint float** %9 to i64
  %12 = ptrtoint float** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load float*, float** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds float, float* %16, i64 %17
  %19 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds float*, float** %3, i64 %22
  %24 = load float*, float** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds float, float* %24, i64 %25
  %27 = icmp eq float* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast float*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi float* [ %50, %47 ], [ %18, %15 ]
  %36 = phi float** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds float, float* %35, i64 1
  %38 = ptrtoint float* %37 to i64
  %39 = bitcast float** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds float*, float** %36, i64 1
  %45 = bitcast float** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi float** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to float*
  %51 = icmp eq float* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi float** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast float** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #10
  %56 = load float**, float*** %2, align 8
  %57 = getelementptr inbounds float*, float** %56, i64 1
  store float** %57, float*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint float** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to float**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi float** [ %9, %28 ], [ %64, %63 ]
  %67 = phi float** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq float** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi float** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast float** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #10
  %78 = getelementptr inbounds float*, float** %75, i64 1
  %79 = icmp eq float** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load float**, float*** %2, align 8
  %82 = load float**, float*** %8, align 8
  %83 = icmp eq float** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint float** %81 to i64
  %86 = getelementptr float*, float** %82, i64 -1
  %87 = ptrtoint float** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr float*, float** %82, i64 %90
  store float** %91, float*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %94 = load float**, float*** %93, align 8
  %95 = icmp eq float** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast float** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %100 = load float*, float** %99, align 8
  store float* null, float** %99, align 8
  %101 = icmp eq float* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = bitcast float* %100 to i8*
  tail call void @_ZdaPv(i8* %103) #10
  br label %104

104:                                              ; preds = %98, %102
  %105 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %106 = load float*, float** %105, align 8
  store float* null, float** %105, align 8
  %107 = icmp eq float* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = bitcast float* %106 to i8*
  tail call void @_ZdaPv(i8* %109) #10
  br label %110

110:                                              ; preds = %104, %108
  %111 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 7, i32 0, i32 0, i32 0
  %112 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %111, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %111, align 8
  %113 = icmp eq %"class.webrtc::MovingMoments"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %112) #11
  %115 = bitcast %"class.webrtc::MovingMoments"* %112 to i8*
  tail call void @_ZdlPv(i8* %115) #10
  br label %116

116:                                              ; preds = %110, %114
  %117 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 6, i32 0, i32 0, i32 0
  %118 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %117, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %117, align 8
  %119 = icmp eq %"class.webrtc::MovingMoments"* %118, null
  br i1 %119, label %125, label %123

120:                                              ; preds = %161
  tail call void @_ZN6webrtc7WPDTreeD1Ev(%"class.webrtc::WPDTree"* nonnull %163) #11
  %121 = bitcast %"class.webrtc::WPDTree"* %163 to i8*
  tail call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %161, %120
  ret void

123:                                              ; preds = %116
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %118) #11
  %124 = bitcast %"class.webrtc::MovingMoments"* %118 to i8*
  tail call void @_ZdlPv(i8* %124) #10
  br label %125

125:                                              ; preds = %123, %116
  %126 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 5, i32 0, i32 0, i32 0
  %127 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %126, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %126, align 8
  %128 = icmp eq %"class.webrtc::MovingMoments"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %127) #11
  %130 = bitcast %"class.webrtc::MovingMoments"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #10
  br label %131

131:                                              ; preds = %129, %125
  %132 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 4, i32 0, i32 0, i32 0
  %133 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %132, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %132, align 8
  %134 = icmp eq %"class.webrtc::MovingMoments"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %133) #11
  %136 = bitcast %"class.webrtc::MovingMoments"* %133 to i8*
  tail call void @_ZdlPv(i8* %136) #10
  br label %137

137:                                              ; preds = %135, %131
  %138 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 3, i32 0, i32 0, i32 0
  %139 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %138, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %138, align 8
  %140 = icmp eq %"class.webrtc::MovingMoments"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %139) #11
  %142 = bitcast %"class.webrtc::MovingMoments"* %139 to i8*
  tail call void @_ZdlPv(i8* %142) #10
  br label %143

143:                                              ; preds = %141, %137
  %144 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 2, i32 0, i32 0, i32 0
  %145 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %144, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %144, align 8
  %146 = icmp eq %"class.webrtc::MovingMoments"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %145) #11
  %148 = bitcast %"class.webrtc::MovingMoments"* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #10
  br label %149

149:                                              ; preds = %147, %143
  %150 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 1, i32 0, i32 0, i32 0
  %151 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %150, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %150, align 8
  %152 = icmp eq %"class.webrtc::MovingMoments"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %151) #11
  %154 = bitcast %"class.webrtc::MovingMoments"* %151 to i8*
  tail call void @_ZdlPv(i8* %154) #10
  br label %155

155:                                              ; preds = %153, %149
  %156 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %156, align 8
  store %"class.webrtc::MovingMoments"* null, %"class.webrtc::MovingMoments"** %156, align 8
  %158 = icmp eq %"class.webrtc::MovingMoments"* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  tail call void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"* nonnull %157) #11
  %160 = bitcast %"class.webrtc::MovingMoments"* %157 to i8*
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %159, %155
  %162 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %163 = load %"class.webrtc::WPDTree"*, %"class.webrtc::WPDTree"** %162, align 8
  store %"class.webrtc::WPDTree"* null, %"class.webrtc::WPDTree"** %162, align 8
  %164 = icmp eq %"class.webrtc::WPDTree"* %163, null
  br i1 %164, label %122, label %120
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN6webrtc17TransientDetector6DetectEPKfmS2_m(%"class.webrtc::TransientDetector"*, float*, i64, float* readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::WPDTree"*, %"class.webrtc::WPDTree"** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call i32 @_ZN6webrtc7WPDTree6UpdateEPKfm(%"class.webrtc::WPDTree"* %7, float* %1, i64 %9) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %316

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %94

16:                                               ; preds = %146
  %17 = uitofp i64 %118 to float
  %18 = fdiv float %147, %17
  %19 = icmp ne float* %3, null
  %20 = icmp ugt i64 %4, 1
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %87

22:                                               ; preds = %16
  %23 = add i64 %4, -1
  %24 = add i64 %4, -2
  %25 = and i64 %23, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = sub i64 %23, %25
  br label %48

29:                                               ; preds = %48, %22
  %30 = phi float [ undef, %22 ], [ %70, %48 ]
  %31 = phi i64 [ 1, %22 ], [ %71, %48 ]
  %32 = phi float [ 0.000000e+00, %22 ], [ %70, %48 ]
  %33 = icmp eq i64 %25, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %42, %34 ], [ %31, %29 ]
  %36 = phi float [ %41, %34 ], [ %32, %29 ]
  %37 = phi i64 [ %43, %34 ], [ %25, %29 ]
  %38 = getelementptr inbounds float, float* %3, i64 %35
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, %39
  %41 = fadd float %36, %40
  %42 = add nuw i64 %35, 1
  %43 = add i64 %37, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %34, !llvm.loop !2

45:                                               ; preds = %34, %29
  %46 = phi float [ %30, %29 ], [ %41, %34 ]
  %47 = fcmp oeq float %46, 0.000000e+00
  br i1 %47, label %87, label %74

48:                                               ; preds = %48, %27
  %49 = phi i64 [ 1, %27 ], [ %71, %48 ]
  %50 = phi float [ 0.000000e+00, %27 ], [ %70, %48 ]
  %51 = phi i64 [ %28, %27 ], [ %72, %48 ]
  %52 = getelementptr inbounds float, float* %3, i64 %49
  %53 = load float, float* %52, align 4
  %54 = fmul float %53, %53
  %55 = fadd float %50, %54
  %56 = add nuw nsw i64 %49, 1
  %57 = getelementptr inbounds float, float* %3, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fmul float %58, %58
  %60 = fadd float %55, %59
  %61 = add nuw nsw i64 %49, 2
  %62 = getelementptr inbounds float, float* %3, i64 %61
  %63 = load float, float* %62, align 4
  %64 = fmul float %63, %63
  %65 = fadd float %60, %64
  %66 = add nuw i64 %49, 3
  %67 = getelementptr inbounds float, float* %3, i64 %66
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %68
  %70 = fadd float %65, %69
  %71 = add nuw i64 %49, 4
  %72 = add i64 %51, -4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %29, label %48

74:                                               ; preds = %45
  %75 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 10
  %76 = load float, float* %75, align 4
  %77 = fdiv float %46, %76
  %78 = fsub float 0x3FC99999A0000000, %77
  %79 = fmul float %78, 2.000000e+01
  %80 = tail call float @expf(float %79) #11
  %81 = fadd float %80, 1.000000e+00
  %82 = fdiv float 1.000000e+00, %81
  %83 = load float, float* %75, align 4
  %84 = fmul float %83, 0x3FEFAE1480000000
  %85 = fmul float %46, 0x3F847AE000000000
  %86 = fadd float %85, %84
  store float %86, float* %75, align 4
  br label %87

87:                                               ; preds = %16, %45, %74
  %88 = phi i8 [ 1, %74 ], [ 0, %16 ], [ 0, %45 ]
  %89 = phi float [ %82, %74 ], [ 1.000000e+00, %16 ], [ 1.000000e+00, %45 ]
  %90 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 11
  store i8 %88, i8* %90, align 8
  %91 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 9
  %92 = load i32, i32* %91, align 8
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %190, label %192

94:                                               ; preds = %146, %12
  %95 = phi i64 [ 0, %12 ], [ %157, %146 ]
  %96 = phi float [ 0.000000e+00, %12 ], [ %147, %146 ]
  %97 = load %"class.webrtc::WPDTree"*, %"class.webrtc::WPDTree"** %6, align 8
  %98 = trunc i64 %95 to i32
  %99 = tail call %"class.webrtc::WPDNode"* @_ZN6webrtc7WPDTree6NodeAtEii(%"class.webrtc::WPDTree"* %97, i32 3, i32 %98) #11
  %100 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 3, i64 %95, i32 0, i32 0, i32 0
  %101 = load %"class.webrtc::MovingMoments"*, %"class.webrtc::MovingMoments"** %100, align 8
  %102 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load float*, float** %102, align 8
  %104 = load i64, i64* %13, align 8
  %105 = load float*, float** %14, align 8
  %106 = load float*, float** %15, align 8
  tail call void @_ZN6webrtc13MovingMoments16CalculateMomentsEPKfmPfS3_(%"class.webrtc::MovingMoments"* %101, float* %103, i64 %104, float* %105, float* %106) #11
  %107 = load float*, float** %102, align 8
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 6, i64 %95
  %110 = load float, float* %109, align 4
  %111 = fsub float %108, %110
  %112 = fmul float %111, %111
  %113 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 7, i64 %95
  %114 = load float, float* %113, align 4
  %115 = fadd float %114, 0x3810000000000000
  %116 = fdiv float %112, %115
  %117 = fadd float %96, %116
  %118 = load i64, i64* %13, align 8
  %119 = icmp ugt i64 %118, 1
  %120 = load float*, float** %14, align 8
  %121 = load float*, float** %15, align 8
  br i1 %119, label %122, label %146

122:                                              ; preds = %94
  %123 = add i64 %118, -1
  %124 = and i64 %123, 1
  %125 = icmp eq i64 %118, 2
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = sub i64 %123, %124
  br label %159

128:                                              ; preds = %159, %122
  %129 = phi float [ undef, %122 ], [ %186, %159 ]
  %130 = phi i64 [ 1, %122 ], [ %187, %159 ]
  %131 = phi float [ %117, %122 ], [ %186, %159 ]
  %132 = icmp eq i64 %124, 0
  br i1 %132, label %146, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds float, float* %107, i64 %130
  %135 = load float, float* %134, align 4
  %136 = add i64 %130, -1
  %137 = getelementptr inbounds float, float* %120, i64 %136
  %138 = load float, float* %137, align 4
  %139 = fsub float %135, %138
  %140 = fmul float %139, %139
  %141 = getelementptr inbounds float, float* %121, i64 %136
  %142 = load float, float* %141, align 4
  %143 = fadd float %142, 0x3810000000000000
  %144 = fdiv float %140, %143
  %145 = fadd float %131, %144
  br label %146

146:                                              ; preds = %133, %128, %94
  %147 = phi float [ %117, %94 ], [ %129, %128 ], [ %145, %133 ]
  %148 = add i64 %118, -1
  %149 = getelementptr inbounds float, float* %120, i64 %148
  %150 = bitcast float* %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = bitcast float* %109 to i32*
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds float, float* %121, i64 %148
  %154 = bitcast float* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = bitcast float* %113 to i32*
  store i32 %155, i32* %156, align 4
  %157 = add nuw nsw i64 %95, 1
  %158 = icmp eq i64 %157, 8
  br i1 %158, label %16, label %94

159:                                              ; preds = %159, %126
  %160 = phi i64 [ 1, %126 ], [ %187, %159 ]
  %161 = phi float [ %117, %126 ], [ %186, %159 ]
  %162 = phi i64 [ %127, %126 ], [ %188, %159 ]
  %163 = getelementptr inbounds float, float* %107, i64 %160
  %164 = load float, float* %163, align 4
  %165 = add nsw i64 %160, -1
  %166 = getelementptr inbounds float, float* %120, i64 %165
  %167 = load float, float* %166, align 4
  %168 = fsub float %164, %167
  %169 = fmul float %168, %168
  %170 = getelementptr inbounds float, float* %121, i64 %165
  %171 = load float, float* %170, align 4
  %172 = fadd float %171, 0x3810000000000000
  %173 = fdiv float %169, %172
  %174 = fadd float %161, %173
  %175 = add nuw i64 %160, 1
  %176 = getelementptr inbounds float, float* %107, i64 %175
  %177 = load float, float* %176, align 4
  %178 = getelementptr inbounds float, float* %120, i64 %160
  %179 = load float, float* %178, align 4
  %180 = fsub float %177, %179
  %181 = fmul float %180, %180
  %182 = getelementptr inbounds float, float* %121, i64 %160
  %183 = load float, float* %182, align 4
  %184 = fadd float %183, 0x3810000000000000
  %185 = fdiv float %181, %184
  %186 = fadd float %174, %185
  %187 = add nuw i64 %160, 2
  %188 = add i64 %162, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %128, label %159

190:                                              ; preds = %87
  %191 = add nsw i32 %92, -1
  store i32 %191, i32* %91, align 8
  br label %195

192:                                              ; preds = %87
  %193 = fmul float %18, %89
  %194 = fcmp ult float %193, 1.600000e+01
  br i1 %194, label %195, label %204

195:                                              ; preds = %190, %192
  %196 = phi float [ 0.000000e+00, %190 ], [ %193, %192 ]
  %197 = fmul float %196, 0x3FC921FB60000000
  %198 = fadd float %197, 0x400921FB60000000
  %199 = tail call float @cosf(float %198) #11
  %200 = fadd float %199, 1.000000e+00
  %201 = fmul float %200, 5.000000e-01
  %202 = fmul float %201, %201
  %203 = bitcast float %202 to i32
  br label %204

204:                                              ; preds = %192, %195
  %205 = phi i32 [ %203, %195 ], [ 1065353216, %192 ]
  %206 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8
  %207 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %208 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %209 = bitcast i64* %207 to <2 x i64>*
  %210 = load <2 x i64>, <2 x i64>* %209, align 8
  %211 = add <2 x i64> %210, <i64 1, i64 -1>
  %212 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %211, <2 x i64>* %212, align 8
  %213 = extractelement <2 x i64> %211, i32 0
  %214 = icmp ult i64 %213, 2048
  %215 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  br i1 %214, label %216, label %220

216:                                              ; preds = %204
  %217 = bitcast float*** %215 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = extractelement <2 x i64> %211, i32 1
  br label %230

220:                                              ; preds = %204
  %221 = bitcast float*** %215 to i8***
  %222 = load i8**, i8*** %221, align 8
  %223 = load i8*, i8** %222, align 8
  tail call void @_ZdlPv(i8* %223) #10
  %224 = load float**, float*** %215, align 8
  %225 = getelementptr inbounds float*, float** %224, i64 1
  store float** %225, float*** %215, align 8
  %226 = load i64, i64* %207, align 8
  %227 = add i64 %226, -1024
  store i64 %227, i64* %207, align 8
  %228 = ptrtoint float** %225 to i64
  %229 = load i64, i64* %208, align 8
  br label %230

230:                                              ; preds = %216, %220
  %231 = phi i64 [ %219, %216 ], [ %229, %220 ]
  %232 = phi i64 [ %213, %216 ], [ %227, %220 ]
  %233 = phi i64 [ %218, %216 ], [ %228, %220 ]
  %234 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %235 = bitcast float*** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %238 = sub i64 %236, %233
  %239 = icmp eq i64 %238, 0
  %240 = shl i64 %238, 7
  %241 = add i64 %240, -1
  %242 = select i1 %239, i64 0, i64 %241
  %243 = add i64 %231, %232
  %244 = icmp eq i64 %242, %243
  %245 = inttoptr i64 %233 to float**
  %246 = inttoptr i64 %236 to float**
  br i1 %244, label %247, label %253

247:                                              ; preds = %230
  tail call void @_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv(%"class.std::__1::deque"* %206) #11
  %248 = load i64, i64* %208, align 8
  %249 = load i64, i64* %207, align 8
  %250 = load float**, float*** %237, align 8
  %251 = load float**, float*** %234, align 8
  %252 = add i64 %249, %248
  br label %253

253:                                              ; preds = %247, %230
  %254 = phi i64 [ %252, %247 ], [ %243, %230 ]
  %255 = phi float** [ %251, %247 ], [ %246, %230 ]
  %256 = phi float** [ %250, %247 ], [ %245, %230 ]
  %257 = icmp eq float** %255, %256
  br i1 %257, label %265, label %258

258:                                              ; preds = %253
  %259 = lshr i64 %254, 10
  %260 = getelementptr inbounds float*, float** %256, i64 %259
  %261 = load float*, float** %260, align 8
  %262 = and i64 %254, 1023
  %263 = getelementptr inbounds float, float* %261, i64 %262
  %264 = bitcast float* %263 to i32*
  br label %265

265:                                              ; preds = %253, %258
  %266 = phi i32* [ %264, %258 ], [ null, %253 ]
  store i32 %205, i32* %266, align 4
  %267 = load i64, i64* %208, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %208, align 8
  %269 = load float**, float*** %237, align 8
  %270 = load i64, i64* %207, align 8
  %271 = lshr i64 %270, 10
  %272 = getelementptr inbounds float*, float** %269, i64 %271
  %273 = load float**, float*** %234, align 8
  %274 = icmp eq float** %273, %269
  br i1 %274, label %312, label %275

275:                                              ; preds = %265
  %276 = load float*, float** %272, align 8
  %277 = and i64 %270, 1023
  %278 = getelementptr inbounds float, float* %276, i64 %277
  %279 = add i64 %270, %268
  %280 = lshr i64 %279, 10
  %281 = getelementptr inbounds float*, float** %269, i64 %280
  %282 = load float*, float** %281, align 8
  %283 = and i64 %279, 1023
  %284 = getelementptr inbounds float, float* %282, i64 %283
  %285 = ptrtoint float* %278 to i64
  %286 = icmp eq float* %278, %284
  br i1 %286, label %312, label %287

287:                                              ; preds = %275, %306
  %288 = phi i64 [ %311, %306 ], [ %285, %275 ]
  %289 = phi float* [ %304, %306 ], [ %278, %275 ]
  %290 = phi float** [ %303, %306 ], [ %272, %275 ]
  %291 = getelementptr inbounds float, float* %289, i64 1
  %292 = ptrtoint float* %291 to i64
  %293 = bitcast float** %290 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = sub i64 %292, %294
  %296 = icmp eq i64 %295, 4096
  br i1 %296, label %297, label %301

297:                                              ; preds = %287
  %298 = getelementptr inbounds float*, float** %290, i64 1
  %299 = bitcast float** %298 to i64*
  %300 = load i64, i64* %299, align 8
  br label %301

301:                                              ; preds = %297, %287
  %302 = phi i64 [ %300, %297 ], [ %292, %287 ]
  %303 = phi float** [ %298, %297 ], [ %290, %287 ]
  %304 = inttoptr i64 %302 to float*
  %305 = icmp eq float* %284, %304
  br i1 %305, label %312, label %306

306:                                              ; preds = %301
  %307 = inttoptr i64 %288 to float*
  %308 = load float, float* %307, align 4
  %309 = load float, float* %304, align 4
  %310 = fcmp olt float %308, %309
  %311 = select i1 %310, i64 %302, i64 %288
  br label %287

312:                                              ; preds = %301, %265, %275
  %313 = phi i64 [ %285, %275 ], [ 0, %265 ], [ %288, %301 ]
  %314 = inttoptr i64 %313 to float*
  %315 = load float, float* %314, align 4
  br label %316

316:                                              ; preds = %5, %312
  %317 = phi float [ %315, %312 ], [ -1.000000e+00, %5 ]
  ret float %317
}

declare i32 @_ZN6webrtc7WPDTree6UpdateEPKfm(%"class.webrtc::WPDTree"*, float*, i64) local_unnamed_addr #3

declare %"class.webrtc::WPDNode"* @_ZN6webrtc7WPDTree6NodeAtEii(%"class.webrtc::WPDTree"*, i32, i32) local_unnamed_addr #3

declare void @_ZN6webrtc13MovingMoments16CalculateMomentsEPKfmPfS3_(%"class.webrtc::MovingMoments"*, float*, i64, float*, float*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZN6webrtc17TransientDetector23ReferenceDetectionValueEPKfm(%"class.webrtc::TransientDetector"* nocapture, float* readonly, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp ne float* %1, null
  %5 = icmp ugt i64 %2, 1
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %72

7:                                                ; preds = %3
  %8 = add i64 %2, -1
  %9 = add i64 %2, -2
  %10 = and i64 %8, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %7
  %13 = sub i64 %8, %10
  br label %33

14:                                               ; preds = %33, %7
  %15 = phi float [ undef, %7 ], [ %55, %33 ]
  %16 = phi i64 [ 1, %7 ], [ %56, %33 ]
  %17 = phi float [ 0.000000e+00, %7 ], [ %55, %33 ]
  %18 = icmp eq i64 %10, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %14, %19
  %20 = phi i64 [ %27, %19 ], [ %16, %14 ]
  %21 = phi float [ %26, %19 ], [ %17, %14 ]
  %22 = phi i64 [ %28, %19 ], [ %10, %14 ]
  %23 = getelementptr inbounds float, float* %1, i64 %20
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %24
  %26 = fadd float %21, %25
  %27 = add nuw i64 %20, 1
  %28 = add i64 %22, -1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %19, !llvm.loop !4

30:                                               ; preds = %19, %14
  %31 = phi float [ %15, %14 ], [ %26, %19 ]
  %32 = fcmp oeq float %31, 0.000000e+00
  br i1 %32, label %72, label %59

33:                                               ; preds = %33, %12
  %34 = phi i64 [ 1, %12 ], [ %56, %33 ]
  %35 = phi float [ 0.000000e+00, %12 ], [ %55, %33 ]
  %36 = phi i64 [ %13, %12 ], [ %57, %33 ]
  %37 = getelementptr inbounds float, float* %1, i64 %34
  %38 = load float, float* %37, align 4
  %39 = fmul float %38, %38
  %40 = fadd float %35, %39
  %41 = add nuw nsw i64 %34, 1
  %42 = getelementptr inbounds float, float* %1, i64 %41
  %43 = load float, float* %42, align 4
  %44 = fmul float %43, %43
  %45 = fadd float %40, %44
  %46 = add nuw nsw i64 %34, 2
  %47 = getelementptr inbounds float, float* %1, i64 %46
  %48 = load float, float* %47, align 4
  %49 = fmul float %48, %48
  %50 = fadd float %45, %49
  %51 = add nuw i64 %34, 3
  %52 = getelementptr inbounds float, float* %1, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fmul float %53, %53
  %55 = fadd float %50, %54
  %56 = add nuw i64 %34, 4
  %57 = add i64 %36, -4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %14, label %33

59:                                               ; preds = %30
  %60 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 10
  %61 = load float, float* %60, align 4
  %62 = fdiv float %31, %61
  %63 = fsub float 0x3FC99999A0000000, %62
  %64 = fmul float %63, 2.000000e+01
  %65 = tail call float @expf(float %64) #11
  %66 = fadd float %65, 1.000000e+00
  %67 = fdiv float 1.000000e+00, %66
  %68 = load float, float* %60, align 4
  %69 = fmul float %68, 0x3FEFAE1480000000
  %70 = fmul float %31, 0x3F847AE000000000
  %71 = fadd float %70, %69
  store float %71, float* %60, align 4
  br label %72

72:                                               ; preds = %3, %30, %59
  %73 = phi i8 [ 1, %59 ], [ 0, %3 ], [ 0, %30 ]
  %74 = phi float [ %67, %59 ], [ 1.000000e+00, %3 ], [ 1.000000e+00, %30 ]
  %75 = getelementptr inbounds %"class.webrtc::TransientDetector", %"class.webrtc::TransientDetector"* %0, i64 0, i32 11
  store i8 %73, i8* %75, align 8
  ret float %74
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6webrtc7WPDTreeD1Ev(%"class.webrtc::WPDTree"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6webrtc13MovingMomentsD1Ev(%"class.webrtc::MovingMoments"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIfNS_9allocatorIfEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca float*, align 8
  %3 = alloca float*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.35", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load float**, float*** %10, align 8
  %12 = bitcast float** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds float*, float** %11, i64 1
  store float** %14, float*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load float**, float*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load float**, float*** %17, align 8
  %19 = icmp eq float** %16, %18
  %20 = ptrtoint float** %18 to i64
  %21 = bitcast float** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float**, float*** %23, align 8
  %25 = icmp ugt float** %14, %24
  %26 = ptrtoint float** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint float** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds float*, float** %14, i64 %32
  %34 = ptrtoint float** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast float** %33 to i8*
  %40 = bitcast float** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load float**, float*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi float** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds float*, float** %33, i64 %36
  store float** %44, float*** %15, align 8
  %45 = getelementptr inbounds float*, float** %43, i64 %32
  store float** %45, float*** %10, align 8
  %46 = bitcast float** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast float*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to float**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds float*, float** %60, i64 %57
  %63 = ptrtoint float** %62 to i64
  %64 = getelementptr inbounds float*, float** %60, i64 %53
  %65 = ptrtoint float** %64 to i64
  %66 = ptrtoint float** %14 to i64
  %67 = ptrtoint float** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds float*, float** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi float** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi float** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast float** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds float*, float** %79, i64 1
  %87 = ptrtoint float** %86 to i64
  %88 = getelementptr inbounds float*, float** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !5

91:                                               ; preds = %78
  %92 = ptrtoint float** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi float** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi float** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi float** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi float** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast float** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds float*, float** %99, i64 1
  %106 = getelementptr inbounds float*, float** %101, i64 1
  %107 = bitcast float** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast float** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds float*, float** %99, i64 2
  %111 = getelementptr inbounds float*, float** %101, i64 2
  %112 = bitcast float** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast float** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds float*, float** %99, i64 3
  %116 = getelementptr inbounds float*, float** %101, i64 3
  %117 = bitcast float** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast float** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds float*, float** %99, i64 4
  %121 = getelementptr inbounds float*, float** %101, i64 4
  %122 = bitcast float** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast float** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds float*, float** %99, i64 5
  %126 = getelementptr inbounds float*, float** %101, i64 5
  %127 = bitcast float** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast float** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds float*, float** %99, i64 6
  %131 = getelementptr inbounds float*, float** %101, i64 6
  %132 = bitcast float** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast float** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds float*, float** %99, i64 7
  %136 = getelementptr inbounds float*, float** %101, i64 7
  %137 = bitcast float** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast float** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds float*, float** %99, i64 8
  %141 = ptrtoint float** %140 to i64
  %142 = getelementptr inbounds float*, float** %101, i64 8
  %143 = icmp eq float** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint float** %70 to i64
  %146 = load float**, float*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi float** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast float*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast float*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq float** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast float** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast float*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load float**, float*** %15, align 8
  %161 = getelementptr inbounds float*, float** %160, i64 1
  store float** %161, float*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast float*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast float*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast float*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to float**
  %181 = inttoptr i64 %169 to float**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast float** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #10
  %187 = bitcast float** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, float** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast float** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #10
  %191 = bitcast float** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, float** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load float**, float*** %167, align 8
  %193 = bitcast float** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds float*, float** %192, i64 1
  store float** %195, float*** %167, align 8
  %196 = load float**, float*** %164, align 8
  %197 = load float**, float*** %172, align 8
  %198 = icmp eq float** %196, %197
  %199 = ptrtoint float** %197 to i64
  %200 = bitcast float** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load float**, float*** %202, align 8
  %204 = icmp ugt float** %195, %203
  %205 = ptrtoint float** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint float** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds float*, float** %195, i64 %211
  %213 = ptrtoint float** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast float** %212 to i8*
  %219 = bitcast float** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load float**, float*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi float** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds float*, float** %212, i64 %215
  store float** %223, float*** %164, align 8
  %224 = getelementptr inbounds float*, float** %222, i64 %211
  store float** %224, float*** %167, align 8
  %225 = bitcast float** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to float**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds float*, float** %237, i64 %234
  %240 = ptrtoint float** %239 to i64
  %241 = getelementptr inbounds float*, float** %237, i64 %230
  %242 = ptrtoint float** %241 to i64
  %243 = ptrtoint float** %195 to i64
  %244 = ptrtoint float** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds float*, float** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi float** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi float** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast float** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds float*, float** %256, i64 1
  %264 = ptrtoint float** %263 to i64
  %265 = getelementptr inbounds float*, float** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !6

268:                                              ; preds = %255
  %269 = ptrtoint float** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi float** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi float** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi float** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi float** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast float** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds float*, float** %276, i64 1
  %283 = getelementptr inbounds float*, float** %278, i64 1
  %284 = bitcast float** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast float** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds float*, float** %276, i64 2
  %288 = getelementptr inbounds float*, float** %278, i64 2
  %289 = bitcast float** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast float** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds float*, float** %276, i64 3
  %293 = getelementptr inbounds float*, float** %278, i64 3
  %294 = bitcast float** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast float** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds float*, float** %276, i64 4
  %298 = getelementptr inbounds float*, float** %278, i64 4
  %299 = bitcast float** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast float** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds float*, float** %276, i64 5
  %303 = getelementptr inbounds float*, float** %278, i64 5
  %304 = bitcast float** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast float** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds float*, float** %276, i64 6
  %308 = getelementptr inbounds float*, float** %278, i64 6
  %309 = bitcast float** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast float** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds float*, float** %276, i64 7
  %313 = getelementptr inbounds float*, float** %278, i64 7
  %314 = bitcast float** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast float** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds float*, float** %276, i64 8
  %318 = ptrtoint float** %317 to i64
  %319 = getelementptr inbounds float*, float** %278, i64 8
  %320 = icmp eq float** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint float** %247 to i64
  %323 = load float**, float*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi float** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq float** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast float** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast float*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load float**, float*** %164, align 8
  %336 = getelementptr inbounds float*, float** %335, i64 1
  store float** %336, float*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store float** null, float*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair.11"**
  store %"class.std::__1::__compressed_pair.11"* %346, %"class.std::__1::__compressed_pair.11"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to float**
  %355 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds float*, float** %354, i64 %171
  store float** %356, float*** %340, align 8
  store float** %356, float*** %339, align 8
  %357 = getelementptr inbounds float*, float** %354, i64 %345
  store float** %357, float*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint float** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint float** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt float** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds float*, float** %356, i64 %370
  store float** %371, float*** %340, align 8
  store float** %371, float*** %339, align 8
  %372 = ptrtoint float** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i64*
  %382 = bitcast float*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to float**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds float*, float** %386, i64 %383
  %389 = ptrtoint float** %388 to i64
  %390 = getelementptr inbounds float*, float** %386, i64 %377
  %391 = ptrtoint float** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast float*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast float*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load float**, float*** %164, align 8
  %395 = load float**, float*** %167, align 8
  %396 = ptrtoint float** %395 to i64
  %397 = ptrtoint float** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi float** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi float** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi float** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast float** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds float*, float** %406, i64 1
  store float** %408, float*** %340, align 8
  %409 = icmp eq float** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint float** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i64*
  %413 = bitcast float*** %339 to i64*
  %414 = bitcast float*** %340 to i64*
  %415 = bitcast float*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint float** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.35"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast float*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast float*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast float*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to float**
  %441 = inttoptr i64 %434 to float**
  %442 = icmp eq float** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr float*, float** %441, i64 -1
  %445 = ptrtoint float** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr float*, float** %441, i64 %448
  store float** %449, float*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi float** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds float*, float** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPfRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.35"* nonnull %4, float** dereferenceable(8) %457)
  %458 = load float**, float*** %167, align 8
  %459 = icmp eq float** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, float** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load float**, float*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load float**, float*** %5, align 8
  %7 = icmp eq float** %4, %6
  %8 = ptrtoint float** %6 to i64
  %9 = bitcast float** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load float**, float*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load float**, float*** %13, align 8
  %15 = icmp ugt float** %12, %14
  %16 = ptrtoint float** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint float** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds float*, float** %12, i64 %22
  %24 = ptrtoint float** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast float** %23 to i8*
  %30 = bitcast float** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load float**, float*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi float** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds float*, float** %23, i64 %26
  store float** %34, float*** %3, align 8
  %35 = getelementptr inbounds float*, float** %33, i64 %22
  store float** %35, float*** %11, align 8
  %36 = bitcast float** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast float*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to float**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds float*, float** %50, i64 %47
  %53 = ptrtoint float** %52 to i64
  %54 = getelementptr inbounds float*, float** %50, i64 %43
  %55 = ptrtoint float** %54 to i64
  %56 = ptrtoint float** %12 to i64
  %57 = ptrtoint float** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds float*, float** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi float** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi float** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast float** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds float*, float** %69, i64 1
  %77 = ptrtoint float** %76 to i64
  %78 = getelementptr inbounds float*, float** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !7

81:                                               ; preds = %68
  %82 = ptrtoint float** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi float** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi float** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi float** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi float** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast float** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds float*, float** %89, i64 1
  %96 = getelementptr inbounds float*, float** %91, i64 1
  %97 = bitcast float** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast float** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds float*, float** %89, i64 2
  %101 = getelementptr inbounds float*, float** %91, i64 2
  %102 = bitcast float** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast float** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds float*, float** %89, i64 3
  %106 = getelementptr inbounds float*, float** %91, i64 3
  %107 = bitcast float** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast float** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds float*, float** %89, i64 4
  %111 = getelementptr inbounds float*, float** %91, i64 4
  %112 = bitcast float** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast float** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds float*, float** %89, i64 5
  %116 = getelementptr inbounds float*, float** %91, i64 5
  %117 = bitcast float** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast float** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds float*, float** %89, i64 6
  %121 = getelementptr inbounds float*, float** %91, i64 6
  %122 = bitcast float** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast float** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds float*, float** %89, i64 7
  %126 = getelementptr inbounds float*, float** %91, i64 7
  %127 = bitcast float** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast float** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds float*, float** %89, i64 8
  %131 = ptrtoint float** %130 to i64
  %132 = getelementptr inbounds float*, float** %91, i64 8
  %133 = icmp eq float** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint float** %60 to i64
  %136 = load float**, float*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi float** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast float*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast float*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq float** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast float** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast float*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast float** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load float**, float*** %3, align 8
  %153 = getelementptr inbounds float*, float** %152, i64 1
  store float** %153, float*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPfNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, float** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load float**, float*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load float**, float*** %5, align 8
  %7 = icmp eq float** %4, %6
  %8 = ptrtoint float** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load float**, float*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load float**, float*** %12, align 8
  %14 = icmp ult float** %11, %13
  %15 = bitcast float*** %12 to i64*
  %16 = ptrtoint float** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint float** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds float*, float** %11, i64 %22
  %24 = ptrtoint float** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds float*, float** %23, i64 %29
  %31 = bitcast float** %30 to i8*
  %32 = bitcast float** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load float**, float*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi float** [ %33, %27 ], [ %11, %17 ]
  %36 = phi float** [ %30, %27 ], [ %23, %17 ]
  store float** %36, float*** %3, align 8
  %37 = getelementptr inbounds float*, float** %35, i64 %22
  store float** %37, float*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to float**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds float*, float** %51, i64 %48
  %54 = ptrtoint float** %53 to i64
  %55 = getelementptr inbounds float*, float** %51, i64 %43
  %56 = ptrtoint float** %55 to i64
  %57 = ptrtoint float** %4 to i64
  %58 = ptrtoint float** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds float*, float** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi float** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi float** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast float** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds float*, float** %70, i64 1
  %78 = ptrtoint float** %77 to i64
  %79 = getelementptr inbounds float*, float** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !8

82:                                               ; preds = %69
  %83 = ptrtoint float** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi float** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi float** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi float** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi float** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast float** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds float*, float** %90, i64 1
  %97 = getelementptr inbounds float*, float** %92, i64 1
  %98 = bitcast float** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast float** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds float*, float** %90, i64 2
  %102 = getelementptr inbounds float*, float** %92, i64 2
  %103 = bitcast float** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast float** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds float*, float** %90, i64 3
  %107 = getelementptr inbounds float*, float** %92, i64 3
  %108 = bitcast float** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast float** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds float*, float** %90, i64 4
  %112 = getelementptr inbounds float*, float** %92, i64 4
  %113 = bitcast float** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast float** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds float*, float** %90, i64 5
  %117 = getelementptr inbounds float*, float** %92, i64 5
  %118 = bitcast float** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast float** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds float*, float** %90, i64 6
  %122 = getelementptr inbounds float*, float** %92, i64 6
  %123 = bitcast float** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast float** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds float*, float** %90, i64 7
  %127 = getelementptr inbounds float*, float** %92, i64 7
  %128 = bitcast float** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast float** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds float*, float** %90, i64 8
  %132 = ptrtoint float** %131 to i64
  %133 = getelementptr inbounds float*, float** %92, i64 8
  %134 = icmp eq float** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint float** %61 to i64
  %137 = load float**, float*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi float** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast float*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast float*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq float** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast float** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load float**, float*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi float** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds float*, float** %148, i64 -1
  %150 = bitcast float** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast float** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load float**, float*** %3, align 8
  %154 = getelementptr inbounds float*, float** %153, i64 -1
  store float** %154, float*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPfRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.35"*, float** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 1
  %4 = load float**, float*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 0
  %6 = load float**, float*** %5, align 8
  %7 = icmp eq float** %4, %6
  %8 = ptrtoint float** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 2
  %11 = load float**, float*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.35", %"struct.std::__1::__split_buffer.35"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load float**, float*** %12, align 8
  %14 = icmp ult float** %11, %13
  %15 = bitcast float*** %12 to i64*
  %16 = ptrtoint float** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint float** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds float*, float** %11, i64 %22
  %24 = ptrtoint float** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds float*, float** %23, i64 %29
  %31 = bitcast float** %30 to i8*
  %32 = bitcast float** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load float**, float*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi float** [ %33, %27 ], [ %11, %17 ]
  %36 = phi float** [ %30, %27 ], [ %23, %17 ]
  store float** %36, float*** %3, align 8
  %37 = getelementptr inbounds float*, float** %35, i64 %22
  store float** %37, float*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.35"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to float**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds float*, float** %51, i64 %48
  %54 = ptrtoint float** %53 to i64
  %55 = getelementptr inbounds float*, float** %51, i64 %43
  %56 = ptrtoint float** %55 to i64
  %57 = ptrtoint float** %4 to i64
  %58 = ptrtoint float** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds float*, float** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi float** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi float** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast float** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds float*, float** %70, i64 1
  %78 = ptrtoint float** %77 to i64
  %79 = getelementptr inbounds float*, float** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !9

82:                                               ; preds = %69
  %83 = ptrtoint float** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi float** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi float** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi float** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi float** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast float** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds float*, float** %90, i64 1
  %97 = getelementptr inbounds float*, float** %92, i64 1
  %98 = bitcast float** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast float** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds float*, float** %90, i64 2
  %102 = getelementptr inbounds float*, float** %92, i64 2
  %103 = bitcast float** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast float** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds float*, float** %90, i64 3
  %107 = getelementptr inbounds float*, float** %92, i64 3
  %108 = bitcast float** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast float** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds float*, float** %90, i64 4
  %112 = getelementptr inbounds float*, float** %92, i64 4
  %113 = bitcast float** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast float** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds float*, float** %90, i64 5
  %117 = getelementptr inbounds float*, float** %92, i64 5
  %118 = bitcast float** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast float** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds float*, float** %90, i64 6
  %122 = getelementptr inbounds float*, float** %92, i64 6
  %123 = bitcast float** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast float** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds float*, float** %90, i64 7
  %127 = getelementptr inbounds float*, float** %92, i64 7
  %128 = bitcast float** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast float** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds float*, float** %90, i64 8
  %132 = ptrtoint float** %131 to i64
  %133 = getelementptr inbounds float*, float** %92, i64 8
  %134 = icmp eq float** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint float** %61 to i64
  %137 = load float**, float*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi float** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast float*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast float*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq float** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast float** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load float**, float*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi float** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds float*, float** %148, i64 -1
  %150 = bitcast float** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast float** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load float**, float*** %3, align 8
  %154 = getelementptr inbounds float*, float** %153, i64 -1
  store float** %154, float*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
