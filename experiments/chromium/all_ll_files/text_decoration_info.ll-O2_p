; ModuleID = '../../third_party/blink/renderer/core/paint/text_decoration_info.cc'
source_filename = "../../third_party/blink/renderer/core/paint/text_decoration_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.644 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.40" }>
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%"class.blink::TextDecorationInfo" = type { %"class.blink::ComputedStyle"*, %"class.absl::optional.620", i32, %"class.blink::LayoutUnit", %"class.blink::SimpleFontData"*, float, i32, %"class.blink::FloatPoint", i8, %"class.WTF::Vector.625", i32, [4 x i8], [3 x %"struct.blink::TextDecorationInfo::PerLineData"] }
%"class.absl::optional.620" = type { %"class.absl::optional_internal::optional_data.621" }
%"class.absl::optional_internal::optional_data.621" = type { %"class.absl::optional_internal::optional_data_base.622" }
%"class.absl::optional_internal::optional_data_base.622" = type { %"class.absl::optional_internal::optional_data_dtor_base.623" }
%"class.absl::optional_internal::optional_data_dtor_base.623" = type { i8, %union.anon.624 }
%union.anon.624 = type { %"class.blink::AppliedTextDecoration" }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Color" = type { i32 }
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::Length" = type <{ %union.anon.242, i8, i8, i8, i8 }>
%union.anon.242 = type { i32 }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.55, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.35" }>
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.50, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.40" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.45" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.50 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.53, %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.55 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.56", [4 x i8] }>
%"class.WTF::RefCounted.56" = type { %"class.base::RefCounted.57" }
%"class.base::RefCounted.57" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.WTF::Vector.625" = type { %"class.WTF::VectorBuffer.626" }
%"class.WTF::VectorBuffer.626" = type { %"class.WTF::VectorBufferBase.627" }
%"class.WTF::VectorBufferBase.627" = type { float*, i32, i32 }
%"struct.blink::TextDecorationInfo::PerLineData" = type { float, float, i32, [4 x i8], %"class.absl::optional.630" }
%"class.absl::optional.630" = type { %"class.absl::optional_internal::optional_data.631" }
%"class.absl::optional_internal::optional_data.631" = type { %"class.absl::optional_internal::optional_data_base.632" }
%"class.absl::optional_internal::optional_data_base.632" = type { %"class.absl::optional_internal::optional_data_dtor_base.633" }
%"class.absl::optional_internal::optional_data_dtor_base.633" = type { i8, [7 x i8], %union.anon.634 }
%union.anon.634 = type { %"class.blink::Path" }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.541, i32, %"struct.std::__1::atomic.45", %"struct.std::__1::atomic.45", i8, i8 }>
%class.sk_sp.541 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.542, %class.SkTDArray.543, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.40" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.542 = type { i8*, i32, i32 }
%class.SkTDArray.543 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.544 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.40", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.544 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.237", [3 x i8] }
%"struct.std::__1::atomic.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { i8 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.605", %"class.std::__1::unique_ptr.607" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.243", %"class.blink::DataRef.315", %"class.blink::DataRef.319", %"class.blink::DataRef.519", %"class.blink::DataRef.588", %"class.blink::DataRef.592", %"class.blink::DataRef.596", %"class.blink::DataRef.600", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.0", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.0" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.2", %"class.blink::Font" }
%"class.WTF::RefCounted.2" = type { %"class.base::RefCounted.3" }
%"class.base::RefCounted.3" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.28 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.7, %class.scoped_refptr.10, %class.scoped_refptr.20, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.27 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.6 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.6 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.642", [4 x i8] }>
%"class.WTF::RefCounted.642" = type { %"class.base::RefCounted.643" }
%"class.base::RefCounted.643" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.7 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.8", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.8" = type { %"class.base::RefCounted.9" }
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.10 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.11", %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.blink::FontSettings.11" = type { %"class.WTF::Vector.12" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::FontTagValuePair.15"*, i32, i32 }
%"class.blink::FontTagValuePair.15" = type { i32, float }
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.20 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.21", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.24, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.24 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.25", [4 x i8] }>
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.27 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.28 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.29", %"class.WTF::Vector.31", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [8 x i8] }
%"class.WTF::VectorBufferBase.33" = type { %class.scoped_refptr.34*, i32, i32 }
%class.scoped_refptr.34 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.35", [4 x i8] }>
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.58", i32, [4 x i8], %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.237", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.176", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i64 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.154", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.170", [4 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156", %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i64 }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { float }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.179", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.188" }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.218" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.637" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.40" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.45" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.243" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.245", [4 x i8], %"class.blink::DataRef.247", %"class.blink::DataRef.279", %"class.WTF::Vector.283", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.288, %class.scoped_refptr.297, %"class.blink::Persistent.305", %"class.blink::Persistent.307", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.245" = type { %"class.base::RefCounted.246" }
%"class.base::RefCounted.246" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.247" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.249", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.251, %class.scoped_refptr.258, %"class.blink::Persistent.269", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.249" = type { %"class.base::RefCounted.250" }
%"class.base::RefCounted.250" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.251 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.252", %"class.WTF::Vector.253" }
%"class.base::RefCountedThreadSafe.252" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%class.scoped_refptr.258 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.259", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.259" = type { %"class.base::RefCounted.260" }
%"class.base::RefCounted.260" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.655 }
%class.scoped_refptr.655 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.656", %"class.WTF::Vector.502", %"class.WTF::Vector.658", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.656" = type { %"class.base::RefCounted.657" }
%"class.base::RefCounted.657" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.502" = type { %"class.WTF::VectorBuffer.503" }
%"class.WTF::VectorBuffer.503" = type { %"class.WTF::VectorBufferBase.504" }
%"class.WTF::VectorBufferBase.504" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.661 }
%union.anon.661 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.263" }
%"class.blink::PersistentBase.263" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.264" }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type opaque
%"class.blink::PersistentNodePtr.268" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.279" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.281", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.281" = type { %"class.base::RefCounted.282" }
%"class.base::RefCounted.282" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.288 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.289", %"class.WTF::Vector.291" }
%"class.WTF::RefCounted.289" = type { %"class.base::RefCounted.290" }
%"class.base::RefCounted.290" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair.294"*, i32, i32 }
%"struct.std::__1::pair.294" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.297 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.298", [4 x i8], %"class.WTF::Vector.300" }
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.302", [28 x i8] }>
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.305" = type { %"class.blink::PersistentBase.306" }
%"class.blink::PersistentBase.306" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::Persistent.307" = type { %"class.blink::PersistentBase.308" }
%"class.blink::PersistentBase.308" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.311", %"class.blink::Member.313" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.315" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.317", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.317" = type { %"class.base::RefCounted.318" }
%"class.base::RefCounted.318" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.319" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.321", [4 x i8], %"class.blink::DataRef.323", %"class.blink::DataRef.389", %"class.blink::TransformOperations", %class.scoped_refptr.297, %"class.blink::Persistent.513", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.321" = type { %"class.base::RefCounted.322" }
%"class.base::RefCounted.322" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.323" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.325", [4 x i8], %"class.blink::DataRef.327", %"class.blink::Persistent.365", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.325" = type { %"class.base::RefCounted.326" }
%"class.base::RefCounted.326" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.327" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.329", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.347, %class.scoped_refptr.350, %class.scoped_refptr.353, %class.scoped_refptr.356, %class.scoped_refptr.357, %class.scoped_refptr.358, %"class.blink::Persistent.365", %"class.blink::Persistent.380", %"class.absl::optional.384", %"class.absl::optional.384", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.329" = type { %"class.base::RefCounted.330" }
%"class.base::RefCounted.330" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.331", %"class.std::__1::unique_ptr.336" }
%"class.WTF::Vector.331" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333" }
%"class.WTF::VectorBufferBase.333" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.339", %"class.WTF::Vector.331", i32, i32 }
%"class.WTF::Vector.339" = type { %"class.WTF::VectorBuffer.340" }
%"class.WTF::VectorBuffer.340" = type { %"class.WTF::VectorBufferBase.341" }
%"class.WTF::VectorBufferBase.341" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.347 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.348", [4 x i8] }>
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.350 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.351", [4 x i8] }>
%"class.WTF::RefCounted.351" = type { %"class.base::RefCounted.352" }
%"class.base::RefCounted.352" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.353 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.354" }>
%"class.WTF::RefCounted.354" = type { %"class.base::RefCounted.355" }
%"class.base::RefCounted.355" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.356 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.357 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.358 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.359", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.361" }
%"class.blink::DataRef.361" = type { %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.305", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.363" }
%"class.WTF::RefCounted.363" = type { %"class.base::RefCounted.364" }
%"class.base::RefCounted.364" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.380" = type { %"class.blink::PersistentBase.381" }
%"class.blink::PersistentBase.381" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.350, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.384" = type { %"class.absl::optional_internal::optional_data.385" }
%"class.absl::optional_internal::optional_data.385" = type { %"class.absl::optional_internal::optional_data_base.386" }
%"class.absl::optional_internal::optional_data_base.386" = type { %"class.absl::optional_internal::optional_data_dtor_base.387" }
%"class.absl::optional_internal::optional_data_dtor_base.387" = type { i8, [3 x i8], %union.anon.388 }
%union.anon.388 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.365" = type { %"class.blink::PersistentBase.366" }
%"class.blink::PersistentBase.366" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.369" }
%"class.blink::HeapVector.369" = type { %"class.WTF::Vector.372" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::Member.375"*, i32, i32 }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.389" = type { %class.scoped_refptr.390 }
%class.scoped_refptr.390 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.391", %"class.blink::DataRef.393", %"class.blink::DataRef.397", %"class.blink::DataRef.406", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.496", %"class.WTF::Vector.502", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.391" = type { %"class.base::RefCounted.392" }
%"class.base::RefCounted.392" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.393" = type { %class.scoped_refptr.394 }
%class.scoped_refptr.394 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.395", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.395" = type { %"class.base::RefCounted.396" }
%"class.base::RefCounted.396" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.397" = type { %class.scoped_refptr.398 }
%class.scoped_refptr.398 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.399", [4 x i8], %"class.WTF::Vector.401", i8, [7 x i8] }>
%"class.WTF::RefCounted.399" = type { %"class.base::RefCounted.400" }
%"class.base::RefCounted.400" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { i32*, i32, i32 }
%"class.blink::DataRef.406" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.408", [4 x i8], %"class.WTF::HashMap.410", %"class.WTF::HashMap.410", %"class.WTF::HashMap.410", %"class.WTF::HashMap.410", %"class.WTF::HashMap.410", %"class.WTF::HashMap.410", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.415", %"class.WTF::HashMap.420", %"class.WTF::Vector.331", %"class.WTF::Vector.331", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.408" = type { %"class.base::RefCounted.409" }
%"class.base::RefCounted.409" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.410" = type { %"class.WTF::HashTable.411" }
%"class.WTF::HashTable.411" = type <{ %"struct.WTF::KeyValuePair.414"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.414" = type { %"class.WTF::String", %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { i64*, i32, i32 }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.419" = type { i64, %"class.WTF::Vector.502" }
%"class.WTF::HashMap.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.428" }
%"class.WTF::HashMap.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.650", %"class.absl::optional.650", %"class.absl::optional.650" }
%"class.absl::optional.650" = type { %"class.absl::optional_internal::optional_data.651" }
%"class.absl::optional_internal::optional_data.651" = type { %"class.absl::optional_internal::optional_data_base.652" }
%"class.absl::optional_internal::optional_data_base.652" = type { %"class.absl::optional_internal::optional_data_dtor_base.653" }
%"class.absl::optional_internal::optional_data_dtor_base.653" = type { i8, %union.anon.654 }
%union.anon.654 = type { i32 }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.283", %"class.WTF::Vector.451", %"class.WTF::Vector.439", %"class.WTF::Vector.456", %"class.WTF::Vector.461", %"class.WTF::Vector.466" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.439", %"class.WTF::Vector.439", %"class.WTF::Vector.444" }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %class.scoped_refptr.447*, i32, i32 }
%class.scoped_refptr.447 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.448" }
%"class.base::RefCountedThreadSafe.448" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { double*, i32, i32 }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { i32*, i32, i32 }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { i32*, i32, i32 }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.477" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.488" }
%"class.WTF::Vector.488" = type { %"class.WTF::VectorBuffer.489" }
%"class.WTF::VectorBuffer.489" = type { %"class.WTF::VectorBufferBase.490" }
%"class.WTF::VectorBufferBase.490" = type { %"class.blink::Persistent.305"*, i32, i32 }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.305", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.507" }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %class.scoped_refptr.510*, i32, i32 }
%class.scoped_refptr.510 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.354", [4 x i8] }>
%"class.blink::Persistent.513" = type { %"class.blink::PersistentBase.514" }
%"class.blink::PersistentBase.514" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.517" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.519" = type { %class.scoped_refptr.520 }
%class.scoped_refptr.520 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.521", [4 x i8], %"class.blink::DataRef.523", %"class.blink::DataRef.527", %"class.blink::DataRef.548", %"class.blink::DataRef.568", %"class.blink::DataRef.580", %"class.blink::DataRef.584", %class.scoped_refptr.552, i32, [4 x i8] }>
%"class.WTF::RefCounted.521" = type { %"class.base::RefCounted.522" }
%"class.base::RefCounted.522" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.523" = type { %class.scoped_refptr.524 }
%class.scoped_refptr.524 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.525", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.525" = type { %"class.base::RefCounted.526" }
%"class.base::RefCounted.526" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.527" = type { %class.scoped_refptr.528 }
%class.scoped_refptr.528 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.529", %class.scoped_refptr.531, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.531 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.538", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.351" }>
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::Path"* }
%"class.blink::DataRef.548" = type { %class.scoped_refptr.549 }
%class.scoped_refptr.549 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.550", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.552, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.568" = type { %class.scoped_refptr.569 }
%class.scoped_refptr.569 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.570", [4 x i8], %class.scoped_refptr.572, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.570" = type { %"class.base::RefCounted.571" }
%"class.base::RefCounted.571" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.572 = type { %"class.base::RefCountedData.573"* }
%"class.base::RefCountedData.573" = type { %"class.base::RefCountedThreadSafe.574", %"class.WTF::Vector.575" }
%"class.base::RefCountedThreadSafe.574" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.580" = type { %class.scoped_refptr.581 }
%class.scoped_refptr.581 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.582", %class.scoped_refptr.552, %class.scoped_refptr.552, %class.scoped_refptr.552 }
%"class.WTF::RefCounted.582" = type { %"class.base::RefCounted.583" }
%"class.base::RefCounted.583" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.584" = type { %class.scoped_refptr.585 }
%class.scoped_refptr.585 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.586", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.586" = type { %"class.base::RefCounted.587" }
%"class.base::RefCounted.587" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.552 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.553", %"class.blink::Persistent.555", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.553" = type { %"class.base::RefCounted.554" }
%"class.base::RefCounted.554" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.555" = type { %"class.blink::PersistentBase.556" }
%"class.blink::PersistentBase.556" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.559", %"class.blink::HeapHashMap.561" }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapHashMap.561" = type { %"class.WTF::HashMap.564" }
%"class.WTF::HashMap.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type opaque
%"class.blink::DataRef.588" = type { %class.scoped_refptr.589 }
%class.scoped_refptr.589 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.590", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.590" = type { %"class.base::RefCounted.591" }
%"class.base::RefCounted.591" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.592" = type { %class.scoped_refptr.593 }
%class.scoped_refptr.593 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.594", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.594" = type { %"class.base::RefCounted.595" }
%"class.base::RefCounted.595" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.596" = type { %class.scoped_refptr.597 }
%class.scoped_refptr.597 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.598", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.598" = type { %"class.base::RefCounted.599" }
%"class.base::RefCounted.599" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.602", %class.scoped_refptr.604 }
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.604 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.635", %"class.blink::StyleVariables", %class.scoped_refptr.604 }
%"class.WTF::RefCounted.635" = type { %"class.base::RefCounted.636" }
%"class.base::RefCounted.636" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.605" = type { %"class.base::RefCounted.606" }
%"class.base::RefCounted.606" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.610" }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.WTF::Vector.613"* }
%"class.WTF::Vector.613" = type opaque
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.644 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.40", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@__const._ZNK5blink18TextDecorationInfo13BoundsForWavyENS_14TextDecorationE.stroke_data = private unnamed_addr constant { i32, float, i32, i32, float, [4 x i8], %class.sk_sp.644 } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.644 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) } }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@switch.table._ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE.5 = private unnamed_addr constant [5 x i32] [i32 2, i32 3, i32 1, i32 4, i32 5], align 4

@_ZN5blink18TextDecorationInfoC1ERKNS_14PhysicalOffsetES1_NS_10LayoutUnitENS_12FontBaselineERKNS_13ComputedStyleEN4absl8optionalINS_21AppliedTextDecorationEEEPS7_ = hidden unnamed_addr alias void (%"class.blink::TextDecorationInfo"*, %"struct.blink::PhysicalOffset"*, i64, i32, i32, %"class.blink::ComputedStyle"*, %"class.absl::optional.620"*, %"class.blink::ComputedStyle"*), void (%"class.blink::TextDecorationInfo"*, %"struct.blink::PhysicalOffset"*, i64, i32, i32, %"class.blink::ComputedStyle"*, %"class.absl::optional.620"*, %"class.blink::ComputedStyle"*)* @_ZN5blink18TextDecorationInfoC2ERKNS_14PhysicalOffsetES1_NS_10LayoutUnitENS_12FontBaselineERKNS_13ComputedStyleEN4absl8optionalINS_21AppliedTextDecorationEEEPS7_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDecorationInfoC2ERKNS_14PhysicalOffsetES1_NS_10LayoutUnitENS_12FontBaselineERKNS_13ComputedStyleEN4absl8optionalINS_21AppliedTextDecorationEEEPS7_(%"class.blink::TextDecorationInfo"*, %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8), i64, i32, i32, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.absl::optional.620"* nocapture readonly, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %9 = alloca float, align 4
  %10 = alloca %"class.blink::TextDecorationThickness", align 8
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %5, %"class.blink::ComputedStyle"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.620", %"class.absl::optional.620"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 32, i1 false) #12
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.absl::optional.620", %"class.absl::optional.620"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.blink::AppliedTextDecoration"* %21 to i64*
  %23 = bitcast i8* %16 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 4
  %25 = getelementptr inbounds i8, i8* %16, i64 8
  %26 = getelementptr inbounds %"class.absl::optional.620", %"class.absl::optional.620"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %27 = bitcast %"class.blink::TextDecorationThickness"* %26 to i64*
  %28 = bitcast i8* %25 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  %30 = and i64 %29, 280375465082880
  %31 = icmp eq i64 %30, 8796093022208
  br i1 %31, label %32, label %34

32:                                               ; preds = %20
  %33 = bitcast i8* %25 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %33) #12
  br label %34

34:                                               ; preds = %32, %20
  %35 = getelementptr inbounds i8, i8* %16, i64 16
  %36 = getelementptr inbounds %"class.absl::optional.620", %"class.absl::optional.620"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %37 = load i8, i8* %36, align 4, !range !2
  store i8 %37, i8* %35, align 4
  %38 = getelementptr inbounds i8, i8* %16, i64 20
  %39 = getelementptr inbounds %"class.absl::optional.620", %"class.absl::optional.620"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %40 = bitcast %"class.blink::Length"* %39 to i64*
  %41 = bitcast i8* %38 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = and i64 %42, 280375465082880
  %44 = icmp eq i64 %43, 8796093022208
  br i1 %44, label %45, label %47

45:                                               ; preds = %34
  %46 = bitcast i8* %38 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %46) #12
  br label %47

47:                                               ; preds = %45, %34
  store i8 1, i8* %15, align 4
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  br label %49

49:                                               ; preds = %8, %47
  %50 = phi %"class.blink::ComputedStyle"* [ %5, %8 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 2
  store i32 %4, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 3, i32 0
  store i32 %3, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 4
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %55, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %57, i64 0, i32 1
  %59 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %58) #12
  %60 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %59, i64 0, i32 2
  %61 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %60, align 8
  %62 = icmp eq %"class.blink::SimpleFontData"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %49
  store %"class.blink::SimpleFontData"* %61, %"class.blink::SimpleFontData"** %53, align 8
  %64 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 5
  br label %70

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %58, i64 0, i32 0
  %67 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %59, %"class.blink::FontDescription"* dereferenceable(80) %66) #12
  store %"class.blink::SimpleFontData"* %67, %"class.blink::SimpleFontData"** %60, align 8
  store %"class.blink::SimpleFontData"* %67, %"class.blink::SimpleFontData"** %53, align 8
  %68 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 5
  %69 = icmp eq %"class.blink::SimpleFontData"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %63, %65
  %71 = phi float* [ %64, %63 ], [ %68, %65 ]
  %72 = phi %"class.blink::SimpleFontData"* [ %61, %63 ], [ %67, %65 ]
  %73 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %72, i64 0, i32 1, i32 1
  %74 = load float, float* %73, align 4
  br label %75

75:                                               ; preds = %65, %70
  %76 = phi float* [ %71, %70 ], [ %68, %65 ]
  %77 = phi float [ %74, %70 ], [ 0.000000e+00, %65 ]
  store float %77, float* %76, align 8
  %78 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 6
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %80 = load i32, i32* %51, align 8
  switch i32 %80, label %120 [
    i32 0, label %81
    i32 1, label %92
  ]

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 1, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %83, i64 0, i32 23
  %85 = bitcast [5 x i8]* %84 to i40*
  %86 = load i40, i40* %85, align 8
  %87 = trunc i40 %86 to i32
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = and i32 %87, 1
  %91 = select i1 %89, i32 %90, i32 2
  br label %120

92:                                               ; preds = %75
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %94, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %96, i64 0, i32 1, i32 0, i32 3, i32 0
  %98 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutLocale"* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %92
  %101 = tail call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #12
  br label %102

102:                                              ; preds = %100, %92
  %103 = phi %"class.blink::LayoutLocale"* [ %101, %100 ], [ %98, %92 ]
  %104 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %103, i64 0, i32 7
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 1, i32 0, i32 0
  %107 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %107, i64 0, i32 23
  %109 = bitcast [5 x i8]* %108 to i40*
  %110 = load i40, i40* %109, align 8
  %111 = trunc i40 %110 to i32
  switch i32 %105, label %116 [
    i32 54, label %112
    i32 18, label %112
  ]

112:                                              ; preds = %102, %102
  %113 = and i32 %111, 4
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 3, i32 2
  br label %120

116:                                              ; preds = %102
  %117 = and i32 %111, 8
  %118 = icmp eq i32 %117, 0
  %119 = select i1 %118, i32 2, i32 3
  br label %120

120:                                              ; preds = %75, %112, %116, %81
  %121 = phi i32 [ %91, %81 ], [ %115, %112 ], [ %119, %116 ], [ 0, %75 ]
  store i32 %121, i32* %78, align 4
  %122 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 7
  %123 = sitofp i32 %11 to float
  %124 = fmul float %123, 1.562500e-02
  %125 = sitofp i32 %13 to float
  %126 = fmul float %125, 1.562500e-02
  %127 = insertelement <2 x float> undef, float %124, i32 0
  %128 = insertelement <2 x float> %127, float %126, i32 1
  %129 = bitcast %"class.blink::FloatPoint"* %122 to <2 x float>*
  store <2 x float> %128, <2 x float>* %129, align 8
  %130 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 8
  %131 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %5) #12
  %132 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %132, align 8
  %134 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %131, i64 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %133, i64 %136
  %138 = icmp eq i32 %135, 0
  br i1 %138, label %148, label %141

139:                                              ; preds = %141
  %140 = icmp eq %"class.blink::AppliedTextDecoration"* %147, %137
  br i1 %140, label %148, label %141

141:                                              ; preds = %120, %139
  %142 = phi %"class.blink::AppliedTextDecoration"* [ %147, %139 ], [ %133, %120 ]
  %143 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %142, i64 0, i32 0
  %144 = load i8, i8* %143, align 4
  %145 = and i8 %144, 96
  %146 = icmp eq i8 %145, 0
  %147 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %142, i64 1
  br i1 %146, label %148, label %139

148:                                              ; preds = %139, %141, %120
  %149 = phi i8 [ 0, %120 ], [ 0, %139 ], [ 1, %141 ]
  store i8 %149, i8* %130, align 8
  %150 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %151 = bitcast %"class.WTF::Vector.625"* %150 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 16, i1 false) #12
  %152 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  store i32 -1, i32* %152, align 8
  %153 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %153, align 8
  %154 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 1, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 2, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %155, align 8
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %157 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %156) #12
  %158 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %158, align 8
  %160 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %157, i64 0, i32 0, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %159, i64 %162
  %164 = icmp eq i32 %161, 0
  br i1 %164, label %175, label %165

165:                                              ; preds = %148
  %166 = bitcast float* %9 to i8*
  %167 = bitcast %"class.blink::TextDecorationThickness"* %10 to i8*
  %168 = bitcast %"class.blink::TextDecorationThickness"* %10 to i64*
  %169 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %10, i64 0, i32 0
  %170 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %10, i64 0, i32 1
  %171 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %172 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %150, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %10, i64 0, i32 0, i32 2
  br label %176

175:                                              ; preds = %202, %148
  ret void

176:                                              ; preds = %165, %202
  %177 = phi %"class.blink::AppliedTextDecoration"* [ %159, %165 ], [ %203, %202 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #12
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %167) #12
  %178 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %177, i64 0, i32 2
  %179 = bitcast %"class.blink::TextDecorationThickness"* %178 to i64*
  %180 = load i64, i64* %179, align 4, !noalias !3
  store i64 %180, i64* %168, align 8, !alias.scope !3
  %181 = and i64 %180, 280375465082880
  %182 = icmp eq i64 %181, 8796093022208
  br i1 %182, label %183, label %184

183:                                              ; preds = %176
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %169) #12
  br label %184

184:                                              ; preds = %176, %183
  %185 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %177, i64 0, i32 2, i32 1
  %186 = load i8, i8* %185, align 4, !range !2, !noalias !3
  store i8 %186, i8* %170, align 8, !alias.scope !3
  %187 = call float @_ZN5blink18TextDecorationInfo25ComputeUnderlineThicknessERKNS_23TextDecorationThicknessEPKNS_13ComputedStyleE(%"class.blink::TextDecorationInfo"* %0, %"class.blink::TextDecorationThickness"* nonnull dereferenceable(12) %10, %"class.blink::ComputedStyle"* %7)
  store float %187, float* %9, align 4
  %188 = load i32, i32* %171, align 4
  %189 = load i32, i32* %172, align 8
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %197, label %191, !prof !6

191:                                              ; preds = %184
  %192 = load float*, float** %173, align 8
  %193 = zext i32 %188 to i64
  %194 = getelementptr inbounds float, float* %192, i64 %193
  store float %187, float* %194, align 4
  %195 = load i32, i32* %171, align 4
  %196 = add i32 %195, 1
  store i32 %196, i32* %171, align 4
  br label %198

197:                                              ; preds = %184
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.625"* %150, float* nonnull dereferenceable(4) %9) #12
  br label %198

198:                                              ; preds = %191, %197
  %199 = load i8, i8* %174, align 1
  %200 = icmp eq i8 %199, 8
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %169) #12
  br label %202

202:                                              ; preds = %198, %201
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %167) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #12
  %203 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %177, i64 1
  %204 = icmp eq %"class.blink::AppliedTextDecoration"* %203, %163
  br i1 %204, label %175, label %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink18TextDecorationInfo25ComputeUnderlineThicknessERKNS_23TextDecorationThicknessEPKNS_13ComputedStyleE(%"class.blink::TextDecorationInfo"* nocapture readonly, %"class.blink::TextDecorationThickness"* nocapture readonly dereferenceable(12), %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::TextDecorationThickness", align 8
  %5 = alloca %"class.blink::TextDecorationThickness", align 8
  %6 = alloca %"class.blink::TextDecorationThickness", align 8
  %7 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %82

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::TextDecorationThickness"* %1 to i64*
  %12 = bitcast %"class.blink::TextDecorationThickness"* %4 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 8
  %14 = and i64 %13, 280375465082880
  %15 = icmp eq i64 %14, 8796093022208
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %4, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %17) #12
  br label %18

18:                                               ; preds = %10, %16
  %19 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %1, i64 0, i32 1
  %21 = load i8, i8* %20, align 4, !range !2
  store i8 %21, i8* %19, align 8
  %22 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %27, i64 0, i32 1
  %29 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %28) #12
  %30 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %29, i64 0, i32 2
  %31 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %30, align 8
  %32 = icmp eq %"class.blink::SimpleFontData"* %31, null
  br i1 %32, label %33, label %36

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %28, i64 0, i32 0
  %35 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %29, %"class.blink::FontDescription"* dereferenceable(80) %34) #12
  store %"class.blink::SimpleFontData"* %35, %"class.blink::SimpleFontData"** %30, align 8
  br label %36

36:                                               ; preds = %18, %33
  %37 = phi %"class.blink::SimpleFontData"* [ %31, %18 ], [ %35, %33 ]
  %38 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %24, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %40, i64 0, i32 1, i32 0, i32 5
  %42 = load float, float* %41, align 4
  %43 = fdiv float %42, 1.000000e+01
  %44 = fcmp ogt float %43, 1.000000e+00
  %45 = select i1 %44, float %43, float 1.000000e+00
  %46 = load i8, i8* %19, align 8, !range !2
  %47 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %4, i64 0, i32 0, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = or i8 %48, %46
  %50 = icmp eq i8 %49, 0
  %51 = icmp eq %"class.blink::SimpleFontData"* %37, null
  %52 = or i1 %51, %50
  br i1 %52, label %76, label %53

53:                                               ; preds = %36
  %54 = icmp eq i8 %46, 0
  br i1 %54, label %68, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %37, i64 0, i32 1, i32 7
  %57 = bitcast %"class.absl::optional"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = trunc i64 %58 to i8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %55
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

62:                                               ; preds = %55
  %63 = lshr i64 %58, 32
  %64 = trunc i64 %63 to i32
  %65 = bitcast i32 %64 to float
  %66 = fcmp ogt float %65, 1.000000e+00
  %67 = select i1 %66, float %65, float 1.000000e+00
  br label %76

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %4, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %37, i64 0, i32 5, i32 2
  %71 = load float, float* %70, align 8
  %72 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %69, float %71) #12
  %73 = fcmp ogt float %72, 1.000000e+00
  %74 = select i1 %73, float %72, float 1.000000e+00
  %75 = load i8, i8* %47, align 1
  br label %76

76:                                               ; preds = %36, %62, %68
  %77 = phi i8 [ %48, %62 ], [ %75, %68 ], [ %48, %36 ]
  %78 = phi float [ %67, %62 ], [ %74, %68 ], [ %45, %36 ]
  %79 = icmp eq i8 %77, 8
  br i1 %79, label %80, label %225

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %4, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %81) #12
  br label %225

82:                                               ; preds = %3
  %83 = icmp eq %"class.blink::ComputedStyle"* %2, null
  %84 = bitcast %"class.blink::TextDecorationThickness"* %1 to i64*
  br i1 %83, label %154, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::TextDecorationThickness"* %5 to i64*
  %87 = load i64, i64* %84, align 4
  store i64 %87, i64* %86, align 8
  %88 = and i64 %87, 280375465082880
  %89 = icmp eq i64 %88, 8796093022208
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %91) #12
  br label %92

92:                                               ; preds = %85, %90
  %93 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %5, i64 0, i32 1
  %94 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %1, i64 0, i32 1
  %95 = load i8, i8* %94, align 4, !range !2
  store i8 %95, i8* %93, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %97, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %99, i64 0, i32 1
  %101 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %100) #12
  %102 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %101, i64 0, i32 2
  %103 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %102, align 8
  %104 = icmp eq %"class.blink::SimpleFontData"* %103, null
  br i1 %104, label %105, label %108

105:                                              ; preds = %92
  %106 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %100, i64 0, i32 0
  %107 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %101, %"class.blink::FontDescription"* dereferenceable(80) %106) #12
  store %"class.blink::SimpleFontData"* %107, %"class.blink::SimpleFontData"** %102, align 8
  br label %108

108:                                              ; preds = %92, %105
  %109 = phi %"class.blink::SimpleFontData"* [ %103, %92 ], [ %107, %105 ]
  %110 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %96, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %110, i64 0, i32 1, i32 0, i32 0
  %112 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %112, i64 0, i32 1, i32 0, i32 5
  %114 = load float, float* %113, align 4
  %115 = fdiv float %114, 1.000000e+01
  %116 = fcmp ogt float %115, 1.000000e+00
  %117 = select i1 %116, float %115, float 1.000000e+00
  %118 = load i8, i8* %93, align 8, !range !2
  %119 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %5, i64 0, i32 0, i32 2
  %120 = load i8, i8* %119, align 1
  %121 = or i8 %120, %118
  %122 = icmp eq i8 %121, 0
  %123 = icmp eq %"class.blink::SimpleFontData"* %109, null
  %124 = or i1 %123, %122
  br i1 %124, label %148, label %125

125:                                              ; preds = %108
  %126 = icmp eq i8 %118, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %109, i64 0, i32 1, i32 7
  %129 = bitcast %"class.absl::optional"* %128 to i64*
  %130 = load i64, i64* %129, align 4
  %131 = trunc i64 %130 to i8
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %127
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

134:                                              ; preds = %127
  %135 = lshr i64 %130, 32
  %136 = trunc i64 %135 to i32
  %137 = bitcast i32 %136 to float
  %138 = fcmp ogt float %137, 1.000000e+00
  %139 = select i1 %138, float %137, float 1.000000e+00
  br label %148

140:                                              ; preds = %125
  %141 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %5, i64 0, i32 0
  %142 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %109, i64 0, i32 5, i32 2
  %143 = load float, float* %142, align 8
  %144 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %141, float %143) #12
  %145 = fcmp ogt float %144, 1.000000e+00
  %146 = select i1 %145, float %144, float 1.000000e+00
  %147 = load i8, i8* %119, align 1
  br label %148

148:                                              ; preds = %108, %134, %140
  %149 = phi i8 [ %120, %134 ], [ %147, %140 ], [ %120, %108 ]
  %150 = phi float [ %139, %134 ], [ %146, %140 ], [ %117, %108 ]
  %151 = icmp eq i8 %149, 8
  br i1 %151, label %152, label %225

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %5, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %153) #12
  br label %225

154:                                              ; preds = %82
  %155 = bitcast %"class.blink::TextDecorationThickness"* %6 to i64*
  %156 = load i64, i64* %84, align 4
  store i64 %156, i64* %155, align 8
  %157 = and i64 %156, 280375465082880
  %158 = icmp eq i64 %157, 8796093022208
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %160) #12
  br label %161

161:                                              ; preds = %154, %159
  %162 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %6, i64 0, i32 1
  %163 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %1, i64 0, i32 1
  %164 = load i8, i8* %163, align 4, !range !2
  store i8 %164, i8* %162, align 8
  %165 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %166 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %166, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %168, i64 0, i32 1, i32 0, i32 0
  %170 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %170, i64 0, i32 1
  %172 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %171) #12
  %173 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %172, i64 0, i32 2
  %174 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %173, align 8
  %175 = icmp eq %"class.blink::SimpleFontData"* %174, null
  br i1 %175, label %176, label %179

176:                                              ; preds = %161
  %177 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %171, i64 0, i32 0
  %178 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %172, %"class.blink::FontDescription"* dereferenceable(80) %177) #12
  store %"class.blink::SimpleFontData"* %178, %"class.blink::SimpleFontData"** %173, align 8
  br label %179

179:                                              ; preds = %161, %176
  %180 = phi %"class.blink::SimpleFontData"* [ %174, %161 ], [ %178, %176 ]
  %181 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %167, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %181, i64 0, i32 1, i32 0, i32 0
  %183 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %183, i64 0, i32 1, i32 0, i32 5
  %185 = load float, float* %184, align 4
  %186 = fdiv float %185, 1.000000e+01
  %187 = fcmp ogt float %186, 1.000000e+00
  %188 = select i1 %187, float %186, float 1.000000e+00
  %189 = load i8, i8* %162, align 8, !range !2
  %190 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %6, i64 0, i32 0, i32 2
  %191 = load i8, i8* %190, align 1
  %192 = or i8 %191, %189
  %193 = icmp eq i8 %192, 0
  %194 = icmp eq %"class.blink::SimpleFontData"* %180, null
  %195 = or i1 %194, %193
  br i1 %195, label %219, label %196

196:                                              ; preds = %179
  %197 = icmp eq i8 %189, 0
  br i1 %197, label %211, label %198

198:                                              ; preds = %196
  %199 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %180, i64 0, i32 1, i32 7
  %200 = bitcast %"class.absl::optional"* %199 to i64*
  %201 = load i64, i64* %200, align 4
  %202 = trunc i64 %201 to i8
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %198
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

205:                                              ; preds = %198
  %206 = lshr i64 %201, 32
  %207 = trunc i64 %206 to i32
  %208 = bitcast i32 %207 to float
  %209 = fcmp ogt float %208, 1.000000e+00
  %210 = select i1 %209, float %208, float 1.000000e+00
  br label %219

211:                                              ; preds = %196
  %212 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %6, i64 0, i32 0
  %213 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %180, i64 0, i32 5, i32 2
  %214 = load float, float* %213, align 8
  %215 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* nonnull dereferenceable(8) %212, float %214) #12
  %216 = fcmp ogt float %215, 1.000000e+00
  %217 = select i1 %216, float %215, float 1.000000e+00
  %218 = load i8, i8* %190, align 1
  br label %219

219:                                              ; preds = %179, %205, %211
  %220 = phi i8 [ %191, %205 ], [ %218, %211 ], [ %191, %179 ]
  %221 = phi float [ %210, %205 ], [ %217, %211 ], [ %188, %179 ]
  %222 = icmp eq i8 %220, 8
  br i1 %222, label %223, label %225

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %6, i64 0, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %224) #12
  br label %225

225:                                              ; preds = %223, %219, %152, %148, %80, %76
  %226 = phi float [ %78, %76 ], [ %78, %80 ], [ %150, %148 ], [ %150, %152 ], [ %221, %219 ], [ %221, %223 ]
  ret float %226
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18TextDecorationInfo18SetDecorationIndexEi(%"class.blink::TextDecorationInfo"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextDecorationInfo14SetPerLineDataENS_14TextDecorationEffi(%"class.blink::TextDecorationInfo"*, i32, float, float, i32) local_unnamed_addr #3 align 2 {
  %6 = icmp eq i32 %1, 2
  %7 = zext i1 %6 to i64
  %8 = icmp eq i32 %1, 4
  %9 = select i1 %8, i64 2, i64 %7
  %10 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %9, i32 0
  store float %2, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %9, i32 1
  store float %3, float* %11, align 4
  %12 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %9, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %9, i32 4, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %9, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %17) #12
  store i8 0, i8* %13, align 8
  br label %18

18:                                               ; preds = %5, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextDecorationInfo15DecorationStyleEv(%"class.blink::TextDecorationInfo"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %3) #12
  %5 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %4, i32 %6) #12
  %8 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = lshr i8 %9, 4
  %11 = and i8 %10, 7
  %12 = zext i8 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextDecorationInfo9LineColorEv(%"class.blink::TextDecorationInfo"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %7) #12
  %9 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %8, i32 %10) #12
  %12 = load i8, i8* %2, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %11, i64 0, i32 0
  %17 = load i8, i8* %16, align 4
  %18 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load i8, i8* %18, align 4
  %20 = xor i8 %19, %17
  %21 = and i8 %20, 15
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  br label %33

25:                                               ; preds = %1, %15
  %26 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %27) #12
  %29 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %30 = load i32, i32* %29, align 8
  %31 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %28, i32 %30) #12
  %32 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %31, i64 0, i32 1, i32 0
  br label %33

33:                                               ; preds = %25, %23
  %34 = phi i32* [ %24, %23 ], [ %32, %25 ]
  %35 = load i32, i32* %34, align 4
  ret i32 %35
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK5blink18TextDecorationInfo10StartPointENS_14TextDecorationE(%"class.blink::TextDecorationInfo"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 2
  %4 = zext i1 %3 to i64
  %5 = icmp eq i32 %1, 4
  %6 = select i1 %5, i64 2, i64 %4
  %7 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %6, i32 0
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 7, i32 0
  %10 = bitcast float* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %8, i32 1
  %13 = fadd <2 x float> %11, %12
  ret <2 x float> %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink18TextDecorationInfo12DoubleOffsetENS_14TextDecorationE(%"class.blink::TextDecorationInfo"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 2
  %4 = zext i1 %3 to i64
  %5 = icmp eq i32 %1, 4
  %6 = select i1 %5, i64 2, i64 %4
  %7 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %6, i32 1
  %8 = load float, float* %7, align 4
  ret float %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextDecorationInfo11StrokeStyleEv(%"class.blink::TextDecorationInfo"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %3) #12
  %5 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %4, i32 %6) #12
  %8 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = lshr i8 %9, 4
  %11 = and i8 %10, 7
  %12 = icmp ult i8 %11, 5
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = zext i8 %11 to i64
  %15 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE.5, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  ret i32 %16

17:                                               ; preds = %1
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink18TextDecorationInfo13BoundsForLineENS_14TextDecorationE(%"class.blink::TextDecorationInfo"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 2
  %4 = zext i1 %3 to i64
  %5 = icmp eq i32 %1, 4
  %6 = select i1 %5, i64 2, i64 %4
  %7 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %6, i32 0
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 7, i32 0
  %10 = load float, float* %9, align 4
  %11 = fadd float %10, 0.000000e+00
  %12 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 7, i32 1
  %13 = load float, float* %12, align 4
  %14 = fadd float %8, %13
  %15 = insertelement <2 x float> undef, float %11, i32 0
  %16 = insertelement <2 x float> %15, float %14, i32 1
  %17 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %18) #12
  %20 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %21 = load i32, i32* %20, align 8
  %22 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %19, i32 %21) #12
  %23 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %22, i64 0, i32 0
  %24 = load i8, i8* %23, align 4
  %25 = lshr i8 %24, 4
  %26 = and i8 %25, 7
  %27 = zext i8 %26 to i32
  switch i32 %27, label %77 [
    i32 0, label %28
    i32 1, label %28
    i32 4, label %32
    i32 3, label %36
    i32 2, label %66
  ]

28:                                               ; preds = %2, %2
  %29 = tail call { <2 x float>, <2 x float> } @_ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE(%"class.blink::TextDecorationInfo"* %0, i32 %1)
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = extractvalue { <2 x float>, <2 x float> } %29, 1
  br label %77

32:                                               ; preds = %2
  %33 = tail call { <2 x float>, <2 x float> } @_ZNK5blink18TextDecorationInfo13BoundsForWavyENS_14TextDecorationE(%"class.blink::TextDecorationInfo"* %0, i32 %1)
  %34 = extractvalue { <2 x float>, <2 x float> } %33, 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 1
  br label %77

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %6, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp ogt float %38, 0.000000e+00
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 3, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = fmul float %43, 1.562500e-02
  %45 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %46 = load i32, i32* %20, align 8
  %47 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %45, i32 %46) #12
  %48 = load float, float* %47, align 4
  %49 = fadd float %38, %48
  %50 = insertelement <2 x float> undef, float %44, i32 0
  %51 = insertelement <2 x float> %50, float %49, i32 1
  br label %77

52:                                               ; preds = %36
  %53 = fadd float %14, %38
  %54 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 3, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = sitofp i32 %55 to float
  %57 = fmul float %56, 1.562500e-02
  %58 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %59 = load i32, i32* %20, align 8
  %60 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %58, i32 %59) #12
  %61 = load float, float* %60, align 4
  %62 = fsub float %61, %38
  %63 = insertelement <2 x float> %15, float %53, i32 1
  %64 = insertelement <2 x float> undef, float %57, i32 0
  %65 = insertelement <2 x float> %64, float %62, i32 1
  br label %77

66:                                               ; preds = %2
  %67 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 3, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to float
  %70 = fmul float %69, 1.562500e-02
  %71 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %72 = load i32, i32* %20, align 8
  %73 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %71, i32 %72) #12
  %74 = load float, float* %73, align 4
  %75 = insertelement <2 x float> undef, float %70, i32 0
  %76 = insertelement <2 x float> %75, float %74, i32 1
  br label %77

77:                                               ; preds = %2, %66, %52, %40, %32, %28
  %78 = phi <2 x float> [ %76, %66 ], [ %51, %40 ], [ %65, %52 ], [ %35, %32 ], [ %31, %28 ], [ zeroinitializer, %2 ]
  %79 = phi <2 x float> [ %16, %66 ], [ %16, %40 ], [ %63, %52 ], [ %34, %32 ], [ %30, %28 ], [ zeroinitializer, %2 ]
  %80 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %79, 0
  %81 = insertvalue { <2 x float>, <2 x float> } %80, <2 x float> %78, 1
  ret { <2 x float>, <2 x float> } %81
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE(%"class.blink::TextDecorationInfo"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.blink::FloatPoint"*
  %5 = alloca %"class.blink::Path", align 8
  %6 = alloca %"class.blink::StrokeData", align 8
  %7 = icmp eq i32 %1, 2
  %8 = zext i1 %7 to i64
  %9 = icmp eq i32 %1, 4
  %10 = select i1 %9, i64 2, i64 %8
  %11 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %10, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %56

14:                                               ; preds = %2
  %15 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %10, i32 0
  %17 = load float, float* %16, align 8
  %18 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 7, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %17, i32 1
  %22 = fadd <2 x float> %20, %21
  store <2 x float> %22, <2 x float>* %3, align 8
  %23 = bitcast %"class.blink::Path"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 3, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sitofp i32 %25 to float
  %27 = fmul float %26, 1.562500e-02
  %28 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %30 = load i32, i32* %29, align 8
  %31 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %28, i32 %30) #12
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = tail call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %34) #12
  %36 = load i32, i32* %29, align 8
  %37 = tail call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %35, i32 %36) #12
  %38 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %37, i64 0, i32 0
  %39 = load i8, i8* %38, align 4
  %40 = lshr i8 %39, 4
  %41 = and i8 %40, 7
  %42 = icmp ult i8 %41, 5
  br i1 %42, label %43, label %47

43:                                               ; preds = %14
  %44 = zext i8 %41 to i64
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE.5, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %43, %14
  %48 = phi i32 [ 1, %14 ], [ %46, %43 ]
  call void @_ZN5blink15GraphicsContext18GetPathForTextLineERKNS_10FloatPointEffNS_11StrokeStyleE(%"class.blink::Path"* nonnull sret %5, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %4, float %27, float %32, i32 %48) #12
  %49 = load i8, i8* %11, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %10, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %50, label %54, label %52

52:                                               ; preds = %47
  %53 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %51, %"class.blink::Path"* nonnull dereferenceable(16) %5) #12
  br label %55

54:                                               ; preds = %47
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* %51, %"class.blink::Path"* nonnull dereferenceable(16) %5) #12
  store i8 1, i8* %11, align 8
  br label %55

55:                                               ; preds = %52, %54
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %56

56:                                               ; preds = %2, %55
  %57 = bitcast %"class.blink::StrokeData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 bitcast ({ i32, float, i32, i32, float, [4 x i8], %class.sk_sp.644 }* @__const._ZNK5blink18TextDecorationInfo13BoundsForWavyENS_14TextDecorationE.stroke_data to i8*), i64 24, i1 false)
  %58 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 0
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 1
  store float 0.000000e+00, float* %59, align 4
  %60 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 3
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 4
  store float 4.000000e+00, float* %62, align 8
  %63 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %6, i64 0, i32 5, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %63, align 8
  %64 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %65 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %64, i32 %66) #12
  %68 = load float, float* %67, align 4
  %69 = call float @llvm.round.f32(float %68)
  store float %69, float* %59, align 4
  %70 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 0
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %70, align 8
  %72 = call dereferenceable(16) %"class.WTF::Vector.253"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %71) #12
  %73 = load i32, i32* %65, align 8
  %74 = call dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"* %72, i32 %73) #12
  %75 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %74, i64 0, i32 0
  %76 = load i8, i8* %75, align 4
  %77 = lshr i8 %76, 4
  %78 = and i8 %77, 7
  %79 = icmp ult i8 %78, 5
  br i1 %79, label %80, label %84

80:                                               ; preds = %56
  %81 = zext i8 %78 to i64
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK5blink18TextDecorationInfo23BoundsForDottedOrDashedENS_14TextDecorationE.5, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %80, %56
  %85 = phi i32 [ 1, %56 ], [ %83, %80 ]
  store i32 %85, i32* %58, align 8
  %86 = load i8, i8* %11, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 %10, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  %91 = call { <2 x float>, <2 x float> } @_ZNK5blink4Path18StrokeBoundingRectERKNS_10StrokeDataE(%"class.blink::Path"* %90, %"class.blink::StrokeData"* nonnull dereferenceable(32) %6) #12
  %92 = load %class.SkPathEffect*, %class.SkPathEffect** %63, align 8
  %93 = icmp eq %class.SkPathEffect* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %92, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %class.SkPathEffect* %92 to %class.SkRefCntBase*
  %100 = bitcast %class.SkPathEffect* %92 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #12
  br label %104

104:                                              ; preds = %89, %94, %98
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #12
  ret { <2 x float>, <2 x float> } %91
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink18TextDecorationInfo13BoundsForWavyENS_14TextDecorationE(%"class.blink::TextDecorationInfo"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::StrokeData", align 8
  %4 = alloca %"class.absl::optional.630", align 8
  %5 = bitcast %"class.blink::StrokeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32, float, i32, i32, float, [4 x i8], %class.sk_sp.644 }* @__const._ZNK5blink18TextDecorationInfo13BoundsForWavyENS_14TextDecorationE.stroke_data to i8*), i64 24, i1 false)
  %6 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 3
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 4
  store float 4.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %3, i64 0, i32 5, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %11, align 8
  %12 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9
  %13 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  %15 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %12, i32 %14) #12
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = bitcast float* %7 to i32*
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZNK5blink18TextDecorationInfo21PrepareWavyStrokePathENS_14TextDecorationE(%"class.absl::optional.630"* nonnull sret %4, %"class.blink::TextDecorationInfo"* %0, i32 %1)
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !6

22:                                               ; preds = %2
  call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %25 = call { <2 x float>, <2 x float> } @_ZNK5blink4Path18StrokeBoundingRectERKNS_10StrokeDataE(%"class.blink::Path"* %24, %"class.blink::StrokeData"* nonnull dereferenceable(32) %3) #12
  %26 = load i8, i8* %19, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %24) #12
  store i8 0, i8* %19, align 8
  br label %29

29:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %30 = load %class.SkPathEffect*, %class.SkPathEffect** %11, align 8
  %31 = icmp eq %class.SkPathEffect* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkPathEffect* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkPathEffect* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %29, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret { <2 x float>, <2 x float> } %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15GraphicsContext18GetPathForTextLineERKNS_10FloatPointEffNS_11StrokeStyleE(%"class.blink::Path"* sret, %"class.blink::FloatPoint"* dereferenceable(8), float, float, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare { <2 x float>, <2 x float> } @_ZNK5blink4Path18StrokeBoundingRectERKNS_10StrokeDataE(%"class.blink::Path"*, %"class.blink::StrokeData"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TextDecorationInfo21PrepareWavyStrokePathENS_14TextDecorationE(%"class.absl::optional.630"* noalias sret, %"class.blink::TextDecorationInfo"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.blink::FloatPoint"*
  %8 = alloca %"class.blink::FloatPoint", align 4
  %9 = alloca %"class.blink::FloatPoint", align 4
  %10 = alloca %"class.blink::FloatPoint", align 4
  %11 = alloca %"class.blink::FloatPoint", align 4
  %12 = alloca %"class.blink::FloatPoint", align 4
  %13 = alloca %"class.blink::FloatPoint", align 4
  %14 = icmp eq i32 %2, 2
  %15 = zext i1 %14 to i64
  %16 = icmp eq i32 %2, 4
  %17 = select i1 %16, i64 2, i64 %15
  %18 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 4, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  %23 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* %24, %"class.blink::Path"* dereferenceable(16) %23) #12
  store i8 1, i8* %22, align 8
  br label %177

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 0
  %27 = load float, float* %26, align 8
  %28 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 7, i32 0
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, 0.000000e+00
  %31 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 7, i32 1
  %32 = load float, float* %31, align 4
  %33 = fadd float %27, %32
  %34 = insertelement <2 x float> undef, float %30, i32 0
  %35 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 1
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = sitofp i32 %38 to float
  %40 = fmul float %36, %39
  %41 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %43 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  %44 = fadd float %33, %40
  %45 = insertelement <2 x float> %34, float %44, i32 1
  store <2 x float> %45, <2 x float>* %4, align 8
  %46 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %48 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 3, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  %52 = fmul float %51, 1.562500e-02
  %53 = fadd float %30, %52
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = insertelement <2 x float> %54, float %44, i32 1
  store <2 x float> %55, <2 x float>* %6, align 8
  %56 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 9
  %57 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 10
  %58 = load i32, i32* %57, align 8
  %59 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %56, i32 %58) #12
  %60 = load float, float* %59, align 4
  call void @_ZN5blink15GraphicsContext27AdjustLineToPixelBoundariesERNS_10FloatPointES2_f(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %5, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %7, float %60) #12
  %61 = load i8, i8* %18, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %25
  %64 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %64) #12
  store i8 0, i8* %18, align 8
  br label %65

65:                                               ; preds = %25, %63
  %66 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %1, i64 0, i32 12, i64 %17, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %66) #12
  store i8 1, i8* %18, align 8
  call void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"* %66, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5) #12
  %67 = load i32, i32* %57, align 8
  %68 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %56, i32 %67) #12
  %69 = load float, float* %68, align 4
  %70 = fcmp ogt float %69, 2.000000e+00
  %71 = select i1 %70, float %69, float 2.000000e+00
  %72 = fmul float %71, 3.000000e+00
  %73 = load i32, i32* %57, align 8
  %74 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"* %56, i32 %73) #12
  %75 = load float, float* %74, align 4
  %76 = fcmp ogt float %75, 2.000000e+00
  %77 = select i1 %76, float %75, float 2.000000e+00
  %78 = fmul float %77, 2.000000e+00
  %79 = load float, float* %42, align 8
  %80 = load float, float* %47, align 8
  %81 = fcmp oeq float %79, %80
  %82 = load float, float* %43, align 4
  br i1 %81, label %83, label %126

83:                                               ; preds = %65
  %84 = load float, float* %48, align 4
  %85 = fcmp olt float %82, %84
  %86 = select i1 %85, float %82, float %84
  %87 = select i1 %85, float %84, float %82
  %88 = fsub float %87, %86
  %89 = fcmp ugt float %88, 0.000000e+00
  br i1 %89, label %90, label %102

90:                                               ; preds = %83
  %91 = fdiv float %88, %78
  %92 = fptoui float %91 to i32
  %93 = uitofp i32 %92 to float
  %94 = fmul float %78, %93
  %95 = add i32 %92, -1
  %96 = uitofp i32 %95 to float
  %97 = fsub float %94, %96
  %98 = fsub float %88, %97
  %99 = fdiv float %98, %93
  %100 = fadd float %78, %99
  %101 = fadd float %72, %99
  br label %102

102:                                              ; preds = %83, %90
  %103 = phi float [ %100, %90 ], [ %78, %83 ]
  %104 = phi float [ %101, %90 ], [ %72, %83 ]
  %105 = bitcast %"class.blink::FloatPoint"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 0, i32 1
  %108 = fadd float %79, %104
  store float %108, float* %106, align 4
  store float 0.000000e+00, float* %107, align 4
  %109 = bitcast %"class.blink::FloatPoint"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #12
  %110 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 0
  %111 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 1
  %112 = fsub float %79, %104
  store float %112, float* %110, align 4
  store float 0.000000e+00, float* %111, align 4
  %113 = fmul float %103, 2.000000e+00
  %114 = fadd float %113, %86
  %115 = fcmp ugt float %114, %87
  br i1 %115, label %168, label %116

116:                                              ; preds = %102
  %117 = bitcast %"class.blink::FloatPoint"* %10 to i8*
  %118 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 1
  br label %120

120:                                              ; preds = %116, %120
  %121 = phi float [ %114, %116 ], [ %124, %120 ]
  %122 = phi float [ %86, %116 ], [ %121, %120 ]
  %123 = fadd float %103, %122
  store float %123, float* %107, align 4
  store float %123, float* %111, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #12
  store float %79, float* %118, align 4
  store float %121, float* %119, align 4
  call void @_ZN5blink4Path16AddBezierCurveToERKNS_10FloatPointES3_S3_(%"class.blink::Path"* %66, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %8, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #12
  %124 = fadd float %113, %121
  %125 = fcmp ugt float %124, %87
  br i1 %125, label %168, label %120

126:                                              ; preds = %65
  %127 = fcmp olt float %79, %80
  %128 = select i1 %127, float %79, float %80
  %129 = select i1 %127, float %80, float %79
  %130 = fsub float %129, %128
  %131 = fcmp ugt float %130, 0.000000e+00
  br i1 %131, label %132, label %144

132:                                              ; preds = %126
  %133 = fdiv float %130, %78
  %134 = fptoui float %133 to i32
  %135 = uitofp i32 %134 to float
  %136 = fmul float %78, %135
  %137 = add i32 %134, -1
  %138 = uitofp i32 %137 to float
  %139 = fsub float %136, %138
  %140 = fsub float %130, %139
  %141 = fdiv float %140, %135
  %142 = fadd float %78, %141
  %143 = fadd float %72, %141
  br label %144

144:                                              ; preds = %126, %132
  %145 = phi float [ %142, %132 ], [ %78, %126 ]
  %146 = phi float [ %143, %132 ], [ %72, %126 ]
  %147 = bitcast %"class.blink::FloatPoint"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #12
  %148 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %11, i64 0, i32 0
  %149 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %11, i64 0, i32 1
  %150 = fadd float %82, %146
  store float 0.000000e+00, float* %148, align 4
  store float %150, float* %149, align 4
  %151 = bitcast %"class.blink::FloatPoint"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #12
  %152 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %12, i64 0, i32 0
  %153 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %12, i64 0, i32 1
  %154 = fsub float %82, %146
  store float 0.000000e+00, float* %152, align 4
  store float %154, float* %153, align 4
  %155 = fmul float %145, 2.000000e+00
  %156 = fadd float %155, %128
  %157 = fcmp ugt float %156, %129
  br i1 %157, label %168, label %158

158:                                              ; preds = %144
  %159 = bitcast %"class.blink::FloatPoint"* %13 to i8*
  %160 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 0
  %161 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 1
  br label %162

162:                                              ; preds = %158, %162
  %163 = phi float [ %156, %158 ], [ %166, %162 ]
  %164 = phi float [ %128, %158 ], [ %163, %162 ]
  %165 = fadd float %145, %164
  store float %165, float* %148, align 4
  store float %165, float* %152, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #12
  store float %163, float* %160, align 4
  store float %82, float* %161, align 4
  call void @_ZN5blink4Path16AddBezierCurveToERKNS_10FloatPointES3_S3_(%"class.blink::Path"* %66, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %11, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %12, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #12
  %166 = fadd float %155, %163
  %167 = fcmp ugt float %166, %129
  br i1 %167, label %168, label %162

168:                                              ; preds = %162, %120, %144, %102
  %169 = phi i8* [ %109, %102 ], [ %151, %144 ], [ %109, %120 ], [ %151, %162 ]
  %170 = phi i8* [ %105, %102 ], [ %147, %144 ], [ %105, %120 ], [ %147, %162 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #12
  %171 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 24, i1 false) #12
  %172 = load i8, i8* %18, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.absl::optional.630", %"class.absl::optional.630"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* %175, %"class.blink::Path"* dereferenceable(16) %66) #12
  store i8 1, i8* %171, align 8
  br label %176

176:                                              ; preds = %168, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  br label %177

177:                                              ; preds = %176, %21
  ret void
}

declare void @_ZN5blink15GraphicsContext27AdjustLineToPixelBoundariesERNS_10FloatPointES2_f(%"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), float) local_unnamed_addr #2

declare void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4Path16AddBezierCurveToERKNS_10FloatPointES3_S3_(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

declare float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.625"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.625"*, float* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp ugt float* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds float, float* %7, i64 %10
  %12 = icmp ugt float* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq float* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.625"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to float*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load float*, float** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne float* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast float* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.625"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.625"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to float*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint float* %1 to i64
  %56 = ptrtoint float* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.625", %"class.WTF::Vector.625"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq float* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.625"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load float*, float** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne float* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast float* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.625"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.625"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to float*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi float* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds float, float* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi float* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi float* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds float, float* %100, i64 %103
  %105 = bitcast float* %101 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = bitcast float* %104 to i32*
  store i32 %106, i32* %107, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(28) %"class.blink::AppliedTextDecoration"* @_ZNK3WTF6VectorIN5blink21AppliedTextDecorationELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.253"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.253", %"class.WTF::Vector.253"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %24, i64 %25
  ret %"class.blink::AppliedTextDecoration"* %26
}

declare dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink21AppliedTextDecoration9ThicknessEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink21AppliedTextDecoration9ThicknessEv"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!"branch_weights", i32 2000, i32 1}
