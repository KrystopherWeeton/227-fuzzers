; ModuleID = '../../third_party/blink/renderer/core/xml/xpath_parser.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xpath_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::xpath::Parser" = type { %"class.blink::xpath::Expression"*, i8, i32, %"class.WTF::String", i32, %"class.blink::XPathNSResolver"* }
%"class.blink::xpath::Expression" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8, [5 x i8] }>
%"class.blink::xpath::ParseNode" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::xpath::Expression"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::XPathNSResolver" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<WTF::String, blink::xpath::Step::Axis, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::xpath::Step::Axis>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<WTF::String, blink::xpath::Step::Axis, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::xpath::Step::Axis>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%struct.AxisName = type { i8*, i32 }
%"class.WTF::StaticSingleton.28" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"struct.blink::xpath::Token" = type <{ i32, [4 x i8], %"class.WTF::String", i32, i32, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.5", %"class.WTF::String" }
%"class.WTF::StringAppend.5" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter.45" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashTable.33" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.43" = type { %"class.WTF::StringTypeAdapter.44" }
%"class.WTF::StringTypeAdapter.44" = type { %"class.WTF::StringView" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::TraceWrapperV8Reference.6" = type { %"class.v8::TracedReference.7" }
%"class.v8::TracedReference.7" = type { %"class.v8::BasicTracedReference.8" }
%"class.v8::BasicTracedReference.8" = type { %"class.v8::TracedReferenceBase" }
%"class.xpathyy::YyParser" = type { i32 (...)**, %"class.xpathyy::YyParser::stack", %"class.blink::xpath::Parser"* }
%"class.xpathyy::YyParser::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"*, %"class.std::__1::__compressed_pair" }
%"struct.xpathyy::YyParser::stack_symbol_type" = type { %"struct.xpathyy::YyParser::basic_symbol" }
%"struct.xpathyy::YyParser::basic_symbol" = type { %"struct.xpathyy::YyParser::by_state", %"class.xpathyy::YyParser::semantic_type" }
%"struct.xpathyy::YyParser::by_state" = type { i8 }
%"class.xpathyy::YyParser::semantic_type" = type { %union.anon }
%union.anon = type { x86_fp80 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.xpathyy::YyParser::stack_symbol_type"* }
%"class.WTF::StringAppend.10" = type { %"class.WTF::StringAppend.11", i8* }
%"class.WTF::StringAppend.11" = type { i8*, %"class.WTF::String" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKPKcRKS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath4Step4AxisEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKPKcRKS8_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

@_ZN5blink5xpath6Parser15current_parser_E = hidden local_unnamed_addr global %"class.blink::xpath::Parser"* null, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c":*\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"processing-instruction\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"The string '\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"' contains unresolvable namespaces.\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"' is not a valid XPath expression.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names = internal global i64 0, align 8
@_ZZN5blink5xpathL17SetUpAxisNamesMapERN3WTF7HashMapINS1_6StringENS0_4Step4AxisENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEE13kAxisNameList = internal constant [13 x %struct.AxisName] [%struct.AxisName { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i32 0 }, %struct.AxisName { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i32 1 }, %struct.AxisName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i32 2 }, %struct.AxisName { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i32 3 }, %struct.AxisName { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i32 4 }, %struct.AxisName { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i32 5 }, %struct.AxisName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i32 6 }, %struct.AxisName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0), i32 7 }, %struct.AxisName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i32 8 }, %struct.AxisName { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i32 9 }, %struct.AxisName { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), i32 10 }, %struct.AxisName { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i32 0, i32 0), i32 11 }, %struct.AxisName { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 12 }], align 16
@.str.12 = private unnamed_addr constant [9 x i8] c"ancestor\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"ancestor-or-self\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"attribute\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"child\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"descendant\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"descendant-or-self\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"following\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"following-sibling\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"preceding\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"preceding-sibling\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.26 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink5xpath4Step4AxisEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::xpath::Step::Axis>]\00", align 1
@_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names = internal global %"class.WTF::StaticSingleton.28" zeroinitializer, align 8
@_ZGVZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names = internal global i64 0, align 8
@.str.27 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.30 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.32 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink5xpath6ParserC1Ev = hidden unnamed_addr alias void (%"class.blink::xpath::Parser"*), void (%"class.blink::xpath::Parser"*)* @_ZN5blink5xpath6ParserC2Ev
@_ZN5blink5xpath6ParserD1Ev = hidden unnamed_addr alias void (%"class.blink::xpath::Parser"*), void (%"class.blink::xpath::Parser"*)* @_ZN5blink5xpath6ParserD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink5xpath6Parser23IsBinaryOperatorContextEv(%"class.blink::xpath::Parser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 0, label %5
    i32 64, label %5
    i32 265, label %5
    i32 40, label %5
    i32 91, label %5
    i32 44, label %5
    i32 264, label %5
    i32 263, label %5
    i32 258, label %5
    i32 47, label %5
    i32 273, label %5
    i32 124, label %5
    i32 261, label %5
    i32 262, label %5
    i32 259, label %5
    i32 260, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ true, %4 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser6SkipWSEv(%"class.blink::xpath::Parser"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  br label %8

8:                                                ; preds = %6, %34
  %9 = phi i32 [ %36, %34 ], [ %7, %6 ]
  %10 = phi %"class.WTF::StringImpl"* [ %37, %34 ], [ %4, %6 ]
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %9, %12
  br i1 %13, label %14, label %39

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  br i1 %18, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  %22 = zext i32 %9 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i16
  br label %31

26:                                               ; preds = %14
  %27 = bitcast %"class.WTF::StringImpl"* %19 to i16*
  %28 = zext i32 %9 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %20, %26
  %32 = phi i16 [ %25, %20 ], [ %30, %26 ]
  %33 = tail call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %32) #11
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = load i32, i32* %2, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %2, align 4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %8

39:                                               ; preds = %31, %8, %34, %1
  ret void
}

declare zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii(%"struct.blink::xpath::Token"* noalias nocapture sret, %"class.blink::xpath::Parser"* nocapture, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, %3
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_9NumericOp6OpcodeEi(%"struct.blink::xpath::Token"* noalias nocapture sret, %"class.blink::xpath::Parser"* nocapture, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 4
  store i32 %3, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi(%"struct.blink::xpath::Token"* noalias nocapture sret, %"class.blink::xpath::Parser"* nocapture, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 %3, i32* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN5blink5xpath6Parser15PeekAheadHelperEv(%"class.blink::xpath::Parser"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %4, %10
  br i1 %11, label %12, label %34

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  br i1 %16, label %24, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.WTF::StringImpl"* %17 to i8*
  %20 = zext i32 %4 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  br label %29

24:                                               ; preds = %12
  %25 = bitcast %"class.WTF::StringImpl"* %17 to i16*
  %26 = zext i32 %4 to i64
  %27 = getelementptr inbounds i16, i16* %25, i64 %26
  %28 = load i16, i16* %27, align 2
  br label %29

29:                                               ; preds = %18, %24
  %30 = phi i16 [ %23, %18 ], [ %28, %24 ]
  %31 = icmp ugt i16 %30, 254
  %32 = trunc i16 %30 to i8
  %33 = select i1 %31, i8 0, i8 %32
  ret i8 %33

34:                                               ; preds = %1, %8
  ret i8 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN5blink5xpath6Parser13PeekCurHelperEv(%"class.blink::xpath::Parser"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %3, %9
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %15, label %23, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %19 = zext i32 %3 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  br label %28

23:                                               ; preds = %11
  %24 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %25 = zext i32 %3 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  %27 = load i16, i16* %26, align 2
  br label %28

28:                                               ; preds = %17, %23
  %29 = phi i16 [ %22, %17 ], [ %27, %23 ]
  %30 = icmp ugt i16 %29, 254
  %31 = trunc i16 %29 to i8
  %32 = select i1 %30, i8 0, i8 %31
  ret i8 %32

33:                                               ; preds = %1, %7
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser9LexStringEv(%"struct.blink::xpath::Token"* noalias nocapture sret, %"class.blink::xpath::Parser"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, %6
  br i1 %13, label %14, label %31

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  br i1 %18, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  %22 = zext i32 %6 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i16
  br label %31

26:                                               ; preds = %14
  %27 = bitcast %"class.WTF::StringImpl"* %19 to i16*
  %28 = zext i32 %6 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %2, %10, %20, %26
  %32 = phi i16 [ 0, %10 ], [ 0, %2 ], [ %25, %20 ], [ %30, %26 ]
  %33 = add i32 %6, 1
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %37 = bitcast %"class.WTF::StringImpl"* %36 to i8*
  %38 = bitcast %"class.WTF::StringImpl"* %36 to i16*
  %39 = zext i32 %33 to i64
  br label %40

40:                                               ; preds = %113, %31
  %41 = phi i64 [ %114, %113 ], [ %39, %31 ]
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %5, align 4
  br i1 %9, label %45, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %34, align 4
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i32 [ %44, %43 ], [ 0, %40 ]
  %47 = zext i32 %46 to i64
  %48 = icmp ult i64 %41, %47
  br i1 %48, label %49, label %115

49:                                               ; preds = %45
  br i1 %9, label %65, label %50

50:                                               ; preds = %49
  %51 = load i32, i32* %34, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %41, %52
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = load atomic i32, i32* %35 monotonic, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %37, i64 %41
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  br label %65

62:                                               ; preds = %54
  %63 = getelementptr inbounds i16, i16* %38, i64 %41
  %64 = load i16, i16* %63, align 2
  br label %65

65:                                               ; preds = %49, %50, %58, %62
  %66 = phi i16 [ 0, %50 ], [ 0, %49 ], [ %61, %58 ], [ %64, %62 ]
  %67 = icmp eq i16 %66, %32
  br i1 %67, label %68, label %113

68:                                               ; preds = %65
  %69 = trunc i64 %41 to i32
  %70 = sub i32 %69, %33
  %71 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %4, i32 %33, i32 %70) #11
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #11
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  br label %77

77:                                               ; preds = %73, %68
  %78 = phi %"class.WTF::StringImpl"* [ %76, %73 ], [ %71, %68 ]
  %79 = load i32, i32* %5, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %5, align 4
  %81 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 269, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %82, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %83, label %118, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %101

91:                                               ; preds = %84
  %92 = zext i32 %90 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #11
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %91
  call void @llvm.trap() #11
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %89, align 4
  br label %101

101:                                              ; preds = %84, %99
  %102 = phi i32 [ %100, %99 ], [ %90, %84 ]
  %103 = load atomic i32, i32* %85 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %108 = add i32 %102, -1
  store i32 %108, i32* %107, align 4
  br label %109

109:                                              ; preds = %106, %101
  %110 = phi i32 [ %108, %106 ], [ %102, %101 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #11
  br label %118

113:                                              ; preds = %65
  %114 = add nuw nsw i64 %41, 1
  br label %40

115:                                              ; preds = %45
  %116 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 275, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  br label %118

118:                                              ; preds = %112, %109, %77, %115
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser9LexNumberEv(%"struct.blink::xpath::Token"* noalias nocapture sret, %"class.blink::xpath::Parser"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %14 = bitcast %"class.WTF::StringImpl"* %13 to i8*
  %15 = bitcast %"class.WTF::StringImpl"* %13 to i16*
  %16 = load i32, i32* %11, align 4
  %17 = icmp ult i32 %4, %16
  br i1 %17, label %18, label %49

18:                                               ; preds = %9, %42
  %19 = phi i8 [ %43, %42 ], [ 0, %9 ]
  %20 = phi i64 [ %44, %42 ], [ %10, %9 ]
  %21 = load atomic i32, i32* %12 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds i8, i8* %14, i64 %20
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  br label %31

28:                                               ; preds = %18
  %29 = getelementptr inbounds i16, i16* %15, i64 %20
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i16 [ %27, %24 ], [ %30, %28 ]
  %33 = icmp ugt i16 %32, 254
  br i1 %33, label %49, label %34

34:                                               ; preds = %31
  %35 = add nsw i16 %32, -48
  %36 = icmp ugt i16 %35, 9
  br i1 %36, label %37, label %42

37:                                               ; preds = %34
  %38 = icmp eq i16 %32, 46
  %39 = and i8 %19, 1
  %40 = icmp eq i8 %39, 0
  %41 = and i1 %40, %38
  br i1 %41, label %42, label %49

42:                                               ; preds = %37, %34
  %43 = phi i8 [ %19, %34 ], [ 1, %37 ]
  %44 = add nuw nsw i64 %20, 1
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %3, align 4
  %46 = load i32, i32* %11, align 4
  %47 = zext i32 %46 to i64
  %48 = icmp ult i64 %44, %47
  br i1 %48, label %18, label %49

49:                                               ; preds = %42, %31, %37, %9
  %50 = phi i64 [ %10, %9 ], [ %44, %42 ], [ %20, %31 ], [ %20, %37 ]
  %51 = trunc i64 %50 to i32
  br label %52

52:                                               ; preds = %49, %2
  %53 = phi i32 [ %4, %2 ], [ %51, %49 ]
  %54 = sub i32 %53, %4
  %55 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %5, i32 %4, i32 %54) #11
  %56 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 271, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %57, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %76

66:                                               ; preds = %59
  %67 = zext i32 %65 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #11
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !2

73:                                               ; preds = %66
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %66
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %64, align 4
  br label %76

76:                                               ; preds = %59, %74
  %77 = phi i32 [ %75, %74 ], [ %65, %59 ]
  %78 = load atomic i32, i32* %60 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %83 = add i32 %77, -1
  store i32 %83, i32* %82, align 4
  br label %84

84:                                               ; preds = %81, %76
  %85 = phi i32 [ %83, %81 ], [ %77, %76 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %88

88:                                               ; preds = %52, %84, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5xpath6Parser9LexNCNameERN3WTF6StringE(%"class.blink::xpath::Parser"*, %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %107, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %4, %11
  br i1 %12, label %13, label %107

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  br i1 %17, label %25, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::StringImpl"* %18 to i8*
  %21 = zext i32 %4 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  br label %30

25:                                               ; preds = %13
  %26 = bitcast %"class.WTF::StringImpl"* %18 to i16*
  %27 = zext i32 %4 to i64
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi i16 [ %24, %19 ], [ %29, %25 ]
  switch i16 %31, label %32 [
    i16 95, label %42
    i16 46, label %107
    i16 45, label %107
  ]

32:                                               ; preds = %30
  %33 = zext i16 %31 to i32
  %34 = tail call signext i8 @u_charType_69(i32 %33) #11
  %35 = sext i8 %34 to i32
  %36 = shl i32 1, %35
  %37 = and i32 %36, 1070
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %107, label %39

39:                                               ; preds = %32
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %85, label %42

42:                                               ; preds = %30, %39
  %43 = phi %"class.WTF::StringImpl"* [ %40, %39 ], [ %7, %30 ]
  %44 = load i32, i32* %3, align 4
  br label %45

45:                                               ; preds = %42, %80
  %46 = phi %"class.WTF::StringImpl"* [ %81, %80 ], [ %43, %42 ]
  %47 = phi i32 [ %83, %80 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp ult i32 %47, %49
  br i1 %50, label %51, label %85

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  br i1 %55, label %63, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.WTF::StringImpl"* %56 to i8*
  %59 = zext i32 %47 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i16
  br label %68

63:                                               ; preds = %51
  %64 = bitcast %"class.WTF::StringImpl"* %56 to i16*
  %65 = zext i32 %47 to i64
  %66 = getelementptr inbounds i16, i16* %64, i64 %65
  %67 = load i16, i16* %66, align 2
  br label %68

68:                                               ; preds = %57, %63
  %69 = phi i16 [ %62, %57 ], [ %67, %63 ]
  switch i16 %69, label %70 [
    i16 95, label %80
    i16 46, label %80
    i16 45, label %80
  ]

70:                                               ; preds = %68
  %71 = zext i16 %69 to i32
  %72 = tail call signext i8 @u_charType_69(i32 %71) #11
  %73 = sext i8 %72 to i32
  %74 = shl i32 1, %73
  %75 = and i32 %74, 2046
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %70
  %78 = load i32, i32* %3, align 4
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %80

80:                                               ; preds = %77, %68, %68, %68
  %81 = phi %"class.WTF::StringImpl"* [ %79, %77 ], [ %46, %68 ], [ %46, %68 ], [ %46, %68 ]
  %82 = phi i32 [ %78, %77 ], [ %47, %68 ], [ %47, %68 ], [ %47, %68 ]
  %83 = add i32 %82, 1
  store i32 %83, i32* %3, align 4
  %84 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %84, label %85, label %45

85:                                               ; preds = %45, %80, %70, %39
  %86 = load i32, i32* %3, align 4
  %87 = sub i32 %86, %4
  %88 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %5, i32 %4, i32 %87) #11
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %90 = bitcast %"class.WTF::String"* %1 to i64*
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %89, i64* %90, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #11
  br label %107

107:                                              ; preds = %32, %30, %30, %2, %85, %103, %106, %9
  %108 = phi i1 [ false, %9 ], [ true, %106 ], [ true, %103 ], [ true, %85 ], [ false, %2 ], [ false, %30 ], [ false, %30 ], [ false, %32 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5xpath6Parser8LexQNameERN3WTF6StringE(%"class.blink::xpath::Parser"*, %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringAppend.5", align 8
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = call zeroext i1 @_ZN5blink5xpath6Parser9LexNCNameERN3WTF6StringE(%"class.blink::xpath::Parser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  br i1 %9, label %10, label %287

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %82, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* %11, align 4
  br label %17

17:                                               ; preds = %43, %15
  %18 = phi i32 [ %45, %43 ], [ %16, %15 ]
  %19 = phi %"class.WTF::StringImpl"* [ %46, %43 ], [ %13, %15 ]
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %18, %21
  br i1 %22, label %23, label %52

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  br i1 %27, label %35, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  %31 = zext i32 %18 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  br label %40

35:                                               ; preds = %23
  %36 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  %37 = zext i32 %18 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = load i16, i16* %38, align 2
  br label %40

40:                                               ; preds = %35, %29
  %41 = phi i16 [ %34, %29 ], [ %39, %35 ]
  %42 = tail call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %41) #11
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  %44 = load i32, i32* %11, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %11, align 4
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %82, label %17

48:                                               ; preds = %40
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %50 = load i32, i32* %11, align 4
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %17, %48
  %53 = phi i32 [ %50, %48 ], [ %18, %17 ]
  %54 = phi %"class.WTF::StringImpl"* [ %49, %48 ], [ %19, %17 ]
  %55 = add i32 %53, 1
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  br i1 %58, label %59, label %82

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  br i1 %63, label %71, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.WTF::StringImpl"* %64 to i8*
  %67 = zext i32 %55 to i64
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  br label %76

71:                                               ; preds = %59
  %72 = bitcast %"class.WTF::StringImpl"* %64 to i16*
  %73 = zext i32 %55 to i64
  %74 = getelementptr inbounds i16, i16* %72, i64 %73
  %75 = load i16, i16* %74, align 2
  br label %76

76:                                               ; preds = %71, %65
  %77 = phi i16 [ %70, %65 ], [ %75, %71 ]
  %78 = icmp ult i16 %77, 255
  %79 = trunc i16 %77 to i8
  %80 = icmp eq i8 %79, 58
  %81 = and i1 %78, %80
  br i1 %81, label %121, label %82

82:                                               ; preds = %43, %76, %10, %48, %52
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %102, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %102

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #11
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  tail call void @llvm.trap() #11
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %102

102:                                              ; preds = %100, %85, %82
  %103 = ptrtoint %"class.WTF::StringImpl"* %83 to i64
  %104 = bitcast %"class.WTF::String"* %1 to i64*
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  store i64 %103, i64* %104, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %287, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %287

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #11
  br label %287

121:                                              ; preds = %76
  %122 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #11
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %124 = call zeroext i1 @_ZN5blink5xpath6Parser9LexNCNameERN3WTF6StringE(%"class.blink::xpath::Parser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  br label %269

127:                                              ; preds = %121
  %128 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #11
  %129 = bitcast %"class.WTF::StringAppend.5"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #11
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %176, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %149

139:                                              ; preds = %132
  %140 = zext i32 %138 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #11
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %139
  tail call void @llvm.trap() #11
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %137, align 4
  br label %149

149:                                              ; preds = %132, %147
  %150 = phi i32 [ %148, %147 ], [ %138, %132 ]
  %151 = load atomic i32, i32* %133 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  br i1 %153, label %155, label %165

155:                                              ; preds = %149
  %156 = zext i32 %150 to i33
  %157 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #11
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !2

162:                                              ; preds = %155
  tail call void @llvm.trap() #11
  unreachable

163:                                              ; preds = %155
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %154, align 4
  br label %165

165:                                              ; preds = %163, %149
  %166 = phi i32 [ %164, %163 ], [ %150, %149 ]
  %167 = load atomic i32, i32* %133 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = add i32 %166, -1
  store i32 %171, i32* %154, align 4
  br label %172

172:                                              ; preds = %170, %165
  %173 = phi i32 [ %171, %170 ], [ %166, %165 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #11
  br label %176

176:                                              ; preds = %127, %172, %175
  %177 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %178, align 8
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %198, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #11
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !2

195:                                              ; preds = %186
  tail call void @llvm.trap() #11
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %176, %181, %196
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %5, %"class.WTF::StringAppend.5"* nonnull dereferenceable(16) %6, %"class.WTF::StringImpl"* %179)
  %199 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %200 = ptrtoint %"class.WTF::StringImpl"* %199 to i64
  %201 = bitcast %"class.WTF::String"* %1 to i64*
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  store i64 %200, i64* %201, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #11
  br label %218

218:                                              ; preds = %217, %214, %198
  %219 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #11
  br label %235

235:                                              ; preds = %234, %231, %218
  %236 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #11
  br label %252

252:                                              ; preds = %235, %248, %251
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #11
  br label %268

268:                                              ; preds = %252, %264, %267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #11
  br label %269

269:                                              ; preds = %125, %268
  %270 = phi %"class.WTF::StringImpl"* [ %179, %268 ], [ %126, %125 ]
  %271 = phi i1 [ true, %268 ], [ false, %125 ]
  %272 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #11
  br label %286

286:                                              ; preds = %269, %282, %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #11
  br label %287

287:                                              ; preds = %120, %117, %102, %2, %286
  %288 = phi i1 [ %271, %286 ], [ false, %2 ], [ true, %102 ], [ true, %117 ], [ true, %120 ]
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #11
  br label %304

304:                                              ; preds = %287, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret i1 %288
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.5"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #11
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #11
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #11
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.45"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %2, i8* %14) #11
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #11
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #11
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #11
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #11
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #11
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser17NextTokenInternalEv(%"struct.blink::xpath::Token"* noalias sret, %"class.blink::xpath::Parser"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca [4 x %"class.WTF::String"], align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend.5", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::StringAppend.5", align 8
  %21 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %2
  %26 = load i32, i32* %21, align 4
  br label %27

27:                                               ; preds = %53, %25
  %28 = phi i32 [ %55, %53 ], [ %26, %25 ]
  %29 = phi %"class.WTF::StringImpl"* [ %56, %53 ], [ %23, %25 ]
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %28, %31
  br i1 %32, label %33, label %61

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  br i1 %37, label %45, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.WTF::StringImpl"* %38 to i8*
  %41 = zext i32 %28 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  br label %50

45:                                               ; preds = %33
  %46 = bitcast %"class.WTF::StringImpl"* %38 to i16*
  %47 = zext i32 %28 to i64
  %48 = getelementptr inbounds i16, i16* %46, i64 %47
  %49 = load i16, i16* %48, align 2
  br label %50

50:                                               ; preds = %45, %39
  %51 = phi i16 [ %44, %39 ], [ %49, %45 ]
  %52 = tail call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %51) #11
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = load i32, i32* %21, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %21, align 4
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %67, label %27

58:                                               ; preds = %50
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %27, %58
  %62 = phi %"class.WTF::StringImpl"* [ %59, %58 ], [ %29, %27 ]
  %63 = load i32, i32* %21, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp ult i32 %63, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %53, %2, %58, %61
  %68 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  br label %1318

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  br i1 %74, label %82, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %78 = zext i32 %63 to i64
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  br label %87

82:                                               ; preds = %70
  %83 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %84 = zext i32 %63 to i64
  %85 = getelementptr inbounds i16, i16* %83, i64 %84
  %86 = load i16, i16* %85, align 2
  br label %87

87:                                               ; preds = %76, %82
  %88 = phi i16 [ %81, %76 ], [ %86, %82 ]
  %89 = icmp ugt i16 %88, 254
  %90 = zext i16 %88 to i32
  %91 = shl i32 %90, 24
  %92 = ashr exact i32 %91, 24
  %93 = select i1 %89, i32 0, i32 %92
  switch i32 %93, label %373 [
    i32 40, label %94
    i32 41, label %94
    i32 91, label %94
    i32 93, label %94
    i32 64, label %94
    i32 44, label %94
    i32 124, label %94
    i32 39, label %98
    i32 34, label %98
    i32 48, label %99
    i32 49, label %99
    i32 50, label %99
    i32 51, label %99
    i32 52, label %99
    i32 53, label %99
    i32 54, label %99
    i32 55, label %99
    i32 56, label %99
    i32 57, label %99
    i32 46, label %100
    i32 47, label %135
    i32 43, label %166
    i32 45, label %170
    i32 61, label %174
    i32 33, label %179
    i32 60, label %211
    i32 62, label %244
    i32 42, label %277
    i32 36, label %327
  ]

94:                                               ; preds = %87, %87, %87, %87, %87, %87, %87
  %95 = add nuw i32 %63, 1
  store i32 %95, i32* %21, align 4, !noalias !3
  %96 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 %93, i32* %96, align 8, !alias.scope !3
  %97 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8, !alias.scope !3
  br label %1318

98:                                               ; preds = %87, %87
  tail call void @_ZN5blink5xpath6Parser9LexStringEv(%"struct.blink::xpath::Token"* sret %0, %"class.blink::xpath::Parser"* %1)
  br label %1318

99:                                               ; preds = %87, %87, %87, %87, %87, %87, %87, %87, %87, %87
  tail call void @_ZN5blink5xpath6Parser9LexNumberEv(%"struct.blink::xpath::Token"* sret %0, %"class.blink::xpath::Parser"* %1)
  br label %1318

100:                                              ; preds = %87
  %101 = add nuw i32 %63, 1
  %102 = icmp ult i32 %101, %65
  br i1 %102, label %103, label %132

103:                                              ; preds = %100
  %104 = load atomic i32, i32* %71 monotonic, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %109 = zext i32 %101 to i64
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i16
  br label %118

113:                                              ; preds = %103
  %114 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %115 = zext i32 %101 to i64
  %116 = getelementptr inbounds i16, i16* %114, i64 %115
  %117 = load i16, i16* %116, align 2
  br label %118

118:                                              ; preds = %113, %107
  %119 = phi i16 [ %112, %107 ], [ %117, %113 ]
  %120 = icmp ugt i16 %119, 254
  %121 = trunc i16 %119 to i8
  br i1 %120, label %132, label %122

122:                                              ; preds = %118
  %123 = icmp eq i8 %121, 46
  br i1 %123, label %124, label %128

124:                                              ; preds = %122
  %125 = add nuw i32 %63, 2
  store i32 %125, i32* %21, align 4, !noalias !6
  %126 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 272, i32* %126, align 8, !alias.scope !6
  %127 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8, !alias.scope !6
  br label %1318

128:                                              ; preds = %122
  %129 = add i8 %121, -48
  %130 = icmp ult i8 %129, 10
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  tail call void @_ZN5blink5xpath6Parser9LexNumberEv(%"struct.blink::xpath::Token"* sret %0, %"class.blink::xpath::Parser"* %1)
  br label %1318

132:                                              ; preds = %100, %118, %128
  store i32 %101, i32* %21, align 4, !noalias !9
  %133 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 46, i32* %133, align 8, !alias.scope !9
  %134 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %134, align 8, !alias.scope !9
  br label %1318

135:                                              ; preds = %87
  %136 = add nuw i32 %63, 1
  %137 = icmp ult i32 %136, %65
  br i1 %137, label %138, label %163

138:                                              ; preds = %135
  %139 = load atomic i32, i32* %71 monotonic, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %144 = zext i32 %136 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i16
  br label %153

148:                                              ; preds = %138
  %149 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %150 = zext i32 %136 to i64
  %151 = getelementptr inbounds i16, i16* %149, i64 %150
  %152 = load i16, i16* %151, align 2
  br label %153

153:                                              ; preds = %148, %142
  %154 = phi i16 [ %147, %142 ], [ %152, %148 ]
  %155 = icmp ult i16 %154, 255
  %156 = trunc i16 %154 to i8
  %157 = icmp eq i8 %156, 47
  %158 = and i1 %155, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %153
  %160 = add nuw i32 %63, 2
  store i32 %160, i32* %21, align 4, !noalias !12
  %161 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 273, i32* %161, align 8, !alias.scope !12
  %162 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %162, align 8, !alias.scope !12
  br label %1318

163:                                              ; preds = %153, %135
  store i32 %136, i32* %21, align 4, !noalias !15
  %164 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 47, i32* %164, align 8, !alias.scope !15
  %165 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %165, align 8, !alias.scope !15
  br label %1318

166:                                              ; preds = %87
  %167 = add nuw i32 %63, 1
  store i32 %167, i32* %21, align 4, !noalias !18
  %168 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 261, i32* %168, align 8, !alias.scope !18
  %169 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %169, align 8, !alias.scope !18
  br label %1318

170:                                              ; preds = %87
  %171 = add nuw i32 %63, 1
  store i32 %171, i32* %21, align 4, !noalias !21
  %172 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 262, i32* %172, align 8, !alias.scope !21
  %173 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %173, align 8, !alias.scope !21
  br label %1318

174:                                              ; preds = %87
  %175 = add nuw i32 %63, 1
  store i32 %175, i32* %21, align 4, !noalias !24
  %176 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 259, i32* %176, align 8, !alias.scope !24
  %177 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8, !alias.scope !24
  %178 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 0, i32* %178, align 8, !alias.scope !24
  br label %1318

179:                                              ; preds = %87
  %180 = add nuw i32 %63, 1
  %181 = icmp ult i32 %180, %65
  br i1 %181, label %182, label %208

182:                                              ; preds = %179
  %183 = load atomic i32, i32* %71 monotonic, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %192, label %186

186:                                              ; preds = %182
  %187 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %188 = zext i32 %180 to i64
  %189 = getelementptr inbounds i8, i8* %187, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i16
  br label %197

192:                                              ; preds = %182
  %193 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %194 = zext i32 %180 to i64
  %195 = getelementptr inbounds i16, i16* %193, i64 %194
  %196 = load i16, i16* %195, align 2
  br label %197

197:                                              ; preds = %192, %186
  %198 = phi i16 [ %191, %186 ], [ %196, %192 ]
  %199 = icmp ult i16 %198, 255
  %200 = trunc i16 %198 to i8
  %201 = icmp eq i8 %200, 61
  %202 = and i1 %199, %201
  br i1 %202, label %203, label %208

203:                                              ; preds = %197
  %204 = add nuw i32 %63, 2
  store i32 %204, i32* %21, align 4, !noalias !27
  %205 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 259, i32* %205, align 8, !alias.scope !27
  %206 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %206, align 8, !alias.scope !27
  %207 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 1, i32* %207, align 8, !alias.scope !27
  br label %1318

208:                                              ; preds = %197, %179
  %209 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 275, i32* %209, align 8
  %210 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %210, align 8
  br label %1318

211:                                              ; preds = %87
  %212 = add nuw i32 %63, 1
  %213 = icmp ult i32 %212, %65
  br i1 %213, label %214, label %240

214:                                              ; preds = %211
  %215 = load atomic i32, i32* %71 monotonic, align 4
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %224, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %220 = zext i32 %212 to i64
  %221 = getelementptr inbounds i8, i8* %219, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i16
  br label %229

224:                                              ; preds = %214
  %225 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %226 = zext i32 %212 to i64
  %227 = getelementptr inbounds i16, i16* %225, i64 %226
  %228 = load i16, i16* %227, align 2
  br label %229

229:                                              ; preds = %224, %218
  %230 = phi i16 [ %223, %218 ], [ %228, %224 ]
  %231 = icmp ult i16 %230, 255
  %232 = trunc i16 %230 to i8
  %233 = icmp eq i8 %232, 61
  %234 = and i1 %231, %233
  br i1 %234, label %235, label %240

235:                                              ; preds = %229
  %236 = add nuw i32 %63, 2
  store i32 %236, i32* %21, align 4, !noalias !30
  %237 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 260, i32* %237, align 8, !alias.scope !30
  %238 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %238, align 8, !alias.scope !30
  %239 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 5, i32* %239, align 8, !alias.scope !30
  br label %1318

240:                                              ; preds = %229, %211
  store i32 %212, i32* %21, align 4, !noalias !33
  %241 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 260, i32* %241, align 8, !alias.scope !33
  %242 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %242, align 8, !alias.scope !33
  %243 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 3, i32* %243, align 8, !alias.scope !33
  br label %1318

244:                                              ; preds = %87
  %245 = add nuw i32 %63, 1
  %246 = icmp ult i32 %245, %65
  br i1 %246, label %247, label %273

247:                                              ; preds = %244
  %248 = load atomic i32, i32* %71 monotonic, align 4
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %257, label %251

251:                                              ; preds = %247
  %252 = bitcast %"class.WTF::StringImpl"* %75 to i8*
  %253 = zext i32 %245 to i64
  %254 = getelementptr inbounds i8, i8* %252, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i16
  br label %262

257:                                              ; preds = %247
  %258 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %259 = zext i32 %245 to i64
  %260 = getelementptr inbounds i16, i16* %258, i64 %259
  %261 = load i16, i16* %260, align 2
  br label %262

262:                                              ; preds = %257, %251
  %263 = phi i16 [ %256, %251 ], [ %261, %257 ]
  %264 = icmp ult i16 %263, 255
  %265 = trunc i16 %263 to i8
  %266 = icmp eq i8 %265, 61
  %267 = and i1 %264, %266
  br i1 %267, label %268, label %273

268:                                              ; preds = %262
  %269 = add nuw i32 %63, 2
  store i32 %269, i32* %21, align 4, !noalias !36
  %270 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 260, i32* %270, align 8, !alias.scope !36
  %271 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %271, align 8, !alias.scope !36
  %272 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 4, i32* %272, align 8, !alias.scope !36
  br label %1318

273:                                              ; preds = %262, %244
  store i32 %245, i32* %21, align 4, !noalias !39
  %274 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 260, i32* %274, align 8, !alias.scope !39
  %275 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %275, align 8, !alias.scope !39
  %276 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 5
  store i32 2, i32* %276, align 8, !alias.scope !39
  br label %1318

277:                                              ; preds = %87
  %278 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 4
  %279 = load i32, i32* %278, align 8
  switch i32 %279, label %280 [
    i32 0, label %285
    i32 64, label %285
    i32 265, label %285
    i32 40, label %285
    i32 91, label %285
    i32 44, label %285
    i32 264, label %285
    i32 263, label %285
    i32 258, label %285
    i32 47, label %285
    i32 273, label %285
    i32 124, label %285
    i32 261, label %285
    i32 262, label %285
    i32 259, label %285
    i32 260, label %285
  ]

280:                                              ; preds = %277
  %281 = add nuw i32 %63, 1
  store i32 %281, i32* %21, align 4, !noalias !42
  %282 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 258, i32* %282, align 8, !alias.scope !42
  %283 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %283, align 8, !alias.scope !42
  %284 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 4
  store i32 2, i32* %284, align 4, !alias.scope !42
  br label %1318

285:                                              ; preds = %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277
  %286 = add nuw i32 %63, 1
  store i32 %286, i32* %21, align 4
  %287 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #11
  %288 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 274, i32* %288, align 8
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %290, %"class.WTF::StringImpl"** %291, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %292, label %326, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %312

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i33
  %302 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %301, i33 1) #11
  %303 = extractvalue { i33, i1 } %302, 1
  %304 = extractvalue { i33, i1 } %302, 0
  %305 = icmp slt i33 %304, 0
  %306 = or i1 %303, %305
  br i1 %306, label %307, label %308, !prof !2

307:                                              ; preds = %298
  call void @llvm.trap() #11
  unreachable

308:                                              ; preds = %298
  %309 = trunc i33 %304 to i32
  store i32 %309, i32* %299, align 4
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %326, label %312

312:                                              ; preds = %293, %308
  %313 = phi %"class.WTF::StringImpl"* [ %310, %308 ], [ %290, %293 ]
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  br i1 %317, label %320, label %322

320:                                              ; preds = %312
  %321 = add i32 %319, -1
  store i32 %321, i32* %318, align 4
  br label %322

322:                                              ; preds = %320, %312
  %323 = phi i32 [ %321, %320 ], [ %319, %312 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %313) #11
  br label %326

326:                                              ; preds = %285, %308, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #11
  br label %1318

327:                                              ; preds = %87
  %328 = add nuw i32 %63, 1
  store i32 %328, i32* %21, align 4
  %329 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #11
  %330 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %330, align 8
  %331 = call zeroext i1 @_ZN5blink5xpath6Parser8LexQNameERN3WTF6StringE(%"class.blink::xpath::Parser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %15)
  %332 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  br i1 %331, label %333, label %354

333:                                              ; preds = %327
  store i32 270, i32* %332, align 8
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  %335 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %334, %"class.WTF::StringImpl"** %335, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %336, label %372, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %358

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = zext i32 %344 to i33
  %346 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %345, i33 1) #11
  %347 = extractvalue { i33, i1 } %346, 1
  %348 = extractvalue { i33, i1 } %346, 0
  %349 = icmp slt i33 %348, 0
  %350 = or i1 %347, %349
  br i1 %350, label %351, label %352, !prof !2

351:                                              ; preds = %342
  tail call void @llvm.trap() #11
  unreachable

352:                                              ; preds = %342
  %353 = trunc i33 %348 to i32
  store i32 %353, i32* %343, align 4
  br label %358

354:                                              ; preds = %327
  store i32 275, i32* %332, align 8
  %355 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %355, align 8
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %372, label %358

358:                                              ; preds = %337, %352, %354
  %359 = phi %"class.WTF::StringImpl"* [ %356, %354 ], [ %334, %352 ], [ %334, %337 ]
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %358
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %358
  %369 = phi i32 [ %367, %366 ], [ %365, %358 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #11
  br label %372

372:                                              ; preds = %333, %354, %368, %371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #11
  br label %1318

373:                                              ; preds = %87
  %374 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #11
  %375 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %375, align 8
  %376 = call zeroext i1 @_ZN5blink5xpath6Parser9LexNCNameERN3WTF6StringE(%"class.blink::xpath::Parser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %16)
  br i1 %376, label %380, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 275, i32* %378, align 8
  %379 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %379, align 8
  br label %1301

380:                                              ; preds = %373
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %416, label %383

383:                                              ; preds = %380
  %384 = load i32, i32* %21, align 4
  br label %385

385:                                              ; preds = %411, %383
  %386 = phi i32 [ %413, %411 ], [ %384, %383 ]
  %387 = phi %"class.WTF::StringImpl"* [ %414, %411 ], [ %381, %383 ]
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = icmp ult i32 %386, %389
  br i1 %390, label %391, label %416

391:                                              ; preds = %385
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 1
  br i1 %395, label %403, label %397

397:                                              ; preds = %391
  %398 = bitcast %"class.WTF::StringImpl"* %396 to i8*
  %399 = zext i32 %386 to i64
  %400 = getelementptr inbounds i8, i8* %398, i64 %399
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i16
  br label %408

403:                                              ; preds = %391
  %404 = bitcast %"class.WTF::StringImpl"* %396 to i16*
  %405 = zext i32 %386 to i64
  %406 = getelementptr inbounds i16, i16* %404, i64 %405
  %407 = load i16, i16* %406, align 2
  br label %408

408:                                              ; preds = %403, %397
  %409 = phi i16 [ %402, %397 ], [ %407, %403 ]
  %410 = tail call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %409) #11
  br i1 %410, label %411, label %416

411:                                              ; preds = %408
  %412 = load i32, i32* %21, align 4
  %413 = add i32 %412, 1
  store i32 %413, i32* %21, align 4
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %416, label %385

416:                                              ; preds = %385, %408, %411, %380
  %417 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 4
  %418 = load i32, i32* %417, align 8
  switch i32 %418, label %419 [
    i32 0, label %533
    i32 64, label %533
    i32 265, label %533
    i32 40, label %533
    i32 91, label %533
    i32 44, label %533
    i32 264, label %533
    i32 263, label %533
    i32 258, label %533
    i32 47, label %533
    i32 273, label %533
    i32 124, label %533
    i32 261, label %533
    i32 262, label %533
    i32 259, label %533
    i32 260, label %533
  ]

419:                                              ; preds = %416
  %420 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %420) #11
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %423, label %427

423:                                              ; preds = %419
  %424 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %424, align 8
  %425 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %426 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %425, i64* %426, align 8
  br label %435

427:                                              ; preds = %419
  %428 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %421, %"class.WTF::StringImpl"** %428, align 8
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 1
  %430 = load i32, i32* %429, align 4
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 1
  %432 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %433 = bitcast i8** %432 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %431, %"class.WTF::StringImpl"** %433, align 8
  %434 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %435

435:                                              ; preds = %427, %423
  %436 = phi i64 [ %434, %427 ], [ %425, %423 ]
  %437 = phi i32 [ %430, %427 ], [ 0, %423 ]
  %438 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %437, i32* %438, align 8
  %439 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #11
  %440 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %436, i64* %440, align 8
  %441 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8** %441, align 8
  %442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 3, i32* %442, align 8
  %443 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %420) #11
  br i1 %443, label %444, label %447

444:                                              ; preds = %435
  %445 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 264, i32* %445, align 8
  %446 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %446, align 8
  br label %1301

447:                                              ; preds = %435
  %448 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %448) #11
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %451, label %455

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %452, align 8
  %453 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %454 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %453, i64* %454, align 8
  br label %463

455:                                              ; preds = %447
  %456 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %449, %"class.WTF::StringImpl"** %456, align 8
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 1
  %460 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %461 = bitcast i8** %460 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %459, %"class.WTF::StringImpl"** %461, align 8
  %462 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %463

463:                                              ; preds = %455, %451
  %464 = phi i64 [ %462, %455 ], [ %453, %451 ]
  %465 = phi i32 [ %458, %455 ], [ 0, %451 ]
  %466 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %465, i32* %466, align 8
  %467 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %467) #11
  %468 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %464, i64* %468, align 8
  %469 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %469, align 8
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 2, i32* %470, align 8
  %471 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %467) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %448) #11
  br i1 %471, label %472, label %475

472:                                              ; preds = %463
  %473 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 263, i32* %473, align 8
  %474 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %474, align 8
  br label %1301

475:                                              ; preds = %463
  %476 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #11
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %479, label %483

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %480, align 8
  %481 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %482 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %481, i64* %482, align 8
  br label %491

483:                                              ; preds = %475
  %484 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %477, %"class.WTF::StringImpl"** %484, align 8
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 1
  %488 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %489 = bitcast i8** %488 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %487, %"class.WTF::StringImpl"** %489, align 8
  %490 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %491

491:                                              ; preds = %483, %479
  %492 = phi i64 [ %490, %483 ], [ %481, %479 ]
  %493 = phi i32 [ %486, %483 ], [ 0, %479 ]
  %494 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %493, i32* %494, align 8
  %495 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %495) #11
  %496 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %492, i64* %496, align 8
  %497 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %497, align 8
  %498 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %498, align 8
  %499 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %495) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #11
  br i1 %499, label %500, label %504

500:                                              ; preds = %491
  %501 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 258, i32* %501, align 8
  %502 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %502, align 8
  %503 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 4
  store i32 4, i32* %503, align 4
  br label %1301

504:                                              ; preds = %491
  %505 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %505) #11
  %506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %507 = icmp eq %"class.WTF::StringImpl"* %506, null
  br i1 %507, label %508, label %512

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %509, align 8
  %510 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %511 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %510, i64* %511, align 8
  br label %520

512:                                              ; preds = %504
  %513 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %506, %"class.WTF::StringImpl"** %513, align 8
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 1
  %517 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %518 = bitcast i8** %517 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %516, %"class.WTF::StringImpl"** %518, align 8
  %519 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %520

520:                                              ; preds = %512, %508
  %521 = phi i64 [ %519, %512 ], [ %510, %508 ]
  %522 = phi i32 [ %515, %512 ], [ 0, %508 ]
  %523 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %522, i32* %523, align 8
  %524 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %524) #11
  %525 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %521, i64* %525, align 8
  %526 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %526, align 8
  %527 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %527, align 8
  %528 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %524) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %505) #11
  br i1 %528, label %529, label %533

529:                                              ; preds = %520
  %530 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 258, i32* %530, align 8
  %531 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %531, align 8
  %532 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 4
  store i32 3, i32* %532, align 4
  br label %1301

533:                                              ; preds = %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %416, %520
  %534 = load i32, i32* %21, align 4
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %1279, label %537

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 1
  %539 = load i32, i32* %538, align 4
  %540 = icmp ult i32 %534, %539
  br i1 %540, label %541, label %980

541:                                              ; preds = %537
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %543 = load atomic i32, i32* %542 monotonic, align 4
  %544 = and i32 %543, 1
  %545 = icmp eq i32 %544, 0
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 1
  br i1 %545, label %553, label %547

547:                                              ; preds = %541
  %548 = bitcast %"class.WTF::StringImpl"* %546 to i8*
  %549 = zext i32 %534 to i64
  %550 = getelementptr inbounds i8, i8* %548, i64 %549
  %551 = load i8, i8* %550, align 1
  %552 = zext i8 %551 to i16
  br label %558

553:                                              ; preds = %541
  %554 = bitcast %"class.WTF::StringImpl"* %546 to i16*
  %555 = zext i32 %534 to i64
  %556 = getelementptr inbounds i16, i16* %554, i64 %555
  %557 = load i16, i16* %556, align 2
  br label %558

558:                                              ; preds = %553, %547
  %559 = phi i16 [ %552, %547 ], [ %557, %553 ]
  %560 = icmp ult i16 %559, 255
  %561 = trunc i16 %559 to i8
  %562 = icmp eq i8 %561, 58
  %563 = and i1 %560, %562
  br i1 %563, label %564, label %980

564:                                              ; preds = %558
  %565 = add nuw i32 %534, 1
  store i32 %565, i32* %21, align 4
  %566 = load i32, i32* %538, align 4
  %567 = icmp ult i32 %565, %566
  br i1 %567, label %568, label %632

568:                                              ; preds = %564
  %569 = load atomic i32, i32* %542 monotonic, align 4
  %570 = and i32 %569, 1
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %578, label %572

572:                                              ; preds = %568
  %573 = bitcast %"class.WTF::StringImpl"* %546 to i8*
  %574 = zext i32 %565 to i64
  %575 = getelementptr inbounds i8, i8* %573, i64 %574
  %576 = load i8, i8* %575, align 1
  %577 = zext i8 %576 to i16
  br label %583

578:                                              ; preds = %568
  %579 = bitcast %"class.WTF::StringImpl"* %546 to i16*
  %580 = zext i32 %565 to i64
  %581 = getelementptr inbounds i16, i16* %579, i64 %580
  %582 = load i16, i16* %581, align 2
  br label %583

583:                                              ; preds = %578, %572
  %584 = phi i16 [ %577, %572 ], [ %582, %578 ]
  %585 = icmp ult i16 %584, 255
  %586 = trunc i16 %584 to i8
  %587 = icmp eq i8 %586, 58
  %588 = and i1 %585, %587
  br i1 %588, label %589, label %632

589:                                              ; preds = %583
  %590 = add nuw i32 %534, 2
  store i32 %590, i32* %21, align 4
  %591 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names to i8*) acquire, align 8
  %592 = icmp eq i8 %591, 0
  br i1 %592, label %593, label %597, !prof !45

593:                                              ; preds = %589
  %594 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names) #11
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %597, label %596

596:                                              ; preds = %593
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names) #11
  br label %597

597:                                              ; preds = %596, %593, %589
  %598 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %615

600:                                              ; preds = %597, %612
  %601 = phi %struct.AxisName* [ %613, %612 ], [ getelementptr inbounds ([13 x %struct.AxisName], [13 x %struct.AxisName]* @_ZZN5blink5xpathL17SetUpAxisNamesMapERN3WTF7HashMapINS1_6StringENS0_4Step4AxisENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEE13kAxisNameList, i64 0, i64 0), %597 ]
  %602 = getelementptr inbounds %struct.AxisName, %struct.AxisName* %601, i64 0, i32 0
  %603 = getelementptr inbounds %struct.AxisName, %struct.AxisName* %601, i64 0, i32 1
  %604 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKPKcRKS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names to %"class.WTF::HashTable"*), i8** dereferenceable(8) %602, i32* dereferenceable(4) %603) #11
  %605 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %604, 1
  %606 = and i8 %605, 1
  %607 = icmp eq i8 %606, 0
  br i1 %607, label %608, label %612

608:                                              ; preds = %600
  %609 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %604, 0
  %610 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %609, i64 0, i32 1
  %611 = load i32, i32* %603, align 4
  store i32 %611, i32* %610, align 4
  br label %612

612:                                              ; preds = %608, %600
  %613 = getelementptr inbounds %struct.AxisName, %struct.AxisName* %601, i64 1
  %614 = icmp eq %struct.AxisName* %613, getelementptr inbounds ([13 x %struct.AxisName], [13 x %struct.AxisName]* @_ZZN5blink5xpathL17SetUpAxisNamesMapERN3WTF7HashMapINS1_6StringENS0_4Step4AxisENS1_10StringHashENS1_10HashTraitsIS3_EENS7_IS5_EENS1_18PartitionAllocatorEEEE13kAxisNameList, i64 1, i64 0)
  br i1 %614, label %615, label %600

615:                                              ; preds = %612, %597
  %616 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names to %"class.WTF::HashTable"*), %"class.WTF::String"* nonnull dereferenceable(8) %16) #11
  %617 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %616, 0
  %618 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names to %"struct.WTF::KeyValuePair"**), align 8
  %619 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink5xpathL10IsAxisNameERKN3WTF6StringERNS0_4Step4AxisEE12s_axis_names, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %618, i64 %620
  %622 = icmp eq %"struct.WTF::KeyValuePair"* %617, %621
  br i1 %622, label %629, label %623

623:                                              ; preds = %615
  %624 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %617, i64 0, i32 1
  %625 = load i32, i32* %624, align 8
  %626 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 265, i32* %626, align 8
  %627 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %627, align 8
  %628 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 3
  store i32 %625, i32* %628, align 8
  br label %1301

629:                                              ; preds = %615
  %630 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 275, i32* %630, align 8
  %631 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %631, align 8
  br label %1301

632:                                              ; preds = %583, %564
  %633 = icmp ult i32 %565, %566
  br i1 %633, label %634, label %669

634:                                              ; preds = %632, %661
  %635 = phi %"class.WTF::StringImpl"* [ %659, %661 ], [ %535, %632 ]
  %636 = phi i32 [ %658, %661 ], [ %565, %632 ]
  %637 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %638 = load atomic i32, i32* %637 monotonic, align 4
  %639 = and i32 %638, 1
  %640 = icmp eq i32 %639, 0
  %641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %635, i64 1
  br i1 %640, label %648, label %642

642:                                              ; preds = %634
  %643 = bitcast %"class.WTF::StringImpl"* %641 to i8*
  %644 = zext i32 %636 to i64
  %645 = getelementptr inbounds i8, i8* %643, i64 %644
  %646 = load i8, i8* %645, align 1
  %647 = zext i8 %646 to i16
  br label %653

648:                                              ; preds = %634
  %649 = bitcast %"class.WTF::StringImpl"* %641 to i16*
  %650 = zext i32 %636 to i64
  %651 = getelementptr inbounds i16, i16* %649, i64 %650
  %652 = load i16, i16* %651, align 2
  br label %653

653:                                              ; preds = %648, %642
  %654 = phi i16 [ %647, %642 ], [ %652, %648 ]
  %655 = call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %654) #11
  br i1 %655, label %656, label %665

656:                                              ; preds = %653
  %657 = load i32, i32* %21, align 4
  %658 = add i32 %657, 1
  store i32 %658, i32* %21, align 4
  %659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %660 = icmp eq %"class.WTF::StringImpl"* %659, null
  br i1 %660, label %800, label %661

661:                                              ; preds = %656
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %659, i64 0, i32 1
  %663 = load i32, i32* %662, align 4
  %664 = icmp ult i32 %658, %663
  br i1 %664, label %634, label %669

665:                                              ; preds = %653
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %667 = load i32, i32* %21, align 4
  %668 = icmp eq %"class.WTF::StringImpl"* %666, null
  br i1 %668, label %800, label %669

669:                                              ; preds = %661, %632, %665
  %670 = phi %"class.WTF::StringImpl"* [ %666, %665 ], [ %535, %632 ], [ %659, %661 ]
  %671 = phi i32 [ %667, %665 ], [ %565, %632 ], [ %658, %661 ]
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 1
  %673 = load i32, i32* %672, align 4
  %674 = icmp ult i32 %671, %673
  br i1 %674, label %675, label %800

675:                                              ; preds = %669
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %677 = load atomic i32, i32* %676 monotonic, align 4
  %678 = and i32 %677, 1
  %679 = icmp eq i32 %678, 0
  %680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 1
  br i1 %679, label %687, label %681

681:                                              ; preds = %675
  %682 = bitcast %"class.WTF::StringImpl"* %680 to i8*
  %683 = zext i32 %671 to i64
  %684 = getelementptr inbounds i8, i8* %682, i64 %683
  %685 = load i8, i8* %684, align 1
  %686 = zext i8 %685 to i16
  br label %692

687:                                              ; preds = %675
  %688 = bitcast %"class.WTF::StringImpl"* %680 to i16*
  %689 = zext i32 %671 to i64
  %690 = getelementptr inbounds i16, i16* %688, i64 %689
  %691 = load i16, i16* %690, align 2
  br label %692

692:                                              ; preds = %687, %681
  %693 = phi i16 [ %686, %681 ], [ %691, %687 ]
  %694 = icmp ult i16 %693, 255
  %695 = trunc i16 %693 to i8
  %696 = icmp eq i8 %695, 42
  %697 = and i1 %694, %696
  br i1 %697, label %698, label %800

698:                                              ; preds = %692
  %699 = add nuw i32 %671, 1
  store i32 %699, i32* %21, align 4
  %700 = bitcast %"class.WTF::StringAppend.5"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %700) #11
  %701 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %702 = icmp eq %"class.WTF::StringImpl"* %701, null
  br i1 %702, label %747, label %703

703:                                              ; preds = %698
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %701, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %705 = load atomic i32, i32* %704 monotonic, align 4
  %706 = and i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %701, i64 0, i32 0
  %709 = load i32, i32* %708, align 4
  br i1 %707, label %710, label %720

710:                                              ; preds = %703
  %711 = zext i32 %709 to i33
  %712 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %711, i33 1) #11
  %713 = extractvalue { i33, i1 } %712, 1
  %714 = extractvalue { i33, i1 } %712, 0
  %715 = icmp slt i33 %714, 0
  %716 = or i1 %713, %715
  br i1 %716, label %717, label %718, !prof !2

717:                                              ; preds = %710
  call void @llvm.trap() #11
  unreachable

718:                                              ; preds = %710
  %719 = trunc i33 %714 to i32
  store i32 %719, i32* %708, align 4
  br label %720

720:                                              ; preds = %703, %718
  %721 = phi i32 [ %719, %718 ], [ %709, %703 ]
  %722 = load atomic i32, i32* %704 monotonic, align 4
  %723 = and i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %701, i64 0, i32 0
  br i1 %724, label %726, label %736

726:                                              ; preds = %720
  %727 = zext i32 %721 to i33
  %728 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %727, i33 1) #11
  %729 = extractvalue { i33, i1 } %728, 1
  %730 = extractvalue { i33, i1 } %728, 0
  %731 = icmp slt i33 %730, 0
  %732 = or i1 %729, %731
  br i1 %732, label %733, label %734, !prof !2

733:                                              ; preds = %726
  call void @llvm.trap() #11
  unreachable

734:                                              ; preds = %726
  %735 = trunc i33 %730 to i32
  store i32 %735, i32* %725, align 4
  br label %736

736:                                              ; preds = %734, %720
  %737 = phi i32 [ %735, %734 ], [ %721, %720 ]
  %738 = load atomic i32, i32* %704 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %743

741:                                              ; preds = %736
  %742 = add i32 %737, -1
  store i32 %742, i32* %725, align 4
  br label %743

743:                                              ; preds = %741, %736
  %744 = phi i32 [ %742, %741 ], [ %737, %736 ]
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %747

746:                                              ; preds = %743
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %701) #11
  br label %747

747:                                              ; preds = %698, %743, %746
  %748 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %701, %"class.WTF::StringImpl"** %748, align 8
  %749 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %749, align 8
  %750 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.5"* nonnull %17)
  %751 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 274, i32* %751, align 8
  %752 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %750, %"class.WTF::StringImpl"** %752, align 8
  %753 = icmp eq %"class.WTF::StringImpl"* %750, null
  br i1 %753, label %783, label %754

754:                                              ; preds = %747
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %756 = load atomic i32, i32* %755 monotonic, align 4
  %757 = and i32 %756, 2
  %758 = icmp eq i32 %757, 0
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 0
  %760 = load i32, i32* %759, align 4
  br i1 %758, label %761, label %771

761:                                              ; preds = %754
  %762 = zext i32 %760 to i33
  %763 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %762, i33 1) #11
  %764 = extractvalue { i33, i1 } %763, 1
  %765 = extractvalue { i33, i1 } %763, 0
  %766 = icmp slt i33 %765, 0
  %767 = or i1 %764, %766
  br i1 %767, label %768, label %769, !prof !2

768:                                              ; preds = %761
  call void @llvm.trap() #11
  unreachable

769:                                              ; preds = %761
  %770 = trunc i33 %765 to i32
  store i32 %770, i32* %759, align 4
  br label %771

771:                                              ; preds = %754, %769
  %772 = phi i32 [ %770, %769 ], [ %760, %754 ]
  %773 = load atomic i32, i32* %755 monotonic, align 4
  %774 = and i32 %773, 2
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %779

776:                                              ; preds = %771
  %777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %750, i64 0, i32 0
  %778 = add i32 %772, -1
  store i32 %778, i32* %777, align 4
  br label %779

779:                                              ; preds = %776, %771
  %780 = phi i32 [ %778, %776 ], [ %772, %771 ]
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %783

782:                                              ; preds = %779
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %750) #11
  br label %783

783:                                              ; preds = %747, %779, %782
  %784 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %748, align 8
  %785 = icmp eq %"class.WTF::StringImpl"* %784, null
  br i1 %785, label %799, label %786

786:                                              ; preds = %783
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %784, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %788 = load atomic i32, i32* %787 monotonic, align 4
  %789 = and i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %784, i64 0, i32 0
  %792 = load i32, i32* %791, align 4
  br i1 %790, label %793, label %795

793:                                              ; preds = %786
  %794 = add i32 %792, -1
  store i32 %794, i32* %791, align 4
  br label %795

795:                                              ; preds = %793, %786
  %796 = phi i32 [ %794, %793 ], [ %792, %786 ]
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %799

798:                                              ; preds = %795
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %784) #11
  br label %799

799:                                              ; preds = %783, %795, %798
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %700) #11
  br label %1301

800:                                              ; preds = %656, %692, %665, %669
  %801 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %801) #11
  %802 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %802, align 8
  %803 = call zeroext i1 @_ZN5blink5xpath6Parser9LexNCNameERN3WTF6StringE(%"class.blink::xpath::Parser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %18)
  br i1 %803, label %823, label %804

804:                                              ; preds = %800
  %805 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 275, i32* %805, align 8
  %806 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %806, align 8
  %807 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %802, align 8
  %808 = icmp eq %"class.WTF::StringImpl"* %807, null
  br i1 %808, label %822, label %809

809:                                              ; preds = %804
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %807, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %811 = load atomic i32, i32* %810 monotonic, align 4
  %812 = and i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %807, i64 0, i32 0
  %815 = load i32, i32* %814, align 4
  br i1 %813, label %816, label %818

816:                                              ; preds = %809
  %817 = add i32 %815, -1
  store i32 %817, i32* %814, align 4
  br label %818

818:                                              ; preds = %816, %809
  %819 = phi i32 [ %817, %816 ], [ %815, %809 ]
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %821, label %822

821:                                              ; preds = %818
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %807) #11
  br label %822

822:                                              ; preds = %804, %818, %821
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %801) #11
  br label %1301

823:                                              ; preds = %800
  %824 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %824) #11
  %825 = bitcast %"class.WTF::StringAppend.5"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %825) #11
  %826 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %827 = icmp eq %"class.WTF::StringImpl"* %826, null
  br i1 %827, label %872, label %828

828:                                              ; preds = %823
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %826, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %830 = load atomic i32, i32* %829 monotonic, align 4
  %831 = and i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %826, i64 0, i32 0
  %834 = load i32, i32* %833, align 4
  br i1 %832, label %835, label %845

835:                                              ; preds = %828
  %836 = zext i32 %834 to i33
  %837 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %836, i33 1) #11
  %838 = extractvalue { i33, i1 } %837, 1
  %839 = extractvalue { i33, i1 } %837, 0
  %840 = icmp slt i33 %839, 0
  %841 = or i1 %838, %840
  br i1 %841, label %842, label %843, !prof !2

842:                                              ; preds = %835
  call void @llvm.trap() #11
  unreachable

843:                                              ; preds = %835
  %844 = trunc i33 %839 to i32
  store i32 %844, i32* %833, align 4
  br label %845

845:                                              ; preds = %828, %843
  %846 = phi i32 [ %844, %843 ], [ %834, %828 ]
  %847 = load atomic i32, i32* %829 monotonic, align 4
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %826, i64 0, i32 0
  br i1 %849, label %851, label %861

851:                                              ; preds = %845
  %852 = zext i32 %846 to i33
  %853 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %852, i33 1) #11
  %854 = extractvalue { i33, i1 } %853, 1
  %855 = extractvalue { i33, i1 } %853, 0
  %856 = icmp slt i33 %855, 0
  %857 = or i1 %854, %856
  br i1 %857, label %858, label %859, !prof !2

858:                                              ; preds = %851
  call void @llvm.trap() #11
  unreachable

859:                                              ; preds = %851
  %860 = trunc i33 %855 to i32
  store i32 %860, i32* %850, align 4
  br label %861

861:                                              ; preds = %859, %845
  %862 = phi i32 [ %860, %859 ], [ %846, %845 ]
  %863 = load atomic i32, i32* %829 monotonic, align 4
  %864 = and i32 %863, 2
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %866, label %868

866:                                              ; preds = %861
  %867 = add i32 %862, -1
  store i32 %867, i32* %850, align 4
  br label %868

868:                                              ; preds = %866, %861
  %869 = phi i32 [ %867, %866 ], [ %862, %861 ]
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %871, label %872

871:                                              ; preds = %868
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %826) #11
  br label %872

872:                                              ; preds = %823, %868, %871
  %873 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %826, %"class.WTF::StringImpl"** %873, align 8
  %874 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %874, align 8
  %875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %802, align 8
  %876 = icmp eq %"class.WTF::StringImpl"* %875, null
  br i1 %876, label %894, label %877

877:                                              ; preds = %872
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %894

882:                                              ; preds = %877
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 0
  %884 = load i32, i32* %883, align 4
  %885 = zext i32 %884 to i33
  %886 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %885, i33 1) #11
  %887 = extractvalue { i33, i1 } %886, 1
  %888 = extractvalue { i33, i1 } %886, 0
  %889 = icmp slt i33 %888, 0
  %890 = or i1 %887, %889
  br i1 %890, label %891, label %892, !prof !2

891:                                              ; preds = %882
  call void @llvm.trap() #11
  unreachable

892:                                              ; preds = %882
  %893 = trunc i33 %888 to i32
  store i32 %893, i32* %883, align 4
  br label %894

894:                                              ; preds = %872, %877, %892
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %19, %"class.WTF::StringAppend.5"* nonnull dereferenceable(16) %20, %"class.WTF::StringImpl"* %875)
  %895 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %896 = ptrtoint %"class.WTF::StringImpl"* %895 to i64
  %897 = bitcast %"class.WTF::String"* %16 to i64*
  %898 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  store i64 %896, i64* %897, align 8
  %899 = icmp eq %"class.WTF::StringImpl"* %898, null
  br i1 %899, label %913, label %900

900:                                              ; preds = %894
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %902 = load atomic i32, i32* %901 monotonic, align 4
  %903 = and i32 %902, 2
  %904 = icmp eq i32 %903, 0
  %905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %898, i64 0, i32 0
  %906 = load i32, i32* %905, align 4
  br i1 %904, label %907, label %909

907:                                              ; preds = %900
  %908 = add i32 %906, -1
  store i32 %908, i32* %905, align 4
  br label %909

909:                                              ; preds = %907, %900
  %910 = phi i32 [ %908, %907 ], [ %906, %900 ]
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %913

912:                                              ; preds = %909
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %898) #11
  br label %913

913:                                              ; preds = %912, %909, %894
  %914 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1, i32 0, i32 0
  %915 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %914, align 8
  %916 = icmp eq %"class.WTF::StringImpl"* %915, null
  br i1 %916, label %930, label %917

917:                                              ; preds = %913
  %918 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %915, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = load atomic i32, i32* %918 monotonic, align 4
  %920 = and i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %915, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  br i1 %921, label %924, label %926

924:                                              ; preds = %917
  %925 = add i32 %923, -1
  store i32 %925, i32* %922, align 4
  br label %926

926:                                              ; preds = %924, %917
  %927 = phi i32 [ %925, %924 ], [ %923, %917 ]
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %930

929:                                              ; preds = %926
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %915) #11
  br label %930

930:                                              ; preds = %929, %926, %913
  %931 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %932 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %931, align 8
  %933 = icmp eq %"class.WTF::StringImpl"* %932, null
  br i1 %933, label %947, label %934

934:                                              ; preds = %930
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %932, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %936 = load atomic i32, i32* %935 monotonic, align 4
  %937 = and i32 %936, 2
  %938 = icmp eq i32 %937, 0
  %939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %932, i64 0, i32 0
  %940 = load i32, i32* %939, align 4
  br i1 %938, label %941, label %943

941:                                              ; preds = %934
  %942 = add i32 %940, -1
  store i32 %942, i32* %939, align 4
  br label %943

943:                                              ; preds = %941, %934
  %944 = phi i32 [ %942, %941 ], [ %940, %934 ]
  %945 = icmp eq i32 %944, 0
  br i1 %945, label %946, label %947

946:                                              ; preds = %943
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %932) #11
  br label %947

947:                                              ; preds = %930, %943, %946
  %948 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %873, align 8
  %949 = icmp eq %"class.WTF::StringImpl"* %948, null
  br i1 %949, label %963, label %950

950:                                              ; preds = %947
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %952 = load atomic i32, i32* %951 monotonic, align 4
  %953 = and i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 0
  %956 = load i32, i32* %955, align 4
  br i1 %954, label %957, label %959

957:                                              ; preds = %950
  %958 = add i32 %956, -1
  store i32 %958, i32* %955, align 4
  br label %959

959:                                              ; preds = %957, %950
  %960 = phi i32 [ %958, %957 ], [ %956, %950 ]
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %963

962:                                              ; preds = %959
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %948) #11
  br label %963

963:                                              ; preds = %947, %959, %962
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %825) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %824) #11
  br i1 %876, label %977, label %964

964:                                              ; preds = %963
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load atomic i32, i32* %965 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 0
  %970 = load i32, i32* %969, align 4
  br i1 %968, label %971, label %973

971:                                              ; preds = %964
  %972 = add i32 %970, -1
  store i32 %972, i32* %969, align 4
  br label %973

973:                                              ; preds = %971, %964
  %974 = phi i32 [ %972, %971 ], [ %970, %964 ]
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %977

976:                                              ; preds = %973
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %875) #11
  br label %977

977:                                              ; preds = %976, %973, %963
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %801) #11
  %978 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %979 = icmp eq %"class.WTF::StringImpl"* %978, null
  br i1 %979, label %1279, label %980

980:                                              ; preds = %537, %558, %977
  %981 = phi %"class.WTF::StringImpl"* [ %978, %977 ], [ %535, %558 ], [ %535, %537 ]
  %982 = load i32, i32* %21, align 4
  br label %983

983:                                              ; preds = %1009, %980
  %984 = phi i32 [ %1011, %1009 ], [ %982, %980 ]
  %985 = phi %"class.WTF::StringImpl"* [ %1012, %1009 ], [ %981, %980 ]
  %986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 1
  %987 = load i32, i32* %986, align 4
  %988 = icmp ult i32 %984, %987
  br i1 %988, label %989, label %1018

989:                                              ; preds = %983
  %990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %991 = load atomic i32, i32* %990 monotonic, align 4
  %992 = and i32 %991, 1
  %993 = icmp eq i32 %992, 0
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %985, i64 1
  br i1 %993, label %1001, label %995

995:                                              ; preds = %989
  %996 = bitcast %"class.WTF::StringImpl"* %994 to i8*
  %997 = zext i32 %984 to i64
  %998 = getelementptr inbounds i8, i8* %996, i64 %997
  %999 = load i8, i8* %998, align 1
  %1000 = zext i8 %999 to i16
  br label %1006

1001:                                             ; preds = %989
  %1002 = bitcast %"class.WTF::StringImpl"* %994 to i16*
  %1003 = zext i32 %984 to i64
  %1004 = getelementptr inbounds i16, i16* %1002, i64 %1003
  %1005 = load i16, i16* %1004, align 2
  br label %1006

1006:                                             ; preds = %1001, %995
  %1007 = phi i16 [ %1000, %995 ], [ %1005, %1001 ]
  %1008 = call zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext %1007) #11
  br i1 %1008, label %1009, label %1014

1009:                                             ; preds = %1006
  %1010 = load i32, i32* %21, align 4
  %1011 = add i32 %1010, 1
  store i32 %1011, i32* %21, align 4
  %1012 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %1013 = icmp eq %"class.WTF::StringImpl"* %1012, null
  br i1 %1013, label %1279, label %983

1014:                                             ; preds = %1006
  %1015 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %1016 = load i32, i32* %21, align 4
  %1017 = icmp eq %"class.WTF::StringImpl"* %1015, null
  br i1 %1017, label %1279, label %1018

1018:                                             ; preds = %983, %1014
  %1019 = phi %"class.WTF::StringImpl"* [ %1015, %1014 ], [ %985, %983 ]
  %1020 = phi i32 [ %1016, %1014 ], [ %984, %983 ]
  %1021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1019, i64 0, i32 1
  %1022 = load i32, i32* %1021, align 4
  %1023 = icmp ult i32 %1020, %1022
  br i1 %1023, label %1024, label %1279

1024:                                             ; preds = %1018
  %1025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1019, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1026 = load atomic i32, i32* %1025 monotonic, align 4
  %1027 = and i32 %1026, 1
  %1028 = icmp eq i32 %1027, 0
  %1029 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1019, i64 1
  br i1 %1028, label %1036, label %1030

1030:                                             ; preds = %1024
  %1031 = bitcast %"class.WTF::StringImpl"* %1029 to i8*
  %1032 = zext i32 %1020 to i64
  %1033 = getelementptr inbounds i8, i8* %1031, i64 %1032
  %1034 = load i8, i8* %1033, align 1
  %1035 = zext i8 %1034 to i16
  br label %1041

1036:                                             ; preds = %1024
  %1037 = bitcast %"class.WTF::StringImpl"* %1029 to i16*
  %1038 = zext i32 %1020 to i64
  %1039 = getelementptr inbounds i16, i16* %1037, i64 %1038
  %1040 = load i16, i16* %1039, align 2
  br label %1041

1041:                                             ; preds = %1036, %1030
  %1042 = phi i16 [ %1035, %1030 ], [ %1040, %1036 ]
  %1043 = icmp ult i16 %1042, 255
  %1044 = trunc i16 %1042 to i8
  %1045 = icmp eq i8 %1044, 40
  %1046 = and i1 %1043, %1045
  br i1 %1046, label %1047, label %1279

1047:                                             ; preds = %1041
  %1048 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to i8*) acquire, align 8
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1050, label %1131, !prof !45

1050:                                             ; preds = %1047
  %1051 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names) #11
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1131, label %1053

1053:                                             ; preds = %1050
  %1054 = bitcast [4 x %"class.WTF::String"]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1054) #11
  %1055 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1055, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i64 7) #11
  %1056 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %1056, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #11
  %1057 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %1057, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i64 22) #11
  %1058 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %1058, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i64 4) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.28", %"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.33"* bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::HashTable.33"*), i32 4) #11
  %1059 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.33"* bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::HashTable.33"*), %"class.WTF::String"* nonnull dereferenceable(8) %1055, %"class.WTF::String"* nonnull dereferenceable(8) %1055) #11
  %1060 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.33"* bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::HashTable.33"*), %"class.WTF::String"* dereferenceable(8) %1056, %"class.WTF::String"* dereferenceable(8) %1056) #11
  %1061 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.33"* bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::HashTable.33"*), %"class.WTF::String"* dereferenceable(8) %1057, %"class.WTF::String"* dereferenceable(8) %1057) #11
  %1062 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.33"* bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::HashTable.33"*), %"class.WTF::String"* dereferenceable(8) %1058, %"class.WTF::String"* dereferenceable(8) %1058) #11
  %1063 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 3, i32 0, i32 0
  %1064 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1063, align 8
  %1065 = icmp eq %"class.WTF::StringImpl"* %1064, null
  br i1 %1065, label %1079, label %1066

1066:                                             ; preds = %1053
  %1067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1064, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1068 = load atomic i32, i32* %1067 monotonic, align 4
  %1069 = and i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  %1071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1064, i64 0, i32 0
  %1072 = load i32, i32* %1071, align 4
  br i1 %1070, label %1073, label %1075

1073:                                             ; preds = %1066
  %1074 = add i32 %1072, -1
  store i32 %1074, i32* %1071, align 4
  br label %1075

1075:                                             ; preds = %1073, %1066
  %1076 = phi i32 [ %1074, %1073 ], [ %1072, %1066 ]
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1078, label %1079

1078:                                             ; preds = %1075
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1064) #11
  br label %1079

1079:                                             ; preds = %1078, %1075, %1053
  %1080 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 2, i32 0, i32 0
  %1081 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1080, align 8
  %1082 = icmp eq %"class.WTF::StringImpl"* %1081, null
  br i1 %1082, label %1096, label %1083

1083:                                             ; preds = %1079
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1085 = load atomic i32, i32* %1084 monotonic, align 4
  %1086 = and i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 4
  br i1 %1087, label %1090, label %1092

1090:                                             ; preds = %1083
  %1091 = add i32 %1089, -1
  store i32 %1091, i32* %1088, align 4
  br label %1092

1092:                                             ; preds = %1090, %1083
  %1093 = phi i32 [ %1091, %1090 ], [ %1089, %1083 ]
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1095, label %1096

1095:                                             ; preds = %1092
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1081) #11
  br label %1096

1096:                                             ; preds = %1095, %1092, %1079
  %1097 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 1, i32 0, i32 0
  %1098 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1097, align 8
  %1099 = icmp eq %"class.WTF::StringImpl"* %1098, null
  br i1 %1099, label %1113, label %1100

1100:                                             ; preds = %1096
  %1101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1102 = load atomic i32, i32* %1101 monotonic, align 4
  %1103 = and i32 %1102, 2
  %1104 = icmp eq i32 %1103, 0
  %1105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 0
  %1106 = load i32, i32* %1105, align 4
  br i1 %1104, label %1107, label %1109

1107:                                             ; preds = %1100
  %1108 = add i32 %1106, -1
  store i32 %1108, i32* %1105, align 4
  br label %1109

1109:                                             ; preds = %1107, %1100
  %1110 = phi i32 [ %1108, %1107 ], [ %1106, %1100 ]
  %1111 = icmp eq i32 %1110, 0
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1098) #11
  br label %1113

1113:                                             ; preds = %1112, %1109, %1096
  %1114 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %11, i64 0, i64 0, i32 0, i32 0
  %1115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1114, align 8
  %1116 = icmp eq %"class.WTF::StringImpl"* %1115, null
  br i1 %1116, label %1130, label %1117

1117:                                             ; preds = %1113
  %1118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1119 = load atomic i32, i32* %1118 monotonic, align 4
  %1120 = and i32 %1119, 2
  %1121 = icmp eq i32 %1120, 0
  %1122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 0
  %1123 = load i32, i32* %1122, align 4
  br i1 %1121, label %1124, label %1126

1124:                                             ; preds = %1117
  %1125 = add i32 %1123, -1
  store i32 %1125, i32* %1122, align 4
  br label %1126

1126:                                             ; preds = %1124, %1117
  %1127 = phi i32 [ %1125, %1124 ], [ %1123, %1117 ]
  %1128 = icmp eq i32 %1127, 0
  br i1 %1128, label %1129, label %1130

1129:                                             ; preds = %1126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1115) #11
  br label %1130

1130:                                             ; preds = %1129, %1126, %1113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1054) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names) #11
  br label %1131

1131:                                             ; preds = %1047, %1050, %1130
  %1132 = load %"class.WTF::String"*, %"class.WTF::String"** bitcast (%"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names to %"class.WTF::String"**), align 8
  %1133 = icmp eq %"class.WTF::String"* %1132, null
  br i1 %1133, label %1257, label %1134

1134:                                             ; preds = %1131
  %1135 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.28", %"class.WTF::StaticSingleton.28"* @_ZZN5blink5xpathL14IsNodeTypeNameERKN3WTF6StringEE17s_node_type_names, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %1136 = add i32 %1135, -1
  %1137 = zext i32 %1136 to i64
  %1138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1140 = load atomic i32, i32* %1139 monotonic, align 4
  %1141 = lshr i32 %1140, 8
  %1142 = icmp eq i32 %1141, 0
  br i1 %1142, label %1143, label %1145

1143:                                             ; preds = %1134
  %1144 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %1138) #11
  br label %1145

1145:                                             ; preds = %1143, %1134
  %1146 = phi i32 [ %1144, %1143 ], [ %1141, %1134 ]
  %1147 = and i32 %1146, %1136
  %1148 = zext i32 %1147 to i64
  %1149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1132, i64 %1148
  %1150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1149, i64 0, i32 0, i32 0
  %1151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1150, align 8
  %1152 = icmp eq %"class.WTF::StringImpl"* %1151, null
  br i1 %1152, label %1257, label %1153

1153:                                             ; preds = %1145
  %1154 = xor i32 %1146, -1
  %1155 = lshr i32 %1146, 23
  %1156 = add i32 %1155, %1154
  %1157 = shl i32 %1156, 12
  %1158 = xor i32 %1157, %1156
  %1159 = lshr i32 %1158, 7
  %1160 = xor i32 %1159, %1158
  %1161 = shl i32 %1160, 2
  %1162 = xor i32 %1161, %1160
  %1163 = lshr i32 %1162, 20
  %1164 = xor i32 %1163, %1162
  %1165 = or i32 %1164, 1
  %1166 = zext i32 %1165 to i64
  br label %1167

1167:                                             ; preds = %1178, %1153
  %1168 = phi %"class.WTF::StringImpl"* [ %1151, %1153 ], [ %1185, %1178 ]
  %1169 = phi %"class.WTF::String"* [ %1149, %1153 ], [ %1183, %1178 ]
  %1170 = phi i64 [ %1148, %1153 ], [ %1182, %1178 ]
  %1171 = phi i64 [ 0, %1153 ], [ %1180, %1178 ]
  %1172 = bitcast %"class.WTF::String"* %1169 to i8**
  %1173 = load i8*, i8** %1172, align 8
  %1174 = icmp eq i8* %1173, inttoptr (i64 -1 to i8*)
  br i1 %1174, label %1178, label %1175

1175:                                             ; preds = %1167
  %1176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1177 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %1168, %"class.WTF::StringImpl"* %1176) #11
  br i1 %1177, label %1187, label %1178

1178:                                             ; preds = %1175, %1167
  %1179 = icmp eq i64 %1171, 0
  %1180 = select i1 %1179, i64 %1166, i64 %1171
  %1181 = add i64 %1180, %1170
  %1182 = and i64 %1181, %1137
  %1183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1132, i64 %1182
  %1184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1183, i64 0, i32 0, i32 0
  %1185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1184, align 8
  %1186 = icmp eq %"class.WTF::StringImpl"* %1185, null
  br i1 %1186, label %1257, label %1167

1187:                                             ; preds = %1175
  %1188 = icmp eq %"class.WTF::String"* %1169, null
  br i1 %1188, label %1257, label %1189

1189:                                             ; preds = %1187
  %1190 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1190) #11
  %1191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1192 = icmp eq %"class.WTF::StringImpl"* %1191, null
  br i1 %1192, label %1193, label %1197

1193:                                             ; preds = %1189
  %1194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %1194, align 8
  %1195 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1196 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %1195, i64* %1196, align 8
  br label %1205

1197:                                             ; preds = %1189
  %1198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1191, %"class.WTF::StringImpl"** %1198, align 8
  %1199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1191, i64 0, i32 1
  %1200 = load i32, i32* %1199, align 4
  %1201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1191, i64 1
  %1202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %1203 = bitcast i8** %1202 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1201, %"class.WTF::StringImpl"** %1203, align 8
  %1204 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %1205

1205:                                             ; preds = %1197, %1193
  %1206 = phi i64 [ %1204, %1197 ], [ %1195, %1193 ]
  %1207 = phi i32 [ %1200, %1197 ], [ 0, %1193 ]
  %1208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %1207, i32* %1208, align 8
  %1209 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1209) #11
  %1210 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %1206, i64* %1210, align 8
  %1211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8** %1211, align 8
  %1212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 22, i32* %1212, align 8
  %1213 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1209) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1190) #11
  %1214 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  br i1 %1213, label %1215, label %1236

1215:                                             ; preds = %1205
  store i32 267, i32* %1214, align 8
  %1216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1217 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1216, %"class.WTF::StringImpl"** %1217, align 8
  %1218 = icmp eq %"class.WTF::StringImpl"* %1216, null
  br i1 %1218, label %1317, label %1219

1219:                                             ; preds = %1215
  %1220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1221 = load atomic i32, i32* %1220 monotonic, align 4
  %1222 = and i32 %1221, 2
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1224, label %1301

1224:                                             ; preds = %1219
  %1225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 0
  %1226 = load i32, i32* %1225, align 4
  %1227 = zext i32 %1226 to i33
  %1228 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1227, i33 1) #11
  %1229 = extractvalue { i33, i1 } %1228, 1
  %1230 = extractvalue { i33, i1 } %1228, 0
  %1231 = icmp slt i33 %1230, 0
  %1232 = or i1 %1229, %1231
  br i1 %1232, label %1233, label %1234, !prof !2

1233:                                             ; preds = %1224
  call void @llvm.trap() #11
  unreachable

1234:                                             ; preds = %1224
  %1235 = trunc i33 %1230 to i32
  store i32 %1235, i32* %1225, align 4
  br label %1301

1236:                                             ; preds = %1205
  store i32 266, i32* %1214, align 8
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1238 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1237, %"class.WTF::StringImpl"** %1238, align 8
  %1239 = icmp eq %"class.WTF::StringImpl"* %1237, null
  br i1 %1239, label %1317, label %1240

1240:                                             ; preds = %1236
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1242 = load atomic i32, i32* %1241 monotonic, align 4
  %1243 = and i32 %1242, 2
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1301

1245:                                             ; preds = %1240
  %1246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 0
  %1247 = load i32, i32* %1246, align 4
  %1248 = zext i32 %1247 to i33
  %1249 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1248, i33 1) #11
  %1250 = extractvalue { i33, i1 } %1249, 1
  %1251 = extractvalue { i33, i1 } %1249, 0
  %1252 = icmp slt i33 %1251, 0
  %1253 = or i1 %1250, %1252
  br i1 %1253, label %1254, label %1255, !prof !2

1254:                                             ; preds = %1245
  call void @llvm.trap() #11
  unreachable

1255:                                             ; preds = %1245
  %1256 = trunc i33 %1251 to i32
  store i32 %1256, i32* %1246, align 4
  br label %1301

1257:                                             ; preds = %1178, %1187, %1145, %1131
  %1258 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 268, i32* %1258, align 8
  %1259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1260 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1259, %"class.WTF::StringImpl"** %1260, align 8
  %1261 = icmp eq %"class.WTF::StringImpl"* %1259, null
  br i1 %1261, label %1317, label %1262

1262:                                             ; preds = %1257
  %1263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1264 = load atomic i32, i32* %1263 monotonic, align 4
  %1265 = and i32 %1264, 2
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1267, label %1301

1267:                                             ; preds = %1262
  %1268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 0
  %1269 = load i32, i32* %1268, align 4
  %1270 = zext i32 %1269 to i33
  %1271 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1270, i33 1) #11
  %1272 = extractvalue { i33, i1 } %1271, 1
  %1273 = extractvalue { i33, i1 } %1271, 0
  %1274 = icmp slt i33 %1273, 0
  %1275 = or i1 %1272, %1274
  br i1 %1275, label %1276, label %1277, !prof !2

1276:                                             ; preds = %1267
  call void @llvm.trap() #11
  unreachable

1277:                                             ; preds = %1267
  %1278 = trunc i33 %1273 to i32
  store i32 %1278, i32* %1268, align 4
  br label %1301

1279:                                             ; preds = %1009, %1041, %533, %977, %1014, %1018
  %1280 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  store i32 274, i32* %1280, align 8
  %1281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1282 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1281, %"class.WTF::StringImpl"** %1282, align 8
  %1283 = icmp eq %"class.WTF::StringImpl"* %1281, null
  br i1 %1283, label %1317, label %1284

1284:                                             ; preds = %1279
  %1285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1286 = load atomic i32, i32* %1285 monotonic, align 4
  %1287 = and i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  br i1 %1288, label %1289, label %1301

1289:                                             ; preds = %1284
  %1290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1281, i64 0, i32 0
  %1291 = load i32, i32* %1290, align 4
  %1292 = zext i32 %1291 to i33
  %1293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1292, i33 1) #11
  %1294 = extractvalue { i33, i1 } %1293, 1
  %1295 = extractvalue { i33, i1 } %1293, 0
  %1296 = icmp slt i33 %1295, 0
  %1297 = or i1 %1294, %1296
  br i1 %1297, label %1298, label %1299, !prof !2

1298:                                             ; preds = %1289
  call void @llvm.trap() #11
  unreachable

1299:                                             ; preds = %1289
  %1300 = trunc i33 %1295 to i32
  store i32 %1300, i32* %1290, align 4
  br label %1301

1301:                                             ; preds = %1299, %1284, %1277, %1262, %1255, %1240, %1234, %1219, %623, %629, %822, %799, %529, %500, %472, %444, %377
  %1302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %1303 = icmp eq %"class.WTF::StringImpl"* %1302, null
  br i1 %1303, label %1317, label %1304

1304:                                             ; preds = %1301
  %1305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1306 = load atomic i32, i32* %1305 monotonic, align 4
  %1307 = and i32 %1306, 2
  %1308 = icmp eq i32 %1307, 0
  %1309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1302, i64 0, i32 0
  %1310 = load i32, i32* %1309, align 4
  br i1 %1308, label %1311, label %1313

1311:                                             ; preds = %1304
  %1312 = add i32 %1310, -1
  store i32 %1312, i32* %1309, align 4
  br label %1313

1313:                                             ; preds = %1311, %1304
  %1314 = phi i32 [ %1312, %1311 ], [ %1310, %1304 ]
  %1315 = icmp eq i32 %1314, 0
  br i1 %1315, label %1316, label %1317

1316:                                             ; preds = %1313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1302) #11
  br label %1317

1317:                                             ; preds = %1215, %1236, %1257, %1279, %1301, %1313, %1316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #11
  br label %1318

1318:                                             ; preds = %94, %98, %99, %159, %163, %166, %170, %174, %203, %208, %235, %240, %268, %273, %280, %326, %372, %1317, %132, %131, %124, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.5"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.45"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #11
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %6, i8* %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #11
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #11
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.45"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #11
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i8* %45) #11
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.44"* nonnull %46, i8* %25) #11
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i8* %49) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #11
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #11
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.43"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #11
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.43"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #11
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i8* %105) #11
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.44"* nonnull %106, i16* %85) #11
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i16* %109) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #11
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #11
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser9NextTokenEv(%"struct.blink::xpath::Token"* noalias sret, %"class.blink::xpath::Parser"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %0, i64 0, i32 0
  %4 = bitcast %"struct.blink::xpath::Token"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink5xpath6Parser17NextTokenInternalEv(%"struct.blink::xpath::Token"* sret %0, %"class.blink::xpath::Parser"* %1)
  %5 = load i32, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %1, i64 0, i32 4
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6ParserC2Ev(%"class.blink::xpath::Parser"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 5
  store %"class.blink::XPathNSResolver"* null, %"class.blink::XPathNSResolver"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 0
  store %"class.blink::xpath::Expression"* null, %"class.blink::xpath::Expression"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6Parser5ResetERKN3WTF6StringE(%"class.blink::xpath::Parser"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #11
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %27 = bitcast %"class.WTF::String"* %4 to i64*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %44

44:                                               ; preds = %25, %40, %43
  %45 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 0
  store %"class.blink::xpath::Expression"* null, %"class.blink::xpath::Expression"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 1
  store i8 0, i8* %47, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6ParserD2Ev(%"class.blink::xpath::Parser"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink5xpath6Parser3LexEPv(%"class.blink::xpath::Parser"*, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.blink::xpath::Token", align 8
  %4 = bitcast %"struct.blink::xpath::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast %"struct.blink::xpath::Token"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN5blink5xpath6Parser17NextTokenInternalEv(%"struct.blink::xpath::Token"* nonnull sret %3, %"class.blink::xpath::Parser"* %0) #11
  %8 = load i32, i32* %5, align 8, !alias.scope !46
  %9 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 4
  store i32 %8, i32* %9, align 8, !noalias !46
  switch i32 %8, label %47 [
    i32 265, label %10
    i32 258, label %14
    i32 260, label %18
    i32 259, label %18
    i32 266, label %22
    i32 267, label %22
    i32 268, label %22
    i32 269, label %22
    i32 270, label %22
    i32 271, label %22
    i32 274, label %22
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %3, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i8* %1 to i32*
  store i32 %12, i32* %13, align 4
  br label %47

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %3, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = bitcast i8* %1 to i32*
  store i32 %16, i32* %17, align 4
  br label %47

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds %"struct.blink::xpath::Token", %"struct.blink::xpath::Token"* %3, i64 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = bitcast i8* %1 to i32*
  store i32 %20, i32* %21, align 4
  br label %47

22:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %24 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #11
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  call void @llvm.trap() #11
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  %43 = load i32, i32* %5, align 8
  br label %44

44:                                               ; preds = %22, %26, %41
  %45 = phi i32 [ %8, %22 ], [ %8, %26 ], [ %43, %41 ]
  %46 = bitcast i8* %1 to i64*
  store i64 %24, i64* %46, align 8
  br label %47

47:                                               ; preds = %44, %2, %18, %14, %10
  %48 = phi i32 [ %45, %44 ], [ %8, %2 ], [ %8, %18 ], [ 258, %14 ], [ 265, %10 ]
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #11
  br label %64

64:                                               ; preds = %47, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5xpath6Parser11ExpandQNameERKN3WTF6StringERNS2_12AtomicStringES7_(%"class.blink::xpath::Parser"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %179, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  br i1 %13, label %27, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %157, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %21 = zext i32 %17 to i64
  %22 = tail call i8* @memchr(i8* %20, i32 58, i64 %21) #12
  %23 = icmp eq i8* %22, null
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %26 = sub i64 %24, %25
  br i1 %23, label %157, label %42

27:                                               ; preds = %9
  %28 = bitcast %"class.WTF::StringImpl"* %14 to i16*
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %157, label %32

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %32, %39
  %35 = phi i64 [ %40, %39 ], [ 0, %32 ]
  %36 = getelementptr inbounds i16, i16* %28, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %37, 58
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = add nuw nsw i64 %35, 1
  %41 = icmp eq i64 %40, %33
  br i1 %41, label %157, label %34

42:                                               ; preds = %34, %19
  %43 = phi i64 [ %26, %19 ], [ %35, %34 ]
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %157, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 5
  %48 = load %"class.blink::XPathNSResolver"*, %"class.blink::XPathNSResolver"** %47, align 8
  %49 = icmp eq %"class.blink::XPathNSResolver"* %48, null
  br i1 %49, label %199, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 0, i32 %44) #11
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %53, align 8
  %54 = bitcast %"class.blink::XPathNSResolver"* %48 to %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)***
  %55 = load %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)** %55, i64 9
  %57 = load %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::XPathNSResolver"*, %"class.WTF::String"*)** %56, align 8
  %58 = call %"class.WTF::StringImpl"* %57(%"class.blink::XPathNSResolver"* nonnull %48, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %60 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  store i64 %59, i64* %60, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %77

77:                                               ; preds = %76, %73, %50
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #11
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %199, label %96

96:                                               ; preds = %93
  %97 = add nuw i32 %44, 1
  %98 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %97, i32 -1) #11
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %123, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 acquire, align 4
  %103 = and i32 %102, 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %100
  %106 = load atomic i32, i32* %101 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #11
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #11
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %123

121:                                              ; preds = %100
  %122 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %123

123:                                              ; preds = %96, %105, %119, %121
  %124 = phi %"class.WTF::StringImpl"* [ %122, %121 ], [ %98, %105 ], [ %98, %119 ], [ null, %96 ]
  %125 = ptrtoint %"class.WTF::StringImpl"* %124 to i64
  %126 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  store i64 %125, i64* %126, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #11
  br label %143

143:                                              ; preds = %142, %139, %123
  br i1 %99, label %199, label %144

144:                                              ; preds = %143
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %199

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %199

157:                                              ; preds = %39, %42, %27, %15, %19
  %158 = load atomic i32, i32* %10 acquire, align 4
  %159 = and i32 %158, 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %157
  %162 = load atomic i32, i32* %10 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %179

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i33
  %169 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #11
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %165
  tail call void @llvm.trap() #11
  unreachable

175:                                              ; preds = %165
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %179

177:                                              ; preds = %157
  %178 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %179

179:                                              ; preds = %4, %161, %175, %177
  %180 = phi %"class.WTF::StringImpl"* [ %178, %177 ], [ %7, %161 ], [ %7, %175 ], [ null, %4 ]
  %181 = ptrtoint %"class.WTF::StringImpl"* %180 to i64
  %182 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %183 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  store i64 %181, i64* %182, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #11
  br label %199

199:                                              ; preds = %179, %195, %198, %156, %153, %143, %93, %46
  %200 = phi i1 [ false, %46 ], [ false, %93 ], [ true, %143 ], [ true, %153 ], [ true, %156 ], [ true, %198 ], [ true, %195 ], [ true, %179 ]
  ret i1 %200
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::xpath::Expression"* @_ZN5blink5xpath6Parser14ParseStatementERKN3WTF6StringEPNS_15XPathNSResolverERNS_14ExceptionStateE(%"class.blink::xpath::Parser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::XPathNSResolver"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.xpathyy::YyParser", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.10", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.10", align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %4
  %33 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %34 = bitcast %"class.WTF::String"* %11 to i64*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  store i64 %33, i64* %34, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %32, %47, %50
  %52 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 0
  store %"class.blink::xpath::Expression"* null, %"class.blink::xpath::Expression"** %53, align 8
  %54 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 1
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %0, i64 0, i32 5
  store %"class.blink::XPathNSResolver"* %2, %"class.blink::XPathNSResolver"** %55, align 8
  %56 = load i64, i64* bitcast (%"class.blink::xpath::Parser"** @_ZN5blink5xpath6Parser15current_parser_E to i64*), align 8
  store %"class.blink::xpath::Parser"* %0, %"class.blink::xpath::Parser"** @_ZN5blink5xpath6Parser15current_parser_E, align 8
  %57 = bitcast %"class.xpathyy::YyParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #11
  call void @_ZN7xpathyy8YyParserC1EPN5blink5xpath6ParserE(%"class.xpathyy::YyParser"* nonnull %5, %"class.blink::xpath::Parser"* %0) #11
  %58 = call i32 @_ZN7xpathyy8YyParser5parseEv(%"class.xpathyy::YyParser"* nonnull %5) #11
  call void @_ZN7xpathyy8YyParserD1Ev(%"class.xpathyy::YyParser"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #11
  store i64 %56, i64* bitcast (%"class.blink::xpath::Parser"** @_ZN5blink5xpath6Parser15current_parser_E to i64*), align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %361, label %60

60:                                               ; preds = %51
  store %"class.blink::xpath::Expression"* null, %"class.blink::xpath::Expression"** %53, align 8
  %61 = load i8, i8* %54, align 8, !range !49
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %212, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = bitcast %"class.WTF::StringAppend.10"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %143, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #11
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #11
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %83, %68
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = load atomic i32, i32* %69 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %100

90:                                               ; preds = %85
  %91 = zext i32 %86 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %90
  call void @llvm.trap() #11
  unreachable

98:                                               ; preds = %90
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %73, align 4
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i32 [ %99, %98 ], [ %86, %85 ]
  %102 = load atomic i32, i32* %69 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %100
  %106 = add i32 %101, -1
  store i32 %106, i32* %73, align 4
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i32 [ %106, %105 ], [ %101, %100 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %111

111:                                              ; preds = %107, %110
  %112 = load atomic i32, i32* %69 monotonic, align 4, !noalias !50
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = load i32, i32* %73, align 4
  br i1 %114, label %116, label %126

116:                                              ; preds = %111
  %117 = zext i32 %115 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #11
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !2

123:                                              ; preds = %116
  call void @llvm.trap() #11, !noalias !50
  unreachable

124:                                              ; preds = %116
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %73, align 4, !noalias !50
  br label %126

126:                                              ; preds = %111, %124
  %127 = phi i32 [ %125, %124 ], [ %115, %111 ]
  %128 = bitcast %"class.WTF::StringAppend.10"* %7 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.9 to i64), i64* %128, align 8, !alias.scope !50
  %129 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %129, align 8, !alias.scope !50
  %130 = load atomic i32, i32* %69 monotonic, align 4, !noalias !50
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %147

133:                                              ; preds = %126
  %134 = zext i32 %127 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #11
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !2

140:                                              ; preds = %133
  call void @llvm.trap() #11, !noalias !50
  unreachable

141:                                              ; preds = %133
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %73, align 4, !noalias !50
  br label %147

143:                                              ; preds = %63
  %144 = bitcast %"class.WTF::StringAppend.10"* %7 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.9 to i64), i64* %144, align 8, !alias.scope !50
  %145 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %145, align 8, !alias.scope !50
  %146 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %146, align 8, !alias.scope !50
  br label %159

147:                                              ; preds = %141, %126
  %148 = phi i32 [ %142, %141 ], [ %127, %126 ]
  %149 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i8** %149, align 8, !alias.scope !50
  %150 = load atomic i32, i32* %69 monotonic, align 4, !noalias !50
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = add i32 %148, -1
  store i32 %154, i32* %73, align 4, !noalias !50
  br label %155

155:                                              ; preds = %153, %147
  %156 = phi i32 [ %154, %153 ], [ %148, %147 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11, !noalias !50
  br label %159

159:                                              ; preds = %143, %155, %158
  %160 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.10"* nonnull %7)
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %161, align 8
  %162 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %163 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %162, align 8
  %164 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %163, align 8
  call void %164(%"class.blink::ExceptionState"* %3, i32 14, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #11
  br label %180

180:                                              ; preds = %159, %176, %179
  %181 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #11
  br label %197

197:                                              ; preds = %180, %193, %196
  br i1 %67, label %211, label %198

198:                                              ; preds = %197
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %211

211:                                              ; preds = %197, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %363

212:                                              ; preds = %60
  %213 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #11
  %214 = bitcast %"class.WTF::StringAppend.10"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #11
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %292, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %234

224:                                              ; preds = %217
  %225 = zext i32 %223 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #11
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !2

231:                                              ; preds = %224
  call void @llvm.trap() #11
  unreachable

232:                                              ; preds = %224
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %222, align 4
  br label %234

234:                                              ; preds = %232, %217
  %235 = phi i32 [ %233, %232 ], [ %223, %217 ]
  %236 = load atomic i32, i32* %218 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %249

239:                                              ; preds = %234
  %240 = zext i32 %235 to i33
  %241 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %240, i33 1) #11
  %242 = extractvalue { i33, i1 } %241, 1
  %243 = extractvalue { i33, i1 } %241, 0
  %244 = icmp slt i33 %243, 0
  %245 = or i1 %242, %244
  br i1 %245, label %246, label %247, !prof !2

246:                                              ; preds = %239
  call void @llvm.trap() #11
  unreachable

247:                                              ; preds = %239
  %248 = trunc i33 %243 to i32
  store i32 %248, i32* %222, align 4
  br label %249

249:                                              ; preds = %247, %234
  %250 = phi i32 [ %248, %247 ], [ %235, %234 ]
  %251 = load atomic i32, i32* %218 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %249
  %255 = add i32 %250, -1
  store i32 %255, i32* %222, align 4
  br label %256

256:                                              ; preds = %254, %249
  %257 = phi i32 [ %255, %254 ], [ %250, %249 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #11
  br label %260

260:                                              ; preds = %256, %259
  %261 = load atomic i32, i32* %218 monotonic, align 4, !noalias !53
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = load i32, i32* %222, align 4
  br i1 %263, label %265, label %275

265:                                              ; preds = %260
  %266 = zext i32 %264 to i33
  %267 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #11
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !2

272:                                              ; preds = %265
  call void @llvm.trap() #11, !noalias !53
  unreachable

273:                                              ; preds = %265
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %222, align 4, !noalias !53
  br label %275

275:                                              ; preds = %260, %273
  %276 = phi i32 [ %274, %273 ], [ %264, %260 ]
  %277 = bitcast %"class.WTF::StringAppend.10"* %9 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.9 to i64), i64* %277, align 8, !alias.scope !53
  %278 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %278, align 8, !alias.scope !53
  %279 = load atomic i32, i32* %218 monotonic, align 4, !noalias !53
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %296

282:                                              ; preds = %275
  %283 = zext i32 %276 to i33
  %284 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %283, i33 1) #11
  %285 = extractvalue { i33, i1 } %284, 1
  %286 = extractvalue { i33, i1 } %284, 0
  %287 = icmp slt i33 %286, 0
  %288 = or i1 %285, %287
  br i1 %288, label %289, label %290, !prof !2

289:                                              ; preds = %282
  call void @llvm.trap() #11, !noalias !53
  unreachable

290:                                              ; preds = %282
  %291 = trunc i33 %286 to i32
  store i32 %291, i32* %222, align 4, !noalias !53
  br label %296

292:                                              ; preds = %212
  %293 = bitcast %"class.WTF::StringAppend.10"* %9 to i64*
  store i64 ptrtoint ([13 x i8]* @.str.9 to i64), i64* %293, align 8, !alias.scope !53
  %294 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %294, align 8, !alias.scope !53
  %295 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i8** %295, align 8, !alias.scope !53
  br label %308

296:                                              ; preds = %290, %275
  %297 = phi i32 [ %291, %290 ], [ %276, %275 ]
  %298 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i8** %298, align 8, !alias.scope !53
  %299 = load atomic i32, i32* %218 monotonic, align 4, !noalias !53
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %296
  %303 = add i32 %297, -1
  store i32 %303, i32* %222, align 4, !noalias !53
  br label %304

304:                                              ; preds = %302, %296
  %305 = phi i32 [ %303, %302 ], [ %297, %296 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #11, !noalias !53
  br label %308

308:                                              ; preds = %292, %304, %307
  %309 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.10"* nonnull %9)
  %310 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %309, %"class.WTF::StringImpl"** %310, align 8
  %311 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %312 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %311, align 8
  %313 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %312, align 8
  call void %313(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %308
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #11
  br label %329

329:                                              ; preds = %308, %325, %328
  %330 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #11
  br label %346

346:                                              ; preds = %329, %342, %345
  br i1 %216, label %360, label %347

347:                                              ; preds = %346
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #11
  br label %360

360:                                              ; preds = %346, %356, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #11
  br label %363

361:                                              ; preds = %51
  %362 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %53, align 8
  store %"class.blink::xpath::Expression"* null, %"class.blink::xpath::Expression"** %53, align 8
  br label %363

363:                                              ; preds = %211, %360, %361
  %364 = phi %"class.blink::xpath::Expression"* [ %362, %361 ], [ null, %360 ], [ null, %211 ]
  ret %"class.blink::xpath::Expression"* %364
}

declare void @_ZN7xpathyy8YyParserC1EPN5blink5xpath6ParserE(%"class.xpathyy::YyParser"*, %"class.blink::xpath::Parser"*) unnamed_addr #2

declare i32 @_ZN7xpathyy8YyParser5parseEv(%"class.xpathyy::YyParser"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7xpathyy8YyParserD1Ev(%"class.xpathyy::YyParser"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.10"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.45"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.10"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.10"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.10"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.10"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare signext i8 @u_charType_69(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKPKcRKS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = load i8*, i8** %1, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #12
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %19, i64 %24) #11
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %26) #11
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi %"class.WTF::StringImpl"* [ %33, %31 ], [ %26, %23 ]
  %36 = phi i32 [ %32, %31 ], [ %29, %23 ]
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %51

51:                                               ; preds = %34, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %52 = and i32 %36, %16
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %130, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = xor i32 %36, -1
  %62 = lshr i32 %36, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %58, %109
  %75 = phi %"struct.WTF::KeyValuePair"* [ %54, %58 ], [ %115, %109 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ null, %58 ], [ %110, %109 ]
  %77 = phi i64 [ %53, %58 ], [ %114, %109 ]
  %78 = phi i64 [ 0, %58 ], [ %112, %109 ]
  %79 = bitcast %"struct.WTF::KeyValuePair"* %75 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, inttoptr (i64 -1 to i8*)
  br i1 %81, label %109, label %82

82:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  %83 = load i8*, i8** %1, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = call i64 @strlen(i8* nonnull %83) #12
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi i64 [ %86, %85 ], [ 0, %82 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %83, i64 %88) #11
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %92 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"* %91) #11
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  br label %108

108:                                              ; preds = %87, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br i1 %92, label %143, label %109

109:                                              ; preds = %74, %108
  %110 = phi %"struct.WTF::KeyValuePair"* [ %76, %108 ], [ %75, %74 ]
  %111 = icmp eq i64 %78, 0
  %112 = select i1 %111, i64 %73, i64 %78
  %113 = add i64 %112, %77
  %114 = and i64 %113, %17
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %114
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %74

119:                                              ; preds = %109
  %120 = icmp eq %"struct.WTF::KeyValuePair"* %110, null
  br i1 %120, label %130, label %121

121:                                              ; preds = %119
  %122 = bitcast %"struct.WTF::KeyValuePair"* %110 to i64*
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1
  store i32 -128, i32* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, 2147483647
  %127 = and i32 %126, 2147483647
  %128 = and i32 %125, -2147483648
  %129 = or i32 %127, %128
  store i32 %129, i32* %124, align 8
  br label %130

130:                                              ; preds = %51, %119, %121
  %131 = phi %"struct.WTF::KeyValuePair"* [ %110, %121 ], [ %115, %119 ], [ %54, %51 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath4Step4AxisEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKPKcRKS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %131, i8** dereferenceable(8) %1, i32* dereferenceable(4) %2)
  %132 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %14, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %130
  %142 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %131)
  br label %143

143:                                              ; preds = %108, %130, %141
  %144 = phi i8 [ 1, %130 ], [ 1, %141 ], [ 0, %108 ]
  %145 = phi %"struct.WTF::KeyValuePair"* [ %131, %130 ], [ %142, %141 ], [ %75, %108 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink5xpath4Step4AxisEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  store i32 -128, i32* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  store i32 -128, i32* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  store i32 -128, i32* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  store i32 -128, i32* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  store i32 -128, i32* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !56

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath4Step4AxisEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKPKcRKS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = load i8*, i8** %1, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #12
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %6, i64 %11) #11
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %50 = load i32, i32* %2, align 4
  store i32 %50, i32* %49, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #11
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #11
  %85 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #11
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 %77, i32 1
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair"* %85, %"struct.WTF::KeyValuePair"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath4Step4AxisEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.33"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.33"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.33"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.33", align 8
  %6 = bitcast %"class.WTF::HashTable.33"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.33"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.33"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.33"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.33"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.33"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #11
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.33"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #11
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #11
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.33"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.33"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.33"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #11
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #11
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.33"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.33"*, %"class.WTF::String"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.33", %"class.WTF::HashTable.33"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.33"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #11
  ret %"class.WTF::String"* %37
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #11
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #11
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %8) #11
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %8) #11
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.43"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #11
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.43"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #11
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %48) #11
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.44"* nonnull %49, i8* %1) #11
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %52) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %6) #11
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.44"* nonnull %53, i8* %56) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.43"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.43"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #11
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.43"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #11
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %48) #11
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.44"* nonnull %49, i16* %1) #11
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i16* %52) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"* %6) #11
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.44"* nonnull %53, i16* %56) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.5"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.45", %"class.WTF::StringTypeAdapter.45"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.5", %"class.WTF::StringAppend.5"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %21) #11
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %46, i8* %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.44"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.45"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.44"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.45"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.10"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.45", %"class.WTF::StringTypeAdapter.45"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.11"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.11"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.10"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.45"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.45"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.45", %"class.WTF::StringTypeAdapter.45"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.44"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.11"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.10"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.43", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.45"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.45"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.45", %"class.WTF::StringTypeAdapter.45"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.43"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.45"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.43", %"class.WTF::StringTypeAdapter.43"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.44"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.11"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.45"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.11"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.45", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.45", %"class.WTF::StringTypeAdapter.45"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.45"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.45"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.32, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!8 = distinct !{!8, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!11 = distinct !{!11, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!14 = distinct !{!14, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!17 = distinct !{!17, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!20 = distinct !{!20, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii: argument 0"}
!23 = distinct !{!23, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEii"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!26 = distinct !{!26, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!29 = distinct !{!29, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!32 = distinct !{!32, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!35 = distinct !{!35, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!38 = distinct !{!38, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi: argument 0"}
!41 = distinct !{!41, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_8EqTestOp6OpcodeEi"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_9NumericOp6OpcodeEi: argument 0"}
!44 = distinct !{!44, !"_ZN5blink5xpath6Parser19MakeTokenAndAdvanceEiNS0_9NumericOp6OpcodeEi"}
!45 = !{!"branch_weights", i32 1, i32 1048575}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink5xpath6Parser9NextTokenEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink5xpath6Parser9NextTokenEv"}
!49 = !{i8 0, i8 2}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!55 = distinct !{!55, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!56 = distinct !{!56, !57}
!57 = !{!"llvm.loop.unroll.disable"}
