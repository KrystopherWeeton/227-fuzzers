; ModuleID = '../../components/viz/service/display/skia_output_surface.cc'
source_filename = "../../components/viz/service/display/skia_output_surface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::SkiaOutputSurface" = type { %"class.viz::OutputSurface", %"class.viz::ExternalUseClient" }
%"class.viz::OutputSurface" = type { i32 (...)**, %"struct.viz::OutputSurface::Capabilities", %class.scoped_refptr, %"class.std::__1::unique_ptr", i32, %class.SkMatrix44 }
%"struct.viz::OutputSurface::Capabilities" = type { i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, [15 x i32] }
%class.scoped_refptr = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::SoftwareOutputDevice"* }
%"class.viz::SoftwareOutputDevice" = type { i32 (...)**, %class.scoped_refptr.0, %"class.viz::SoftwareOutputDeviceClient"*, %"class.gfx::Size", %"class.gfx::Rect", %class.sk_sp, %"class.std::__1::unique_ptr.2" }
%class.scoped_refptr.0 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.viz::SoftwareOutputDeviceClient" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::ExternalUseClient" = type { i32 (...)** }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.10", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

$_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv = comdat any

$_ZN3viz13OutputSurface12SetFrameRateEf = comdat any

@_ZTVN3viz17SkiaOutputSurfaceE = hidden unnamed_addr constant { [48 x i8*], [4 x i8*] } { [48 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SkiaOutputSurface"*)* @_ZN3viz17SkiaOutputSurfaceD2Ev to i8*), i8* bitcast (void (%"class.viz::SkiaOutputSurface"*)* @_ZN3viz17SkiaOutputSurfaceD0Ev to i8*), i8* bitcast (%"class.viz::SkiaOutputSurface"* (%"class.viz::SkiaOutputSurface"*)* @_ZN3viz17SkiaOutputSurface19AsSkiaOutputSurfaceEv to i8*), i8* bitcast (i32 (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface16GetSurfaceHandleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, %"class.gfx::Rect"*)* @_ZN3viz13OutputSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, i1)* @_ZN3viz13OutputSurface17SetEnableDCLayersEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface17GetOverlayMailboxEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%"class.viz::OutputSurface"*)* @_ZNK3viz13OutputSurface27GetCurrentFramebufferDamageEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @_ZN3viz13OutputSurface19SetGpuVSyncCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, i1)* @_ZN3viz13OutputSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::ScopedClosureRunner"*, %"class.viz::OutputSurface"*)* @_ZN3viz13OutputSurface20GetCacheBackBufferCbEv to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, i1)* @_ZN3viz13OutputSurface29SetNeedsSwapSizeNotificationsEb to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*)* @_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv to i8*), i8* bitcast (void (%"class.viz::OutputSurface"*, float)* @_ZN3viz13OutputSurface12SetFrameRateEf to i8*), i8* bitcast (void ()* @_ZN3viz13OutputSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [4 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz17SkiaOutputSurfaceD1Ev = hidden unnamed_addr alias void (%"class.viz::SkiaOutputSurface"*), void (%"class.viz::SkiaOutputSurface"*)* @_ZN3viz17SkiaOutputSurfaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SkiaOutputSurfaceC2ENS_13OutputSurface4TypeE(%"class.viz::SkiaOutputSurface"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SkiaOutputSurface", %"class.viz::SkiaOutputSurface"* %0, i64 0, i32 0
  tail call void @_ZN3viz13OutputSurfaceC2ENS0_4TypeE(%"class.viz::OutputSurface"* %3, i32 %1) #6
  %4 = getelementptr inbounds %"class.viz::SkiaOutputSurface", %"class.viz::SkiaOutputSurface"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.viz::SkiaOutputSurface", %"class.viz::SkiaOutputSurface"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [48 x i8*], [4 x i8*] }, { [48 x i8*], [4 x i8*] }* @_ZTVN3viz17SkiaOutputSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [48 x i8*], [4 x i8*] }, { [48 x i8*], [4 x i8*] }* @_ZTVN3viz17SkiaOutputSurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN3viz13OutputSurfaceC2ENS0_4TypeE(%"class.viz::OutputSurface"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz13OutputSurfaceD2Ev(%"class.viz::OutputSurface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SkiaOutputSurfaceD2Ev(%"class.viz::SkiaOutputSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SkiaOutputSurface", %"class.viz::SkiaOutputSurface"* %0, i64 0, i32 0
  tail call void @_ZN3viz13OutputSurfaceD2Ev(%"class.viz::OutputSurface"* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3viz17SkiaOutputSurfaceD0Ev(%"class.viz::SkiaOutputSurface"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.viz::SkiaOutputSurface"* @_ZN3viz17SkiaOutputSurface19AsSkiaOutputSurfaceEv(%"class.viz::SkiaOutputSurface"* readnone returned) unnamed_addr #5 align 2 {
  ret %"class.viz::SkiaOutputSurface"* %0
}

declare i32 @_ZNK3viz13OutputSurface16GetSurfaceHandleEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3viz13OutputSurface16SetDrawRectangleERKN3gfx4RectE(%"class.viz::OutputSurface"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN3viz13OutputSurface17SetEnableDCLayersEb(%"class.viz::OutputSurface"*, i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK3viz13OutputSurface17GetOverlayMailboxEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare { i64, i64 } @_ZNK3viz13OutputSurface27GetCurrentFramebufferDamageEv(%"class.viz::OutputSurface"*) unnamed_addr #1

declare void @_ZN3viz13OutputSurface19SetGpuVSyncCallbackEN4base17RepeatingCallbackIFvNS1_9TimeTicksENS1_9TimeDeltaEEEE() unnamed_addr

declare void @_ZN3viz13OutputSurface18SetGpuVSyncEnabledEb(%"class.viz::OutputSurface"*, i1 zeroext) unnamed_addr #1

declare void @_ZN3viz13OutputSurface20GetCacheBackBufferCbEv(%"class.base::ScopedClosureRunner"* sret, %"class.viz::OutputSurface"*) unnamed_addr #1

declare void @_ZN3viz13OutputSurface29SetNeedsSwapSizeNotificationsEb(%"class.viz::OutputSurface"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz13OutputSurface30SetNeedsMeasureNextDrawLatencyEv(%"class.viz::OutputSurface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz13OutputSurface12SetFrameRateEf(%"class.viz::OutputSurface"*, float) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3viz13OutputSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
