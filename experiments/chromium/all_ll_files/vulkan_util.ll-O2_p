; ModuleID = '../../gpu/vulkan/vulkan_util.cc'
source_filename = "../../gpu/vulkan/vulkan_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkQueue_T = type opaque
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %struct.VkSemaphore_T** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102", %"class.gpu::VulkanFunctionPointers::VulkanFunction.103", %"class.gpu::VulkanFunctionPointers::VulkanFunction.104", %"class.gpu::VulkanFunctionPointers::VulkanFunction.105", %"class.gpu::VulkanFunctionPointers::VulkanFunction.106", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.108", %"class.gpu::VulkanFunctionPointers::VulkanFunction.109", %"class.gpu::VulkanFunctionPointers::VulkanFunction.110", %"class.gpu::VulkanFunctionPointers::VulkanFunction.111", %"class.gpu::VulkanFunctionPointers::VulkanFunction.112", %"class.gpu::VulkanFunctionPointers::VulkanFunction.113", %"class.gpu::VulkanFunctionPointers::VulkanFunction.114", %"class.gpu::VulkanFunctionPointers::VulkanFunction.115", %"class.gpu::VulkanFunctionPointers::VulkanFunction.116", %"class.gpu::VulkanFunctionPointers::VulkanFunction.117", %"class.gpu::VulkanFunctionPointers::VulkanFunction.118", %"class.gpu::VulkanFunctionPointers::VulkanFunction.119", %"class.gpu::VulkanFunctionPointers::VulkanFunction.120", %"class.gpu::VulkanFunctionPointers::VulkanFunction.121", %"class.gpu::VulkanFunctionPointers::VulkanFunction.122", %"class.gpu::VulkanFunctionPointers::VulkanFunction.123", %"class.gpu::VulkanFunctionPointers::VulkanFunction.124", %"class.gpu::VulkanFunctionPointers::VulkanFunction.125", %"class.gpu::VulkanFunctionPointers::VulkanFunction.126", %"class.gpu::VulkanFunctionPointers::VulkanFunction.127", %"class.gpu::VulkanFunctionPointers::VulkanFunction.128", %"class.gpu::VulkanFunctionPointers::VulkanFunction.129", %"class.gpu::VulkanFunctionPointers::VulkanFunction.130", %"class.gpu::VulkanFunctionPointers::VulkanFunction.131", %"class.gpu::VulkanFunctionPointers::VulkanFunction.132", %"class.gpu::VulkanFunctionPointers::VulkanFunction.133", %"class.gpu::VulkanFunctionPointers::VulkanFunction.134", %"class.gpu::VulkanFunctionPointers::VulkanFunction.135", %"class.gpu::VulkanFunctionPointers::VulkanFunction.136", %"class.gpu::VulkanFunctionPointers::VulkanFunction.137", %"class.gpu::VulkanFunctionPointers::VulkanFunction.138", %"class.gpu::VulkanFunctionPointers::VulkanFunction.139", %"class.gpu::VulkanFunctionPointers::VulkanFunction.140", %"class.gpu::VulkanFunctionPointers::VulkanFunction.141", %"class.gpu::VulkanFunctionPointers::VulkanFunction.142", %"class.gpu::VulkanFunctionPointers::VulkanFunction.143", %"class.gpu::VulkanFunctionPointers::VulkanFunction.144", %"class.gpu::VulkanFunctionPointers::VulkanFunction.145", %"class.gpu::VulkanFunctionPointers::VulkanFunction.146", %"class.gpu::VulkanFunctionPointers::VulkanFunction.147", %"class.gpu::VulkanFunctionPointers::VulkanFunction.148", %"class.gpu::VulkanFunctionPointers::VulkanFunction.149", %"class.gpu::VulkanFunctionPointers::VulkanFunction.150", %"class.gpu::VulkanFunctionPointers::VulkanFunction.151", %"class.gpu::VulkanFunctionPointers::VulkanFunction.152", %"class.gpu::VulkanFunctionPointers::VulkanFunction.153", %"class.gpu::VulkanFunctionPointers::VulkanFunction.154", %"class.gpu::VulkanFunctionPointers::VulkanFunction.155", %"class.gpu::VulkanFunctionPointers::VulkanFunction.156", %"class.gpu::VulkanFunctionPointers::VulkanFunction.157", %"class.gpu::VulkanFunctionPointers::VulkanFunction.158", %"class.gpu::VulkanFunctionPointers::VulkanFunction.159", %"class.gpu::VulkanFunctionPointers::VulkanFunction.160", %"class.gpu::VulkanFunctionPointers::VulkanFunction.161", %"class.gpu::VulkanFunctionPointers::VulkanFunction.162", %"class.gpu::VulkanFunctionPointers::VulkanFunction.163", %"class.gpu::VulkanFunctionPointers::VulkanFunction.164", %"class.gpu::VulkanFunctionPointers::VulkanFunction.165", %"class.gpu::VulkanFunctionPointers::VulkanFunction.166", %"class.gpu::VulkanFunctionPointers::VulkanFunction.162", %"class.gpu::VulkanFunctionPointers::VulkanFunction.167", %"class.gpu::VulkanFunctionPointers::VulkanFunction.168", %"class.gpu::VulkanFunctionPointers::VulkanFunction.169", %"class.gpu::VulkanFunctionPointers::VulkanFunction.170", %"class.gpu::VulkanFunctionPointers::VulkanFunction.171", %"class.gpu::VulkanFunctionPointers::VulkanFunction.172", %"class.gpu::VulkanFunctionPointers::VulkanFunction.173", %"class.gpu::VulkanFunctionPointers::VulkanFunction.174", %"class.gpu::VulkanFunctionPointers::VulkanFunction.175", %"class.gpu::VulkanFunctionPointers::VulkanFunction.176", %"class.gpu::VulkanFunctionPointers::VulkanFunction.177", %"class.gpu::VulkanFunctionPointers::VulkanFunction.178", %"class.gpu::VulkanFunctionPointers::VulkanFunction.179", %"class.gpu::VulkanFunctionPointers::VulkanFunction.180", %"class.gpu::VulkanFunctionPointers::VulkanFunction.181", %"class.gpu::VulkanFunctionPointers::VulkanFunction.182", %"class.gpu::VulkanFunctionPointers::VulkanFunction.183", %"class.gpu::VulkanFunctionPointers::VulkanFunction.184", %"class.gpu::VulkanFunctionPointers::VulkanFunction.185", %"class.gpu::VulkanFunctionPointers::VulkanFunction.186", %"class.gpu::VulkanFunctionPointers::VulkanFunction.187", %"class.gpu::VulkanFunctionPointers::VulkanFunction.188", %"class.gpu::VulkanFunctionPointers::VulkanFunction.189", %"class.gpu::VulkanFunctionPointers::VulkanFunction.190", %"class.gpu::VulkanFunctionPointers::VulkanFunction.191", %"class.gpu::VulkanFunctionPointers::VulkanFunction.192" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%struct.VkInstance_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkDevice_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.103" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.104" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.105" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.106" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.107" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.108" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.109" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.110" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.111" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.112" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.113" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.114" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.115" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.116" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.117" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.118" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.119" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.120" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.121" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.122" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.123" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.124" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.125" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.126" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.127" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.128" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.129" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.130" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.131" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.132" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.133" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.134" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.135" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.136" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.137" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.138" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.139" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.140" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.141" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.142" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.143" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.144" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.145" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.146" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.147" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.148" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.149" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.150" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.151" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.152" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.153" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.154" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.155" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.156" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.157" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.158" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.159" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.160" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.161" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.163" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.164" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.165" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.166" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.162" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.167" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.168" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.169" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.170" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.171" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.172" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.173" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.174" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.175" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.176" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.177" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.178" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.179" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.180" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.181" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.182" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.183" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.184" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.185" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.186" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.187" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.188" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.189" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.190" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.191" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.192" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.VkExportSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.12", [4 x i8] }>
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i32 }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector.17", %"class.std::__1::vector.24", %"class.std::__1::vector.31", %"class.std::__1::vector.38" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i8**, i8**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8** }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.47" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector.17", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.40" }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"struct.gpu::GPUInfo" = type { %"class.base::TimeDelta", i8, i8, [6 x i8], %"struct.gpu::GPUInfo::GPUDevice", %"class.std::__1::vector.52", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], %"struct.gpu::VideoDecodeAcceleratorCapabilities", %"class.std::__1::vector.66", i8, %"class.std::__1::vector.73", i8, i8, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::GPUInfo::GPUDevice" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.gpu::GPUInfo::GPUDevice"*, %"struct.gpu::GPUInfo::GPUDevice"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.gpu::GPUInfo::GPUDevice"* }
%"struct.gpu::VideoDecodeAcceleratorCapabilities" = type <{ %"class.std::__1::vector.59", i32, [4 x i8] }>
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.61" }
%"struct.gpu::VideoDecodeAcceleratorSupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.gpu::VideoDecodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.68" }
%"struct.gpu::VideoEncodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", i32, i32 }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.gpu::VideoEncodeAcceleratorSupportedProfile"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"*, %"class.std::__1::__compressed_pair.82" }
%"struct.gpu::ImageDecodeAcceleratorSupportedProfile" = type { i32, %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i32*, i32*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i32* }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.gpu::ImageDecodeAcceleratorSupportedProfile"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.gpu::VulkanInfo" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [9 x i8] c"%u.%u.%u\00", align 1
@_ZN3gpu12_GLOBAL__N_114g_submit_countE = internal unnamed_addr global i64 0, align 8
@_ZZN3gpu23ReportUMAPerSwapBuffersEvE17last_submit_count = internal unnamed_addr global i64 0, align 8
@.str.1 = private unnamed_addr constant [37 x i8] c"GPU.Vulkan.QueueSubmitPerSwapBuffers\00", align 1
@_ZZN3gpu24CheckVulkanCompabilitiesERKNS_10VulkanInfoERKNS_7GPUInfoENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE22kMemoryObjectExtension = internal constant [24 x i8] c"GL_EXT_memory_object_fd\00", align 16
@_ZZN3gpu24CheckVulkanCompabilitiesERKNS_10VulkanInfoERKNS_7GPUInfoENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE19kSemaphoreExtension = internal constant [20 x i8] c"GL_EXT_semaphore_fd\00", align 16
@.str.3 = private unnamed_addr constant [51 x i8] c"GPU.Vulkan.PipelineCache.vkCreateGraphicsPipelines\00", align 1
@_ZZN3gpu23ReportUMAPerSwapBuffersEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@"_ZZZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TENK3$_0clEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0" = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24SubmitSignalVkSemaphoresEP9VkQueue_TRKN4base4spanIP13VkSemaphore_TLm18446744073709551615EEEP9VkFence_T(%struct.VkQueue_T*, %"class.base::span"* nocapture readonly dereferenceable(16), %struct.VkFence_T*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkSubmitInfo, align 8
  %5 = bitcast %struct.VkSubmitInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 64, i1 false)
  %6 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 0
  store i32 4, i32* %6, align 8
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 7
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  %12 = bitcast %struct.VkSemaphore_T*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 8
  %15 = bitcast %struct.VkSemaphore_T*** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %17 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %16, i64 0, i32 84, i32 0
  %18 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %17, align 8
  %19 = call i32 %18(%struct.VkQueue_T* %0, i32 1, %struct.VkSubmitInfo* nonnull %4, %struct.VkFence_T* %2) #7
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #7
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu23SubmitSignalVkSemaphoreEP9VkQueue_TP13VkSemaphore_TP9VkFence_T(%struct.VkQueue_T*, %struct.VkSemaphore_T*, %struct.VkFence_T*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkSubmitInfo, align 8
  %5 = alloca %struct.VkSemaphore_T*, align 8
  store %struct.VkSemaphore_T* %1, %struct.VkSemaphore_T** %5, align 8
  %6 = ptrtoint %struct.VkSemaphore_T** %5 to i64
  %7 = bitcast %struct.VkSubmitInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 64, i1 false) #7
  %8 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 0
  store i32 4, i32* %8, align 8
  %9 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 7
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %4, i64 0, i32 8
  %11 = bitcast %struct.VkSemaphore_T*** %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %13 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %12, i64 0, i32 84, i32 0
  %14 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %13, align 8
  %15 = call i32 %14(%struct.VkQueue_T* %0, i32 1, %struct.VkSubmitInfo* nonnull %4, %struct.VkFence_T* %2) #7
  %16 = icmp eq i32 %15, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #7
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu22SubmitWaitVkSemaphoresEP9VkQueue_TRKN4base4spanIP13VkSemaphore_TLm18446744073709551615EEEP9VkFence_T(%struct.VkQueue_T*, %"class.base::span"* nocapture readonly dereferenceable(16), %struct.VkFence_T*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %struct.VkSubmitInfo, align 8
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #7
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast i32** %8 to i64*
  br label %34

15:                                               ; preds = %3
  %16 = icmp ugt i64 %11, 4611686018427387903
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %18) #8
  unreachable

19:                                               ; preds = %15
  %20 = shl i64 %11, 2
  %21 = tail call i8* @_Znwm(i64 %20) #9
  %22 = bitcast i8* %21 to i32*
  %23 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i32, i32* %22, i64 %11
  store i32* %24, i32** %9, align 8
  %25 = bitcast i32** %8 to i64*
  %26 = ptrtoint i8* %21 to i64
  %27 = add nsw i64 %11, -1
  %28 = getelementptr i32, i32* %22, i64 %27
  %29 = ptrtoint i32* %28 to i64
  %30 = sub i64 4, %26
  %31 = add i64 %30, %29
  %32 = and i64 %31, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 %32, i1 false) #7
  %33 = ptrtoint i32* %24 to i64
  store i64 %33, i64* %25, align 8
  br label %34

34:                                               ; preds = %13, %19
  %35 = phi i64* [ %14, %13 ], [ %25, %19 ]
  %36 = phi i64 [ 0, %13 ], [ %26, %19 ]
  %37 = phi i64 [ 0, %13 ], [ %33, %19 ]
  %38 = phi i32* [ null, %13 ], [ %22, %19 ]
  %39 = ptrtoint i32* %38 to i64
  %40 = sub i64 %37, %39
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %42, label %133

42:                                               ; preds = %34
  %43 = lshr exact i64 %40, 2
  %44 = lshr i64 %40, 2
  %45 = icmp eq i64 %44, 0
  %46 = zext i1 %45 to i64
  %47 = add nuw nsw i64 %44, %46
  %48 = icmp ult i64 %47, 8
  br i1 %48, label %120, label %49

49:                                               ; preds = %42
  %50 = and i64 %47, 9223372036854775800
  %51 = sub nsw i64 %43, %50
  %52 = getelementptr i32, i32* %38, i64 %50
  %53 = add nsw i64 %50, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp ult i64 %53, 56
  br i1 %57, label %105, label %58

58:                                               ; preds = %49
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %102, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %103, %60 ]
  %63 = getelementptr i32, i32* %38, i64 %61
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %64, align 4
  %65 = getelementptr i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %66, align 4
  %67 = or i64 %61, 8
  %68 = getelementptr i32, i32* %38, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %69, align 4
  %70 = getelementptr i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %71, align 4
  %72 = or i64 %61, 16
  %73 = getelementptr i32, i32* %38, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %74, align 4
  %75 = getelementptr i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %76, align 4
  %77 = or i64 %61, 24
  %78 = getelementptr i32, i32* %38, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %79, align 4
  %80 = getelementptr i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %81, align 4
  %82 = or i64 %61, 32
  %83 = getelementptr i32, i32* %38, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %84, align 4
  %85 = getelementptr i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %86, align 4
  %87 = or i64 %61, 40
  %88 = getelementptr i32, i32* %38, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %89, align 4
  %90 = getelementptr i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %91, align 4
  %92 = or i64 %61, 48
  %93 = getelementptr i32, i32* %38, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %94, align 4
  %95 = getelementptr i32, i32* %93, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %96, align 4
  %97 = or i64 %61, 56
  %98 = getelementptr i32, i32* %38, i64 %97
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %99, align 4
  %100 = getelementptr i32, i32* %98, i64 4
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %101, align 4
  %102 = add i64 %61, 64
  %103 = add i64 %62, -8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %60, !llvm.loop !2

105:                                              ; preds = %60, %49
  %106 = phi i64 [ 0, %49 ], [ %102, %60 ]
  %107 = icmp eq i64 %56, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %115, %108 ], [ %106, %105 ]
  %110 = phi i64 [ %116, %108 ], [ %56, %105 ]
  %111 = getelementptr i32, i32* %38, i64 %109
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %112, align 4
  %113 = getelementptr i32, i32* %111, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> <i32 65536, i32 65536, i32 65536, i32 65536>, <4 x i32>* %114, align 4
  %115 = add i64 %109, 8
  %116 = add i64 %110, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %108, !llvm.loop !4

118:                                              ; preds = %108, %105
  %119 = icmp eq i64 %47, %50
  br i1 %119, label %129, label %120

120:                                              ; preds = %118, %42
  %121 = phi i64 [ %43, %42 ], [ %51, %118 ]
  %122 = phi i32* [ %38, %42 ], [ %52, %118 ]
  br label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %127, %123 ], [ %121, %120 ]
  %125 = phi i32* [ %126, %123 ], [ %122, %120 ]
  store i32 65536, i32* %125, align 4
  %126 = getelementptr inbounds i32, i32* %125, i64 1
  %127 = add nsw i64 %124, -1
  %128 = icmp sgt i64 %127, 0
  br i1 %128, label %123, label %129, !llvm.loop !6

129:                                              ; preds = %123, %118
  %130 = load i64, i64* %10, align 8
  %131 = bitcast %"class.std::__1::vector"* %4 to i64*
  %132 = load i64, i64* %131, align 8
  br label %133

133:                                              ; preds = %34, %129
  %134 = phi i64 [ %132, %129 ], [ %36, %34 ]
  %135 = phi i64 [ %130, %129 ], [ %11, %34 ]
  %136 = bitcast %struct.VkSubmitInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %136) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 72, i1 false)
  %137 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %5, i64 0, i32 0
  store i32 4, i32* %137, align 8
  %138 = trunc i64 %135 to i32
  %139 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %5, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  %141 = bitcast %struct.VkSemaphore_T*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %5, i64 0, i32 3
  %144 = bitcast %struct.VkSemaphore_T*** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = getelementptr inbounds %struct.VkSubmitInfo, %struct.VkSubmitInfo* %5, i64 0, i32 4
  %146 = bitcast i32** %145 to i64*
  store i64 %134, i64* %146, align 8
  %147 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %148 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %147, i64 0, i32 84, i32 0
  %149 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %148, align 8
  %150 = call i32 %149(%struct.VkQueue_T* %0, i32 1, %struct.VkSubmitInfo* nonnull %5, %struct.VkFence_T* %2) #7
  %151 = icmp eq i32 %150, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %136) #7
  %152 = load i32*, i32** %7, align 8
  %153 = icmp eq i32* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %133
  %155 = ptrtoint i32* %152 to i64
  store i64 %155, i64* %35, align 8
  %156 = bitcast i32* %152 to i8*
  call void @_ZdlPv(i8* %156) #9
  br label %157

157:                                              ; preds = %133, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret i1 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu21SubmitWaitVkSemaphoreEP9VkQueue_TP13VkSemaphore_TP9VkFence_T(%struct.VkQueue_T*, %struct.VkSemaphore_T*, %struct.VkFence_T*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkSemaphore_T*, align 8
  %5 = alloca %"class.base::span", align 8
  store %struct.VkSemaphore_T* %1, %struct.VkSemaphore_T** %4, align 8
  %6 = bitcast %"class.base::span"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  store i64 1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  store %struct.VkSemaphore_T** %4, %struct.VkSemaphore_T*** %8, align 8
  %9 = call zeroext i1 @_ZN3gpu22SubmitWaitVkSemaphoresEP9VkQueue_TRKN4base4spanIP13VkSemaphore_TLm18446744073709551615EEEP9VkFence_T(%struct.VkQueue_T* %0, %"class.base::span"* nonnull dereferenceable(16) %5, %struct.VkFence_T* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.VkSemaphore_T* @_ZN3gpu25CreateExternalVkSemaphoreEP10VkDevice_Tj(%struct.VkDevice_T*, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.VkExportSemaphoreCreateInfo, align 8
  %4 = alloca %struct.VkSemaphoreCreateInfo, align 8
  %5 = alloca %struct.VkSemaphore_T*, align 8
  %6 = bitcast %struct.VkExportSemaphoreCreateInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = getelementptr inbounds %struct.VkExportSemaphoreCreateInfo, %struct.VkExportSemaphoreCreateInfo* %3, i64 0, i32 0
  store i32 1000077000, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VkExportSemaphoreCreateInfo, %struct.VkExportSemaphoreCreateInfo* %3, i64 0, i32 1
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %struct.VkExportSemaphoreCreateInfo, %struct.VkExportSemaphoreCreateInfo* %3, i64 0, i32 2
  store i32 %1, i32* %9, align 8
  %10 = bitcast %struct.VkSemaphoreCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 0
  store i32 9, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 1
  %13 = bitcast i8** %12 to %struct.VkExportSemaphoreCreateInfo**
  store %struct.VkExportSemaphoreCreateInfo* %3, %struct.VkExportSemaphoreCreateInfo** %13, align 8
  %14 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = bitcast %struct.VkSemaphore_T** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  store %struct.VkSemaphore_T* null, %struct.VkSemaphore_T** %5, align 8
  %16 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %17 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %16, i64 0, i32 53, i32 0
  %18 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** %17, align 8
  %19 = call i32 %18(%struct.VkDevice_T* %0, %struct.VkSemaphoreCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSemaphore_T** nonnull %5) #7
  %20 = icmp eq i32 %19, 0
  %21 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %5, align 8
  %22 = select i1 %20, %struct.VkSemaphore_T* %21, %struct.VkSemaphore_T* null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %struct.VkSemaphore_T* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu17VkVersionToStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = lshr i32 %1, 22
  %4 = lshr i32 %1, 12
  %5 = and i32 %4, 1023
  %6 = and i32 %1, 4095
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %3, i32 %5, i32 %6) #7
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu15QueueSubmitHookEP9VkQueue_TjPK12VkSubmitInfoP9VkFence_T(%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*) local_unnamed_addr #0 {
  %5 = load i64, i64* @_ZN3gpu12_GLOBAL__N_114g_submit_countE, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* @_ZN3gpu12_GLOBAL__N_114g_submit_countE, align 8
  %7 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %8 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %7, i64 0, i32 84, i32 0
  %9 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %8, align 8
  %10 = tail call i32 %9(%struct.VkQueue_T* %0, i32 %1, %struct.VkSubmitInfo* %2, %struct.VkFence_T* %3) #7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_T(%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**) local_unnamed_addr #0 {
  %7 = alloca %"class.base::ScopedClosureRunner", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = bitcast %"class.base::ScopedClosureRunner"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.base::ScopedClosureRunner", %"class.base::ScopedClosureRunner"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %10, align 8
  %11 = tail call i64 @_ZN4base4Time3NowEv() #7
  %12 = tail call i8* @_Znwm(i64 48) #9, !noalias !8
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEE7DestroyEPKNS0_13BindStateBaseE") #7, !noalias !8
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !8
  %16 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %12, i8** %16, align 8, !alias.scope !8
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %7, %"class.base::OnceCallback"* nonnull %8) #7
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #7
  %18 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %19 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %18, i64 0, i32 48, i32 0
  %20 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %19, align 8
  %21 = call i32 %20(%struct.VkDevice_T* %0, %struct.VkPipelineCache_T* %1, i32 %2, %struct.VkGraphicsPipelineCreateInfo* %3, %struct.VkAllocationCallbacks* %4, %struct.VkPipeline_T** %5) #7
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret i32 %21
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu23ReportUMAPerSwapBuffersEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* @_ZZN3gpu23ReportUMAPerSwapBuffersEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %2 = inttoptr i64 %1 to %"class.base::HistogramBase"*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  %5 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 50, i32 50, i32 1) #7
  %6 = ptrtoint %"class.base::HistogramBase"* %5 to i64
  store atomic i64 %6, i64* @_ZZN3gpu23ReportUMAPerSwapBuffersEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %7

7:                                                ; preds = %0, %4
  %8 = phi %"class.base::HistogramBase"* [ %2, %0 ], [ %5, %4 ]
  %9 = load i64, i64* @_ZN3gpu12_GLOBAL__N_114g_submit_countE, align 8
  %10 = load i64, i64* @_ZZN3gpu23ReportUMAPerSwapBuffersEvE17last_submit_count, align 8
  %11 = sub i64 %9, %10
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %14 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, i64 6
  %16 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::HistogramBase"* %8, i32 %12) #7
  %17 = load i64, i64* @_ZN3gpu12_GLOBAL__N_114g_submit_countE, align 8
  store i64 %17, i64* @_ZZN3gpu23ReportUMAPerSwapBuffersEvE17last_submit_count, align 8
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24CheckVulkanCompabilitiesERKNS_10VulkanInfoERKNS_7GPUInfoENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.gpu::VulkanInfo"* nocapture readnone dereferenceable(104), %"struct.gpu::GPUInfo"* dereferenceable(696), %"class.std::__1::basic_string"* nocapture readnone) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::internal::flat_tree", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = bitcast %"class.base::internal::flat_tree"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %6, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %12 = bitcast %"class.base::internal::flat_tree"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %13 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 14
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  store i8* %22, i8** %14, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.gpu::GPUInfo", %"struct.gpu::GPUInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %17 to i64
  %27 = select i1 %18, i64 %25, i64 %26
  store i64 %27, i64* %23, align 8
  call void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* nonnull sret %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %28 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZN3gpu24CheckVulkanCompabilitiesERKNS_10VulkanInfoERKNS_7GPUInfoENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE22kMemoryObjectExtension, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 23, i64* %30, align 8
  %31 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  br i1 %31, label %32, label %37

32:                                               ; preds = %3
  %33 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZZN3gpu24CheckVulkanCompabilitiesERKNS_10VulkanInfoERKNS_7GPUInfoENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE19kSemaphoreExtension, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 19, i64* %35, align 8
  %36 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7
  br label %37

37:                                               ; preds = %32, %3
  %38 = phi i1 [ false, %3 ], [ %36, %32 ]
  %39 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %40 = icmp eq %"class.base::BasicStringPiece"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"class.base::BasicStringPiece"* %39 to i64
  %43 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %42, i64* %43, align 8
  %44 = bitcast %"class.base::BasicStringPiece"* %39 to i8*
  call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret i1 %38
}

declare void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* sret, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load atomic i64, i64* @"_ZZZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TENK3$_0clEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0" acquire, align 8
  %7 = inttoptr i64 %6 to %"class.base::HistogramBase"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i64 100, i64 50000, i32 50, i32 1) #7
  %11 = ptrtoint %"class.base::HistogramBase"* %10 to i64
  store atomic i64 %11, i64* @"_ZZZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TENK3$_0clEN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0" release, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi %"class.base::HistogramBase"* [ %7, %1 ], [ %10, %9 ]
  %14 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = tail call i64 @_ZN4base4Time3NowEv() #7
  %16 = sub nsw i64 %15, %5
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %13, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIZN3gpu27CreateGraphicsPipelinesHookEP10VkDevice_TP17VkPipelineCache_TjPK28VkGraphicsPipelineCreateInfoPK21VkAllocationCallbacksPP12VkPipeline_TE3$_0JNS_4TimeEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
