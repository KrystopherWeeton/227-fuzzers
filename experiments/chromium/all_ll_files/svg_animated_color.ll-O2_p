; ModuleID = '../../third_party/blink/renderer/core/svg/svg_animated_color.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_animated_color.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGColorProperty" = type { %"class.blink::SVGPropertyBase", %"class.blink::StyleColor" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.30", %"class.blink::Member.32" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.10" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.3", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.5" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.34", %"class.blink::Member.36", %"class.blink::Member.3", %"class.blink::Member.38", %"class.blink::Member.38", %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.70", %"class.blink::HeapVector.72" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.88", %"class.WTF::Vector.88", i8, i32, %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.112", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.118", %"class.blink::Member.120", %"class.blink::Member.78", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.123", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.53", %"class.blink::Member.333", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::UserActionElementSet", %"class.blink::Member.342", double, double, i64, i64, %"class.blink::HeapHashSet.344", %"class.blink::HeapHashSet.351", i16, i8, %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::Member.364", %"class.blink::TextLinkColors", %"class.blink::Member.366", i8, [7 x i8], %"class.blink::HeapHashMap.368", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.53", %"class.WTF::Vector.375", %"class.blink::Member.380", %"class.blink::Member.382", i8, %"class.blink::Member.53", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.384", %"class.blink::HeapVector.386", %"class.std::__1::unique_ptr.394", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.400", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.413", %"class.WTF::Vector.415", i8, i8, %"class.std::__1::unique_ptr.420", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.426", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.434", i8, i32, %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.442", %"class.WTF::HashMap.444", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.457", i8, i32, %"class.blink::Member.464", %"class.blink::Member.466", i32, %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.std::__1::unique_ptr.474", i64, %"class.std::__1::unique_ptr.480", i32, i32, %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.501", %"class.WTF::Vector.503", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.508", %"class.blink::Member.515", %"class.std::__1::unique_ptr.517", %"class.blink::Member.523", i8, i8, %"class.WTF::String", %"class.blink::Member.525", i8, [7 x i8], %"class.blink::HeapHashMap.527", %"class.blink::HeapObserverSet", %"class.blink::Member.541", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.543", i32, i8, i8, %"class.blink::WeakMember.545", %"class.blink::Member.546" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.81" }
%"class.blink::HeapHashMap.81" = type { %"class.WTF::HashMap.84" }
%"class.WTF::HashMap.84" = type { %"class.WTF::HashTable.85" }
%"class.WTF::HashTable.85" = type <{ %"struct.WTF::KeyValuePair.87"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.87" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.92" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i32 }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.564", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.605", i32, i8, [3 x i8], %"class.blink::HeapVector.607", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.615", %"class.blink::Member.617", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.626", %"class.blink::Member.632", %"class.blink::Member.634", i8, [7 x i8] }>
%"class.blink::Supplementable.564" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.565" }
%"class.blink::HeapHashMap.565" = type { %"class.WTF::HashMap.568" }
%"class.WTF::HashMap.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"struct.WTF::KeyValuePair.571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.571" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.580" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.572" }
%"class.blink::HeapObserverSet.572" = type { i32, [4 x i8], %"class.blink::HeapHashSet.573" }
%"class.blink::HeapHashSet.573" = type { %"class.WTF::HashSet.576" }
%"class.WTF::HashSet.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"class.blink::WeakMember.579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.579" = type opaque
%"class.blink::Supplementable.580" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.581" }
%"class.blink::HeapHashMap.581" = type { %"class.WTF::HashMap.584" }
%"class.WTF::HashMap.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"struct.WTF::KeyValuePair.587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.587" = type { i8*, %"class.blink::Member.636" }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.638" }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.588, %"class.std::__1::unique_ptr.589", %"class.std::__1::unique_ptr.589", %"class.std::__1::unique_ptr.595", %"class.std::__1::unique_ptr.595", %"class.blink::Member.101", i32, [4 x i8], %"class.WTF::HashSet.601", i32, i32 }
%class.scoped_refptr.588 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.607" = type { %"class.WTF::Vector.610" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.blink::Member.613"*, i32, i32 }
%"class.blink::Member.613" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.619", i32, i32 }
%"class.blink::HeapHashMap.619" = type { %"class.WTF::HashMap.622" }
%"class.WTF::HashMap.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"struct.WTF::KeyValuePair.625"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.625" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.123" = type { %"class.WTF::VectorBuffer.124" }
%"class.WTF::VectorBuffer.124" = type { %"class.WTF::VectorBufferBase.125" }
%"class.WTF::VectorBufferBase.125" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.126 }
%class.scoped_refptr.126 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.127", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.127" = type { %"class.base::RefCounted.128" }
%"class.base::RefCounted.128" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.131" }
%"class.blink::HeapHashMap.131" = type { %"class.WTF::HashMap.134" }
%"class.WTF::HashMap.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"struct.WTF::KeyValuePair.137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.137" = type { %"class.blink::WeakMember.138", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.317", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.256", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.259", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.559" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.344" = type { %"class.WTF::HashSet.347" }
%"class.WTF::HashSet.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"class.blink::WeakMember.350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.350" = type opaque
%"class.blink::HeapHashSet.351" = type { %"class.WTF::HashSet.354" }
%"class.WTF::HashSet.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"class.blink::WeakMember.357"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.357" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.368" = type { %"class.WTF::HashMap.371" }
%"class.WTF::HashMap.371" = type { %"class.WTF::HashTable.372" }
%"class.WTF::HashTable.372" = type <{ %"struct.WTF::KeyValuePair.374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.374" = type opaque
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.386" = type { %"class.WTF::Vector.389" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::Member.392"*, i32, i32 }
%"class.blink::Member.392" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.400" = type { %"class.WTF::HashSet.403" }
%"class.WTF::HashSet.403" = type { %"class.WTF::HashTable.404" }
%"class.WTF::HashTable.404" = type <{ %"class.blink::WeakMember.406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.406" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.407", i32, [4 x i8] }>
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"struct.std::__1::pair.410"*, i32, i32 }
%"struct.std::__1::pair.410" = type opaque
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.53"*, i32, i32 }
%"class.blink::HeapVector.426" = type { %"class.WTF::Vector.429" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"class.blink::Member.432"*, i32, i32 }
%"class.blink::Member.432" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.36" }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.444" = type { %"class.WTF::HashTable.445" }
%"class.WTF::HashTable.445" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.323, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.323 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.324" }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.326", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.327" }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.37" }
%"class.blink::HeapHashSet.457" = type { %"class.WTF::HashSet.460" }
%"class.WTF::HashSet.460" = type { %"class.WTF::HashTable.461" }
%"class.WTF::HashTable.461" = type <{ %"class.blink::Member.463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.463" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.483", %"class.WTF::HashSet.483", %"class.WTF::HashSet.483", %"class.WTF::HashSet.483", %"class.WTF::HashSet.483", %"class.WTF::HashSet.483", i32, [4 x i8], %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.487" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ %"struct.WTF::KeyValuePair.491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.491" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.503" = type { %"class.WTF::VectorBuffer.504" }
%"class.WTF::VectorBuffer.504" = type { %"class.WTF::VectorBufferBase.505" }
%"class.WTF::VectorBufferBase.505" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.508" = type { %"class.WTF::HashMap.511" }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.514" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.527" = type { %"class.WTF::HashMap.530" }
%"class.WTF::HashMap.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"struct.WTF::KeyValuePair.533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.533" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.534" }
%"class.blink::HeapHashSet.534" = type { %"class.WTF::HashSet.537" }
%"class.WTF::HashSet.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"class.blink::WeakMember.540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.540" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.36", %"class.blink::HeapHashSet.550", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.557", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.550" = type { %"class.WTF::HashSet.553" }
%"class.WTF::HashSet.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"class.blink::Member.556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.556" = type opaque
%"class.blink::HeapTaskRunnerTimer.557" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.558", { i64, i64 } }
%"class.blink::WeakMember.558" = type { %"class.blink::MemberBase.544" }
%"class.blink::WeakMember.545" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.42" }
%"class.blink::HeapHashMap.42" = type { %"class.WTF::HashMap.45" }
%"class.WTF::HashMap.45" = type { %"class.WTF::HashTable.46" }
%"class.WTF::HashTable.46" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type { %"class.WTF::AtomicString", %"class.blink::Member.49" }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.53", i32, %"class.blink::HeapVector" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.67" }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::HeapHashMap.69"* }
%"class.blink::HeapHashMap.69" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.72" = type { %"class.WTF::Vector.75" }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.blink::Member.78"*, i32, i32 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.14", %"class.blink::Member.16", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.14" = type { %"class.WTF::SingleThreadedBitField.15" }
%"class.WTF::SingleThreadedBitField.15" = type { i32 }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.28" }
%"class.WTF::HashTable.28" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1117", %"class.blink::Member.1272", %"class.blink::Member.1274", %"class.blink::Member.1293", %"class.blink::Member.1295" }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1104 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1104, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1120" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1123", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1129", %"class.std::__1::unique_ptr.1252", i8, %"class.absl::optional.1258", %class.scoped_refptr.1234, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1263" }
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1132, %class.scoped_refptr.1132, %class.scoped_refptr.1132, %class.scoped_refptr.1132, %class.scoped_refptr.1132, %class.scoped_refptr.1132, %class.scoped_refptr.1167, %class.scoped_refptr.1183, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1224, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1225, %class.scoped_refptr.1248 }
%class.scoped_refptr.1132 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1149" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1133", i8, i8, %class.scoped_refptr.1135, i32, i32 }
%"class.WTF::RefCounted.1133" = type { %"class.base::RefCounted.1134" }
%"class.base::RefCounted.1134" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1135 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1142, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1143", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1136" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1142 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1168", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1168" = type { %"class.WTF::RefCounted.1169", i8, i8, %class.scoped_refptr.1142, i32, i32 }
%"class.WTF::RefCounted.1169" = type { %"class.base::RefCounted.1170" }
%"class.base::RefCounted.1170" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1171" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1171" = type { %"class.absl::optional_internal::optional_data.1172" }
%"class.absl::optional_internal::optional_data.1172" = type { %"class.absl::optional_internal::optional_data_base.1173" }
%"class.absl::optional_internal::optional_data_base.1173" = type { %"class.absl::optional_internal::optional_data_dtor_base.1174" }
%"class.absl::optional_internal::optional_data_dtor_base.1174" = type { i8, %union.anon.1175 }
%union.anon.1175 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1176", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1178" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1152", %"class.std::__1::unique_ptr.1158", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1167 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1183 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1184 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1185" }
%"class.blink::PaintPropertyNode.1185" = type { %"class.WTF::RefCounted.1186", i8, i8, %class.scoped_refptr.1188, i32, i32 }
%"class.WTF::RefCounted.1186" = type { %"class.base::RefCounted.1187" }
%"class.base::RefCounted.1187" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1188 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1135, %class.scoped_refptr.1189, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1211", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1189 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1226" }
%"class.blink::PaintPropertyNode.1226" = type { %"class.WTF::RefCounted.1227", i8, i8, %class.scoped_refptr.1189, i32, i32 }
%"class.WTF::RefCounted.1227" = type { %"class.base::RefCounted.1228" }
%"class.base::RefCounted.1228" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1190" }
%"class.std::__1::vector.1190" = type { %"class.std::__1::__vector_base.1191" }
%"class.std::__1::__vector_base.1191" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1206" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1192, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1199", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1192 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1193, i32, %"class.absl::optional.1194", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.92" }>
%class.sk_sp.1193 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1194" = type { %"class.absl::optional_internal::optional_data.1195" }
%"class.absl::optional_internal::optional_data.1195" = type { %"class.absl::optional_internal::optional_data_base.1196" }
%"class.absl::optional_internal::optional_data_base.1196" = type { %"class.absl::optional_internal::optional_data_dtor_base.1197" }
%"class.absl::optional_internal::optional_data_dtor_base.1197" = type { i8, %union.anon.1198 }
%union.anon.1198 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1201" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1217" }
%"class.std::__1::vector.1217" = type { %"class.std::__1::__vector_base.1218" }
%"class.std::__1::__vector_base.1218" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { i32* }
%class.scoped_refptr.1224 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1225 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1237" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1135, %"class.absl::optional.1229", %class.scoped_refptr.1234, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1229" = type { %"class.absl::optional_internal::optional_data.1230" }
%"class.absl::optional_internal::optional_data.1230" = type { %"class.absl::optional_internal::optional_data_base.1231" }
%"class.absl::optional_internal::optional_data_base.1231" = type { %"class.absl::optional_internal::optional_data_dtor_base.1232" }
%"class.absl::optional_internal::optional_data_dtor_base.1232" = type { i8, [3 x i8], %union.anon.1233 }
%union.anon.1233 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1240", i32, [4 x i8] }>
%"class.WTF::Vector.1240" = type { %"class.WTF::VectorBuffer.1241" }
%"class.WTF::VectorBuffer.1241" = type { %"class.WTF::VectorBufferBase.1242" }
%"class.WTF::VectorBufferBase.1242" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1248 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1135, %class.scoped_refptr.1189, %class.scoped_refptr.1188 }
%"class.absl::optional.1258" = type { %"class.absl::optional_internal::optional_data.1259" }
%"class.absl::optional_internal::optional_data.1259" = type { %"class.absl::optional_internal::optional_data_base.1260" }
%"class.absl::optional_internal::optional_data_base.1260" = type { %"class.absl::optional_internal::optional_data_dtor_base.1261" }
%"class.absl::optional_internal::optional_data_dtor_base.1261" = type { i8, %union.anon.1262 }
%union.anon.1262 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1234 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1235", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1031, i32, %"struct.std::__1::atomic.327", %"struct.std::__1::atomic.327", i8, i8 }>
%class.sk_sp.1031 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1032, %class.SkTDArray.1033, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.92" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1032 = type { i8*, i32, i32 }
%class.SkTDArray.1033 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1034 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.92", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.327" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1034 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.317", [3 x i8] }
%"class.WTF::RefCounted.1235" = type { %"class.base::RefCounted.1236" }
%"class.base::RefCounted.1236" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1104 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1093", %"class.std::__1::unique_ptr.1095" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.705", %"class.blink::DataRef.800", %"class.blink::DataRef.804", %"class.blink::DataRef.1009", %"class.blink::DataRef.1076", %"class.blink::DataRef.1080", %"class.blink::DataRef.1084", %"class.blink::DataRef.1088", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.641", %"class.blink::DataRef.643", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.641" = type { %"class.base::RefCounted.642" }
%"class.base::RefCounted.642" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.643" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.645", %"class.blink::Font" }
%"class.WTF::RefCounted.645" = type { %"class.base::RefCounted.646" }
%"class.base::RefCounted.646" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.678 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.648, %class.scoped_refptr.656, %class.scoped_refptr.666, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.677 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.647 }
%class.scoped_refptr.647 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1115", [4 x i8] }>
%"class.WTF::RefCounted.1115" = type { %"class.base::RefCounted.1116" }
%"class.base::RefCounted.1116" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.648 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.654", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.649" }
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase.651" }
%"class.WTF::VectorBufferBase.651" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.654" = type { %"class.base::RefCounted.655" }
%"class.base::RefCounted.655" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.656 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.657", %"class.WTF::RefCounted.664", [4 x i8] }>
%"class.blink::FontSettings.657" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::FontTagValuePair.661"*, i32, i32 }
%"class.blink::FontTagValuePair.661" = type { i32, float }
%"class.WTF::RefCounted.664" = type { %"class.base::RefCounted.665" }
%"class.base::RefCounted.665" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.666 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.667", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.674, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.667" = type { %"class.base::RefCounted.668" }
%"class.base::RefCounted.668" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.674 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.675", [4 x i8] }>
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.677 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.678 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.679", %"class.WTF::Vector.681", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683", [8 x i8] }
%"class.WTF::VectorBufferBase.683" = type { %class.scoped_refptr.684*, i32, i32 }
%class.scoped_refptr.684 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.685", [4 x i8] }>
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.691", %class.scoped_refptr.698, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.685" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.689 }
%union.anon.689 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.690, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.92" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.690 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.694, %class.scoped_refptr.694 }
%class.scoped_refptr.694 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.698 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.699", [4 x i8] }>
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.701" }
%"class.blink::PersistentBase.701" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.702" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.702" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.703 }
%class.scoped_refptr.703 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.704, i8, i8, i8, i8 }>
%union.anon.704 = type { i32 }
%"class.blink::DataRef.705" = type { %class.scoped_refptr.706 }
%class.scoped_refptr.706 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.707", [4 x i8], %"class.blink::DataRef.709", %"class.blink::DataRef.765", %"class.WTF::Vector.769", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.773, %class.scoped_refptr.782, %"class.blink::Persistent.790", %"class.blink::Persistent.792", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.707" = type { %"class.base::RefCounted.708" }
%"class.base::RefCounted.708" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.711", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.713, %class.scoped_refptr.720, %"class.blink::Persistent.752", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.713 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.714", %"class.WTF::Vector.715" }
%"class.base::RefCountedThreadSafe.714" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.715" = type { %"class.WTF::VectorBuffer.716" }
%"class.WTF::VectorBuffer.716" = type { %"class.WTF::VectorBufferBase.717" }
%"class.WTF::VectorBufferBase.717" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.720 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.721", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.721" = type { %"class.base::RefCounted.722" }
%"class.base::RefCounted.722" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.723", %"class.blink::Persistent.743" }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.727" = type { %"class.WTF::AtomicString", %class.scoped_refptr.728 }
%class.scoped_refptr.728 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.729", %"class.WTF::Vector.731", %"class.WTF::Vector.736", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733" }
%"class.WTF::VectorBufferBase.733" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.736" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738" }
%"class.WTF::VectorBufferBase.738" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.739 }
%union.anon.739 = type { double }
%"class.blink::Persistent.743" = type { %"class.blink::PersistentBase.744" }
%"class.blink::PersistentBase.744" = type { %"class.blink::HeapHashMap.745"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.745" = type { %"class.WTF::HashMap.748" }
%"class.WTF::HashMap.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type opaque
%"class.blink::Persistent.752" = type { %"class.blink::PersistentBase.753" }
%"class.blink::PersistentBase.753" = type { %"class.blink::HeapVector.754"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.754" = type { %"class.WTF::Vector.757" }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.760", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.765" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.767", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.767" = type { %"class.base::RefCounted.768" }
%"class.base::RefCounted.768" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.773 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.774", %"class.WTF::Vector.776" }
%"class.WTF::RefCounted.774" = type { %"class.base::RefCounted.775" }
%"class.base::RefCounted.775" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"struct.std::__1::pair.779"*, i32, i32 }
%"struct.std::__1::pair.779" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.782 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.783", [4 x i8], %"class.WTF::Vector.785" }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.787", [28 x i8] }>
%"class.WTF::VectorBufferBase.787" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.790" = type { %"class.blink::PersistentBase.791" }
%"class.blink::PersistentBase.791" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.792" = type { %"class.blink::PersistentBase.793" }
%"class.blink::PersistentBase.793" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.796", %"class.blink::Member.798" }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.800" = type { %class.scoped_refptr.801 }
%class.scoped_refptr.801 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.802", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.802" = type { %"class.base::RefCounted.803" }
%"class.base::RefCounted.803" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.804" = type { %class.scoped_refptr.805 }
%class.scoped_refptr.805 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.806", [4 x i8], %"class.blink::DataRef.808", %"class.blink::DataRef.874", %"class.blink::TransformOperations", %class.scoped_refptr.782, %"class.blink::Persistent.1003", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.806" = type { %"class.base::RefCounted.807" }
%"class.base::RefCounted.807" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.808" = type { %class.scoped_refptr.809 }
%class.scoped_refptr.809 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.810", [4 x i8], %"class.blink::DataRef.812", %"class.blink::Persistent.850", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.810" = type { %"class.base::RefCounted.811" }
%"class.base::RefCounted.811" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.812" = type { %class.scoped_refptr.813 }
%class.scoped_refptr.813 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.814", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.832, %class.scoped_refptr.835, %class.scoped_refptr.838, %class.scoped_refptr.841, %class.scoped_refptr.842, %class.scoped_refptr.843, %"class.blink::Persistent.850", %"class.blink::Persistent.865", %"class.absl::optional.869", %"class.absl::optional.869", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.814" = type { %"class.base::RefCounted.815" }
%"class.base::RefCounted.815" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.816", %"class.std::__1::unique_ptr.821" }
%"class.WTF::Vector.816" = type { %"class.WTF::VectorBuffer.817" }
%"class.WTF::VectorBuffer.817" = type { %"class.WTF::VectorBufferBase.818" }
%"class.WTF::VectorBufferBase.818" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.824", %"class.WTF::Vector.816", i32, i32 }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.832 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.833", [4 x i8] }>
%"class.WTF::RefCounted.833" = type { %"class.base::RefCounted.834" }
%"class.base::RefCounted.834" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.835 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.836", [4 x i8] }>
%"class.WTF::RefCounted.836" = type { %"class.base::RefCounted.837" }
%"class.base::RefCounted.837" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.838 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.839" }>
%"class.WTF::RefCounted.839" = type { %"class.base::RefCounted.840" }
%"class.base::RefCounted.840" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.841 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.842 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.843 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.844", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.844" = type { %"class.base::RefCounted.845" }
%"class.base::RefCounted.845" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.846" }
%"class.blink::DataRef.846" = type { %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.790", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.848" }
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.865" = type { %"class.blink::PersistentBase.866" }
%"class.blink::PersistentBase.866" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.835, %"class.blink::Member.760", i32, [4 x i8] }>
%"class.absl::optional.869" = type { %"class.absl::optional_internal::optional_data.870" }
%"class.absl::optional_internal::optional_data.870" = type { %"class.absl::optional_internal::optional_data_base.871" }
%"class.absl::optional_internal::optional_data_base.871" = type { %"class.absl::optional_internal::optional_data_dtor_base.872" }
%"class.absl::optional_internal::optional_data_dtor_base.872" = type { i8, [3 x i8], %union.anon.873 }
%union.anon.873 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.854" }
%"class.blink::HeapVector.854" = type { %"class.WTF::Vector.857" }
%"class.WTF::Vector.857" = type { %"class.WTF::VectorBuffer.858" }
%"class.WTF::VectorBuffer.858" = type { %"class.WTF::VectorBufferBase.859" }
%"class.WTF::VectorBufferBase.859" = type { %"class.blink::Member.860"*, i32, i32 }
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.874" = type { %class.scoped_refptr.875 }
%class.scoped_refptr.875 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.876", %"class.blink::DataRef.878", %"class.blink::DataRef.882", %"class.blink::DataRef.891", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.915", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.969", %"class.std::__1::unique_ptr.980", %"class.std::__1::unique_ptr.991", %"class.WTF::Vector.731", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.876" = type { %"class.base::RefCounted.877" }
%"class.base::RefCounted.877" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.878" = type { %class.scoped_refptr.879 }
%class.scoped_refptr.879 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.880", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.880" = type { %"class.base::RefCounted.881" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.882" = type { %class.scoped_refptr.883 }
%class.scoped_refptr.883 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.884", [4 x i8], %"class.WTF::Vector.886", i8, [7 x i8] }>
%"class.WTF::RefCounted.884" = type { %"class.base::RefCounted.885" }
%"class.base::RefCounted.885" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888" }
%"class.WTF::VectorBufferBase.888" = type { i32*, i32, i32 }
%"class.blink::DataRef.891" = type { %class.scoped_refptr.892 }
%class.scoped_refptr.892 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.893", [4 x i8], %"class.WTF::HashMap.895", %"class.WTF::HashMap.895", %"class.WTF::HashMap.895", %"class.WTF::HashMap.895", %"class.WTF::HashMap.895", %"class.WTF::HashMap.895", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.905", %"class.WTF::HashMap.910", %"class.WTF::Vector.816", %"class.WTF::Vector.816", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.893" = type { %"class.base::RefCounted.894" }
%"class.base::RefCounted.894" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.895" = type { %"class.WTF::HashTable.896" }
%"class.WTF::HashTable.896" = type <{ %"struct.WTF::KeyValuePair.899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.899" = type { %"class.WTF::String", %"class.WTF::Vector.900" }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { i64*, i32, i32 }
%"class.WTF::HashMap.905" = type { %"class.WTF::HashTable.906" }
%"class.WTF::HashTable.906" = type <{ %"struct.WTF::KeyValuePair.909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.909" = type { i64, %"class.WTF::Vector.731" }
%"class.WTF::HashMap.910" = type { %"class.WTF::HashTable.911" }
%"class.WTF::HashTable.911" = type <{ %"struct.WTF::KeyValuePair.914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.914" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.918" }
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.922"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.922" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.923", %"class.absl::optional.923", %"class.absl::optional.923" }
%"class.absl::optional.923" = type { %"class.absl::optional_internal::optional_data.924" }
%"class.absl::optional_internal::optional_data.924" = type { %"class.absl::optional_internal::optional_data_base.925" }
%"class.absl::optional_internal::optional_data_base.925" = type { %"class.absl::optional_internal::optional_data_dtor_base.926" }
%"class.absl::optional_internal::optional_data_dtor_base.926" = type { i8, %union.anon.927 }
%union.anon.927 = type { i32 }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.769", %"class.WTF::Vector.946", %"class.WTF::Vector.934", %"class.WTF::Vector.951", %"class.WTF::Vector.956", %"class.WTF::Vector.961" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.934", %"class.WTF::Vector.934", %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { %class.scoped_refptr.942*, i32, i32 }
%class.scoped_refptr.942 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.943" }
%"class.base::RefCountedThreadSafe.943" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948" }
%"class.WTF::VectorBufferBase.948" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.934" = type { %"class.WTF::VectorBuffer.935" }
%"class.WTF::VectorBuffer.935" = type { %"class.WTF::VectorBufferBase.936" }
%"class.WTF::VectorBufferBase.936" = type { double*, i32, i32 }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953" }
%"class.WTF::VectorBufferBase.953" = type { i32*, i32, i32 }
%"class.WTF::Vector.956" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { i32*, i32, i32 }
%"class.WTF::Vector.961" = type { %"class.WTF::VectorBuffer.962" }
%"class.WTF::VectorBuffer.962" = type { %"class.WTF::VectorBufferBase.963" }
%"class.WTF::VectorBufferBase.963" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.972" }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974" }
%"class.WTF::VectorBufferBase.974" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.983" }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.blink::Persistent.790"*, i32, i32 }
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.790", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.997" }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %class.scoped_refptr.1000*, i32, i32 }
%class.scoped_refptr.1000 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.839", [4 x i8] }>
%"class.blink::Persistent.1003" = type { %"class.blink::PersistentBase.1004" }
%"class.blink::PersistentBase.1004" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1007" }
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1009" = type { %class.scoped_refptr.1010 }
%class.scoped_refptr.1010 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1011", [4 x i8], %"class.blink::DataRef.1013", %"class.blink::DataRef.1017", %"class.blink::DataRef.1038", %"class.blink::DataRef.1056", %"class.blink::DataRef.1068", %"class.blink::DataRef.1072", %class.scoped_refptr.1042, i32, [4 x i8] }>
%"class.WTF::RefCounted.1011" = type { %"class.base::RefCounted.1012" }
%"class.base::RefCounted.1012" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1013" = type { %class.scoped_refptr.1014 }
%class.scoped_refptr.1014 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1015", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1017" = type { %class.scoped_refptr.1018 }
%class.scoped_refptr.1018 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1019", %class.scoped_refptr.1021, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1021 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1022", %"class.std::__1::unique_ptr.1028", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.836" }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1038" = type { %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1040", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1040" = type { %"class.base::RefCounted.1041" }
%"class.base::RefCounted.1041" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1042, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1056" = type { %class.scoped_refptr.1057 }
%class.scoped_refptr.1057 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1058", [4 x i8], %class.scoped_refptr.1060, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1058" = type { %"class.base::RefCounted.1059" }
%"class.base::RefCounted.1059" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1060 = type { %"class.base::RefCountedData.1061"* }
%"class.base::RefCountedData.1061" = type { %"class.base::RefCountedThreadSafe.1062", %"class.WTF::Vector.1063" }
%"class.base::RefCountedThreadSafe.1062" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1063" = type { %"class.WTF::VectorBuffer.1064" }
%"class.WTF::VectorBuffer.1064" = type { %"class.WTF::VectorBufferBase.1065" }
%"class.WTF::VectorBufferBase.1065" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1068" = type { %class.scoped_refptr.1069 }
%class.scoped_refptr.1069 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1070", %class.scoped_refptr.1042, %class.scoped_refptr.1042, %class.scoped_refptr.1042 }
%"class.WTF::RefCounted.1070" = type { %"class.base::RefCounted.1071" }
%"class.base::RefCounted.1071" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1072" = type { %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1074", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1074" = type { %"class.base::RefCounted.1075" }
%"class.base::RefCounted.1075" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1042 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1043", %"class.blink::Persistent.1045", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1043" = type { %"class.base::RefCounted.1044" }
%"class.base::RefCounted.1044" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1045" = type { %"class.blink::PersistentBase.1046" }
%"class.blink::PersistentBase.1046" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.53", %"class.blink::HeapHashMap.1049" }
%"class.blink::HeapHashMap.1049" = type { %"class.WTF::HashMap.1052" }
%"class.WTF::HashMap.1052" = type { %"class.WTF::HashTable.1053" }
%"class.WTF::HashTable.1053" = type <{ %"struct.WTF::KeyValuePair.1055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1055" = type opaque
%"class.blink::DataRef.1076" = type { %class.scoped_refptr.1077 }
%class.scoped_refptr.1077 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1078", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1080" = type { %class.scoped_refptr.1081 }
%class.scoped_refptr.1081 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1082", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1082" = type { %"class.base::RefCounted.1083" }
%"class.base::RefCounted.1083" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1086", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1088" = type { %class.scoped_refptr.1089 }
%class.scoped_refptr.1089 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1090", %class.scoped_refptr.1092 }
%"class.WTF::RefCounted.1090" = type { %"class.base::RefCounted.1091" }
%"class.base::RefCounted.1091" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1092 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1113", %"class.blink::StyleVariables", %class.scoped_refptr.1092 }
%"class.WTF::RefCounted.1113" = type { %"class.base::RefCounted.1114" }
%"class.base::RefCounted.1114" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1098" }
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.WTF::Vector.1101"* }
%"class.WTF::Vector.1101" = type { %"class.WTF::VectorBuffer.1102" }
%"class.WTF::VectorBuffer.1102" = type { %"class.WTF::VectorBufferBase.1103", [32 x i8] }
%"class.WTF::VectorBufferBase.1103" = type { %class.scoped_refptr.1104*, i32, i32 }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1278", %"class.blink::HeapHashSet.1287" }
%"class.blink::HeapVector.1278" = type { %"class.WTF::Vector.1281" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { %"class.blink::Member.1284"*, i32, i32 }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::Member.1284"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::HeapHashSet.1297"* }
%"class.blink::HeapHashSet.1297" = type opaque
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }

$_ZN5blink15SVGPropertyBaseD2Ev = comdat any

$_ZN5blink16SVGColorPropertyD0Ev = comdat any

$_ZNK5blink16SVGColorProperty7GetTypeEv = comdat any

$_ZNK5blink15SVGPropertyBase5TraceEPNS_7VisitorE = comdat any

@_ZTVN5blink16SVGColorPropertyE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPropertyBase"*)* @_ZN5blink15SVGPropertyBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGColorProperty"*)* @_ZN5blink16SVGColorPropertyD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGColorProperty"*, %"class.WTF::String"*)* @_ZNK5blink16SVGColorProperty17CloneForAnimationERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGColorProperty"*)* @_ZNK5blink16SVGColorProperty13ValueAsStringEv to i8*), i8* bitcast (void (%"class.blink::SVGColorProperty"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink16SVGColorProperty3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (void (%"class.blink::SVGColorProperty"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink16SVGColorProperty22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE to i8*), i8* bitcast (float (%"class.blink::SVGColorProperty"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZNK5blink16SVGColorProperty17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (i32 (%"class.blink::SVGColorProperty"*)* @_ZNK5blink16SVGColorProperty7GetTypeEv to i8*), i8* bitcast (void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)* @_ZNK5blink15SVGPropertyBase5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"currentColor\00", align 1

@_ZN5blink16SVGColorPropertyC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::SVGColorProperty"*, %"class.WTF::String"*), void (%"class.blink::SVGColorProperty"*, %"class.WTF::String"*)* @_ZN5blink16SVGColorPropertyC2ERKN3WTF6StringE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGColorPropertyC2ERKN3WTF6StringE(%"class.blink::SVGColorProperty"* nocapture, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Color", align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink16SVGColorPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::StyleColor"* %6 to i64*
  store i64 631360192512, i64* %7, align 8
  %8 = bitcast %"class.blink::Color"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %3, i64 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %1) #6
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false) #6
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #6
  br label %29

29:                                               ; preds = %2, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  br i1 %13, label %30, label %33

30:                                               ; preds = %29
  %31 = load i32, i32* %9, align 4
  %32 = zext i32 %31 to i64
  store i64 %32, i64* %7, align 8
  br label %33

33:                                               ; preds = %30, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16SVGColorProperty13ValueAsStringEv(%"class.blink::SVGColorProperty"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 147
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #6
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  br label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32 %11) #6
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  br label %14

14:                                               ; preds = %9, %6
  %15 = phi %"class.WTF::StringImpl"* [ %12, %9 ], [ %8, %6 ]
  ret %"class.WTF::StringImpl"* %15
}

declare %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::SVGPropertyBase"* @_ZNK5blink16SVGColorProperty17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGColorProperty"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  ret %"class.blink::SVGPropertyBase"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGColorProperty3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGColorProperty"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Color", align 4
  %5 = alloca %"class.blink::Color", align 4
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  %10 = and i32 %7, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %9, label %13, label %24

13:                                               ; preds = %3
  br i1 %11, label %20, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %16 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 2, i32 0
  br label %39

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 2, i32 0
  br label %39

24:                                               ; preds = %3
  br i1 %11, label %29, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 5, i32 0
  br label %39

39:                                               ; preds = %37, %20, %14
  %40 = phi %"class.blink::ComputedStyle"** [ %38, %37 ], [ %19, %14 ], [ %23, %20 ]
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = icmp eq %"class.blink::ComputedStyle"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #6
  %45 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %41, %"class.blink::CSSProperty"* dereferenceable(24) %44) #6
  %46 = load i32, i32* %6, align 8
  br label %47

47:                                               ; preds = %31, %39, %43
  %48 = phi i32 [ %46, %43 ], [ %7, %39 ], [ %7, %31 ]
  %49 = phi i32 [ %45, %43 ], [ 0, %39 ], [ 0, %31 ]
  %50 = and i32 %48, 12
  %51 = icmp eq i32 %50, 0
  %52 = and i32 %48, 1
  %53 = icmp eq i32 %52, 0
  br i1 %51, label %54, label %65

54:                                               ; preds = %47
  br i1 %53, label %61, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %57 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %57, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 2, i32 0
  br label %80

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  %63 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %63, i64 0, i32 2, i32 0
  br label %80

65:                                               ; preds = %47
  br i1 %53, label %70, label %66

66:                                               ; preds = %65
  %67 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %68 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %68, i64 0, i32 1, i32 0, i32 0
  br label %72

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi %"class.blink::NodeRenderingData"** [ %69, %66 ], [ %71, %70 ]
  %74 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %74, i64 0, i32 1
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 5, i32 0
  br label %80

80:                                               ; preds = %78, %61, %55
  %81 = phi %"class.blink::ComputedStyle"** [ %79, %78 ], [ %60, %55 ], [ %64, %61 ]
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = icmp eq %"class.blink::ComputedStyle"* %82, null
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = lshr i160 %87, 114
  %89 = trunc i160 %88 to i32
  %90 = and i32 %89, 1
  br label %91

91:                                               ; preds = %72, %80, %84
  %92 = phi i32 [ %90, %84 ], [ 0, %80 ], [ 0, %72 ]
  %93 = bitcast %"class.blink::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #6
  %94 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %4, i64 0, i32 0
  %95 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %96 = bitcast %"class.blink::SVGPropertyBase"* %95 to %"class.blink::StyleColor"*
  %97 = tail call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %96, i32 %49, i32 %92, i1 zeroext false) #6
  store i32 %97, i32* %94, align 4
  %98 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #6
  %99 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  %100 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1
  %101 = tail call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %100, i32 %49, i32 %92, i1 zeroext false) #6
  store i32 %101, i32* %99, align 4
  %102 = call i32 @_ZN5blink13ColorDistance9AddColorsERKNS_5ColorES3_(%"class.blink::Color"* nonnull dereferenceable(4) %4, %"class.blink::Color"* nonnull dereferenceable(4) %5) #6
  %103 = bitcast %"class.blink::StyleColor"* %100 to i64*
  %104 = zext i32 %102 to i64
  store i64 %104, i64* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  ret void
}

declare i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN5blink13ColorDistance9AddColorsERKNS_5ColorES3_(%"class.blink::Color"* dereferenceable(4), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16SVGColorProperty22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE(%"class.blink::SVGColorProperty"*, %"struct.blink::SMILAnimationEffectParameters"* nocapture readonly dereferenceable(3), float, i32, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::StyleColor"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::StyleColor"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::StyleColor"*
  %15 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 1
  %17 = bitcast %"class.blink::SVGPropertyBase"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %9, align 8
  %19 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 1
  %21 = bitcast %"class.blink::SVGPropertyBase"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %11, align 8
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 1
  %25 = bitcast %"class.blink::SVGPropertyBase"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %13, align 8
  %27 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  %31 = and i32 %28, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %30, label %34, label %45

34:                                               ; preds = %8
  br i1 %32, label %41, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %37 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 2, i32 0
  br label %60

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  %43 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %43, i64 0, i32 2, i32 0
  br label %60

45:                                               ; preds = %8
  br i1 %32, label %50, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %48 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %48, i64 0, i32 1, i32 0, i32 0
  br label %52

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  br label %52

52:                                               ; preds = %50, %46
  %53 = phi %"class.blink::NodeRenderingData"** [ %49, %46 ], [ %51, %50 ]
  %54 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %54, i64 0, i32 1
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 5, i32 0
  br label %60

60:                                               ; preds = %58, %41, %35
  %61 = phi %"class.blink::ComputedStyle"** [ %59, %58 ], [ %40, %35 ], [ %44, %41 ]
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8
  %63 = icmp eq %"class.blink::ComputedStyle"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #6
  %66 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %62, %"class.blink::CSSProperty"* dereferenceable(24) %65) #6
  %67 = load i32, i32* %27, align 8
  br label %68

68:                                               ; preds = %52, %60, %64
  %69 = phi i32 [ %67, %64 ], [ %28, %60 ], [ %28, %52 ]
  %70 = phi i32 [ %66, %64 ], [ 0, %60 ], [ 0, %52 ]
  %71 = and i32 %69, 12
  %72 = icmp eq i32 %71, 0
  %73 = and i32 %69, 1
  %74 = icmp eq i32 %73, 0
  br i1 %72, label %75, label %86

75:                                               ; preds = %68
  br i1 %74, label %82, label %76

76:                                               ; preds = %75
  %77 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %78 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %78, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %80, i64 0, i32 2, i32 0
  br label %101

82:                                               ; preds = %75
  %83 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  %84 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %84, i64 0, i32 2, i32 0
  br label %101

86:                                               ; preds = %68
  br i1 %74, label %91, label %87

87:                                               ; preds = %86
  %88 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRareData"**
  %89 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %89, i64 0, i32 1, i32 0, i32 0
  br label %93

91:                                               ; preds = %86
  %92 = bitcast %"class.blink::NodeData"** %33 to %"class.blink::NodeRenderingData"**
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi %"class.blink::NodeRenderingData"** [ %90, %87 ], [ %92, %91 ]
  %95 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %95, i64 0, i32 1
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = icmp eq %"class.blink::LayoutObject"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 5, i32 0
  br label %101

101:                                              ; preds = %99, %82, %76
  %102 = phi %"class.blink::ComputedStyle"** [ %100, %99 ], [ %81, %76 ], [ %85, %82 ]
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyle"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %103, i64 0, i32 0, i32 9
  %107 = bitcast [20 x i8]* %106 to i160*
  %108 = load i160, i160* %107, align 8
  %109 = lshr i160 %108, 114
  %110 = trunc i160 %109 to i32
  %111 = and i32 %110, 1
  br label %112

112:                                              ; preds = %93, %101, %105
  %113 = phi i32 [ %111, %105 ], [ 0, %101 ], [ 0, %93 ]
  %114 = call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* nonnull %10, i32 %70, i32 %113, i1 zeroext false) #6
  %115 = call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* nonnull %12, i32 %70, i32 %113, i1 zeroext false) #6
  %116 = call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* nonnull %14, i32 %70, i32 %113, i1 zeroext false) #6
  %117 = lshr i32 %114, 16
  %118 = and i32 %117, 255
  %119 = sitofp i32 %118 to float
  %120 = lshr i32 %115, 16
  %121 = and i32 %120, 255
  %122 = sitofp i32 %121 to float
  %123 = lshr i32 %116, 16
  %124 = and i32 %123, 255
  %125 = sitofp i32 %124 to float
  %126 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 0
  %127 = load i8, i8* %126, align 1, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %112
  %130 = fcmp olt float %2, 5.000000e-01
  %131 = select i1 %130, float %119, float %122
  br label %136

132:                                              ; preds = %112
  %133 = fsub float %122, %119
  %134 = fmul float %133, %2
  %135 = fadd float %134, %119
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi float [ %131, %129 ], [ %135, %132 ]
  %138 = icmp eq i32 %3, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %141 = load i8, i8* %140, align 1, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = uitofp i32 %3 to float
  %145 = fmul float %144, %125
  %146 = fadd float %145, %137
  br label %147

147:                                              ; preds = %136, %139, %143
  %148 = phi float [ %146, %143 ], [ %137, %139 ], [ %137, %136 ]
  %149 = lshr i32 %114, 8
  %150 = and i32 %149, 255
  %151 = sitofp i32 %150 to float
  %152 = lshr i32 %115, 8
  %153 = and i32 %152, 255
  %154 = sitofp i32 %153 to float
  %155 = lshr i32 %116, 8
  %156 = and i32 %155, 255
  %157 = sitofp i32 %156 to float
  br i1 %128, label %161, label %158

158:                                              ; preds = %147
  %159 = fcmp olt float %2, 5.000000e-01
  %160 = select i1 %159, float %151, float %154
  br label %165

161:                                              ; preds = %147
  %162 = fsub float %154, %151
  %163 = fmul float %162, %2
  %164 = fadd float %163, %151
  br label %165

165:                                              ; preds = %161, %158
  %166 = phi float [ %160, %158 ], [ %164, %161 ]
  br i1 %138, label %175, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %169 = load i8, i8* %168, align 1, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = uitofp i32 %3 to float
  %173 = fmul float %172, %157
  %174 = fadd float %173, %166
  br label %175

175:                                              ; preds = %165, %167, %171
  %176 = phi float [ %174, %171 ], [ %166, %167 ], [ %166, %165 ]
  %177 = and i32 %114, 255
  %178 = sitofp i32 %177 to float
  %179 = and i32 %115, 255
  %180 = sitofp i32 %179 to float
  %181 = and i32 %116, 255
  %182 = sitofp i32 %181 to float
  br i1 %128, label %186, label %183

183:                                              ; preds = %175
  %184 = fcmp olt float %2, 5.000000e-01
  %185 = select i1 %184, float %178, float %180
  br label %190

186:                                              ; preds = %175
  %187 = fsub float %180, %178
  %188 = fmul float %187, %2
  %189 = fadd float %188, %178
  br label %190

190:                                              ; preds = %186, %183
  %191 = phi float [ %185, %183 ], [ %189, %186 ]
  br i1 %138, label %200, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %194 = load i8, i8* %193, align 1, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %192
  %197 = uitofp i32 %3 to float
  %198 = fmul float %197, %182
  %199 = fadd float %198, %191
  br label %200

200:                                              ; preds = %190, %192, %196
  %201 = phi float [ %199, %196 ], [ %191, %192 ], [ %191, %190 ]
  %202 = lshr i32 %114, 24
  %203 = sitofp i32 %202 to float
  %204 = lshr i32 %115, 24
  %205 = sitofp i32 %204 to float
  %206 = lshr i32 %116, 24
  %207 = sitofp i32 %206 to float
  br i1 %128, label %211, label %208

208:                                              ; preds = %200
  %209 = fcmp olt float %2, 5.000000e-01
  %210 = select i1 %209, float %203, float %205
  br label %215

211:                                              ; preds = %200
  %212 = fsub float %205, %203
  %213 = fmul float %212, %2
  %214 = fadd float %213, %203
  br label %215

215:                                              ; preds = %211, %208
  %216 = phi float [ %210, %208 ], [ %214, %211 ]
  br i1 %138, label %225, label %217

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %225, label %221

221:                                              ; preds = %217
  %222 = uitofp i32 %3 to float
  %223 = fmul float %222, %207
  %224 = fadd float %223, %216
  br label %225

225:                                              ; preds = %215, %217, %221
  %226 = phi float [ %224, %221 ], [ %216, %217 ], [ %216, %215 ]
  %227 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 1
  %228 = load i8, i8* %227, align 1, !range !2
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %247, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1
  %232 = call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %231, i32 %70, i32 %113, i1 zeroext false) #6
  %233 = lshr i32 %232, 16
  %234 = and i32 %233, 255
  %235 = sitofp i32 %234 to float
  %236 = fadd float %148, %235
  %237 = lshr i32 %232, 8
  %238 = and i32 %237, 255
  %239 = sitofp i32 %238 to float
  %240 = fadd float %176, %239
  %241 = and i32 %232, 255
  %242 = sitofp i32 %241 to float
  %243 = fadd float %201, %242
  %244 = lshr i32 %232, 24
  %245 = sitofp i32 %244 to float
  %246 = fadd float %226, %245
  br label %247

247:                                              ; preds = %225, %230
  %248 = phi float [ %236, %230 ], [ %148, %225 ]
  %249 = phi float [ %240, %230 ], [ %176, %225 ]
  %250 = phi float [ %243, %230 ], [ %201, %225 ]
  %251 = phi float [ %246, %230 ], [ %226, %225 ]
  %252 = call float @llvm.round.f32(float %248)
  %253 = fptosi float %252 to i32
  %254 = call float @llvm.round.f32(float %249)
  %255 = fptosi float %254 to i32
  %256 = call float @llvm.round.f32(float %250)
  %257 = fptosi float %256 to i32
  %258 = call float @llvm.round.f32(float %251)
  %259 = fptosi float %258 to i32
  %260 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 %253, i32 %255, i32 %257, i32 %259) #6
  %261 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1
  %262 = bitcast %"class.blink::StyleColor"* %261 to i64*
  %263 = zext i32 %260 to i64
  store i64 %263, i64* %262, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  ret void
}

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink16SVGColorProperty17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGColorProperty"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Color", align 4
  %5 = alloca %"class.blink::Color", align 4
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 0
  %10 = and i32 %7, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %9, label %13, label %24

13:                                               ; preds = %3
  br i1 %11, label %20, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %16 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 2, i32 0
  br label %39

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 2, i32 0
  br label %39

24:                                               ; preds = %3
  br i1 %11, label %29, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %29, %25
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 5, i32 0
  br label %39

39:                                               ; preds = %37, %20, %14
  %40 = phi %"class.blink::ComputedStyle"** [ %38, %37 ], [ %19, %14 ], [ %23, %20 ]
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = icmp eq %"class.blink::ComputedStyle"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #6
  %45 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %41, %"class.blink::CSSProperty"* dereferenceable(24) %44) #6
  %46 = load i32, i32* %6, align 8
  br label %47

47:                                               ; preds = %31, %39, %43
  %48 = phi i32 [ %46, %43 ], [ %7, %39 ], [ %7, %31 ]
  %49 = phi i32 [ %45, %43 ], [ 0, %39 ], [ 0, %31 ]
  %50 = and i32 %48, 12
  %51 = icmp eq i32 %50, 0
  %52 = and i32 %48, 1
  %53 = icmp eq i32 %52, 0
  br i1 %51, label %54, label %65

54:                                               ; preds = %47
  br i1 %53, label %61, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %57 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %57, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %59, i64 0, i32 2, i32 0
  br label %80

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  %63 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %63, i64 0, i32 2, i32 0
  br label %80

65:                                               ; preds = %47
  br i1 %53, label %70, label %66

66:                                               ; preds = %65
  %67 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %68 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %68, i64 0, i32 1, i32 0, i32 0
  br label %72

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %72

72:                                               ; preds = %70, %66
  %73 = phi %"class.blink::NodeRenderingData"** [ %69, %66 ], [ %71, %70 ]
  %74 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %74, i64 0, i32 1
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 5, i32 0
  br label %80

80:                                               ; preds = %78, %61, %55
  %81 = phi %"class.blink::ComputedStyle"** [ %79, %78 ], [ %60, %55 ], [ %64, %61 ]
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = icmp eq %"class.blink::ComputedStyle"* %82, null
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = lshr i160 %87, 114
  %89 = trunc i160 %88 to i32
  %90 = and i32 %89, 1
  br label %91

91:                                               ; preds = %72, %80, %84
  %92 = phi i32 [ %90, %84 ], [ 0, %80 ], [ 0, %72 ]
  %93 = bitcast %"class.blink::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #6
  %94 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %4, i64 0, i32 0
  %95 = getelementptr inbounds %"class.blink::SVGColorProperty", %"class.blink::SVGColorProperty"* %0, i64 0, i32 1
  %96 = tail call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %95, i32 %49, i32 %92, i1 zeroext false) #6
  store i32 %96, i32* %94, align 4
  %97 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #6
  %98 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %100 = bitcast %"class.blink::SVGPropertyBase"* %99 to %"class.blink::StyleColor"*
  %101 = tail call i32 @_ZNK5blink10StyleColor7ResolveENS_5ColorENS_5mojom11ColorSchemeEb(%"class.blink::StyleColor"* %100, i32 %49, i32 %92, i1 zeroext false) #6
  store i32 %101, i32* %98, align 4
  %102 = call float @_ZN5blink13ColorDistance8DistanceERKNS_5ColorES3_(%"class.blink::Color"* nonnull dereferenceable(4) %4, %"class.blink::Color"* nonnull dereferenceable(4) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  ret float %102
}

declare float @_ZN5blink13ColorDistance8DistanceERKNS_5ColorES3_(%"class.blink::Color"* dereferenceable(4), %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15SVGPropertyBaseD2Ev(%"class.blink::SVGPropertyBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SVGColorPropertyD0Ev(%"class.blink::SVGColorProperty"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16SVGColorProperty7GetTypeEv(%"class.blink::SVGColorProperty"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15SVGPropertyBase5TraceEPNS_7VisitorE(%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
