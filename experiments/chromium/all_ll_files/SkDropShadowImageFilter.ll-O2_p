; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkDropShadowImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkDropShadowImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.35 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.36 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%"class.(anonymous namespace)::SkDropShadowImageFilter" = type <{ %class.SkImageFilter_Base.base, float, float, float, float, i32, i8, [7 x i8] }>
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.20 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%struct.SkPoint = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [24 x i8] c"SkDropShadowImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"SkDropShadowImageFilterImpl\00", align 1
@_ZTVN12_GLOBAL__N_123SkDropShadowImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkDropShadowImageFilter"*)* @_ZN12_GLOBAL__N_123SkDropShadowImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkDropShadowImageFilter"*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkDropShadowImageFilter"*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkDropShadowImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkDropShadowImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkDropShadowImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkDropShadowImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_123SkDropShadowImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.35 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.36 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.37 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.38 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@__const._ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters10DropShadowEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, float, float, float, float, i32, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp, align 8
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %11 = bitcast %class.sk_sp* %6 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %10, align 8
  %13 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0xFFF0000000000000
  br i1 %16, label %29, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds float, float* %14, i64 1
  %19 = load float, float* %18, align 4
  %20 = fcmp une float %19, 0xFFF0000000000000
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds float, float* %14, i64 2
  %23 = load float, float* %22, align 4
  %24 = fcmp une float %23, 0x7FF0000000000000
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds float, float* %14, i64 3
  %27 = load float, float* %26, align 4
  %28 = fcmp une float %27, 0x7FF0000000000000
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %21, %17, %8
  br label %30

30:                                               ; preds = %25, %29
  %31 = phi %struct.SkRect* [ %13, %29 ], [ null, %25 ]
  %32 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = tail call i8* @_Znwm(i64 104) #10, !noalias !2
  %34 = bitcast %class.sk_sp* %9 to i64*
  store i64 %12, i64* %34, align 8, !noalias !2
  %35 = bitcast i8* %33 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %35, %class.sk_sp* nonnull %9, i32 1, %struct.SkRect* %31) #11, !noalias !2
  %36 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkDropShadowImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %33, i64 76
  %38 = bitcast i8* %37 to float*
  store float %1, float* %38, align 4, !noalias !2
  %39 = getelementptr inbounds i8, i8* %33, i64 80
  %40 = bitcast i8* %39 to float*
  store float %2, float* %40, align 8, !noalias !2
  %41 = getelementptr inbounds i8, i8* %33, i64 84
  %42 = bitcast i8* %41 to float*
  store float %3, float* %42, align 4, !noalias !2
  %43 = getelementptr inbounds i8, i8* %33, i64 88
  %44 = bitcast i8* %43 to float*
  store float %4, float* %44, align 8, !noalias !2
  %45 = getelementptr inbounds i8, i8* %33, i64 92
  %46 = bitcast i8* %45 to i32*
  store i32 %5, i32* %46, align 4, !noalias !2
  %47 = getelementptr inbounds i8, i8* %33, i64 96
  store i8 0, i8* %47, align 8, !noalias !2
  %48 = bitcast %class.sk_sp* %0 to i8**
  store i8* %33, i8** %48, align 8, !alias.scope !2
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %50 = load %class.SkImageFilter*, %class.SkImageFilter** %49, align 8, !noalias !2
  %51 = icmp eq %class.SkImageFilter* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %30
  %53 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel, !noalias !2
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkImageFilter* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkImageFilter* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8, !noalias !2
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8, !noalias !2
  call void %61(%class.SkRefCntBase* nonnull %57) #11, !noalias !2
  br label %62

62:                                               ; preds = %56, %52, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters14DropShadowOnlyEffffj5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, float, float, float, float, i32, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp, align 8
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %11 = bitcast %class.sk_sp* %6 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %10, align 8
  %13 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %7, i64 0, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0xFFF0000000000000
  br i1 %16, label %29, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds float, float* %14, i64 1
  %19 = load float, float* %18, align 4
  %20 = fcmp une float %19, 0xFFF0000000000000
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds float, float* %14, i64 2
  %23 = load float, float* %22, align 4
  %24 = fcmp une float %23, 0x7FF0000000000000
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds float, float* %14, i64 3
  %27 = load float, float* %26, align 4
  %28 = fcmp une float %27, 0x7FF0000000000000
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %21, %17, %8
  br label %30

30:                                               ; preds = %25, %29
  %31 = phi %struct.SkRect* [ %13, %29 ], [ null, %25 ]
  %32 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = tail call i8* @_Znwm(i64 104) #10, !noalias !5
  %34 = bitcast %class.sk_sp* %9 to i64*
  store i64 %12, i64* %34, align 8, !noalias !5
  %35 = bitcast i8* %33 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %35, %class.sk_sp* nonnull %9, i32 1, %struct.SkRect* %31) #11, !noalias !5
  %36 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkDropShadowImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8, !noalias !5
  %37 = getelementptr inbounds i8, i8* %33, i64 76
  %38 = bitcast i8* %37 to float*
  store float %1, float* %38, align 4, !noalias !5
  %39 = getelementptr inbounds i8, i8* %33, i64 80
  %40 = bitcast i8* %39 to float*
  store float %2, float* %40, align 8, !noalias !5
  %41 = getelementptr inbounds i8, i8* %33, i64 84
  %42 = bitcast i8* %41 to float*
  store float %3, float* %42, align 4, !noalias !5
  %43 = getelementptr inbounds i8, i8* %33, i64 88
  %44 = bitcast i8* %43 to float*
  store float %4, float* %44, align 8, !noalias !5
  %45 = getelementptr inbounds i8, i8* %33, i64 92
  %46 = bitcast i8* %45 to i32*
  store i32 %5, i32* %46, align 4, !noalias !5
  %47 = getelementptr inbounds i8, i8* %33, i64 96
  store i8 1, i8* %47, align 8, !noalias !5
  %48 = bitcast %class.sk_sp* %0 to i8**
  store i8* %33, i8** %48, align 8, !alias.scope !5
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %50 = load %class.SkImageFilter*, %class.SkImageFilter** %49, align 8, !noalias !5
  %51 = icmp eq %class.SkImageFilter* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %30
  %53 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel, !noalias !5
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkImageFilter* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkImageFilter* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8, !noalias !5
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8, !noalias !5
  call void %61(%class.SkRefCntBase* nonnull %57) #11, !noalias !5
  br label %62

62:                                               ; preds = %56, %52, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z42SkRegisterDropShadowImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %14, align 8
  br label %77

15:                                               ; preds = %2
  %16 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %17 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %18 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %19 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %20 = call i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer* %1) #11
  %21 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #11
  %22 = icmp ugt i32 %21, 1
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %24

24:                                               ; preds = %15, %23
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %26 = load i8, i8* %25, align 8, !range !8
  %27 = icmp eq i8 %26, 0
  %28 = icmp ne i32 %21, 0
  %29 = and i1 %28, %27
  %30 = bitcast i8* %7 to %class.sk_sp**
  %31 = load %class.sk_sp*, %class.sk_sp** %30, align 8, !noalias !9
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %31, i64 0, i32 0
  %33 = load %class.SkImageFilter*, %class.SkImageFilter** %32, align 8, !noalias !9
  %34 = icmp eq %class.SkImageFilter* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !9
  br label %38

38:                                               ; preds = %24, %35
  %39 = ptrtoint %class.SkImageFilter* %33 to i64
  %40 = load i32, i32* %6, align 8
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 0
  %43 = select i1 %41, %struct.SkRect* null, %struct.SkRect* %42
  %44 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = call i8* @_Znwm(i64 104) #10, !noalias !12
  %46 = bitcast %class.sk_sp* %3 to i64*
  store i64 %39, i64* %46, align 8, !noalias !12
  %47 = zext i1 %29 to i8
  %48 = bitcast i8* %45 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %48, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* %43) #11, !noalias !12
  %49 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_123SkDropShadowImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !noalias !12
  %50 = getelementptr inbounds i8, i8* %45, i64 76
  %51 = bitcast i8* %50 to float*
  store float %16, float* %51, align 4, !noalias !12
  %52 = getelementptr inbounds i8, i8* %45, i64 80
  %53 = bitcast i8* %52 to float*
  store float %17, float* %53, align 8, !noalias !12
  %54 = getelementptr inbounds i8, i8* %45, i64 84
  %55 = bitcast i8* %54 to float*
  store float %18, float* %55, align 4, !noalias !12
  %56 = getelementptr inbounds i8, i8* %45, i64 88
  %57 = bitcast i8* %56 to float*
  store float %19, float* %57, align 8, !noalias !12
  %58 = getelementptr inbounds i8, i8* %45, i64 92
  %59 = bitcast i8* %58 to i32*
  store i32 %20, i32* %59, align 4, !noalias !12
  %60 = getelementptr inbounds i8, i8* %45, i64 96
  store i8 %47, i8* %60, align 8, !noalias !12
  %61 = ptrtoint i8* %45 to i64
  %62 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %63 = load %class.SkImageFilter*, %class.SkImageFilter** %62, align 8, !noalias !12
  %64 = icmp eq %class.SkImageFilter* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %38
  %66 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %63, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel, !noalias !12
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.SkImageFilter* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.SkImageFilter* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8, !noalias !12
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8, !noalias !12
  call void %74(%class.SkRefCntBase* nonnull %70) #11, !noalias !12
  br label %75

75:                                               ; preds = %38, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %76 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %61, i64* %76, align 8
  br label %77

77:                                               ; preds = %75, %13
  %78 = load i64, i64* %10, align 8
  %79 = and i64 %78, 4294967294
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast i8* %7 to %class.sk_sp**
  br label %87

83:                                               ; preds = %103, %77
  %84 = phi i64 [ %78, %77 ], [ %105, %103 ]
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %111, label %109

87:                                               ; preds = %103, %81
  %88 = phi i64 [ 0, %81 ], [ %104, %103 ]
  %89 = load %class.sk_sp*, %class.sk_sp** %82, align 8
  %90 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %89, i64 %88, i32 0
  %91 = load %class.SkImageFilter*, %class.SkImageFilter** %90, align 8
  %92 = icmp eq %class.SkImageFilter* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkImageFilter* %91 to %class.SkRefCntBase*
  %99 = bitcast %class.SkImageFilter* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #11
  br label %103

103:                                              ; preds = %97, %93, %87
  %104 = add nuw nsw i64 %88, 1
  %105 = load i64, i64* %10, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %87, label %83

109:                                              ; preds = %83
  %110 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %110) #11
  br label %111

111:                                              ; preds = %83, %109
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123SkDropShadowImageFilterD0Ev(%"class.(anonymous namespace)::SkDropShadowImageFilter"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #11
  %3 = bitcast %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkDropShadowImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_123SkDropShadowImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkDropShadowImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkDropShadowImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %7 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, i64 5
  %9 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, float %5) #11
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 2
  %11 = load float, float* %10, align 8
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %11) #11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, i64 5
  %19 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, float %16) #11
  %20 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 4
  %21 = load float, float* %20, align 8
  %22 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %23 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %22, i64 5
  %24 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %23, align 8
  tail call void %24(%class.SkWriteBuffer* %1, float %21) #11
  %25 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %28 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %28, i64 12
  %30 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %29, align 8
  tail call void %30(%class.SkWriteBuffer* %1, i32 %26) #11
  %31 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !8
  %33 = zext i8 %32 to i32
  %34 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %27, align 8
  %35 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %34, i64 7
  %36 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %35, align 8
  tail call void %36(%class.SkWriteBuffer* %1, i32 %33) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkDropShadowImageFilter"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca <4 x float>, align 16
  %6 = bitcast <4 x float>* %5 to %struct.SkRect*
  %7 = bitcast %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0 to %class.SkImageFilter*
  %8 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -1, i64 16, i1 false)
  %9 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %7, i32 0) #11
  %10 = icmp eq %class.SkImageFilter* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %7, i32 0) #11
  %13 = bitcast %class.SkImageFilter* %12 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %14 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %13, align 8
  %15 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %14, i64 7
  %16 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %15, align 8
  %17 = tail call { <2 x float>, <2 x float> } %16(%class.SkImageFilter* %12, %struct.SkRect* dereferenceable(16) %1) #11
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 0
  store <2 x float> %19, <2 x float>* %18, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %21 = extractvalue { <2 x float>, <2 x float> } %17, 1
  store <2 x float> %21, <2 x float>* %20, align 8
  %22 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  br label %26

23:                                               ; preds = %2
  %24 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  %25 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 4 %25, i64 16, i1 false)
  br label %26

26:                                               ; preds = %23, %11
  %27 = phi i8* [ %24, %23 ], [ %22, %11 ]
  %28 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %28, i8* nonnull align 8 %27, i64 16, i1 false)
  %29 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 1
  %30 = bitcast float* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = shufflevector <2 x float> %31, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %33 = load <4 x float>, <4 x float>* %5, align 16
  %34 = fadd <4 x float> %32, %33
  %35 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 3
  %36 = bitcast float* %35 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = fmul <2 x float> %37, <float 3.000000e+00, float 3.000000e+00>
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %40 = fsub <4 x float> %34, %39
  %41 = fadd <4 x float> %34, %39
  %42 = shufflevector <4 x float> %40, <4 x float> %41, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %42, <4 x float>* %5, align 16
  %43 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 6
  %44 = load i8, i8* %43, align 8, !range !8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %26
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %6) #11
  br label %48

47:                                               ; preds = %26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 16 %28, i64 16, i1 false)
  br label %48

48:                                               ; preds = %47, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %50 = load <2 x float>, <2 x float>* %49, align 8
  %51 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %50, 0
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %53 = load <2 x float>, <2 x float>* %52, align 8
  %54 = insertvalue { <2 x float>, <2 x float> } %51, <2 x float> %53, 1
  ret { <2 x float>, <2 x float> } %54
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkDropShadowImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #6 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = alloca %"class.skif::FilterResult", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = alloca %struct.SkIRect, align 4
  %12 = alloca %class.sk_sp.20, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %struct.SkISize*
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %struct.SkPoint*
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %class.sk_sp, align 8
  %19 = alloca %"struct.SkImageFilters::CropRect", align 4
  %20 = alloca %class.sk_sp.38, align 8
  %21 = alloca <2 x float>, align 8
  %22 = bitcast <2 x float>* %21 to %struct.SkPoint*
  %23 = alloca %struct.SkSamplingOptions, align 4
  %24 = bitcast %"class.(anonymous namespace)::SkDropShadowImageFilter"* %1 to %class.SkImageFilter_Base*
  %25 = bitcast %"class.skif::FilterResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11, !noalias !15
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %8, %class.SkImageFilter_Base* %24, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #11, !noalias !15
  %26 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %8, i64 0, i32 0, i32 0
  %27 = load %class.SkSpecialImage*, %class.SkSpecialImage** %26, align 8, !noalias !18
  %28 = icmp eq %class.SkSpecialImage* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %8, i64 0, i32 1, i32 0
  %31 = bitcast %struct.SkIPoint* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !18
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !18
  %38 = atomicrmw add i32* %36, i32 -1 acq_rel, !noalias !15
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %29
  %41 = bitcast %class.SkSpecialImage* %27 to %class.SkRefCntBase*
  %42 = bitcast %class.SkSpecialImage* %27 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8, !noalias !15
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8, !noalias !15
  call void %45(%class.SkRefCntBase* nonnull %41) #11, !noalias !15
  br label %48

46:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11, !noalias !15
  %47 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %47, align 8
  br label %239

48:                                               ; preds = %40, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11, !noalias !15
  %49 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %51 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %27, i64 0, i32 2, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %27, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %52, %54
  %56 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %27, i64 0, i32 2, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %27, i64 0, i32 2, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %57, %59
  %61 = shl i64 %32, 32
  %62 = ashr exact i64 %61, 32
  %63 = sext i32 %55 to i64
  %64 = add nsw i64 %62, %63
  %65 = icmp slt i64 %64, 2147483647
  %66 = select i1 %65, i64 %64, i64 2147483647
  %67 = icmp sgt i64 %66, -2147483647
  %68 = select i1 %67, i64 %66, i64 -2147483647
  %69 = ashr i64 %32, 32
  %70 = sext i32 %60 to i64
  %71 = add nsw i64 %69, %70
  %72 = icmp slt i64 %71, 2147483647
  %73 = select i1 %72, i64 %71, i64 2147483647
  %74 = icmp sgt i64 %73, -2147483647
  %75 = select i1 %74, i64 %73, i64 -2147483647
  %76 = shl nsw i64 %75, 32
  %77 = and i64 %68, 4294967295
  %78 = or i64 %76, %77
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %32, i64* %79, align 8
  store i64 %78, i64* %50, align 8
  %80 = bitcast %struct.SkIRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 0
  %82 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 1
  %83 = bitcast %struct.SkIRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %83, i8 -86, i64 16, i1 false)
  %84 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %24, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %10, %struct.SkIRect* nonnull %11) #11
  br i1 %84, label %87, label %85

85:                                               ; preds = %48
  %86 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %86, align 8
  br label %230

87:                                               ; preds = %48
  %88 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 3
  %89 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 2
  %90 = bitcast %class.sk_sp.20* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %12, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %91, align 8
  %92 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = load i32, i32* %89, align 4
  %94 = load i32, i32* %81, align 4
  %95 = sub i32 %93, %94
  %96 = load i32, i32* %88, align 4
  %97 = load i32, i32* %82, align 4
  %98 = sub i32 %96, %97
  %99 = zext i32 %98 to i64
  %100 = shl nuw i64 %99, 32
  %101 = zext i32 %95 to i64
  %102 = or i64 %100, %101
  store i64 %102, i64* %13, align 8
  %103 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %104 = load %class.SkSpecialImage*, %class.SkSpecialImage** %103, align 8, !noalias !21
  %105 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %104, i64 0, i32 1
  %106 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %107 = load i32, i32* %106, align 8, !noalias !21
  %108 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %109 = load %class.SkColorSpace*, %class.SkColorSpace** %108, align 8, !noalias !21
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* nonnull sret %12, %class.SkSpecialImage* %104, i32 %107, %class.SkColorSpace* %109, %struct.SkISize* nonnull dereferenceable(8) %14, i32 2, %class.SkSurfaceProps* dereferenceable(8) %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %110 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %91, align 8
  %111 = icmp eq %class.SkSpecialSurface* %110, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %87
  %113 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %113, align 8
  br label %229

114:                                              ; preds = %87
  %115 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %110) #11
  %116 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %117 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #11
  %118 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #11
  %119 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %120 = extractvalue { <2 x float>, <2 x float> } %118, 0
  store <2 x float> %120, <2 x float>* %119, align 8
  %121 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %122 = extractvalue { <2 x float>, <2 x float> } %118, 1
  store <2 x float> %122, <2 x float>* %121, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %115, %struct.SkRGBA4f* nonnull dereferenceable(16) %116, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #11
  %123 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %124 = getelementptr inbounds <2 x float>, <2 x float>* %15, i64 0, i64 0
  %125 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 0, i32 1
  %126 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %1, i64 0, i32 3
  %127 = bitcast float* %126 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = bitcast <2 x float>* %15 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %130, %struct.SkPoint* nonnull %16, %struct.SkPoint* nonnull %16, i32 1) #11
  %131 = load float, float* %124, align 8
  %132 = call float @llvm.fabs.f32(float %131)
  store float %132, float* %124, align 8
  %133 = load float, float* %125, align 4
  %134 = call float @llvm.fabs.f32(float %133)
  store float %134, float* %125, align 4
  %135 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %135) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_123SkDropShadowImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %17) #11
  %136 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %17, i64 0, i32 8, i32 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = or i32 %137, 1
  store i32 %138, i32* %136, align 8
  %139 = load float, float* %124, align 8
  %140 = load float, float* %125, align 4
  %141 = bitcast %"struct.SkImageFilters::CropRect"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %141, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #11
  %142 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142)
  %143 = bitcast %class.sk_sp* %6 to i64*
  store i64 0, i64* %143, align 8, !noalias !24
  call void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %18, float %139, float %140, i32 3, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %19) #11
  %144 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %145 = load %class.SkImageFilter*, %class.SkImageFilter** %144, align 8, !noalias !24
  %146 = icmp eq %class.SkImageFilter* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %114
  %148 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %145, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = bitcast %class.SkImageFilter* %145 to %class.SkRefCntBase*
  %153 = bitcast %class.SkImageFilter* %145 to void (%class.SkRefCntBase*)***
  %154 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %153, align 8
  %155 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, i64 2
  %156 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, align 8
  call void %156(%class.SkRefCntBase* nonnull %152) #11
  br label %157

157:                                              ; preds = %114, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142)
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %17, %class.sk_sp* nonnull %18) #11
  %158 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %18, i64 0, i32 0
  %159 = load %class.SkImageFilter*, %class.SkImageFilter** %158, align 8
  %160 = icmp eq %class.SkImageFilter* %159, null
  br i1 %160, label %171, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %159, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = atomicrmw add i32* %162, i32 -1 acq_rel
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %171

165:                                              ; preds = %161
  %166 = bitcast %class.SkImageFilter* %159 to %class.SkRefCntBase*
  %167 = bitcast %class.SkImageFilter* %159 to void (%class.SkRefCntBase*)***
  %168 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %167, align 8
  %169 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, i64 2
  %170 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %169, align 8
  call void %170(%class.SkRefCntBase* nonnull %166) #11
  br label %171

171:                                              ; preds = %165, %161, %157
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #11
  %172 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %1, i64 0, i32 5
  %173 = load i32, i32* %172, align 4
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.38* nonnull sret %20, i32 %173, i32 5) #11
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %17, %class.sk_sp.38* nonnull %20) #11
  %174 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %20, i64 0, i32 0
  %175 = load %class.SkColorFilter*, %class.SkColorFilter** %174, align 8
  %176 = icmp eq %class.SkColorFilter* %175, null
  br i1 %176, label %187, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %175, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %187

181:                                              ; preds = %177
  %182 = bitcast %class.SkColorFilter* %175 to %class.SkRefCntBase*
  %183 = bitcast %class.SkColorFilter* %175 to void (%class.SkRefCntBase*)***
  %184 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %183, align 8
  %185 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %184, i64 2
  %186 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, align 8
  call void %186(%class.SkRefCntBase* nonnull %182) #11
  br label %187

187:                                              ; preds = %171, %177, %181
  %188 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #11
  %189 = getelementptr inbounds <2 x float>, <2 x float>* %21, i64 0, i64 0
  %190 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 0, i32 1
  %191 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %1, i64 0, i32 1
  %192 = bitcast float* %191 to i64*
  %193 = load i64, i64* %192, align 4
  %194 = bitcast <2 x float>* %21 to i64*
  store i64 %193, i64* %194, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %130, %struct.SkPoint* nonnull %22, %struct.SkPoint* nonnull %22, i32 1) #11
  %195 = sitofp i32 %33 to float
  %196 = load i32, i32* %81, align 4
  %197 = sitofp i32 %196 to float
  %198 = fsub float %195, %197
  %199 = sitofp i32 %35 to float
  %200 = load i32, i32* %82, align 4
  %201 = sitofp i32 %200 to float
  %202 = fsub float %199, %201
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %115, float %198, float %202) #11
  %203 = load float, float* %189, align 8
  %204 = load float, float* %190, align 4
  %205 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %205) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %205, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %27, %class.SkCanvas* %115, float %203, float %204, %struct.SkSamplingOptions* nonnull dereferenceable(20) %23, %class.SkPaint* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %205) #11
  %206 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %1, i64 0, i32 6
  %207 = load i8, i8* %206, align 8, !range !8
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %187
  %210 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %210) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %210, i8 0, i64 20, i1 false) #11
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %27, %class.SkCanvas* %115, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* null) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %210) #11
  br label %211

211:                                              ; preds = %209, %187
  %212 = load i32, i32* %81, align 4
  %213 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %212, i32* %213, align 4
  %214 = load i32, i32* %82, align 4
  %215 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %214, i32* %215, align 4
  %216 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %91, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %216) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  %217 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %91, align 8
  %218 = icmp eq %class.SkSpecialSurface* %217, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %217, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw add i32* %220, i32 -1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = bitcast %class.SkSpecialSurface* %217 to %class.SkRefCntBase*
  %225 = bitcast %class.SkSpecialSurface* %217 to void (%class.SkRefCntBase*)***
  %226 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %225, align 8
  %227 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %226, i64 2
  %228 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %227, align 8
  call void %228(%class.SkRefCntBase* nonnull %224) #11
  br label %229

229:                                              ; preds = %112, %211, %219, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  br label %230

230:                                              ; preds = %229, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11
  %231 = atomicrmw add i32* %36, i32 -1 acq_rel
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %233, label %239

233:                                              ; preds = %230
  %234 = bitcast %class.SkSpecialImage* %27 to %class.SkRefCntBase*
  %235 = bitcast %class.SkSpecialImage* %27 to void (%class.SkRefCntBase*)***
  %236 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %235, align 8
  %237 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %236, i64 2
  %238 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %237, align 8
  call void %238(%class.SkRefCntBase* nonnull %234) #11
  br label %239

239:                                              ; preds = %46, %230, %233
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_123SkDropShadowImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkDropShadowImageFilter"* nocapture readonly, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #6 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %struct.SkPoint*
  %12 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 1
  %16 = bitcast float* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  store <2 x float> %17, <2 x float>* %8, align 8
  %18 = icmp eq i32 %3, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %5
  %20 = extractelement <2 x float> %17, i32 0
  %21 = extractelement <2 x float> %17, i32 1
  %22 = fsub float -0.000000e+00, %20
  store float %22, float* %13, align 8
  %23 = fsub float -0.000000e+00, %21
  store float %23, float* %14, align 4
  br label %24

24:                                               ; preds = %19, %5
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %9, i32 1) #11
  %25 = bitcast { i64, i64 }* %6 to i32*
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %28 = bitcast i64* %27 to i32*
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %30 = load float, float* %13, align 8
  %31 = call float @llvm.ceil.f32(float %30)
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = load float, float* %14, align 4
  %38 = call float @llvm.ceil.f32(float %37)
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = sext i32 %36 to i64
  %48 = add nsw i64 %47, %46
  %49 = icmp slt i64 %48, 2147483647
  %50 = select i1 %49, i64 %48, i64 2147483647
  %51 = icmp sgt i64 %50, -2147483647
  %52 = select i1 %51, i64 %50, i64 -2147483647
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = sext i32 %43 to i64
  %57 = add nsw i64 %56, %55
  %58 = icmp slt i64 %57, 2147483647
  %59 = select i1 %58, i64 %57, i64 2147483647
  %60 = icmp sgt i64 %59, -2147483647
  %61 = select i1 %60, i64 %59, i64 -2147483647
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = add nsw i64 %47, %64
  %66 = icmp slt i64 %65, 2147483647
  %67 = select i1 %66, i64 %65, i64 2147483647
  %68 = icmp sgt i64 %67, -2147483647
  %69 = select i1 %68, i64 %67, i64 -2147483647
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = add nsw i64 %56, %72
  %74 = icmp slt i64 %73, 2147483647
  %75 = select i1 %74, i64 %73, i64 2147483647
  %76 = icmp sgt i64 %75, -2147483647
  %77 = select i1 %76, i64 %75, i64 -2147483647
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %79 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  %82 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 3
  %83 = bitcast float* %82 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = bitcast <2 x float>* %10 to i64*
  store i64 %84, i64* %85, align 8
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %11, i32 1) #11
  %86 = load float, float* %80, align 8
  %87 = fmul float %86, 3.000000e+00
  %88 = call float @llvm.fabs.f32(float %87)
  %89 = call float @llvm.ceil.f32(float %88)
  %90 = fcmp olt float %89, 0x41DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0x41DFFFFFE0000000
  %92 = fcmp ogt float %91, 0xC1DFFFFFE0000000
  %93 = select i1 %92, float %91, float 0xC1DFFFFFE0000000
  %94 = fptosi float %93 to i32
  %95 = load float, float* %81, align 4
  %96 = fmul float %95, 3.000000e+00
  %97 = call float @llvm.fabs.f32(float %96)
  %98 = call float @llvm.ceil.f32(float %97)
  %99 = fcmp olt float %98, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = sub nsw i32 0, %94
  %105 = sub nsw i32 0, %103
  %106 = sext i32 %104 to i64
  %107 = add nsw i64 %52, %106
  %108 = icmp slt i64 %107, 2147483647
  %109 = select i1 %108, i64 %107, i64 2147483647
  %110 = icmp sgt i64 %109, -2147483647
  %111 = select i1 %110, i64 %109, i64 -2147483647
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %25, align 8
  %113 = sext i32 %105 to i64
  %114 = add nsw i64 %61, %113
  %115 = icmp slt i64 %114, 2147483647
  %116 = select i1 %115, i64 %114, i64 2147483647
  %117 = icmp sgt i64 %116, -2147483647
  %118 = select i1 %117, i64 %116, i64 -2147483647
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* %26, align 4
  %120 = sub nsw i64 %69, %106
  %121 = icmp slt i64 %120, 2147483647
  %122 = select i1 %121, i64 %120, i64 2147483647
  %123 = icmp sgt i64 %122, -2147483647
  %124 = select i1 %123, i64 %122, i64 -2147483647
  %125 = trunc i64 %124 to i32
  store i32 %125, i32* %28, align 8
  %126 = sub nsw i64 %77, %113
  %127 = icmp slt i64 %126, 2147483647
  %128 = select i1 %127, i64 %126, i64 2147483647
  %129 = icmp sgt i64 %128, -2147483647
  %130 = select i1 %129, i64 %128, i64 -2147483647
  %131 = trunc i64 %130 to i32
  store i32 %131, i32* %29, align 4
  %132 = getelementptr inbounds %"class.(anonymous namespace)::SkDropShadowImageFilter", %"class.(anonymous namespace)::SkDropShadowImageFilter"* %0, i64 0, i32 6
  %133 = load i8, i8* %132, align 8, !range !8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %24
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %7, %struct.SkIRect* dereferenceable(16) %1) #11
  br label %136

136:                                              ; preds = %24, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %137 = load i64, i64* %78, align 8
  %138 = insertvalue { i64, i64 } undef, i64 %137, 0
  %139 = load i64, i64* %27, align 8
  %140 = insertvalue { i64, i64 } %138, i64 %139, 1
  ret { i64, i64 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint*, %class.sk_sp*) local_unnamed_addr #1

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.38*) local_unnamed_addr #1

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.38* sret, i32, i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, i32, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #1

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect: argument 0"}
!7 = distinct !{!7, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!11 = distinct !{!11, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect: argument 0"}
!14 = distinct !{!14, !"_ZN12_GLOBAL__N_123SkDropShadowImageFilter4MakeEffffjb5sk_spI13SkImageFilterEPK6SkRect"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!17 = distinct !{!17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!20 = distinct !{!20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!23 = distinct !{!23, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!26 = distinct !{!26, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
