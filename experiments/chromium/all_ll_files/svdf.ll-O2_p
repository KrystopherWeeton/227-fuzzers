; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/svdf.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/svdf.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteSVDFParams = type { i32, i32, i8 }
%"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }>
%struct.TfLiteAffineQuantization = type { %struct.TfLiteFloatArray*, %struct.TfLiteIntArray*, i32 }
%struct.TfLiteFloatArray = type { i32, [0 x float] }
%"class.tflite::CpuBackendContext" = type opaque
%"struct.Eigen::internal::evaluator" = type { %"struct.Eigen::internal::unary_evaluator" }
%"struct.Eigen::internal::unary_evaluator" = type { %"class.Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_tanh_op<float>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::IndexBased, float>::Data" }
%"class.Eigen::internal::unary_evaluator<Eigen::CwiseUnaryOp<Eigen::internal::scalar_tanh_op<float>, const Eigen::ArrayWrapper<Eigen::Map<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::IndexBased, float>::Data" = type { %"struct.Eigen::internal::evaluator.17" }
%"struct.Eigen::internal::evaluator.17" = type { %"struct.Eigen::internal::evaluator.18" }
%"struct.Eigen::internal::evaluator.18" = type { %"struct.Eigen::internal::unary_evaluator.19" }
%"struct.Eigen::internal::unary_evaluator.19" = type { %"struct.Eigen::internal::evaluator_wrapper_base" }
%"struct.Eigen::internal::evaluator_wrapper_base" = type { %"struct.Eigen::internal::evaluator.22" }
%"struct.Eigen::internal::evaluator.22" = type { %"struct.Eigen::internal::mapbase_evaluator" }
%"struct.Eigen::internal::mapbase_evaluator" = type { float*, %"class.Eigen::internal::variable_if_dynamic.4", %"class.Eigen::internal::variable_if_dynamic" }
%"class.Eigen::internal::variable_if_dynamic.4" = type { i8 }
%"class.Eigen::internal::variable_if_dynamic" = type { i64 }
%"class.Eigen::internal::generic_dense_assignment_kernel" = type { %"struct.Eigen::internal::evaluator.18"*, %"struct.Eigen::internal::evaluator"*, %"struct.Eigen::internal::assign_op"*, %"class.Eigen::ArrayWrapper"* }
%"struct.Eigen::internal::assign_op" = type { i8 }
%"class.Eigen::ArrayWrapper" = type { %"class.Eigen::Map" }
%"class.Eigen::Map" = type { %"class.Eigen::MapBase.base.5", %"class.Eigen::Stride", [5 x i8] }
%"class.Eigen::MapBase.base.5" = type { %"class.Eigen::MapBase.base" }
%"class.Eigen::MapBase.base" = type <{ float*, %"class.Eigen::internal::variable_if_dynamic", %"class.Eigen::internal::variable_if_dynamic.4" }>
%"class.Eigen::Stride" = type { %"class.Eigen::internal::variable_if_dynamic.6", %"class.Eigen::internal::variable_if_dynamic.6" }
%"class.Eigen::internal::variable_if_dynamic.6" = type { i8 }
%"class.Eigen::CwiseUnaryOp.25" = type { %"class.Eigen::ArrayWrapper", %"struct.Eigen::internal::scalar_logistic_op", [7 x i8] }
%"struct.Eigen::internal::scalar_logistic_op" = type { i8 }
%"struct.Eigen::EigenBase.16" = type { i8 }

$_ZN6tflite13reference_ops13EvalFloatSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_ = comdat any

$_ZN6tflite13reference_ops14EvalHybridSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_SB_SB_SB_Pb = comdat any

$_ZN6tflite13reference_ops15EvalIntegerSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_iiiiii = comdat any

$_ZN6tflite12tensor_utils23ApplyActivationToVectorEPKfi21TfLiteFusedActivationPf = comdat any

$_ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEEEENS3_INS_12CwiseUnaryOpINS0_14scalar_tanh_opIfEEKSB_EEEENS0_9assign_opIffEELi0EEELi3ELi0EE3runERSL_ = comdat any

$_ZN5Eigen8internal26call_dense_assignment_loopINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS_12CwiseUnaryOpINS0_18scalar_logistic_opIfEEKS9_EENS0_9assign_opIffEEEEvRT_RKT0_RKT1_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [61 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/svdf.cc\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"node->outputs->size\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"node->inputs->size\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.9 = private unnamed_addr constant [60 x i8] c"input->type == kTfLiteFloat32 || input->type == kTfLiteInt8\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"num_filters % rank\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"input->dims->data[1]\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"weights_feature->dims->data[1]\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"weights_time->dims->data[0]\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"num_filters\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"bias->dims->data[0]\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"num_units\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"NumDimensions(state)\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"SizeOfDimension(state, 0)\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"batch_size\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"SizeOfDimension(state, 1)\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"memory_size * num_filters\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"params->activation\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"kTfLiteActRelu\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Type %s not currently supported.\00", align 1
@_ZZN6tflite3ops7builtin13Register_SVDFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin4svdf4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin4svdf4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin4svdf7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin4svdf4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden nonnull i8* @_ZN6tflite3ops7builtin4svdf4InitEP13TfLiteContextPKcm(%struct.TfLiteContext*, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 28) #11
  %5 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 28, i1 false)
  %6 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %5, align 8
  %7 = bitcast i8* %4 to i32*
  %8 = tail call i32 %6(%struct.TfLiteContext* %0, i32 6, i32* nonnull %7) #12
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin4svdf4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #11
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin4svdf7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture) #0 {
  %3 = alloca [1 x i32], align 4
  %4 = alloca [1 x i32], align 4
  %5 = alloca [1 x i32], align 4
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %7 = bitcast i8** %6 to %struct.TfLiteSVDFParams**
  %8 = load %struct.TfLiteSVDFParams*, %struct.TfLiteSVDFParams** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %10 = bitcast i8** %9 to %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"**
  %11 = load %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"** %10, align 8
  %12 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %17, i32 1) #12
  br label %460

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %24 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %23, align 8
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 5
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %30 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %29, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %30(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %26, i32 5) #12
  br label %460

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %31, %35
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %31 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %57 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %56, align 8
  %58 = sext i32 %53 to i64
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 %58
  br label %60

60:                                               ; preds = %50, %55
  %61 = phi %struct.TfLiteTensor* [ %59, %55 ], [ null, %50 ]
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  switch i32 %63, label %64 [
    i32 1, label %67
    i32 9, label %67
  ]

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %66 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %65, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %66(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 92, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %460

67:                                               ; preds = %60, %60
  %68 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %8, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 1, i64 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  %77 = load i32, i32* %76, align 4
  %78 = srem i32 %77, %69
  %79 = sdiv i32 %77, %69
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %67
  %82 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %83 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %82, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %83(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i32 %78, i32 0) #12
  br label %460

84:                                               ; preds = %67
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 0, i32 2
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 1, i64 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %96 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %95, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %96(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0), i32 %90, i32 %92) #12
  br label %460

97:                                               ; preds = %84
  %98 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %77
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %103 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %102, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %103(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 104, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i32 %99, i32 %77) #12
  br label %460

104:                                              ; preds = %97
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %110 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %109, align 8
  %111 = sext i32 %106 to i64
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %110, i64 %111
  %113 = icmp eq %struct.TfLiteTensor* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %110, i64 %111, i32 2
  %116 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %115, align 8
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %116, i64 0, i32 1, i64 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, %79
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %122 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %121, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %122(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i32 %118, i32 %79) #12
  br label %460

123:                                              ; preds = %104, %114, %108
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 4
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %129 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %128, align 8
  %130 = sext i32 %125 to i64
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %129, i64 %130
  br label %132

132:                                              ; preds = %123, %127
  %133 = phi %struct.TfLiteTensor* [ %131, %127 ], [ null, %123 ]
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %139 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %138, align 8
  %140 = sext i32 %135 to i64
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %139, i64 %140
  br label %142

142:                                              ; preds = %132, %137
  %143 = phi %struct.TfLiteTensor* [ %141, %137 ], [ null, %132 ]
  %144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %133, i64 0, i32 2
  %145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %144, align 8
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %145, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 2
  br i1 %148, label %152, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %151 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %150, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %151(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 115, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i32 %147, i32 2) #12
  br label %460

152:                                              ; preds = %142
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %145, i64 0, i32 1, i64 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %73
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %158 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %157, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %158(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 %154, i32 %73) #12
  br label %460

159:                                              ; preds = %152
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %145, i64 0, i32 1, i64 1
  %161 = load i32, i32* %160, align 4
  %162 = mul nsw i32 %88, %77
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %167, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %166 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %165, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %166(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0), i32 %161, i32 %162) #12
  br label %460

167:                                              ; preds = %159
  %168 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 2) #12
  %169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %168, i64 0, i32 1, i64 0
  store i32 %73, i32* %169, align 4
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %168, i64 0, i32 1, i64 1
  store i32 %79, i32* %170, align 4
  %171 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %172 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %173 = tail call i32 %172(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %143, %struct.TfLiteIntArray* %168) #12
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %460

175:                                              ; preds = %167
  %176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  switch i32 %177, label %181 [
    i32 3, label %178
    i32 9, label %178
  ]

178:                                              ; preds = %175, %175
  %179 = load i32, i32* %62, align 8
  %180 = icmp eq i32 %179, 1
  br label %183

181:                                              ; preds = %175
  %182 = load i32, i32* %62, align 8
  br label %183

183:                                              ; preds = %181, %178
  %184 = phi i32 [ %182, %181 ], [ %179, %178 ]
  %185 = phi i1 [ false, %181 ], [ %180, %178 ]
  %186 = icmp eq i32 %184, 9
  %187 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %188 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %188) #12
  %189 = select i1 %186, i32 2, i32 1
  %190 = select i1 %185, i32 6, i32 %189
  %191 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %190) #12
  store %struct.TfLiteIntArray* %191, %struct.TfLiteIntArray** %187, align 8
  %192 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %191, i64 0, i32 1, i64 0
  store i32 %13, i32* %192, align 4
  %193 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 2) #12
  %194 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 0
  store i32 %73, i32* %194, align 4
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 1
  store i32 %77, i32* %195, align 4
  %196 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %205, label %200

200:                                              ; preds = %183
  %201 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %202 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %201, align 8
  %203 = sext i32 %198 to i64
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %202, i64 %203
  br label %205

205:                                              ; preds = %183, %200
  %206 = phi %struct.TfLiteTensor* [ %204, %200 ], [ null, %183 ]
  %207 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 0
  %208 = select i1 %186, i32 2, i32 1
  store i32 %208, i32* %207, align 8
  %209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 4
  store i32 2, i32* %209, align 8
  %210 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %211 = tail call i32 %210(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %206, %struct.TfLiteIntArray* %193) #12
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %460

213:                                              ; preds = %205
  br i1 %185, label %214, label %388

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 7
  store i8 1, i8* %215, align 4
  %216 = add nsw i32 %13, 1
  %217 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %217, i64 0, i32 1, i64 1
  store i32 %216, i32* %218, align 4
  %219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %219, i64 0, i32 1, i64 1
  %221 = load i32, i32* %220, align 4
  %222 = icmp slt i32 %221, 0
  br i1 %222, label %228, label %223

223:                                              ; preds = %214
  %224 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %225 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %224, align 8
  %226 = sext i32 %221 to i64
  %227 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %225, i64 %226
  br label %228

228:                                              ; preds = %214, %223
  %229 = phi %struct.TfLiteTensor* [ %227, %223 ], [ null, %214 ]
  %230 = load i32, i32* %176, align 8
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %229, i64 0, i32 0
  store i32 %230, i32* %231, align 8
  %232 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %229, i64 0, i32 4
  store i32 2, i32* %232, align 8
  %233 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %229, i64 0, i32 2
  %234 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %233, align 8
  %235 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %236 = tail call i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray* %234, %struct.TfLiteIntArray* %235) #12
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %246

238:                                              ; preds = %228
  %239 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %240 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %239) #12
  %241 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %242 = tail call i32 %241(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %229, %struct.TfLiteIntArray* %240) #12
  %243 = icmp eq i32 %242, 0
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i32
  br i1 %243, label %246, label %381

246:                                              ; preds = %228, %238
  %247 = add nsw i32 %13, 2
  %248 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %248, i64 0, i32 1, i64 2
  store i32 %247, i32* %249, align 4
  %250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 2
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %252, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %246
  %255 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %256 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %255, align 8
  %257 = sext i32 %252 to i64
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %256, i64 %257
  br label %259

259:                                              ; preds = %246, %254
  %260 = phi %struct.TfLiteTensor* [ %258, %254 ], [ null, %246 ]
  %261 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %260, i64 0, i32 0
  store i32 1, i32* %261, align 8
  %262 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %260, i64 0, i32 4
  store i32 2, i32* %262, align 8
  %263 = bitcast [1 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %263) #12
  %264 = getelementptr inbounds [1 x i32], [1 x i32]* %3, i64 0, i64 0
  store i32 %73, i32* %264, align 4
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %260, i64 0, i32 2
  %266 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %265, align 8
  %267 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %266, i32 1, i32* nonnull %264) #12
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %277

269:                                              ; preds = %259
  %270 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #12
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  store i32 %73, i32* %271, align 4
  %272 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %273 = call i32 %272(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %260, %struct.TfLiteIntArray* %270) #12
  %274 = icmp eq i32 %273, 0
  %275 = xor i1 %274, true
  %276 = zext i1 %275 to i32
  br i1 %274, label %277, label %378

277:                                              ; preds = %259, %269
  %278 = add nsw i32 %13, 3
  %279 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %280 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %279, i64 0, i32 1, i64 3
  store i32 %278, i32* %280, align 4
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 3
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %283, 0
  br i1 %284, label %290, label %285

285:                                              ; preds = %277
  %286 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %287 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %286, align 8
  %288 = sext i32 %283 to i64
  %289 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %287, i64 %288
  br label %290

290:                                              ; preds = %277, %285
  %291 = phi %struct.TfLiteTensor* [ %289, %285 ], [ null, %277 ]
  %292 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %291, i64 0, i32 0
  store i32 1, i32* %292, align 8
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %291, i64 0, i32 4
  store i32 3, i32* %293, align 8
  %294 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %291, i64 0, i32 2
  %295 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %294, align 8
  %296 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %297 = call i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray* %295, %struct.TfLiteIntArray* %296) #12
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %307

299:                                              ; preds = %290
  %300 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %301 = call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %300) #12
  %302 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %303 = call i32 %302(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %291, %struct.TfLiteIntArray* %301) #12
  %304 = icmp eq i32 %303, 0
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  br i1 %304, label %307, label %378

307:                                              ; preds = %290, %299
  %308 = add nsw i32 %13, 4
  %309 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %310 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %309, i64 0, i32 1, i64 4
  store i32 %308, i32* %310, align 4
  %311 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %312 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %311, i64 0, i32 1, i64 4
  %313 = load i32, i32* %312, align 4
  %314 = icmp slt i32 %313, 0
  br i1 %314, label %320, label %315

315:                                              ; preds = %307
  %316 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %317 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %316, align 8
  %318 = sext i32 %313 to i64
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %317, i64 %318
  br label %320

320:                                              ; preds = %307, %315
  %321 = phi %struct.TfLiteTensor* [ %319, %315 ], [ null, %307 ]
  %322 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %321, i64 0, i32 0
  store i32 1, i32* %322, align 8
  %323 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %321, i64 0, i32 4
  store i32 2, i32* %323, align 8
  %324 = bitcast [1 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %324) #12
  %325 = getelementptr inbounds [1 x i32], [1 x i32]* %4, i64 0, i64 0
  store i32 %73, i32* %325, align 4
  %326 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %321, i64 0, i32 2
  %327 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %326, align 8
  %328 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %327, i32 1, i32* nonnull %325) #12
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %339

330:                                              ; preds = %320
  %331 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #12
  %332 = load i32, i32* %325, align 4
  %333 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %331, i64 0, i32 1, i64 0
  store i32 %332, i32* %333, align 4
  %334 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %335 = call i32 %334(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %321, %struct.TfLiteIntArray* %331) #12
  %336 = icmp eq i32 %335, 0
  %337 = xor i1 %336, true
  %338 = zext i1 %337 to i32
  br i1 %336, label %339, label %375

339:                                              ; preds = %320, %330
  %340 = add nsw i32 %13, 5
  %341 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %342 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %341, i64 0, i32 1, i64 5
  store i32 %340, i32* %342, align 4
  %343 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %344 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %343, i64 0, i32 1, i64 5
  %345 = load i32, i32* %344, align 4
  %346 = icmp slt i32 %345, 0
  br i1 %346, label %352, label %347

347:                                              ; preds = %339
  %348 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %349 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %348, align 8
  %350 = sext i32 %345 to i64
  %351 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %349, i64 %350
  br label %352

352:                                              ; preds = %339, %347
  %353 = phi %struct.TfLiteTensor* [ %351, %347 ], [ null, %339 ]
  %354 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %353, i64 0, i32 0
  store i32 1, i32* %354, align 8
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %353, i64 0, i32 4
  store i32 3, i32* %355, align 8
  %356 = bitcast [1 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %356) #12
  %357 = getelementptr inbounds [1 x i32], [1 x i32]* %5, i64 0, i64 0
  store i32 %77, i32* %357, align 4
  %358 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %353, i64 0, i32 2
  %359 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %358, align 8
  %360 = call i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray* %359, i32 1, i32* nonnull %357) #12
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %371

362:                                              ; preds = %352
  %363 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #12
  %364 = load i32, i32* %357, align 4
  %365 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %363, i64 0, i32 1, i64 0
  store i32 %364, i32* %365, align 4
  %366 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %367 = call i32 %366(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %353, %struct.TfLiteIntArray* %363) #12
  %368 = icmp eq i32 %367, 0
  %369 = xor i1 %368, true
  %370 = zext i1 %369 to i32
  br i1 %368, label %371, label %372

371:                                              ; preds = %352, %362
  br label %372

372:                                              ; preds = %362, %371
  %373 = phi i32 [ 0, %371 ], [ %370, %362 ]
  %374 = phi i32 [ 0, %371 ], [ %367, %362 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %356) #12
  br label %375

375:                                              ; preds = %330, %372
  %376 = phi i32 [ %373, %372 ], [ %338, %330 ]
  %377 = phi i32 [ %374, %372 ], [ %335, %330 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %324) #12
  br label %378

378:                                              ; preds = %375, %299, %269
  %379 = phi i32 [ %276, %269 ], [ %376, %375 ], [ %306, %299 ]
  %380 = phi i32 [ %273, %269 ], [ %377, %375 ], [ %303, %299 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263) #12
  br label %381

381:                                              ; preds = %238, %378
  %382 = phi i32 [ %379, %378 ], [ %245, %238 ]
  %383 = phi i32 [ %380, %378 ], [ %242, %238 ]
  %384 = icmp ne i32 %382, 0
  %385 = xor i1 %186, true
  %386 = or i1 %384, %385
  %387 = select i1 %384, i32 %383, i32 0
  br i1 %386, label %460, label %391

388:                                              ; preds = %213
  br i1 %186, label %389, label %460

389:                                              ; preds = %388
  %390 = add nsw i32 %13, 1
  br label %391

391:                                              ; preds = %389, %381
  %392 = phi i32 [ %390, %389 ], [ %216, %381 ]
  %393 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 2) #12
  %394 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %393, i64 0, i32 1, i64 0
  store i32 %79, i32* %394, align 4
  %395 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %393, i64 0, i32 1, i64 1
  store i32 %73, i32* %395, align 4
  %396 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %397 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %396, i64 0, i32 1, i64 1
  store i32 %392, i32* %397, align 4
  %398 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8
  %399 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %398, i64 0, i32 1, i64 1
  %400 = load i32, i32* %399, align 4
  %401 = icmp slt i32 %400, 0
  br i1 %401, label %407, label %402

402:                                              ; preds = %391
  %403 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %404 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %403, align 8
  %405 = sext i32 %400 to i64
  %406 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %404, i64 %405
  br label %407

407:                                              ; preds = %391, %402
  %408 = phi %struct.TfLiteTensor* [ %406, %402 ], [ null, %391 ]
  %409 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %408, i64 0, i32 0
  store i32 2, i32* %409, align 8
  %410 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %408, i64 0, i32 4
  store i32 2, i32* %410, align 8
  %411 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %171, align 8
  %412 = call i32 %411(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %408, %struct.TfLiteIntArray* %393) #12
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %460

414:                                              ; preds = %407
  %415 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 12, i32 1
  %416 = bitcast i8** %415 to %struct.TfLiteAffineQuantization**
  %417 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %416, align 8
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 12, i32 1
  %419 = bitcast i8** %418 to %struct.TfLiteAffineQuantization**
  %420 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %419, align 8
  %421 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %133, i64 0, i32 12, i32 1
  %422 = bitcast i8** %421 to %struct.TfLiteAffineQuantization**
  %423 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %422, align 8
  %424 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 0, i32 12, i32 1
  %425 = bitcast i8** %424 to %struct.TfLiteAffineQuantization**
  %426 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %425, align 8
  %427 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %143, i64 0, i32 12, i32 1
  %428 = bitcast i8** %427 to %struct.TfLiteAffineQuantization**
  %429 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %428, align 8
  %430 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %417, i64 0, i32 0
  %431 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %430, align 8
  %432 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %431, i64 0, i32 1, i64 0
  %433 = load float, float* %432, align 4
  %434 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %420, i64 0, i32 0
  %435 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %434, align 8
  %436 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %435, i64 0, i32 1, i64 0
  %437 = load float, float* %436, align 4
  %438 = fmul float %433, %437
  %439 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %423, i64 0, i32 0
  %440 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %439, align 8
  %441 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %440, i64 0, i32 1, i64 0
  %442 = load float, float* %441, align 4
  %443 = fdiv float %438, %442
  %444 = fpext float %443 to double
  %445 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %426, i64 0, i32 0
  %446 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %445, align 8
  %447 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %446, i64 0, i32 1, i64 0
  %448 = load float, float* %447, align 4
  %449 = fmul float %442, %448
  %450 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %429, i64 0, i32 0
  %451 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %450, align 8
  %452 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %451, i64 0, i32 1, i64 0
  %453 = load float, float* %452, align 4
  %454 = fdiv float %449, %453
  %455 = fpext float %454 to double
  %456 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 3
  %457 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 4
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %444, i32* %456, i32* %457) #12
  %458 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 5
  %459 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %11, i64 0, i32 6
  call void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double %455, i32* %458, i32* %459) #12
  br label %460

460:                                              ; preds = %381, %388, %414, %407, %64, %94, %101, %149, %156, %164, %205, %167, %120, %81, %28, %19
  %461 = phi i32 [ 1, %19 ], [ 1, %28 ], [ 1, %64 ], [ 1, %81 ], [ 1, %94 ], [ 1, %101 ], [ 1, %120 ], [ 1, %149 ], [ 1, %156 ], [ 1, %164 ], [ %173, %167 ], [ %387, %381 ], [ %211, %205 ], [ %412, %407 ], [ 0, %414 ], [ 0, %388 ]
  ret i32 %461
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #4

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #4

declare i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray*, %struct.TfLiteIntArray*) local_unnamed_addr #4

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #4

declare i32 @TfLiteIntArrayEqualsArray(%struct.TfLiteIntArray*, i32, i32*) local_unnamed_addr #4

declare void @_ZN6tflite18QuantizeMultiplierEdPiS0_(double, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin4svdf4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteSVDFParams**
  %5 = load %struct.TfLiteSVDFParams*, %struct.TfLiteSVDFParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"**
  %8 = load %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %58 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %57, align 8
  %59 = sext i32 %54 to i64
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 %59
  br label %61

61:                                               ; preds = %49, %56
  %62 = phi %struct.TfLiteTensor* [ %60, %56 ], [ null, %49 ]
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 4
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %68 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %67, align 8
  %69 = sext i32 %64 to i64
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 %69
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %68, i64 %69, i32 11
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, %struct.TfLiteTensor* null, %struct.TfLiteTensor* %70
  br label %75

75:                                               ; preds = %61, %66
  %76 = phi %struct.TfLiteTensor* [ %74, %66 ], [ null, %61 ]
  %77 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %78 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %77, align 8
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %78, i64 0, i32 1, i64 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %84 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %83, align 8
  %85 = sext i32 %80 to i64
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %84, i64 %85
  br label %87

87:                                               ; preds = %75, %82
  %88 = phi %struct.TfLiteTensor* [ %86, %82 ], [ null, %75 ]
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  switch i32 %90, label %296 [
    i32 1, label %91
    i32 3, label %92
    i32 9, label %92
  ]

91:                                               ; preds = %87
  tail call void @_ZN6tflite13reference_ops13EvalFloatSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %40, %struct.TfLiteTensor* %50, %struct.TfLiteSVDFParams* %5, %struct.TfLiteTensor* %62, %struct.TfLiteTensor* %76, %struct.TfLiteTensor* %88)
  br label %300

92:                                               ; preds = %87, %87
  %93 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %256

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %102 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %101, align 8
  %103 = sext i32 %98 to i64
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %102, i64 %103
  br label %105

105:                                              ; preds = %96, %100
  %106 = phi %struct.TfLiteTensor* [ %104, %100 ], [ null, %96 ]
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %112 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %111, align 8
  %113 = sext i32 %108 to i64
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %112, i64 %113
  br label %115

115:                                              ; preds = %105, %110
  %116 = phi %struct.TfLiteTensor* [ %114, %110 ], [ null, %105 ]
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 3
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %125, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %122 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %121, align 8
  %123 = sext i32 %118 to i64
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %122, i64 %123
  br label %125

125:                                              ; preds = %115, %120
  %126 = phi %struct.TfLiteTensor* [ %124, %120 ], [ null, %115 ]
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 4
  %128 = load i32, i32* %127, align 4
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %132 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %131, align 8
  %133 = sext i32 %128 to i64
  %134 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %132, i64 %133
  br label %135

135:                                              ; preds = %125, %130
  %136 = phi %struct.TfLiteTensor* [ %134, %130 ], [ null, %125 ]
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 5
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %142 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %141, align 8
  %143 = sext i32 %138 to i64
  %144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %142, i64 %143
  br label %145

145:                                              ; preds = %135, %140
  %146 = phi %struct.TfLiteTensor* [ %144, %140 ], [ null, %135 ]
  %147 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 1
  %148 = load i8, i8* %147, align 4, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %254

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 3, i32 0
  %152 = load float, float* %151, align 8
  %153 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %156 = bitcast %union.TfLitePtrUnion* %155 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %150, %154
  %159 = phi i8* [ %157, %154 ], [ null, %150 ]
  %160 = icmp eq %struct.TfLiteTensor* %126, null
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %126, i64 0, i32 1
  %163 = bitcast %union.TfLitePtrUnion* %162 to float**
  %164 = load float*, float** %163, align 8
  br label %165

165:                                              ; preds = %158, %161
  %166 = phi float* [ %164, %161 ], [ null, %158 ]
  %167 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %126, i64 0, i32 2
  br label %168

168:                                              ; preds = %247, %165
  %169 = phi i64 [ %253, %247 ], [ 0, %165 ]
  %170 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %167, align 8
  %171 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %243

174:                                              ; preds = %168
  %175 = sext i32 %172 to i64
  %176 = add nsw i64 %175, -1
  %177 = and i64 %175, 7
  %178 = icmp ult i64 %176, 7
  br i1 %178, label %227, label %179

179:                                              ; preds = %174
  %180 = sub nsw i64 %175, %177
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i64 [ 0, %179 ], [ %224, %181 ]
  %183 = phi i64 [ 1, %179 ], [ %223, %181 ]
  %184 = phi i64 [ %180, %179 ], [ %225, %181 ]
  %185 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %182
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %183, %187
  %189 = or i64 %182, 1
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = mul nsw i64 %188, %192
  %194 = or i64 %182, 2
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %193, %197
  %199 = or i64 %182, 3
  %200 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %198, %202
  %204 = or i64 %182, 4
  %205 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = sext i32 %206 to i64
  %208 = mul nsw i64 %203, %207
  %209 = or i64 %182, 5
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = mul nsw i64 %208, %212
  %214 = or i64 %182, 6
  %215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = mul nsw i64 %213, %217
  %219 = or i64 %182, 7
  %220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = mul nsw i64 %218, %222
  %224 = add nuw nsw i64 %182, 8
  %225 = add i64 %184, -8
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %181

227:                                              ; preds = %181, %174
  %228 = phi i64 [ undef, %174 ], [ %223, %181 ]
  %229 = phi i64 [ 0, %174 ], [ %224, %181 ]
  %230 = phi i64 [ 1, %174 ], [ %223, %181 ]
  %231 = icmp eq i64 %177, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %227, %232
  %233 = phi i64 [ %240, %232 ], [ %229, %227 ]
  %234 = phi i64 [ %239, %232 ], [ %230, %227 ]
  %235 = phi i64 [ %241, %232 ], [ %177, %227 ]
  %236 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 %233
  %237 = load i32, i32* %236, align 4
  %238 = sext i32 %237 to i64
  %239 = mul nsw i64 %234, %238
  %240 = add nuw nsw i64 %233, 1
  %241 = add i64 %235, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %232, !llvm.loop !3

243:                                              ; preds = %227, %232, %168
  %244 = phi i64 [ 1, %168 ], [ %228, %227 ], [ %239, %232 ]
  %245 = icmp sgt i64 %244, %169
  br i1 %245, label %247, label %246

246:                                              ; preds = %243
  store i8 1, i8* %147, align 4
  br label %254

247:                                              ; preds = %243
  %248 = getelementptr inbounds i8, i8* %159, i64 %169
  %249 = load i8, i8* %248, align 1
  %250 = sitofp i8 %249 to float
  %251 = fmul float %152, %250
  %252 = getelementptr inbounds float, float* %166, i64 %169
  store float %251, float* %252, align 4
  %253 = add nuw nsw i64 %169, 1
  br label %168

254:                                              ; preds = %145, %246
  %255 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 7
  tail call void @_ZN6tflite13reference_ops14EvalHybridSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_SB_SB_SB_Pb(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %126, %struct.TfLiteTensor* %50, %struct.TfLiteSVDFParams* %5, %struct.TfLiteTensor* %62, %struct.TfLiteTensor* %116, %struct.TfLiteTensor* %106, %struct.TfLiteTensor* %76, %struct.TfLiteTensor* %88, %struct.TfLiteTensor* %136, %struct.TfLiteTensor* %146, i8* %255)
  br label %300

256:                                              ; preds = %92
  %257 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 0, i32 12, i32 1
  %258 = bitcast i8** %257 to %struct.TfLiteAffineQuantization**
  %259 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %258, align 8
  %260 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %88, i64 0, i32 12, i32 1
  %261 = bitcast i8** %260 to %struct.TfLiteAffineQuantization**
  %262 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %261, align 8
  %263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 1
  %264 = load i32, i32* %263, align 4
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %256
  %267 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %268 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %267, align 8
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %268, i64 %269
  br label %271

271:                                              ; preds = %256, %266
  %272 = phi %struct.TfLiteTensor* [ %270, %266 ], [ null, %256 ]
  %273 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %5, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %279, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %278 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %277, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %278(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i32 %274, i32 1) #12
  br label %300

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 3
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 4
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 5
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::svdf::(anonymous namespace)::OpData"* %8, i64 0, i32 6
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %259, i64 0, i32 1
  %289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %288, align 8
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 1, i64 0
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %262, i64 0, i32 1
  %293 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %292, align 8
  %294 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %293, i64 0, i32 1, i64 0
  %295 = load i32, i32* %294, align 4
  tail call void @_ZN6tflite13reference_ops15EvalIntegerSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_iiiiii(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %40, %struct.TfLiteTensor* %50, %struct.TfLiteSVDFParams* %5, %struct.TfLiteTensor* %76, %struct.TfLiteTensor* %88, %struct.TfLiteTensor* %62, %struct.TfLiteTensor* %272, i32 %281, i32 %283, i32 %285, i32 %287, i32 %291, i32 %295)
  br label %300

296:                                              ; preds = %87
  %297 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %298 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %297, align 8
  %299 = tail call i8* @TfLiteTypeGetName(i32 %90) #12
  tail call void (%struct.TfLiteContext*, i8*, ...) %298(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), i8* %299) #12
  br label %300

300:                                              ; preds = %276, %279, %296, %254, %91
  %301 = phi i32 [ 1, %296 ], [ 0, %254 ], [ 0, %91 ], [ 1, %276 ], [ 0, %279 ]
  ret i32 %301
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13EvalFloatSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteSVDFParams*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #5 comdat {
  %11 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = sdiv i32 %22, %12
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %25 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %24, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %25, i64 0, i32 1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %10
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %31 = bitcast %union.TfLitePtrUnion* %30 to float**
  %32 = load float*, float** %31, align 8
  br label %33

33:                                               ; preds = %10, %29
  %34 = phi float* [ %32, %29 ], [ null, %10 ]
  %35 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to float**
  %39 = load float*, float** %38, align 8
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi float* [ %39, %36 ], [ null, %33 ]
  %42 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %45 = bitcast %union.TfLitePtrUnion* %44 to float**
  %46 = load float*, float** %45, align 8
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi float* [ %46, %43 ], [ null, %40 ]
  %49 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %52 = bitcast %union.TfLitePtrUnion* %51 to float**
  %53 = load float*, float** %52, align 8
  %54 = bitcast float* %53 to i8*
  br label %55

55:                                               ; preds = %47, %50
  %56 = phi i8* [ %54, %50 ], [ null, %47 ]
  %57 = phi float* [ %53, %50 ], [ null, %47 ]
  %58 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %61 = bitcast %union.TfLitePtrUnion* %60 to float**
  %62 = load float*, float** %61, align 8
  %63 = bitcast float* %62 to i8*
  br label %64

64:                                               ; preds = %55, %59
  %65 = phi i8* [ %63, %59 ], [ null, %55 ]
  %66 = phi float* [ %62, %59 ], [ null, %55 ]
  %67 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %70 = bitcast %union.TfLitePtrUnion* %69 to float**
  %71 = load float*, float** %70, align 8
  %72 = bitcast float* %71 to i8*
  br label %73

73:                                               ; preds = %64, %68
  %74 = phi i8* [ %72, %68 ], [ null, %64 ]
  %75 = phi float* [ %71, %68 ], [ null, %64 ]
  %76 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %79 = bitcast %union.TfLitePtrUnion* %78 to float**
  %80 = load float*, float** %79, align 8
  %81 = bitcast float* %80 to i8*
  br label %82

82:                                               ; preds = %73, %77
  %83 = phi i8* [ %81, %77 ], [ null, %73 ]
  %84 = phi float* [ %80, %77 ], [ null, %73 ]
  %85 = mul i32 %22, %16
  %86 = mul i32 %85, %27
  %87 = sext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 2
  %89 = add nsw i64 %88, -4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds float, float* %66, i64 1
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %93, i64 %89, i1 false) #12
  br label %94

94:                                               ; preds = %82, %91
  %95 = icmp sgt i32 %85, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %94
  tail call void @_ZN6tflite12tensor_utils35MatrixBatchVectorMultiplyAccumulateEPKfiiS2_iPf(float* %41, i32 %22, i32 %18, float* %34, i32 %16, float* %75) #12
  br label %125

97:                                               ; preds = %94
  %98 = zext i32 %85 to i64
  %99 = shl nuw nsw i64 %98, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 %99, i1 false)
  tail call void @_ZN6tflite12tensor_utils35MatrixBatchVectorMultiplyAccumulateEPKfiiS2_iPf(float* %41, i32 %22, i32 %18, float* %34, i32 %16, float* %75) #12
  %100 = add i32 %27, -1
  %101 = zext i32 %85 to i64
  %102 = add nsw i64 %101, -1
  %103 = and i64 %101, 3
  %104 = icmp ult i64 %102, 3
  br i1 %104, label %107, label %105

105:                                              ; preds = %97
  %106 = sub nsw i64 %101, %103
  br label %215

107:                                              ; preds = %215, %97
  %108 = phi i64 [ 0, %97 ], [ %257, %215 ]
  %109 = icmp eq i64 %103, 0
  br i1 %109, label %125, label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %122, %110 ], [ %108, %107 ]
  %112 = phi i64 [ %123, %110 ], [ %103, %107 ]
  %113 = getelementptr inbounds float, float* %75, i64 %111
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = trunc i64 %111 to i32
  %117 = mul i32 %27, %116
  %118 = add i32 %100, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds float, float* %66, i64 %119
  %121 = bitcast float* %120 to i32*
  store i32 %115, i32* %121, align 4
  %122 = add nuw nsw i64 %111, 1
  %123 = add i64 %112, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %110, !llvm.loop !5

125:                                              ; preds = %107, %110, %96
  %126 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %16, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %125
  %130 = icmp sgt i32 %22, 0
  %131 = sext i32 %27 to i64
  %132 = zext i32 %22 to i64
  %133 = sext i32 %22 to i64
  %134 = zext i32 %16 to i64
  %135 = mul i32 %27, %22
  br label %138

136:                                              ; preds = %157, %125
  %137 = icmp eq float* %57, null
  br i1 %137, label %181, label %160

138:                                              ; preds = %157, %129
  %139 = phi i64 [ 0, %129 ], [ %158, %157 ]
  %140 = mul nsw i64 %139, %133
  %141 = getelementptr inbounds float, float* %75, i64 %140
  br i1 %130, label %142, label %157

142:                                              ; preds = %138
  %143 = trunc i64 %139 to i32
  %144 = mul i32 %135, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds float, float* %66, i64 %145
  br label %147

147:                                              ; preds = %147, %142
  %148 = phi i64 [ 0, %142 ], [ %155, %147 ]
  %149 = phi float* [ %48, %142 ], [ %153, %147 ]
  %150 = phi float* [ %146, %142 ], [ %154, %147 ]
  %151 = tail call float @_ZN6tflite12tensor_utils22VectorVectorDotProductEPKfS2_i(float* %149, float* %150, i32 %27) #12
  %152 = getelementptr inbounds float, float* %141, i64 %148
  store float %151, float* %152, align 4, !alias.scope !6, !noalias !9
  %153 = getelementptr inbounds float, float* %149, i64 %131
  %154 = getelementptr inbounds float, float* %150, i64 %131
  %155 = add nuw nsw i64 %148, 1
  %156 = icmp eq i64 %155, %132
  br i1 %156, label %157, label %147

157:                                              ; preds = %147, %138
  %158 = add nuw nsw i64 %139, 1
  %159 = icmp eq i64 %158, %134
  br i1 %159, label %136, label %138

160:                                              ; preds = %136
  br i1 %128, label %161, label %214

161:                                              ; preds = %160
  %162 = icmp eq i32 %23, 0
  %163 = sext i32 %23 to i64
  %164 = shl nuw nsw i64 %163, 2
  %165 = zext i32 %16 to i64
  %166 = and i64 %165, 1
  %167 = icmp eq i32 %16, 1
  br i1 %167, label %187, label %168

168:                                              ; preds = %161
  %169 = sub nsw i64 %165, %166
  br label %170

170:                                              ; preds = %260, %168
  %171 = phi i64 [ 0, %168 ], [ %261, %260 ]
  %172 = phi i64 [ %169, %168 ], [ %262, %260 ]
  br i1 %162, label %260, label %173

173:                                              ; preds = %170
  %174 = mul nsw i64 %171, %163
  %175 = getelementptr inbounds float, float* %84, i64 %174
  %176 = bitcast float* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* nonnull align 4 %56, i64 %164, i1 false) #12, !alias.scope !14, !noalias !15
  %177 = or i64 %171, 1
  %178 = mul nsw i64 %177, %163
  %179 = getelementptr inbounds float, float* %84, i64 %178
  %180 = bitcast float* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* nonnull align 4 %56, i64 %164, i1 false) #12, !alias.scope !14, !noalias !15
  br label %260

181:                                              ; preds = %136
  %182 = mul i32 %23, %16
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %195

184:                                              ; preds = %181
  %185 = zext i32 %182 to i64
  %186 = shl nuw nsw i64 %185, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 %186, i1 false) #12, !alias.scope !16, !noalias !17
  br label %195

187:                                              ; preds = %260, %161
  %188 = phi i64 [ 0, %161 ], [ %261, %260 ]
  %189 = icmp eq i64 %166, 0
  %190 = or i1 %189, %162
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = mul nsw i64 %188, %163
  %193 = getelementptr inbounds float, float* %84, i64 %192
  %194 = bitcast float* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* nonnull align 4 %56, i64 %164, i1 false) #12, !alias.scope !14, !noalias !15
  br label %195

195:                                              ; preds = %187, %191, %184, %181
  br i1 %128, label %196, label %214

196:                                              ; preds = %195
  %197 = sext i32 %22 to i64
  %198 = sext i32 %23 to i64
  %199 = zext i32 %16 to i64
  br label %200

200:                                              ; preds = %200, %196
  %201 = phi i64 [ 0, %196 ], [ %206, %200 ]
  %202 = mul nsw i64 %201, %198
  %203 = getelementptr inbounds float, float* %84, i64 %202
  %204 = mul nsw i64 %201, %197
  %205 = getelementptr inbounds float, float* %75, i64 %204
  tail call void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKfPfii(float* %205, float* %203, i32 %23, i32 %12) #12
  %206 = add nuw nsw i64 %201, 1
  %207 = icmp eq i64 %206, %199
  br i1 %207, label %208, label %200

208:                                              ; preds = %200, %208
  %209 = phi i64 [ %212, %208 ], [ 0, %200 ]
  %210 = mul nsw i64 %209, %198
  %211 = getelementptr inbounds float, float* %84, i64 %210
  tail call void @_ZN6tflite12tensor_utils23ApplyActivationToVectorEPKfi21TfLiteFusedActivationPf(float* %211, i32 %23, i32 %127, float* %211) #12
  %212 = add nuw nsw i64 %209, 1
  %213 = icmp eq i64 %212, %199
  br i1 %213, label %214, label %208

214:                                              ; preds = %208, %160, %195
  ret void

215:                                              ; preds = %215, %105
  %216 = phi i64 [ 0, %105 ], [ %257, %215 ]
  %217 = phi i64 [ %106, %105 ], [ %258, %215 ]
  %218 = getelementptr inbounds float, float* %75, i64 %216
  %219 = bitcast float* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = trunc i64 %216 to i32
  %222 = mul i32 %27, %221
  %223 = add i32 %100, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %66, i64 %224
  %226 = bitcast float* %225 to i32*
  store i32 %220, i32* %226, align 4
  %227 = or i64 %216, 1
  %228 = getelementptr inbounds float, float* %75, i64 %227
  %229 = bitcast float* %228 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = trunc i64 %227 to i32
  %232 = mul i32 %27, %231
  %233 = add i32 %100, %232
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %66, i64 %234
  %236 = bitcast float* %235 to i32*
  store i32 %230, i32* %236, align 4
  %237 = or i64 %216, 2
  %238 = getelementptr inbounds float, float* %75, i64 %237
  %239 = bitcast float* %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = trunc i64 %237 to i32
  %242 = mul i32 %27, %241
  %243 = add i32 %100, %242
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %66, i64 %244
  %246 = bitcast float* %245 to i32*
  store i32 %240, i32* %246, align 4
  %247 = or i64 %216, 3
  %248 = getelementptr inbounds float, float* %75, i64 %247
  %249 = bitcast float* %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = trunc i64 %247 to i32
  %252 = mul i32 %27, %251
  %253 = add i32 %100, %252
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %66, i64 %254
  %256 = bitcast float* %255 to i32*
  store i32 %250, i32* %256, align 4
  %257 = add nuw nsw i64 %216, 4
  %258 = add i64 %217, -4
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %107, label %215

260:                                              ; preds = %170, %173
  %261 = add nuw nsw i64 %171, 2
  %262 = add i64 %172, -2
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %187, label %170
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14EvalHybridSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_SB_SB_SB_Pb(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteSVDFParams*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i8*) local_unnamed_addr #5 comdat {
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %21 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %27 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %27, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = sdiv i32 %29, %19
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to float**
  %39 = load float*, float** %38, align 8
  br label %40

40:                                               ; preds = %15, %36
  %41 = phi float* [ %39, %36 ], [ null, %15 ]
  %42 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %45 = bitcast %union.TfLitePtrUnion* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i8* [ %46, %43 ], [ null, %40 ]
  %49 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %52 = bitcast %union.TfLitePtrUnion* %51 to float**
  %53 = load float*, float** %52, align 8
  br label %54

54:                                               ; preds = %47, %50
  %55 = phi float* [ %53, %50 ], [ null, %47 ]
  %56 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %59 = bitcast %union.TfLitePtrUnion* %58 to float**
  %60 = load float*, float** %59, align 8
  %61 = bitcast float* %60 to i8*
  br label %62

62:                                               ; preds = %54, %57
  %63 = phi i8* [ %61, %57 ], [ null, %54 ]
  %64 = phi float* [ %60, %57 ], [ null, %54 ]
  %65 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %68 = bitcast %union.TfLitePtrUnion* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %62, %66
  %71 = phi i8* [ %69, %66 ], [ null, %62 ]
  %72 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %75 = bitcast %union.TfLitePtrUnion* %74 to float**
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %70, %73
  %78 = phi float* [ %76, %73 ], [ null, %70 ]
  %79 = icmp eq %struct.TfLiteTensor* %10, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 1
  %82 = bitcast %union.TfLitePtrUnion* %81 to float**
  %83 = load float*, float** %82, align 8
  %84 = bitcast float* %83 to i8*
  br label %85

85:                                               ; preds = %77, %80
  %86 = phi i8* [ %84, %80 ], [ null, %77 ]
  %87 = phi float* [ %83, %80 ], [ null, %77 ]
  %88 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %91 = bitcast %union.TfLitePtrUnion* %90 to float**
  %92 = load float*, float** %91, align 8
  %93 = bitcast float* %92 to i32*
  br label %94

94:                                               ; preds = %85, %89
  %95 = phi i32* [ %93, %89 ], [ null, %85 ]
  %96 = phi float* [ %92, %89 ], [ null, %85 ]
  %97 = bitcast float* %96 to i8*
  %98 = icmp eq %struct.TfLiteTensor* %11, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %11, i64 0, i32 1
  %101 = bitcast %union.TfLitePtrUnion* %100 to float**
  %102 = load float*, float** %101, align 8
  %103 = bitcast float* %102 to i8*
  br label %104

104:                                              ; preds = %94, %99
  %105 = phi i8* [ %103, %99 ], [ null, %94 ]
  %106 = phi float* [ %102, %99 ], [ null, %94 ]
  %107 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 2
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = icmp ne i8 %108, 0
  %110 = icmp ne %struct.TfLiteTensor* %13, null
  %111 = and i1 %110, %109
  br i1 %111, label %112, label %121

112:                                              ; preds = %104
  %113 = icmp eq %struct.TfLiteTensor* %12, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 0, i32 1, i32 0
  %116 = load i32*, i32** %115, align 8
  br label %117

117:                                              ; preds = %112, %114
  %118 = phi i32* [ %116, %114 ], [ null, %112 ]
  %119 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 0, i32 1, i32 0
  %120 = load i32*, i32** %119, align 8
  br label %121

121:                                              ; preds = %117, %104
  %122 = phi i32* [ %118, %117 ], [ null, %104 ]
  %123 = phi i32* [ %120, %117 ], [ null, %104 ]
  %124 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 0
  %125 = load float, float* %124, align 8
  %126 = mul i32 %29, %23
  %127 = mul i32 %126, %34
  %128 = sext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 2
  %130 = add nsw i64 %129, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %121
  %133 = getelementptr inbounds float, float* %87, i64 1
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %134, i64 %130, i1 false) #12
  br label %135

135:                                              ; preds = %121, %132
  %136 = icmp sgt i32 %126, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %135
  %138 = zext i32 %126 to i64
  %139 = shl nuw nsw i64 %138, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 %139, i1 false)
  br label %140

140:                                              ; preds = %137, %135
  %141 = mul nsw i32 %25, %23
  %142 = tail call zeroext i1 @_ZN6tflite12tensor_utils12IsZeroVectorEPKfi(float* %41, i32 %141) #12
  br i1 %142, label %237, label %143

143:                                              ; preds = %140
  %144 = load i8, i8* %107, align 4, !range !2
  %145 = icmp eq i8 %144, 0
  %146 = icmp sgt i32 %23, 0
  br i1 %146, label %147, label %229

147:                                              ; preds = %143
  %148 = bitcast float* %16 to i8*
  %149 = bitcast float* %17 to i8*
  %150 = sext i32 %25 to i64
  %151 = zext i32 %23 to i64
  br label %152

152:                                              ; preds = %164, %147
  %153 = phi i64 [ 0, %147 ], [ %165, %164 ]
  %154 = mul nsw i64 %153, %150
  br i1 %145, label %160, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds float, float* %41, i64 %154
  %157 = getelementptr inbounds i8, i8* %71, i64 %154
  %158 = getelementptr inbounds float, float* %78, i64 %153
  %159 = getelementptr inbounds i32, i32* %122, i64 %153
  call void @_ZN6tflite12tensor_utils24AsymmetricQuantizeFloatsEPKfiPaPfPi(float* %156, i32 %25, i8* %157, float* %158, i32* %159) #12
  br label %164

160:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #12
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #12
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %161 = getelementptr inbounds float, float* %41, i64 %154
  %162 = getelementptr inbounds i8, i8* %71, i64 %154
  %163 = getelementptr inbounds float, float* %78, i64 %153
  call void @_ZN6tflite12tensor_utils23SymmetricQuantizeFloatsEPKfiPaPfS4_S4_(float* %161, i32 %25, i8* %162, float* nonnull %16, float* nonnull %17, float* %163) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #12
  br label %164

164:                                              ; preds = %160, %155
  %165 = add nuw nsw i64 %153, 1
  %166 = icmp eq i64 %165, %151
  br i1 %166, label %167, label %152

167:                                              ; preds = %164
  br i1 %146, label %168, label %229

168:                                              ; preds = %167
  %169 = zext i32 %23 to i64
  %170 = icmp ult i32 %23, 8
  br i1 %170, label %171, label %173

171:                                              ; preds = %227, %168
  %172 = phi i64 [ 0, %168 ], [ %174, %227 ]
  br label %230

173:                                              ; preds = %168
  %174 = and i64 %169, 4294967288
  %175 = insertelement <4 x float> undef, float %125, i32 0
  %176 = shufflevector <4 x float> %175, <4 x float> undef, <4 x i32> zeroinitializer
  %177 = insertelement <4 x float> undef, float %125, i32 0
  %178 = shufflevector <4 x float> %177, <4 x float> undef, <4 x i32> zeroinitializer
  %179 = add nsw i64 %174, -8
  %180 = lshr exact i64 %179, 3
  %181 = add nuw nsw i64 %180, 1
  %182 = and i64 %181, 1
  %183 = icmp eq i64 %179, 0
  br i1 %183, label %213, label %184

184:                                              ; preds = %173
  %185 = sub nuw nsw i64 %181, %182
  br label %186

186:                                              ; preds = %186, %184
  %187 = phi i64 [ 0, %184 ], [ %210, %186 ]
  %188 = phi i64 [ %185, %184 ], [ %211, %186 ]
  %189 = getelementptr inbounds float, float* %78, i64 %187
  %190 = bitcast float* %189 to <4 x float>*
  %191 = load <4 x float>, <4 x float>* %190, align 4
  %192 = getelementptr inbounds float, float* %189, i64 4
  %193 = bitcast float* %192 to <4 x float>*
  %194 = load <4 x float>, <4 x float>* %193, align 4
  %195 = fmul <4 x float> %176, %191
  %196 = fmul <4 x float> %178, %194
  %197 = bitcast float* %189 to <4 x float>*
  store <4 x float> %195, <4 x float>* %197, align 4
  %198 = bitcast float* %192 to <4 x float>*
  store <4 x float> %196, <4 x float>* %198, align 4
  %199 = or i64 %187, 8
  %200 = getelementptr inbounds float, float* %78, i64 %199
  %201 = bitcast float* %200 to <4 x float>*
  %202 = load <4 x float>, <4 x float>* %201, align 4
  %203 = getelementptr inbounds float, float* %200, i64 4
  %204 = bitcast float* %203 to <4 x float>*
  %205 = load <4 x float>, <4 x float>* %204, align 4
  %206 = fmul <4 x float> %176, %202
  %207 = fmul <4 x float> %178, %205
  %208 = bitcast float* %200 to <4 x float>*
  store <4 x float> %206, <4 x float>* %208, align 4
  %209 = bitcast float* %203 to <4 x float>*
  store <4 x float> %207, <4 x float>* %209, align 4
  %210 = add i64 %187, 16
  %211 = add i64 %188, -2
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %186, !llvm.loop !18

213:                                              ; preds = %186, %173
  %214 = phi i64 [ 0, %173 ], [ %210, %186 ]
  %215 = icmp eq i64 %182, 0
  br i1 %215, label %227, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds float, float* %78, i64 %214
  %218 = bitcast float* %217 to <4 x float>*
  %219 = load <4 x float>, <4 x float>* %218, align 4
  %220 = getelementptr inbounds float, float* %217, i64 4
  %221 = bitcast float* %220 to <4 x float>*
  %222 = load <4 x float>, <4 x float>* %221, align 4
  %223 = fmul <4 x float> %176, %219
  %224 = fmul <4 x float> %178, %222
  %225 = bitcast float* %217 to <4 x float>*
  store <4 x float> %223, <4 x float>* %225, align 4
  %226 = bitcast float* %220 to <4 x float>*
  store <4 x float> %224, <4 x float>* %226, align 4
  br label %227

227:                                              ; preds = %213, %216
  %228 = icmp eq i64 %174, %169
  br i1 %228, label %229, label %171

229:                                              ; preds = %230, %227, %143, %167
  call void @_ZN6tflite12tensor_utils35MatrixBatchVectorMultiplyAccumulateEPKaiiS2_PKfiPfS4_PKiPiS8_PbPNS_17CpuBackendContextE(i8* %48, i32 %29, i32 %25, i8* %71, float* %78, i32 %23, float* %96, float* null, i32* %122, i32* %95, i32* %123, i8* %14, %"class.tflite::CpuBackendContext"* null) #12
  br label %237

230:                                              ; preds = %171, %230
  %231 = phi i64 [ %235, %230 ], [ %172, %171 ]
  %232 = getelementptr inbounds float, float* %78, i64 %231
  %233 = load float, float* %232, align 4
  %234 = fmul float %125, %233
  store float %234, float* %232, align 4
  %235 = add nuw nsw i64 %231, 1
  %236 = icmp eq i64 %235, %169
  br i1 %236, label %229, label %230, !llvm.loop !20

237:                                              ; preds = %229, %140
  br i1 %136, label %238, label %264

238:                                              ; preds = %237
  %239 = add i32 %34, -1
  %240 = zext i32 %126 to i64
  %241 = add nsw i64 %240, -1
  %242 = and i64 %240, 3
  %243 = icmp ult i64 %241, 3
  br i1 %243, label %246, label %244

244:                                              ; preds = %238
  %245 = sub nsw i64 %240, %242
  br label %354

246:                                              ; preds = %354, %238
  %247 = phi i64 [ 0, %238 ], [ %396, %354 ]
  %248 = icmp eq i64 %242, 0
  br i1 %248, label %264, label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %261, %249 ], [ %247, %246 ]
  %251 = phi i64 [ %262, %249 ], [ %242, %246 ]
  %252 = getelementptr inbounds float, float* %96, i64 %250
  %253 = bitcast float* %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = trunc i64 %250 to i32
  %256 = mul i32 %34, %255
  %257 = add i32 %239, %256
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds float, float* %87, i64 %258
  %260 = bitcast float* %259 to i32*
  store i32 %254, i32* %260, align 4
  %261 = add nuw nsw i64 %250, 1
  %262 = add i64 %251, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %249, !llvm.loop !22

264:                                              ; preds = %246, %249, %237
  %265 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %23, 0
  br i1 %267, label %268, label %275

268:                                              ; preds = %264
  %269 = icmp sgt i32 %29, 0
  %270 = sext i32 %34 to i64
  %271 = zext i32 %29 to i64
  %272 = sext i32 %29 to i64
  %273 = zext i32 %23 to i64
  %274 = mul i32 %34, %29
  br label %277

275:                                              ; preds = %296, %264
  %276 = icmp eq float* %64, null
  br i1 %276, label %320, label %299

277:                                              ; preds = %296, %268
  %278 = phi i64 [ 0, %268 ], [ %297, %296 ]
  %279 = mul nsw i64 %278, %272
  %280 = getelementptr inbounds float, float* %96, i64 %279
  br i1 %269, label %281, label %296

281:                                              ; preds = %277
  %282 = trunc i64 %278 to i32
  %283 = mul i32 %274, %282
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds float, float* %87, i64 %284
  br label %286

286:                                              ; preds = %286, %281
  %287 = phi i64 [ 0, %281 ], [ %294, %286 ]
  %288 = phi float* [ %55, %281 ], [ %292, %286 ]
  %289 = phi float* [ %285, %281 ], [ %293, %286 ]
  %290 = call float @_ZN6tflite12tensor_utils22VectorVectorDotProductEPKfS2_i(float* %288, float* %289, i32 %34) #12
  %291 = getelementptr inbounds float, float* %280, i64 %287
  store float %290, float* %291, align 4, !alias.scope !23, !noalias !26
  %292 = getelementptr inbounds float, float* %288, i64 %270
  %293 = getelementptr inbounds float, float* %289, i64 %270
  %294 = add nuw nsw i64 %287, 1
  %295 = icmp eq i64 %294, %271
  br i1 %295, label %296, label %286

296:                                              ; preds = %286, %277
  %297 = add nuw nsw i64 %278, 1
  %298 = icmp eq i64 %297, %273
  br i1 %298, label %275, label %277

299:                                              ; preds = %275
  br i1 %267, label %300, label %353

300:                                              ; preds = %299
  %301 = icmp eq i32 %30, 0
  %302 = sext i32 %30 to i64
  %303 = shl nuw nsw i64 %302, 2
  %304 = zext i32 %23 to i64
  %305 = and i64 %304, 1
  %306 = icmp eq i32 %23, 1
  br i1 %306, label %326, label %307

307:                                              ; preds = %300
  %308 = sub nsw i64 %304, %305
  br label %309

309:                                              ; preds = %399, %307
  %310 = phi i64 [ 0, %307 ], [ %400, %399 ]
  %311 = phi i64 [ %308, %307 ], [ %401, %399 ]
  br i1 %301, label %399, label %312

312:                                              ; preds = %309
  %313 = mul nsw i64 %310, %302
  %314 = getelementptr inbounds float, float* %106, i64 %313
  %315 = bitcast float* %314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %315, i8* nonnull align 4 %63, i64 %303, i1 false) #12, !alias.scope !31, !noalias !32
  %316 = or i64 %310, 1
  %317 = mul nsw i64 %316, %302
  %318 = getelementptr inbounds float, float* %106, i64 %317
  %319 = bitcast float* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %319, i8* nonnull align 4 %63, i64 %303, i1 false) #12, !alias.scope !31, !noalias !32
  br label %399

320:                                              ; preds = %275
  %321 = mul i32 %30, %23
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %323, label %334

323:                                              ; preds = %320
  %324 = zext i32 %321 to i64
  %325 = shl nuw nsw i64 %324, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 %325, i1 false) #12, !alias.scope !33, !noalias !34
  br label %334

326:                                              ; preds = %399, %300
  %327 = phi i64 [ 0, %300 ], [ %400, %399 ]
  %328 = icmp eq i64 %305, 0
  %329 = or i1 %328, %301
  br i1 %329, label %334, label %330

330:                                              ; preds = %326
  %331 = mul nsw i64 %327, %302
  %332 = getelementptr inbounds float, float* %106, i64 %331
  %333 = bitcast float* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %333, i8* nonnull align 4 %63, i64 %303, i1 false) #12, !alias.scope !31, !noalias !32
  br label %334

334:                                              ; preds = %326, %330, %323, %320
  br i1 %267, label %335, label %353

335:                                              ; preds = %334
  %336 = sext i32 %29 to i64
  %337 = sext i32 %30 to i64
  %338 = zext i32 %23 to i64
  br label %339

339:                                              ; preds = %339, %335
  %340 = phi i64 [ 0, %335 ], [ %345, %339 ]
  %341 = mul nsw i64 %340, %337
  %342 = getelementptr inbounds float, float* %106, i64 %341
  %343 = mul nsw i64 %340, %336
  %344 = getelementptr inbounds float, float* %96, i64 %343
  call void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKfPfii(float* %344, float* %342, i32 %30, i32 %19) #12
  %345 = add nuw nsw i64 %340, 1
  %346 = icmp eq i64 %345, %338
  br i1 %346, label %347, label %339

347:                                              ; preds = %339, %347
  %348 = phi i64 [ %351, %347 ], [ 0, %339 ]
  %349 = mul nsw i64 %348, %337
  %350 = getelementptr inbounds float, float* %106, i64 %349
  call void @_ZN6tflite12tensor_utils23ApplyActivationToVectorEPKfi21TfLiteFusedActivationPf(float* %350, i32 %30, i32 %266, float* %350) #12
  %351 = add nuw nsw i64 %348, 1
  %352 = icmp eq i64 %351, %338
  br i1 %352, label %353, label %347

353:                                              ; preds = %347, %299, %334
  ret void

354:                                              ; preds = %354, %244
  %355 = phi i64 [ 0, %244 ], [ %396, %354 ]
  %356 = phi i64 [ %245, %244 ], [ %397, %354 ]
  %357 = getelementptr inbounds float, float* %96, i64 %355
  %358 = bitcast float* %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = trunc i64 %355 to i32
  %361 = mul i32 %34, %360
  %362 = add i32 %239, %361
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds float, float* %87, i64 %363
  %365 = bitcast float* %364 to i32*
  store i32 %359, i32* %365, align 4
  %366 = or i64 %355, 1
  %367 = getelementptr inbounds float, float* %96, i64 %366
  %368 = bitcast float* %367 to i32*
  %369 = load i32, i32* %368, align 4
  %370 = trunc i64 %366 to i32
  %371 = mul i32 %34, %370
  %372 = add i32 %239, %371
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds float, float* %87, i64 %373
  %375 = bitcast float* %374 to i32*
  store i32 %369, i32* %375, align 4
  %376 = or i64 %355, 2
  %377 = getelementptr inbounds float, float* %96, i64 %376
  %378 = bitcast float* %377 to i32*
  %379 = load i32, i32* %378, align 4
  %380 = trunc i64 %376 to i32
  %381 = mul i32 %34, %380
  %382 = add i32 %239, %381
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds float, float* %87, i64 %383
  %385 = bitcast float* %384 to i32*
  store i32 %379, i32* %385, align 4
  %386 = or i64 %355, 3
  %387 = getelementptr inbounds float, float* %96, i64 %386
  %388 = bitcast float* %387 to i32*
  %389 = load i32, i32* %388, align 4
  %390 = trunc i64 %386 to i32
  %391 = mul i32 %34, %390
  %392 = add i32 %239, %391
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds float, float* %87, i64 %393
  %395 = bitcast float* %394 to i32*
  store i32 %389, i32* %395, align 4
  %396 = add nuw nsw i64 %355, 4
  %397 = add i64 %356, -4
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %246, label %354

399:                                              ; preds = %309, %312
  %400 = add nuw nsw i64 %310, 2
  %401 = add i64 %311, -2
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %326, label %309
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops15EvalIntegerSVDFEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS7_S7_S7_PK16TfLiteSVDFParamsPS5_SB_SB_SB_iiiiii(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteSVDFParams*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #5 comdat {
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.TfLiteSVDFParams, %struct.TfLiteSVDFParams* %6, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %22 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %21, align 8
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %28 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %27, align 8
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = sdiv i32 %30, %20
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %33 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %32, align 8
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %33, i64 0, i32 1, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %17
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %39 = bitcast %union.TfLitePtrUnion* %38 to i16**
  %40 = load i16*, i16** %39, align 8
  %41 = bitcast i16* %40 to i8*
  br label %42

42:                                               ; preds = %17, %37
  %43 = phi i8* [ %41, %37 ], [ null, %17 ]
  %44 = phi i16* [ %40, %37 ], [ null, %17 ]
  %45 = mul i32 %35, %30
  %46 = mul i32 %45, %24
  %47 = sext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 1
  %49 = add nsw i64 %48, -2
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds i16, i16* %44, i64 1
  %53 = bitcast i16* %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %43, i8* align 2 %53, i64 %49, i1 false) #12
  br label %54

54:                                               ; preds = %42, %51
  %55 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %58 = bitcast %union.TfLitePtrUnion* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %54, %56
  %61 = phi i8* [ %59, %56 ], [ null, %54 ]
  %62 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %65 = bitcast %union.TfLitePtrUnion* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %60, %63
  %68 = phi i8* [ %66, %63 ], [ null, %60 ]
  %69 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store i32 -32768, i32* %18, align 4
  %70 = icmp sgt i32 %24, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  br label %221

72:                                               ; preds = %67
  %73 = add nsw i32 %35, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i16, i16* %44, i64 %74
  %76 = icmp sgt i32 %30, 0
  %77 = icmp sgt i32 %26, 0
  %78 = icmp sgt i32 %12, 0
  %79 = sub nsw i32 0, %12
  %80 = select i1 %78, i32 0, i32 %79
  %81 = shl i32 1, %12
  %82 = select i1 %78, i32 %81, i32 1
  %83 = sext i32 %11 to i64
  %84 = icmp eq i32 %11, -2147483648
  %85 = zext i32 %80 to i64
  %86 = shl nsw i64 -1, %85
  %87 = trunc i64 %86 to i32
  %88 = xor i32 %87, -1
  %89 = ashr i32 %88, 1
  %90 = sext i32 %35 to i64
  %91 = sext i32 %26 to i64
  %92 = zext i32 %24 to i64
  %93 = add i32 %26, -1
  %94 = zext i32 %93 to i64
  %95 = add nuw nsw i64 %94, 1
  %96 = icmp ult i64 %95, 8
  %97 = and i64 %95, 8589934584
  %98 = trunc i64 %97 to i32
  %99 = insertelement <4 x i32> undef, i32 %15, i32 0
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> zeroinitializer
  %101 = insertelement <4 x i32> undef, i32 %15, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = icmp eq i64 %95, %97
  br label %104

104:                                              ; preds = %120, %72
  %105 = phi i64 [ 0, %72 ], [ %122, %120 ]
  %106 = phi i16* [ %75, %72 ], [ %121, %120 ]
  br i1 %76, label %107, label %120

107:                                              ; preds = %104
  %108 = mul nsw i64 %105, %91
  %109 = getelementptr inbounds i8, i8* %61, i64 %108
  %110 = getelementptr i8, i8* %109, i64 %97
  br label %124

111:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  br i1 %70, label %112, label %221

112:                                              ; preds = %111
  %113 = icmp eq %struct.TfLiteTensor* %9, null
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %115 = icmp eq %struct.TfLiteTensor* %4, null
  %116 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %117 = bitcast %union.TfLitePtrUnion* %116 to i16**
  %118 = sext i32 %30 to i64
  %119 = zext i32 %24 to i64
  br label %231

120:                                              ; preds = %187, %104
  %121 = phi i16* [ %106, %104 ], [ %202, %187 ]
  %122 = add nuw nsw i64 %105, 1
  %123 = icmp eq i64 %122, %92
  br i1 %123, label %111, label %104

124:                                              ; preds = %187, %107
  %125 = phi i32 [ 0, %107 ], [ %203, %187 ]
  %126 = phi i8* [ %68, %107 ], [ %173, %187 ]
  %127 = phi i16* [ %106, %107 ], [ %202, %187 ]
  br i1 %77, label %128, label %171

128:                                              ; preds = %124
  br i1 %96, label %129, label %134

129:                                              ; preds = %164, %128
  %130 = phi i32 [ 0, %128 ], [ %170, %164 ]
  %131 = phi i32 [ 0, %128 ], [ %98, %164 ]
  %132 = phi i8* [ %109, %128 ], [ %110, %164 ]
  %133 = phi i8* [ %126, %128 ], [ %135, %164 ]
  br label %205

134:                                              ; preds = %128
  %135 = getelementptr i8, i8* %126, i64 %97
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %162, %136 ]
  %138 = phi <4 x i32> [ zeroinitializer, %134 ], [ %160, %136 ]
  %139 = phi <4 x i32> [ zeroinitializer, %134 ], [ %161, %136 ]
  %140 = getelementptr i8, i8* %109, i64 %137
  %141 = getelementptr i8, i8* %126, i64 %137
  %142 = bitcast i8* %141 to <4 x i8>*
  %143 = load <4 x i8>, <4 x i8>* %142, align 1
  %144 = getelementptr i8, i8* %141, i64 4
  %145 = bitcast i8* %144 to <4 x i8>*
  %146 = load <4 x i8>, <4 x i8>* %145, align 1
  %147 = sext <4 x i8> %143 to <4 x i32>
  %148 = sext <4 x i8> %146 to <4 x i32>
  %149 = bitcast i8* %140 to <4 x i8>*
  %150 = load <4 x i8>, <4 x i8>* %149, align 1
  %151 = getelementptr i8, i8* %140, i64 4
  %152 = bitcast i8* %151 to <4 x i8>*
  %153 = load <4 x i8>, <4 x i8>* %152, align 1
  %154 = sext <4 x i8> %150 to <4 x i32>
  %155 = sext <4 x i8> %153 to <4 x i32>
  %156 = sub nsw <4 x i32> %154, %100
  %157 = sub nsw <4 x i32> %155, %102
  %158 = mul nsw <4 x i32> %156, %147
  %159 = mul nsw <4 x i32> %157, %148
  %160 = add nsw <4 x i32> %158, %138
  %161 = add nsw <4 x i32> %159, %139
  %162 = add i64 %137, 8
  %163 = icmp eq i64 %162, %97
  br i1 %163, label %164, label %136, !llvm.loop !35

164:                                              ; preds = %136
  %165 = add <4 x i32> %161, %160
  %166 = shufflevector <4 x i32> %165, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %167 = add <4 x i32> %165, %166
  %168 = shufflevector <4 x i32> %167, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %169 = add <4 x i32> %167, %168
  %170 = extractelement <4 x i32> %169, i32 0
  br i1 %103, label %171, label %129

171:                                              ; preds = %205, %164, %124
  %172 = phi i32 [ 0, %124 ], [ %170, %164 ], [ %218, %205 ]
  %173 = phi i8* [ %126, %124 ], [ %135, %164 ], [ %210, %205 ]
  %174 = mul nsw i32 %172, %82
  %175 = icmp eq i32 %174, %11
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  %177 = sext i32 %174 to i64
  br label %179

178:                                              ; preds = %171
  br i1 %84, label %187, label %179

179:                                              ; preds = %178, %176
  %180 = phi i64 [ %177, %176 ], [ %83, %178 ]
  %181 = mul nsw i64 %180, %83
  %182 = icmp sgt i64 %181, -1
  %183 = select i1 %182, i64 1073741824, i64 -1073741823
  %184 = add nsw i64 %183, %181
  %185 = sdiv i64 %184, 2147483648
  %186 = trunc i64 %185 to i32
  br label %187

187:                                              ; preds = %178, %179
  %188 = phi i32 [ %186, %179 ], [ 2147483647, %178 ]
  %189 = and i32 %188, %88
  %190 = lshr i32 %188, 31
  %191 = add nsw i32 %190, %89
  %192 = ashr i32 %188, %80
  %193 = icmp sgt i32 %189, %191
  %194 = zext i1 %193 to i32
  %195 = add nsw i32 %192, %194
  %196 = load i32, i32* %18, align 4
  %197 = icmp slt i32 %196, %195
  %198 = select i1 %197, i32 %195, i32 %196
  %199 = icmp slt i32 %198, 32767
  %200 = select i1 %199, i32 %198, i32 32767
  %201 = trunc i32 %200 to i16
  store i16 %201, i16* %127, align 2
  %202 = getelementptr inbounds i16, i16* %127, i64 %90
  %203 = add nuw nsw i32 %125, 1
  %204 = icmp eq i32 %203, %30
  br i1 %204, label %120, label %124

205:                                              ; preds = %129, %205
  %206 = phi i32 [ %218, %205 ], [ %130, %129 ]
  %207 = phi i32 [ %219, %205 ], [ %131, %129 ]
  %208 = phi i8* [ %213, %205 ], [ %132, %129 ]
  %209 = phi i8* [ %210, %205 ], [ %133, %129 ]
  %210 = getelementptr inbounds i8, i8* %209, i64 1
  %211 = load i8, i8* %209, align 1
  %212 = sext i8 %211 to i32
  %213 = getelementptr inbounds i8, i8* %208, i64 1
  %214 = load i8, i8* %208, align 1
  %215 = sext i8 %214 to i32
  %216 = sub nsw i32 %215, %15
  %217 = mul nsw i32 %216, %212
  %218 = add nsw i32 %217, %206
  %219 = add nuw nsw i32 %207, 1
  %220 = icmp eq i32 %219, %26
  br i1 %220, label %171, label %205, !llvm.loop !36

221:                                              ; preds = %245, %71, %111
  %222 = icmp eq %struct.TfLiteTensor* %10, null
  br i1 %222, label %227, label %223

223:                                              ; preds = %221
  %224 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 1, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = bitcast i32* %225 to i8*
  br label %227

227:                                              ; preds = %221, %223
  %228 = phi i8* [ %226, %223 ], [ null, %221 ]
  %229 = phi i32* [ %225, %223 ], [ null, %221 ]
  %230 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %230, label %282, label %249

231:                                              ; preds = %245, %112
  %232 = phi i64 [ 0, %112 ], [ %247, %245 ]
  %233 = trunc i64 %232 to i32
  %234 = mul i32 %45, %233
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i16, i16* %44, i64 %235
  br i1 %113, label %239, label %237

237:                                              ; preds = %231
  %238 = load i32*, i32** %114, align 8
  br label %239

239:                                              ; preds = %231, %237
  %240 = phi i32* [ %238, %237 ], [ null, %231 ]
  %241 = mul nsw i64 %232, %118
  %242 = getelementptr inbounds i32, i32* %240, i64 %241
  br i1 %115, label %245, label %243

243:                                              ; preds = %239
  %244 = load i16*, i16** %117, align 8
  br label %245

245:                                              ; preds = %239, %243
  %246 = phi i16* [ %244, %243 ], [ null, %239 ]
  tail call void @_ZN6tflite12tensor_utils32BatchVectorBatchVectorDotProductEPKsS2_iiPi(i16* %246, i16* %236, i32 %35, i32 %30, i32* %242) #12
  %247 = add nuw nsw i64 %232, 1
  %248 = icmp eq i64 %247, %119
  br i1 %248, label %221, label %231

249:                                              ; preds = %227
  br i1 %70, label %250, label %309

250:                                              ; preds = %249
  %251 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %252 = bitcast i32** %251 to i8**
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i32 %31, 0
  %255 = sext i32 %31 to i64
  %256 = shl nuw nsw i64 %255, 2
  %257 = zext i32 %24 to i64
  %258 = add nsw i64 %257, -1
  %259 = and i64 %257, 3
  %260 = icmp ult i64 %258, 3
  br i1 %260, label %288, label %261

261:                                              ; preds = %250
  %262 = sub nsw i64 %257, %259
  br label %263

263:                                              ; preds = %381, %261
  %264 = phi i64 [ 0, %261 ], [ %382, %381 ]
  %265 = phi i64 [ %262, %261 ], [ %383, %381 ]
  br i1 %254, label %381, label %266

266:                                              ; preds = %263
  %267 = mul nsw i64 %264, %255
  %268 = getelementptr inbounds i32, i32* %229, i64 %267
  %269 = bitcast i32* %268 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %269, i8* align 4 %253, i64 %256, i1 false) #12
  %270 = or i64 %264, 1
  %271 = mul nsw i64 %270, %255
  %272 = getelementptr inbounds i32, i32* %229, i64 %271
  %273 = bitcast i32* %272 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %273, i8* align 4 %253, i64 %256, i1 false) #12
  %274 = or i64 %264, 2
  %275 = mul nsw i64 %274, %255
  %276 = getelementptr inbounds i32, i32* %229, i64 %275
  %277 = bitcast i32* %276 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %277, i8* align 4 %253, i64 %256, i1 false) #12
  %278 = or i64 %264, 3
  %279 = mul nsw i64 %278, %255
  %280 = getelementptr inbounds i32, i32* %229, i64 %279
  %281 = bitcast i32* %280 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %253, i64 %256, i1 false) #12
  br label %381

282:                                              ; preds = %227
  %283 = mul i32 %31, %24
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %302

285:                                              ; preds = %282
  %286 = zext i32 %283 to i64
  %287 = shl nuw nsw i64 %286, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %228, i8 0, i64 %287, i1 false)
  br label %302

288:                                              ; preds = %381, %250
  %289 = phi i64 [ 0, %250 ], [ %382, %381 ]
  %290 = icmp eq i64 %259, 0
  br i1 %290, label %302, label %291

291:                                              ; preds = %288, %298
  %292 = phi i64 [ %299, %298 ], [ %289, %288 ]
  %293 = phi i64 [ %300, %298 ], [ %259, %288 ]
  br i1 %254, label %298, label %294

294:                                              ; preds = %291
  %295 = mul nsw i64 %292, %255
  %296 = getelementptr inbounds i32, i32* %229, i64 %295
  %297 = bitcast i32* %296 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %297, i8* align 4 %253, i64 %256, i1 false) #12
  br label %298

298:                                              ; preds = %294, %291
  %299 = add nuw nsw i64 %292, 1
  %300 = add i64 %293, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %291, !llvm.loop !37

302:                                              ; preds = %288, %298, %285, %282
  br i1 %70, label %303, label %309

303:                                              ; preds = %302
  %304 = icmp eq %struct.TfLiteTensor* %9, null
  %305 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %306 = sext i32 %30 to i64
  %307 = sext i32 %31 to i64
  %308 = zext i32 %24 to i64
  br label %329

309:                                              ; preds = %335, %249, %302
  %310 = mul i32 %31, %24
  %311 = icmp sgt i32 %310, 0
  br i1 %311, label %312, label %341

312:                                              ; preds = %309
  %313 = icmp sgt i32 %14, 0
  %314 = sub nsw i32 0, %14
  %315 = select i1 %313, i32 0, i32 %314
  %316 = shl i32 1, %14
  %317 = select i1 %313, i32 %316, i32 1
  %318 = sext i32 %13 to i64
  %319 = icmp eq i32 %13, -2147483648
  %320 = zext i32 %315 to i64
  %321 = shl nsw i64 -1, %320
  %322 = trunc i64 %321 to i32
  %323 = xor i32 %322, -1
  %324 = ashr i32 %323, 1
  %325 = icmp eq %struct.TfLiteTensor* %8, null
  %326 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %327 = bitcast %union.TfLitePtrUnion* %326 to i8**
  %328 = zext i32 %310 to i64
  br label %342

329:                                              ; preds = %335, %303
  %330 = phi i64 [ 0, %303 ], [ %339, %335 ]
  %331 = mul nsw i64 %330, %307
  %332 = getelementptr inbounds i32, i32* %229, i64 %331
  br i1 %304, label %335, label %333

333:                                              ; preds = %329
  %334 = load i32*, i32** %305, align 8
  br label %335

335:                                              ; preds = %329, %333
  %336 = phi i32* [ %334, %333 ], [ null, %329 ]
  %337 = mul nsw i64 %330, %306
  %338 = getelementptr inbounds i32, i32* %336, i64 %337
  tail call void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKiPiii(i32* %338, i32* %332, i32 %31, i32 %20) #12
  %339 = add nuw nsw i64 %330, 1
  %340 = icmp eq i64 %339, %308
  br i1 %340, label %309, label %329

341:                                              ; preds = %376, %309
  ret void

342:                                              ; preds = %376, %312
  %343 = phi i64 [ 0, %312 ], [ %379, %376 ]
  %344 = getelementptr inbounds i32, i32* %229, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = mul nsw i32 %345, %317
  %347 = icmp eq i32 %346, %13
  br i1 %347, label %350, label %348

348:                                              ; preds = %342
  %349 = sext i32 %346 to i64
  br label %351

350:                                              ; preds = %342
  br i1 %319, label %359, label %351

351:                                              ; preds = %350, %348
  %352 = phi i64 [ %349, %348 ], [ %318, %350 ]
  %353 = mul nsw i64 %352, %318
  %354 = icmp sgt i64 %353, -1
  %355 = select i1 %354, i64 1073741824, i64 -1073741823
  %356 = add nsw i64 %355, %353
  %357 = sdiv i64 %356, 2147483648
  %358 = trunc i64 %357 to i32
  br label %359

359:                                              ; preds = %350, %351
  %360 = phi i32 [ %358, %351 ], [ 2147483647, %350 ]
  %361 = and i32 %360, %323
  %362 = lshr i32 %360, 31
  %363 = add nsw i32 %362, %324
  %364 = ashr i32 %360, %315
  %365 = icmp sgt i32 %361, %363
  %366 = zext i1 %365 to i32
  %367 = add i32 %364, %16
  %368 = add i32 %367, %366
  %369 = icmp sgt i32 %368, -128
  %370 = select i1 %369, i32 %368, i32 -128
  %371 = icmp slt i32 %370, 127
  %372 = select i1 %371, i32 %370, i32 127
  %373 = trunc i32 %372 to i8
  br i1 %325, label %376, label %374

374:                                              ; preds = %359
  %375 = load i8*, i8** %327, align 8
  br label %376

376:                                              ; preds = %359, %374
  %377 = phi i8* [ %375, %374 ], [ null, %359 ]
  %378 = getelementptr inbounds i8, i8* %377, i64 %343
  store i8 %373, i8* %378, align 1
  %379 = add nuw nsw i64 %343, 1
  %380 = icmp eq i64 %379, %328
  br i1 %380, label %341, label %342

381:                                              ; preds = %263, %266
  %382 = add nuw nsw i64 %264, 4
  %383 = add i64 %265, -4
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %288, label %263
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin13Register_SVDFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin13Register_SVDFEvE1r to %struct.TfLiteRegistration*)
}

declare void @_ZN6tflite12tensor_utils35MatrixBatchVectorMultiplyAccumulateEPKfiiS2_iPf(float*, i32, i32, float*, i32, float*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKfPfii(float*, float*, i32, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite12tensor_utils23ApplyActivationToVectorEPKfi21TfLiteFusedActivationPf(float* noalias, i32, i32, float* noalias) local_unnamed_addr #5 comdat {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"struct.Eigen::internal::evaluator", align 8
  %8 = alloca %"struct.Eigen::internal::evaluator.18", align 8
  %9 = alloca %"class.Eigen::internal::generic_dense_assignment_kernel", align 8
  %10 = alloca %"struct.Eigen::internal::assign_op", align 1
  %11 = alloca %"class.Eigen::ArrayWrapper", align 8
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca %"struct.Eigen::internal::assign_op", align 1
  %15 = alloca %"class.Eigen::CwiseUnaryOp.25", align 8
  %16 = alloca %"class.Eigen::ArrayWrapper", align 8
  %17 = alloca float, align 4
  switch i32 %2, label %283 [
    i32 6, label %232
    i32 1, label %18
    i32 2, label %50
    i32 3, label %89
    i32 4, label %128
    i32 5, label %151
  ]

18:                                               ; preds = %4
  %19 = icmp sgt i32 %1, 0
  br i1 %19, label %20, label %283

20:                                               ; preds = %18
  %21 = zext i32 %1 to i64
  %22 = bitcast float* %17 to i8*
  %23 = and i64 %21, 1
  %24 = icmp eq i32 %1, 1
  br i1 %24, label %241, label %25

25:                                               ; preds = %20
  %26 = sub nsw i64 %21, %23
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ 0, %25 ], [ %47, %27 ]
  %29 = phi i64 [ %26, %25 ], [ %48, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store float 0.000000e+00, float* %17, align 4, !noalias !38
  %30 = getelementptr inbounds float, float* %0, i64 %28
  %31 = load float, float* %30, align 4, !alias.scope !42, !noalias !43
  %32 = fcmp ogt float %31, 0.000000e+00
  %33 = select i1 %32, float* %30, float* %17
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4, !noalias !43
  %36 = getelementptr inbounds float, float* %3, i64 %28
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4, !alias.scope !43, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  %38 = or i64 %28, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store float 0.000000e+00, float* %17, align 4, !noalias !38
  %39 = getelementptr inbounds float, float* %0, i64 %38
  %40 = load float, float* %39, align 4, !alias.scope !42, !noalias !43
  %41 = fcmp ogt float %40, 0.000000e+00
  %42 = select i1 %41, float* %39, float* %17
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4, !noalias !43
  %45 = getelementptr inbounds float, float* %3, i64 %38
  %46 = bitcast float* %45 to i32*
  store i32 %44, i32* %46, align 4, !alias.scope !43, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  %47 = add nuw nsw i64 %28, 2
  %48 = add i64 %29, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %241, label %27

50:                                               ; preds = %4
  %51 = icmp sgt i32 %1, 0
  br i1 %51, label %52, label %283

52:                                               ; preds = %50
  %53 = zext i32 %1 to i64
  %54 = bitcast float* %12 to i8*
  %55 = bitcast float* %13 to i8*
  %56 = and i64 %53, 1
  %57 = icmp eq i32 %1, 1
  br i1 %57, label %253, label %58

58:                                               ; preds = %52
  %59 = sub nsw i64 %53, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %86, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %87, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store float -1.000000e+00, float* %12, align 4, !noalias !44
  %63 = getelementptr inbounds float, float* %0, i64 %61
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 1.000000e+00, float* %13, align 4, !noalias !44
  %64 = load float, float* %63, align 4, !alias.scope !48, !noalias !49
  %65 = fcmp ogt float %64, 1.000000e+00
  %66 = select i1 %65, float* %13, float* %63
  %67 = load float, float* %66, align 4, !noalias !49
  %68 = fcmp ogt float %67, -1.000000e+00
  %69 = select i1 %68, float* %66, float* %12
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4, !noalias !49
  %72 = getelementptr inbounds float, float* %3, i64 %61
  %73 = bitcast float* %72 to i32*
  store i32 %71, i32* %73, align 4, !alias.scope !49, !noalias !48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  %74 = or i64 %61, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store float -1.000000e+00, float* %12, align 4, !noalias !44
  %75 = getelementptr inbounds float, float* %0, i64 %74
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 1.000000e+00, float* %13, align 4, !noalias !44
  %76 = load float, float* %75, align 4, !alias.scope !48, !noalias !49
  %77 = fcmp ogt float %76, 1.000000e+00
  %78 = select i1 %77, float* %13, float* %75
  %79 = load float, float* %78, align 4, !noalias !49
  %80 = fcmp ogt float %79, -1.000000e+00
  %81 = select i1 %80, float* %78, float* %12
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4, !noalias !49
  %84 = getelementptr inbounds float, float* %3, i64 %74
  %85 = bitcast float* %84 to i32*
  store i32 %83, i32* %85, align 4, !alias.scope !49, !noalias !48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  %86 = add nuw nsw i64 %61, 2
  %87 = add i64 %62, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %253, label %60

89:                                               ; preds = %4
  %90 = icmp sgt i32 %1, 0
  br i1 %90, label %91, label %283

91:                                               ; preds = %89
  %92 = zext i32 %1 to i64
  %93 = bitcast float* %5 to i8*
  %94 = bitcast float* %6 to i8*
  %95 = and i64 %92, 1
  %96 = icmp eq i32 %1, 1
  br i1 %96, label %268, label %97

97:                                               ; preds = %91
  %98 = sub nsw i64 %92, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %125, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %126, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93)
  store float 0.000000e+00, float* %5, align 4, !noalias !50
  %102 = getelementptr inbounds float, float* %0, i64 %100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94)
  store float 6.000000e+00, float* %6, align 4, !noalias !50
  %103 = load float, float* %102, align 4, !alias.scope !54, !noalias !55
  %104 = fcmp ogt float %103, 6.000000e+00
  %105 = select i1 %104, float* %6, float* %102
  %106 = load float, float* %105, align 4, !noalias !55
  %107 = fcmp ogt float %106, 0.000000e+00
  %108 = select i1 %107, float* %105, float* %5
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4, !noalias !55
  %111 = getelementptr inbounds float, float* %3, i64 %100
  %112 = bitcast float* %111 to i32*
  store i32 %110, i32* %112, align 4, !alias.scope !55, !noalias !54
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93)
  %113 = or i64 %100, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93)
  store float 0.000000e+00, float* %5, align 4, !noalias !50
  %114 = getelementptr inbounds float, float* %0, i64 %113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94)
  store float 6.000000e+00, float* %6, align 4, !noalias !50
  %115 = load float, float* %114, align 4, !alias.scope !54, !noalias !55
  %116 = fcmp ogt float %115, 6.000000e+00
  %117 = select i1 %116, float* %6, float* %114
  %118 = load float, float* %117, align 4, !noalias !55
  %119 = fcmp ogt float %118, 0.000000e+00
  %120 = select i1 %119, float* %117, float* %5
  %121 = bitcast float* %120 to i32*
  %122 = load i32, i32* %121, align 4, !noalias !55
  %123 = getelementptr inbounds float, float* %3, i64 %113
  %124 = bitcast float* %123 to i32*
  store i32 %122, i32* %124, align 4, !alias.scope !55, !noalias !54
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93)
  %125 = add nuw nsw i64 %100, 2
  %126 = add i64 %101, -2
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %268, label %99

128:                                              ; preds = %4
  %129 = sext i32 %1 to i64
  %130 = ptrtoint float* %0 to i64
  %131 = bitcast %"class.Eigen::ArrayWrapper"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12, !noalias !56
  %132 = getelementptr inbounds %"class.Eigen::ArrayWrapper", %"class.Eigen::ArrayWrapper"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store float* %3, float** %132, align 8, !noalias !56
  %133 = getelementptr inbounds %"class.Eigen::ArrayWrapper", %"class.Eigen::ArrayWrapper"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %129, i64* %133, align 8, !noalias !56
  %134 = getelementptr inbounds %"struct.Eigen::internal::assign_op", %"struct.Eigen::internal::assign_op"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #12, !noalias !56
  %135 = bitcast %"struct.Eigen::internal::evaluator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #12, !noalias !56
  %136 = getelementptr inbounds %"struct.Eigen::internal::evaluator", %"struct.Eigen::internal::evaluator"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %137 = bitcast i8* %136 to i64*
  store i64 -6148914691236517206, i64* %137, align 8, !noalias !56
  %138 = bitcast %"struct.Eigen::internal::evaluator"* %7 to i64*
  store i64 %130, i64* %138, align 8, !noalias !56
  %139 = getelementptr inbounds %"struct.Eigen::internal::evaluator", %"struct.Eigen::internal::evaluator"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i64 %129, i64* %139, align 8, !noalias !56
  %140 = bitcast %"struct.Eigen::internal::evaluator.18"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #12, !noalias !56
  %141 = getelementptr inbounds %"struct.Eigen::internal::evaluator.18", %"struct.Eigen::internal::evaluator.18"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %142 = bitcast i8* %141 to i64*
  store i64 -6148914691236517206, i64* %142, align 8, !noalias !56
  %143 = ptrtoint float* %3 to i64
  %144 = bitcast %"struct.Eigen::internal::evaluator.18"* %8 to i64*
  store i64 %143, i64* %144, align 8, !noalias !56
  %145 = getelementptr inbounds %"struct.Eigen::internal::evaluator.18", %"struct.Eigen::internal::evaluator.18"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i64 %129, i64* %145, align 8, !noalias !56
  %146 = bitcast %"class.Eigen::internal::generic_dense_assignment_kernel"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %146) #12, !noalias !56
  %147 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %9, i64 0, i32 0
  %148 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %9, i64 0, i32 1
  %149 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %9, i64 0, i32 2
  %150 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %9, i64 0, i32 3
  store %"struct.Eigen::internal::evaluator.18"* %8, %"struct.Eigen::internal::evaluator.18"** %147, align 8, !noalias !56
  store %"struct.Eigen::internal::evaluator"* %7, %"struct.Eigen::internal::evaluator"** %148, align 8, !noalias !56
  store %"struct.Eigen::internal::assign_op"* %10, %"struct.Eigen::internal::assign_op"** %149, align 8, !noalias !56
  store %"class.Eigen::ArrayWrapper"* %11, %"class.Eigen::ArrayWrapper"** %150, align 8, !noalias !56
  call void @_ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEEEENS3_INS_12CwiseUnaryOpINS0_14scalar_tanh_opIfEEKSB_EEEENS0_9assign_opIffEELi0EEELi3ELi0EE3runERSL_(%"class.Eigen::internal::generic_dense_assignment_kernel"* nonnull dereferenceable(32) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %146) #12, !noalias !56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #12, !noalias !56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #12, !noalias !56
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #12, !noalias !56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12, !noalias !56
  br label %283

151:                                              ; preds = %4
  %152 = icmp sgt i32 %1, 0
  br i1 %152, label %153, label %283

153:                                              ; preds = %151
  %154 = zext i32 %1 to i64
  %155 = icmp ult i32 %1, 8
  br i1 %155, label %220, label %156

156:                                              ; preds = %153
  %157 = and i64 %154, 4294967288
  %158 = add nsw i64 %157, -8
  %159 = lshr exact i64 %158, 3
  %160 = add nuw nsw i64 %159, 1
  %161 = and i64 %160, 1
  %162 = icmp eq i64 %158, 0
  br i1 %162, label %200, label %163

163:                                              ; preds = %156
  %164 = sub nuw nsw i64 %160, %161
  br label %165

165:                                              ; preds = %165, %163
  %166 = phi i64 [ 0, %163 ], [ %197, %165 ]
  %167 = phi i64 [ %164, %163 ], [ %198, %165 ]
  %168 = getelementptr inbounds float, float* %0, i64 %166
  %169 = bitcast float* %168 to <4 x i32>*
  %170 = load <4 x i32>, <4 x i32>* %169, align 4, !alias.scope !60, !noalias !63
  %171 = getelementptr inbounds float, float* %168, i64 4
  %172 = bitcast float* %171 to <4 x i32>*
  %173 = load <4 x i32>, <4 x i32>* %172, align 4, !alias.scope !60, !noalias !63
  %174 = icmp slt <4 x i32> %170, zeroinitializer
  %175 = icmp slt <4 x i32> %173, zeroinitializer
  %176 = uitofp <4 x i1> %174 to <4 x float>
  %177 = uitofp <4 x i1> %175 to <4 x float>
  %178 = getelementptr inbounds float, float* %3, i64 %166
  %179 = bitcast float* %178 to <4 x float>*
  store <4 x float> %176, <4 x float>* %179, align 4, !alias.scope !63, !noalias !60
  %180 = getelementptr inbounds float, float* %178, i64 4
  %181 = bitcast float* %180 to <4 x float>*
  store <4 x float> %177, <4 x float>* %181, align 4, !alias.scope !63, !noalias !60
  %182 = or i64 %166, 8
  %183 = getelementptr inbounds float, float* %0, i64 %182
  %184 = bitcast float* %183 to <4 x i32>*
  %185 = load <4 x i32>, <4 x i32>* %184, align 4, !alias.scope !60, !noalias !63
  %186 = getelementptr inbounds float, float* %183, i64 4
  %187 = bitcast float* %186 to <4 x i32>*
  %188 = load <4 x i32>, <4 x i32>* %187, align 4, !alias.scope !60, !noalias !63
  %189 = icmp slt <4 x i32> %185, zeroinitializer
  %190 = icmp slt <4 x i32> %188, zeroinitializer
  %191 = uitofp <4 x i1> %189 to <4 x float>
  %192 = uitofp <4 x i1> %190 to <4 x float>
  %193 = getelementptr inbounds float, float* %3, i64 %182
  %194 = bitcast float* %193 to <4 x float>*
  store <4 x float> %191, <4 x float>* %194, align 4, !alias.scope !63, !noalias !60
  %195 = getelementptr inbounds float, float* %193, i64 4
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %192, <4 x float>* %196, align 4, !alias.scope !63, !noalias !60
  %197 = add i64 %166, 16
  %198 = add i64 %167, -2
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %165, !llvm.loop !65

200:                                              ; preds = %165, %156
  %201 = phi i64 [ 0, %156 ], [ %197, %165 ]
  %202 = icmp eq i64 %161, 0
  br i1 %202, label %218, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds float, float* %0, i64 %201
  %205 = bitcast float* %204 to <4 x i32>*
  %206 = load <4 x i32>, <4 x i32>* %205, align 4, !alias.scope !60, !noalias !63
  %207 = getelementptr inbounds float, float* %204, i64 4
  %208 = bitcast float* %207 to <4 x i32>*
  %209 = load <4 x i32>, <4 x i32>* %208, align 4, !alias.scope !60, !noalias !63
  %210 = icmp slt <4 x i32> %206, zeroinitializer
  %211 = icmp slt <4 x i32> %209, zeroinitializer
  %212 = uitofp <4 x i1> %210 to <4 x float>
  %213 = uitofp <4 x i1> %211 to <4 x float>
  %214 = getelementptr inbounds float, float* %3, i64 %201
  %215 = bitcast float* %214 to <4 x float>*
  store <4 x float> %212, <4 x float>* %215, align 4, !alias.scope !63, !noalias !60
  %216 = getelementptr inbounds float, float* %214, i64 4
  %217 = bitcast float* %216 to <4 x float>*
  store <4 x float> %213, <4 x float>* %217, align 4, !alias.scope !63, !noalias !60
  br label %218

218:                                              ; preds = %200, %203
  %219 = icmp eq i64 %157, %154
  br i1 %219, label %283, label %220

220:                                              ; preds = %218, %153
  %221 = phi i64 [ 0, %153 ], [ %157, %218 ]
  br label %222

222:                                              ; preds = %220, %222
  %223 = phi i64 [ %230, %222 ], [ %221, %220 ]
  %224 = getelementptr inbounds float, float* %0, i64 %223
  %225 = bitcast float* %224 to i32*
  %226 = load i32, i32* %225, align 4, !alias.scope !60, !noalias !63
  %227 = icmp slt i32 %226, 0
  %228 = uitofp i1 %227 to float
  %229 = getelementptr inbounds float, float* %3, i64 %223
  store float %228, float* %229, align 4, !alias.scope !63, !noalias !60
  %230 = add nuw nsw i64 %223, 1
  %231 = icmp eq i64 %230, %154
  br i1 %231, label %283, label %222, !llvm.loop !66

232:                                              ; preds = %4
  %233 = sext i32 %1 to i64
  %234 = bitcast %"class.Eigen::CwiseUnaryOp.25"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %234) #12, !noalias !67
  %235 = getelementptr inbounds %"class.Eigen::CwiseUnaryOp.25", %"class.Eigen::CwiseUnaryOp.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store float* %0, float** %235, align 8, !noalias !67
  %236 = getelementptr inbounds %"class.Eigen::CwiseUnaryOp.25", %"class.Eigen::CwiseUnaryOp.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %233, i64* %236, align 8, !noalias !67
  %237 = bitcast %"class.Eigen::ArrayWrapper"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #12, !noalias !67
  %238 = getelementptr inbounds %"class.Eigen::ArrayWrapper", %"class.Eigen::ArrayWrapper"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store float* %3, float** %238, align 8, !noalias !67
  %239 = getelementptr inbounds %"class.Eigen::ArrayWrapper", %"class.Eigen::ArrayWrapper"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %233, i64* %239, align 8, !noalias !67
  %240 = getelementptr inbounds %"struct.Eigen::internal::assign_op", %"struct.Eigen::internal::assign_op"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %240) #12, !noalias !67
  call void @_ZN5Eigen8internal26call_dense_assignment_loopINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS_12CwiseUnaryOpINS0_18scalar_logistic_opIfEEKS9_EENS0_9assign_opIffEEEEvRT_RKT0_RKT1_(%"class.Eigen::ArrayWrapper"* nonnull dereferenceable(24) %16, %"class.Eigen::CwiseUnaryOp.25"* nonnull dereferenceable(32) %15, %"struct.Eigen::internal::assign_op"* nonnull dereferenceable(1) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %240) #12, !noalias !67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #12, !noalias !67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %234) #12, !noalias !67
  br label %283

241:                                              ; preds = %27, %20
  %242 = phi i64 [ 0, %20 ], [ %47, %27 ]
  %243 = icmp eq i64 %23, 0
  br i1 %243, label %283, label %244

244:                                              ; preds = %241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store float 0.000000e+00, float* %17, align 4, !noalias !38
  %245 = getelementptr inbounds float, float* %0, i64 %242
  %246 = load float, float* %245, align 4, !alias.scope !42, !noalias !43
  %247 = fcmp ogt float %246, 0.000000e+00
  %248 = select i1 %247, float* %245, float* %17
  %249 = bitcast float* %248 to i32*
  %250 = load i32, i32* %249, align 4, !noalias !43
  %251 = getelementptr inbounds float, float* %3, i64 %242
  %252 = bitcast float* %251 to i32*
  store i32 %250, i32* %252, align 4, !alias.scope !43, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  br label %283

253:                                              ; preds = %60, %52
  %254 = phi i64 [ 0, %52 ], [ %86, %60 ]
  %255 = icmp eq i64 %56, 0
  br i1 %255, label %283, label %256

256:                                              ; preds = %253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store float -1.000000e+00, float* %12, align 4, !noalias !44
  %257 = getelementptr inbounds float, float* %0, i64 %254
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 1.000000e+00, float* %13, align 4, !noalias !44
  %258 = load float, float* %257, align 4, !alias.scope !48, !noalias !49
  %259 = fcmp ogt float %258, 1.000000e+00
  %260 = select i1 %259, float* %13, float* %257
  %261 = load float, float* %260, align 4, !noalias !49
  %262 = fcmp ogt float %261, -1.000000e+00
  %263 = select i1 %262, float* %260, float* %12
  %264 = bitcast float* %263 to i32*
  %265 = load i32, i32* %264, align 4, !noalias !49
  %266 = getelementptr inbounds float, float* %3, i64 %254
  %267 = bitcast float* %266 to i32*
  store i32 %265, i32* %267, align 4, !alias.scope !49, !noalias !48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  br label %283

268:                                              ; preds = %99, %91
  %269 = phi i64 [ 0, %91 ], [ %125, %99 ]
  %270 = icmp eq i64 %95, 0
  br i1 %270, label %283, label %271

271:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93)
  store float 0.000000e+00, float* %5, align 4, !noalias !50
  %272 = getelementptr inbounds float, float* %0, i64 %269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94)
  store float 6.000000e+00, float* %6, align 4, !noalias !50
  %273 = load float, float* %272, align 4, !alias.scope !54, !noalias !55
  %274 = fcmp ogt float %273, 6.000000e+00
  %275 = select i1 %274, float* %6, float* %272
  %276 = load float, float* %275, align 4, !noalias !55
  %277 = fcmp ogt float %276, 0.000000e+00
  %278 = select i1 %277, float* %275, float* %5
  %279 = bitcast float* %278 to i32*
  %280 = load i32, i32* %279, align 4, !noalias !55
  %281 = getelementptr inbounds float, float* %3, i64 %269
  %282 = bitcast float* %281 to i32*
  store i32 %280, i32* %282, align 4, !alias.scope !55, !noalias !54
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93)
  br label %283

283:                                              ; preds = %222, %271, %268, %256, %253, %244, %241, %218, %151, %89, %50, %18, %128, %232, %4
  ret void
}

declare float @_ZN6tflite12tensor_utils22VectorVectorDotProductEPKfS2_i(float*, float*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEEEENS3_INS_12CwiseUnaryOpINS0_14scalar_tanh_opIfEEKSB_EEEENS0_9assign_opIffEELi0EEELi3ELi0EE3runERSL_(%"class.Eigen::internal::generic_dense_assignment_kernel"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %0, i64 0, i32 3
  %3 = bitcast %"class.Eigen::ArrayWrapper"** %2 to %"struct.Eigen::EigenBase.16"**
  %4 = load %"struct.Eigen::EigenBase.16"*, %"struct.Eigen::EigenBase.16"** %3, align 8
  %5 = getelementptr inbounds %"struct.Eigen::EigenBase.16", %"struct.Eigen::EigenBase.16"* %4, i64 8
  %6 = bitcast %"struct.Eigen::EigenBase.16"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.Eigen::EigenBase.16"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %1
  %13 = lshr i64 %9, 2
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 3
  %16 = icmp slt i64 %15, %7
  %17 = select i1 %16, i64 %15, i64 %7
  br label %18

18:                                               ; preds = %1, %12
  %19 = phi i64 [ %17, %12 ], [ %7, %1 ]
  %20 = sub nsw i64 %7, %19
  %21 = sdiv i64 %20, 4
  %22 = shl nsw i64 %21, 2
  %23 = add nsw i64 %22, %19
  %24 = icmp sgt i64 %19, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %18
  %26 = bitcast %"class.Eigen::internal::generic_dense_assignment_kernel"* %0 to %"struct.Eigen::internal::evaluator_wrapper_base"**
  %27 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %0, i64 0, i32 1
  %28 = bitcast %"struct.Eigen::internal::evaluator"** %27 to %"struct.Eigen::internal::unary_evaluator"**
  br label %29

29:                                               ; preds = %29, %25
  %30 = phi i64 [ 0, %25 ], [ %70, %29 ]
  %31 = load %"struct.Eigen::internal::evaluator_wrapper_base"*, %"struct.Eigen::internal::evaluator_wrapper_base"** %26, align 8
  %32 = getelementptr inbounds %"struct.Eigen::internal::evaluator_wrapper_base", %"struct.Eigen::internal::evaluator_wrapper_base"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = getelementptr inbounds float, float* %33, i64 %30
  %35 = load %"struct.Eigen::internal::unary_evaluator"*, %"struct.Eigen::internal::unary_evaluator"** %28, align 8
  %36 = getelementptr inbounds %"struct.Eigen::internal::unary_evaluator", %"struct.Eigen::internal::unary_evaluator"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = getelementptr inbounds float, float* %37, i64 %30
  %39 = load float, float* %38, align 4
  %40 = fcmp ogt float %39, 0x401F9F09E0000000
  %41 = select i1 %40, float 0x401F9F09E0000000, float %39
  %42 = fcmp olt float %41, 0xC01F9F09E0000000
  %43 = select i1 %42, float 0xC01F9F09E0000000, float %41
  %44 = tail call float @llvm.fabs.f32(float %39) #12
  %45 = fcmp olt float %44, 0x3F3A36E2E0000000
  %46 = select i1 %45, float 0xFFFFFFFFE0000000, float 0.000000e+00
  %47 = fmul float %43, %43
  %48 = fmul float %47, 0x3CB3E4B800000000
  %49 = fsub float 0x3D4C266FC0000000, %48
  %50 = fmul float %47, %49
  %51 = fadd float %50, 0xBDD7A6FFE0000000
  %52 = fmul float %47, %51
  %53 = fadd float %52, 0x3E6B800820000000
  %54 = fmul float %47, %53
  %55 = fadd float %54, 0x3EEF286940000000
  %56 = fmul float %47, %55
  %57 = fadd float %56, 0x3F44E1BDA0000000
  %58 = fmul float %47, %57
  %59 = fadd float %58, 0x3F740B3B80000000
  %60 = fmul float %43, %59
  %61 = fmul float %47, 0x3EB41A7B00000000
  %62 = fadd float %61, 0x3F1F12BAC0000000
  %63 = fmul float %47, %62
  %64 = fadd float %63, 0x3F629540A0000000
  %65 = fmul float %47, %64
  %66 = fadd float %65, 0x3F740B3BA0000000
  %67 = fdiv float %60, %66
  %68 = fcmp oeq float %46, 0.000000e+00
  %69 = select i1 %68, float %67, float %43
  store float %69, float* %34, align 4
  %70 = add nuw nsw i64 %30, 1
  %71 = icmp eq i64 %70, %19
  br i1 %71, label %72, label %29

72:                                               ; preds = %29, %18
  %73 = icmp sgt i64 %20, 3
  br i1 %73, label %74, label %78

74:                                               ; preds = %72
  %75 = bitcast %"class.Eigen::internal::generic_dense_assignment_kernel"* %0 to %"struct.Eigen::internal::evaluator_wrapper_base"**
  %76 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %0, i64 0, i32 1
  %77 = bitcast %"struct.Eigen::internal::evaluator"** %76 to %"struct.Eigen::internal::unary_evaluator"**
  br label %128

78:                                               ; preds = %128, %72
  %79 = icmp slt i64 %23, %7
  br i1 %79, label %80, label %127

80:                                               ; preds = %78
  %81 = bitcast %"class.Eigen::internal::generic_dense_assignment_kernel"* %0 to %"struct.Eigen::internal::evaluator_wrapper_base"**
  %82 = getelementptr inbounds %"class.Eigen::internal::generic_dense_assignment_kernel", %"class.Eigen::internal::generic_dense_assignment_kernel"* %0, i64 0, i32 1
  %83 = bitcast %"struct.Eigen::internal::evaluator"** %82 to %"struct.Eigen::internal::unary_evaluator"**
  br label %84

84:                                               ; preds = %84, %80
  %85 = phi i64 [ %23, %80 ], [ %125, %84 ]
  %86 = load %"struct.Eigen::internal::evaluator_wrapper_base"*, %"struct.Eigen::internal::evaluator_wrapper_base"** %81, align 8
  %87 = getelementptr inbounds %"struct.Eigen::internal::evaluator_wrapper_base", %"struct.Eigen::internal::evaluator_wrapper_base"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load float*, float** %87, align 8
  %89 = getelementptr inbounds float, float* %88, i64 %85
  %90 = load %"struct.Eigen::internal::unary_evaluator"*, %"struct.Eigen::internal::unary_evaluator"** %83, align 8
  %91 = getelementptr inbounds %"struct.Eigen::internal::unary_evaluator", %"struct.Eigen::internal::unary_evaluator"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load float*, float** %91, align 8
  %93 = getelementptr inbounds float, float* %92, i64 %85
  %94 = load float, float* %93, align 4
  %95 = fcmp ogt float %94, 0x401F9F09E0000000
  %96 = select i1 %95, float 0x401F9F09E0000000, float %94
  %97 = fcmp olt float %96, 0xC01F9F09E0000000
  %98 = select i1 %97, float 0xC01F9F09E0000000, float %96
  %99 = tail call float @llvm.fabs.f32(float %94) #12
  %100 = fcmp olt float %99, 0x3F3A36E2E0000000
  %101 = select i1 %100, float 0xFFFFFFFFE0000000, float 0.000000e+00
  %102 = fmul float %98, %98
  %103 = fmul float %102, 0x3CB3E4B800000000
  %104 = fsub float 0x3D4C266FC0000000, %103
  %105 = fmul float %102, %104
  %106 = fadd float %105, 0xBDD7A6FFE0000000
  %107 = fmul float %102, %106
  %108 = fadd float %107, 0x3E6B800820000000
  %109 = fmul float %102, %108
  %110 = fadd float %109, 0x3EEF286940000000
  %111 = fmul float %102, %110
  %112 = fadd float %111, 0x3F44E1BDA0000000
  %113 = fmul float %102, %112
  %114 = fadd float %113, 0x3F740B3B80000000
  %115 = fmul float %98, %114
  %116 = fmul float %102, 0x3EB41A7B00000000
  %117 = fadd float %116, 0x3F1F12BAC0000000
  %118 = fmul float %102, %117
  %119 = fadd float %118, 0x3F629540A0000000
  %120 = fmul float %102, %119
  %121 = fadd float %120, 0x3F740B3BA0000000
  %122 = fdiv float %115, %121
  %123 = fcmp oeq float %101, 0.000000e+00
  %124 = select i1 %123, float %122, float %98
  store float %124, float* %89, align 4
  %125 = add nsw i64 %85, 1
  %126 = icmp eq i64 %125, %7
  br i1 %126, label %127, label %84

127:                                              ; preds = %84, %78
  ret void

128:                                              ; preds = %74, %128
  %129 = phi i64 [ %19, %74 ], [ %169, %128 ]
  %130 = load %"struct.Eigen::internal::evaluator_wrapper_base"*, %"struct.Eigen::internal::evaluator_wrapper_base"** %75, align 8
  %131 = getelementptr inbounds %"struct.Eigen::internal::evaluator_wrapper_base", %"struct.Eigen::internal::evaluator_wrapper_base"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load float*, float** %131, align 8
  %133 = getelementptr inbounds float, float* %132, i64 %129
  %134 = load %"struct.Eigen::internal::unary_evaluator"*, %"struct.Eigen::internal::unary_evaluator"** %77, align 8
  %135 = getelementptr inbounds %"struct.Eigen::internal::unary_evaluator", %"struct.Eigen::internal::unary_evaluator"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load float*, float** %135, align 8
  %137 = getelementptr inbounds float, float* %136, i64 %129
  %138 = bitcast float* %137 to <4 x float>*
  %139 = load <4 x float>, <4 x float>* %138, align 1
  %140 = tail call <4 x float> asm "minps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %139, <4 x float> <float 0x401F9F09E0000000, float 0x401F9F09E0000000, float 0x401F9F09E0000000, float 0x401F9F09E0000000>) #10, !srcloc !71
  %141 = tail call <4 x float> asm "maxps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %140, <4 x float> <float 0xC01F9F09E0000000, float 0xC01F9F09E0000000, float 0xC01F9F09E0000000, float 0xC01F9F09E0000000>) #10, !srcloc !72
  %142 = bitcast <4 x float> %139 to <4 x i32>
  %143 = and <4 x i32> %142, <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>
  %144 = bitcast <4 x i32> %143 to <4 x float>
  %145 = fcmp uge <4 x float> %144, <float 0x3F3A36E2E0000000, float 0x3F3A36E2E0000000, float 0x3F3A36E2E0000000, float 0x3F3A36E2E0000000>
  %146 = fmul <4 x float> %141, %141
  %147 = fmul <4 x float> %146, <float 0xBCB3E4B800000000, float 0xBCB3E4B800000000, float 0xBCB3E4B800000000, float 0xBCB3E4B800000000>
  %148 = fadd <4 x float> %147, <float 0x3D4C266FC0000000, float 0x3D4C266FC0000000, float 0x3D4C266FC0000000, float 0x3D4C266FC0000000>
  %149 = fmul <4 x float> %146, %148
  %150 = fadd <4 x float> %149, <float 0xBDD7A6FFE0000000, float 0xBDD7A6FFE0000000, float 0xBDD7A6FFE0000000, float 0xBDD7A6FFE0000000>
  %151 = fmul <4 x float> %146, %150
  %152 = fadd <4 x float> %151, <float 0x3E6B800820000000, float 0x3E6B800820000000, float 0x3E6B800820000000, float 0x3E6B800820000000>
  %153 = fmul <4 x float> %146, %152
  %154 = fadd <4 x float> %153, <float 0x3EEF286940000000, float 0x3EEF286940000000, float 0x3EEF286940000000, float 0x3EEF286940000000>
  %155 = fmul <4 x float> %146, %154
  %156 = fadd <4 x float> %155, <float 0x3F44E1BDA0000000, float 0x3F44E1BDA0000000, float 0x3F44E1BDA0000000, float 0x3F44E1BDA0000000>
  %157 = fmul <4 x float> %146, %156
  %158 = fadd <4 x float> %157, <float 0x3F740B3B80000000, float 0x3F740B3B80000000, float 0x3F740B3B80000000, float 0x3F740B3B80000000>
  %159 = fmul <4 x float> %141, %158
  %160 = fmul <4 x float> %146, <float 0x3EB41A7B00000000, float 0x3EB41A7B00000000, float 0x3EB41A7B00000000, float 0x3EB41A7B00000000>
  %161 = fadd <4 x float> %160, <float 0x3F1F12BAC0000000, float 0x3F1F12BAC0000000, float 0x3F1F12BAC0000000, float 0x3F1F12BAC0000000>
  %162 = fmul <4 x float> %146, %161
  %163 = fadd <4 x float> %162, <float 0x3F629540A0000000, float 0x3F629540A0000000, float 0x3F629540A0000000, float 0x3F629540A0000000>
  %164 = fmul <4 x float> %146, %163
  %165 = fadd <4 x float> %164, <float 0x3F740B3BA0000000, float 0x3F740B3BA0000000, float 0x3F740B3BA0000000, float 0x3F740B3BA0000000>
  %166 = fdiv <4 x float> %159, %165
  %167 = select <4 x i1> %145, <4 x float> %166, <4 x float> %141
  %168 = bitcast float* %133 to <4 x float>*
  store <4 x float> %167, <4 x float>* %168, align 16
  %169 = add nsw i64 %129, 4
  %170 = icmp slt i64 %169, %23
  br i1 %170, label %128, label %78
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5Eigen8internal26call_dense_assignment_loopINS_12ArrayWrapperINS_3MapINS_6MatrixIfLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS_12CwiseUnaryOpINS0_18scalar_logistic_opIfEEKS9_EENS0_9assign_opIffEEEEvRT_RKT0_RKT1_(%"class.Eigen::ArrayWrapper"* dereferenceable(24), %"class.Eigen::CwiseUnaryOp.25"* dereferenceable(32), %"struct.Eigen::internal::assign_op"* dereferenceable(1)) local_unnamed_addr #7 comdat {
  %4 = bitcast %"class.Eigen::CwiseUnaryOp.25"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.Eigen::ArrayWrapper"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.Eigen::ArrayWrapper", %"class.Eigen::ArrayWrapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %7, 3
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = lshr i64 %7, 2
  %14 = sub nsw i64 0, %13
  %15 = and i64 %14, 3
  %16 = icmp slt i64 %15, %9
  %17 = select i1 %16, i64 %15, i64 %9
  br label %18

18:                                               ; preds = %12, %3
  %19 = phi i64 [ %17, %12 ], [ %9, %3 ]
  %20 = sub nsw i64 %9, %19
  %21 = sdiv i64 %20, 4
  %22 = shl nsw i64 %21, 2
  %23 = add nsw i64 %22, %19
  %24 = icmp sgt i64 %19, 0
  br i1 %24, label %25, label %92

25:                                               ; preds = %18
  %26 = inttoptr i64 %7 to float*
  %27 = inttoptr i64 %5 to float*
  br label %28

28:                                               ; preds = %25, %88
  %29 = phi i64 [ %90, %88 ], [ 0, %25 ]
  %30 = getelementptr inbounds float, float* %26, i64 %29
  %31 = getelementptr inbounds float, float* %27, i64 %29
  %32 = load float, float* %31, align 4
  %33 = fcmp olt float %32, -9.000000e+00
  %34 = fcmp ogt float %32, 0x402F499C60000000
  %35 = select i1 %34, float 0x402F499C60000000, float %32
  %36 = fmul float %35, %35
  %37 = fmul float %36, 0x3DC806AA20000000
  %38 = fadd float %37, 0x3E7F09D960000000
  %39 = fmul float %36, %38
  %40 = fadd float %39, 0x3F0FE82760000000
  %41 = fmul float %36, %40
  %42 = fadd float %41, 0x3F816FAB00000000
  %43 = fmul float %36, %42
  %44 = fadd float %43, 0x3FCFC7E640000000
  %45 = fmul float %35, %44
  %46 = fmul float %36, 0x3D65789EA0000000
  %47 = fadd float %46, 0x3E38BE4F60000000
  %48 = fmul float %36, %47
  %49 = fadd float %48, 0x3EDA62FBA0000000
  %50 = fmul float %36, %49
  %51 = fadd float %50, 0x3F5BE2A7E0000000
  %52 = fmul float %36, %51
  %53 = fadd float %52, 0x3FBDE7C300000000
  %54 = fmul float %36, %53
  %55 = fadd float %54, 0x3FEFC7E680000000
  %56 = fdiv float %45, %55
  %57 = fadd float %56, 5.000000e-01
  br i1 %33, label %58, label %88, !prof !73

58:                                               ; preds = %28
  %59 = fcmp ogt float %32, 0x40561814C0000000
  %60 = select i1 %59, float 0x40561814C0000000, float %32
  %61 = fcmp olt float %60, 0xC0561814A0000000
  %62 = select i1 %61, float 0xC0561814A0000000, float %60
  %63 = fmul float %62, 0x3FF7154760000000
  %64 = fadd float %63, 5.000000e-01
  %65 = tail call float @llvm.floor.f32(float %64) #12
  %66 = fmul float %65, 0x3FE6300000000000
  %67 = fsub float %62, %66
  %68 = fmul float %65, 0x3F2BD01060000000
  %69 = fadd float %68, %67
  %70 = fmul float %69, %69
  %71 = fmul float %69, 0x3F2A0D2CE0000000
  %72 = fadd float %71, 0x3F56E879C0000000
  %73 = fmul float %69, %72
  %74 = fadd float %73, 0x3F81112100000000
  %75 = fmul float %69, %74
  %76 = fadd float %75, 0x3FA5553820000000
  %77 = fmul float %69, %76
  %78 = fadd float %77, 0x3FC5555540000000
  %79 = fmul float %69, %78
  %80 = fadd float %79, 5.000000e-01
  %81 = fmul float %70, %80
  %82 = fadd float %69, %81
  %83 = fadd float %82, 1.000000e+00
  %84 = fptosi float %65 to i32
  %85 = tail call float @ldexpf(float %83, i32 %84) #12
  %86 = fcmp olt float %85, %32
  %87 = select i1 %86, float %32, float %85
  br label %88

88:                                               ; preds = %58, %28
  %89 = phi float [ %87, %58 ], [ %57, %28 ]
  store float %89, float* %30, align 4
  %90 = add nuw i64 %29, 1
  %91 = icmp eq i64 %90, %19
  br i1 %91, label %92, label %28

92:                                               ; preds = %88, %18
  %93 = icmp sgt i64 %20, 3
  br i1 %93, label %94, label %169

94:                                               ; preds = %92
  %95 = inttoptr i64 %7 to float*
  %96 = inttoptr i64 %5 to float*
  br label %97

97:                                               ; preds = %94, %164
  %98 = phi i64 [ %167, %164 ], [ %19, %94 ]
  %99 = getelementptr inbounds float, float* %95, i64 %98
  %100 = getelementptr inbounds float, float* %96, i64 %98
  %101 = bitcast float* %100 to <4 x float>*
  %102 = load <4 x float>, <4 x float>* %101, align 1
  %103 = fcmp olt <4 x float> %102, <float -9.000000e+00, float -9.000000e+00, float -9.000000e+00, float -9.000000e+00>
  %104 = bitcast <4 x i1> %103 to i4
  %105 = icmp eq i4 %104, 0
  %106 = tail call <4 x float> asm "minps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %102, <4 x float> <float 0x402F499C60000000, float 0x402F499C60000000, float 0x402F499C60000000, float 0x402F499C60000000>) #10, !srcloc !71
  %107 = fmul <4 x float> %106, %106
  %108 = fmul <4 x float> %107, <float 0x3DC806AA20000000, float 0x3DC806AA20000000, float 0x3DC806AA20000000, float 0x3DC806AA20000000>
  %109 = fadd <4 x float> %108, <float 0x3E7F09D960000000, float 0x3E7F09D960000000, float 0x3E7F09D960000000, float 0x3E7F09D960000000>
  %110 = fmul <4 x float> %107, %109
  %111 = fadd <4 x float> %110, <float 0x3F0FE82760000000, float 0x3F0FE82760000000, float 0x3F0FE82760000000, float 0x3F0FE82760000000>
  %112 = fmul <4 x float> %107, %111
  %113 = fadd <4 x float> %112, <float 0x3F816FAB00000000, float 0x3F816FAB00000000, float 0x3F816FAB00000000, float 0x3F816FAB00000000>
  %114 = fmul <4 x float> %107, %113
  %115 = fadd <4 x float> %114, <float 0x3FCFC7E640000000, float 0x3FCFC7E640000000, float 0x3FCFC7E640000000, float 0x3FCFC7E640000000>
  %116 = fmul <4 x float> %106, %115
  %117 = fmul <4 x float> %107, <float 0x3D65789EA0000000, float 0x3D65789EA0000000, float 0x3D65789EA0000000, float 0x3D65789EA0000000>
  %118 = fadd <4 x float> %117, <float 0x3E38BE4F60000000, float 0x3E38BE4F60000000, float 0x3E38BE4F60000000, float 0x3E38BE4F60000000>
  %119 = fmul <4 x float> %107, %118
  %120 = fadd <4 x float> %119, <float 0x3EDA62FBA0000000, float 0x3EDA62FBA0000000, float 0x3EDA62FBA0000000, float 0x3EDA62FBA0000000>
  %121 = fmul <4 x float> %107, %120
  %122 = fadd <4 x float> %121, <float 0x3F5BE2A7E0000000, float 0x3F5BE2A7E0000000, float 0x3F5BE2A7E0000000, float 0x3F5BE2A7E0000000>
  %123 = fmul <4 x float> %107, %122
  %124 = fadd <4 x float> %123, <float 0x3FBDE7C300000000, float 0x3FBDE7C300000000, float 0x3FBDE7C300000000, float 0x3FBDE7C300000000>
  %125 = fmul <4 x float> %107, %124
  %126 = fadd <4 x float> %125, <float 0x3FEFC7E680000000, float 0x3FEFC7E680000000, float 0x3FEFC7E680000000, float 0x3FEFC7E680000000>
  %127 = fdiv <4 x float> %116, %126
  %128 = fadd <4 x float> %127, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  br i1 %105, label %164, label %129, !prof !74

129:                                              ; preds = %97
  %130 = tail call <4 x float> asm "minps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %102, <4 x float> <float 0x40561814C0000000, float 0x40561814C0000000, float 0x40561814C0000000, float 0x40561814C0000000>) #10, !srcloc !71
  %131 = tail call <4 x float> asm "maxps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %130, <4 x float> <float 0xC0561814A0000000, float 0xC0561814A0000000, float 0xC0561814A0000000, float 0xC0561814A0000000>) #10, !srcloc !72
  %132 = fmul <4 x float> %131, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>
  %133 = fadd <4 x float> %132, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %134 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %133) #12
  %135 = sitofp <4 x i32> %134 to <4 x float>
  %136 = fcmp olt <4 x float> %133, %135
  %137 = select <4 x i1> %136, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float> zeroinitializer
  %138 = fsub <4 x float> %135, %137
  %139 = fmul <4 x float> %138, <float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000, float 0x3FE6300000000000>
  %140 = fsub <4 x float> %131, %139
  %141 = fmul <4 x float> %138, <float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000, float 0xBF2BD01060000000>
  %142 = fsub <4 x float> %140, %141
  %143 = fmul <4 x float> %142, %142
  %144 = fmul <4 x float> %142, <float 0x3F2A0D2CE0000000, float 0x3F2A0D2CE0000000, float 0x3F2A0D2CE0000000, float 0x3F2A0D2CE0000000>
  %145 = fadd <4 x float> %144, <float 0x3F56E879C0000000, float 0x3F56E879C0000000, float 0x3F56E879C0000000, float 0x3F56E879C0000000>
  %146 = fmul <4 x float> %142, %145
  %147 = fadd <4 x float> %146, <float 0x3F81112100000000, float 0x3F81112100000000, float 0x3F81112100000000, float 0x3F81112100000000>
  %148 = fmul <4 x float> %142, %147
  %149 = fadd <4 x float> %148, <float 0x3FA5553820000000, float 0x3FA5553820000000, float 0x3FA5553820000000, float 0x3FA5553820000000>
  %150 = fmul <4 x float> %142, %149
  %151 = fadd <4 x float> %150, <float 0x3FC5555540000000, float 0x3FC5555540000000, float 0x3FC5555540000000, float 0x3FC5555540000000>
  %152 = fmul <4 x float> %142, %151
  %153 = fadd <4 x float> %152, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %154 = fmul <4 x float> %143, %153
  %155 = fadd <4 x float> %142, %154
  %156 = fadd <4 x float> %155, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %157 = fadd <4 x float> %138, <float 1.270000e+02, float 1.270000e+02, float 1.270000e+02, float 1.270000e+02>
  %158 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %157) #12
  %159 = shl <4 x i32> %158, <i32 23, i32 23, i32 23, i32 23>
  %160 = bitcast <4 x i32> %159 to <4 x float>
  %161 = fmul <4 x float> %156, %160
  %162 = tail call <4 x float> asm "maxps $1, $0", "=x,x,0,~{dirflag},~{fpsr},~{flags}"(<4 x float> %161, <4 x float> %102) #10, !srcloc !72
  %163 = select <4 x i1> %103, <4 x float> %162, <4 x float> %128
  br label %164

164:                                              ; preds = %97, %129
  %165 = phi <4 x float> [ %163, %129 ], [ %128, %97 ]
  %166 = bitcast float* %99 to <4 x float>*
  store <4 x float> %165, <4 x float>* %166, align 16
  %167 = add nsw i64 %98, 4
  %168 = icmp slt i64 %167, %23
  br i1 %168, label %97, label %169

169:                                              ; preds = %164, %92
  %170 = icmp slt i64 %23, %9
  br i1 %170, label %171, label %238

171:                                              ; preds = %169
  %172 = inttoptr i64 %7 to float*
  %173 = inttoptr i64 %5 to float*
  br label %174

174:                                              ; preds = %171, %234
  %175 = phi i64 [ %236, %234 ], [ %23, %171 ]
  %176 = getelementptr inbounds float, float* %172, i64 %175
  %177 = getelementptr inbounds float, float* %173, i64 %175
  %178 = load float, float* %177, align 4
  %179 = fcmp olt float %178, -9.000000e+00
  %180 = fcmp ogt float %178, 0x402F499C60000000
  %181 = select i1 %180, float 0x402F499C60000000, float %178
  %182 = fmul float %181, %181
  %183 = fmul float %182, 0x3DC806AA20000000
  %184 = fadd float %183, 0x3E7F09D960000000
  %185 = fmul float %182, %184
  %186 = fadd float %185, 0x3F0FE82760000000
  %187 = fmul float %182, %186
  %188 = fadd float %187, 0x3F816FAB00000000
  %189 = fmul float %182, %188
  %190 = fadd float %189, 0x3FCFC7E640000000
  %191 = fmul float %181, %190
  %192 = fmul float %182, 0x3D65789EA0000000
  %193 = fadd float %192, 0x3E38BE4F60000000
  %194 = fmul float %182, %193
  %195 = fadd float %194, 0x3EDA62FBA0000000
  %196 = fmul float %182, %195
  %197 = fadd float %196, 0x3F5BE2A7E0000000
  %198 = fmul float %182, %197
  %199 = fadd float %198, 0x3FBDE7C300000000
  %200 = fmul float %182, %199
  %201 = fadd float %200, 0x3FEFC7E680000000
  %202 = fdiv float %191, %201
  %203 = fadd float %202, 5.000000e-01
  br i1 %179, label %204, label %234, !prof !73

204:                                              ; preds = %174
  %205 = fcmp ogt float %178, 0x40561814C0000000
  %206 = select i1 %205, float 0x40561814C0000000, float %178
  %207 = fcmp olt float %206, 0xC0561814A0000000
  %208 = select i1 %207, float 0xC0561814A0000000, float %206
  %209 = fmul float %208, 0x3FF7154760000000
  %210 = fadd float %209, 5.000000e-01
  %211 = tail call float @llvm.floor.f32(float %210) #12
  %212 = fmul float %211, 0x3FE6300000000000
  %213 = fsub float %208, %212
  %214 = fmul float %211, 0x3F2BD01060000000
  %215 = fadd float %214, %213
  %216 = fmul float %215, %215
  %217 = fmul float %215, 0x3F2A0D2CE0000000
  %218 = fadd float %217, 0x3F56E879C0000000
  %219 = fmul float %215, %218
  %220 = fadd float %219, 0x3F81112100000000
  %221 = fmul float %215, %220
  %222 = fadd float %221, 0x3FA5553820000000
  %223 = fmul float %215, %222
  %224 = fadd float %223, 0x3FC5555540000000
  %225 = fmul float %215, %224
  %226 = fadd float %225, 5.000000e-01
  %227 = fmul float %216, %226
  %228 = fadd float %215, %227
  %229 = fadd float %228, 1.000000e+00
  %230 = fptosi float %211 to i32
  %231 = tail call float @ldexpf(float %229, i32 %230) #12
  %232 = fcmp olt float %231, %178
  %233 = select i1 %232, float %178, float %231
  br label %234

234:                                              ; preds = %204, %174
  %235 = phi float [ %233, %204 ], [ %203, %174 ]
  store float %235, float* %176, align 4
  %236 = add i64 %175, 1
  %237 = icmp eq i64 %236, %9
  br i1 %237, label %238, label %174

238:                                              ; preds = %234, %169
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nofree nounwind
declare float @ldexpf(float, i32) local_unnamed_addr #9

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float>) #10

declare zeroext i1 @_ZN6tflite12tensor_utils12IsZeroVectorEPKfi(float*, i32) local_unnamed_addr #4

declare void @_ZN6tflite12tensor_utils35MatrixBatchVectorMultiplyAccumulateEPKaiiS2_PKfiPfS4_PKiPiS8_PbPNS_17CpuBackendContextE(i8*, i32, i32, i8*, float*, i32, float*, float*, i32*, i32*, i32*, i8*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #4

declare void @_ZN6tflite12tensor_utils24AsymmetricQuantizeFloatsEPKfiPaPfPi(float*, i32, i8*, float*, i32*) local_unnamed_addr #4

declare void @_ZN6tflite12tensor_utils23SymmetricQuantizeFloatsEPKfiPaPfS4_S4_(float*, i32, i8*, float*, float*, float*) local_unnamed_addr #4

declare void @_ZN6tflite12tensor_utils32BatchVectorBatchVectorDotProductEPKsS2_iiPi(i16*, i16*, i32, i32, i32*) local_unnamed_addr #4

declare void @_ZN6tflite12tensor_utils18ReductionSumVectorEPKiPiii(i32*, i32*, i32, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 3"}
!8 = distinct !{!8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_"}
!9 = !{!10, !11, !12, !13}
!10 = distinct !{!10, !8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 0"}
!11 = distinct !{!11, !8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 1"}
!12 = distinct !{!12, !8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 2"}
!13 = distinct !{!13, !8, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 4"}
!14 = !{!11, !13}
!15 = !{!10, !12, !7}
!16 = !{!13}
!17 = !{!10, !11, !12, !7}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21, !19}
!21 = !{!"llvm.loop.unroll.runtime.disable"}
!22 = distinct !{!22, !4}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 3"}
!25 = distinct !{!25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_"}
!26 = !{!27, !28, !29, !30}
!27 = distinct !{!27, !25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 0"}
!28 = distinct !{!28, !25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 1"}
!29 = distinct !{!29, !25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 2"}
!30 = distinct !{!30, !25, !"_ZN6tflite13reference_opsL33ApplyTimeWeightsBiasAndActivationEiiiiiPKfS2_21TfLiteFusedActivationPfS4_S4_: argument 4"}
!31 = !{!28, !30}
!32 = !{!27, !29, !24}
!33 = !{!30}
!34 = !{!27, !28, !29, !24}
!35 = distinct !{!35, !19}
!36 = distinct !{!36, !21, !19}
!37 = distinct !{!37, !4}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN6tflite12tensor_utils17ApplyReluToVectorEPKfiPf: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite12tensor_utils17ApplyReluToVectorEPKfiPf"}
!41 = distinct !{!41, !40, !"_ZN6tflite12tensor_utils17ApplyReluToVectorEPKfiPf: argument 1"}
!42 = !{!39}
!43 = !{!41}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN6tflite12tensor_utils18ApplyRelu1ToVectorEPKfiPf: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite12tensor_utils18ApplyRelu1ToVectorEPKfiPf"}
!47 = distinct !{!47, !46, !"_ZN6tflite12tensor_utils18ApplyRelu1ToVectorEPKfiPf: argument 1"}
!48 = !{!45}
!49 = !{!47}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN6tflite12tensor_utils18ApplyRelu6ToVectorEPKfiPf: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite12tensor_utils18ApplyRelu6ToVectorEPKfiPf"}
!53 = distinct !{!53, !52, !"_ZN6tflite12tensor_utils18ApplyRelu6ToVectorEPKfiPf: argument 1"}
!54 = !{!51}
!55 = !{!53}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN6tflite12tensor_utils17ApplyTanhToVectorEPKfiPf: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite12tensor_utils17ApplyTanhToVectorEPKfiPf"}
!59 = distinct !{!59, !58, !"_ZN6tflite12tensor_utils17ApplyTanhToVectorEPKfiPf: argument 1"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6tflite12tensor_utils20ApplySignbitToVectorEPKfiPf: argument 0"}
!62 = distinct !{!62, !"_ZN6tflite12tensor_utils20ApplySignbitToVectorEPKfiPf"}
!63 = !{!64}
!64 = distinct !{!64, !62, !"_ZN6tflite12tensor_utils20ApplySignbitToVectorEPKfiPf: argument 1"}
!65 = distinct !{!65, !19}
!66 = distinct !{!66, !21, !19}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZN6tflite12tensor_utils20ApplySigmoidToVectorEPKfiPf: argument 0"}
!69 = distinct !{!69, !"_ZN6tflite12tensor_utils20ApplySigmoidToVectorEPKfiPf"}
!70 = distinct !{!70, !69, !"_ZN6tflite12tensor_utils20ApplySigmoidToVectorEPKfiPf: argument 1"}
!71 = !{i32 5578761}
!72 = !{i32 5580654}
!73 = !{!"branch_weights", i32 1, i32 2000}
!74 = !{!"branch_weights", i32 2000, i32 1}
