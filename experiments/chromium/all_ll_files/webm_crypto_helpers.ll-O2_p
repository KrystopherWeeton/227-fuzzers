; ModuleID = '../../media/formats/webm/webm_crypto_helpers.cc'
source_filename = "../../media/formats/webm/webm_crypto_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.3" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media23WebMCreateDecryptConfigEPKhiS1_iPNSt3__110unique_ptrINS_13DecryptConfigENS2_14default_deleteIS4_EEEEPi(i8* nocapture readonly, i32, i8* nocapture readonly, i32, %"class.std::__1::unique_ptr"* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %245, label %12

12:                                               ; preds = %6
  %13 = load i8, i8* %0, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #8
  %17 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #8
  %21 = zext i8 %13 to i32
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %169

26:                                               ; preds = %12
  %27 = icmp slt i32 %1, 9
  br i1 %27, label %229, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = getelementptr inbounds i8, i8* %0, i64 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #8, !alias.scope !2
  store i8 8, i8* %33, align 1, !alias.scope !2
  %34 = bitcast i8* %30 to i64*
  %35 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %36 = load i64, i64* %34, align 1, !noalias !2
  store i64 %36, i64* %35, align 8, !alias.scope !2
  %37 = bitcast i64* %31 to i8*
  store i8 0, i8* %37, align 8, !alias.scope !2
  %38 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* nonnull %9, i64 8, i8 signext 0) #8
  %39 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %28
  %44 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %43, %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %29, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  %46 = and i32 %21, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %169, label %48

48:                                               ; preds = %45
  %49 = icmp slt i32 %1, 10
  br i1 %49, label %229, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds i8, i8* %0, i64 9
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 2
  %55 = add nuw nsw i32 %54, 10
  %56 = icmp slt i32 %55, %1
  br i1 %56, label %57, label %229

57:                                               ; preds = %50
  %58 = zext i8 %52 to i64
  %59 = getelementptr inbounds i8, i8* %0, i64 10
  %60 = sub nsw i32 %1, %55
  %61 = bitcast %"class.std::__1::vector"* %8 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"struct.media::SubsampleEntry"** %19 to i64*
  store i64 %62, i64* %63, align 8
  %64 = bitcast %"struct.media::SubsampleEntry"** %20 to i64*
  br label %65

65:                                               ; preds = %166, %57
  %66 = phi i64 [ 0, %57 ], [ %92, %166 ]
  %67 = phi i64 [ 0, %57 ], [ %167, %166 ]
  %68 = phi i32 [ 0, %57 ], [ %91, %166 ]
  %69 = phi i32 [ 0, %57 ], [ %98, %166 ]
  %70 = icmp eq i64 %67, %58
  br i1 %70, label %90, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds i8, i8* %59, i64 %66
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 8
  %76 = getelementptr inbounds i8, i8* %72, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = shl nuw nsw i32 %79, 8
  %81 = getelementptr inbounds i8, i8* %72, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = or i32 %80, %83
  %85 = shl nuw i32 %84, 8
  %86 = getelementptr inbounds i8, i8* %72, i64 3
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  br label %90

90:                                               ; preds = %71, %65
  %91 = phi i32 [ %89, %71 ], [ %60, %65 ]
  %92 = add nuw nsw i64 %66, 4
  %93 = icmp ult i32 %91, %68
  br i1 %93, label %229, label %94

94:                                               ; preds = %90
  %95 = and i64 %67, 1
  %96 = icmp eq i64 %95, 0
  %97 = sub i32 %91, %68
  %98 = select i1 %96, i32 %97, i32 %69
  %99 = select i1 %96, i32 0, i32 %97
  %100 = xor i1 %96, true
  %101 = or i1 %70, %100
  br i1 %101, label %102, label %166

102:                                              ; preds = %94
  %103 = or i32 %98, %99
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %229, label %105

105:                                              ; preds = %102
  %106 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %19, align 8
  %107 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %20, align 8
  %108 = icmp ult %"struct.media::SubsampleEntry"* %106, %107
  %109 = ptrtoint %"struct.media::SubsampleEntry"* %107 to i64
  br i1 %108, label %110, label %118

110:                                              ; preds = %105
  %111 = bitcast %"struct.media::SubsampleEntry"* %106 to i64*
  %112 = zext i32 %99 to i64
  %113 = shl nuw i64 %112, 32
  %114 = zext i32 %98 to i64
  %115 = or i64 %113, %114
  store i64 %115, i64* %111, align 4
  %116 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %106, i64 1
  %117 = ptrtoint %"struct.media::SubsampleEntry"* %116 to i64
  store i64 %117, i64* %63, align 8
  br label %166

118:                                              ; preds = %105
  %119 = ptrtoint %"struct.media::SubsampleEntry"* %106 to i64
  %120 = load i64, i64* %61, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 2305843009213693951
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %126) #10
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %109, %120
  %129 = ashr exact i64 %128, 3
  %130 = icmp ult i64 %129, 1152921504606846975
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = ashr exact i64 %128, 2
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 2305843009213693951
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  call void @abort() #10
  unreachable

139:                                              ; preds = %136, %127
  %140 = phi i64 [ %134, %136 ], [ 2305843009213693951, %127 ]
  %141 = shl i64 %140, 3
  %142 = call i8* @_Znwm(i64 %141) #9
  %143 = bitcast i8* %142 to %"struct.media::SubsampleEntry"*
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi i8* [ %142, %139 ], [ null, %131 ]
  %147 = phi %"struct.media::SubsampleEntry"* [ %143, %139 ], [ null, %131 ]
  %148 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %147, i64 %122
  %149 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %147, i64 %145
  %150 = ptrtoint %"struct.media::SubsampleEntry"* %149 to i64
  %151 = bitcast %"struct.media::SubsampleEntry"* %148 to i64*
  %152 = zext i32 %99 to i64
  %153 = shl nuw i64 %152, 32
  %154 = zext i32 %98 to i64
  %155 = or i64 %153, %154
  store i64 %155, i64* %151, align 4
  %156 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %148, i64 1
  %157 = ptrtoint %"struct.media::SubsampleEntry"* %156 to i64
  %158 = ptrtoint %"struct.media::SubsampleEntry"* %147 to i64
  %159 = icmp sgt i64 %121, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = inttoptr i64 %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %161, i64 %121, i1 false) #8
  br label %162

162:                                              ; preds = %160, %144
  store i64 %158, i64* %61, align 8
  store i64 %157, i64* %63, align 8
  store i64 %150, i64* %64, align 8
  %163 = icmp eq i64 %120, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = inttoptr i64 %120 to i8*
  call void @_ZdlPv(i8* %165) #9
  br label %166

166:                                              ; preds = %164, %162, %110, %94
  %167 = add nuw nsw i64 %67, 1
  %168 = icmp eq i64 %67, %58
  br i1 %168, label %169, label %65

169:                                              ; preds = %166, %24, %45
  %170 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %25, %24 ], [ %39, %45 ], [ %39, %166 ]
  %171 = phi i32 [ 1, %24 ], [ 9, %45 ], [ %55, %166 ]
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = load i64, i64* %16, align 8
  %176 = zext i8 %173 to i64
  %177 = select i1 %174, i64 %175, i64 %176
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.media::DecryptConfig"*, %"class.media::DecryptConfig"** %180, align 8
  store %"class.media::DecryptConfig"* null, %"class.media::DecryptConfig"** %180, align 8
  %182 = icmp eq %"class.media::DecryptConfig"* %181, null
  br i1 %182, label %228, label %183

183:                                              ; preds = %179
  call void @_ZN5media13DecryptConfigD1Ev(%"class.media::DecryptConfig"* nonnull %181) #8
  %184 = bitcast %"class.media::DecryptConfig"* %181 to i8*
  call void @_ZdlPv(i8* %184) #9
  br label %228

185:                                              ; preds = %169
  %186 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #8
  %187 = sext i32 %3 to i64
  %188 = icmp ugt i32 %3, -17
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %190) #10
  unreachable

191:                                              ; preds = %185
  %192 = icmp ult i32 %3, 23
  br i1 %192, label %201, label %193

193:                                              ; preds = %191
  %194 = add nuw nsw i64 %187, 16
  %195 = and i64 %194, -16
  %196 = call i8* @_Znwm(i64 %195) #9
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %196, i8** %197, align 8
  %198 = or i64 %195, -9223372036854775808
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %187, i64* %200, align 8
  br label %206

201:                                              ; preds = %191
  %202 = trunc i32 %3 to i8
  %203 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  store i8 %202, i8* %204, align 1
  %205 = icmp eq i32 %3, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %201, %193
  %207 = phi i8* [ %196, %193 ], [ %186, %201 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %207, i8* align 1 %2, i64 %187, i1 false) #8
  br label %208

208:                                              ; preds = %201, %206
  %209 = phi i8* [ %186, %201 ], [ %207, %206 ]
  %210 = getelementptr inbounds i8, i8* %209, i64 %187
  store i8 0, i8* %210, align 1
  %211 = call %"class.media::DecryptConfig"* @_ZN5media13DecryptConfig16CreateCencConfigERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS1_6vectorINS_14SubsampleEntryENS5_ISB_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #8
  %212 = ptrtoint %"class.media::DecryptConfig"* %211 to i64
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.media::DecryptConfig"*, %"class.media::DecryptConfig"** %213, align 8
  %215 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %212, i64* %215, align 8
  %216 = icmp eq %"class.media::DecryptConfig"* %214, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %208
  call void @_ZN5media13DecryptConfigD1Ev(%"class.media::DecryptConfig"* nonnull %214) #8
  %218 = bitcast %"class.media::DecryptConfig"* %214 to i8*
  call void @_ZdlPv(i8* %218) #9
  br label %219

219:                                              ; preds = %217, %208
  %220 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #9
  br label %227

227:                                              ; preds = %219, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #8
  br label %228

228:                                              ; preds = %183, %179, %227
  store i32 %171, i32* %5, align 4
  br label %229

229:                                              ; preds = %102, %90, %50, %48, %26, %228
  %230 = phi i1 [ true, %228 ], [ false, %26 ], [ false, %48 ], [ false, %50 ], [ false, %90 ], [ false, %102 ]
  %231 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %18, align 8
  %232 = icmp eq %"struct.media::SubsampleEntry"* %231, null
  br i1 %232, label %237, label %233

233:                                              ; preds = %229
  %234 = ptrtoint %"struct.media::SubsampleEntry"* %231 to i64
  %235 = bitcast %"struct.media::SubsampleEntry"** %19 to i64*
  store i64 %234, i64* %235, align 8
  %236 = bitcast %"struct.media::SubsampleEntry"* %231 to i8*
  call void @_ZdlPv(i8* %236) #9
  br label %237

237:                                              ; preds = %229, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  %238 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %243) #9
  br label %244

244:                                              ; preds = %237, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  br label %245

245:                                              ; preds = %6, %244
  %246 = phi i1 [ %230, %244 ], [ false, %6 ]
  ret i1 %246
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.media::DecryptConfig"* @_ZN5media13DecryptConfig16CreateCencConfigERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS1_6vectorINS_14SubsampleEntryENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media13DecryptConfigD1Ev(%"class.media::DecryptConfig"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5media12_GLOBAL__N_124GenerateWebMCounterBlockEPKhi: argument 0"}
!4 = distinct !{!4, !"_ZN5media12_GLOBAL__N_124GenerateWebMCounterBlockEPKhi"}
