; ModuleID = '../../third_party/dawn/src/dawn_native/ErrorData.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/ErrorData.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.3" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN11dawn_native9ErrorDataC1ENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.dawn_native::ErrorData"*, i32, %"class.std::__1::basic_string"*), void (%"class.dawn_native::ErrorData"*, i32, %"class.std::__1::basic_string"*)* @_ZN11dawn_native9ErrorDataC2ENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"* nocapture readonly, i8*, i8*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %8 = tail call i8* @_Znwm(i64 56) #8
  %9 = bitcast i8* %8 to %"class.dawn_native::ErrorData"*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %15, i64 24, i1 false) #9
  br label %21

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %18, i64 %20) #9
  br label %21

21:                                               ; preds = %14, %16
  %22 = bitcast i8* %8 to i32*
  store i32 %0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %7, i64 24, i1 false) #9
  %24 = getelementptr inbounds i8, i8* %8, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7)
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %9, i8* %2, i8* %3, i32 %4)
  ret %"class.dawn_native::ErrorData"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %6, align 8
  %8 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %8, align 8
  %10 = icmp ult %"struct.dawn_native::ErrorData::BacktraceRecord"* %7, %9
  %11 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %9 to i64
  br i1 %10, label %12, label %22

12:                                               ; preds = %4
  %13 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %7 to i8*
  %14 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %7, i64 0, i32 0
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %7, i64 0, i32 1
  store i8* %2, i8** %15, align 8
  %16 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %7, i64 0, i32 2
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 20
  %18 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %7, i64 1
  %20 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %19 to i64
  %21 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %6 to i64*
  store i64 %20, i64* %21, align 8
  br label %80

22:                                               ; preds = %4
  %23 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %7 to i64
  %24 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %6 to i64*
  %25 = bitcast %"class.std::__1::vector"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = sdiv exact i64 %27, 24
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 768614336404564650
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #10
  unreachable

33:                                               ; preds = %22
  %34 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %8 to i64*
  %35 = sub i64 %11, %26
  %36 = sdiv exact i64 %35, 24
  %37 = icmp ult i64 %36, 384307168202282325
  br i1 %37, label %38, label %43

38:                                               ; preds = %33
  %39 = shl nsw i64 %36, 1
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38, %33
  %44 = phi i64 [ %41, %38 ], [ 768614336404564650, %33 ]
  %45 = mul i64 %44, 24
  %46 = tail call i8* @_Znwm(i64 %45) #8
  %47 = bitcast i8* %46 to %"struct.dawn_native::ErrorData::BacktraceRecord"*
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i64 [ %44, %43 ], [ 0, %38 ]
  %50 = phi %"struct.dawn_native::ErrorData::BacktraceRecord"* [ %47, %43 ], [ null, %38 ]
  %51 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %50, i64 %28
  %52 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %50, i64 %49
  %53 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %52 to i64
  %54 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %51 to i8*
  %55 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %51, i64 0, i32 0
  store i8* %1, i8** %55, align 8
  %56 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %50, i64 %28, i32 1
  store i8* %2, i8** %56, align 8
  %57 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %50, i64 %28, i32 2
  store i32 %3, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %54, i64 20
  %59 = bitcast i8* %58 to i32*
  store i32 -1431655766, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %51, i64 1
  %61 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %63 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %62, align 8
  %64 = load i64, i64* %24, align 8
  %65 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %63 to i64
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, -24
  %68 = getelementptr inbounds %"struct.dawn_native::ErrorData::BacktraceRecord", %"struct.dawn_native::ErrorData::BacktraceRecord"* %51, i64 %67
  %69 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %68 to i64
  %70 = icmp sgt i64 %66, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %48
  %72 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %68 to i8*
  %73 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %66, i1 false) #9
  %74 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %62, align 8
  br label %75

75:                                               ; preds = %71, %48
  %76 = phi %"struct.dawn_native::ErrorData::BacktraceRecord"* [ %63, %48 ], [ %74, %71 ]
  store i64 %69, i64* %25, align 8
  store i64 %61, i64* %24, align 8
  store i64 %53, i64* %34, align 8
  %77 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #8
  br label %80

80:                                               ; preds = %12, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native9ErrorDataC2ENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.dawn_native::ErrorData"* nocapture, i32, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native9ErrorData7GetTypeEv(%"class.dawn_native::ErrorData"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11dawn_native9ErrorData10GetMessageEv(%"class.dawn_native::ErrorData"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 1
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK11dawn_native9ErrorData12GetBacktraceEv(%"class.dawn_native::ErrorData"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %0, i64 0, i32 2
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
