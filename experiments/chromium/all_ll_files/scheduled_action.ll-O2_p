; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/scheduled_action.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/scheduled_action.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.51"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.58"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.65"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.72"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.205" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.351" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__cxx_atomic_impl.354" }
%"struct.std::__1::__cxx_atomic_impl.354" = type { %"struct.std::__1::__cxx_atomic_base_impl.355" }
%"struct.std::__1::__cxx_atomic_base_impl.355" = type { i32 }
%"class.blink::ScheduledAction" = type { %"class.blink::NameClient", %"class.blink::Member", %"class.blink::Member.185", %"class.blink::HeapVector", %"class.WTF::String" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptStateProtectingContext"* }
%"class.blink::ScriptStateProtectingContext" = type { %"class.blink::Member.2", %"class.blink::ScopedPersistent" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ScriptState"* }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::V8Function"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.194", %class.scoped_refptr.197 }
%"class.blink::TraceWrapperV8Reference.194" = type { %"class.v8::TracedReference.195" }
%"class.v8::TracedReference.195" = type { %"class.v8::BasicTracedReference.196" }
%"class.v8::BasicTracedReference.196" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr.197 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::String" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.200" }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i32 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.181", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.183" }
%"class.blink::Persistent.183" = type { %"class.blink::PersistentBase.184" }
%"class.blink::PersistentBase.184" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.276", i32, i8, [3 x i8], %"class.blink::HeapVector.278", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.297", %"class.blink::Member.438", %"class.blink::Member.440", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.210" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.210" = type { %"class.WTF::HashMap.213" }
%"class.WTF::HashMap.213" = type { %"class.WTF::HashTable.214" }
%"class.WTF::HashTable.214" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.222" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"class.blink::WeakMember.221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.221" = type opaque
%"class.blink::Supplementable.222" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.223" }
%"class.blink::HeapHashMap.223" = type { %"class.WTF::HashMap.226" }
%"class.WTF::HashMap.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { i8*, %"class.blink::Member.1801" }
%"class.blink::Member.1801" = type { %"class.blink::MemberBase.1802" }
%"class.blink::MemberBase.1802" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1803" }
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.230, %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264", %"class.blink::Member.270", i32, [4 x i8], %"class.WTF::HashSet.272", i32, i32 }
%class.scoped_refptr.230 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.231", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.233 }
%"class.WTF::RefCounted.231" = type { %"class.base::RefCounted.232" }
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.233 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.251", %"class.std::__1::map.260"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.239 }
%union.anon.239 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.260" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.290", i32, i32 }
%"class.blink::HeapHashMap.290" = type { %"class.WTF::HashMap.293" }
%"class.WTF::HashMap.293" = type { %"class.WTF::HashTable.294" }
%"class.WTF::HashTable.294" = type <{ %"struct.WTF::KeyValuePair.296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.296" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.300" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.303" }
%"class.WTF::Vector.303" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"class.mojo::StructPtr.306"*, i32, i32 }
%"class.mojo::StructPtr.306" = type { %"class.std::__1::unique_ptr.307" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.310", %"class.WTF::HashMap.317", %"class.WTF::HashMap.322", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.327", i32, %"class.mojo::StructPtr.332", %"class.WTF::Vector.327" }
%"class.mojo::StructPtr.310" = type { %"class.std::__1::unique_ptr.311" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.317" = type { %"class.WTF::HashTable.318" }
%"class.WTF::HashTable.318" = type <{ %"struct.WTF::KeyValuePair.321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.321" = type opaque
%"class.WTF::HashMap.322" = type { %"class.WTF::HashTable.323" }
%"class.WTF::HashTable.323" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.332" = type { %"class.std::__1::unique_ptr.333" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.327", i8, i8, [6 x i8] }>
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.429" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.347", i32 }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.356", %"class.absl::optional.361", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.382", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.404", %"class.std::__1::map.415", i64, %"class.base::OnceCallback.375", %"class.base::OnceCallback.424", i8, %class.scoped_refptr.366, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.425" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.350 }
%class.scoped_refptr.350 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.351" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.356" = type { %"class.absl::optional_internal::optional_data.357" }
%"class.absl::optional_internal::optional_data.357" = type { %"class.absl::optional_internal::optional_data_base.358" }
%"class.absl::optional_internal::optional_data_base.358" = type { %"class.absl::optional_internal::optional_data_dtor_base.359" }
%"class.absl::optional_internal::optional_data_dtor_base.359" = type { i8, %union.anon.360 }
%union.anon.360 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.375" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.366, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.369", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.369" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.370" }
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.380 }
%class.scoped_refptr.380 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.442", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.366, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.200", [4 x i8] }>
%"class.base::RefCountedThreadSafe.442" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.381 }
%class.scoped_refptr.381 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.385", %class.scoped_refptr.386 }
%"class.base::RepeatingCallback.385" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.386 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.387", [4 x i8] }>
%"class.base::RefCountedThreadSafe.387" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.397", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.403" }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.403" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.404" = type { %"class.std::__1::__tree.405" }
%"class.std::__1::__tree.405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.415" = type { %"class.std::__1::__tree.416" }
%"class.std::__1::__tree.416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::OnceCallback.375" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.424" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.366 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.367" }>
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.375" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.425" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::V8Function" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.577", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.585", %"class.blink::Member.587", %"class.blink::Member.589", i8, %"class.blink::Member.591", %"class.blink::Member.593", %"class.blink::Member.595", %"class.blink::Member.595", %"class.blink::Member.595", %"class.blink::Member.595", %"class.blink::Member.595", %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::Member.599", %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.327", %"class.blink::Member.607", %class.scoped_refptr.609, %"class.blink::HeapHashSet.671", %"class.blink::Member.678", %"class.blink::HeapHashMap.691", %"class.std::__1::unique_ptr.698", %"class.blink::Member.710", %"class.blink::Member.739", %"class.blink::Member.749", %"class.blink::Member.755", %"class.WTF::Vector.758", %"class.util::TokenType.475", %"class.WTF::HashSet.763", %"class.WTF::Deque.767" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", i8, %"class.WTF::Vector.472" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.457" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.445" }
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450", [32 x i8] }
%"class.WTF::VectorBufferBase.450" = type { %"struct.std::__1::pair.451"*, i32, i32 }
%"struct.std::__1::pair.451" = type { %"class.WTF::AtomicString", %"class.blink::Member.452" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::HeapVector.454"* }
%"class.blink::HeapVector.454" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.WTF::Vector.460"* }
%"class.WTF::Vector.460" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", i8, i32, i8, i32, %"class.blink::Member.879", %"class.blink::Member.466", %"class.blink::FrameLifecycle", %"class.blink::Member.464", %"class.blink::Member.464", %"class.blink::Member.464", %"class.blink::Member.464", %"class.blink::Member.464", %"class.blink::Member.464", %"class.blink::Member.716", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.889", i8, %"class.base::UnguessableToken", %"class.absl::optional.891", %"class.absl::optional.896", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.464", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.909", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.917", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.925", %"class.blink::FrameLoader", %"class.blink::Member.952", %"class.blink::Member.789", %"class.blink::Member.954", %"class.blink::Member.956", %"class.blink::Member.958", %"class.blink::Member.960", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.962", %class.scoped_refptr.964, %"class.blink::Member.965", %"class.blink::Member.967", %"class.blink::Member.969", %"class.blink::Member.971", %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.979", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.982", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.988", %"class.std::__1::unique_ptr.989", %"class.absl::optional.896", i32, [4 x i8], %"class.std::__1::unique_ptr.995", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1003", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1008", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1013", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1016", %"class.blink::Member.1018", %"class.blink::Member.1020", %"class.blink::Member.1022", %"class.mojo::StructPtr.1025", %"class.blink::Member.1034", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1036", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.909" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.910" }
%"class.blink::HeapHashMap.910" = type { %"class.WTF::HashMap.913" }
%"class.WTF::HashMap.913" = type { %"class.WTF::HashTable.914" }
%"class.WTF::HashTable.914" = type <{ %"struct.WTF::KeyValuePair.916"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.916" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.701", %"class.base::WeakPtrFactory.706" }
%"class.WTF::HashMap.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"struct.WTF::KeyValuePair.705"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.705" = type opaque
%"class.base::WeakPtrFactory.706" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.923" }
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.714" }
%"class.blink::WeakMember.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1813", i64, %"class.std::__1::map.1814", i8*, i64, %"class.base::WeakPtrFactory.1823" }
%"class.base::RepeatingCallback.1813" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1814" = type { %"class.std::__1::__tree.1815" }
%"class.std::__1::__tree.1815" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1816", %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::WeakPtrFactory.1823" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.925" = type { %"class.WTF::HashSet.928" }
%"class.WTF::HashSet.928" = type { %"class.WTF::HashTable.929" }
%"class.WTF::HashTable.929" = type <{ %"class.blink::WeakMember.931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.931" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.716", %"class.blink::Member.932", %"class.blink::Member.934", %"class.std::__1::unique_ptr.936", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.948" }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.939" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.199 }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1043", %"class.blink::Member.716", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1051", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::Member.1058", %"class.std::__1::unique_ptr.1061", i32, [4 x i8], %"class.WTF::HashSet.1064", %"class.blink::Member.1071", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1073", %"class.blink::HeapHashSet.1080", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1088", i8, %"class.blink::Member.1094", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1106", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1120", i8, %"class.std::__1::unique_ptr.1126", %"class.std::__1::unique_ptr.1243", %"class.WTF::Vector.1249", i32, %class.scoped_refptr.1254, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1255", %"class.blink::Member.1257", %"class.blink::Member.1259", %"class.blink::HeapHashSet.1261", %"class.blink::HeapHashSet.1268", %"class.std::__1::unique_ptr.1275", %"class.std::__1::unique_ptr.1282", %"class.WTF::Vector.1293" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %class.scoped_refptr.1047*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1047 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1050", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1048, %"class.base::WeakPtrFactory.1049" }
%class.scoped_refptr.1048 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1049" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.953" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1051" = type { %"class.absl::optional_internal::optional_data.1052" }
%"class.absl::optional_internal::optional_data.1052" = type { %"class.absl::optional_internal::optional_data_base.1053" }
%"class.absl::optional_internal::optional_data_base.1053" = type { %"class.absl::optional_internal::optional_data_dtor_base.1054" }
%"class.absl::optional_internal::optional_data_dtor_base.1054" = type { i8, %union.anon.1055 }
%union.anon.1055 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::HeapHashSet.1060"* }
%"class.blink::HeapHashSet.1060" = type opaque
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.WTF::HashSet.1064"* }
%"class.WTF::HashSet.1064" = type { %"class.WTF::HashTable.1065" }
%"class.WTF::HashTable.1065" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1073" = type { %"class.WTF::HashSet.1076" }
%"class.WTF::HashSet.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"class.blink::Member.1079"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1079" = type opaque
%"class.blink::HeapHashSet.1080" = type { %"class.WTF::HashSet.1083" }
%"class.WTF::HashSet.1083" = type { %"class.WTF::HashTable.1084" }
%"class.WTF::HashTable.1084" = type <{ %"class.blink::Member.1086"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1321", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1332", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.789" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1323", %"class.blink::Member.1324", %"class.blink::Member.1326", %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.WTF::Vector.1293", i16, %class.scoped_refptr.1048 }
%"class.blink::ThreadState::PrefinalizerRegistration.1323" = type { i8 }
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1332" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1333", { i64, i64 } }
%"class.blink::WeakMember.1333" = type { %"class.blink::MemberBase.1087" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1098", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1101" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1102", i32, i32 }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1106" = type { %"class.WTF::LinkedHashSet.1109" }
%"class.WTF::LinkedHashSet.1109" = type { %"class.WTF::HashMap.1110", %"class.WTF::VectorBackedLinkedList.1114" }
%"class.WTF::HashMap.1110" = type { %"class.WTF::HashTable.1111" }
%"class.WTF::HashTable.1111" = type <{ %"struct.WTF::KeyValuePair.1113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1113" = type opaque
%"class.WTF::VectorBackedLinkedList.1114" = type { %"class.WTF::Vector.1115", i32, i32 }
%"class.WTF::Vector.1115" = type { %"class.WTF::VectorBuffer.1116" }
%"class.WTF::VectorBuffer.1116" = type { %"class.WTF::VectorBufferBase.1117" }
%"class.WTF::VectorBufferBase.1117" = type { %"class.WTF::VectorBackedLinkedListNode.1118"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1118" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1129, %class.scoped_refptr.1129, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1220", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1225", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1129 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1130", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1137" }
%"class.WTF::RefCounted.1130" = type { %"class.base::RefCounted.1131" }
%"class.base::RefCounted.1131" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1132", i32, [4 x i8] }>
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1137" = type { %"class.WTF::VectorBuffer.1138" }
%"class.WTF::VectorBuffer.1138" = type { %"class.WTF::VectorBufferBase.1139" }
%"class.WTF::VectorBufferBase.1139" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1143", %"class.std::__1::unique_ptr.1192", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1140, %class.scoped_refptr.1141, %class.scoped_refptr.1142 }
%class.scoped_refptr.1140 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1156", i8, i8, %class.scoped_refptr.1140, i32, i32 }
%"class.WTF::RefCounted.1156" = type { %"class.base::RefCounted.1157" }
%"class.base::RefCounted.1157" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1141 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1316" }
%"class.blink::PaintPropertyNode.1316" = type { %"class.WTF::RefCounted.1317", i8, i8, %class.scoped_refptr.1141, i32, i32 }
%"class.WTF::RefCounted.1317" = type { %"class.base::RefCounted.1318" }
%"class.base::RefCounted.1318" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1142 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1313" }
%"class.blink::PaintPropertyNode.1313" = type { %"class.WTF::RefCounted.1314", i8, i8, %class.scoped_refptr.1142, i32, i32 }
%"class.WTF::RefCounted.1314" = type { %"class.base::RefCounted.1315" }
%"class.base::RefCounted.1315" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1146", %"class.WTF::Vector.1151", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1146" = type { %"class.WTF::VectorBuffer.1147" }
%"class.WTF::VectorBuffer.1147" = type { %"class.WTF::VectorBufferBase.1148" }
%"class.WTF::VectorBufferBase.1148" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1151" = type { %"class.WTF::VectorBuffer.1152" }
%"class.WTF::VectorBuffer.1152" = type { %"class.WTF::VectorBufferBase.1153" }
%"class.WTF::VectorBufferBase.1153" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1171" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1164, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1165", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1158" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1164 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1298", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1298" = type { %"class.WTF::RefCounted.1299", i8, i8, %class.scoped_refptr.1164, i32, i32 }
%"class.WTF::RefCounted.1299" = type { %"class.base::RefCounted.1300" }
%"class.base::RefCounted.1300" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1301" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1301" = type { %"class.absl::optional_internal::optional_data.1302" }
%"class.absl::optional_internal::optional_data.1302" = type { %"class.absl::optional_internal::optional_data_base.1303" }
%"class.absl::optional_internal::optional_data_base.1303" = type { %"class.absl::optional_internal::optional_data_dtor_base.1304" }
%"class.absl::optional_internal::optional_data_dtor_base.1304" = type { i8, %union.anon.1305 }
%union.anon.1305 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1306", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1306" = type { %"class.std::__1::__vector_base.1307" }
%"class.std::__1::__vector_base.1307" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1308" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1171" = type { %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1180", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1195", %"class.absl::optional.1195" }
%"class.absl::optional.1195" = type { %"class.absl::optional_internal::optional_data.1196" }
%"class.absl::optional_internal::optional_data.1196" = type { %"class.absl::optional_internal::optional_data_base.1197" }
%"class.absl::optional_internal::optional_data_base.1197" = type { %"class.absl::optional_internal::optional_data_dtor_base.1198" }
%"class.absl::optional_internal::optional_data_dtor_base.1198" = type { i8, [3 x i8], %union.anon.1199 }
%union.anon.1199 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1137"*, %"class.absl::optional.1205", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1205" = type { %"class.absl::optional_internal::optional_data.1206" }
%"class.absl::optional_internal::optional_data.1206" = type { %"class.absl::optional_internal::optional_data_base.1207" }
%"class.absl::optional_internal::optional_data_base.1207" = type { %"class.absl::optional_internal::optional_data_dtor_base.1208" }
%"class.absl::optional_internal::optional_data_dtor_base.1208" = type { i8, %union.anon.1209 }
%union.anon.1209 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1210", %"class.WTF::Vector.1215" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212", [128 x i8] }
%"class.WTF::VectorBufferBase.1212" = type { i32*, i32, i32 }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217", [128 x i8] }
%"class.WTF::VectorBufferBase.1217" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"struct.WTF::KeyValuePair.1229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1229" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1230", %"class.WTF::Vector.1235" }
%"class.WTF::HashMap.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"struct.WTF::KeyValuePair.1234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1234" = type opaque
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1249" = type { %"class.WTF::VectorBuffer.1250" }
%"class.WTF::VectorBuffer.1250" = type { %"class.WTF::VectorBufferBase.1251" }
%"class.WTF::VectorBufferBase.1251" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1254 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1261" = type { %"class.WTF::HashSet.1264" }
%"class.WTF::HashSet.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"class.blink::WeakMember.1267"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1267" = type opaque
%"class.blink::HeapHashSet.1268" = type { %"class.WTF::HashSet.1271" }
%"class.WTF::HashSet.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"class.blink::WeakMember.1274"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1274" = type opaque
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1278" }
%"class.base::time_internal::TimeBase.1278" = type { i64 }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1285", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %"class.base::Time" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %"class.base::OnceCallback.375"*, i32, i32 }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.794" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.720", %"class.blink::Member.720" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.720", %"class.blink::Member.722", %"class.blink::Member.720", %"class.blink::Member.720", %"class.blink::Member.724" }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.772", %"class.blink::Member.587", %"class.blink::Member.722", %"class.blink::Member.774", %"class.blink::Member.774", %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.826", %"class.blink::HeapVector.828" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.778" }
%"class.blink::HeapHashMap.778" = type { %"class.WTF::HashMap.781" }
%"class.WTF::HashMap.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"struct.WTF::KeyValuePair.784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.784" = type { %"class.WTF::AtomicString", %"class.blink::Member.785" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.789", i32, %"class.blink::HeapVector.810" }
%"class.blink::HeapVector.810" = type { %"class.WTF::Vector.813" }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::Member.789"*, i32, i32 }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.823" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::HeapHashMap.825"* }
%"class.blink::HeapHashMap.825" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.828" = type { %"class.WTF::Vector.831" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"class.blink::Member.834"*, i32, i32 }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.836", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.838, %"class.WTF::Vector.839", %"class.WTF::Vector.839", %"class.blink::Member.720", %"class.blink::Member.844", %"class.blink::HeapHashSet.848", %"class.blink::Member.587", %"class.WTF::HashSet.855", %"class.WTF::TextPosition", %"class.blink::Member.859", %"class.blink::HeapVector.861", %"class.blink::Member.868" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.838 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.839" = type { %"class.WTF::VectorBuffer.840" }
%"class.WTF::VectorBuffer.840" = type { %"class.WTF::VectorBufferBase.841" }
%"class.WTF::VectorBufferBase.841" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.846" }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.848" = type { %"class.WTF::HashSet.851" }
%"class.WTF::HashSet.851" = type { %"class.WTF::HashTable.852" }
%"class.WTF::HashTable.852" = type <{ %"class.blink::WeakMember.854"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.854" = type { %"class.blink::MemberBase.723" }
%"class.WTF::HashSet.855" = type { %"class.WTF::HashTable.856" }
%"class.WTF::HashTable.856" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.861" = type { %"class.WTF::Vector.864" }
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { %"class.blink::Member.844"*, i32, i32 }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.791 }
%class.scoped_refptr.791 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.792", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.792" = type { %"class.base::RefCounted.793" }
%"class.base::RefCounted.793" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.798", %"class.blink::Member.800", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.798" = type { %"class.WTF::SingleThreadedBitField.799" }
%"class.WTF::SingleThreadedBitField.799" = type { i32 }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.802 }
%class.scoped_refptr.802 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.803", %"class.WTF::AtomicString", %"class.WTF::Vector.805" }
%"class.WTF::RefCounted.803" = type { %"class.base::RefCounted.804" }
%"class.base::RefCounted.804" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.805" = type { %"class.WTF::VectorBuffer.806" }
%"class.WTF::VectorBuffer.806" = type { %"class.WTF::VectorBufferBase.807", [32 x i8] }
%"class.WTF::VectorBufferBase.807" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.964 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.979" = type { %"class.blink::Member.980" }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1826" }
%"class.mojo::Remote.1826" = type { %"class.mojo::internal::InterfacePtrState.1827" }
%"class.mojo::internal::InterfacePtrState.1827" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1828" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.477, %"class.std::__1::unique_ptr.347", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.366, i32 }>
%class.scoped_refptr.477 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.366, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.535", %"class.absl::optional.540", %"class.absl::optional.494", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.560", i8, [7 x i8], %class.scoped_refptr.366, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.387" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.375", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.366, %"class.std::__1::unique_ptr.478", %"class.absl::optional.488", %"struct.std::__1::atomic.177", i8, i8, i8, i8, i32, i32, %"class.absl::optional.494", %"class.std::__1::unique_ptr.499", i8, i64, %class.scoped_refptr.532, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.534" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.366, i8, %"class.mojo::ScopedHandleBase.481", %class.scoped_refptr.482, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.483", i8*, %"class.base::WeakPtrFactory.484" }
%"class.mojo::ScopedHandleBase.481" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.482 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.483" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.484" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.488" = type { %"class.absl::optional_internal::optional_data.489" }
%"class.absl::optional_internal::optional_data.489" = type { %"class.absl::optional_internal::optional_data_base.490" }
%"class.absl::optional_internal::optional_data_base.490" = type { %"class.absl::optional_internal::optional_data_dtor_base.491" }
%"class.absl::optional_internal::optional_data_dtor_base.491" = type { i8, %union.anon.492 }
%union.anon.492 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.493", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.493" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.502", i8, i64, %class.scoped_refptr.503, %class.scoped_refptr.528 }
%"class.base::RepeatingCallback.502" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.503 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.504", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.506", %"class.std::__1::map.517", i8, [7 x i8] }>
%"class.base::RefCounted.504" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.505 }
%class.scoped_refptr.505 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.506" = type { %"class.std::__1::__tree.507" }
%"class.std::__1::__tree.507" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::map.517" = type { %"class.std::__1::__tree.518" }
%"class.std::__1::__tree.518" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%class.scoped_refptr.528 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.532 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.533 }
%class.scoped_refptr.533 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.534" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.535" = type { %"class.absl::optional_internal::optional_data.536" }
%"class.absl::optional_internal::optional_data.536" = type { %"class.absl::optional_internal::optional_data_base.537" }
%"class.absl::optional_internal::optional_data_base.537" = type { %"class.absl::optional_internal::optional_data_dtor_base.538" }
%"class.absl::optional_internal::optional_data_dtor_base.538" = type { i8, %union.anon.539 }
%union.anon.539 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, [7 x i8], %union.anon.544 }
%union.anon.544 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.494" = type { %"class.absl::optional_internal::optional_data.495" }
%"class.absl::optional_internal::optional_data.495" = type { %"class.absl::optional_internal::optional_data_base.496" }
%"class.absl::optional_internal::optional_data_base.496" = type { %"class.absl::optional_internal::optional_data_dtor_base.497" }
%"class.absl::optional_internal::optional_data_dtor_base.497" = type { i8, %union.anon.498 }
%union.anon.498 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.545 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.545 = type { %"class.std::__1::map.548" }
%"class.std::__1::map.548" = type { %"class.std::__1::__tree.549" }
%"class.std::__1::__tree.549" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.559"*, i64 }
%"class.std::__1::unique_ptr.559" = type opaque
%"class.std::__1::map.560" = type { %"class.std::__1::__tree.561" }
%"class.std::__1::__tree.561" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.988" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1001" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1836" }
%"class.mojo::AssociatedRemote.1836" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1837" }
%"class.mojo::internal::AssociatedInterfacePtrState.1837" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1838" }
%"class.std::__1::unique_ptr.1838" = type { %"class.std::__1::__compressed_pair.1839" }
%"class.std::__1::__compressed_pair.1839" = type { %"struct.std::__1::__compressed_pair_elem.1840" }
%"struct.std::__1::__compressed_pair_elem.1840" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1003" = type { %"class.blink::Member.1004" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1846" }
%"class.mojo::AssociatedRemote.1846" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1847" }
%"class.mojo::internal::AssociatedInterfacePtrState.1847" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1848" }
%"class.std::__1::unique_ptr.1848" = type { %"class.std::__1::__compressed_pair.1849" }
%"class.std::__1::__compressed_pair.1849" = type { %"struct.std::__1::__compressed_pair_elem.1850" }
%"struct.std::__1::__compressed_pair_elem.1850" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1006" }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1856", %"class.blink::Member.716", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1856" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1857" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.347" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1008" = type { %"class.blink::Member.1009" }
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1860", %"class.blink::Member.716", %"class.mojo::AssociatedReceiver.1861" }
%"class.blink::ThreadState::PrefinalizerRegistration.1860" = type { i8 }
%"class.mojo::AssociatedReceiver.1861" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1862" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1011" }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1865", %"class.blink::Member.716", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1865" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.477, %"class.std::__1::unique_ptr.347", %"class.base::WeakPtrFactory.1866" }
%"class.base::WeakPtrFactory.1866" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1013" = type { %"class.blink::Member.1014" }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1869", %"class.blink::Member.716", %"class.mojo::AssociatedReceiver.1870" }
%"class.blink::ThreadState::PrefinalizerRegistration.1869" = type { i8 }
%"class.mojo::AssociatedReceiver.1870" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1871" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1871" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::HeapHashMap.1024"* }
%"class.blink::HeapHashMap.1024" = type opaque
%"class.mojo::StructPtr.1025" = type { %"class.std::__1::unique_ptr.1026" }
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1029", %"class.mojo::InlinedStructPtr.1030" }
%"class.mojo::InlinedStructPtr.1029" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1030" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1036" = type { %"class.absl::optional_internal::optional_data.1037" }
%"class.absl::optional_internal::optional_data.1037" = type { %"class.absl::optional_internal::optional_data_base.1038" }
%"class.absl::optional_internal::optional_data_base.1038" = type { %"class.absl::optional_internal::optional_data_dtor_base.1039" }
%"class.absl::optional_internal::optional_data_dtor_base.1039" = type { i8, %union.anon.1040 }
%union.anon.1040 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.464", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.881" }
%"class.std::__1::vector.881" = type { %"class.std::__1::__vector_base.882" }
%"class.std::__1::__vector_base.882" = type { %"struct.std::__1::pair.883"*, %"struct.std::__1::pair.883"*, %"class.std::__1::__compressed_pair.884" }
%"struct.std::__1::pair.883" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::pair.883"* }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.891" = type { %"class.absl::optional_internal::optional_data.892" }
%"class.absl::optional_internal::optional_data.892" = type { %"class.absl::optional_internal::optional_data_base.893" }
%"class.absl::optional_internal::optional_data_base.893" = type { %"class.absl::optional_internal::optional_data_dtor_base.894" }
%"class.absl::optional_internal::optional_data_dtor_base.894" = type { i8, %union.anon.895 }
%union.anon.895 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.896" = type { %"class.absl::optional_internal::optional_data.897" }
%"class.absl::optional_internal::optional_data.897" = type { %"class.absl::optional_internal::optional_data_base.898" }
%"class.absl::optional_internal::optional_data_base.898" = type { %"class.absl::optional_internal::optional_data_dtor_base.899" }
%"class.absl::optional_internal::optional_data_dtor_base.899" = type { i8, %union.anon.900 }
%union.anon.900 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.901 }
%class.scoped_refptr.901 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.902" }
%"class.blink::HeapHashSet.902" = type { %"class.WTF::HashSet.905" }
%"class.WTF::HashSet.905" = type { %"class.WTF::HashTable.906" }
%"class.WTF::HashTable.906" = type <{ %"class.blink::WeakMember.908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.908" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.475", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.569" }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.276", i32, i8, [3 x i8], %"class.blink::HeapVector.278", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.297", %"class.blink::Member.438", %"class.blink::Member.440", i8 }>
%"class.blink::Supplementable.577" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.578" }
%"class.blink::HeapHashMap.578" = type { %"class.WTF::HashMap.581" }
%"class.WTF::HashMap.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1334", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1293", %"class.WTF::Vector.1293", i8, i32, %"class.blink::Member.743", %"class.blink::Member.270", %"class.blink::Member.1342", %"class.blink::Member.1344", %"class.blink::Member.1346", %"class.blink::Member.1348", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1350", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1356", %"class.blink::Member.1358", %"class.blink::Member.834", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1360", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1365", %"class.blink::HeapVector.810", %"class.blink::Member.789", %"class.blink::Member.735", %"class.blink::Member.789", %"class.blink::Member.789", %"class.blink::Member.789", %"class.blink::UserActionElementSet", %"class.blink::Member.1374", double, double, i64, i64, %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashSet.1383", i16, i8, %"class.blink::Member.1390", %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::TextLinkColors", %"class.blink::Member.1398", i8, [7 x i8], %"class.blink::HeapHashMap.1400", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.789", %"class.WTF::Vector.1407", %"class.blink::Member.1412", %"class.blink::Member.1414", i8, %"class.blink::Member.789", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1416", %"class.blink::HeapVector.1418", %"class.std::__1::unique_ptr.1426", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1432", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1445", %"class.WTF::Vector.1447", i8, i8, %"class.std::__1::unique_ptr.1452", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.810", %"class.blink::HeapVector.1458", i32, i8, %"class.blink::HeapTaskRunnerTimer.1365", %"class.blink::HeapTaskRunnerTimer.1365", %"class.blink::DocumentTiming", %"class.blink::Member.1466", i8, i32, %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.1472", %"class.blink::HeapTaskRunnerTimer.1365", %"class.blink::Member.1474", %"class.WTF::HashMap.1476", %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.blink::Member.587", %"class.blink::Member.587", %"class.blink::HeapTaskRunnerTimer.1365", %"class.blink::HeapHashSet.1489", i8, i32, %"class.blink::Member.1496", %"class.blink::Member.1498", i32, %"class.blink::Member.1500", %"class.blink::Member.1502", %"class.blink::Member.1504", %"class.std::__1::unique_ptr.1506", i64, %"class.std::__1::unique_ptr.1512", i32, i32, %"class.blink::Member.1518", %"class.blink::Member.1520", %"class.blink::Member.1522", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1524", %"class.WTF::Vector.758", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1526", %"class.blink::Member.1533", %"class.std::__1::unique_ptr.1535", %"class.blink::Member.1541", i8, i8, %"class.WTF::String", %"class.blink::Member.1543", i8, [7 x i8], %"class.blink::HeapHashMap.1545", %"class.blink::HeapObserverSet.1552", %"class.blink::Member.1560", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1562", i32, i8, i8, %"class.blink::WeakMember.1564", %"class.blink::Member.1565" }
%"class.blink::Supplementable.1334" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1335" }
%"class.blink::HeapHashMap.1335" = type { %"class.WTF::HashMap.1338" }
%"class.WTF::HashMap.1338" = type { %"class.WTF::HashTable.1339" }
%"class.WTF::HashTable.1339" = type <{ %"struct.WTF::KeyValuePair.1341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1341" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1360" = type { %"class.WTF::VectorBuffer.1361" }
%"class.WTF::VectorBuffer.1361" = type { %"class.WTF::VectorBufferBase.1362" }
%"class.WTF::VectorBufferBase.1362" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.197 }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.587", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.720", %"class.blink::Member.720", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1367" }
%"class.blink::HeapHashMap.1367" = type { %"class.WTF::HashMap.1370" }
%"class.WTF::HashMap.1370" = type { %"class.WTF::HashTable.1371" }
%"class.WTF::HashTable.1371" = type <{ %"struct.WTF::KeyValuePair.1373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1373" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type opaque
%"class.blink::HeapHashSet.1383" = type { %"class.WTF::HashSet.1386" }
%"class.WTF::HashSet.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"class.blink::WeakMember.1389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1389" = type opaque
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.722", %"class.blink::HeapVector.828" }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1400" = type { %"class.WTF::HashMap.1403" }
%"class.WTF::HashMap.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409" }
%"class.WTF::VectorBufferBase.1409" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1418" = type { %"class.WTF::Vector.1421" }
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { %"class.blink::Member.1424"*, i32, i32 }
%"class.blink::Member.1424" = type opaque
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1432" = type { %"class.WTF::HashSet.1435" }
%"class.WTF::HashSet.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"class.blink::WeakMember.1438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1438" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1439", i32, [4 x i8] }>
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"struct.std::__1::pair.1442"*, i32, i32 }
%"struct.std::__1::pair.1442" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1447" = type { %"class.WTF::VectorBuffer.1448" }
%"class.WTF::VectorBuffer.1448" = type { %"class.WTF::VectorBufferBase.1449" }
%"class.WTF::VectorBufferBase.1449" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1458" = type { %"class.WTF::Vector.1461" }
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { %"class.blink::Member.1464"*, i32, i32 }
%"class.blink::Member.1464" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.587" }
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1476" = type { %"class.WTF::HashTable.1477" }
%"class.WTF::HashTable.1477" = type <{ %"struct.WTF::KeyValuePair.1480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1480" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1365" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1366", { i64, i64 } }
%"class.blink::WeakMember.1366" = type { %"class.blink::MemberBase.588" }
%"class.blink::HeapHashSet.1489" = type { %"class.WTF::HashSet.1492" }
%"class.WTF::HashSet.1492" = type { %"class.WTF::HashTable.1493" }
%"class.WTF::HashTable.1493" = type <{ %"class.blink::Member.1495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1495" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1506" = type { %"class.std::__1::__compressed_pair.1507" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1512" = type { %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1526" = type { %"class.WTF::HashMap.1529" }
%"class.WTF::HashMap.1529" = type { %"class.WTF::HashTable.1530" }
%"class.WTF::HashTable.1530" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1535" = type { %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1545" = type { %"class.WTF::HashMap.1548" }
%"class.WTF::HashMap.1548" = type { %"class.WTF::HashTable.1549" }
%"class.WTF::HashTable.1549" = type <{ %"struct.WTF::KeyValuePair.1551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1551" = type opaque
%"class.blink::HeapObserverSet.1552" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1553" }
%"class.blink::HeapHashSet.1553" = type { %"class.WTF::HashSet.1556" }
%"class.WTF::HashSet.1556" = type { %"class.WTF::HashTable.1557" }
%"class.WTF::HashTable.1557" = type <{ %"class.blink::WeakMember.1559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1559" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.587", %"class.blink::HeapHashSet.1569", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1576", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1569" = type { %"class.WTF::HashSet.1572" }
%"class.WTF::HashSet.1572" = type { %"class.WTF::HashTable.1573" }
%"class.WTF::HashTable.1573" = type <{ %"class.blink::Member.1575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1575" = type opaque
%"class.blink::HeapTaskRunnerTimer.1576" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1577", { i64, i64 } }
%"class.blink::WeakMember.1577" = type { %"class.blink::MemberBase.1563" }
%"class.blink::WeakMember.1564" = type { %"class.blink::MemberBase.721" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.609 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.611", i64, %"class.WTF::Vector.615", %"class.WTF::Vector.620", %"class.WTF::Vector.626", %"class.WTF::Vector.644", %class.scoped_refptr.230, %"class.WTF::HashMap.650", %"class.WTF::Vector.655", %"class.WTF::Vector.615", %"class.WTF::Vector.661", %"class.WTF::HashMap.666", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.610" }
%"class.base::RefCountedThreadSafe.610" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { i8* }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622", [8 x i8] }
%"class.WTF::VectorBufferBase.622" = type { %class.scoped_refptr.623*, i32, i32 }
%class.scoped_refptr.623 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.626" = type { %"class.WTF::VectorBuffer.627" }
%"class.WTF::VectorBuffer.627" = type { %"class.WTF::VectorBufferBase.628" }
%"class.WTF::VectorBufferBase.628" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.630", %"class.std::__1::unique_ptr.636" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.629 }
%class.scoped_refptr.629 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.647", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.650" = type { %"class.WTF::HashTable.651" }
%"class.WTF::HashTable.651" = type <{ %"struct.WTF::KeyValuePair.654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.654" = type opaque
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { %"class.mojo::ScopedHandleBase.658"*, i32, i32 }
%"class.mojo::ScopedHandleBase.658" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617", [16 x i8] }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663" }
%"class.WTF::VectorBufferBase.663" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.666" = type { %"class.WTF::HashTable.667" }
%"class.WTF::HashTable.667" = type <{ %"struct.WTF::KeyValuePair.670"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.670" = type { i8**, %"class.std::__1::unique_ptr.1805" }
%"class.std::__1::unique_ptr.1805" = type { %"class.std::__1::__compressed_pair.1806" }
%"class.std::__1::__compressed_pair.1806" = type { %"struct.std::__1::__compressed_pair_elem.1807" }
%"struct.std::__1::__compressed_pair_elem.1807" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.671" = type { %"class.WTF::HashSet.674" }
%"class.WTF::HashSet.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"class.blink::WeakMember.677"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.677" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.685", %"class.blink::Member.685", %"class.blink::Member.687", %"class.blink::Member.689", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.680" }
%"class.absl::optional.680" = type { %"class.absl::optional_internal::optional_data.681" }
%"class.absl::optional_internal::optional_data.681" = type { %"class.absl::optional_internal::optional_data_base.682" }
%"class.absl::optional_internal::optional_data_base.682" = type { %"class.absl::optional_internal::optional_data_dtor_base.683" }
%"class.absl::optional_internal::optional_data_dtor_base.683" = type { i8, %union.anon.684 }
%union.anon.684 = type { i64 }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::Event"* }
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.691" = type { %"class.WTF::HashMap.694" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.716", %"class.blink::CachedTextInputInfo", %"class.blink::Member.735", %"class.blink::Member.737", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.718", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.728", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.728" = type { %"class.WTF::HashMap.731" }
%"class.WTF::HashMap.731" = type { %"class.WTF::HashTable.732" }
%"class.WTF::HashTable.732" = type <{ %"struct.WTF::KeyValuePair.734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.734" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.720", i32, i32 }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.743", %"class.blink::Member.745", %"class.blink::Member.747" }
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.743", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.753" }
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::HeapHashMap.757"* }
%"class.blink::HeapHashMap.757" = type opaque
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { i8*, i32, i32 }
%"class.util::TokenType.475" = type { %"class.base::StrongAlias.476" }
%"class.base::StrongAlias.476" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.767" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { i64*, i32, i32 }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.blink::ScriptSourceCode" = type <{ %"class.blink::ParkableString", %"class.blink::Member.1617", %"class.blink::Member.1619", i32, [4 x i8], %"class.blink::KURL", %"class.WTF::String", %"class.WTF::TextPosition", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.1587 }
%class.scoped_refptr.1587 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1588", %"class.WTF::String", %"class.std::__1::unique_ptr.1590" }
%"class.WTF::RefCounted.1588" = type { %"class.base::RefCounted.1589" }
%"class.base::RefCounted.1589" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1590" = type { %"class.std::__1::__compressed_pair.1591" }
%"class.std::__1::__compressed_pair.1591" = type { %"struct.std::__1::__compressed_pair_elem.1592" }
%"struct.std::__1::__compressed_pair_elem.1592" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1593", %"class.std::__1::unique_ptr.1604", %"class.WTF::Vector.1610", i8, i32 }
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.WTF::Vector.1596"* }
%"class.WTF::Vector.1596" = type { %"class.WTF::VectorBuffer.1597" }
%"class.WTF::VectorBuffer.1597" = type { %"class.WTF::VectorBufferBase.1598" }
%"class.WTF::VectorBufferBase.1598" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1610" = type { %"class.WTF::VectorBuffer.1611" }
%"class.WTF::VectorBuffer.1611" = type { %"class.WTF::VectorBufferBase.1598", [32 x i8] }
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::SingleCachedMetadataHandler" = type opaque
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1623", i32, %"class.blink::Member.1624", %"class.blink::Member.1626", %"class.mojo::ScopedHandleBase.1628", %"class.std::__1::unique_ptr.478", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.1629", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.1048 }
%"class.blink::ThreadState::PrefinalizerRegistration.1623" = type { i8 }
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.1619", i32, i32, %"class.blink::Member.1799", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.1781" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1643", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1663", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1745", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1756", %"class.blink::ResourceResponse", %class.scoped_refptr.1758, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1643" = type { %"class.absl::optional_internal::optional_data.1644" }
%"class.absl::optional_internal::optional_data.1644" = type { %"class.absl::optional_internal::optional_data_base.1645" }
%"class.absl::optional_internal::optional_data_base.1645" = type { %"class.absl::optional_internal::optional_data_dtor_base.1646" }
%"class.absl::optional_internal::optional_data_dtor_base.1646" = type { i8, %union.anon.1647 }
%union.anon.1647 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1648", i8, %"class.absl::optional.1653", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1648" = type { %"class.absl::optional_internal::optional_data.1649" }
%"class.absl::optional_internal::optional_data.1649" = type { %"class.absl::optional_internal::optional_data_base.1650" }
%"class.absl::optional_internal::optional_data_base.1650" = type { %"class.absl::optional_internal::optional_data_dtor_base.1651" }
%"class.absl::optional_internal::optional_data_dtor_base.1651" = type { i8, [7 x i8], %union.anon.1652 }
%union.anon.1652 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1653" = type { %"class.absl::optional_internal::optional_data.1654" }
%"class.absl::optional_internal::optional_data.1654" = type { %"class.absl::optional_internal::optional_data_base.1655" }
%"class.absl::optional_internal::optional_data_base.1655" = type { %"class.absl::optional_internal::optional_data_dtor_base.1656" }
%"class.absl::optional_internal::optional_data_dtor_base.1656" = type { i8, %union.anon.1657 }
%union.anon.1657 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1658", %"class.WTF::Vector.327" }
%"class.WTF::Vector.1658" = type { %"class.WTF::VectorBuffer.1659" }
%"class.WTF::VectorBuffer.1659" = type { %"class.WTF::VectorBufferBase.1660" }
%"class.WTF::VectorBufferBase.1660" = type { i32*, i32, i32 }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1741" }
%"class.WTF::HashMap.1741" = type { %"class.WTF::HashTable.1742" }
%"class.WTF::HashTable.1742" = type <{ %"struct.WTF::KeyValuePair.1744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1744" = type <{ %"class.blink::WeakMember.1886", i32, [4 x i8] }>
%"class.blink::WeakMember.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1888", [7 x i8], %"class.blink::Member.1889", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1888" = type { i8 }
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet.1745" = type { %"class.WTF::HashSet.1748" }
%"class.WTF::HashSet.1748" = type { %"class.WTF::HashTable.1749" }
%"class.WTF::HashTable.1749" = type <{ %"class.blink::WeakMember.1751"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1751" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1586", %"class.WTF::String", %"class.WTF::HashSet.1581", i8, i8, %class.scoped_refptr.197, %class.scoped_refptr.1752, %class.scoped_refptr.1754 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1586" = type { i8 }
%"class.WTF::HashSet.1581" = type { %"class.WTF::HashTable.1582" }
%"class.WTF::HashTable.1582" = type <{ %"struct.std::__1::pair.1585"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1585" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1752 = type { %"class.base::RefCountedData.1753"* }
%"class.base::RefCountedData.1753" = type opaque
%class.scoped_refptr.1754 = type { %"class.base::RefCountedData.1755"* }
%"class.base::RefCountedData.1755" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.233, %class.scoped_refptr.233, %class.scoped_refptr.233, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1671, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1683", %"class.absl::optional.1688", %"class.absl::optional.1698", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.896", %"class.absl::optional.1698", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1698", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.896", %"class.absl::optional.1703", i8, %class.scoped_refptr.1709 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1666" }
%"class.WTF::HashMap.1666" = type { %"class.WTF::HashTable.1667" }
%"class.WTF::HashTable.1667" = type <{ %"struct.WTF::KeyValuePair.1670"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1670" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1671 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1672", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1681, i8, %"class.url::Origin" }
%"class.base::RefCounted.1672" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1673" }
%"class.std::__1::vector.1673" = type { %"class.std::__1::__vector_base.1674" }
%"class.std::__1::__vector_base.1674" = type { %"class.std::__1::unique_ptr.1675"*, %"class.std::__1::unique_ptr.1675"*, %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1872" }
%"class.std::__1::__compressed_pair.1872" = type { %"struct.std::__1::__compressed_pair_elem.1873" }
%"struct.std::__1::__compressed_pair_elem.1873" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"class.std::__1::unique_ptr.1675"* }
%class.scoped_refptr.1681 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1682" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1683" = type { %"class.absl::optional_internal::optional_data.1684" }
%"class.absl::optional_internal::optional_data.1684" = type { %"class.absl::optional_internal::optional_data_base.1685" }
%"class.absl::optional_internal::optional_data_base.1685" = type { %"class.absl::optional_internal::optional_data_dtor_base.1686" }
%"class.absl::optional_internal::optional_data_dtor_base.1686" = type { i8, %union.anon.1687 }
%union.anon.1687 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1688" = type { %"class.absl::optional_internal::optional_data.1689" }
%"class.absl::optional_internal::optional_data.1689" = type { %"class.absl::optional_internal::optional_data_base.1690" }
%"class.absl::optional_internal::optional_data_base.1690" = type { %"class.absl::optional_internal::optional_data_dtor_base.1691" }
%"class.absl::optional_internal::optional_data_dtor_base.1691" = type { i8, %union.anon.1692 }
%union.anon.1692 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1693", %"class.WTF::Vector.327", %"class.WTF::String" }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %class.scoped_refptr.233*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.356", %"class.absl::optional.356" }
%"class.absl::optional.1698" = type { %"class.absl::optional_internal::optional_data.1699" }
%"class.absl::optional_internal::optional_data.1699" = type { %"class.absl::optional_internal::optional_data_base.1700" }
%"class.absl::optional_internal::optional_data_base.1700" = type { %"class.absl::optional_internal::optional_data_dtor_base.1701" }
%"class.absl::optional_internal::optional_data_dtor_base.1701" = type { i8, %union.anon.1702 }
%union.anon.1702 = type { %"class.WTF::String" }
%"class.absl::optional.1703" = type { %"class.absl::optional_internal::optional_data.1704" }
%"class.absl::optional_internal::optional_data.1704" = type { %"class.absl::optional_internal::optional_data_base.1705" }
%"class.absl::optional_internal::optional_data_base.1705" = type { %"class.absl::optional_internal::optional_data_dtor_base.1706" }
%"class.absl::optional_internal::optional_data_dtor_base.1706" = type { i8, %union.anon.1707 }
%union.anon.1707 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1708" }
%"class.mojo::PendingRemote.1708" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.1709 = type { %"class.base::RefCountedData.1710"* }
%"class.base::RefCountedData.1710" = type { %"class.base::RefCountedThreadSafe.1877", %"class.base::internal::flat_tree.1878" }
%"class.base::RefCountedThreadSafe.1877" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1878" = type { %"class.std::__1::vector.1879" }
%"class.std::__1::vector.1879" = type { %"class.std::__1::__vector_base.1880" }
%"class.std::__1::__vector_base.1880" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1881" }
%"class.std::__1::__compressed_pair.1881" = type { %"struct.std::__1::__compressed_pair_elem.1882" }
%"struct.std::__1::__compressed_pair_elem.1882" = type { i32* }
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1711", %class.scoped_refptr.1725, %class.scoped_refptr.1726, %"struct.blink::CacheControlHeader", %"class.absl::optional.356", %"class.absl::optional.1285", %"class.absl::optional.1285", %"class.absl::optional.1285", i64, %"class.blink::KURL", %"class.WTF::Vector.1727", %"class.WTF::String", %"class.WTF::Vector.327", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.896", %"class.WTF::Vector.327", %"class.blink::KURL", %"class.absl::optional.1732" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1711" = type { %"class.absl::optional_internal::optional_data.1712" }
%"class.absl::optional_internal::optional_data.1712" = type { %"class.absl::optional_internal::optional_data_base.1713" }
%"class.absl::optional_internal::optional_data_base.1713" = type { %"class.absl::optional_internal::optional_data_dtor_base.1714" }
%"class.absl::optional_internal::optional_data_dtor_base.1714" = type { i8, %union.anon.1715 }
%union.anon.1715 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.327", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1716", %"class.WTF::Vector.1720" }
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.807" }
%"class.WTF::Vector.1720" = type { %"class.WTF::VectorBuffer.1721" }
%"class.WTF::VectorBuffer.1721" = type { %"class.WTF::VectorBufferBase.1722" }
%"class.WTF::VectorBufferBase.1722" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1725 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1726 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1727" = type { %"class.WTF::VectorBuffer.1728" }
%"class.WTF::VectorBuffer.1728" = type { %"class.WTF::VectorBufferBase.1729" }
%"class.WTF::VectorBufferBase.1729" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1732" = type { %"class.absl::optional_internal::optional_data.1733" }
%"class.absl::optional_internal::optional_data.1733" = type { %"class.absl::optional_internal::optional_data_base.1734" }
%"class.absl::optional_internal::optional_data_base.1734" = type { %"class.absl::optional_internal::optional_data_dtor_base.1735" }
%"class.absl::optional_internal::optional_data_dtor_base.1735" = type { i8, %union.anon.1736 }
%union.anon.1736 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1758 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1759", i64, %"class.WTF::Vector.1761", %"class.WTF::Vector.1766" }
%"class.WTF::RefCounted.1759" = type { %"class.base::RefCounted.1760" }
%"class.base::RefCounted.1760" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.WTF::VectorBufferBase.1763" = type { i8*, i32, i32 }
%"class.WTF::Vector.1766" = type { %"class.WTF::VectorBuffer.1767" }
%"class.WTF::VectorBuffer.1767" = type { %"class.WTF::VectorBufferBase.1768" }
%"class.WTF::VectorBufferBase.1768" = type { %"class.std::__1::unique_ptr.1769"*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1772" }
%"class.std::__1::__tree.1772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1773", %"class.std::__1::__compressed_pair.1777" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.1777" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1784", i32, %"class.WTF::Vector.1761", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1790" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.1784" = type { %"class.std::__1::__compressed_pair.1785" }
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.1799" = type { %"class.blink::MemberBase.1800" }
%"class.blink::MemberBase.1800" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.1628" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.1632" }
%"class.std::__1::unique_ptr.1632" = type { %"class.std::__1::__compressed_pair.1633" }
%"class.std::__1::__compressed_pair.1633" = type { %"struct.std::__1::__compressed_pair_elem.1634" }
%"struct.std::__1::__compressed_pair_elem.1634" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1581", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1586", [6 x i8] }>
%"class.blink::V8ScriptRunner::RethrowErrorsOption" = type { %"class.absl::optional.1698" }
%"class.v8::Value" = type { i8 }
%"class.blink::ClassicScript" = type <{ %"class.blink::Script", %"class.blink::ScriptSourceCode", i32, [4 x i8] }>
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink18ScriptFetchOptionsD2Ev = comdat any

$_ZNK5blink15ScheduledAction18NameInHeapSnapshotEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_28ScriptStateProtectingContextEE4CallIJRPNS_11ScriptStateEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_28ScriptStateProtectingContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_28ScriptStateProtectingContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_28ScriptStateProtectingContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_28ScriptStateProtectingContextEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13ClassicScriptEE4CallIJNS_16ScriptSourceCodeENS_4KURLENS_18ScriptFetchOptionsENS_20SanitizeScriptErrorsEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_6ScriptEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_6ScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_6ScriptEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_6ScriptEE7GetNameEPKv = comdat any

$_ZN5blink6ScriptC2ERKNS_18ScriptFetchOptionsERKNS_4KURLE = comdat any

$_ZNK5blink6Script5TraceEPNS_7VisitorE = comdat any

$_ZN5blink6ScriptD2Ev = comdat any

$_ZN5blink6ScriptD0Ev = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink10TraceTraitINS_10V8FunctionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink15ScheduledActionE = comdat any

$_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink6ScriptE = comdat any

@_ZTVN5blink15ScheduledActionE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScheduledAction"*)* @_ZNK5blink15ScheduledAction18NameInHeapSnapshotEv to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink28ScriptStateProtectingContextEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptStateProtectingContext]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_28ScriptStateProtectingContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_28ScriptStateProtectingContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_28ScriptStateProtectingContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [46 x i8] c"blink::ScriptStateProtectingContext::context_\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptValue, WTF::VectorTraits<blink::ScriptValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6ScriptEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Script]\00", align 1
@_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_6ScriptEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_6ScriptEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_6ScriptEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink13ClassicScriptE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink6ScriptE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Script"*, %"class.blink::Visitor"*)* @_ZNK5blink6Script5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::Script"*)* @_ZN5blink6ScriptD2Ev to i8*), i8* bitcast (void (%"class.blink::Script"*)* @_ZN5blink6ScriptD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"ScheduledAction\00", align 1

@_ZN5blink15ScheduledActionC1EPNS_11ScriptStateEPNS_16ExecutionContextEPNS_10V8FunctionERKNS_10HeapVectorINS_11ScriptValueELj0EEE = hidden unnamed_addr alias void (%"class.blink::ScheduledAction"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.blink::V8Function"*, %"class.blink::HeapVector"*), void (%"class.blink::ScheduledAction"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.blink::V8Function"*, %"class.blink::HeapVector"*)* @_ZN5blink15ScheduledActionC2EPNS_11ScriptStateEPNS_16ExecutionContextEPNS_10V8FunctionERKNS_10HeapVectorINS_11ScriptValueELj0EEE
@_ZN5blink15ScheduledActionC1EPNS_11ScriptStateEPNS_16ExecutionContextERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::ScheduledAction"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*), void (%"class.blink::ScheduledAction"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)* @_ZN5blink15ScheduledActionC2EPNS_11ScriptStateEPNS_16ExecutionContextERKN3WTF6StringE
@_ZN5blink15ScheduledActionD1Ev = hidden unnamed_addr alias void (%"class.blink::ScheduledAction"*), void (%"class.blink::ScheduledAction"*)* @_ZN5blink15ScheduledActionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ScheduledActionC2EPNS_11ScriptStateEPNS_16ExecutionContextEPNS_10V8FunctionERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::ScheduledAction"*, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.blink::V8Function"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::ScriptState"*, align 8
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink15ScheduledActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = call %"class.blink::ScriptStateProtectingContext"* @_ZN5blink25MakeGarbageCollectedTraitINS_28ScriptStateProtectingContextEE4CallIJRPNS_11ScriptStateEEEEPS1_DpOT_(%"class.blink::ScriptState"** nonnull dereferenceable(8) %6) #7
  %9 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ScriptStateProtectingContext"* %8, %"class.blink::ScriptStateProtectingContext"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::Member.185"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 2, i32 0
  %14 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 5
  br i1 %17, label %28, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %21 = call %"class.blink::LocalDOMWindow"* @_ZN5blink16EnteredDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %20) #7
  %22 = icmp eq %"class.blink::ExecutionContext"* %2, null
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %2, i64 -1, i32 8
  %24 = bitcast i32* %23 to %"class.blink::LocalDOMWindow"*
  %25 = select i1 %22, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %24
  %26 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %25, i64 0, i32 0
  %27 = call zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_9DOMWindowENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"* %21, %"class.blink::DOMWindow"* %26, i32 0) #7
  br i1 %27, label %28, label %40

28:                                               ; preds = %18, %5
  %29 = ptrtoint %"class.blink::V8Function"* %3 to i64
  %30 = bitcast %"class.blink::Member.185"* %10 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::V8Function"* %3 to i8*
  %35 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #7
  br label %36

36:                                               ; preds = %28, %33
  %37 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3, i32 0
  %38 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %4, i64 0, i32 0
  %39 = call dereferenceable(16) %"class.WTF::Vector.191"* @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEEaSERKS4_(%"class.WTF::Vector.191"* %37, %"class.WTF::Vector.191"* dereferenceable(16) %38) #7
  br label %49

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %2, i64 0, i32 3
  %42 = icmp eq %"class.blink::UseCounter"* %41, null
  %43 = or i1 %22, %42
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.blink::UseCounter"* %41 to void (%"class.blink::UseCounter"*, i32)***
  %46 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %46, i64 3
  %48 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %47, align 8
  call void %48(%"class.blink::UseCounter"* nonnull %41, i32 1849) #7
  br label %49

49:                                               ; preds = %44, %40, %36
  ret void
}

declare zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_9DOMWindowENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"*, %"class.blink::DOMWindow"*, i32) local_unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink16EnteredDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ScheduledActionC2EPNS_11ScriptStateEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ScheduledAction"* nocapture, %"class.blink::ScriptState"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ScriptState"*, align 8
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink15ScheduledActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = call %"class.blink::ScriptStateProtectingContext"* @_ZN5blink25MakeGarbageCollectedTraitINS_28ScriptStateProtectingContextEE4CallIJRPNS_11ScriptStateEEEEPS1_DpOT_(%"class.blink::ScriptState"** nonnull dereferenceable(8) %5) #7
  %8 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ScriptStateProtectingContext"* %7, %"class.blink::ScriptStateProtectingContext"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::V8Function"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  %13 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %5, align 8
  %14 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %13, i64 0, i32 2, i32 0
  %15 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 5
  br i1 %18, label %29, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %13, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = call %"class.blink::LocalDOMWindow"* @_ZN5blink16EnteredDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %21) #7
  %23 = icmp eq %"class.blink::ExecutionContext"* %2, null
  %24 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %2, i64 -1, i32 8
  %25 = bitcast i32* %24 to %"class.blink::LocalDOMWindow"*
  %26 = select i1 %23, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %25
  %27 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %26, i64 0, i32 0
  %28 = call zeroext i1 @_ZN5blink15BindingSecurity19ShouldAllowAccessToEPKNS_14LocalDOMWindowEPKNS_9DOMWindowENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"* %22, %"class.blink::DOMWindow"* %27, i32 0) #7
  br i1 %28, label %29, label %68

29:                                               ; preds = %19, %4
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #7
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  call void @llvm.trap() #7
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %29
  %51 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %52 = bitcast %"class.WTF::String"* %10 to i64*
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %51, i64* %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %77, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #7
  br label %77

68:                                               ; preds = %19
  %69 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %2, i64 0, i32 3
  %70 = icmp eq %"class.blink::UseCounter"* %69, null
  %71 = or i1 %23, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.blink::UseCounter"* %69 to void (%"class.blink::UseCounter"*, i32)***
  %74 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %74, i64 3
  %76 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %75, align 8
  call void %76(%"class.blink::UseCounter"* nonnull %69, i32 1849) #7
  br label %77

77:                                               ; preds = %72, %68, %67, %64, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ScheduledActionD2Ev(%"class.blink::ScheduledAction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink15ScheduledActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ScheduledAction7DisposeEv(%"class.blink::ScheduledAction"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase", %"class.blink::MemberBase"* %2, i64 0, i32 0
  %4 = load %"class.blink::ScriptStateProtectingContext"*, %"class.blink::ScriptStateProtectingContext"** %3, align 8
  %5 = bitcast %"class.blink::ScriptStateProtectingContext"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptStateProtectingContext", %"class.blink::ScriptStateProtectingContext"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.v8::Context"* %7 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %10) #7
  store %"class.v8::Context"* null, %"class.v8::Context"** %6, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = bitcast %"class.blink::MemberBase"* %2 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.blink::MemberBase.186", %"class.blink::MemberBase.186"* %13, i64 0, i32 0
  %15 = load %"class.blink::V8Function"*, %"class.blink::V8Function"** %14, align 8
  %16 = icmp eq %"class.blink::V8Function"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::V8Function", %"class.blink::V8Function"* %15, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %20) #7
  %23 = bitcast %"class.blink::TraceWrapperV8Reference"* %18 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  br label %24

24:                                               ; preds = %17, %22
  %25 = bitcast %"class.blink::MemberBase.186"* %13 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  br label %26

26:                                               ; preds = %11, %24
  %27 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3, i32 0
  %28 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.WTF::Vector.191"* %27 to i8**
  br label %63

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %27, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %38, align 8
  %40 = zext i32 %33 to i64
  %41 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %39, i64 %40
  br label %42

42:                                               ; preds = %54, %37
  %43 = phi %"class.blink::ScriptValue"* [ %55, %54 ], [ %39, %37 ]
  %44 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %43, i64 0, i32 1, i32 1, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #7
  %49 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %45) #7
  %53 = bitcast %"class.blink::DOMWrapperWorld"* %45 to i8*
  tail call void @free(i8* %53) #7
  br label %54

54:                                               ; preds = %52, %47, %42
  %55 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %43, i64 1
  %56 = icmp eq %"class.blink::ScriptValue"* %55, %41
  br i1 %56, label %57, label %42

57:                                               ; preds = %54
  %58 = bitcast %"class.WTF::Vector.191"* %27 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %32, align 4
  %61 = zext i32 %60 to i64
  %62 = mul nuw nsw i64 %61, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %59, i64 %62) #7
  store i32 0, i32* %32, align 4
  br label %63

63:                                               ; preds = %35, %57
  %64 = phi i8** [ %36, %35 ], [ %58, %57 ]
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.WTF::Vector.191"* %27 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store i32 0, i32* %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %65) #7
  br label %67

67:                                               ; preds = %26, %63
  %68 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 4
  %69 = bitcast %"class.WTF::String"* %68 to i64*
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store i64 0, i64* %69, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #7
  br label %86

86:                                               ; preds = %85, %82, %67
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ScheduledAction7ExecuteEPNS_16ExecutionContextE(%"class.blink::ScheduledAction"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ScriptState::Scope", align 8
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca %"class.blink::ScriptSourceCode", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.WTF::TextPosition"*
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.blink::ScriptFetchOptions", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.blink::V8ScriptRunner::RethrowErrorsOption", align 8
  %13 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ScriptStateProtectingContext"*, %"class.blink::ScriptStateProtectingContext"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ScriptStateProtectingContext", %"class.blink::ScriptStateProtectingContext"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.v8::Context"*, %"class.v8::Context"** %17, align 8
  %19 = icmp eq %"class.v8::Context"* %18, null
  br i1 %19, label %113, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %16, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %21, align 8
  %23 = icmp eq %"class.blink::V8PerContextData"* %22, null
  br i1 %23, label %113, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState::Scope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %3, i64 0, i32 1, i32 0
  %27 = bitcast %"class.blink::ScriptState::Scope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %15, align 8
  %29 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %28, i64 0, i32 0
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %29, %"class.v8::Isolate"* %31) #7
  %32 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.v8::Context"*, %"class.v8::Context"** %32, align 8
  %34 = icmp eq %"class.v8::Context"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %24
  %36 = bitcast %"class.blink::ScriptState"* %28 to %"class.v8::internal::Isolate"**
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = bitcast %"class.v8::Context"* %33 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %39) #7
  %41 = bitcast i64* %40 to %"class.v8::Context"*
  br label %42

42:                                               ; preds = %24, %35
  %43 = phi %"class.v8::Context"* [ %41, %35 ], [ null, %24 ]
  store %"class.v8::Context"* %43, %"class.v8::Context"** %26, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %43) #7
  %44 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*, i32)***
  %45 = load i1 (%"class.blink::ExecutionContext"*, i32)**, i1 (%"class.blink::ExecutionContext"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %45, i64 26
  %47 = load i1 (%"class.blink::ExecutionContext"*, i32)*, i1 (%"class.blink::ExecutionContext"*, i32)** %46, align 8
  %48 = call zeroext i1 %47(%"class.blink::ExecutionContext"* %1, i32 0) #7
  br i1 %48, label %49, label %111

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::V8Function"*, %"class.blink::V8Function"** %50, align 8
  %52 = icmp eq %"class.blink::V8Function"* %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)***
  %55 = load %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)**, %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)*, %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)** %55, i64 48
  %57 = load %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)*, %"class.blink::ScriptWrappable"* (%"class.blink::ExecutionContext"*)** %56, align 8
  %58 = call %"class.blink::ScriptWrappable"* %57(%"class.blink::ExecutionContext"* %1) #7
  %59 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3
  call void @_ZN5blink10V8Function24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::V8Function"* nonnull %51, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* %58, %"class.blink::HeapVector"* dereferenceable(16) %59) #7
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %60) #7
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #7
  br label %113

61:                                               ; preds = %49
  %62 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %62) #7
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #7
  %63 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  %65 = load %"class.blink::ScriptStateProtectingContext"*, %"class.blink::ScriptStateProtectingContext"** %13, align 8
  %66 = getelementptr inbounds %"class.blink::ScriptStateProtectingContext", %"class.blink::ScriptStateProtectingContext"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %67, i64 0, i32 0
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %68, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %69) #7
  %70 = bitcast %"class.blink::ScriptSourceCode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %70) #7
  %71 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 4
  %72 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #7
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #7
  %73 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #7
  store i64 0, i64* %7, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %71, i32 7, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %6, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %8) #7
  %74 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %74) #7
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %9) #7
  %75 = bitcast %"class.blink::ScriptFetchOptions"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 28, i1 false) #7
  store i8 1, i8* %77, align 8
  %78 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 5
  store i32 1, i32* %78, align 4
  %79 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 6
  store i32 1, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 7
  store i32 1, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 8
  store i8 0, i8* %81, align 8
  %82 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %10, i64 0, i32 9, i32 0
  store i8 0, i8* %82, align 1
  %83 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #7
  store i32 0, i32* %11, align 4
  %84 = call %"class.blink::ClassicScript"* @_ZN5blink25MakeGarbageCollectedTraitINS_13ClassicScriptEE4CallIJNS_16ScriptSourceCodeENS_4KURLENS_18ScriptFetchOptionsENS_20SanitizeScriptErrorsEEEEPS1_DpOT_(%"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %5, %"class.blink::KURL"* nonnull dereferenceable(112) %9, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %10, i32* nonnull dereferenceable(4) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #7
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %75) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %74) #7
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %70) #7
  %85 = load %"class.blink::ScriptStateProtectingContext"*, %"class.blink::ScriptStateProtectingContext"** %13, align 8
  %86 = getelementptr inbounds %"class.blink::ScriptStateProtectingContext", %"class.blink::ScriptStateProtectingContext"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::V8ScriptRunner::RethrowErrorsOption", %"class.blink::V8ScriptRunner::RethrowErrorsOption"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #7, !alias.scope !3
  %89 = call { i32, %"class.v8::Value"* } @_ZN5blink13ClassicScript36RunScriptOnScriptStateAndReturnValueEPNS_11ScriptStateENS_19ExecuteScriptPolicyENS_14V8ScriptRunner19RethrowErrorsOptionE(%"class.blink::ClassicScript"* %84, %"class.blink::ScriptState"* %87, i32 1, %"class.blink::V8ScriptRunner::RethrowErrorsOption"* nonnull %12) #7
  %90 = load i8, i8* %88, align 8, !range !6
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %110, label %92

92:                                               ; preds = %61
  %93 = getelementptr inbounds %"class.blink::V8ScriptRunner::RethrowErrorsOption", %"class.blink::V8ScriptRunner::RethrowErrorsOption"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #7
  br label %109

109:                                              ; preds = %108, %105, %92
  store i8 0, i8* %88, align 8
  br label %110

110:                                              ; preds = %61, %109
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %113

111:                                              ; preds = %42
  %112 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %112) #7
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #7
  br label %113

113:                                              ; preds = %20, %2, %111, %53, %110
  ret void
}

declare void @_ZN5blink10V8Function24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_10HeapVectorINS_11ScriptValueELj0EEE(%"class.blink::V8Function"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #7
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.1585"* %20, null
  br i1 %21, label %54, label %22, !prof !7

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %20, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1585"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #7
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"struct.std::__1::pair.1585"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #7
  store %"struct.std::__1::pair.1585"* null, %"struct.std::__1::pair.1585"** %19, align 8
  br label %54

54:                                               ; preds = %18, %52
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #7
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"*) unnamed_addr #3

declare { i32, %"class.v8::Value"* } @_ZN5blink13ClassicScript36RunScriptOnScriptStateAndReturnValueEPNS_11ScriptStateENS_19ExecuteScriptPolicyENS_14V8ScriptRunner19RethrowErrorsOptionE(%"class.blink::ClassicScript"*, %"class.blink::ScriptState"*, i32, %"class.blink::V8ScriptRunner::RethrowErrorsOption"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15ScheduledAction5TraceEPNS_7VisitorE(%"class.blink::ScheduledAction"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28ScriptStateProtectingContextEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.185"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10V8FunctionEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ScheduledAction", %"class.blink::ScheduledAction"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::HeapVector"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  %29 = bitcast %"class.blink::HeapVector"* %25 to i8**
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %31 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, i64 11
  %33 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8** %29) #7
  br i1 %28, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %40

40:                                               ; preds = %24, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink15ScheduledAction18NameInHeapSnapshotEv(%"class.blink::ScheduledAction"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0)
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptStateProtectingContext"* @_ZN5blink25MakeGarbageCollectedTraitINS_28ScriptStateProtectingContextEE4CallIJRPNS_11ScriptStateEEEEPS1_DpOT_(%"class.blink::ScriptState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_28ScriptStateProtectingContextEEEPhm(i64 16) #7
  %3 = bitcast i8* %2 to %"class.blink::ScriptStateProtectingContext"*
  %4 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %0, align 8
  %5 = bitcast i8* %2 to %"class.blink::ScriptState"**
  store %"class.blink::ScriptState"* %4, %"class.blink::ScriptState"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %"class.v8::Context"**
  store %"class.v8::Context"* null, %"class.v8::Context"** %7, align 8
  %8 = icmp eq %"class.blink::ScriptState"* %4, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::ScriptState"* %4 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.v8::Context"* %13 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %11, i64 %17) #7
  %19 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %20 = bitcast %"class.v8::Context"* %19 to i64*
  %21 = icmp eq %"class.v8::Context"* %19, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %15
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %20) #7
  store %"class.v8::Context"* null, %"class.v8::Context"** %7, align 8
  br label %23

23:                                               ; preds = %22, %15
  %24 = phi i64* [ null, %22 ], [ %20, %15 ]
  %25 = icmp eq i64* %18, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = tail call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %11, i64* nonnull %18) #7
  %28 = bitcast i8* %6 to i64**
  store i64* %27, i64** %28, align 8
  br label %29

29:                                               ; preds = %26, %23, %9
  %30 = phi i64* [ %27, %26 ], [ %24, %23 ], [ null, %9 ]
  tail call void @_ZN2v82V822AnnotateStrongRetainerEPmPKc(i64* %30, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds i8, i8* %2, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  ret %"class.blink::ScriptStateProtectingContext"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_28ScriptStateProtectingContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.200"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_28ScriptStateProtectingContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.200"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink28ScriptStateProtectingContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28ScriptStateProtectingContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #7
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_28ScriptStateProtectingContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.v8::Context"**
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = icmp eq %"class.v8::Context"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::Context"* %4 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %7) #7
  store %"class.v8::Context"* null, %"class.v8::Context"** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_28ScriptStateProtectingContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.200"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare void @_ZN2v82V822AnnotateStrongRetainerEPmPKc(i64*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.191"* @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEEaSERKS4_(%"class.WTF::Vector.191"*, %"class.WTF::Vector.191"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.191"* %1, %0
  br i1 %3, label %135, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %42

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 %14
  %16 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 %13
  br label %17

17:                                               ; preds = %29, %10
  %18 = phi %"class.blink::ScriptValue"* [ %30, %29 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %18, i64 0, i32 1, i32 1, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  %24 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %20) #7
  %28 = bitcast %"class.blink::DOMWrapperWorld"* %20 to i8*
  tail call void @free(i8* %28) #7
  br label %29

29:                                               ; preds = %27, %22, %17
  %30 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %18, i64 1
  %31 = icmp eq %"class.blink::ScriptValue"* %30, %15
  br i1 %31, label %32, label %17

32:                                               ; preds = %29
  %33 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %11, align 8
  %34 = load i32, i32* %5, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %33, i64 %13
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %33, i64 %35
  %38 = bitcast %"class.blink::ScriptValue"* %36 to i8*
  %39 = ptrtoint %"class.blink::ScriptValue"* %37 to i64
  %40 = ptrtoint %"class.blink::ScriptValue"* %36 to i64
  %41 = sub i64 %39, %40
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %38, i64 %41) #7
  store i32 %8, i32* %5, align 4
  br label %86

42:                                               ; preds = %4
  %43 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp ugt i32 %8, %44
  br i1 %45, label %46, label %86

46:                                               ; preds = %42
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %83, label %48

48:                                               ; preds = %46
  %49 = icmp eq i32 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.WTF::Vector.191"* %0 to i8**
  br label %78

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %53, align 8
  %55 = zext i32 %6 to i64
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %54, i64 %55
  br label %57

57:                                               ; preds = %69, %52
  %58 = phi %"class.blink::ScriptValue"* [ %70, %69 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %58, i64 0, i32 1, i32 1, i32 0
  %60 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %59, align 8
  %61 = icmp eq %"class.blink::DOMWrapperWorld"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #7
  %64 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %60) #7
  %68 = bitcast %"class.blink::DOMWrapperWorld"* %60 to i8*
  tail call void @free(i8* %68) #7
  br label %69

69:                                               ; preds = %67, %62, %57
  %70 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %58, i64 1
  %71 = icmp eq %"class.blink::ScriptValue"* %70, %56
  br i1 %71, label %72, label %57

72:                                               ; preds = %69
  %73 = bitcast %"class.WTF::Vector.191"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = load i32, i32* %5, align 4
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %74, i64 %77) #7
  store i32 0, i32* %5, align 4
  br label %78

78:                                               ; preds = %50, %72
  %79 = phi i8** [ %51, %50 ], [ %73, %72 ]
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.WTF::Vector.191"* %0 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  store i32 0, i32* %43, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %80) #7
  %82 = load i32, i32* %7, align 4
  br label %83

83:                                               ; preds = %46, %78
  %84 = phi i32 [ %8, %46 ], [ %82, %78 ]
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.191"* %0, i32 %84)
  %85 = load i32, i32* %5, align 4
  br label %86

86:                                               ; preds = %42, %83, %32
  %87 = phi i32 [ %6, %42 ], [ %85, %83 ], [ %8, %32 ]
  %88 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %1, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %88, align 8
  %90 = zext i32 %87 to i64
  %91 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %89, i64 %90
  %92 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %92, align 8
  %94 = icmp eq i32 %87, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %86, %95
  %96 = phi %"class.blink::ScriptValue"* [ %105, %95 ], [ %93, %86 ]
  %97 = phi %"class.blink::ScriptValue"* [ %104, %95 ], [ %89, %86 ]
  %98 = bitcast %"class.blink::ScriptValue"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::ScriptValue"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %96, i64 0, i32 1
  %102 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %97, i64 0, i32 1
  %103 = tail call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %101, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %102) #7
  %104 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %97, i64 1
  %105 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %96, i64 1
  %106 = icmp eq %"class.blink::ScriptValue"* %104, %91
  br i1 %106, label %107, label %95

107:                                              ; preds = %95
  %108 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %88, align 8
  %109 = load i32, i32* %5, align 4
  %110 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %92, align 8
  br label %111

111:                                              ; preds = %107, %86
  %112 = phi %"class.blink::ScriptValue"* [ %110, %107 ], [ %93, %86 ]
  %113 = phi i32 [ %109, %107 ], [ 0, %86 ]
  %114 = phi %"class.blink::ScriptValue"* [ %108, %107 ], [ %89, %86 ]
  %115 = zext i32 %113 to i64
  %116 = load i32, i32* %7, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %114, i64 %117
  %119 = icmp eq i32 %113, %116
  br i1 %119, label %133, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %112, i64 %115
  %122 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %114, i64 %115
  br label %123

123:                                              ; preds = %120, %123
  %124 = phi %"class.blink::ScriptValue"* [ %128, %123 ], [ %121, %120 ]
  %125 = phi %"class.blink::ScriptValue"* [ %129, %123 ], [ %122, %120 ]
  %126 = bitcast %"class.blink::ScriptValue"* %124 to i8*
  %127 = tail call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8* %126, %"class.blink::ScriptValue"* dereferenceable(24) %125) #7
  %128 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %124, i64 1
  %129 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %125, i64 1
  %130 = icmp eq %"class.blink::ScriptValue"* %129, %118
  br i1 %130, label %131, label %123

131:                                              ; preds = %123
  %132 = load i32, i32* %7, align 4
  br label %133

133:                                              ; preds = %131, %111
  %134 = phi i32 [ %132, %131 ], [ %113, %111 ]
  store i32 %134, i32* %5, align 4
  br label %135

135:                                              ; preds = %2, %133
  ret %"class.WTF::Vector.191"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.191"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.191"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %26 = icmp eq %"class.blink::ScriptValue"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::ScriptValue"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !6
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.191"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.191"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.191"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %6, %"class.blink::ScriptValue"* %10, %"class.blink::ScriptValue"* null, i1 zeroext true) #7
  %13 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #7
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %16) #7
  %18 = udiv i64 %17, 24
  %19 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #7
  %20 = bitcast %"class.blink::HeapVectorBacking"* %19 to %"class.blink::ScriptValue"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %23, i64 %26
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %23, %"class.blink::ScriptValue"* %27, %"class.blink::ScriptValue"* %20, i1 zeroext false) #7
  %28 = bitcast %"class.WTF::Vector.191"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #7
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #7
  %34 = bitcast %"class.WTF::Vector.191"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.191", %"class.WTF::Vector.191"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #7
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.200"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.200"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %62, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)***
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 %55, i32 1, i32 0
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %57, i64 7
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %56) #7
  %60 = add nuw nsw i64 %55, 1
  %61 = icmp ult i64 %60, %50
  br i1 %61, label %54, label %62

62:                                               ; preds = %54, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %41

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %22, i64 %25, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #7
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #7
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #7
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::ScriptValue"* %0, %1
  br i1 %5, label %74, label %6

6:                                                ; preds = %4, %70
  %7 = phi %"class.blink::ScriptValue"* [ %72, %70 ], [ %0, %4 ]
  %8 = phi %"class.blink::ScriptValue"* [ %71, %70 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = icmp eq %"class.blink::ScriptValue"* %8, %7
  br i1 %15, label %21, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %17, i64** %14) #7
  br label %21

21:                                               ; preds = %20, %16, %6
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %13) #7
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %23 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %23, %"class.blink::DOMWrapperWorld"** %24, align 8
  %25 = icmp eq %"class.blink::DOMWrapperWorld"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %23, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #7
  br label %28

28:                                               ; preds = %21, %26
  br i1 %3, label %29, label %60

29:                                               ; preds = %28
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %29
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #7
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #7
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 13
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0
  %54 = bitcast %"class.blink::MarkingVisitor"* %51 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)***
  %55 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %55, i64 7
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %52, %"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %53) #7
  %58 = load i64, i64* %47, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %46, %39, %29, %28
  %61 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %62 = icmp eq %"class.blink::DOMWrapperWorld"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #7
  %65 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %61) #7
  %69 = bitcast %"class.blink::DOMWrapperWorld"* %61 to i8*
  tail call void @free(i8* %69) #7
  br label %70

70:                                               ; preds = %60, %63, %68
  %71 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 1
  %72 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 1
  %73 = icmp eq %"class.blink::ScriptValue"* %72, %1
  br i1 %73, label %74, label %6

74:                                               ; preds = %70, %4
  ret void
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #7
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #7
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %3) #7
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #7
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.197* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.197, %class.scoped_refptr.197* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #7
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #7
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #7
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJRKS2_EEEPS2_PvDpOT_(i8*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %4 = bitcast %"class.blink::ScriptValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.blink::TraceWrapperV8Reference.194"*
  %9 = bitcast i8* %7 to i64**
  store i64* null, i64** %9, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %3, %1
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %9) #7
  br label %16

16:                                               ; preds = %15, %11, %2
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %8) #7
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %18, %"class.blink::DOMWrapperWorld"** %20, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  br label %24

24:                                               ; preds = %16, %22
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #7
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #7
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !6
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)***
  %49 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %49, i64 7
  %51 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.194"*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %47, %"class.blink::TraceWrapperV8Reference.194"* dereferenceable(8) %8) #7
  %52 = load i64, i64* %42, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %24, %34, %41
  ret %"class.blink::ScriptValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ClassicScript"* @_ZN5blink25MakeGarbageCollectedTraitINS_13ClassicScriptEE4CallIJNS_16ScriptSourceCodeENS_4KURLENS_18ScriptFetchOptionsENS_20SanitizeScriptErrorsEEEEPS1_DpOT_(%"class.blink::ScriptSourceCode"* dereferenceable(168), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ScriptFetchOptions"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_6ScriptEEEPhm(i64 360) #7
  %6 = bitcast i8* %5 to %"class.blink::ClassicScript"*
  %7 = load i32, i32* %3, align 4
  %8 = bitcast i8* %5 to %"class.blink::Script"*
  tail call void @_ZN5blink6ScriptC2ERKNS_18ScriptFetchOptionsERKNS_4KURLE(%"class.blink::Script"* %8, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %2, %"class.blink::KURL"* dereferenceable(112) %1) #7
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink13ClassicScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 184
  %13 = bitcast i8* %12 to %"class.blink::ParkableStringImpl"**
  store %"class.blink::ParkableStringImpl"* %11, %"class.blink::ParkableStringImpl"** %13, align 8
  %14 = icmp eq %"class.blink::ParkableStringImpl"* %11, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #7
  br label %17

17:                                               ; preds = %15, %4
  %18 = getelementptr inbounds i8, i8* %5, i64 192
  %19 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 1
  %20 = bitcast %"class.blink::Member.1617"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %5, i64 200
  %24 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.1619"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 208
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 216
  %33 = bitcast i8* %32 to %"class.blink::KURL"*
  %34 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 5
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %33, %"class.blink::KURL"* dereferenceable(112) %34) #7
  %35 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds i8, i8* %5, i64 328
  %38 = bitcast i8* %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %17
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #7
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #7
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %17, %40, %55
  %58 = getelementptr inbounds i8, i8* %5, i64 336
  %59 = getelementptr inbounds %"class.blink::ScriptSourceCode", %"class.blink::ScriptSourceCode"* %0, i64 0, i32 7
  %60 = bitcast %"class.WTF::TextPosition"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %60, i64 12, i1 false) #7
  %61 = getelementptr inbounds i8, i8* %5, i64 352
  %62 = bitcast i8* %61 to i32*
  store i32 %7, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %5, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  ret %"class.blink::ClassicScript"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_6ScriptEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.200"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_6ScriptEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.200"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6ScriptEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6ScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Script"*
  %4 = bitcast i8* %1 to void (%"class.blink::Script"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Script"*, %"class.blink::Visitor"*)**, void (%"class.blink::Script"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Script"*, %"class.blink::Visitor"*)*, void (%"class.blink::Script"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Script"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_6ScriptEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Script"*
  %3 = bitcast i8* %0 to void (%"class.blink::Script"*)***
  %4 = load void (%"class.blink::Script"*)**, void (%"class.blink::Script"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Script"*)*, void (%"class.blink::Script"*)** %4, i64 1
  %6 = load void (%"class.blink::Script"*)*, void (%"class.blink::Script"*)** %5, align 8
  tail call void %6(%"class.blink::Script"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_6ScriptEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ScriptC2ERKNS_18ScriptFetchOptionsERKNS_4KURLE(%"class.blink::Script"*, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink6ScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #7
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #7
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 1, i32 1, i32 0
  %28 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.1582"* %27, %"class.WTF::HashTable.1582"* dereferenceable(24) %28) #7
  %29 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #7
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #7
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %26, %33, %48
  %51 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 1, i32 3
  %52 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %1, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 18, i1 false) #7
  %53 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %53, %"class.blink::KURL"* dereferenceable(112) %2) #7
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink6Script5TraceEPNS_7VisitorE(%"class.blink::Script"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ScriptD2Ev(%"class.blink::Script"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink6ScriptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #7
  %4 = getelementptr inbounds %"class.blink::Script", %"class.blink::Script"* %0, i64 0, i32 1
  tail call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6ScriptD0Ev(%"class.blink::Script"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEEC2ERKSD_(%"class.WTF::HashTable.1582"*, %"class.WTF::HashTable.1582"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %1, i64 0, i32 2
  %4 = bitcast %"class.WTF::HashTable.1582"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  tail call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1582"* %0, i32 %5)
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %1, i64 0, i32 0
  %11 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %11, i64 %14
  br i1 %9, label %35, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair.1585"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair.1585"* %30, %15
  br i1 %31, label %35, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair.1585"* [ %11, %16 ], [ %19, %18 ]
  %34 = icmp eq %"struct.std::__1::pair.1585"* %33, %15
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %36, %55, %52, %2, %7, %32
  ret void

36:                                               ; preds = %32, %55
  %37 = phi %"struct.std::__1::pair.1585"* [ %42, %55 ], [ %33, %32 ]
  %38 = tail call { %"struct.std::__1::pair.1585"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.1582"* %0, %"struct.std::__1::pair.1585"* dereferenceable(16) %37, %"struct.std::__1::pair.1585"* dereferenceable(16) %37) #7
  %39 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %37, i64 1
  %40 = icmp eq %"struct.std::__1::pair.1585"* %39, %15
  br i1 %40, label %35, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.std::__1::pair.1585"* [ %53, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  %46 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %42, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  %49 = and i1 %45, %48
  %50 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %42, i64 1
  %54 = icmp eq %"struct.std::__1::pair.1585"* %53, %15
  br i1 %54, label %35, label %41

55:                                               ; preds = %41
  %56 = icmp eq %"struct.std::__1::pair.1585"* %42, %15
  br i1 %56, label %35, label %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1582"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #7
  %30 = bitcast i8* %29 to %"struct.std::__1::pair.1585"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair.1585"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair.1585"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair.1585"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair.1585"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair.1585"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !8

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1582"* %0, %"struct.std::__1::pair.1585"* %30, i32 %17, %"struct.std::__1::pair.1585"* null) #7
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1582"*, %"struct.std::__1::pair.1585"*, i32, %"struct.std::__1::pair.1585"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1582", align 8
  %6 = bitcast %"class.WTF::HashTable.1582"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1582"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1585"* %1, %"struct.std::__1::pair.1585"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair.1585"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1582"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1582"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair.1585"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable.1582"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1582"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair.1585"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair.1585"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair.1585"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #7
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.std::__1::pair.1585"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair.1585"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair.1585"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair.1585"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.1582"* nonnull %5, %"struct.std::__1::pair.1585"* dereferenceable(16) %78) #7
  %90 = extractvalue { %"struct.std::__1::pair.1585"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #7
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair.1585"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1585"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair.1585"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair.1585"* %90, %"struct.std::__1::pair.1585"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair.1585"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair.1585"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair.1585"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.1585"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.1582"*, %"struct.std::__1::pair.1585"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #7
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair.1585"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair.1585"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair.1585"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair.1585"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair.1585"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair.1585"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair.1585"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair.1585"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #7
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair.1585"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair.1585"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair.1585"*
  %113 = insertvalue { %"struct.std::__1::pair.1585"*, i8 } undef, %"struct.std::__1::pair.1585"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair.1585"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair.1585"*, i8 } %114
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.1585"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.1582"*, %"struct.std::__1::pair.1585"* dereferenceable(16), %"struct.std::__1::pair.1585"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.1585"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1582"* %0, %"struct.std::__1::pair.1585"* null)
  %9 = load %"struct.std::__1::pair.1585"*, %"struct.std::__1::pair.1585"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair.1585"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #7
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair.1585"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair.1585"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair.1585"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #7
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair.1585"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair.1585"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair.1585"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair.1585"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #7
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  tail call void @llvm.trap() #7
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair.1585"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #7
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1582"* %0, %"struct.std::__1::pair.1585"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair.1585"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair.1585"*, i8 } undef, %"struct.std::__1::pair.1585"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair.1585"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair.1585"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.1582"*, %"struct.std::__1::pair.1585"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1582", %"class.WTF::HashTable.1582"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #7
  %36 = bitcast i8* %35 to %"struct.std::__1::pair.1585"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair.1585"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair.1585"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair.1585"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair.1585"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair.1585"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.1585", %"struct.std::__1::pair.1585"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair.1585"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.1582"* %0, %"struct.std::__1::pair.1585"* %36, i32 %32, %"struct.std::__1::pair.1585"* %1) #7
  ret %"struct.std::__1::pair.1585"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10V8FunctionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink14V8ScriptRunner19RethrowErrorsOption12DoNotRethrowEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink14V8ScriptRunner19RethrowErrorsOption12DoNotRethrowEv"}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
