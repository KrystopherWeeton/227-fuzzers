; ModuleID = '../../third_party/blink/renderer/core/css/cssom/computed_style_property_map.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/computed_style_property_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.110", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.110" = type { %"class.base::RefCounted.111" }
%"class.base::RefCounted.111" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.114" }
%"class.blink::HeapHashMap.114" = type { %"class.WTF::HashMap.117" }
%"class.WTF::HashMap.117" = type { %"class.WTF::HashTable.118" }
%"class.WTF::HashTable.118" = type <{ %"struct.WTF::KeyValuePair.120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.120" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.122", i32, [4 x i8], %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.299", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.238", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i64 }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { float }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.241", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.280" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.539" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__cxx_atomic_impl.301" }
%"struct.std::__1::__cxx_atomic_impl.301" = type { %"struct.std::__1::__cxx_atomic_base_impl.302" }
%"struct.std::__1::__cxx_atomic_base_impl.302" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i32 }
%"class.blink::ComputedStylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread", i8, %"class.blink::Member" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.71", %"class.WTF::Vector.71", i8, i32, %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.95", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.106", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.315", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.324", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.331", i16, i8, %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::TextLinkColors", %"class.blink::Member.346", i8, [7 x i8], %"class.blink::HeapHashMap.348", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.355", %"class.blink::Member.360", %"class.blink::Member.362", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.364", %"class.blink::HeapVector.366", %"class.std::__1::unique_ptr.374", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.380", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.393", %"class.WTF::Vector.395", i8, i8, %"class.std::__1::unique_ptr.400", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.406", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.414", i8, i32, %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.422", %"class.WTF::HashMap.424", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.437", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", i32, %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::Member.452", %"class.std::__1::unique_ptr.454", i64, %"class.std::__1::unique_ptr.460", i32, i32, %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.481", %"class.WTF::Vector.483", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.488", %"class.blink::Member.495", %"class.std::__1::unique_ptr.497", %"class.blink::Member.503", i8, i8, %"class.WTF::String", %"class.blink::Member.505", i8, [7 x i8], %"class.blink::HeapHashMap.507", %"class.blink::HeapObserverSet", %"class.blink::Member.521", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.523", i32, i8, i8, %"class.blink::WeakMember.525", %"class.blink::Member.526" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.64" }
%"class.blink::HeapHashMap.64" = type { %"class.WTF::HashMap.67" }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.70"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.70" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.75" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.544", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.585", i32, i8, [3 x i8], %"class.blink::HeapVector.587", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.606", %"class.blink::Member.612", %"class.blink::Member.614", i8, [7 x i8] }>
%"class.blink::Supplementable.544" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.545" }
%"class.blink::HeapHashMap.545" = type { %"class.WTF::HashMap.548" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.560" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.552" }
%"class.blink::HeapObserverSet.552" = type { i32, [4 x i8], %"class.blink::HeapHashSet.553" }
%"class.blink::HeapHashSet.553" = type { %"class.WTF::HashSet.556" }
%"class.WTF::HashSet.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"class.blink::WeakMember.559"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.559" = type opaque
%"class.blink::Supplementable.560" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.561" }
%"class.blink::HeapHashMap.561" = type { %"class.WTF::HashMap.564" }
%"class.WTF::HashMap.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type { i8*, %"class.blink::Member.1277" }
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1279" }
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.568, %"class.std::__1::unique_ptr.569", %"class.std::__1::unique_ptr.569", %"class.std::__1::unique_ptr.575", %"class.std::__1::unique_ptr.575", %"class.blink::Member.84", i32, [4 x i8], %"class.WTF::HashSet.581", i32, i32 }
%class.scoped_refptr.568 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.587" = type { %"class.WTF::Vector.590" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.blink::Member.593"*, i32, i32 }
%"class.blink::Member.593" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.599", i32, i32 }
%"class.blink::HeapHashMap.599" = type { %"class.WTF::HashMap.602" }
%"class.WTF::HashMap.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"struct.WTF::KeyValuePair.605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.605" = type opaque
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.317" }
%"class.blink::HeapHashMap.317" = type { %"class.WTF::HashMap.320" }
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::WeakMember.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.330" = type opaque
%"class.blink::HeapHashSet.331" = type { %"class.WTF::HashSet.334" }
%"class.WTF::HashSet.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.366" = type { %"class.WTF::Vector.369" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"class.blink::Member.372"*, i32, i32 }
%"class.blink::Member.372" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.380" = type { %"class.WTF::HashSet.383" }
%"class.WTF::HashSet.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"class.blink::WeakMember.386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.386" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.387", i32, [4 x i8] }>
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"struct.std::__1::pair.390"*, i32, i32 }
%"struct.std::__1::pair.390" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.314", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.305, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.305 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.306" }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.308", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.309" }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.blink::WeakMember.314" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::Member.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.443" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.463", %"class.WTF::HashSet.463", %"class.WTF::HashSet.463", %"class.WTF::HashSet.463", %"class.WTF::HashSet.463", %"class.WTF::HashSet.463", i32, [4 x i8], %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", %"class.WTF::HashMap.467", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.463" = type { %"class.WTF::HashTable.464" }
%"class.WTF::HashTable.464" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.467" = type { %"class.WTF::HashTable.468" }
%"class.WTF::HashTable.468" = type <{ %"struct.WTF::KeyValuePair.471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.471" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.488" = type { %"class.WTF::HashMap.491" }
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.494" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.507" = type { %"class.WTF::HashMap.510" }
%"class.WTF::HashMap.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.514" }
%"class.blink::HeapHashSet.514" = type { %"class.WTF::HashSet.517" }
%"class.WTF::HashSet.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"class.blink::WeakMember.520"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.520" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.530", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.537", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.530" = type { %"class.WTF::HashSet.533" }
%"class.WTF::HashSet.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"class.blink::Member.536"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.536" = type opaque
%"class.blink::HeapTaskRunnerTimer.537" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.538", { i64, i64 } }
%"class.blink::WeakMember.538" = type { %"class.blink::MemberBase.524" }
%"class.blink::WeakMember.525" = type { %"class.blink::MemberBase" }
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HeapHashMap.706" = type { %"class.WTF::HashMap.709" }
%"class.WTF::HashMap.709" = type { %"class.WTF::HashTable.710" }
%"class.WTF::HashTable.710" = type <{ %"struct.WTF::KeyValuePair.712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.712" = type { %"class.WTF::AtomicString", %"class.blink::Member.713" }
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1053", %"class.std::__1::unique_ptr.1055" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.681", %"class.blink::DataRef.765", %"class.blink::DataRef.769", %"class.blink::DataRef.969", %"class.blink::DataRef.1036", %"class.blink::DataRef.1040", %"class.blink::DataRef.1044", %"class.blink::DataRef.1048", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.616 }
%class.scoped_refptr.616 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.617", %"class.blink::DataRef.619", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.617" = type { %"class.base::RefCounted.618" }
%"class.base::RefCounted.618" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.619" = type { %class.scoped_refptr.620 }
%class.scoped_refptr.620 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.621", %"class.blink::Font" }
%"class.WTF::RefCounted.621" = type { %"class.base::RefCounted.622" }
%"class.base::RefCounted.622" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.654 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.624, %class.scoped_refptr.632, %class.scoped_refptr.642, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.653 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.623 }
%class.scoped_refptr.623 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1070", [4 x i8] }>
%"class.WTF::RefCounted.1070" = type { %"class.base::RefCounted.1071" }
%"class.base::RefCounted.1071" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.624 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.630", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.625" }
%"class.WTF::Vector.625" = type { %"class.WTF::VectorBuffer.626" }
%"class.WTF::VectorBuffer.626" = type { %"class.WTF::VectorBufferBase.627" }
%"class.WTF::VectorBufferBase.627" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.630" = type { %"class.base::RefCounted.631" }
%"class.base::RefCounted.631" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.632 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.633", %"class.WTF::RefCounted.640", [4 x i8] }>
%"class.blink::FontSettings.633" = type { %"class.WTF::Vector.634" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %"class.blink::FontTagValuePair.637"*, i32, i32 }
%"class.blink::FontTagValuePair.637" = type { i32, float }
%"class.WTF::RefCounted.640" = type { %"class.base::RefCounted.641" }
%"class.base::RefCounted.641" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.642 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.643", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.650, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.643" = type { %"class.base::RefCounted.644" }
%"class.base::RefCounted.644" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.650 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.651", [4 x i8] }>
%"class.WTF::RefCounted.651" = type { %"class.base::RefCounted.652" }
%"class.base::RefCounted.652" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.653 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.654 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.655", %"class.WTF::Vector.657", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.655" = type { %"class.base::RefCounted.656" }
%"class.base::RefCounted.656" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.657" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659", [8 x i8] }
%"class.WTF::VectorBufferBase.659" = type { %class.scoped_refptr.660*, i32, i32 }
%class.scoped_refptr.660 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.661", [4 x i8] }>
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.667", %class.scoped_refptr.674, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.661" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.665 }
%union.anon.665 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.666, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.75" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.75" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.309" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.666 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.670, %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.674 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.675", [4 x i8] }>
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.677" }
%"class.blink::PersistentBase.677" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.678" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.678" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.680, i8, i8, i8, i8 }>
%union.anon.680 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.683", [4 x i8], %"class.blink::DataRef.685", %"class.blink::DataRef.730", %"class.WTF::Vector.734", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.738, %class.scoped_refptr.747, %"class.blink::Persistent.755", %"class.blink::Persistent.757", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.687", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.689, %class.scoped_refptr.696, %"class.blink::Persistent.717", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.689 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.690", %"class.WTF::Vector.691" }
%"class.base::RefCountedThreadSafe.690" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.696 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.697", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.697" = type { %"class.base::RefCounted.698" }
%"class.base::RefCounted.698" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.699", %"class.blink::Persistent.704" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.703" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1240 }
%class.scoped_refptr.1240 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1241", %"class.WTF::Vector.952", %"class.WTF::Vector.1243", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1241" = type { %"class.base::RefCounted.1242" }
%"class.base::RefCounted.1242" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.953" }
%"class.WTF::VectorBuffer.953" = type { %"class.WTF::VectorBufferBase.954" }
%"class.WTF::VectorBufferBase.954" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1246 }
%union.anon.1246 = type { double }
%"class.blink::Persistent.704" = type { %"class.blink::PersistentBase.705" }
%"class.blink::PersistentBase.705" = type { %"class.blink::HeapHashMap.706"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.717" = type { %"class.blink::PersistentBase.718" }
%"class.blink::PersistentBase.718" = type { %"class.blink::HeapVector.719"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.719" = type { %"class.WTF::Vector.722" }
%"class.WTF::Vector.722" = type { %"class.WTF::VectorBuffer.723" }
%"class.WTF::VectorBuffer.723" = type { %"class.WTF::VectorBufferBase.724" }
%"class.WTF::VectorBufferBase.724" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.725", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.730" = type { %class.scoped_refptr.731 }
%class.scoped_refptr.731 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.732", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.732" = type { %"class.base::RefCounted.733" }
%"class.base::RefCounted.733" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.738 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.739", %"class.WTF::Vector.741" }
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"struct.std::__1::pair.744"*, i32, i32 }
%"struct.std::__1::pair.744" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.747 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.748", [4 x i8], %"class.WTF::Vector.750" }
%"class.WTF::RefCounted.748" = type { %"class.base::RefCounted.749" }
%"class.base::RefCounted.749" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.750" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.752", [28 x i8] }>
%"class.WTF::VectorBufferBase.752" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.755" = type { %"class.blink::PersistentBase.756" }
%"class.blink::PersistentBase.756" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.757" = type { %"class.blink::PersistentBase.758" }
%"class.blink::PersistentBase.758" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.761", %"class.blink::Member.763" }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.765" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.767", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.767" = type { %"class.base::RefCounted.768" }
%"class.base::RefCounted.768" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.769" = type { %class.scoped_refptr.770 }
%class.scoped_refptr.770 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.771", [4 x i8], %"class.blink::DataRef.773", %"class.blink::DataRef.839", %"class.blink::TransformOperations", %class.scoped_refptr.747, %"class.blink::Persistent.963", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.771" = type { %"class.base::RefCounted.772" }
%"class.base::RefCounted.772" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.773" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.775", [4 x i8], %"class.blink::DataRef.777", %"class.blink::Persistent.815", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.775" = type { %"class.base::RefCounted.776" }
%"class.base::RefCounted.776" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.777" = type { %class.scoped_refptr.778 }
%class.scoped_refptr.778 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.779", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.797, %class.scoped_refptr.800, %class.scoped_refptr.803, %class.scoped_refptr.806, %class.scoped_refptr.807, %class.scoped_refptr.808, %"class.blink::Persistent.815", %"class.blink::Persistent.830", %"class.absl::optional.834", %"class.absl::optional.834", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.779" = type { %"class.base::RefCounted.780" }
%"class.base::RefCounted.780" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.781", %"class.std::__1::unique_ptr.786" }
%"class.WTF::Vector.781" = type { %"class.WTF::VectorBuffer.782" }
%"class.WTF::VectorBuffer.782" = type { %"class.WTF::VectorBufferBase.783" }
%"class.WTF::VectorBufferBase.783" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.789", %"class.WTF::Vector.781", i32, i32 }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791" }
%"class.WTF::VectorBufferBase.791" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.797 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.798", [4 x i8] }>
%"class.WTF::RefCounted.798" = type { %"class.base::RefCounted.799" }
%"class.base::RefCounted.799" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.800 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.801", [4 x i8] }>
%"class.WTF::RefCounted.801" = type { %"class.base::RefCounted.802" }
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.803 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.804" }>
%"class.WTF::RefCounted.804" = type { %"class.base::RefCounted.805" }
%"class.base::RefCounted.805" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.806 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.807 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.808 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.809", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.811" }
%"class.blink::DataRef.811" = type { %class.scoped_refptr.812 }
%class.scoped_refptr.812 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.755", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.813" }
%"class.WTF::RefCounted.813" = type { %"class.base::RefCounted.814" }
%"class.base::RefCounted.814" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.830" = type { %"class.blink::PersistentBase.831" }
%"class.blink::PersistentBase.831" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.800, %"class.blink::Member.725", i32, [4 x i8] }>
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, [3 x i8], %union.anon.838 }
%union.anon.838 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.815" = type { %"class.blink::PersistentBase.816" }
%"class.blink::PersistentBase.816" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.819" }
%"class.blink::HeapVector.819" = type { %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::Member.825"*, i32, i32 }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.839" = type { %class.scoped_refptr.840 }
%class.scoped_refptr.840 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.841", %"class.blink::DataRef.843", %"class.blink::DataRef.847", %"class.blink::DataRef.856", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.875", %"class.std::__1::unique_ptr.886", %"class.std::__1::unique_ptr.924", %"class.std::__1::unique_ptr.935", %"class.std::__1::unique_ptr.946", %"class.WTF::Vector.952", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.841" = type { %"class.base::RefCounted.842" }
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.843" = type { %class.scoped_refptr.844 }
%class.scoped_refptr.844 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.845", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.845" = type { %"class.base::RefCounted.846" }
%"class.base::RefCounted.846" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.847" = type { %class.scoped_refptr.848 }
%class.scoped_refptr.848 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.849", [4 x i8], %"class.WTF::Vector.851", i8, [7 x i8] }>
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.851" = type { %"class.WTF::VectorBuffer.852" }
%"class.WTF::VectorBuffer.852" = type { %"class.WTF::VectorBufferBase.853" }
%"class.WTF::VectorBufferBase.853" = type { i32*, i32, i32 }
%"class.blink::DataRef.856" = type { %class.scoped_refptr.857 }
%class.scoped_refptr.857 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.858", [4 x i8], %"class.WTF::HashMap.860", %"class.WTF::HashMap.860", %"class.WTF::HashMap.860", %"class.WTF::HashMap.860", %"class.WTF::HashMap.860", %"class.WTF::HashMap.860", %"class.WTF::HashMap.865", %"class.WTF::HashMap.865", %"class.WTF::HashMap.865", %"class.WTF::HashMap.865", %"class.WTF::HashMap.870", %"class.WTF::Vector.781", %"class.WTF::Vector.781", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.858" = type { %"class.base::RefCounted.859" }
%"class.base::RefCounted.859" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"struct.WTF::KeyValuePair.864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.864" = type { %"class.WTF::String", %"class.WTF::Vector.1281" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { i64*, i32, i32 }
%"class.WTF::HashMap.865" = type { %"class.WTF::HashTable.866" }
%"class.WTF::HashTable.866" = type <{ %"struct.WTF::KeyValuePair.869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.869" = type { i64, %"class.WTF::Vector.952" }
%"class.WTF::HashMap.870" = type { %"class.WTF::HashTable.871" }
%"class.WTF::HashTable.871" = type <{ %"struct.WTF::KeyValuePair.874"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.874" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.878" }
%"class.WTF::HashMap.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"struct.WTF::KeyValuePair.882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.882" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1286", %"class.absl::optional.1286", %"class.absl::optional.1286" }
%"class.absl::optional.1286" = type { %"class.absl::optional_internal::optional_data.1287" }
%"class.absl::optional_internal::optional_data.1287" = type { %"class.absl::optional_internal::optional_data_base.1288" }
%"class.absl::optional_internal::optional_data_base.1288" = type { %"class.absl::optional_internal::optional_data_dtor_base.1289" }
%"class.absl::optional_internal::optional_data_dtor_base.1289" = type { i8, %union.anon.1290 }
%union.anon.1290 = type { i32 }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.734", %"class.WTF::Vector.901", %"class.WTF::Vector.889", %"class.WTF::Vector.906", %"class.WTF::Vector.911", %"class.WTF::Vector.916" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.889", %"class.WTF::Vector.889", %"class.WTF::Vector.894" }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %class.scoped_refptr.897*, i32, i32 }
%class.scoped_refptr.897 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.898" }
%"class.base::RefCountedThreadSafe.898" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.889" = type { %"class.WTF::VectorBuffer.890" }
%"class.WTF::VectorBuffer.890" = type { %"class.WTF::VectorBufferBase.891" }
%"class.WTF::VectorBufferBase.891" = type { double*, i32, i32 }
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { i32*, i32, i32 }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { i32*, i32, i32 }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918" }
%"class.WTF::VectorBufferBase.918" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.927" }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.938" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %"class.blink::Persistent.755"*, i32, i32 }
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.755", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.957" }
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { %class.scoped_refptr.960*, i32, i32 }
%class.scoped_refptr.960 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.804", [4 x i8] }>
%"class.blink::Persistent.963" = type { %"class.blink::PersistentBase.964" }
%"class.blink::PersistentBase.964" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.967" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.969" = type { %class.scoped_refptr.970 }
%class.scoped_refptr.970 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.971", [4 x i8], %"class.blink::DataRef.973", %"class.blink::DataRef.977", %"class.blink::DataRef.998", %"class.blink::DataRef.1016", %"class.blink::DataRef.1028", %"class.blink::DataRef.1032", %class.scoped_refptr.1002, i32, [4 x i8] }>
%"class.WTF::RefCounted.971" = type { %"class.base::RefCounted.972" }
%"class.base::RefCounted.972" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.973" = type { %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.975", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.975" = type { %"class.base::RefCounted.976" }
%"class.base::RefCounted.976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.977" = type { %class.scoped_refptr.978 }
%class.scoped_refptr.978 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.979", %class.scoped_refptr.981, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.981 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.982", %"class.std::__1::unique_ptr.988", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.801" }>
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.991, i32, %"struct.std::__1::atomic.309", %"struct.std::__1::atomic.309", i8, i8 }>
%class.sk_sp.991 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.992, %class.SkTDArray.993, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.75" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.992 = type { i8*, i32, i32 }
%class.SkTDArray.993 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.994 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.75", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.994 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.299", [3 x i8] }
%"class.blink::DataRef.998" = type { %class.scoped_refptr.999 }
%class.scoped_refptr.999 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1000", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1000" = type { %"class.base::RefCounted.1001" }
%"class.base::RefCounted.1001" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1002, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1016" = type { %class.scoped_refptr.1017 }
%class.scoped_refptr.1017 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1018", [4 x i8], %class.scoped_refptr.1020, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1018" = type { %"class.base::RefCounted.1019" }
%"class.base::RefCounted.1019" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1020 = type { %"class.base::RefCountedData.1021"* }
%"class.base::RefCountedData.1021" = type { %"class.base::RefCountedThreadSafe.1022", %"class.WTF::Vector.1023" }
%"class.base::RefCountedThreadSafe.1022" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1028" = type { %class.scoped_refptr.1029 }
%class.scoped_refptr.1029 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1030", %class.scoped_refptr.1002, %class.scoped_refptr.1002, %class.scoped_refptr.1002 }
%"class.WTF::RefCounted.1030" = type { %"class.base::RefCounted.1031" }
%"class.base::RefCounted.1031" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1032" = type { %class.scoped_refptr.1033 }
%class.scoped_refptr.1033 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1034", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1034" = type { %"class.base::RefCounted.1035" }
%"class.base::RefCounted.1035" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1002 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1003", %"class.blink::Persistent.1005", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1005" = type { %"class.blink::PersistentBase.1006" }
%"class.blink::PersistentBase.1006" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1009" }
%"class.blink::HeapHashMap.1009" = type { %"class.WTF::HashMap.1012" }
%"class.WTF::HashMap.1012" = type { %"class.WTF::HashTable.1013" }
%"class.WTF::HashTable.1013" = type <{ %"struct.WTF::KeyValuePair.1015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1015" = type opaque
%"class.blink::DataRef.1036" = type { %class.scoped_refptr.1037 }
%class.scoped_refptr.1037 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1038", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1038" = type { %"class.base::RefCounted.1039" }
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1040" = type { %class.scoped_refptr.1041 }
%class.scoped_refptr.1041 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1042", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1042" = type { %"class.base::RefCounted.1043" }
%"class.base::RefCounted.1043" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1044" = type { %class.scoped_refptr.1045 }
%class.scoped_refptr.1045 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1046", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1046" = type { %"class.base::RefCounted.1047" }
%"class.base::RefCounted.1047" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1048" = type { %class.scoped_refptr.1049 }
%class.scoped_refptr.1049 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1050", %class.scoped_refptr.1052 }
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1052 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1068", %"class.blink::StyleVariables", %class.scoped_refptr.1052 }
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1058" }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.WTF::Vector.1061"* }
%"class.WTF::Vector.1061" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292", [32 x i8] }
%"class.WTF::VectorBufferBase.1292" = type { %class.scoped_refptr.1077*, i32, i32 }
%class.scoped_refptr.1077 = type { %"class.blink::ComputedStyle"* }
%"class.blink::PseudoElement" = type <{ %"class.blink::Element", i8, [7 x i8] }>
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1077, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1079" }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1082", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1088", %"class.std::__1::unique_ptr.1211", i8, %"class.absl::optional.1217", %class.scoped_refptr.1193, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1222" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1091, %class.scoped_refptr.1091, %class.scoped_refptr.1091, %class.scoped_refptr.1091, %class.scoped_refptr.1091, %class.scoped_refptr.1091, %class.scoped_refptr.1126, %class.scoped_refptr.1142, %class.scoped_refptr.1143, %class.scoped_refptr.1143, %class.scoped_refptr.1143, %class.scoped_refptr.1143, %class.scoped_refptr.1143, %class.scoped_refptr.1143, %class.scoped_refptr.1183, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1184, %class.scoped_refptr.1207 }
%class.scoped_refptr.1091 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1108" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1092", i8, i8, %class.scoped_refptr.1094, i32, i32 }
%"class.WTF::RefCounted.1092" = type { %"class.base::RefCounted.1093" }
%"class.base::RefCounted.1093" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1094 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1101, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1102", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1095" }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1101 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1127", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1127" = type { %"class.WTF::RefCounted.1128", i8, i8, %class.scoped_refptr.1101, i32, i32 }
%"class.WTF::RefCounted.1128" = type { %"class.base::RefCounted.1129" }
%"class.base::RefCounted.1129" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1130" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1130" = type { %"class.absl::optional_internal::optional_data.1131" }
%"class.absl::optional_internal::optional_data.1131" = type { %"class.absl::optional_internal::optional_data_base.1132" }
%"class.absl::optional_internal::optional_data_base.1132" = type { %"class.absl::optional_internal::optional_data_dtor_base.1133" }
%"class.absl::optional_internal::optional_data_dtor_base.1133" = type { i8, %union.anon.1134 }
%union.anon.1134 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1135", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1135" = type { %"class.std::__1::__vector_base.1136" }
%"class.std::__1::__vector_base.1136" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1137" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1111", %"class.std::__1::unique_ptr.1117", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1126 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1142 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1143 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1144" }
%"class.blink::PaintPropertyNode.1144" = type { %"class.WTF::RefCounted.1145", i8, i8, %class.scoped_refptr.1147, i32, i32 }
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1147 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1094, %class.scoped_refptr.1148, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1170", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1148 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1185" }
%"class.blink::PaintPropertyNode.1185" = type { %"class.WTF::RefCounted.1186", i8, i8, %class.scoped_refptr.1148, i32, i32 }
%"class.WTF::RefCounted.1186" = type { %"class.base::RefCounted.1187" }
%"class.base::RefCounted.1187" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1149" }
%"class.std::__1::vector.1149" = type { %"class.std::__1::__vector_base.1150" }
%"class.std::__1::__vector_base.1150" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1165" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1151, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1158", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1151 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1152, i32, %"class.absl::optional.1153", i8, i32 }
%class.sk_sp.1152 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1153" = type { %"class.absl::optional_internal::optional_data.1154" }
%"class.absl::optional_internal::optional_data.1154" = type { %"class.absl::optional_internal::optional_data_base.1155" }
%"class.absl::optional_internal::optional_data_base.1155" = type { %"class.absl::optional_internal::optional_data_dtor_base.1156" }
%"class.absl::optional_internal::optional_data_dtor_base.1156" = type { i8, %union.anon.1157 }
%union.anon.1157 = type { %struct.SkRect }
%"class.std::__1::vector.1158" = type { %"class.std::__1::__vector_base.1159" }
%"class.std::__1::__vector_base.1159" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1160" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1176" }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { i32* }
%class.scoped_refptr.1183 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1184 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1196" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1094, %"class.absl::optional.1188", %class.scoped_refptr.1193, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1188" = type { %"class.absl::optional_internal::optional_data.1189" }
%"class.absl::optional_internal::optional_data.1189" = type { %"class.absl::optional_internal::optional_data_base.1190" }
%"class.absl::optional_internal::optional_data_base.1190" = type { %"class.absl::optional_internal::optional_data_dtor_base.1191" }
%"class.absl::optional_internal::optional_data_dtor_base.1191" = type { i8, [3 x i8], %union.anon.1192 }
%union.anon.1192 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1199", i32, [4 x i8] }>
%"class.WTF::Vector.1199" = type { %"class.WTF::VectorBuffer.1200" }
%"class.WTF::VectorBuffer.1200" = type { %"class.WTF::VectorBufferBase.1201" }
%"class.WTF::VectorBufferBase.1201" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1207 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1094, %class.scoped_refptr.1148, %class.scoped_refptr.1147 }
%"class.absl::optional.1217" = type { %"class.absl::optional_internal::optional_data.1218" }
%"class.absl::optional_internal::optional_data.1218" = type { %"class.absl::optional_internal::optional_data_base.1219" }
%"class.absl::optional_internal::optional_data_base.1219" = type { %"class.absl::optional_internal::optional_data_dtor_base.1220" }
%"class.absl::optional_internal::optional_data_dtor_base.1220" = type { i8, %union.anon.1221 }
%union.anon.1221 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1193 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1194", [4 x i8] }
%"class.WTF::RefCounted.1194" = type { %"class.base::RefCounted.1195" }
%"class.base::RefCounted.1195" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::FragmentData"* }
%"class.blink::CSSPropertyRef" = type { i32, %"class.blink::CustomProperty" }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member.1231" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.713", %class.scoped_refptr.1240, %"class.WTF::Vector.1250", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.1235" }
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.std::__1::unique_ptr.1253"*, i32, i32 }
%"class.std::__1::unique_ptr.1253" = type opaque
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.blink::HeapVector.1257" = type { %"class.WTF::Vector.1260" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"struct.std::__1::pair.1263"*, i32, i32 }
%"struct.std::__1::pair.1263" = type { %"class.blink::CSSPropertyName", %"class.blink::Member.713" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1269, %"class.blink::Member.1270", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1269 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1272" }
%"class.blink::Persistent.1272" = type { %"class.blink::PersistentBase.1273" }
%"class.blink::PersistentBase.1273" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1274" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1274" = type { %"class.v8::TracedReference.1275" }
%"class.v8::TracedReference.1275" = type { %"class.v8::BasicTracedReference.1276" }
%"class.v8::BasicTracedReference.1276" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink24ComputedStylePropertyMapD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink24ComputedStylePropertyMap5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_ = comdat any

$_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink24ComputedStylePropertyMapE = hidden unnamed_addr constant { [20 x i8*], [3 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::ComputedStylePropertyMap"*)* @_ZN5blink24ComputedStylePropertyMapD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ComputedStylePropertyMap"*, %"class.blink::Visitor"*)* @_ZNK5blink24ComputedStylePropertyMap5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::StylePropertyMapReadOnly"*)* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::CSSStyleValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void ()* @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i32 (%"class.blink::ComputedStylePropertyMap"*)* @_ZNK5blink24ComputedStylePropertyMap4sizeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::ComputedStylePropertyMap"*, i32)* @_ZNK5blink24ComputedStylePropertyMap11GetPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::ComputedStylePropertyMap"*, %"class.WTF::StringImpl"*)* @_ZNK5blink24ComputedStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::ComputedStylePropertyMap"*, %"class.std::__1::function"*)* @_ZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ComputedStylePropertyMap"*, %"class.blink::CSSProperty"*)* @_ZNK5blink24ComputedStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE to i8*), i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink14CustomPropertyE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.8 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24ComputedStylePropertyMap4sizeEv(%"class.blink::ComputedStylePropertyMap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapHashMap.706", align 8
  %3 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* %0)
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %68, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br i1 %8, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %51

16:                                               ; preds = %5
  %17 = icmp eq %"class.blink::Node"* %10, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::Node"* %10 to %"class.blink::Element"*
  %25 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %24, i8 zeroext %7) #7
  %26 = icmp eq %"class.blink::PseudoElement"* %25, null
  %27 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %25, i64 0, i32 0, i32 0, i32 0
  br i1 %26, label %28, label %29

28:                                               ; preds = %23, %18, %16
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.blink::Node"* [ %27, %23 ], [ null, %28 ]
  %31 = load i8, i8* %6, align 8
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = icmp eq i8 %31, 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br i1 %36, label %51, label %38

38:                                               ; preds = %29
  %39 = icmp eq %"class.blink::Node"* %37, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::Node"* %37 to %"class.blink::Element"*
  %47 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %46, i8 zeroext %31) #7
  %48 = icmp eq %"class.blink::PseudoElement"* %47, null
  %49 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %47, i64 0, i32 0, i32 0, i32 0
  br i1 %48, label %50, label %51

50:                                               ; preds = %45, %40, %38
  br label %51

51:                                               ; preds = %11, %29, %45, %50
  %52 = phi %"class.blink::Document"* [ %35, %29 ], [ %35, %50 ], [ %35, %45 ], [ %15, %11 ]
  %53 = phi %"class.blink::Node"* [ %37, %29 ], [ null, %50 ], [ %49, %45 ], [ %10, %11 ]
  %54 = bitcast %"class.blink::Node"* %53 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %55 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %55, i64 10
  %57 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %56, align 8
  %58 = tail call %"class.blink::ExecutionContext"* %57(%"class.blink::Node"* %53) #7
  %59 = tail call dereferenceable(16) %"class.WTF::Vector.1072"* @_ZN5blink27CSSComputedStyleDeclaration20ComputablePropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %58) #7
  %60 = getelementptr inbounds %"class.WTF::Vector.1072", %"class.WTF::Vector.1072"* %59, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = bitcast %"class.blink::HeapHashMap.706"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #7
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 144, i32 0, i32 0
  %64 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %63, align 8
  call void @_ZN5blink28ComputedStyleCSSValueMapping12GetVariablesERKNS_13ComputedStyleEPKNS_16PropertyRegistryE(%"class.blink::HeapHashMap.706"* nonnull sret %2, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %3, %"class.blink::PropertyRegistry"* %64) #7
  %65 = getelementptr inbounds %"class.blink::HeapHashMap.706", %"class.blink::HeapHashMap.706"* %2, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #7
  br label %68

68:                                               ; preds = %1, %51
  %69 = phi i32 [ %67, %51 ], [ 0, %1 ]
  ret i32 %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br i1 %4, label %19, label %7

7:                                                ; preds = %1
  %8 = icmp eq %"class.blink::Node"* %6, null
  br i1 %8, label %87, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %87

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %16 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %15, i8 zeroext %3) #7
  %17 = icmp eq %"class.blink::PseudoElement"* %16, null
  %18 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %16, i64 0, i32 0, i32 0, i32 0
  br i1 %17, label %87, label %19

19:                                               ; preds = %1, %14
  %20 = phi %"class.blink::Node"* [ %6, %1 ], [ %18, %14 ]
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %87, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* nonnull %20) #7
  br i1 %23, label %24, label %87

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  tail call void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"* %28, %"class.blink::Node"* nonnull %20) #7
  %29 = load i8, i8* %2, align 8
  %30 = icmp eq i8 %29, 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br i1 %30, label %44, label %32

32:                                               ; preds = %24
  %33 = icmp eq %"class.blink::Node"* %31, null
  br i1 %33, label %87, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %87

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::Node"* %31 to %"class.blink::Element"*
  %41 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %40, i8 zeroext %29) #7
  %42 = icmp eq %"class.blink::PseudoElement"* %41, null
  %43 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %41, i64 0, i32 0, i32 0, i32 0
  br i1 %42, label %87, label %44

44:                                               ; preds = %24, %39
  %45 = phi %"class.blink::Node"* [ %31, %24 ], [ %43, %39 ]
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %87, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::Node"* %45 to i8 (%"class.blink::Node"*)***
  %49 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %48, align 8
  %50 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %49, i64 34
  %51 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %50, align 8
  %52 = tail call zeroext i8 %51(%"class.blink::Node"* nonnull %45) #7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = load i8, i8* %2, align 8
  br label %56

56:                                               ; preds = %47, %54
  %57 = phi i8 [ %55, %54 ], [ 0, %47 ]
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %59 = bitcast %"class.blink::Node"* %45 to %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)***
  %60 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)**, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %60, i64 71
  %62 = load %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)*, %"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)** %61, align 8
  %63 = tail call %"class.blink::ComputedStyle"* %62(%"class.blink::Node"* nonnull %45, i8 zeroext %57, %"class.WTF::AtomicString"* dereferenceable(8) %58) #7
  %64 = load i8, i8* %2, align 8
  %65 = icmp eq i8 %64, 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br i1 %65, label %79, label %67

67:                                               ; preds = %56
  %68 = icmp eq %"class.blink::Node"* %66, null
  br i1 %68, label %87, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %66, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 12
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::Node"* %66 to %"class.blink::Element"*
  %76 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %75, i8 zeroext %64) #7
  %77 = icmp eq %"class.blink::PseudoElement"* %76, null
  %78 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %76, i64 0, i32 0, i32 0, i32 0
  br i1 %77, label %87, label %79

79:                                               ; preds = %56, %74
  %80 = phi %"class.blink::Node"* [ %66, %56 ], [ %78, %74 ]
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* nonnull %80) #7
  %84 = icmp ne %"class.blink::ComputedStyle"* %63, null
  %85 = and i1 %84, %83
  %86 = select i1 %85, %"class.blink::ComputedStyle"* %63, %"class.blink::ComputedStyle"* null
  ret %"class.blink::ComputedStyle"* %86

87:                                               ; preds = %74, %69, %67, %39, %34, %32, %14, %9, %7, %79, %44, %22, %19
  ret %"class.blink::ComputedStyle"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink24ComputedStylePropertyMap10StyledNodeEv(%"class.blink::ComputedStylePropertyMap"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br i1 %4, label %7, label %9

7:                                                ; preds = %21, %16, %1
  %8 = phi %"class.blink::Node"* [ %6, %1 ], [ null, %21 ], [ %20, %16 ]
  ret %"class.blink::Node"* %8

9:                                                ; preds = %1
  %10 = icmp eq %"class.blink::Node"* %6, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %18 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %17, i8 zeroext %3) #7
  %19 = icmp eq %"class.blink::PseudoElement"* %18, null
  %20 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %18, i64 0, i32 0, i32 0, i32 0
  br i1 %19, label %21, label %7

21:                                               ; preds = %11, %9, %16
  br label %7
}

declare dereferenceable(16) %"class.WTF::Vector.1072"* @_ZN5blink27CSSComputedStyleDeclaration20ComputablePropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink28ComputedStyleCSSValueMapping12GetVariablesERKNS_13ComputedStyleEPKNS_16PropertyRegistryE(%"class.blink::HeapHashMap.706"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::PropertyRegistry"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %0) #7
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %12, align 8
  %14 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %1) #7
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %15, align 8
  %17 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %21, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  br label %43

24:                                               ; preds = %2
  %25 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  br i1 %25, label %29, label %26

26:                                               ; preds = %24
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  br label %43

29:                                               ; preds = %24
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %34, align 8
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %102, label %37

37:                                               ; preds = %29
  %38 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %35, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  br i1 %38, label %39, label %102

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %42 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %40, %"class.WTF::String"* nonnull dereferenceable(8) %41)
  br label %102

43:                                               ; preds = %26, %23
  %44 = phi %"class.WTF::StringImpl"* [ %28, %26 ], [ null, %23 ]
  %45 = phi i64 [ %27, %26 ], [ %18, %23 ]
  %46 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #7
  %47 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 1, i32* %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #7
  br label %88

52:                                               ; preds = %43
  %53 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #7
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %88

56:                                               ; preds = %52
  %57 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #7
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 2, i32* %61, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %58, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %68, align 8
  br label %85

69:                                               ; preds = %56
  %70 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %62, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  %71 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #7
  br i1 %70, label %85, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %75 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %77, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %72
  %80 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %74, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  br i1 %80, label %81, label %85

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %84 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %82, %"class.WTF::String"* nonnull dereferenceable(8) %83)
  br label %85

85:                                               ; preds = %64, %72, %79, %81, %69
  %86 = phi i8* [ %71, %69 ], [ %71, %79 ], [ %71, %81 ], [ %71, %72 ], [ %65, %64 ]
  %87 = phi i1 [ true, %69 ], [ false, %79 ], [ %84, %81 ], [ false, %72 ], [ false, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #7
  br label %102

88:                                               ; preds = %54, %51
  %89 = phi i64 [ %55, %54 ], [ %45, %51 ]
  %90 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #7
  %91 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 1, i32* %93, align 8
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %88
  %97 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %94, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  br i1 %97, label %102, label %98

98:                                               ; preds = %88, %96
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %101 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %99, %"class.WTF::String"* nonnull dereferenceable(8) %100)
  br label %102

102:                                              ; preds = %96, %98, %37, %39, %29, %85
  %103 = phi i8* [ %57, %85 ], [ %30, %29 ], [ %30, %39 ], [ %30, %37 ], [ %90, %98 ], [ %90, %96 ]
  %104 = phi i1 [ %87, %85 ], [ false, %29 ], [ %42, %39 ], [ false, %37 ], [ %101, %98 ], [ true, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #7
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #7
  br label %120

120:                                              ; preds = %102, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #7
  br label %136

136:                                              ; preds = %120, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret i1 %104
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

declare %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink24ComputedStylePropertyMap11GetPropertyENS_13CSSPropertyIDE(%"class.blink::ComputedStylePropertyMap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* %0)
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %1) #7
  %7 = tail call %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24) %6, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %3, %"class.blink::LayoutObject"* null) #7
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi %"class.blink::CSSValue"* [ %7, %5 ], [ null, %2 ]
  ret %"class.blink::CSSValue"* %9
}

declare %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink24ComputedStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE(%"class.blink::ComputedStylePropertyMap"* nocapture readonly, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.blink::CSSPropertyRef", align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* %0)
  %7 = icmp eq %"class.blink::ComputedStyle"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSPropertyRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::Document"* dereferenceable(2848) %16) #7
  %17 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1
  %22 = bitcast %"class.blink::CustomProperty"* %21 to %"class.blink::CSSProperty"*
  br label %26

23:                                               ; preds = %8
  %24 = and i32 %18, 1023
  %25 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %24) #7
  br label %26

26:                                               ; preds = %20, %23
  %27 = phi %"class.blink::CSSProperty"* [ %22, %20 ], [ %25, %23 ]
  %28 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %27, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %6, %"class.blink::LayoutObject"* null, i1 zeroext false) #7
  %29 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #7
  br label %46

46:                                               ; preds = %26, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #7
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %48

48:                                               ; preds = %2, %46
  %49 = phi %"class.WTF::StringImpl"* [ %47, %46 ], [ %1, %2 ]
  %50 = phi %"class.blink::CSSValue"* [ %28, %46 ], [ null, %2 ]
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #7
  br label %65

65:                                               ; preds = %48, %61, %64
  ret %"class.blink::CSSValue"* %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE(%"class.blink::ComputedStylePropertyMap"* nocapture readonly, %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1257", align 8
  %4 = alloca %"class.blink::HeapHashMap.706", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* %0)
  %7 = icmp eq %"class.blink::ComputedStyle"* %6, null
  br i1 %7, label %266, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br i1 %11, label %27, label %14

14:                                               ; preds = %8
  %15 = icmp eq %"class.blink::Node"* %13, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  %23 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %22, i8 zeroext %10) #7
  %24 = icmp eq %"class.blink::PseudoElement"* %23, null
  %25 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %23, i64 0, i32 0, i32 0, i32 0
  br i1 %24, label %26, label %27

26:                                               ; preds = %21, %16, %14
  br label %27

27:                                               ; preds = %8, %21, %26
  %28 = phi %"class.blink::Node"* [ %13, %8 ], [ null, %26 ], [ %25, %21 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = bitcast %"class.blink::HeapVector.1257"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1257"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1257"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1257"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #7
  %37 = load i8, i8* %9, align 8
  %38 = icmp eq i8 %37, 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br i1 %38, label %53, label %40

40:                                               ; preds = %27
  %41 = icmp eq %"class.blink::Node"* %39, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 12
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::Node"* %39 to %"class.blink::Element"*
  %49 = tail call %"class.blink::PseudoElement"* @_ZNK5blink7Element16GetPseudoElementENS_8PseudoIdE(%"class.blink::Element"* nonnull %48, i8 zeroext %37) #7
  %50 = icmp eq %"class.blink::PseudoElement"* %49, null
  %51 = getelementptr inbounds %"class.blink::PseudoElement", %"class.blink::PseudoElement"* %49, i64 0, i32 0, i32 0, i32 0
  br i1 %50, label %52, label %53

52:                                               ; preds = %47, %42, %40
  br label %53

53:                                               ; preds = %27, %47, %52
  %54 = phi %"class.blink::Node"* [ %39, %27 ], [ null, %52 ], [ %51, %47 ]
  %55 = bitcast %"class.blink::Node"* %54 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %56 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %56, i64 10
  %58 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %57, align 8
  %59 = tail call %"class.blink::ExecutionContext"* %58(%"class.blink::Node"* %54) #7
  %60 = tail call dereferenceable(16) %"class.WTF::Vector.1072"* @_ZN5blink27CSSComputedStyleDeclaration20ComputablePropertiesEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %59) #7
  %61 = getelementptr inbounds %"class.WTF::Vector.1072", %"class.WTF::Vector.1072"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.1072", %"class.WTF::Vector.1072"* %60, i64 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %62, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1257"* %3, i64 0, i32 0
  br label %100

70:                                               ; preds = %169, %53
  %71 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 144, i32 0, i32 0
  %72 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %71, align 8
  %73 = bitcast %"class.blink::HeapHashMap.706"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #7
  call void @_ZN5blink28ComputedStyleCSSValueMapping12GetVariablesERKNS_13ComputedStyleEPKNS_16PropertyRegistryE(%"class.blink::HeapHashMap.706"* nonnull sret %4, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %6, %"class.blink::PropertyRegistry"* %72) #7
  %74 = getelementptr inbounds %"class.blink::HeapHashMap.706", %"class.blink::HeapHashMap.706"* %4, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::HeapHashMap.706", %"class.blink::HeapHashMap.706"* %4, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.WTF::KeyValuePair.712"*, %"struct.WTF::KeyValuePair.712"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::HeapHashMap.706", %"class.blink::HeapHashMap.706"* %4, i64 0, i32 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %78, i64 %81
  br i1 %76, label %172, label %83

83:                                               ; preds = %70
  %84 = icmp eq i32 %80, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %83, %89
  %86 = phi %"struct.WTF::KeyValuePair.712"* [ %90, %89 ], [ %78, %83 ]
  %87 = bitcast %"struct.WTF::KeyValuePair.712"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  switch i64 %88, label %92 [
    i64 -1, label %89
    i64 0, label %89
  ]

89:                                               ; preds = %85, %85
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %86, i64 1
  %91 = icmp eq %"struct.WTF::KeyValuePair.712"* %90, %82
  br i1 %91, label %172, label %85

92:                                               ; preds = %85, %83
  %93 = phi %"struct.WTF::KeyValuePair.712"* [ %78, %83 ], [ %86, %85 ]
  %94 = icmp eq %"struct.WTF::KeyValuePair.712"* %93, %82
  br i1 %94, label %172, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::HeapVector.1257", %"class.blink::HeapVector.1257"* %3, i64 0, i32 0
  %97 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %98 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %185

100:                                              ; preds = %68, %169
  %101 = phi %"class.blink::CSSProperty"** [ %62, %68 ], [ %170, %169 ]
  %102 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %101, align 8
  %103 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %102, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %6, %"class.blink::LayoutObject"* null, i1 zeroext false) #7
  %104 = ptrtoint %"class.blink::CSSValue"* %103 to i64
  %105 = icmp eq %"class.blink::CSSValue"* %103, null
  br i1 %105, label %169, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %102, i64 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = load i32, i32* %36, align 4
  %110 = load i32, i32* %35, align 8
  %111 = icmp eq i32 %109, %110
  br i1 %111, label %112, label %121, !prof !2

112:                                              ; preds = %106
  %113 = add i32 %109, 1
  %114 = lshr i32 %109, 2
  %115 = add i32 %113, %114
  %116 = icmp ugt i32 %115, 4
  %117 = select i1 %116, i32 %115, i32 4
  %118 = icmp ugt i32 %117, %113
  %119 = select i1 %118, i32 %117, i32 %113
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1260"* nonnull %69, i32 %119) #7
  %120 = load i32, i32* %36, align 4
  br label %121

121:                                              ; preds = %106, %112
  %122 = phi i32 [ %120, %112 ], [ %109, %106 ]
  %123 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %34, align 8
  %124 = zext i32 %122 to i64
  %125 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %123, i64 %124, i32 0, i32 0
  store i32 %108, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %123, i64 %124, i32 0, i32 1
  %127 = bitcast %"class.WTF::AtomicString"* %126 to i64*
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %123, i64 %124, i32 1
  %129 = bitcast %"class.blink::Member.713"* %128 to i64*
  store i64 %104, i64* %129, align 8
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %166, label %132

132:                                              ; preds = %121
  %133 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %134 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %133, i64 0, i32 1
  %135 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %134) #7
  %136 = icmp eq i8* %135, null
  br i1 %136, label %137, label %139, !prof !2

137:                                              ; preds = %132
  %138 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %134, i8* %138) #7
  br label %139

139:                                              ; preds = %137, %132
  %140 = phi i8* [ %138, %137 ], [ %135, %132 ]
  %141 = bitcast i8* %140 to %"class.blink::ThreadState"**
  %142 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %142, i64 0, i32 9
  %144 = load i8, i8* %143, align 1, !range !3
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %166, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %142, i64 0, i32 13
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %147, align 8
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %142, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %151 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %150, align 8
  %152 = load atomic i64, i64* %129 monotonic, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %163, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %151, i64 0, i32 0, i32 0
  %156 = inttoptr i64 %152 to %"class.blink::CSSValue"*
  %157 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %156, i64 0, i32 0
  %158 = bitcast %"class.blink::MarkingVisitor"* %151 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %159, i64 5
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %160, align 8
  call void %161(%"class.blink::Visitor"* %155, i8* %157, i8* %157, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #7
  %162 = load i64, i64* %147, align 8
  br label %163

163:                                              ; preds = %154, %146
  %164 = phi i64 [ %149, %146 ], [ %162, %154 ]
  %165 = add i64 %164, -1
  store i64 %165, i64* %147, align 8
  br label %166

166:                                              ; preds = %163, %139, %121
  %167 = load i32, i32* %36, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %36, align 4
  br label %169

169:                                              ; preds = %100, %166
  %170 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %101, i64 1
  %171 = icmp eq %"class.blink::CSSProperty"** %170, %66
  br i1 %171, label %70, label %100

172:                                              ; preds = %89, %245, %255, %252, %70, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #7
  %173 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %34, align 8
  %174 = load i32, i32* %36, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %173, i64 %175
  call fastcc void @"_ZNSt3__16__sortIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1263"* %173, %"struct.std::__1::pair.1263"* %176) #7
  %177 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %34, align 8
  %178 = load i32, i32* %36, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %177, i64 %179
  %181 = icmp eq i32 %178, 0
  br i1 %181, label %257, label %182

182:                                              ; preds = %172
  %183 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  br label %258

185:                                              ; preds = %95, %255
  %186 = phi %"struct.WTF::KeyValuePair.712"* [ %93, %95 ], [ %249, %255 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #7
  store i32 1, i32* %98, align 8
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %186, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %99, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %207, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i33
  %199 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %198, i33 1) #7
  %200 = extractvalue { i33, i1 } %199, 1
  %201 = extractvalue { i33, i1 } %199, 0
  %202 = icmp slt i33 %201, 0
  %203 = or i1 %200, %202
  br i1 %203, label %204, label %205, !prof !2

204:                                              ; preds = %195
  call void @llvm.trap() #7
  unreachable

205:                                              ; preds = %195
  %206 = trunc i33 %201 to i32
  store i32 %206, i32* %196, align 4
  br label %207

207:                                              ; preds = %185, %190, %205
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %186, i64 0, i32 1
  %209 = load i32, i32* %36, align 4
  %210 = load i32, i32* %35, align 8
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %212, label %221, !prof !2

212:                                              ; preds = %207
  %213 = add i32 %209, 1
  %214 = lshr i32 %209, 2
  %215 = add i32 %213, %214
  %216 = icmp ugt i32 %215, 4
  %217 = select i1 %216, i32 %215, i32 4
  %218 = icmp ugt i32 %217, %213
  %219 = select i1 %218, i32 %217, i32 %213
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1260"* nonnull %96, i32 %219) #7
  %220 = load i32, i32* %36, align 4
  br label %221

221:                                              ; preds = %207, %212
  %222 = phi i32 [ %220, %212 ], [ %209, %207 ]
  %223 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %34, align 8
  %224 = zext i32 %222 to i64
  %225 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %223, i64 %224
  %226 = bitcast %"struct.std::__1::pair.1263"* %225 to i8*
  %227 = call %"struct.std::__1::pair.1263"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_(i8* %226, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5, %"class.blink::Member.713"* dereferenceable(8) %208) #7
  %228 = load i32, i32* %36, align 4
  %229 = add i32 %228, 1
  store i32 %229, i32* %36, align 4
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %221
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #7
  br label %245

245:                                              ; preds = %221, %241, %244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %186, i64 1
  %247 = icmp eq %"struct.WTF::KeyValuePair.712"* %246, %82
  br i1 %247, label %172, label %248

248:                                              ; preds = %245, %252
  %249 = phi %"struct.WTF::KeyValuePair.712"* [ %253, %252 ], [ %246, %245 ]
  %250 = bitcast %"struct.WTF::KeyValuePair.712"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  switch i64 %251, label %255 [
    i64 -1, label %252
    i64 0, label %252
  ]

252:                                              ; preds = %248, %248
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.712", %"struct.WTF::KeyValuePair.712"* %249, i64 1
  %254 = icmp eq %"struct.WTF::KeyValuePair.712"* %253, %82
  br i1 %254, label %172, label %248

255:                                              ; preds = %248
  %256 = icmp eq %"struct.WTF::KeyValuePair.712"* %249, %82
  br i1 %256, label %172, label %185

257:                                              ; preds = %258, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7
  br label %266

258:                                              ; preds = %182, %258
  %259 = phi %"struct.std::__1::pair.1263"* [ %177, %182 ], [ %264, %258 ]
  %260 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %259, i64 0, i32 0
  %261 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %259, i64 0, i32 1, i32 0, i32 0
  %262 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %261, align 8
  %263 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)** %183, align 8
  call void %263(%"union.std::__1::__function::__policy_storage"* %184, %"class.blink::CSSPropertyName"* dereferenceable(16) %260, %"class.blink::CSSValue"* dereferenceable(3) %262) #7
  %264 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %259, i64 1
  %265 = icmp eq %"struct.std::__1::pair.1263"* %264, %180
  br i1 %265, label %257, label %258

266:                                              ; preds = %2, %257
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink24ComputedStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE(%"class.blink::ComputedStylePropertyMap"* nocapture readonly, %"class.blink::CSSProperty"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink24ComputedStylePropertyMap11UpdateStyleEv(%"class.blink::ComputedStylePropertyMap"* %0)
  %5 = icmp eq %"class.blink::ComputedStyle"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #7
  br label %14

7:                                                ; preds = %2
  %8 = tail call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %1, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %4, %"class.blink::LayoutObject"* null, i1 zeroext false) #7
  %9 = icmp eq %"class.blink::CSSValue"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %8) #7
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  br label %14

13:                                               ; preds = %7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #7
  br label %14

14:                                               ; preds = %10, %13, %6
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  ret %"class.WTF::StringImpl"* %16
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ComputedStylePropertyMapD0Ev(%"class.blink::ComputedStylePropertyMap"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24ComputedStylePropertyMap5TraceEPNS_7VisitorE(%"class.blink::ComputedStylePropertyMap"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ComputedStylePropertyMap", %"class.blink::ComputedStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv(%"class.blink::StylePropertyMapReadOnly"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE() unnamed_addr

declare zeroext i1 @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1260"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.1263"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1260"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.1263"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.1263"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1260"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1260"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1260"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1260"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64 %14) #7
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.1263"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.1263"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1260"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 24
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.1260"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.1260"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1260", %"class.WTF::Vector.1260"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.6, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 24
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.8, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #7
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.1263"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.713"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #7
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %54, label %69

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.std::__1::pair.1263"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #7
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1263"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_(i8*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::Member.713"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.std::__1::pair.1263"*
  %5 = bitcast i8* %0 to i32*
  %6 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast i8* %8 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %14 = getelementptr inbounds i8, i8* %0, i64 16
  %15 = bitcast %"class.blink::Member.713"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %14 to i64*
  store i64 %16, i64* %17, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %3
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #7
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 9
  %32 = load i8, i8* %31, align 1, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %54, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %38, align 8
  %40 = load atomic i64, i64* %17 monotonic, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %39, i64 0, i32 0, i32 0
  %44 = inttoptr i64 %40 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::MarkingVisitor"* %39 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %43, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #7
  %50 = load i64, i64* %35, align 8
  br label %51

51:                                               ; preds = %42, %34
  %52 = phi i64 [ %37, %34 ], [ %50, %42 ]
  %53 = add i64 %52, -1
  store i64 %53, i64* %35, align 8
  br label %54

54:                                               ; preds = %3, %27, %51
  ret %"struct.std::__1::pair.1263"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.1263", align 8
  br label %4

4:                                                ; preds = %271, %2
  %5 = phi %"struct.std::__1::pair.1263"* [ %1, %2 ], [ %255, %271 ]
  %6 = phi %"struct.std::__1::pair.1263"* [ %0, %2 ], [ %14, %271 ]
  %7 = ptrtoint %"struct.std::__1::pair.1263"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %8, i64 0, i32 0
  %10 = ptrtoint %"struct.std::__1::pair.1263"* %5 to i64
  br label %11

11:                                               ; preds = %282, %4
  %12 = phi %"struct.std::__1::pair.1263"* [ %6, %4 ], [ %283, %282 ]
  br label %13

13:                                               ; preds = %216, %11
  %14 = phi %"struct.std::__1::pair.1263"* [ %12, %11 ], [ %207, %216 ]
  %15 = ptrtoint %"struct.std::__1::pair.1263"* %14 to i64
  %16 = sub i64 %7, %15
  %17 = sdiv exact i64 %16, 24
  switch i64 %17, label %39 [
    i64 0, label %286
    i64 1, label %286
    i64 2, label %18
    i64 3, label %24
    i64 4, label %28
    i64 5, label %33
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %5, i64 -1
  %20 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %20, %"class.blink::CSSPropertyName"* dereferenceable(16) %21) #7
  br i1 %22, label %23, label %286

23:                                               ; preds = %18
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* dereferenceable(24) %19) #7
  br label %286

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %5, i64 -1
  %27 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %25, %"struct.std::__1::pair.1263"* %26)
  br label %286

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 2
  %31 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %5, i64 -1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %29, %"struct.std::__1::pair.1263"* %30, %"struct.std::__1::pair.1263"* %31)
  br label %286

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 2
  %36 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 3
  %37 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %5, i64 -1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %34, %"struct.std::__1::pair.1263"* %35, %"struct.std::__1::pair.1263"* %36, %"struct.std::__1::pair.1263"* %37)
  br label %286

39:                                               ; preds = %13
  %40 = icmp slt i64 %16, 168
  br i1 %40, label %41, label %166

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 2
  %43 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %44 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %43, %"struct.std::__1::pair.1263"* %42) #7
  %45 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 3
  %46 = icmp eq %"struct.std::__1::pair.1263"* %45, %5
  br i1 %46, label %286, label %47

47:                                               ; preds = %41
  %48 = bitcast %"struct.std::__1::pair.1263"* %3 to i8*
  %49 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 1
  %51 = bitcast %"class.WTF::AtomicString"* %50 to i64*
  %52 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 1
  %53 = bitcast %"class.blink::Member.713"* %52 to i64*
  %54 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = bitcast %"class.WTF::AtomicString"* %50 to <2 x i64>*
  br label %58

58:                                               ; preds = %163, %47
  %59 = phi %"struct.std::__1::pair.1263"* [ %45, %47 ], [ %164, %163 ]
  %60 = phi %"struct.std::__1::pair.1263"* [ %42, %47 ], [ %59, %163 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %59, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %60, i64 0, i32 0
  %63 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %61, %"class.blink::CSSPropertyName"* dereferenceable(16) %62) #7
  br i1 %63, label %64, label %163

64:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #7
  %65 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %59, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %49, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %59, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::AtomicString"* %67 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  store <2 x i64> %70, <2 x i64>* %57, align 8
  br label %71

71:                                               ; preds = %112, %64
  %72 = phi %"struct.std::__1::pair.1263"* [ %59, %64 ], [ %73, %112 ]
  %73 = phi %"struct.std::__1::pair.1263"* [ %60, %64 ], [ %113, %112 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %73, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %72, i64 0, i32 0, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %72, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %73, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::AtomicString"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %82 = bitcast %"class.WTF::AtomicString"* %77 to i64*
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #7
  br label %99

99:                                               ; preds = %98, %95, %71
  %100 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %73, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %72, i64 0, i32 1
  %102 = bitcast %"class.blink::Member.713"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.blink::Member.713"* %101 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %99
  %108 = inttoptr i64 %103 to i8*
  %109 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #7
  br label %110

110:                                              ; preds = %107, %99
  %111 = icmp eq %"struct.std::__1::pair.1263"* %73, %14
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %73, i64 -1
  %114 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %113, i64 0, i32 0
  %115 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %54, %"class.blink::CSSPropertyName"* dereferenceable(16) %114) #7
  br i1 %115, label %71, label %116

116:                                              ; preds = %112, %110
  %117 = phi %"struct.std::__1::pair.1263"* [ %14, %110 ], [ %73, %112 ]
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::AtomicString"* %78 to i64*
  %120 = bitcast %"class.blink::Member.713"* %100 to i64*
  %121 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %117, i64 0, i32 0, i32 0
  %122 = load i32, i32* %49, align 8
  store i32 %122, i32* %121, align 8
  %123 = load i64, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  store i64 %123, i64* %119, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #7
  br label %139

139:                                              ; preds = %138, %135, %116
  %140 = load i64, i64* %53, align 8
  store atomic i64 %140, i64* %120 monotonic, align 8
  %141 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = inttoptr i64 %140 to i8*
  %145 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %144) #7
  br label %146

146:                                              ; preds = %143, %139
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #7
  br label %162

162:                                              ; preds = %161, %158, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #7
  br label %163

163:                                              ; preds = %162, %58
  %164 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %59, i64 1
  %165 = icmp eq %"struct.std::__1::pair.1263"* %164, %5
  br i1 %165, label %286, label %58

166:                                              ; preds = %39
  %167 = icmp sgt i64 %16, 23976
  %168 = udiv i64 %16, 48
  %169 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 %168
  br i1 %167, label %170, label %175

170:                                              ; preds = %166
  %171 = udiv i64 %16, 96
  %172 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 %171
  %173 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %169, i64 %171
  %174 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %172, %"struct.std::__1::pair.1263"* %169, %"struct.std::__1::pair.1263"* %173, %"struct.std::__1::pair.1263"* %8)
  br label %177

175:                                              ; preds = %166
  %176 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %169, %"struct.std::__1::pair.1263"* %8)
  br label %177

177:                                              ; preds = %175, %170
  %178 = phi i32 [ %174, %170 ], [ %176, %175 ]
  %179 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %169, i64 0, i32 0
  %181 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %180) #7
  br i1 %181, label %224, label %182

182:                                              ; preds = %177, %219
  %183 = phi %"struct.std::__1::pair.1263"* [ %184, %219 ], [ %8, %177 ]
  %184 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %183, i64 -1
  %185 = icmp eq %"struct.std::__1::pair.1263"* %14, %184
  br i1 %185, label %186, label %219

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %188 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %9) #7
  br i1 %188, label %200, label %189

189:                                              ; preds = %186
  %190 = icmp eq %"struct.std::__1::pair.1263"* %187, %8
  br i1 %190, label %286, label %191

191:                                              ; preds = %189, %197
  %192 = phi %"struct.std::__1::pair.1263"* [ %198, %197 ], [ %187, %189 ]
  %193 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %192, i64 0, i32 0
  %194 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %193) #7
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %192, %"struct.std::__1::pair.1263"* dereferenceable(24) %8) #7
  %196 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %192, i64 1
  br label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %192, i64 1
  %199 = icmp eq %"struct.std::__1::pair.1263"* %198, %8
  br i1 %199, label %286, label %191

200:                                              ; preds = %195, %186
  %201 = phi %"struct.std::__1::pair.1263"* [ %187, %186 ], [ %196, %195 ]
  %202 = icmp eq %"struct.std::__1::pair.1263"* %201, %8
  br i1 %202, label %286, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"struct.std::__1::pair.1263"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"struct.std::__1::pair.1263"* [ %213, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"struct.std::__1::pair.1263"* [ %204, %203 ], [ %210, %206 ]
  %208 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %207, i64 0, i32 0
  %209 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %208) #7
  %210 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"struct.std::__1::pair.1263"* [ %213, %211 ], [ %205, %206 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %212, i64 -1
  %214 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %213, i64 0, i32 0
  %215 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %214) #7
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"struct.std::__1::pair.1263"* %207, %213
  br i1 %217, label %218, label %13

218:                                              ; preds = %216
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %207, %"struct.std::__1::pair.1263"* dereferenceable(24) %213) #7
  br label %203

219:                                              ; preds = %182
  %220 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %184, i64 0, i32 0
  %221 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %220, %"class.blink::CSSPropertyName"* dereferenceable(16) %180) #7
  br i1 %221, label %222, label %182

222:                                              ; preds = %219
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* dereferenceable(24) %184) #7
  %223 = add i32 %178, 1
  br label %224

224:                                              ; preds = %177, %222
  %225 = phi i32 [ %223, %222 ], [ %178, %177 ]
  %226 = phi %"struct.std::__1::pair.1263"* [ %184, %222 ], [ %8, %177 ]
  %227 = ptrtoint %"struct.std::__1::pair.1263"* %14 to i64
  %228 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %14, i64 1
  %229 = icmp ult %"struct.std::__1::pair.1263"* %228, %226
  br i1 %229, label %230, label %252

230:                                              ; preds = %224, %248
  %231 = phi %"struct.std::__1::pair.1263"* [ %251, %248 ], [ %169, %224 ]
  %232 = phi i32 [ %249, %248 ], [ %225, %224 ]
  %233 = phi %"struct.std::__1::pair.1263"* [ %240, %248 ], [ %228, %224 ]
  %234 = phi %"struct.std::__1::pair.1263"* [ %243, %248 ], [ %226, %224 ]
  %235 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %231, i64 0, i32 0
  br label %236

236:                                              ; preds = %236, %230
  %237 = phi %"struct.std::__1::pair.1263"* [ %233, %230 ], [ %240, %236 ]
  %238 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %237, i64 0, i32 0
  %239 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %238, %"class.blink::CSSPropertyName"* dereferenceable(16) %235) #7
  %240 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %237, i64 1
  br i1 %239, label %236, label %241

241:                                              ; preds = %236, %241
  %242 = phi %"struct.std::__1::pair.1263"* [ %243, %241 ], [ %234, %236 ]
  %243 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %242, i64 -1
  %244 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %243, i64 0, i32 0
  %245 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %244, %"class.blink::CSSPropertyName"* dereferenceable(16) %235) #7
  br i1 %245, label %246, label %241

246:                                              ; preds = %241
  %247 = icmp ugt %"struct.std::__1::pair.1263"* %237, %243
  br i1 %247, label %252, label %248

248:                                              ; preds = %246
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %237, %"struct.std::__1::pair.1263"* dereferenceable(24) %243) #7
  %249 = add i32 %232, 1
  %250 = icmp eq %"struct.std::__1::pair.1263"* %231, %237
  %251 = select i1 %250, %"struct.std::__1::pair.1263"* %243, %"struct.std::__1::pair.1263"* %231
  br label %230

252:                                              ; preds = %246, %224
  %253 = phi %"struct.std::__1::pair.1263"* [ %169, %224 ], [ %231, %246 ]
  %254 = phi i32 [ %225, %224 ], [ %232, %246 ]
  %255 = phi %"struct.std::__1::pair.1263"* [ %228, %224 ], [ %237, %246 ]
  %256 = icmp eq %"struct.std::__1::pair.1263"* %255, %253
  br i1 %256, label %263, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %253, i64 0, i32 0
  %259 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %255, i64 0, i32 0
  %260 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %258, %"class.blink::CSSPropertyName"* dereferenceable(16) %259) #7
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %255, %"struct.std::__1::pair.1263"* dereferenceable(24) %253) #7
  %262 = add i32 %254, 1
  br label %263

263:                                              ; preds = %252, %261, %257
  %264 = phi i32 [ %262, %261 ], [ %254, %257 ], [ %254, %252 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %273

266:                                              ; preds = %263
  %267 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %255)
  %268 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %255, i64 1
  %269 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1263"* %268, %"struct.std::__1::pair.1263"* %5)
  br i1 %269, label %270, label %272

270:                                              ; preds = %266
  br i1 %267, label %286, label %271

271:                                              ; preds = %270, %284
  br label %4

272:                                              ; preds = %266
  br i1 %267, label %282, label %273

273:                                              ; preds = %272, %263
  %274 = ptrtoint %"struct.std::__1::pair.1263"* %255 to i64
  %275 = sub i64 %274, %227
  %276 = sdiv exact i64 %275, 24
  %277 = sub i64 %10, %274
  %278 = sdiv exact i64 %277, 24
  %279 = icmp slt i64 %276, %278
  br i1 %279, label %280, label %284

280:                                              ; preds = %273
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1263"* %14, %"struct.std::__1::pair.1263"* %255)
  %281 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %255, i64 1
  br label %282

282:                                              ; preds = %280, %272
  %283 = phi %"struct.std::__1::pair.1263"* [ %268, %272 ], [ %281, %280 ]
  br label %11

284:                                              ; preds = %273
  %285 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %255, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1263"* %285, %"struct.std::__1::pair.1263"* %5)
  br label %271

286:                                              ; preds = %270, %200, %13, %13, %189, %197, %163, %41, %18, %23, %24, %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %5) #7
  %7 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %4) #7
  br i1 %6, label %13, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %18

10:                                               ; preds = %9
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* dereferenceable(24) %2) #7
  %11 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %5) #7
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %1) #7
  br label %18

13:                                               ; preds = %3
  br i1 %8, label %14, label %15

14:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %2) #7
  br label %18

15:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %1) #7
  %16 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %4) #7
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* dereferenceable(24) %2) #7
  br label %18

18:                                               ; preds = %15, %17, %10, %12, %9, %14
  %19 = phi i32 [ 1, %14 ], [ 0, %9 ], [ 2, %12 ], [ 1, %10 ], [ 2, %17 ], [ 1, %15 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* %2)
  %6 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %6, %"class.blink::CSSPropertyName"* dereferenceable(16) %7) #7
  br i1 %8, label %9, label %19

9:                                                ; preds = %4
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %2, %"struct.std::__1::pair.1263"* dereferenceable(24) %3) #7
  %10 = add i32 %5, 1
  %11 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %11) #7
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* dereferenceable(24) %2) #7
  %14 = add i32 %5, 2
  %15 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %11, %"class.blink::CSSPropertyName"* dereferenceable(16) %15) #7
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %1) #7
  %18 = add i32 %5, 3
  br label %19

19:                                               ; preds = %9, %17, %13, %4
  %20 = phi i32 [ %18, %17 ], [ %14, %13 ], [ %10, %9 ], [ %5, %4 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* %2, %"struct.std::__1::pair.1263"* %3)
  %7 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %8) #7
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %3, %"struct.std::__1::pair.1263"* dereferenceable(24) %4) #7
  %11 = add i32 %6, 1
  %12 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %2, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %8, %"class.blink::CSSPropertyName"* dereferenceable(16) %12) #7
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %2, %"struct.std::__1::pair.1263"* dereferenceable(24) %3) #7
  %15 = add i32 %6, 2
  %16 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %12, %"class.blink::CSSPropertyName"* dereferenceable(16) %16) #7
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %1, %"struct.std::__1::pair.1263"* dereferenceable(24) %2) #7
  %19 = add i32 %6, 3
  %20 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %16, %"class.blink::CSSPropertyName"* dereferenceable(16) %20) #7
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %1) #7
  %23 = add i32 %6, 4
  br label %24

24:                                               ; preds = %10, %18, %22, %14, %5
  %25 = phi i32 [ %23, %22 ], [ %19, %18 ], [ %15, %14 ], [ %11, %10 ], [ %6, %5 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.1263", align 8
  %4 = ptrtoint %"struct.std::__1::pair.1263"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.1263"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %29 [
    i64 0, label %161
    i64 1, label %161
    i64 2, label %8
    i64 3, label %14
    i64 4, label %18
    i64 5, label %23
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %10, %"class.blink::CSSPropertyName"* dereferenceable(16) %11) #7
  br i1 %12, label %13, label %161

13:                                               ; preds = %8
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* dereferenceable(24) %9) #7
  br label %161

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 -1
  %17 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %15, %"struct.std::__1::pair.1263"* %16)
  br label %161

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 2
  %21 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 -1
  %22 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %19, %"struct.std::__1::pair.1263"* %20, %"struct.std::__1::pair.1263"* %21)
  br label %161

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 2
  %26 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 3
  %27 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %24, %"struct.std::__1::pair.1263"* %25, %"struct.std::__1::pair.1263"* %26, %"struct.std::__1::pair.1263"* %27)
  br label %161

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 2
  %31 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink24ComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1263"* %0, %"struct.std::__1::pair.1263"* %31, %"struct.std::__1::pair.1263"* %30)
  %33 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 3
  %34 = icmp eq %"struct.std::__1::pair.1263"* %33, %1
  br i1 %34, label %161, label %35

35:                                               ; preds = %29
  %36 = bitcast %"struct.std::__1::pair.1263"* %3 to i8*
  %37 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 1
  %39 = bitcast %"class.WTF::AtomicString"* %38 to i64*
  %40 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 1
  %41 = bitcast %"class.blink::Member.713"* %40 to i64*
  %42 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = bitcast %"class.WTF::AtomicString"* %38 to <2 x i64>*
  br label %46

46:                                               ; preds = %35, %154
  %47 = phi %"struct.std::__1::pair.1263"* [ %33, %35 ], [ %156, %154 ]
  %48 = phi i32 [ 0, %35 ], [ %155, %154 ]
  %49 = phi %"struct.std::__1::pair.1263"* [ %30, %35 ], [ %47, %154 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %47, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %49, i64 0, i32 0
  %52 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %50, %"class.blink::CSSPropertyName"* dereferenceable(16) %51) #7
  br i1 %52, label %53, label %154

53:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %54 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %47, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %37, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %47, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::AtomicString"* %56 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  store <2 x i64> %59, <2 x i64>* %45, align 8
  br label %60

60:                                               ; preds = %101, %53
  %61 = phi %"struct.std::__1::pair.1263"* [ %47, %53 ], [ %62, %101 ]
  %62 = phi %"struct.std::__1::pair.1263"* [ %49, %53 ], [ %102, %101 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %61, i64 0, i32 0, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %61, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %62, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %71 = bitcast %"class.WTF::AtomicString"* %66 to i64*
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %87, %84, %60
  %89 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %62, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %61, i64 0, i32 1
  %91 = bitcast %"class.blink::Member.713"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.blink::Member.713"* %90 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %88
  %97 = inttoptr i64 %92 to i8*
  %98 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #7
  br label %99

99:                                               ; preds = %88, %96
  %100 = icmp eq %"struct.std::__1::pair.1263"* %62, %0
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %62, i64 -1
  %103 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %102, i64 0, i32 0
  %104 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %42, %"class.blink::CSSPropertyName"* dereferenceable(16) %103) #7
  br i1 %104, label %60, label %105

105:                                              ; preds = %99, %101
  %106 = phi %"struct.std::__1::pair.1263"* [ %0, %99 ], [ %62, %101 ]
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %109 = bitcast %"class.blink::Member.713"* %89 to i64*
  %110 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %106, i64 0, i32 0, i32 0
  %111 = load i32, i32* %37, align 8
  store i32 %111, i32* %110, align 8
  %112 = load i64, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %43, align 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %112, i64* %108, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #7
  br label %128

128:                                              ; preds = %127, %124, %105
  %129 = load i64, i64* %41, align 8
  store atomic i64 %129, i64* %109 monotonic, align 8
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = inttoptr i64 %129 to i8*
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #7
  br label %135

135:                                              ; preds = %128, %132
  %136 = add i32 %48, 1
  %137 = icmp eq i32 %136, 8
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #7
  br label %153

153:                                              ; preds = %135, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #7
  br i1 %137, label %158, label %154

154:                                              ; preds = %153, %46
  %155 = phi i32 [ %136, %153 ], [ %48, %46 ]
  %156 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %47, i64 1
  %157 = icmp eq %"struct.std::__1::pair.1263"* %156, %1
  br i1 %157, label %161, label %46

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %47, i64 1
  %160 = icmp eq %"struct.std::__1::pair.1263"* %159, %1
  br label %161

161:                                              ; preds = %154, %158, %29, %8, %13, %2, %2, %23, %18, %14
  %162 = phi i1 [ true, %23 ], [ true, %18 ], [ true, %14 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %8 ], [ true, %29 ], [ %160, %158 ], [ true, %154 ]
  ret i1 %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1263"*, %"struct.std::__1::pair.1263"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %3, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store i64 %14, i64* %7, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #7
  br label %30

30:                                               ; preds = %29, %26, %2
  store i32 %4, i32* %9, align 8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %8, i64* %13, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #7
  br label %46

46:                                               ; preds = %30, %42, %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.1263", %"struct.std::__1::pair.1263"* %1, i64 0, i32 1
  %49 = bitcast %"class.blink::Member.713"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.713"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store atomic i64 %52, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %51 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::Member.713"* %47 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #7
  br label %59

59:                                               ; preds = %55, %46
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::Member.713"* %48 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #7
  br label %66

66:                                               ; preds = %59, %62
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
