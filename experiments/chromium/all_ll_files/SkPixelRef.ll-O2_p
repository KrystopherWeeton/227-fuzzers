; ModuleID = '../../third_party/skia/src/core/SkPixelRef.cpp'
source_filename = "../../third_party/skia/src/core/SkPixelRef.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.11", i8, [6 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.1" }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.1", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.sk_sp = type { %class.SkIDChangeListener* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.1", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkPixelRef* }
%class.SkDiscardableMemory = type opaque
%struct.PixelRef = type { %class.SkPixelRef.base, void (i8*, i8*)*, i8* }
%class.SkPixelRef.base = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.11", i8 }>

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv = comdat any

@_ZZN8SkNextID7ImageIDEvE6nextID = internal global { { i32 } } { { i32 } { i32 2 } }, align 4
@_ZTV10SkPixelRef = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPixelRef*)* @_ZN10SkPixelRefD2Ev to i8*), i8* bitcast (void (%class.SkPixelRef*)* @_ZN10SkPixelRefD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%class.SkPixelRef*)* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@_ZTVZ22SkMakePixelRefWithProciimPvPFvS_S_ES_E8PixelRef = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.PixelRef*)* @_ZZ22SkMakePixelRefWithProciimPvPFvS_S_ES_EN8PixelRefD2Ev to i8*), i8* bitcast (void (%struct.PixelRef*)* @_ZZ22SkMakePixelRefWithProciimPvPFvS_S_ES_EN8PixelRefD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%class.SkPixelRef*)* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv to i8*)] }, align 8

@_ZN10SkPixelRefC1EiiPvm = hidden unnamed_addr alias void (%class.SkPixelRef*, i32, i32, i8*, i64), void (%class.SkPixelRef*, i32, i32, i8*, i64)* @_ZN10SkPixelRefC2EiiPvm
@_ZN10SkPixelRefD1Ev = hidden unnamed_addr alias void (%class.SkPixelRef*), void (%class.SkPixelRef*)* @_ZN10SkPixelRefD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN8SkNextID7ImageIDEv() local_unnamed_addr #0 align 2 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %1, label %4

4:                                                ; preds = %1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRefC2EiiPvm(%class.SkPixelRef*, i32, i32, i8*, i64) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 4
  store i8* %3, i8** %10, align 8
  %11 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 5
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %12) #7
  %13 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %14 seq_cst, align 4
  %15 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 10
  store i8 0, i8* %15, align 1
  ret void
}

declare void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef13needsNewGenIDEv(%class.SkPixelRef* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 0, i32* %2 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 seq_cst, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  br i1 %6, label %28, label %8

8:                                                ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %7) #7
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw xchg i8* %9, i8 0 seq_cst
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = load atomic i32, i32* %3 seq_cst, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %13, %16
  %17 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %16, label %19

19:                                               ; preds = %16
  %20 = or i32 %17, 1
  %21 = cmpxchg i32* %3, i32 0, i32 %20 seq_cst seq_cst
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23
  br label %25

25:                                               ; preds = %19, %13
  %26 = phi i32 [ %14, %13 ], [ %24, %19 ]
  %27 = and i32 %26, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %27) #7
  br label %29

28:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %7) #7
  br label %29

29:                                               ; preds = %8, %25, %28
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef24callGenIDChangeListenersEv(%class.SkPixelRef*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  br i1 %5, label %27, label %7

7:                                                ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %6) #7
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw xchg i8* %8, i8 0 seq_cst
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = load atomic i32, i32* %2 seq_cst, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %12, %15
  %16 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %15, label %18

18:                                               ; preds = %15
  %19 = or i32 %16, 1
  %20 = cmpxchg i32* %2, i32 0, i32 %19 seq_cst seq_cst
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22
  br label %24

24:                                               ; preds = %12, %18
  %25 = phi i32 [ %13, %12 ], [ %23, %18 ]
  %26 = and i32 %25, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %26) #7
  br label %28

27:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %6) #7
  br label %28

28:                                               ; preds = %7, %24, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRefD0Ev(%class.SkPixelRef*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 seq_cst, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  br i1 %6, label %28, label %8

8:                                                ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %7) #7
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw xchg i8* %9, i8 0 seq_cst
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = load atomic i32, i32* %3 seq_cst, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %13, %16
  %17 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %16, label %19

19:                                               ; preds = %16
  %20 = or i32 %17, 1
  %21 = cmpxchg i32* %3, i32 0, i32 %20 seq_cst seq_cst
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23
  br label %25

25:                                               ; preds = %19, %13
  %26 = phi i32 [ %14, %13 ], [ %24, %19 ]
  %27 = and i32 %26, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %27) #7
  br label %29

28:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %7) #7
  br label %29

29:                                               ; preds = %8, %25, %28
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %7) #7
  %30 = bitcast %class.SkPixelRef* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef18android_only_resetEiim(%class.SkPixelRef*, i32, i32, i64) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 5
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 seq_cst, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  br i1 %11, label %33, label %13

13:                                               ; preds = %4
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %12) #7
  %14 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw xchg i8* %14, i8 0 seq_cst
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %13
  %19 = load atomic i32, i32* %8 seq_cst, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %30

21:                                               ; preds = %18, %21
  %22 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %21, label %24

24:                                               ; preds = %21
  %25 = or i32 %22, 1
  %26 = cmpxchg i32* %8, i32 0, i32 %25 seq_cst seq_cst
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28
  br label %30

30:                                               ; preds = %24, %18
  %31 = phi i32 [ %19, %18 ], [ %29, %24 ]
  %32 = and i32 %31, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %32) #7
  br label %34

33:                                               ; preds = %4
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %12) #7
  br label %34

34:                                               ; preds = %13, %30, %33
  store atomic i32 0, i32* %8 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef19notifyPixelsChangedEv(%class.SkPixelRef*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  br i1 %5, label %27, label %7

7:                                                ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %6) #7
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw xchg i8* %8, i8 0 seq_cst
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = load atomic i32, i32* %2 seq_cst, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %12, %15
  %16 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %15, label %18

18:                                               ; preds = %15
  %19 = or i32 %16, 1
  %20 = cmpxchg i32* %2, i32 0, i32 %19 seq_cst seq_cst
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22
  br label %24

24:                                               ; preds = %18, %12
  %25 = phi i32 [ %13, %12 ], [ %23, %18 ]
  %26 = and i32 %25, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %26) #7
  br label %28

27:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %6) #7
  br label %28

28:                                               ; preds = %7, %24, %27
  store atomic i32 0, i32* %2 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkPixelRef15getGenerationIDEv(%class.SkPixelRef* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1, %5
  %6 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %5, label %8

8:                                                ; preds = %5
  %9 = or i32 %6, 1
  %10 = cmpxchg i32* %2, i32 0, i32 %9 seq_cst seq_cst
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i32 [ %3, %1 ], [ %13, %8 ]
  %16 = and i32 %15, -2
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPixelRef*, %class.sk_sp* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %5 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %4, align 8
  %6 = icmp eq %class.SkIDChangeListener* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 seq_cst, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 8
  %14 = bitcast %class.sk_sp* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %4, align 8
  %16 = bitcast %class.sk_sp* %3 to i64*
  store i64 %15, i64* %16, align 8
  call void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"* %13, %class.sk_sp* nonnull %3) #7
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %18 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %17, align 8
  %19 = icmp eq %class.SkIDChangeListener* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkIDChangeListener* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkIDChangeListener* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #7
  br label %30

30:                                               ; preds = %7, %2, %24, %20, %12
  ret void
}

declare void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"*, %class.sk_sp*) local_unnamed_addr #2

declare void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #2

declare void @_Z26SkNotifyBitmapGenIDIsStalej(i32) local_unnamed_addr #2

declare void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkPixelRef12setImmutableEv(%class.SkPixelRef* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 10
  store i8 2, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10SkPixelRef18setImmutableWithIDEj(%class.SkPixelRef* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 10
  store i8 2, i8* %3, align 1
  %4 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %4 seq_cst, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkPixelRef23setTemporarilyImmutableEv(%class.SkPixelRef* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 10
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkPixelRef17restoreMutabilityEv(%class.SkPixelRef* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %0, i64 0, i32 10
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22SkMakePixelRefWithProciimPvPFvS_S_ES_(%class.sk_sp.15* noalias nocapture sret, i32, i32, i64, i8*, void (i8*, i8*)*, i8*) local_unnamed_addr #1 {
  %8 = icmp eq void (i8*, i8*)* %5, null
  br i1 %8, label %9, label %29

9:                                                ; preds = %7
  %10 = ptrtoint i8* %4 to i64
  %11 = tail call i8* @_Znwm(i64 88) #8, !noalias !2
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !2
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !noalias !2
  %15 = getelementptr inbounds i8, i8* %11, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 4, !noalias !2
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i64*
  store i64 %10, i64* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %11, i64 32
  %22 = bitcast i8* %21 to i64*
  store i64 %3, i64* %22, align 8, !noalias !2
  %23 = getelementptr inbounds i8, i8* %11, i64 48
  %24 = bitcast i8* %23 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %24) #7, !noalias !2
  %25 = getelementptr inbounds i8, i8* %11, i64 80
  store i8 0, i8* %25, align 1, !noalias !2
  %26 = getelementptr inbounds i8, i8* %11, i64 40
  %27 = bitcast i8* %26 to i32*
  store atomic i32 0, i32* %27 seq_cst, align 4, !noalias !2
  %28 = getelementptr inbounds i8, i8* %11, i64 81
  store i8 0, i8* %28, align 1, !noalias !2
  br label %52

29:                                               ; preds = %7
  %30 = tail call i8* @_Znwm(i64 104) #8
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 4
  %33 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %1, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %30, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %30, i64 24
  %39 = bitcast i8* %38 to i8**
  store i8* %4, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %30, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %3, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %30, i64 48
  %43 = bitcast i8* %42 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %43) #7
  %44 = getelementptr inbounds i8, i8* %30, i64 80
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %30, i64 40
  %46 = bitcast i8* %45 to i32*
  store atomic i32 0, i32* %46 seq_cst, align 4
  %47 = getelementptr inbounds i8, i8* %30, i64 81
  store i8 0, i8* %47, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZ22SkMakePixelRefWithProciimPvPFvS_S_ES_E8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %48 = getelementptr inbounds i8, i8* %30, i64 88
  %49 = bitcast i8* %48 to void (i8*, i8*)**
  store void (i8*, i8*)* %5, void (i8*, i8*)** %49, align 8
  %50 = getelementptr inbounds i8, i8* %30, i64 96
  %51 = bitcast i8* %50 to i8**
  store i8* %6, i8** %51, align 8
  br label %52

52:                                               ; preds = %29, %9
  %53 = phi i8* [ %30, %29 ], [ %11, %9 ]
  %54 = bitcast %class.sk_sp.15* %0 to i8**
  store i8* %53, i8** %54, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkDiscardableMemory* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv(%class.SkPixelRef*) unnamed_addr #1 comdat align 2 {
  ret %class.SkDiscardableMemory* null
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZ22SkMakePixelRefWithProciimPvPFvS_S_ES_EN8PixelRefD2Ev(%struct.PixelRef*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZ22SkMakePixelRefWithProciimPvPFvS_S_ES_E8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 1
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 8
  %5 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  tail call void %4(i8* %6, i8* %8) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV10SkPixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 seq_cst, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 8
  br i1 %12, label %34, label %14

14:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %13) #7
  %15 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw xchg i8* %15, i8 0 seq_cst
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %14
  %20 = load atomic i32, i32* %9 seq_cst, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %19, %22
  %23 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN8SkNextID7ImageIDEvE6nextID, i64 0, i32 0, i32 0), i32 2 monotonic
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %22, label %25

25:                                               ; preds = %22
  %26 = or i32 %23, 1
  %27 = cmpxchg i32* %9, i32 0, i32 %26 seq_cst seq_cst
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29
  br label %31

31:                                               ; preds = %25, %19
  %32 = phi i32 [ %20, %19 ], [ %30, %25 ]
  %33 = and i32 %32, -2
  tail call void @_Z26SkNotifyBitmapGenIDIsStalej(i32 %33) #7
  br label %35

34:                                               ; preds = %1
  tail call void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"* %13) #7
  br label %35

35:                                               ; preds = %14, %31, %34
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %13) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZ22SkMakePixelRefWithProciimPvPFvS_S_ES_EN8PixelRefD0Ev(%struct.PixelRef*) unnamed_addr #1 align 2 {
  tail call void @_ZZ22SkMakePixelRefWithProciimPvPFvS_S_ES_EN8PixelRefD2Ev(%struct.PixelRef* %0) #7
  %2 = bitcast %struct.PixelRef* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spI10SkPixelRefJRiS1_RPvRmEE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spI10SkPixelRefJRiS1_RPvRmEE5sk_spIT_EDpOT0_"}
