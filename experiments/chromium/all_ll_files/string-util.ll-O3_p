; ModuleID = '../../v8/src/inspector/string-util.cc'
source_filename = "../../v8/src/inspector/string-util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.v8_inspector::protocol::Binary" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.6 }
%union.anon.6 = type { i8* }
%"class.v8::Value" = type { i8 }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.v8_inspector::String16Builder" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i16*, i16*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i16* }
%"class.v8_crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr.38", %"class.v8_crdtp::cbor::CBORTokenizer", %"struct.v8_crdtp::Status", %"class.std::__1::vector.39" }
%"class.std::__1::shared_ptr.38" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8_crdtp::cbor::CBORTokenizer" = type { %"class.v8_crdtp::span", i32, %"struct.v8_crdtp::Status", i64, i32, i64 }
%"class.v8_crdtp::span" = type { i8*, i64 }
%"struct.v8_crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.v8_crdtp::span.41"*, %"class.v8_crdtp::span.41"*, %"class.std::__1::__compressed_pair.42" }
%"class.v8_crdtp::span.41" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.v8_crdtp::span.41"* }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage" = type { [24 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer" = type { %"class.v8_inspector::StringBuffer" }
%"class.v8_inspector::(anonymous namespace)::StringBuffer8" = type { %"class.v8_inspector::StringBuffer", %"class.std::__1::vector" }
%"class.v8_inspector::(anonymous namespace)::StringBuffer16" = type { %"class.v8_inspector::StringBuffer", %"class.v8_inspector::String16" }

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE7reserveEm = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm = comdat any

$_ZN12v8_inspector12StringBufferD2Ev = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE = comdat any

@.str = private unnamed_addr constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN12v8_inspector12_GLOBAL__N_117EmptyStringBufferE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::StringBuffer"*)* @_ZN12v8_inspector12StringBufferD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer"*)* @_ZN12v8_inspector12_GLOBAL__N_117EmptyStringBufferD0Ev to i8*), i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer"*)* @_ZNK12v8_inspector12_GLOBAL__N_117EmptyStringBuffer6stringEv to i8*)] }, align 8
@_ZTVN12v8_inspector12_GLOBAL__N_113StringBuffer8E = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::StringBuffer8"*)* @_ZN12v8_inspector12_GLOBAL__N_113StringBuffer8D2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::StringBuffer8"*)* @_ZN12v8_inspector12_GLOBAL__N_113StringBuffer8D0Ev to i8*), i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::(anonymous namespace)::StringBuffer8"*)* @_ZNK12v8_inspector12_GLOBAL__N_113StringBuffer86stringEv to i8*)] }, align 8
@_ZTVN12v8_inspector12_GLOBAL__N_114StringBuffer16E = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::StringBuffer16"*)* @_ZN12v8_inspector12_GLOBAL__N_114StringBuffer16D2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::(anonymous namespace)::StringBuffer16"*)* @_ZN12v8_inspector12_GLOBAL__N_114StringBuffer16D0Ev to i8*), i8* bitcast (void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::(anonymous namespace)::StringBuffer16"*)* @_ZNK12v8_inspector12_GLOBAL__N_114StringBuffer166stringEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol6Binary8toBase64Ev(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::protocol::Binary"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  br label %239

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12
  %16 = load i64, i64* %7, align 8
  %17 = load i64, i64* %9, align 8
  %18 = add i64 %16, 2
  %19 = sub i64 %18, %17
  %20 = udiv i64 %19, 3
  %21 = shl i64 %20, 2
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %3, i64 %21)
  %22 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  br i1 %28, label %36, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %87

36:                                               ; preds = %192, %14
  %37 = phi i8 [ 0, %14 ], [ %195, %192 ]
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [65 x i8], [65 x i8]* @.str, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i16
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %29, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = zext i8 %43 to i64
  br label %54

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 9223372036854775807
  %51 = add nsw i64 %50, -1
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %54

54:                                               ; preds = %47, %45
  %55 = phi i64 [ 10, %45 ], [ %51, %47 ]
  %56 = phi i64 [ %46, %45 ], [ %53, %47 ]
  %57 = icmp eq i64 %56, %55
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %55, i64 1, i64 %55, i64 %55, i64 0, i64 0) #12
  %59 = load i8, i8* %42, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %66, label %62

61:                                               ; preds = %54
  br i1 %44, label %66, label %62

62:                                               ; preds = %61, %58
  %63 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %64 = trunc i64 %56 to i8
  %65 = add i8 %64, 1
  store i8 %65, i8* %42, align 1
  br label %71

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = add i64 %56, 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %69, i64* %70, align 8
  br label %71

71:                                               ; preds = %62, %66
  %72 = phi i16* [ %63, %62 ], [ %68, %66 ]
  %73 = getelementptr inbounds i16, i16* %72, i64 %56
  store i16 %41, i16* %73, align 2
  %74 = getelementptr inbounds i16, i16* %73, i64 1
  store i16 0, i16* %74, align 2
  %75 = load i8, i8* %42, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %232, label %83

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %85 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %197

87:                                               ; preds = %30, %192
  %88 = phi %"class.std::__1::vector"* [ %22, %30 ], [ %194, %192 ]
  %89 = phi i8 [ 0, %30 ], [ %195, %192 ]
  %90 = phi i64 [ 0, %30 ], [ %142, %192 ]
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %90
  %94 = load i8, i8* %93, align 1
  %95 = urem i64 %90, 3
  %96 = trunc i64 %95 to i32
  %97 = shl nuw nsw i32 %96, 1
  %98 = add nuw nsw i32 %97, 2
  %99 = zext i8 %94 to i32
  %100 = lshr i32 %99, %98
  %101 = shl i32 -4, %97
  %102 = xor i32 %101, 255
  %103 = and i32 %102, %99
  %104 = sub nuw nsw i32 4, %97
  %105 = shl i32 %103, %104
  %106 = and i32 %105, 255
  %107 = zext i32 %106 to i64
  %108 = trunc i32 %105 to i8
  %109 = zext i32 %100 to i64
  %110 = zext i8 %89 to i64
  %111 = or i64 %109, %110
  %112 = getelementptr inbounds [65 x i8], [65 x i8]* @.str, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i16
  %115 = load i8, i8* %31, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %87
  %118 = zext i8 %115 to i64
  br label %124

119:                                              ; preds = %87
  %120 = load i64, i64* %32, align 8
  %121 = and i64 %120, 9223372036854775807
  %122 = add nsw i64 %121, -1
  %123 = load i64, i64* %33, align 8
  br label %124

124:                                              ; preds = %119, %117
  %125 = phi i64 [ 10, %117 ], [ %122, %119 ]
  %126 = phi i64 [ %118, %117 ], [ %123, %119 ]
  %127 = icmp eq i64 %126, %125
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %125, i64 1, i64 %125, i64 %125, i64 0, i64 0) #12
  %129 = load i8, i8* %31, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %135, label %132

131:                                              ; preds = %124
  br i1 %116, label %135, label %132

132:                                              ; preds = %131, %128
  %133 = trunc i64 %126 to i8
  %134 = add i8 %133, 1
  store i8 %134, i8* %31, align 1
  br label %138

135:                                              ; preds = %131, %128
  %136 = load i16*, i16** %35, align 8
  %137 = add i64 %126, 1
  store i64 %137, i64* %33, align 8
  br label %138

138:                                              ; preds = %132, %135
  %139 = phi i16* [ %34, %132 ], [ %136, %135 ]
  %140 = getelementptr inbounds i16, i16* %139, i64 %126
  store i16 %114, i16* %140, align 2
  %141 = getelementptr inbounds i16, i16* %140, i64 1
  store i16 0, i16* %141, align 2
  %142 = add nuw i64 %90, 1
  %143 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %143, i64 0, i32 0, i32 1
  %145 = bitcast i8** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::__1::vector"* %143 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %146, %148
  %150 = icmp ult i64 %142, %149
  %151 = urem i64 %142, 3
  %152 = icmp eq i64 %151, 0
  %153 = and i1 %152, %150
  br i1 %153, label %154, label %192

154:                                              ; preds = %138
  %155 = getelementptr inbounds [65 x i8], [65 x i8]* @.str, i64 0, i64 %107
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i16
  %158 = load i8, i8* %31, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  %161 = zext i8 %158 to i64
  br label %167

162:                                              ; preds = %154
  %163 = load i64, i64* %32, align 8
  %164 = and i64 %163, 9223372036854775807
  %165 = add nsw i64 %164, -1
  %166 = load i64, i64* %33, align 8
  br label %167

167:                                              ; preds = %162, %160
  %168 = phi i64 [ 10, %160 ], [ %165, %162 ]
  %169 = phi i64 [ %161, %160 ], [ %166, %162 ]
  %170 = icmp eq i64 %169, %168
  br i1 %170, label %171, label %174

171:                                              ; preds = %167
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %168, i64 1, i64 %168, i64 %168, i64 0, i64 0) #12
  %172 = load i8, i8* %31, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %178, label %175

174:                                              ; preds = %167
  br i1 %159, label %178, label %175

175:                                              ; preds = %174, %171
  %176 = trunc i64 %169 to i8
  %177 = add i8 %176, 1
  store i8 %177, i8* %31, align 1
  br label %181

178:                                              ; preds = %174, %171
  %179 = load i16*, i16** %35, align 8
  %180 = add i64 %169, 1
  store i64 %180, i64* %33, align 8
  br label %181

181:                                              ; preds = %175, %178
  %182 = phi i16* [ %34, %175 ], [ %179, %178 ]
  %183 = getelementptr inbounds i16, i16* %182, i64 %169
  store i16 %157, i16* %183, align 2
  %184 = getelementptr inbounds i16, i16* %183, i64 1
  store i16 0, i16* %184, align 2
  %185 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %186 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %185, i64 0, i32 0, i32 1
  %187 = bitcast i8** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.std::__1::vector"* %185 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %188, %190
  br label %192

192:                                              ; preds = %138, %181
  %193 = phi i64 [ %149, %138 ], [ %191, %181 ]
  %194 = phi %"class.std::__1::vector"* [ %143, %138 ], [ %185, %181 ]
  %195 = phi i8 [ %108, %138 ], [ 0, %181 ]
  %196 = icmp ult i64 %142, %193
  br i1 %196, label %87, label %36

197:                                              ; preds = %83, %221
  %198 = phi i64 [ %78, %83 ], [ %227, %221 ]
  %199 = phi i1 [ %76, %83 ], [ %226, %221 ]
  %200 = phi i8 [ %75, %83 ], [ %225, %221 ]
  br i1 %199, label %203, label %201

201:                                              ; preds = %197
  %202 = zext i8 %200 to i64
  br label %207

203:                                              ; preds = %197
  %204 = load i64, i64* %84, align 8
  %205 = and i64 %204, 9223372036854775807
  %206 = add nsw i64 %205, -1
  br label %207

207:                                              ; preds = %203, %201
  %208 = phi i64 [ 10, %201 ], [ %206, %203 ]
  %209 = phi i64 [ %202, %201 ], [ %198, %203 ]
  %210 = icmp eq i64 %209, %208
  br i1 %210, label %211, label %214

211:                                              ; preds = %207
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %3, i64 %208, i64 1, i64 %208, i64 %208, i64 0, i64 0) #12
  %212 = load i8, i8* %42, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %218, label %215

214:                                              ; preds = %207
  br i1 %199, label %218, label %215

215:                                              ; preds = %214, %211
  %216 = trunc i64 %209 to i8
  %217 = add i8 %216, 1
  store i8 %217, i8* %42, align 1
  br label %221

218:                                              ; preds = %214, %211
  %219 = load i16*, i16** %86, align 8
  %220 = add i64 %209, 1
  store i64 %220, i64* %77, align 8
  br label %221

221:                                              ; preds = %215, %218
  %222 = phi i16* [ %85, %215 ], [ %219, %218 ]
  %223 = getelementptr inbounds i16, i16* %222, i64 %209
  store i16 61, i16* %223, align 2
  %224 = getelementptr inbounds i16, i16* %223, i64 1
  store i16 0, i16* %224, align 2
  %225 = load i8, i8* %42, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i64, i64* %77, align 8
  %228 = zext i8 %225 to i64
  %229 = select i1 %226, i64 %227, i64 %228
  %230 = and i64 %229, 3
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %197

232:                                              ; preds = %221, %71
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %233 = load i8, i8* %42, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %232
  %236 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %239

239:                                              ; preds = %238, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 9223372036854775791
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %5) #14
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %6
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp ugt i64 %17, %1
  %19 = select i1 %18, i64 %17, i64 %1
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = add i64 %19, 8
  %23 = and i64 %22, -8
  %24 = add i64 %23, -1
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %24, %21 ], [ 10, %16 ]
  br i1 %10, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  br label %32

32:                                               ; preds = %25, %27
  %33 = phi i64 [ %31, %27 ], [ 10, %25 ]
  %34 = icmp eq i64 %26, %33
  br i1 %34, label %236, label %35

35:                                               ; preds = %32
  br i1 %10, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %35
  %40 = zext i8 %9 to i64
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp eq i64 %26, 10
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = add i64 %26, 1
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @abort() #14
  unreachable

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to i16*
  br i1 %10, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %67

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  br i1 %10, label %61, label %67

61:                                               ; preds = %57, %52
  %62 = phi i1 [ true, %52 ], [ false, %57 ]
  %63 = phi i16* [ %54, %52 ], [ %60, %57 ]
  %64 = phi i16* [ %51, %52 ], [ %58, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %73

67:                                               ; preds = %57, %55
  %68 = phi i1 [ true, %55 ], [ false, %57 ]
  %69 = phi i1 [ false, %55 ], [ true, %57 ]
  %70 = phi i16* [ %56, %55 ], [ %60, %57 ]
  %71 = phi i16* [ %51, %55 ], [ %58, %57 ]
  %72 = zext i8 %9 to i64
  br label %73

73:                                               ; preds = %67, %61
  %74 = phi i1 [ %62, %61 ], [ %68, %67 ]
  %75 = phi i1 [ true, %61 ], [ %69, %67 ]
  %76 = phi i16* [ %63, %61 ], [ %70, %67 ]
  %77 = phi i16* [ %64, %61 ], [ %71, %67 ]
  %78 = phi i64 [ %66, %61 ], [ %72, %67 ]
  %79 = bitcast i16* %76 to i8*
  %80 = add i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %225, label %82

82:                                               ; preds = %73
  %83 = icmp ult i64 %80, 16
  br i1 %83, label %172, label %84

84:                                               ; preds = %82
  %85 = getelementptr i16, i16* %77, i64 %80
  %86 = getelementptr i16, i16* %76, i64 %80
  %87 = icmp ult i16* %77, %86
  %88 = icmp ult i16* %76, %85
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %84
  %91 = and i64 %80, -16
  %92 = getelementptr i16, i16* %77, i64 %91
  %93 = sub i64 %80, %91
  %94 = getelementptr i16, i16* %76, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %77, i64 %103
  %106 = getelementptr i16, i16* %76, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %77, i64 %115
  %117 = getelementptr i16, i16* %76, i64 %115
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !2
  %120 = getelementptr i16, i16* %117, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !2
  %123 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !5, !noalias !2
  %124 = getelementptr i16, i16* %116, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %77, i64 %126
  %128 = getelementptr i16, i16* %76, i64 %126
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !2
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !5, !noalias !2
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %77, i64 %137
  %139 = getelementptr i16, i16* %76, i64 %137
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !2
  %142 = getelementptr i16, i16* %139, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !2
  %145 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !5, !noalias !2
  %146 = getelementptr i16, i16* %138, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !5, !noalias !2
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !7

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %77, i64 %155
  %158 = getelementptr i16, i16* %76, i64 %155
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !2
  %161 = getelementptr i16, i16* %158, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !2
  %164 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !5, !noalias !2
  %165 = getelementptr i16, i16* %157, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !5, !noalias !2
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !9

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %84, %82
  %173 = phi i16* [ %77, %84 ], [ %77, %82 ], [ %92, %170 ]
  %174 = phi i64 [ %80, %84 ], [ %80, %82 ], [ %93, %170 ]
  %175 = phi i16* [ %76, %84 ], [ %76, %82 ], [ %94, %170 ]
  %176 = add i64 %174, -1
  %177 = and i64 %174, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i16* [ %186, %179 ], [ %173, %172 ]
  %181 = phi i64 [ %185, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %187, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %180, align 2
  %185 = add i64 %181, -1
  %186 = getelementptr inbounds i16, i16* %180, i64 1
  %187 = getelementptr inbounds i16, i16* %182, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !11

190:                                              ; preds = %179, %172
  %191 = phi i16* [ %173, %172 ], [ %186, %179 ]
  %192 = phi i64 [ %174, %172 ], [ %185, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %187, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i16* [ %222, %195 ], [ %191, %190 ]
  %197 = phi i64 [ %221, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %223, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %196, align 2
  %200 = getelementptr inbounds i16, i16* %196, i64 1
  %201 = getelementptr inbounds i16, i16* %198, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %196, i64 2
  %204 = getelementptr inbounds i16, i16* %198, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %196, i64 3
  %207 = getelementptr inbounds i16, i16* %198, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %196, i64 4
  %210 = getelementptr inbounds i16, i16* %198, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %196, i64 5
  %213 = getelementptr inbounds i16, i16* %198, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %196, i64 6
  %216 = getelementptr inbounds i16, i16* %198, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %196, i64 7
  %219 = getelementptr inbounds i16, i16* %198, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %197, -8
  %222 = getelementptr inbounds i16, i16* %196, i64 8
  %223 = getelementptr inbounds i16, i16* %198, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !12

225:                                              ; preds = %190, %195, %170, %73
  br i1 %75, label %226, label %227

226:                                              ; preds = %225
  tail call void @_ZdlPv(i8* %79) #13
  br label %227

227:                                              ; preds = %226, %225
  br i1 %74, label %228, label %234

228:                                              ; preds = %227
  %229 = add i64 %26, 1
  %230 = or i64 %229, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %77, i16** %233, align 8
  br label %236

234:                                              ; preds = %227
  %235 = trunc i64 %42 to i8
  store i8 %235, i8* %8, align 1
  br label %236

236:                                              ; preds = %234, %228, %32
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector8protocol6Binary10fromBase64ERKNS_8String16EPb(%"class.v8_inspector::String16"* readonly dereferenceable(32), i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %2
  store i8 1, i8* %1, align 1
  %14 = tail call i8* @_Znwm(i64 48) #13
  %15 = bitcast i8* %14 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = bitcast i8* %14 to %"class.std::__1::__shared_weak_count"*
  %19 = bitcast i8* %16 to i64*
  %20 = atomicrmw add i64* %19, i64 1 monotonic
  %21 = atomicrmw add i64* %19, i64 -1 acq_rel
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %13
  %24 = bitcast i8* %14 to %"class.std::__1::__shared_count"*
  %25 = bitcast i8* %14 to void (%"class.std::__1::__shared_count"*)***
  %26 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, i64 2
  %28 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, align 8
  tail call void %28(%"class.std::__1::__shared_count"* nonnull %24) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %18) #12
  br label %29

29:                                               ; preds = %13, %23
  %30 = ptrtoint i8* %17 to i64
  br label %540

31:                                               ; preds = %2
  store i8 0, i8* %1, align 1
  %32 = load i8, i8* %5, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %8, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = and i64 %36, 3
  %38 = icmp ne i64 %37, 0
  %39 = icmp ugt i64 %36, -5
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %31
  %42 = tail call i8* @_Znwm(i64 48) #13
  %43 = bitcast i8* %42 to i32 (...)***
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %45 = getelementptr inbounds i8, i8* %42, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #12
  %46 = bitcast i8* %42 to %"class.std::__1::__shared_weak_count"*
  %47 = bitcast i8* %44 to i64*
  %48 = atomicrmw add i64* %47, i64 1 monotonic
  %49 = atomicrmw add i64* %47, i64 -1 acq_rel
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %41
  %52 = bitcast i8* %42 to %"class.std::__1::__shared_count"*
  %53 = bitcast i8* %42 to void (%"class.std::__1::__shared_count"*)***
  %54 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, i64 2
  %56 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, align 8
  tail call void %56(%"class.std::__1::__shared_count"* nonnull %52) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %46) #12
  br label %57

57:                                               ; preds = %41, %51
  %58 = ptrtoint i8* %45 to i64
  br label %540

59:                                               ; preds = %31
  %60 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #12
  %61 = mul i64 %36, 3
  %62 = lshr i64 %61, 2
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i8** %63 to i64*
  %65 = bitcast %"class.std::__1::vector"* %3 to i64*
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %69 = bitcast i8** %68 to i64*
  %70 = tail call i8* @_Znwm(i64 %62) #13
  %71 = ptrtoint i8* %70 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %62
  %73 = ptrtoint i8* %72 to i64
  store i64 %71, i64* %65, align 8
  store i64 %71, i64* %69, align 8
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %67, %59
  %75 = phi i64 [ 0, %59 ], [ %73, %67 ]
  %76 = phi i64 [ 0, %59 ], [ %71, %67 ]
  %77 = phi i8* [ null, %59 ], [ %70, %67 ]
  %78 = icmp eq i64 %36, 0
  br i1 %78, label %504, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %83 = bitcast i8** %82 to i64*
  br label %84

84:                                               ; preds = %79, %491
  %85 = phi i64 [ %76, %79 ], [ %492, %491 ]
  %86 = phi i8* [ %77, %79 ], [ %493, %491 ]
  %87 = phi i64 [ %34, %79 ], [ %497, %491 ]
  %88 = phi i1 [ %33, %79 ], [ %496, %491 ]
  %89 = phi i8 [ %32, %79 ], [ %495, %491 ]
  %90 = phi i64 [ 0, %79 ], [ %494, %491 ]
  %91 = load i16*, i16** %80, align 8
  %92 = select i1 %88, i16* %91, i16* %81
  %93 = getelementptr inbounds i16, i16* %92, i64 %90
  %94 = load i16, i16* %93, align 2
  %95 = trunc i16 %94 to i8
  %96 = add i8 %95, -65
  %97 = icmp ult i8 %96, 26
  br i1 %97, label %98, label %102

98:                                               ; preds = %84
  %99 = zext i8 %96 to i16
  %100 = shl nuw i16 %99, 8
  %101 = or i16 %100, 1
  br label %121

102:                                              ; preds = %84
  %103 = add i8 %95, -97
  %104 = icmp ult i8 %103, 26
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = shl i16 %94, 8
  %107 = add i16 %106, -18176
  %108 = or i16 %107, 1
  br label %121

109:                                              ; preds = %102
  %110 = add i8 %95, -48
  %111 = icmp ult i8 %110, 10
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = shl i16 %94, 8
  %114 = add i16 %113, 1024
  %115 = or i16 %114, 1
  br label %121

116:                                              ; preds = %109
  %117 = icmp eq i8 %95, 47
  %118 = select i1 %117, i16 16129, i16 0
  %119 = icmp eq i8 %95, 43
  %120 = select i1 %119, i16 15873, i16 %118
  br label %121

121:                                              ; preds = %98, %105, %112, %116
  %122 = phi i16 [ %101, %98 ], [ %108, %105 ], [ %115, %112 ], [ %120, %116 ]
  %123 = trunc i16 %122 to i8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %143, !prof !13

125:                                              ; preds = %121
  %126 = tail call i8* @_Znwm(i64 48) #13
  %127 = bitcast i8* %126 to i32 (...)***
  %128 = getelementptr inbounds i8, i8* %126, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %127, align 8
  %129 = getelementptr inbounds i8, i8* %126, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #12
  %130 = bitcast i8* %126 to %"class.std::__1::__shared_weak_count"*
  %131 = bitcast i8* %128 to i64*
  %132 = atomicrmw add i64* %131, i64 1 monotonic
  %133 = atomicrmw add i64* %131, i64 -1 acq_rel
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %141

135:                                              ; preds = %125
  %136 = bitcast i8* %126 to %"class.std::__1::__shared_count"*
  %137 = bitcast i8* %126 to void (%"class.std::__1::__shared_count"*)***
  %138 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %138, i64 2
  %140 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %139, align 8
  tail call void %140(%"class.std::__1::__shared_count"* nonnull %136) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %130) #12
  br label %141

141:                                              ; preds = %125, %135
  %142 = ptrtoint i8* %129 to i64
  br label %529

143:                                              ; preds = %121
  %144 = or i64 %90, 1
  %145 = getelementptr inbounds i16, i16* %92, i64 %144
  %146 = load i16, i16* %145, align 2
  %147 = trunc i16 %146 to i8
  %148 = add i8 %147, -65
  %149 = icmp ult i8 %148, 26
  br i1 %149, label %150, label %154

150:                                              ; preds = %143
  %151 = zext i8 %148 to i16
  %152 = shl nuw i16 %151, 8
  %153 = or i16 %152, 1
  br label %173

154:                                              ; preds = %143
  %155 = add i8 %147, -97
  %156 = icmp ult i8 %155, 26
  br i1 %156, label %157, label %161

157:                                              ; preds = %154
  %158 = shl i16 %146, 8
  %159 = add i16 %158, -18176
  %160 = or i16 %159, 1
  br label %173

161:                                              ; preds = %154
  %162 = add i8 %147, -48
  %163 = icmp ult i8 %162, 10
  br i1 %163, label %164, label %168

164:                                              ; preds = %161
  %165 = shl i16 %146, 8
  %166 = add i16 %165, 1024
  %167 = or i16 %166, 1
  br label %173

168:                                              ; preds = %161
  %169 = icmp eq i8 %147, 47
  %170 = select i1 %169, i16 16129, i16 0
  %171 = icmp eq i8 %147, 43
  %172 = select i1 %171, i16 15873, i16 %170
  br label %173

173:                                              ; preds = %150, %157, %164, %168
  %174 = phi i16 [ %153, %150 ], [ %160, %157 ], [ %167, %164 ], [ %172, %168 ]
  %175 = trunc i16 %174 to i8
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %195, !prof !13

177:                                              ; preds = %173
  %178 = tail call i8* @_Znwm(i64 48) #13
  %179 = bitcast i8* %178 to i32 (...)***
  %180 = getelementptr inbounds i8, i8* %178, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  %181 = getelementptr inbounds i8, i8* %178, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 24, i1 false) #12
  %182 = bitcast i8* %178 to %"class.std::__1::__shared_weak_count"*
  %183 = bitcast i8* %180 to i64*
  %184 = atomicrmw add i64* %183, i64 1 monotonic
  %185 = atomicrmw add i64* %183, i64 -1 acq_rel
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %193

187:                                              ; preds = %177
  %188 = bitcast i8* %178 to %"class.std::__1::__shared_count"*
  %189 = bitcast i8* %178 to void (%"class.std::__1::__shared_count"*)***
  %190 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %190, i64 2
  %192 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %191, align 8
  tail call void %192(%"class.std::__1::__shared_count"* nonnull %188) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %182) #12
  br label %193

193:                                              ; preds = %177, %187
  %194 = ptrtoint i8* %181 to i64
  br label %529

195:                                              ; preds = %173
  %196 = or i64 %90, 2
  %197 = getelementptr inbounds i16, i16* %92, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = trunc i16 %198 to i8
  %200 = add i8 %199, -65
  %201 = icmp ult i8 %200, 26
  br i1 %201, label %202, label %206

202:                                              ; preds = %195
  %203 = zext i8 %200 to i16
  %204 = shl nuw i16 %203, 8
  %205 = or i16 %204, 1
  br label %225

206:                                              ; preds = %195
  %207 = add i8 %199, -97
  %208 = icmp ult i8 %207, 26
  br i1 %208, label %209, label %213

209:                                              ; preds = %206
  %210 = shl i16 %198, 8
  %211 = add i16 %210, -18176
  %212 = or i16 %211, 1
  br label %225

213:                                              ; preds = %206
  %214 = add i8 %199, -48
  %215 = icmp ult i8 %214, 10
  br i1 %215, label %216, label %220

216:                                              ; preds = %213
  %217 = shl i16 %198, 8
  %218 = add i16 %217, 1024
  %219 = or i16 %218, 1
  br label %225

220:                                              ; preds = %213
  %221 = icmp eq i8 %199, 47
  %222 = select i1 %221, i16 16129, i16 0
  %223 = icmp eq i8 %199, 43
  %224 = select i1 %223, i16 15873, i16 %222
  br label %225

225:                                              ; preds = %202, %209, %216, %220
  %226 = phi i16 [ %205, %202 ], [ %212, %209 ], [ %219, %216 ], [ %224, %220 ]
  %227 = trunc i16 %226 to i8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %233, label %229, !prof !13

229:                                              ; preds = %225
  %230 = lshr i16 %226, 8
  %231 = trunc i16 %230 to i8
  %232 = or i64 %90, 3
  br label %263

233:                                              ; preds = %225
  %234 = add i64 %90, 4
  %235 = zext i8 %89 to i64
  %236 = select i1 %88, i64 %87, i64 %235
  %237 = icmp uge i64 %234, %236
  %238 = icmp eq i16 %198, 61
  %239 = and i1 %237, %238
  br i1 %239, label %240, label %245

240:                                              ; preds = %233
  %241 = or i64 %90, 3
  %242 = getelementptr inbounds i16, i16* %92, i64 %241
  %243 = load i16, i16* %242, align 2
  %244 = icmp eq i16 %243, 61
  br i1 %244, label %263, label %245

245:                                              ; preds = %233, %240
  %246 = tail call i8* @_Znwm(i64 48) #13
  %247 = bitcast i8* %246 to i32 (...)***
  %248 = getelementptr inbounds i8, i8* %246, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %249 = getelementptr inbounds i8, i8* %246, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 24, i1 false) #12
  %250 = bitcast i8* %246 to %"class.std::__1::__shared_weak_count"*
  %251 = bitcast i8* %248 to i64*
  %252 = atomicrmw add i64* %251, i64 1 monotonic
  %253 = atomicrmw add i64* %251, i64 -1 acq_rel
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %261

255:                                              ; preds = %245
  %256 = bitcast i8* %246 to %"class.std::__1::__shared_count"*
  %257 = bitcast i8* %246 to void (%"class.std::__1::__shared_count"*)***
  %258 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %258, i64 2
  %260 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %259, align 8
  tail call void %260(%"class.std::__1::__shared_count"* nonnull %256) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %250) #12
  br label %261

261:                                              ; preds = %245, %255
  %262 = ptrtoint i8* %249 to i64
  br label %529

263:                                              ; preds = %229, %240
  %264 = phi i64 [ %232, %229 ], [ %241, %240 ]
  %265 = phi i8 [ %231, %229 ], [ 0, %240 ]
  %266 = getelementptr inbounds i16, i16* %92, i64 %264
  %267 = load i16, i16* %266, align 2
  %268 = trunc i16 %267 to i8
  %269 = add i8 %268, -65
  %270 = icmp ult i8 %269, 26
  br i1 %270, label %271, label %275

271:                                              ; preds = %263
  %272 = zext i8 %269 to i16
  %273 = shl nuw i16 %272, 8
  %274 = or i16 %273, 1
  br label %294

275:                                              ; preds = %263
  %276 = add i8 %268, -97
  %277 = icmp ult i8 %276, 26
  br i1 %277, label %278, label %282

278:                                              ; preds = %275
  %279 = shl i16 %267, 8
  %280 = add i16 %279, -18176
  %281 = or i16 %280, 1
  br label %294

282:                                              ; preds = %275
  %283 = add i8 %268, -48
  %284 = icmp ult i8 %283, 10
  br i1 %284, label %285, label %289

285:                                              ; preds = %282
  %286 = shl i16 %267, 8
  %287 = add i16 %286, 1024
  %288 = or i16 %287, 1
  br label %294

289:                                              ; preds = %282
  %290 = icmp eq i8 %268, 47
  %291 = select i1 %290, i16 16129, i16 0
  %292 = icmp eq i8 %268, 43
  %293 = select i1 %292, i16 15873, i16 %291
  br label %294

294:                                              ; preds = %271, %278, %285, %289
  %295 = phi i16 [ %274, %271 ], [ %281, %278 ], [ %288, %285 ], [ %293, %289 ]
  %296 = trunc i16 %295 to i8
  %297 = lshr i16 %295, 8
  %298 = trunc i16 %297 to i8
  %299 = icmp eq i8 %296, 0
  br i1 %299, label %300, label %325, !prof !13

300:                                              ; preds = %294
  %301 = add i64 %90, 4
  %302 = zext i8 %89 to i64
  %303 = select i1 %88, i64 %87, i64 %302
  %304 = icmp uge i64 %301, %303
  %305 = icmp eq i16 %267, 61
  %306 = and i1 %304, %305
  br i1 %306, label %325, label %307

307:                                              ; preds = %300
  %308 = tail call i8* @_Znwm(i64 48) #13
  %309 = bitcast i8* %308 to i32 (...)***
  %310 = getelementptr inbounds i8, i8* %308, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %310, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %309, align 8
  %311 = getelementptr inbounds i8, i8* %308, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 24, i1 false) #12
  %312 = bitcast i8* %308 to %"class.std::__1::__shared_weak_count"*
  %313 = bitcast i8* %310 to i64*
  %314 = atomicrmw add i64* %313, i64 1 monotonic
  %315 = atomicrmw add i64* %313, i64 -1 acq_rel
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %323

317:                                              ; preds = %307
  %318 = bitcast i8* %308 to %"class.std::__1::__shared_count"*
  %319 = bitcast i8* %308 to void (%"class.std::__1::__shared_count"*)***
  %320 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %320, i64 2
  %322 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %321, align 8
  tail call void %322(%"class.std::__1::__shared_count"* nonnull %318) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %312) #12
  br label %323

323:                                              ; preds = %307, %317
  %324 = ptrtoint i8* %311 to i64
  br label %529

325:                                              ; preds = %300, %294
  %326 = phi i8 [ %298, %294 ], [ 0, %300 ]
  %327 = lshr i16 %122, 6
  %328 = trunc i16 %327 to i8
  %329 = and i8 %328, -4
  %330 = lshr i16 %174, 12
  %331 = trunc i16 %330 to i8
  %332 = or i8 %329, %331
  %333 = load i8*, i8** %63, align 8
  %334 = icmp ult i8* %86, %333
  %335 = ptrtoint i8* %333 to i64
  br i1 %334, label %336, label %339

336:                                              ; preds = %325
  store i8 %332, i8* %86, align 1
  %337 = getelementptr inbounds i8, i8* %86, i64 1
  %338 = ptrtoint i8* %337 to i64
  store i64 %338, i64* %83, align 8
  br label %376

339:                                              ; preds = %325
  %340 = ptrtoint i8* %86 to i64
  %341 = load i64, i64* %65, align 8
  %342 = sub i64 %340, %341
  %343 = add i64 %342, 1
  %344 = icmp slt i64 %343, 0
  %345 = inttoptr i64 %341 to i8*
  br i1 %344, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %347) #14
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %335, %341
  %350 = icmp ult i64 %349, 4611686018427387903
  br i1 %350, label %351, label %356

351:                                              ; preds = %348
  %352 = shl i64 %349, 1
  %353 = icmp ult i64 %352, %343
  %354 = select i1 %353, i64 %343, i64 %352
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %359, label %356

356:                                              ; preds = %351, %348
  %357 = phi i64 [ %354, %351 ], [ 9223372036854775807, %348 ]
  %358 = tail call i8* @_Znwm(i64 %357) #13
  br label %359

359:                                              ; preds = %356, %351
  %360 = phi i64 [ %357, %356 ], [ 0, %351 ]
  %361 = phi i8* [ %358, %356 ], [ null, %351 ]
  %362 = getelementptr inbounds i8, i8* %361, i64 %342
  %363 = getelementptr inbounds i8, i8* %361, i64 %360
  %364 = ptrtoint i8* %363 to i64
  store i8 %332, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %362, i64 1
  %366 = ptrtoint i8* %365 to i64
  %367 = sub i64 %85, %341
  %368 = sub i64 0, %367
  %369 = getelementptr inbounds i8, i8* %362, i64 %368
  %370 = ptrtoint i8* %369 to i64
  %371 = icmp sgt i64 %367, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %359
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %369, i8* align 1 %345, i64 %367, i1 false) #12
  br label %373

373:                                              ; preds = %372, %359
  store i64 %370, i64* %65, align 8
  store i64 %366, i64* %83, align 8
  store i64 %364, i64* %64, align 8
  %374 = icmp eq i64 %341, 0
  br i1 %374, label %376, label %375

375:                                              ; preds = %373
  tail call void @_ZdlPv(i8* nonnull %345) #13
  br label %376

376:                                              ; preds = %336, %373, %375
  %377 = phi i8* [ %337, %336 ], [ %365, %373 ], [ %365, %375 ]
  %378 = phi i64 [ %338, %336 ], [ %366, %373 ], [ %366, %375 ]
  %379 = load i8, i8* %5, align 1
  %380 = icmp slt i8 %379, 0
  %381 = load i16*, i16** %80, align 8
  %382 = select i1 %380, i16* %381, i16* %81
  %383 = getelementptr inbounds i16, i16* %382, i64 %196
  %384 = load i16, i16* %383, align 2
  %385 = icmp eq i16 %384, 61
  br i1 %385, label %435, label %386

386:                                              ; preds = %376
  %387 = lshr i16 %174, 4
  %388 = trunc i16 %387 to i8
  %389 = and i8 %388, -16
  %390 = lshr i8 %265, 2
  %391 = or i8 %390, %389
  %392 = load i8*, i8** %63, align 8
  %393 = icmp ult i8* %377, %392
  %394 = ptrtoint i8* %392 to i64
  br i1 %393, label %395, label %398

395:                                              ; preds = %386
  store i8 %391, i8* %377, align 1
  %396 = getelementptr inbounds i8, i8* %377, i64 1
  %397 = ptrtoint i8* %396 to i64
  store i64 %397, i64* %83, align 8
  br label %435

398:                                              ; preds = %386
  %399 = ptrtoint i8* %377 to i64
  %400 = load i64, i64* %65, align 8
  %401 = sub i64 %399, %400
  %402 = add i64 %401, 1
  %403 = icmp slt i64 %402, 0
  %404 = inttoptr i64 %400 to i8*
  br i1 %403, label %405, label %407

405:                                              ; preds = %398
  %406 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %406) #14
  unreachable

407:                                              ; preds = %398
  %408 = sub i64 %394, %400
  %409 = icmp ult i64 %408, 4611686018427387903
  br i1 %409, label %410, label %415

410:                                              ; preds = %407
  %411 = shl i64 %408, 1
  %412 = icmp ult i64 %411, %402
  %413 = select i1 %412, i64 %402, i64 %411
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %418, label %415

415:                                              ; preds = %410, %407
  %416 = phi i64 [ %413, %410 ], [ 9223372036854775807, %407 ]
  %417 = tail call i8* @_Znwm(i64 %416) #13
  br label %418

418:                                              ; preds = %415, %410
  %419 = phi i64 [ %416, %415 ], [ 0, %410 ]
  %420 = phi i8* [ %417, %415 ], [ null, %410 ]
  %421 = getelementptr inbounds i8, i8* %420, i64 %401
  %422 = getelementptr inbounds i8, i8* %420, i64 %419
  %423 = ptrtoint i8* %422 to i64
  store i8 %391, i8* %421, align 1
  %424 = getelementptr inbounds i8, i8* %421, i64 1
  %425 = ptrtoint i8* %424 to i64
  %426 = sub i64 %378, %400
  %427 = sub i64 0, %426
  %428 = getelementptr inbounds i8, i8* %421, i64 %427
  %429 = ptrtoint i8* %428 to i64
  %430 = icmp sgt i64 %426, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %418
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %428, i8* align 1 %404, i64 %426, i1 false) #12
  br label %432

432:                                              ; preds = %431, %418
  store i64 %429, i64* %65, align 8
  store i64 %425, i64* %83, align 8
  store i64 %423, i64* %64, align 8
  %433 = icmp eq i64 %400, 0
  br i1 %433, label %435, label %434

434:                                              ; preds = %432
  tail call void @_ZdlPv(i8* nonnull %404) #13
  br label %435

435:                                              ; preds = %434, %432, %395, %376
  %436 = phi i8* [ %424, %434 ], [ %424, %432 ], [ %396, %395 ], [ %377, %376 ]
  %437 = phi i64 [ %425, %434 ], [ %425, %432 ], [ %397, %395 ], [ %378, %376 ]
  %438 = load i8, i8* %5, align 1
  %439 = icmp slt i8 %438, 0
  %440 = load i16*, i16** %80, align 8
  %441 = select i1 %439, i16* %440, i16* %81
  %442 = getelementptr inbounds i16, i16* %441, i64 %264
  %443 = load i16, i16* %442, align 2
  %444 = icmp eq i16 %443, 61
  br i1 %444, label %491, label %445

445:                                              ; preds = %435
  %446 = shl i8 %265, 6
  %447 = or i8 %326, %446
  %448 = load i8*, i8** %63, align 8
  %449 = icmp ult i8* %436, %448
  %450 = ptrtoint i8* %448 to i64
  br i1 %449, label %451, label %454

451:                                              ; preds = %445
  store i8 %447, i8* %436, align 1
  %452 = getelementptr inbounds i8, i8* %436, i64 1
  %453 = ptrtoint i8* %452 to i64
  store i64 %453, i64* %83, align 8
  br label %491

454:                                              ; preds = %445
  %455 = ptrtoint i8* %436 to i64
  %456 = load i64, i64* %65, align 8
  %457 = sub i64 %455, %456
  %458 = add i64 %457, 1
  %459 = icmp slt i64 %458, 0
  %460 = inttoptr i64 %456 to i8*
  br i1 %459, label %461, label %463

461:                                              ; preds = %454
  %462 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %462) #14
  unreachable

463:                                              ; preds = %454
  %464 = sub i64 %450, %456
  %465 = icmp ult i64 %464, 4611686018427387903
  br i1 %465, label %466, label %471

466:                                              ; preds = %463
  %467 = shl i64 %464, 1
  %468 = icmp ult i64 %467, %458
  %469 = select i1 %468, i64 %458, i64 %467
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %474, label %471

471:                                              ; preds = %466, %463
  %472 = phi i64 [ %469, %466 ], [ 9223372036854775807, %463 ]
  %473 = tail call i8* @_Znwm(i64 %472) #13
  br label %474

474:                                              ; preds = %471, %466
  %475 = phi i64 [ %472, %471 ], [ 0, %466 ]
  %476 = phi i8* [ %473, %471 ], [ null, %466 ]
  %477 = getelementptr inbounds i8, i8* %476, i64 %457
  %478 = getelementptr inbounds i8, i8* %476, i64 %475
  %479 = ptrtoint i8* %478 to i64
  store i8 %447, i8* %477, align 1
  %480 = getelementptr inbounds i8, i8* %477, i64 1
  %481 = ptrtoint i8* %480 to i64
  %482 = sub i64 %437, %456
  %483 = sub i64 0, %482
  %484 = getelementptr inbounds i8, i8* %477, i64 %483
  %485 = ptrtoint i8* %484 to i64
  %486 = icmp sgt i64 %482, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %474
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %484, i8* align 1 %460, i64 %482, i1 false) #12
  br label %488

488:                                              ; preds = %487, %474
  store i64 %485, i64* %65, align 8
  store i64 %481, i64* %83, align 8
  store i64 %479, i64* %64, align 8
  %489 = icmp eq i64 %456, 0
  br i1 %489, label %491, label %490

490:                                              ; preds = %488
  tail call void @_ZdlPv(i8* nonnull %460) #13
  br label %491

491:                                              ; preds = %435, %451, %488, %490
  %492 = phi i64 [ %437, %435 ], [ %453, %451 ], [ %481, %488 ], [ %481, %490 ]
  %493 = phi i8* [ %436, %435 ], [ %452, %451 ], [ %480, %488 ], [ %480, %490 ]
  %494 = add i64 %90, 4
  %495 = load i8, i8* %5, align 1
  %496 = icmp slt i8 %495, 0
  %497 = load i64, i64* %8, align 8
  %498 = zext i8 %495 to i64
  %499 = select i1 %496, i64 %497, i64 %498
  %500 = icmp ult i64 %494, %499
  br i1 %500, label %84, label %501

501:                                              ; preds = %491
  %502 = load i64, i64* %65, align 8
  %503 = load i64, i64* %64, align 8
  br label %504

504:                                              ; preds = %74, %501
  %505 = phi i64 [ %503, %501 ], [ %75, %74 ]
  %506 = phi i64 [ %492, %501 ], [ %76, %74 ]
  %507 = phi i64 [ %502, %501 ], [ %76, %74 ]
  store i8 1, i8* %1, align 1
  %508 = tail call i8* @_Znwm(i64 48) #13
  %509 = bitcast i8* %508 to i32 (...)***
  %510 = getelementptr inbounds i8, i8* %508, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %509, align 8
  %511 = getelementptr inbounds i8, i8* %508, i64 24
  %512 = bitcast i8* %511 to i64*
  store i64 %507, i64* %512, align 8
  %513 = getelementptr inbounds i8, i8* %508, i64 32
  %514 = bitcast i8* %513 to i64*
  store i64 %506, i64* %514, align 8
  %515 = getelementptr inbounds i8, i8* %508, i64 40
  %516 = bitcast i8* %515 to i64*
  store i64 %505, i64* %516, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #12
  %517 = bitcast i8* %508 to %"class.std::__1::__shared_weak_count"*
  %518 = ptrtoint i8* %511 to i64
  %519 = bitcast i8* %510 to i64*
  %520 = atomicrmw add i64* %519, i64 1 monotonic
  %521 = atomicrmw add i64* %519, i64 -1 acq_rel
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %529

523:                                              ; preds = %504
  %524 = bitcast i8* %508 to %"class.std::__1::__shared_count"*
  %525 = bitcast i8* %508 to void (%"class.std::__1::__shared_count"*)***
  %526 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %525, align 8
  %527 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %526, i64 2
  %528 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %527, align 8
  tail call void %528(%"class.std::__1::__shared_count"* nonnull %524) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %517) #12
  br label %529

529:                                              ; preds = %323, %261, %193, %141, %523, %504
  %530 = phi i64 [ %518, %504 ], [ %518, %523 ], [ %142, %141 ], [ %194, %193 ], [ %262, %261 ], [ %324, %323 ]
  %531 = phi %"class.std::__1::__shared_weak_count"* [ %517, %504 ], [ %517, %523 ], [ %130, %141 ], [ %182, %193 ], [ %250, %261 ], [ %312, %323 ]
  %532 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %533 = load i8*, i8** %532, align 8
  %534 = icmp eq i8* %533, null
  br i1 %534, label %539, label %535

535:                                              ; preds = %529
  %536 = ptrtoint i8* %533 to i64
  %537 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %538 = bitcast i8** %537 to i64*
  store i64 %536, i64* %538, align 8
  tail call void @_ZdlPv(i8* nonnull %533) #13
  br label %539

539:                                              ; preds = %529, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  br label %540

540:                                              ; preds = %539, %57, %29
  %541 = phi i64 [ %30, %29 ], [ %58, %57 ], [ %530, %539 ]
  %542 = phi %"class.std::__1::__shared_weak_count"* [ %18, %29 ], [ %46, %57 ], [ %531, %539 ]
  %543 = inttoptr i64 %541 to %"class.std::__1::vector"*
  %544 = insertvalue { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.std::__1::vector"* %543, 0
  %545 = insertvalue { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } %544, %"class.std::__1::__shared_weak_count"* %542, 1
  ret { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } %545
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %14 = add i64 %13, 200
  %15 = inttoptr i64 %14 to %"class.v8::String"*
  br label %25

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %20 = select i1 %6, i16* %18, i16* %19
  %21 = trunc i64 %10 to i32
  %22 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* %20, i32 0, i32 %21) #12
  %23 = icmp eq %"class.v8::String"* %22, null
  br i1 %23, label %24, label %25, !prof !13

24:                                               ; preds = %16
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %25

25:                                               ; preds = %24, %16, %12
  %26 = phi %"class.v8::String"* [ %15, %12 ], [ %22, %16 ], [ null, %24 ]
  ret %"class.v8::String"* %26
}

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN12v8_inspector22toV8StringInternalizedEPN2v87IsolateERKNS_8String16E(%"class.v8::Isolate"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %14 = add i64 %13, 200
  %15 = inttoptr i64 %14 to %"class.v8::String"*
  br label %25

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %20 = select i1 %6, i16* %18, i16* %19
  %21 = trunc i64 %10 to i32
  %22 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* %20, i32 1, i32 %21) #12
  %23 = icmp eq %"class.v8::String"* %22, null
  br i1 %23, label %24, label %25, !prof !13

24:                                               ; preds = %16
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %25

25:                                               ; preds = %24, %16, %12
  %26 = phi %"class.v8::String"* [ %15, %12 ], [ %22, %16 ], [ null, %24 ]
  ret %"class.v8::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN12v8_inspector22toV8StringInternalizedEPN2v87IsolateEPKc(%"class.v8::Isolate"*, i8*) local_unnamed_addr #0 {
  %3 = tail call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %1, i32 1, i32 -1) #12
  %4 = icmp eq %"class.v8::String"* %3, null
  br i1 %4, label %5, label %6, !prof !13

5:                                                ; preds = %2
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %6

6:                                                ; preds = %2, %5
  ret %"class.v8::String"* %3
}

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN12v8_inspector10toV8StringEPN2v87IsolateERKNS_10StringViewE(%"class.v8::Isolate"*, %"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %8 = add i64 %7, 200
  %9 = inttoptr i64 %8 to %"class.v8::String"*
  br label %29

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !14
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = trunc i64 %4 to i32
  %18 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %16, i32 0, i32 %17) #12
  %19 = icmp eq %"class.v8::String"* %18, null
  br i1 %19, label %20, label %29, !prof !13

20:                                               ; preds = %14
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %29

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2
  %23 = bitcast %union.anon.6* %22 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = trunc i64 %4 to i32
  %26 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* %24, i32 0, i32 %25) #12
  %27 = icmp eq %"class.v8::String"* %26, null
  br i1 %27, label %28, label %29, !prof !13

28:                                               ; preds = %21
  tail call void @_ZN2v82V812ToLocalEmptyEv() #12
  br label %29

29:                                               ; preds = %28, %21, %20, %14, %6
  %30 = phi %"class.v8::String"* [ %9, %6 ], [ %18, %14 ], [ null, %20 ], [ %26, %21 ], [ null, %28 ]
  ret %"class.v8::String"* %30
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* noalias sret, %"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #0 {
  %4 = icmp eq %"class.v8::String"* %2, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::String"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %28

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %28

21:                                               ; preds = %10
  %22 = add i64 %7, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 1
  switch i32 %25, label %28 [
    i32 5, label %26
    i32 3, label %26
  ]

26:                                               ; preds = %21, %21, %3
  %27 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  br label %41

28:                                               ; preds = %21, %10, %5
  %29 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %2) #12
  %30 = sext i32 %29 to i64
  %31 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %30, i64 2)
  %32 = extractvalue { i64, i1 } %31, 1
  %33 = extractvalue { i64, i1 } %31, 0
  %34 = select i1 %32, i64 -1, i64 %33
  %35 = tail call i8* @_Znam(i64 %34) #13
  %36 = bitcast i8* %35 to i16*
  %37 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %2) #12
  %38 = tail call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* nonnull %2, %"class.v8::Isolate"* %1, i16* nonnull %36, i32 0, i32 %37, i32 0) #12
  %39 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %2) #12
  %40 = sext i32 %39 to i64
  tail call void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"* %0, i16* nonnull %36, i64 %40) #12
  tail call void @_ZdaPv(i8* nonnull %35) #13
  br label %41

41:                                               ; preds = %28, %26
  ret void
}

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

declare i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"*, %"class.v8::Isolate"*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"*, i16*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector29toProtocolStringWithTypeCheckEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8_inspector::String16"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 {
  %4 = icmp eq %"class.v8::Value"* %2, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %23, label %21

21:                                               ; preds = %5, %10, %3
  %22 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false)
  br label %25

23:                                               ; preds = %10
  %24 = bitcast %"class.v8::Value"* %2 to %"class.v8::String"*
  tail call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::String"* nonnull %24)
  br label %25

25:                                               ; preds = %23, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  br label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !14
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZN12v8_inspector8String16C1EPKcm(%"class.v8_inspector::String16"* %0, i8* %14, i64 %4) #12
  br label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %1, i64 0, i32 2
  %17 = bitcast %union.anon.6* %16 to i16**
  %18 = load i16*, i16** %17, align 8
  tail call void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"* %0, i16* %18, i64 %4) #12
  br label %19

19:                                               ; preds = %15, %12, %6
  ret void
}

declare void @_ZN12v8_inspector8String16C1EPKcm(%"class.v8_inspector::String16"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* noalias nocapture sret, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 {
  %3 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %14 = bitcast i64* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %19 = select i1 %6, i16* %17, i16* %18
  %20 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  store i64 %10, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %22 = bitcast %union.anon.6* %21 to i16**
  store i16* %19, i16** %22, align 8
  br label %23

23:                                               ; preds = %15, %12
  %24 = phi i8 [ 0, %15 ], [ 1, %12 ]
  %25 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 %24, i8* %25, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector20stringViewStartsWithERKNS_10StringViewEPKc(%"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24), i8* nocapture readonly) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load i8, i8* %1, align 1
  %8 = icmp eq i8 %7, 0
  br label %54

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !14
  %12 = icmp eq i8 %11, 0
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %12, label %19, label %15

15:                                               ; preds = %9
  br i1 %14, label %54, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %24

19:                                               ; preds = %9
  br i1 %14, label %54, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %22 = bitcast %union.anon.6* %21 to i16**
  %23 = load i16*, i16** %22, align 8
  br label %39

24:                                               ; preds = %16, %32
  %25 = phi i8 [ %13, %16 ], [ %35, %32 ]
  %26 = phi i64 [ 0, %16 ], [ %33, %32 ]
  %27 = getelementptr inbounds i8, i8* %18, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sext i8 %25 to i32
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %54

32:                                               ; preds = %24
  %33 = add nuw i64 %26, 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp ne i8 %35, 0
  %37 = icmp ult i64 %33, %4
  %38 = and i1 %37, %36
  br i1 %38, label %24, label %54

39:                                               ; preds = %20, %47
  %40 = phi i8 [ %13, %20 ], [ %50, %47 ]
  %41 = phi i64 [ 0, %20 ], [ %48, %47 ]
  %42 = getelementptr inbounds i16, i16* %23, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = sext i8 %40 to i32
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %39
  %48 = add nuw i64 %41, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp ne i8 %50, 0
  %52 = icmp ult i64 %48, %4
  %53 = and i1 %52, %51
  br i1 %53, label %39, label %54

54:                                               ; preds = %24, %32, %39, %47, %19, %15, %6
  %55 = phi i1 [ %8, %6 ], [ true, %19 ], [ true, %15 ], [ false, %39 ], [ true, %47 ], [ false, %24 ], [ true, %32 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector12StringBuffer6createENS_10StringViewE(%"class.v8_inspector::StringView"* nocapture readonly byval(%"class.v8_inspector::StringView") align 8) local_unnamed_addr #0 align 2 {
  %2 = alloca [15 x i8], align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = tail call i8* @_Znwm(i64 8) #13
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_117EmptyStringBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  br label %57

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !14
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %19 = icmp slt i64 %6, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %21) #14
  unreachable

22:                                               ; preds = %15
  %23 = tail call i8* @_Znwm(i64 %6) #13
  %24 = getelementptr inbounds i8, i8* %23, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 %18, i64 %6, i1 false) #12
  %25 = ptrtoint i8* %24 to i64
  %26 = ptrtoint i8* %23 to i64
  %27 = tail call i8* @_Znwm(i64 32) #13
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_113StringBuffer8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  %30 = bitcast i8* %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %27, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 %25, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %27, i64 24
  %34 = bitcast i8* %33 to i64*
  store i64 %25, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %57

35:                                               ; preds = %11
  %36 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %38 = bitcast %union.anon.6* %37 to i16**
  %39 = load i16*, i16** %38, align 8
  call void @_ZN12v8_inspector8String16C1EPKtm(%"class.v8_inspector::String16"* nonnull %4, i16* %39, i64 %6) #12
  %40 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %40)
  %41 = call i8* @_Znwm(i64 40) #13
  %42 = bitcast %"class.v8_inspector::String16"* %4 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i64* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %45, i64 15, i1 false) #12
  %46 = getelementptr inbounds i8, i8* %36, i64 23
  %47 = load i8, i8* %46, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #12
  %48 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114StringBuffer16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %41, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %43, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %41, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %40, i64 15, i1 false) #12
  %54 = getelementptr inbounds i8, i8* %41, i64 31
  store i8 %47, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %41, i64 32
  %56 = bitcast i8* %55 to i64*
  store i64 %49, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #12
  br label %57

57:                                               ; preds = %35, %22, %8
  %58 = phi i8* [ %9, %8 ], [ %27, %22 ], [ %41, %35 ]
  %59 = bitcast i8* %58 to %"class.v8_inspector::StringBuffer"*
  ret %"class.v8_inspector::StringBuffer"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENS_8String16E(%"class.v8_inspector::String16"* nocapture) local_unnamed_addr #0 {
  %2 = alloca [15 x i8], align 8
  %3 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = tail call i8* @_Znwm(i64 8) #13
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_117EmptyStringBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  br label %35

18:                                               ; preds = %12
  %19 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %19)
  %20 = tail call i8* @_Znwm(i64 40) #13
  %21 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  %22 = bitcast %"class.v8_inspector::String16"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %25, i64 15, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114StringBuffer16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 8
  %30 = bitcast i8* %29 to i64*
  store i64 %23, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %20, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %19, i64 15, i1 false) #12
  %32 = getelementptr inbounds i8, i8* %20, i64 31
  store i8 %5, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %20, i64 32
  %34 = bitcast i8* %33 to i64*
  store i64 %27, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %19)
  br label %35

35:                                               ; preds = %18, %15
  %36 = phi i8* [ %16, %15 ], [ %20, %18 ]
  %37 = bitcast i8* %36 to %"class.v8_inspector::StringBuffer"*
  ret %"class.v8_inspector::StringBuffer"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector16StringBufferFromENSt3__16vectorIhNS0_9allocatorIhEEEE(%"class.std::__1::vector"* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 8) #13
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_117EmptyStringBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  br label %25

10:                                               ; preds = %1
  %11 = ptrtoint i8* %5 to i64
  %12 = ptrtoint i8* %3 to i64
  %13 = tail call i8* @_Znwm(i64 32) #13
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_113StringBuffer8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %12, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 16
  %22 = bitcast i8* %21 to i64*
  store i64 %11, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 24
  %24 = bitcast i8* %23 to i64*
  store i64 %16, i64* %24, align 8
  br label %25

25:                                               ; preds = %10, %7
  %26 = phi i8* [ %8, %7 ], [ %13, %10 ]
  %27 = bitcast i8* %26 to %"class.v8_inspector::StringBuffer"*
  ret %"class.v8_inspector::StringBuffer"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector20stackTraceIdToStringEm(%"class.v8_inspector::String16"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.v8_inspector::String16Builder", align 8
  %4 = bitcast %"class.v8_inspector::String16Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* nonnull %3) #12
  call void @_ZN12v8_inspector15String16Builder12appendNumberEm(%"class.v8_inspector::String16Builder"* nonnull %3, i64 %1) #12
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret %0, %"class.v8_inspector::String16Builder"* nonnull %3) #12
  %5 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = ptrtoint i16* %6 to i64
  %10 = getelementptr inbounds %"class.v8_inspector::String16Builder", %"class.v8_inspector::String16Builder"* %3, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i16** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast i16* %6 to i8*
  call void @_ZdlPv(i8* %12) #13
  br label %13

13:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

declare void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"*) unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder12appendNumberEm(%"class.v8_inspector::String16Builder"*, i64) local_unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::String16Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.v8_crdtp::DeserializerState"*, %"class.v8_inspector::String16"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = extractvalue { i8*, i64 } %9, 1
  %12 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  call void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* nonnull sret %3, i8* %10, i64 %11) #12
  %13 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = bitcast %"class.v8_inspector::String16"* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %17, %8
  %21 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %12, i64 24, i1 false) #12
  %22 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  store i16 0, i16* %24, align 8
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  store i64 %26, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %54

28:                                               ; preds = %2
  %29 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %30 = icmp eq i32 %29, 7
  br i1 %30, label %31, label %53

31:                                               ; preds = %28
  %32 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %33 = extractvalue { i8*, i64 } %32, 0
  %34 = extractvalue { i8*, i64 } %32, 1
  %35 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #12
  %36 = bitcast i8* %33 to i16*
  %37 = lshr i64 %34, 1
  call void @_ZN12v8_inspector8String1611fromUTF16LEEPKtm(%"class.v8_inspector::String16"* nonnull sret %4, i16* %36, i64 %37) #12
  %38 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %31
  %43 = bitcast %"class.v8_inspector::String16"* %1 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %42, %31
  %46 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %35, i64 24, i1 false) #12
  %47 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  store i8 0, i8* %48, align 1
  %49 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  store i16 0, i16* %49, align 8
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  store i64 %51, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #12
  br label %54

53:                                               ; preds = %28
  tail call void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"* %0, i32 52) #12
  br label %54

54:                                               ; preds = %53, %45, %20
  %55 = phi i1 [ true, %20 ], [ true, %45 ], [ false, %53 ]
  ret i1 %55
}

declare i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8String16EvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.v8_inspector::String16"* %0 to i16*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i16* %8, i16* %11
  %14 = select i1 %6, i64 %10, i64 %12
  tail call void @_ZN8v8_crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16* %13, i64 %14, %"class.std::__1::vector"* %1) #12
  ret void
}

declare void @_ZN8v8_crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8protocol6BinaryEvE11DeserializeEPNS_17DeserializerStateEPS3_(%"class.v8_crdtp::DeserializerState"*, %"class.v8_inspector::protocol::Binary"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %7 = icmp eq i32 %6, 8
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = extractvalue { i8*, i64 } %9, 1
  %12 = tail call i8* @_Znwm(i64 48) #13
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #12
  %16 = icmp eq i64 %11, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = icmp slt i64 %11, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast i8* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #14
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %11) #13
  %23 = getelementptr inbounds i8, i8* %12, i64 32
  %24 = bitcast i8* %15 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 %11
  %26 = getelementptr inbounds i8, i8* %12, i64 40
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %10, i64 %11, i1 false) #12
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  br label %30

30:                                               ; preds = %21, %8
  %31 = bitcast i8* %14 to i64*
  %32 = atomicrmw add i64* %31, i64 1 monotonic
  %33 = atomicrmw add i64* %31, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = bitcast i8* %12 to %"class.std::__1::__shared_weak_count"*
  %37 = bitcast i8* %12 to %"class.std::__1::__shared_count"*
  %38 = bitcast i8* %12 to void (%"class.std::__1::__shared_count"*)***
  %39 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, i64 2
  %41 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %40, align 8
  tail call void %41(%"class.std::__1::__shared_count"* nonnull %37) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %36) #12
  br label %42

42:                                               ; preds = %30, %35
  %43 = ptrtoint i8* %15 to i64
  %44 = ptrtoint i8* %12 to i64
  %45 = bitcast %"class.v8_inspector::protocol::Binary"* %1 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %1, i64 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::__shared_weak_count"** %46 to i64*
  %48 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  store i64 %44, i64* %47, align 8
  %49 = icmp eq %"class.std::__1::__shared_weak_count"* %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0, i32 1
  %52 = atomicrmw add i64* %51, i64 -1 acq_rel
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %100

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0
  %56 = bitcast %"class.std::__1::__shared_weak_count"* %48 to void (%"class.std::__1::__shared_count"*)***
  %57 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %57, i64 2
  %59 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %58, align 8
  tail call void %59(%"class.std::__1::__shared_count"* %55) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %48) #12
  br label %100

60:                                               ; preds = %2
  %61 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %62 = icmp eq i32 %61, 6
  br i1 %62, label %63, label %99

63:                                               ; preds = %60
  %64 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %5) #12
  %65 = extractvalue { i8*, i64 } %64, 0
  %66 = extractvalue { i8*, i64 } %64, 1
  %67 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #12
  call void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* nonnull sret %3, i8* %65, i64 %66) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %68 = call { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } @_ZN12v8_inspector8protocol6Binary10fromBase64ERKNS_8String16EPb(%"class.v8_inspector::String16"* nonnull dereferenceable(32) %3, i8* nonnull %4)
  %69 = extractvalue { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } %68, 0
  %70 = ptrtoint %"class.std::__1::vector"* %69 to i64
  %71 = extractvalue { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* } %68, 1
  %72 = ptrtoint %"class.std::__1::__shared_weak_count"* %71 to i64
  %73 = bitcast %"class.v8_inspector::protocol::Binary"* %1 to i64*
  store i64 %70, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %1, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::__shared_weak_count"** %74 to i64*
  %76 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %74, align 8
  store i64 %72, i64* %75, align 8
  %77 = icmp eq %"class.std::__1::__shared_weak_count"* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0, i32 1
  %80 = atomicrmw add i64* %79, i64 -1 acq_rel
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0
  %84 = bitcast %"class.std::__1::__shared_weak_count"* %76 to void (%"class.std::__1::__shared_count"*)***
  %85 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %85, i64 2
  %87 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %86, align 8
  call void %87(%"class.std::__1::__shared_count"* %83) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %76) #12
  br label %88

88:                                               ; preds = %82, %78, %63
  %89 = load i8, i8* %4, align 1, !range !14
  %90 = icmp ne i8 %89, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %91 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %88
  %96 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %88, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #12
  br label %100

99:                                               ; preds = %60
  tail call void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"* %0, i32 54) #12
  br label %100

100:                                              ; preds = %42, %50, %54, %99, %98
  %101 = phi i1 [ %90, %98 ], [ false, %99 ], [ true, %54 ], [ true, %50 ], [ true, %42 ]
  ret i1 %101
}

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsIN12v8_inspector8protocol6BinaryEvE9SerializeERKS3_PNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.v8_inspector::protocol::Binary"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %9, %10
  tail call void @_ZN8v8_crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %6, i64 %11, %"class.std::__1::vector"* %1) #12
  ret void
}

declare void @_ZN8v8_crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp16SerializerTraitsIN12v8_inspector8protocol6BinaryEE9SerializeERKS3_PNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.v8_inspector::protocol::Binary"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %9, %10
  tail call void @_ZN8v8_crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %6, i64 %11, %"class.std::__1::vector"* %1) #12
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage"* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1, i32 0, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #13
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #8

declare void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN12v8_inspector8String1611fromUTF16LEEPKtm(%"class.v8_inspector::String16"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #14
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #14
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = getelementptr i16, i16* %41, i64 %54
  %56 = sub i64 %4, %54
  %57 = getelementptr i16, i16* %23, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %41, i64 %66
  %69 = getelementptr i16, i16* %23, i64 %66
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !15
  %72 = getelementptr i16, i16* %69, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !15
  %75 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !18, !noalias !15
  %76 = getelementptr i16, i16* %68, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !18, !noalias !15
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %41, i64 %78
  %80 = getelementptr i16, i16* %23, i64 %78
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !15
  %83 = getelementptr i16, i16* %80, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !15
  %86 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !18, !noalias !15
  %87 = getelementptr i16, i16* %79, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !18, !noalias !15
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %41, i64 %89
  %91 = getelementptr i16, i16* %23, i64 %89
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !15
  %94 = getelementptr i16, i16* %91, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !15
  %97 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !18, !noalias !15
  %98 = getelementptr i16, i16* %90, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !18, !noalias !15
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %41, i64 %100
  %102 = getelementptr i16, i16* %23, i64 %100
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !15
  %105 = getelementptr i16, i16* %102, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !15
  %108 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !18, !noalias !15
  %109 = getelementptr i16, i16* %101, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !18, !noalias !15
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !20

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %41, i64 %118
  %121 = getelementptr i16, i16* %23, i64 %118
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !15
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !15
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !18, !noalias !15
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !18, !noalias !15
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !21

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %55, %133 ]
  %137 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %57, %133 ]
  %139 = add i64 %137, -1
  %140 = and i64 %137, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i16* [ %149, %142 ], [ %136, %135 ]
  %144 = phi i64 [ %148, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %150, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %143, align 2
  %148 = add i64 %144, -1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = getelementptr inbounds i16, i16* %145, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !22

153:                                              ; preds = %142, %135
  %154 = phi i16* [ %136, %135 ], [ %149, %142 ]
  %155 = phi i64 [ %137, %135 ], [ %148, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %150, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i16* [ %185, %158 ], [ %154, %153 ]
  %160 = phi i64 [ %184, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %186, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %159, align 2
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = getelementptr inbounds i16, i16* %161, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = getelementptr inbounds i16, i16* %161, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = getelementptr inbounds i16, i16* %161, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = getelementptr inbounds i16, i16* %161, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = getelementptr inbounds i16, i16* %161, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = getelementptr inbounds i16, i16* %161, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = getelementptr inbounds i16, i16* %161, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %160, -8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = getelementptr inbounds i16, i16* %161, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !23

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = getelementptr i16, i16* %194, i64 %213
  %215 = sub i64 %190, %213
  %216 = getelementptr i16, i16* %196, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %194, i64 %225
  %228 = getelementptr i16, i16* %196, i64 %225
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !24
  %231 = getelementptr i16, i16* %228, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !24
  %234 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !27, !noalias !24
  %235 = getelementptr i16, i16* %227, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !27, !noalias !24
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %194, i64 %237
  %239 = getelementptr i16, i16* %196, i64 %237
  %240 = bitcast i16* %239 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !24
  %242 = getelementptr i16, i16* %239, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !24
  %245 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !27, !noalias !24
  %246 = getelementptr i16, i16* %238, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !27, !noalias !24
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %194, i64 %248
  %250 = getelementptr i16, i16* %196, i64 %248
  %251 = bitcast i16* %250 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !24
  %253 = getelementptr i16, i16* %250, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !24
  %256 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !27, !noalias !24
  %257 = getelementptr i16, i16* %249, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !27, !noalias !24
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %194, i64 %259
  %261 = getelementptr i16, i16* %196, i64 %259
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !24
  %264 = getelementptr i16, i16* %261, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !24
  %267 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !27, !noalias !24
  %268 = getelementptr i16, i16* %260, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !27, !noalias !24
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !29

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %194, i64 %277
  %280 = getelementptr i16, i16* %196, i64 %277
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !24
  %283 = getelementptr i16, i16* %280, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !24
  %286 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !27, !noalias !24
  %287 = getelementptr i16, i16* %279, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !27, !noalias !24
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !30

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %214, %292 ]
  %296 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %216, %292 ]
  %298 = add i64 %296, -1
  %299 = and i64 %296, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i16* [ %308, %301 ], [ %295, %294 ]
  %303 = phi i64 [ %307, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %309, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %304, align 2
  store i16 %306, i16* %302, align 2
  %307 = add i64 %303, -1
  %308 = getelementptr inbounds i16, i16* %302, i64 1
  %309 = getelementptr inbounds i16, i16* %304, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !31

312:                                              ; preds = %301, %294
  %313 = phi i16* [ %295, %294 ], [ %308, %301 ]
  %314 = phi i64 [ %296, %294 ], [ %307, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %309, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i16* [ %344, %317 ], [ %313, %312 ]
  %319 = phi i64 [ %343, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %345, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %318, align 2
  %322 = getelementptr inbounds i16, i16* %318, i64 1
  %323 = getelementptr inbounds i16, i16* %320, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %318, i64 2
  %326 = getelementptr inbounds i16, i16* %320, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %318, i64 3
  %329 = getelementptr inbounds i16, i16* %320, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %318, i64 4
  %332 = getelementptr inbounds i16, i16* %320, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %318, i64 5
  %335 = getelementptr inbounds i16, i16* %320, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %318, i64 6
  %338 = getelementptr inbounds i16, i16* %320, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %318, i64 7
  %341 = getelementptr inbounds i16, i16* %320, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %319, -8
  %344 = getelementptr inbounds i16, i16* %318, i64 8
  %345 = getelementptr inbounds i16, i16* %320, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !32

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #13
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector12StringBufferD2Ev(%"class.v8_inspector::StringBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_117EmptyStringBufferD0Ev(%"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_117EmptyStringBuffer6stringEv(%"class.v8_inspector::StringView"* noalias nocapture sret, %"class.v8_inspector::(anonymous namespace)::EmptyStringBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %5 = bitcast i64* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_113StringBuffer8D2Ev(%"class.v8_inspector::(anonymous namespace)::StringBuffer8"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_113StringBuffer8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #13
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_113StringBuffer8D0Ev(%"class.v8_inspector::(anonymous namespace)::StringBuffer8"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_113StringBuffer8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #13
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_113StringBuffer86stringEv(%"class.v8_inspector::StringView"* noalias nocapture sret, %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* nocapture readonly) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer8", %"class.v8_inspector::(anonymous namespace)::StringBuffer8"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %5
  %10 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2, i32 0
  %13 = bitcast i8** %12 to i64*
  store i64 %5, i64* %13, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_114StringBuffer16D2Ev(%"class.v8_inspector::(anonymous namespace)::StringBuffer16"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114StringBuffer16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector12_GLOBAL__N_114StringBuffer16D0Ev(%"class.v8_inspector::(anonymous namespace)::StringBuffer16"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector12_GLOBAL__N_114StringBuffer16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK12v8_inspector12_GLOBAL__N_114StringBuffer166stringEv(%"class.v8_inspector::StringView"* noalias nocapture sret, %"class.v8_inspector::(anonymous namespace)::StringBuffer16"*) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %1, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::StringBuffer16", %"class.v8_inspector::(anonymous namespace)::StringBuffer16"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %15 = zext i8 %6 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i16* [ %10, %8 ], [ %14, %13 ]
  %18 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %22 = bitcast %union.anon.6* %21 to i16**
  store i16* %17, i16** %22, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !8}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !8}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !8}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !8}
