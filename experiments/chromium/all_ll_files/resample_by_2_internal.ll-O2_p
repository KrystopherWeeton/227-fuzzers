; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/resample_by_2_internal.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/resample_by_2_internal.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_DownBy2IntToShort(i32* nocapture, i32, i16* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = ashr i32 %1, 1
  %6 = icmp sgt i32 %1, 1
  br i1 %6, label %7, label %175

7:                                                ; preds = %4
  %8 = getelementptr inbounds i32, i32* %3, i64 1
  %9 = getelementptr inbounds i32, i32* %3, i64 2
  %10 = getelementptr inbounds i32, i32* %3, i64 3
  %11 = sext i32 %5 to i64
  br label %12

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %39, %12 ]
  %14 = shl nuw i64 %13, 1
  %15 = getelementptr inbounds i32, i32* %0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* %8, align 4
  %18 = add i32 %16, 8192
  %19 = sub i32 %18, %17
  %20 = ashr i32 %19, 14
  %21 = load i32, i32* %3, align 4
  %22 = mul nsw i32 %20, 3050
  %23 = add nsw i32 %22, %21
  store i32 %16, i32* %3, align 4
  %24 = load i32, i32* %9, align 4
  %25 = sub nsw i32 %23, %24
  %26 = ashr i32 %25, 14
  %27 = lshr i32 %25, 31
  %28 = add nsw i32 %26, %27
  %29 = mul nsw i32 %28, 9368
  %30 = add nsw i32 %29, %17
  store i32 %23, i32* %8, align 4
  %31 = load i32, i32* %10, align 4
  %32 = sub nsw i32 %30, %31
  %33 = ashr i32 %32, 14
  %34 = lshr i32 %32, 31
  %35 = add nsw i32 %33, %34
  %36 = mul nsw i32 %35, 15063
  %37 = add nsw i32 %36, %24
  store i32 %37, i32* %10, align 4
  store i32 %30, i32* %9, align 4
  %38 = ashr i32 %37, 1
  store i32 %38, i32* %15, align 4
  %39 = add nuw nsw i64 %13, 1
  %40 = icmp slt i64 %39, %11
  br i1 %40, label %12, label %41

41:                                               ; preds = %12
  %42 = getelementptr inbounds i32, i32* %0, i64 1
  br i1 %6, label %43, label %175

43:                                               ; preds = %41
  %44 = getelementptr inbounds i32, i32* %3, i64 5
  %45 = getelementptr inbounds i32, i32* %3, i64 4
  %46 = getelementptr inbounds i32, i32* %3, i64 6
  %47 = getelementptr inbounds i32, i32* %3, i64 7
  %48 = sext i32 %5 to i64
  br label %113

49:                                               ; preds = %113
  br i1 %6, label %50, label %175

50:                                               ; preds = %49
  %51 = sext i32 %5 to i64
  %52 = icmp sgt i64 %11, 2
  %53 = select i1 %52, i64 %11, i64 2
  %54 = add nsw i64 %53, -1
  %55 = lshr i64 %54, 1
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i64 %56, 4
  br i1 %57, label %58, label %60

58:                                               ; preds = %111, %60, %50
  %59 = phi i64 [ 0, %60 ], [ 0, %50 ], [ %78, %111 ]
  br label %142

60:                                               ; preds = %50
  %61 = icmp sgt i64 %11, 2
  %62 = select i1 %61, i64 %11, i64 2
  %63 = add nsw i64 %62, -1
  %64 = lshr i64 %63, 1
  %65 = add nuw nsw i64 %62, 1
  %66 = and i64 %65, 9223372036854775806
  %67 = getelementptr i16, i16* %2, i64 %66
  %68 = shl nuw nsw i64 %64, 2
  %69 = add nuw nsw i64 %68, 4
  %70 = getelementptr i32, i32* %0, i64 %69
  %71 = bitcast i32* %70 to i16*
  %72 = icmp ugt i16* %71, %2
  %73 = bitcast i16* %67 to i32*
  %74 = icmp ugt i32* %73, %0
  %75 = and i1 %72, %74
  br i1 %75, label %58, label %76

76:                                               ; preds = %60
  %77 = and i64 %56, 9223372036854775804
  %78 = shl nuw i64 %77, 1
  %79 = getelementptr inbounds i16, i16* %2, i64 -1
  br label %80

80:                                               ; preds = %80, %76
  %81 = phi i64 [ 0, %76 ], [ %109, %80 ]
  %82 = shl i64 %81, 1
  %83 = shl i64 %81, 2
  %84 = getelementptr inbounds i32, i32* %0, i64 %83
  %85 = bitcast i32* %84 to <16 x i32>*
  %86 = load <16 x i32>, <16 x i32>* %85, align 4
  %87 = shufflevector <16 x i32> %86, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %88 = shufflevector <16 x i32> %86, <16 x i32> undef, <4 x i32> <i32 1, i32 5, i32 9, i32 13>
  %89 = shufflevector <16 x i32> %86, <16 x i32> undef, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %90 = shufflevector <16 x i32> %86, <16 x i32> undef, <4 x i32> <i32 3, i32 7, i32 11, i32 15>
  %91 = add nsw <4 x i32> %88, %87
  %92 = ashr <4 x i32> %91, <i32 15, i32 15, i32 15, i32 15>
  %93 = add nsw <4 x i32> %90, %89
  %94 = ashr <4 x i32> %93, <i32 15, i32 15, i32 15, i32 15>
  %95 = icmp sgt <4 x i32> %91, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %96 = select <4 x i1> %95, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> %92
  %97 = icmp sgt <4 x i32> %96, <i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %98 = select <4 x i1> %97, <4 x i32> %96, <4 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %99 = trunc <4 x i32> %98 to <4 x i16>
  %100 = icmp sgt <4 x i32> %93, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %101 = select <4 x i1> %100, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> %94
  %102 = icmp sgt <4 x i32> %101, <i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %103 = select <4 x i1> %102, <4 x i32> %101, <4 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %104 = trunc <4 x i32> %103 to <4 x i16>
  %105 = or i64 %82, 1
  %106 = getelementptr inbounds i16, i16* %79, i64 %105
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = shufflevector <4 x i16> %99, <4 x i16> %104, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i16> %108, <8 x i16>* %107, align 2
  %109 = add i64 %81, 4
  %110 = icmp eq i64 %109, %77
  br i1 %110, label %111, label %80, !llvm.loop !2

111:                                              ; preds = %80
  %112 = icmp eq i64 %56, %77
  br i1 %112, label %175, label %58

113:                                              ; preds = %43, %113
  %114 = phi i64 [ 0, %43 ], [ %140, %113 ]
  %115 = shl nuw i64 %114, 1
  %116 = getelementptr inbounds i32, i32* %42, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %44, align 4
  %119 = add i32 %117, 8192
  %120 = sub i32 %119, %118
  %121 = ashr i32 %120, 14
  %122 = load i32, i32* %45, align 4
  %123 = mul nsw i32 %121, 821
  %124 = add nsw i32 %123, %122
  store i32 %117, i32* %45, align 4
  %125 = load i32, i32* %46, align 4
  %126 = sub nsw i32 %124, %125
  %127 = ashr i32 %126, 14
  %128 = lshr i32 %126, 31
  %129 = add nsw i32 %127, %128
  %130 = mul nsw i32 %129, 6110
  %131 = add nsw i32 %130, %118
  store i32 %124, i32* %44, align 4
  %132 = load i32, i32* %47, align 4
  %133 = sub nsw i32 %131, %132
  %134 = ashr i32 %133, 14
  %135 = lshr i32 %133, 31
  %136 = add nsw i32 %134, %135
  %137 = mul nsw i32 %136, 12382
  %138 = add nsw i32 %137, %125
  store i32 %138, i32* %47, align 4
  store i32 %131, i32* %46, align 4
  %139 = ashr i32 %138, 1
  store i32 %139, i32* %116, align 4
  %140 = add nuw nsw i64 %114, 1
  %141 = icmp slt i64 %140, %48
  br i1 %141, label %113, label %49

142:                                              ; preds = %58, %142
  %143 = phi i64 [ %173, %142 ], [ %59, %58 ]
  %144 = shl nuw i64 %143, 1
  %145 = getelementptr inbounds i32, i32* %0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = or i64 %144, 1
  %148 = getelementptr inbounds i32, i32* %0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = add nsw i32 %149, %146
  %151 = ashr i32 %150, 15
  %152 = or i64 %144, 2
  %153 = getelementptr inbounds i32, i32* %0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = or i64 %144, 3
  %156 = getelementptr inbounds i32, i32* %0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = add nsw i32 %157, %154
  %159 = ashr i32 %158, 15
  %160 = icmp sgt i32 %150, 1073741823
  %161 = select i1 %160, i32 32767, i32 %151
  %162 = icmp sgt i32 %161, -32768
  %163 = select i1 %162, i32 %161, i32 -32768
  %164 = trunc i32 %163 to i16
  %165 = getelementptr inbounds i16, i16* %2, i64 %143
  store i16 %164, i16* %165, align 2
  %166 = icmp sgt i32 %158, 1073741823
  %167 = select i1 %166, i32 32767, i32 %159
  %168 = icmp sgt i32 %167, -32768
  %169 = select i1 %168, i32 %167, i32 -32768
  %170 = trunc i32 %169 to i16
  %171 = or i64 %143, 1
  %172 = getelementptr inbounds i16, i16* %2, i64 %171
  store i16 %170, i16* %172, align 2
  %173 = add nuw nsw i64 %143, 2
  %174 = icmp slt i64 %173, %51
  br i1 %174, label %142, label %175, !llvm.loop !4

175:                                              ; preds = %142, %111, %4, %41, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_DownBy2ShortToInt(i16* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = ashr i32 %1, 1
  %6 = icmp sgt i32 %1, 1
  br i1 %6, label %7, label %88

7:                                                ; preds = %4
  %8 = getelementptr inbounds i32, i32* %3, i64 1
  %9 = getelementptr inbounds i32, i32* %3, i64 2
  %10 = getelementptr inbounds i32, i32* %3, i64 3
  %11 = sext i32 %5 to i64
  br label %12

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %43, %12 ]
  %14 = shl nuw i64 %13, 1
  %15 = getelementptr inbounds i16, i16* %0, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  %18 = shl nsw i32 %17, 15
  %19 = or i32 %18, 16384
  %20 = load i32, i32* %8, align 4
  %21 = sub i32 8192, %20
  %22 = add i32 %21, %19
  %23 = ashr i32 %22, 14
  %24 = load i32, i32* %3, align 4
  %25 = mul nsw i32 %23, 3050
  %26 = add nsw i32 %25, %24
  store i32 %19, i32* %3, align 4
  %27 = load i32, i32* %9, align 4
  %28 = sub nsw i32 %26, %27
  %29 = ashr i32 %28, 14
  %30 = lshr i32 %28, 31
  %31 = add nsw i32 %29, %30
  %32 = mul nsw i32 %31, 9368
  %33 = add nsw i32 %32, %20
  store i32 %26, i32* %8, align 4
  %34 = load i32, i32* %10, align 4
  %35 = sub nsw i32 %33, %34
  %36 = ashr i32 %35, 14
  %37 = lshr i32 %35, 31
  %38 = add nsw i32 %36, %37
  %39 = mul nsw i32 %38, 15063
  %40 = add nsw i32 %39, %27
  store i32 %40, i32* %10, align 4
  store i32 %33, i32* %9, align 4
  %41 = ashr i32 %40, 1
  %42 = getelementptr inbounds i32, i32* %2, i64 %13
  store i32 %41, i32* %42, align 4
  %43 = add nuw nsw i64 %13, 1
  %44 = icmp slt i64 %43, %11
  br i1 %44, label %12, label %45

45:                                               ; preds = %12
  %46 = getelementptr inbounds i16, i16* %0, i64 1
  br i1 %6, label %47, label %88

47:                                               ; preds = %45
  %48 = getelementptr inbounds i32, i32* %3, i64 5
  %49 = getelementptr inbounds i32, i32* %3, i64 4
  %50 = getelementptr inbounds i32, i32* %3, i64 6
  %51 = getelementptr inbounds i32, i32* %3, i64 7
  %52 = sext i32 %5 to i64
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi i64 [ 0, %47 ], [ %86, %53 ]
  %55 = shl nuw i64 %54, 1
  %56 = getelementptr inbounds i16, i16* %46, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = shl nsw i32 %58, 15
  %60 = or i32 %59, 16384
  %61 = load i32, i32* %48, align 4
  %62 = sub i32 8192, %61
  %63 = add i32 %62, %60
  %64 = ashr i32 %63, 14
  %65 = load i32, i32* %49, align 4
  %66 = mul nsw i32 %64, 821
  %67 = add nsw i32 %66, %65
  store i32 %60, i32* %49, align 4
  %68 = load i32, i32* %50, align 4
  %69 = sub nsw i32 %67, %68
  %70 = ashr i32 %69, 14
  %71 = lshr i32 %69, 31
  %72 = add nsw i32 %70, %71
  %73 = mul nsw i32 %72, 6110
  %74 = add nsw i32 %73, %61
  store i32 %67, i32* %48, align 4
  %75 = load i32, i32* %51, align 4
  %76 = sub nsw i32 %74, %75
  %77 = ashr i32 %76, 14
  %78 = lshr i32 %76, 31
  %79 = add nsw i32 %77, %78
  %80 = mul nsw i32 %79, 12382
  %81 = add nsw i32 %80, %68
  store i32 %81, i32* %51, align 4
  store i32 %74, i32* %50, align 4
  %82 = ashr i32 %81, 1
  %83 = getelementptr inbounds i32, i32* %2, i64 %54
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %82, %84
  store i32 %85, i32* %83, align 4
  %86 = add nuw nsw i64 %54, 1
  %87 = icmp slt i64 %86, %52
  br i1 %87, label %53, label %88

88:                                               ; preds = %53, %4, %45
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_UpBy2ShortToInt(i16* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %89

6:                                                ; preds = %4
  %7 = getelementptr inbounds i32, i32* %3, i64 5
  %8 = getelementptr inbounds i32, i32* %3, i64 4
  %9 = getelementptr inbounds i32, i32* %3, i64 6
  %10 = getelementptr inbounds i32, i32* %3, i64 7
  %11 = zext i32 %1 to i64
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %45, %12 ]
  %14 = getelementptr inbounds i16, i16* %0, i64 %13
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = shl nsw i32 %16, 15
  %18 = or i32 %17, 16384
  %19 = load i32, i32* %7, align 4
  %20 = sub i32 8192, %19
  %21 = add i32 %20, %18
  %22 = ashr i32 %21, 14
  %23 = load i32, i32* %8, align 4
  %24 = mul nsw i32 %22, 821
  %25 = add nsw i32 %24, %23
  store i32 %18, i32* %8, align 4
  %26 = load i32, i32* %9, align 4
  %27 = sub nsw i32 %25, %26
  %28 = ashr i32 %27, 14
  %29 = lshr i32 %27, 31
  %30 = add nsw i32 %28, %29
  %31 = mul nsw i32 %30, 6110
  %32 = add nsw i32 %31, %19
  store i32 %25, i32* %7, align 4
  %33 = load i32, i32* %10, align 4
  %34 = sub nsw i32 %32, %33
  %35 = ashr i32 %34, 14
  %36 = lshr i32 %34, 31
  %37 = add nsw i32 %35, %36
  %38 = mul nsw i32 %37, 12382
  %39 = add nsw i32 %38, %26
  store i32 %39, i32* %10, align 4
  store i32 %32, i32* %9, align 4
  %40 = ashr i32 %39, 15
  %41 = trunc i64 %13 to i32
  %42 = shl i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %2, i64 %43
  store i32 %40, i32* %44, align 4
  %45 = add nuw nsw i64 %13, 1
  %46 = icmp eq i64 %45, %11
  br i1 %46, label %47, label %12

47:                                               ; preds = %12
  %48 = getelementptr inbounds i32, i32* %2, i64 1
  br i1 %5, label %49, label %89

49:                                               ; preds = %47
  %50 = getelementptr inbounds i32, i32* %3, i64 1
  %51 = getelementptr inbounds i32, i32* %3, i64 2
  %52 = getelementptr inbounds i32, i32* %3, i64 3
  %53 = zext i32 %1 to i64
  br label %54

54:                                               ; preds = %54, %49
  %55 = phi i64 [ 0, %49 ], [ %87, %54 ]
  %56 = getelementptr inbounds i16, i16* %0, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = sext i16 %57 to i32
  %59 = shl nsw i32 %58, 15
  %60 = or i32 %59, 16384
  %61 = load i32, i32* %50, align 4
  %62 = sub i32 8192, %61
  %63 = add i32 %62, %60
  %64 = ashr i32 %63, 14
  %65 = load i32, i32* %3, align 4
  %66 = mul nsw i32 %64, 3050
  %67 = add nsw i32 %66, %65
  store i32 %60, i32* %3, align 4
  %68 = load i32, i32* %51, align 4
  %69 = sub nsw i32 %67, %68
  %70 = ashr i32 %69, 14
  %71 = lshr i32 %69, 31
  %72 = add nsw i32 %70, %71
  %73 = mul nsw i32 %72, 9368
  %74 = add nsw i32 %73, %61
  store i32 %67, i32* %50, align 4
  %75 = load i32, i32* %52, align 4
  %76 = sub nsw i32 %74, %75
  %77 = ashr i32 %76, 14
  %78 = lshr i32 %76, 31
  %79 = add nsw i32 %77, %78
  %80 = mul nsw i32 %79, 15063
  %81 = add nsw i32 %80, %68
  store i32 %81, i32* %52, align 4
  store i32 %74, i32* %51, align 4
  %82 = ashr i32 %81, 15
  %83 = trunc i64 %55 to i32
  %84 = shl i32 %83, 1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %48, i64 %85
  store i32 %82, i32* %86, align 4
  %87 = add nuw nsw i64 %55, 1
  %88 = icmp eq i64 %87, %53
  br i1 %88, label %89, label %54

89:                                               ; preds = %54, %4, %47
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_UpBy2IntToInt(i32* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %81

6:                                                ; preds = %4
  %7 = getelementptr inbounds i32, i32* %3, i64 5
  %8 = getelementptr inbounds i32, i32* %3, i64 4
  %9 = getelementptr inbounds i32, i32* %3, i64 6
  %10 = getelementptr inbounds i32, i32* %3, i64 7
  %11 = zext i32 %1 to i64
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %41, %12 ]
  %14 = getelementptr inbounds i32, i32* %0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %7, align 4
  %17 = add i32 %15, 8192
  %18 = sub i32 %17, %16
  %19 = ashr i32 %18, 14
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %19, 821
  %22 = add nsw i32 %21, %20
  store i32 %15, i32* %8, align 4
  %23 = load i32, i32* %9, align 4
  %24 = sub nsw i32 %22, %23
  %25 = ashr i32 %24, 14
  %26 = lshr i32 %24, 31
  %27 = add nsw i32 %25, %26
  %28 = mul nsw i32 %27, 6110
  %29 = add nsw i32 %28, %16
  store i32 %22, i32* %7, align 4
  %30 = load i32, i32* %10, align 4
  %31 = sub nsw i32 %29, %30
  %32 = ashr i32 %31, 14
  %33 = lshr i32 %31, 31
  %34 = add nsw i32 %32, %33
  %35 = mul nsw i32 %34, 12382
  %36 = add nsw i32 %35, %23
  store i32 %36, i32* %10, align 4
  store i32 %29, i32* %9, align 4
  %37 = trunc i64 %13 to i32
  %38 = shl i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %2, i64 %39
  store i32 %36, i32* %40, align 4
  %41 = add nuw nsw i64 %13, 1
  %42 = icmp eq i64 %41, %11
  br i1 %42, label %43, label %12

43:                                               ; preds = %12
  %44 = getelementptr inbounds i32, i32* %2, i64 1
  br i1 %5, label %45, label %81

45:                                               ; preds = %43
  %46 = getelementptr inbounds i32, i32* %3, i64 1
  %47 = getelementptr inbounds i32, i32* %3, i64 2
  %48 = getelementptr inbounds i32, i32* %3, i64 3
  %49 = zext i32 %1 to i64
  br label %50

50:                                               ; preds = %50, %45
  %51 = phi i64 [ 0, %45 ], [ %79, %50 ]
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %46, align 4
  %55 = add i32 %53, 8192
  %56 = sub i32 %55, %54
  %57 = ashr i32 %56, 14
  %58 = load i32, i32* %3, align 4
  %59 = mul nsw i32 %57, 3050
  %60 = add nsw i32 %59, %58
  store i32 %53, i32* %3, align 4
  %61 = load i32, i32* %47, align 4
  %62 = sub nsw i32 %60, %61
  %63 = ashr i32 %62, 14
  %64 = lshr i32 %62, 31
  %65 = add nsw i32 %63, %64
  %66 = mul nsw i32 %65, 9368
  %67 = add nsw i32 %66, %54
  store i32 %60, i32* %46, align 4
  %68 = load i32, i32* %48, align 4
  %69 = sub nsw i32 %67, %68
  %70 = ashr i32 %69, 14
  %71 = lshr i32 %69, 31
  %72 = add nsw i32 %70, %71
  %73 = mul nsw i32 %72, 15063
  %74 = add nsw i32 %73, %61
  store i32 %74, i32* %48, align 4
  store i32 %67, i32* %47, align 4
  %75 = trunc i64 %51 to i32
  %76 = shl i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %44, i64 %77
  store i32 %74, i32* %78, align 4
  %79 = add nuw nsw i64 %51, 1
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %50

81:                                               ; preds = %50, %4, %43
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_UpBy2IntToShort(i32* nocapture readonly, i32, i16* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %93

6:                                                ; preds = %4
  %7 = getelementptr inbounds i32, i32* %3, i64 5
  %8 = getelementptr inbounds i32, i32* %3, i64 4
  %9 = getelementptr inbounds i32, i32* %3, i64 6
  %10 = getelementptr inbounds i32, i32* %3, i64 7
  %11 = zext i32 %1 to i64
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ 0, %6 ], [ %47, %12 ]
  %14 = getelementptr inbounds i32, i32* %0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %7, align 4
  %17 = add i32 %15, 8192
  %18 = sub i32 %17, %16
  %19 = ashr i32 %18, 14
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %19, 821
  %22 = add nsw i32 %21, %20
  store i32 %15, i32* %8, align 4
  %23 = load i32, i32* %9, align 4
  %24 = sub nsw i32 %22, %23
  %25 = ashr i32 %24, 14
  %26 = lshr i32 %24, 31
  %27 = add nsw i32 %25, %26
  %28 = mul nsw i32 %27, 6110
  %29 = add nsw i32 %28, %16
  store i32 %22, i32* %7, align 4
  %30 = load i32, i32* %10, align 4
  %31 = sub nsw i32 %29, %30
  %32 = ashr i32 %31, 14
  %33 = lshr i32 %31, 31
  %34 = add nsw i32 %32, %33
  %35 = mul nsw i32 %34, 12382
  %36 = add nsw i32 %35, %23
  store i32 %36, i32* %10, align 4
  store i32 %29, i32* %9, align 4
  %37 = ashr i32 %36, 15
  %38 = icmp slt i32 %37, 32767
  %39 = select i1 %38, i32 %37, i32 32767
  %40 = icmp sgt i32 %39, -32768
  %41 = select i1 %40, i32 %39, i32 -32768
  %42 = trunc i32 %41 to i16
  %43 = trunc i64 %13 to i32
  %44 = shl i32 %43, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %2, i64 %45
  store i16 %42, i16* %46, align 2
  %47 = add nuw nsw i64 %13, 1
  %48 = icmp eq i64 %47, %11
  br i1 %48, label %49, label %12

49:                                               ; preds = %12
  %50 = getelementptr inbounds i16, i16* %2, i64 1
  br i1 %5, label %51, label %93

51:                                               ; preds = %49
  %52 = getelementptr inbounds i32, i32* %3, i64 1
  %53 = getelementptr inbounds i32, i32* %3, i64 2
  %54 = getelementptr inbounds i32, i32* %3, i64 3
  %55 = zext i32 %1 to i64
  br label %56

56:                                               ; preds = %56, %51
  %57 = phi i64 [ 0, %51 ], [ %91, %56 ]
  %58 = getelementptr inbounds i32, i32* %0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %52, align 4
  %61 = add i32 %59, 8192
  %62 = sub i32 %61, %60
  %63 = ashr i32 %62, 14
  %64 = load i32, i32* %3, align 4
  %65 = mul nsw i32 %63, 3050
  %66 = add nsw i32 %65, %64
  store i32 %59, i32* %3, align 4
  %67 = load i32, i32* %53, align 4
  %68 = sub nsw i32 %66, %67
  %69 = ashr i32 %68, 14
  %70 = lshr i32 %68, 31
  %71 = add nsw i32 %69, %70
  %72 = mul nsw i32 %71, 9368
  %73 = add nsw i32 %72, %60
  store i32 %66, i32* %52, align 4
  %74 = load i32, i32* %54, align 4
  %75 = sub nsw i32 %73, %74
  %76 = ashr i32 %75, 14
  %77 = lshr i32 %75, 31
  %78 = add nsw i32 %76, %77
  %79 = mul nsw i32 %78, 15063
  %80 = add nsw i32 %79, %67
  store i32 %80, i32* %54, align 4
  store i32 %73, i32* %53, align 4
  %81 = ashr i32 %80, 15
  %82 = icmp slt i32 %81, 32767
  %83 = select i1 %82, i32 %81, i32 32767
  %84 = icmp sgt i32 %83, -32768
  %85 = select i1 %84, i32 %83, i32 -32768
  %86 = trunc i32 %85 to i16
  %87 = trunc i64 %57 to i32
  %88 = shl i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i16, i16* %50, i64 %89
  store i16 %86, i16* %90, align 2
  %91 = add nuw nsw i64 %57, 1
  %92 = icmp eq i64 %91, %55
  br i1 %92, label %93, label %56

93:                                               ; preds = %56, %4, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_LPBy2ShortToInt(i16* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = ashr i32 %1, 1
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = getelementptr inbounds i32, i32* %3, i64 12
  %8 = icmp sgt i32 %1, 1
  br i1 %8, label %9, label %175

9:                                                ; preds = %4
  %10 = load i32, i32* %7, align 4
  %11 = getelementptr inbounds i32, i32* %3, i64 1
  %12 = getelementptr inbounds i32, i32* %3, i64 2
  %13 = getelementptr inbounds i32, i32* %3, i64 3
  %14 = sext i32 %5 to i64
  br label %22

15:                                               ; preds = %22
  br i1 %8, label %16, label %175

16:                                               ; preds = %15
  %17 = getelementptr inbounds i32, i32* %3, i64 5
  %18 = getelementptr inbounds i32, i32* %3, i64 4
  %19 = getelementptr inbounds i32, i32* %3, i64 6
  %20 = getelementptr inbounds i32, i32* %3, i64 7
  %21 = sext i32 %5 to i64
  br label %56

22:                                               ; preds = %9, %22
  %23 = phi i64 [ 0, %9 ], [ %54, %22 ]
  %24 = phi i32 [ %10, %9 ], [ %53, %22 ]
  %25 = load i32, i32* %11, align 4
  %26 = add i32 %24, 8192
  %27 = sub i32 %26, %25
  %28 = ashr i32 %27, 14
  %29 = load i32, i32* %3, align 4
  %30 = mul nsw i32 %28, 3050
  %31 = add nsw i32 %30, %29
  store i32 %24, i32* %3, align 4
  %32 = load i32, i32* %12, align 4
  %33 = sub nsw i32 %31, %32
  %34 = ashr i32 %33, 14
  %35 = lshr i32 %33, 31
  %36 = add nsw i32 %34, %35
  %37 = mul nsw i32 %36, 9368
  %38 = add nsw i32 %37, %25
  store i32 %31, i32* %11, align 4
  %39 = load i32, i32* %13, align 4
  %40 = sub nsw i32 %38, %39
  %41 = ashr i32 %40, 14
  %42 = lshr i32 %40, 31
  %43 = add nsw i32 %41, %42
  %44 = mul nsw i32 %43, 15063
  %45 = add nsw i32 %44, %32
  store i32 %45, i32* %13, align 4
  store i32 %38, i32* %12, align 4
  %46 = ashr i32 %45, 1
  %47 = shl nuw i64 %23, 1
  %48 = getelementptr inbounds i32, i32* %2, i64 %47
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds i16, i16* %6, i64 %47
  %50 = load i16, i16* %49, align 2
  %51 = sext i16 %50 to i32
  %52 = shl nsw i32 %51, 15
  %53 = or i32 %52, 16384
  %54 = add nuw nsw i64 %23, 1
  %55 = icmp slt i64 %54, %14
  br i1 %55, label %22, label %15

56:                                               ; preds = %16, %56
  %57 = phi i64 [ 0, %16 ], [ %90, %56 ]
  %58 = shl nuw i64 %57, 1
  %59 = getelementptr inbounds i16, i16* %0, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = shl nsw i32 %61, 15
  %63 = or i32 %62, 16384
  %64 = load i32, i32* %17, align 4
  %65 = sub i32 8192, %64
  %66 = add i32 %65, %63
  %67 = ashr i32 %66, 14
  %68 = load i32, i32* %18, align 4
  %69 = mul nsw i32 %67, 821
  %70 = add nsw i32 %69, %68
  store i32 %63, i32* %18, align 4
  %71 = load i32, i32* %19, align 4
  %72 = sub nsw i32 %70, %71
  %73 = ashr i32 %72, 14
  %74 = lshr i32 %72, 31
  %75 = add nsw i32 %73, %74
  %76 = mul nsw i32 %75, 6110
  %77 = add nsw i32 %76, %64
  store i32 %70, i32* %17, align 4
  %78 = load i32, i32* %20, align 4
  %79 = sub nsw i32 %77, %78
  %80 = ashr i32 %79, 14
  %81 = lshr i32 %79, 31
  %82 = add nsw i32 %80, %81
  %83 = mul nsw i32 %82, 12382
  %84 = add nsw i32 %83, %71
  store i32 %84, i32* %20, align 4
  store i32 %77, i32* %19, align 4
  %85 = getelementptr inbounds i32, i32* %2, i64 %58
  %86 = load i32, i32* %85, align 4
  %87 = ashr i32 %84, 1
  %88 = add nsw i32 %87, %86
  %89 = ashr i32 %88, 15
  store i32 %89, i32* %85, align 4
  %90 = add nuw nsw i64 %57, 1
  %91 = icmp slt i64 %90, %21
  br i1 %91, label %56, label %92

92:                                               ; preds = %56
  %93 = getelementptr inbounds i32, i32* %2, i64 1
  br i1 %8, label %94, label %175

94:                                               ; preds = %92
  %95 = getelementptr inbounds i32, i32* %3, i64 9
  %96 = getelementptr inbounds i32, i32* %3, i64 8
  %97 = getelementptr inbounds i32, i32* %3, i64 10
  %98 = getelementptr inbounds i32, i32* %3, i64 11
  %99 = sext i32 %5 to i64
  br label %106

100:                                              ; preds = %106
  br i1 %8, label %101, label %175

101:                                              ; preds = %100
  %102 = getelementptr inbounds i32, i32* %3, i64 13
  %103 = getelementptr inbounds i32, i32* %3, i64 14
  %104 = getelementptr inbounds i32, i32* %3, i64 15
  %105 = sext i32 %5 to i64
  br label %139

106:                                              ; preds = %94, %106
  %107 = phi i64 [ 0, %94 ], [ %137, %106 ]
  %108 = shl nuw i64 %107, 1
  %109 = getelementptr inbounds i16, i16* %0, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = sext i16 %110 to i32
  %112 = shl nsw i32 %111, 15
  %113 = or i32 %112, 16384
  %114 = load i32, i32* %95, align 4
  %115 = sub i32 8192, %114
  %116 = add i32 %115, %113
  %117 = ashr i32 %116, 14
  %118 = load i32, i32* %96, align 4
  %119 = mul nsw i32 %117, 3050
  %120 = add nsw i32 %119, %118
  store i32 %113, i32* %96, align 4
  %121 = load i32, i32* %97, align 4
  %122 = sub nsw i32 %120, %121
  %123 = ashr i32 %122, 14
  %124 = lshr i32 %122, 31
  %125 = add nsw i32 %123, %124
  %126 = mul nsw i32 %125, 9368
  %127 = add nsw i32 %126, %114
  store i32 %120, i32* %95, align 4
  %128 = load i32, i32* %98, align 4
  %129 = sub nsw i32 %127, %128
  %130 = ashr i32 %129, 14
  %131 = lshr i32 %129, 31
  %132 = add nsw i32 %130, %131
  %133 = mul nsw i32 %132, 15063
  %134 = add nsw i32 %133, %121
  store i32 %134, i32* %98, align 4
  store i32 %127, i32* %97, align 4
  %135 = ashr i32 %134, 1
  %136 = getelementptr inbounds i32, i32* %93, i64 %108
  store i32 %135, i32* %136, align 4
  %137 = add nuw nsw i64 %107, 1
  %138 = icmp slt i64 %137, %99
  br i1 %138, label %106, label %100

139:                                              ; preds = %101, %139
  %140 = phi i64 [ 0, %101 ], [ %173, %139 ]
  %141 = shl nuw i64 %140, 1
  %142 = getelementptr inbounds i16, i16* %6, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = sext i16 %143 to i32
  %145 = shl nsw i32 %144, 15
  %146 = or i32 %145, 16384
  %147 = load i32, i32* %102, align 4
  %148 = sub i32 8192, %147
  %149 = add i32 %148, %146
  %150 = ashr i32 %149, 14
  %151 = load i32, i32* %7, align 4
  %152 = mul nsw i32 %150, 821
  %153 = add nsw i32 %152, %151
  store i32 %146, i32* %7, align 4
  %154 = load i32, i32* %103, align 4
  %155 = sub nsw i32 %153, %154
  %156 = ashr i32 %155, 14
  %157 = lshr i32 %155, 31
  %158 = add nsw i32 %156, %157
  %159 = mul nsw i32 %158, 6110
  %160 = add nsw i32 %159, %147
  store i32 %153, i32* %102, align 4
  %161 = load i32, i32* %104, align 4
  %162 = sub nsw i32 %160, %161
  %163 = ashr i32 %162, 14
  %164 = lshr i32 %162, 31
  %165 = add nsw i32 %163, %164
  %166 = mul nsw i32 %165, 12382
  %167 = add nsw i32 %166, %154
  store i32 %167, i32* %104, align 4
  store i32 %160, i32* %103, align 4
  %168 = getelementptr inbounds i32, i32* %93, i64 %141
  %169 = load i32, i32* %168, align 4
  %170 = ashr i32 %167, 1
  %171 = add nsw i32 %170, %169
  %172 = ashr i32 %171, 15
  store i32 %172, i32* %168, align 4
  %173 = add nuw nsw i64 %140, 1
  %174 = icmp slt i64 %173, %105
  br i1 %174, label %139, label %175

175:                                              ; preds = %139, %4, %15, %92, %100
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_LPBy2IntToInt(i32* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = ashr i32 %1, 1
  %6 = getelementptr inbounds i32, i32* %0, i64 1
  %7 = getelementptr inbounds i32, i32* %3, i64 12
  %8 = icmp sgt i32 %1, 1
  br i1 %8, label %9, label %162

9:                                                ; preds = %4
  %10 = getelementptr inbounds i32, i32* %3, i64 1
  %11 = getelementptr inbounds i32, i32* %3, i64 2
  %12 = getelementptr inbounds i32, i32* %3, i64 3
  %13 = sext i32 %5 to i64
  br label %21

14:                                               ; preds = %21
  br i1 %8, label %15, label %162

15:                                               ; preds = %14
  %16 = getelementptr inbounds i32, i32* %3, i64 5
  %17 = getelementptr inbounds i32, i32* %3, i64 4
  %18 = getelementptr inbounds i32, i32* %3, i64 6
  %19 = getelementptr inbounds i32, i32* %3, i64 7
  %20 = sext i32 %5 to i64
  br label %52

21:                                               ; preds = %9, %21
  %22 = phi i64 [ 0, %9 ], [ %50, %21 ]
  %23 = phi i32* [ %7, %9 ], [ %49, %21 ]
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %10, align 4
  %26 = add i32 %24, 8192
  %27 = sub i32 %26, %25
  %28 = ashr i32 %27, 14
  %29 = load i32, i32* %3, align 4
  %30 = mul nsw i32 %28, 3050
  %31 = add nsw i32 %30, %29
  store i32 %24, i32* %3, align 4
  %32 = load i32, i32* %11, align 4
  %33 = sub nsw i32 %31, %32
  %34 = ashr i32 %33, 14
  %35 = lshr i32 %33, 31
  %36 = add nsw i32 %34, %35
  %37 = mul nsw i32 %36, 9368
  %38 = add nsw i32 %37, %25
  store i32 %31, i32* %10, align 4
  %39 = load i32, i32* %12, align 4
  %40 = sub nsw i32 %38, %39
  %41 = ashr i32 %40, 14
  %42 = lshr i32 %40, 31
  %43 = add nsw i32 %41, %42
  %44 = mul nsw i32 %43, 15063
  %45 = add nsw i32 %44, %32
  store i32 %45, i32* %12, align 4
  store i32 %38, i32* %11, align 4
  %46 = ashr i32 %45, 1
  %47 = shl nuw i64 %22, 1
  %48 = getelementptr inbounds i32, i32* %2, i64 %47
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds i32, i32* %6, i64 %47
  %50 = add nuw nsw i64 %22, 1
  %51 = icmp slt i64 %50, %13
  br i1 %51, label %21, label %14

52:                                               ; preds = %15, %52
  %53 = phi i64 [ 0, %15 ], [ %83, %52 ]
  %54 = shl nuw i64 %53, 1
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %16, align 4
  %58 = add i32 %56, 8192
  %59 = sub i32 %58, %57
  %60 = ashr i32 %59, 14
  %61 = load i32, i32* %17, align 4
  %62 = mul nsw i32 %60, 821
  %63 = add nsw i32 %62, %61
  store i32 %56, i32* %17, align 4
  %64 = load i32, i32* %18, align 4
  %65 = sub nsw i32 %63, %64
  %66 = ashr i32 %65, 14
  %67 = lshr i32 %65, 31
  %68 = add nsw i32 %66, %67
  %69 = mul nsw i32 %68, 6110
  %70 = add nsw i32 %69, %57
  store i32 %63, i32* %16, align 4
  %71 = load i32, i32* %19, align 4
  %72 = sub nsw i32 %70, %71
  %73 = ashr i32 %72, 14
  %74 = lshr i32 %72, 31
  %75 = add nsw i32 %73, %74
  %76 = mul nsw i32 %75, 12382
  %77 = add nsw i32 %76, %64
  store i32 %77, i32* %19, align 4
  store i32 %70, i32* %18, align 4
  %78 = getelementptr inbounds i32, i32* %2, i64 %54
  %79 = load i32, i32* %78, align 4
  %80 = ashr i32 %77, 1
  %81 = add nsw i32 %80, %79
  %82 = ashr i32 %81, 15
  store i32 %82, i32* %78, align 4
  %83 = add nuw nsw i64 %53, 1
  %84 = icmp slt i64 %83, %20
  br i1 %84, label %52, label %85

85:                                               ; preds = %52
  %86 = getelementptr inbounds i32, i32* %2, i64 1
  br i1 %8, label %87, label %162

87:                                               ; preds = %85
  %88 = getelementptr inbounds i32, i32* %3, i64 9
  %89 = getelementptr inbounds i32, i32* %3, i64 8
  %90 = getelementptr inbounds i32, i32* %3, i64 10
  %91 = getelementptr inbounds i32, i32* %3, i64 11
  %92 = sext i32 %5 to i64
  br label %99

93:                                               ; preds = %99
  br i1 %8, label %94, label %162

94:                                               ; preds = %93
  %95 = getelementptr inbounds i32, i32* %3, i64 13
  %96 = getelementptr inbounds i32, i32* %3, i64 14
  %97 = getelementptr inbounds i32, i32* %3, i64 15
  %98 = sext i32 %5 to i64
  br label %129

99:                                               ; preds = %87, %99
  %100 = phi i64 [ 0, %87 ], [ %127, %99 ]
  %101 = shl nuw i64 %100, 1
  %102 = getelementptr inbounds i32, i32* %0, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* %88, align 4
  %105 = add i32 %103, 8192
  %106 = sub i32 %105, %104
  %107 = ashr i32 %106, 14
  %108 = load i32, i32* %89, align 4
  %109 = mul nsw i32 %107, 3050
  %110 = add nsw i32 %109, %108
  store i32 %103, i32* %89, align 4
  %111 = load i32, i32* %90, align 4
  %112 = sub nsw i32 %110, %111
  %113 = ashr i32 %112, 14
  %114 = lshr i32 %112, 31
  %115 = add nsw i32 %113, %114
  %116 = mul nsw i32 %115, 9368
  %117 = add nsw i32 %116, %104
  store i32 %110, i32* %88, align 4
  %118 = load i32, i32* %91, align 4
  %119 = sub nsw i32 %117, %118
  %120 = ashr i32 %119, 14
  %121 = lshr i32 %119, 31
  %122 = add nsw i32 %120, %121
  %123 = mul nsw i32 %122, 15063
  %124 = add nsw i32 %123, %111
  store i32 %124, i32* %91, align 4
  store i32 %117, i32* %90, align 4
  %125 = ashr i32 %124, 1
  %126 = getelementptr inbounds i32, i32* %86, i64 %101
  store i32 %125, i32* %126, align 4
  %127 = add nuw nsw i64 %100, 1
  %128 = icmp slt i64 %127, %92
  br i1 %128, label %99, label %93

129:                                              ; preds = %94, %129
  %130 = phi i64 [ 0, %94 ], [ %160, %129 ]
  %131 = shl nuw i64 %130, 1
  %132 = getelementptr inbounds i32, i32* %6, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %95, align 4
  %135 = add i32 %133, 8192
  %136 = sub i32 %135, %134
  %137 = ashr i32 %136, 14
  %138 = load i32, i32* %7, align 4
  %139 = mul nsw i32 %137, 821
  %140 = add nsw i32 %139, %138
  store i32 %133, i32* %7, align 4
  %141 = load i32, i32* %96, align 4
  %142 = sub nsw i32 %140, %141
  %143 = ashr i32 %142, 14
  %144 = lshr i32 %142, 31
  %145 = add nsw i32 %143, %144
  %146 = mul nsw i32 %145, 6110
  %147 = add nsw i32 %146, %134
  store i32 %140, i32* %95, align 4
  %148 = load i32, i32* %97, align 4
  %149 = sub nsw i32 %147, %148
  %150 = ashr i32 %149, 14
  %151 = lshr i32 %149, 31
  %152 = add nsw i32 %150, %151
  %153 = mul nsw i32 %152, 12382
  %154 = add nsw i32 %153, %141
  store i32 %154, i32* %97, align 4
  store i32 %147, i32* %96, align 4
  %155 = getelementptr inbounds i32, i32* %86, i64 %131
  %156 = load i32, i32* %155, align 4
  %157 = ashr i32 %154, 1
  %158 = add nsw i32 %157, %156
  %159 = ashr i32 %158, 15
  store i32 %159, i32* %155, align 4
  %160 = add nuw nsw i64 %130, 1
  %161 = icmp slt i64 %160, %98
  br i1 %161, label %129, label %162

162:                                              ; preds = %129, %4, %14, %85, %93
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
