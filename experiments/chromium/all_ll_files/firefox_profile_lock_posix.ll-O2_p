; ModuleID = '../../chrome/browser/importer/firefox_profile_lock_posix.cc'
source_filename = "../../chrome/browser/importer/firefox_profile_lock_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.FirefoxProfileLock = type { %"class.base::FilePath", i32, %"class.base::FilePath" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.flock = type { i16, i16, i64, i64, i32 }

@_ZN18FirefoxProfileLock16kOldLockFileNameE = external constant [0 x i8], align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18FirefoxProfileLock4InitEv(%class.FirefoxProfileLock* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 1
  store i32 -1, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18FirefoxProfileLock4LockEv(%class.FirefoxProfileLock*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN18FirefoxProfileLock13LockWithFcntlEv(%class.FirefoxProfileLock* %0)
  br i1 %8, label %9, label %31

9:                                                ; preds = %7
  %10 = load i32, i32* %4, align 8
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %31, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 0
  call void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* nonnull sret %3, %"class.base::FilePath"* %15) #9
  %16 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18FirefoxProfileLock16kOldLockFileNameE, i64 0, i64 0)) #9
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %2, %"class.base::FilePath"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18FirefoxProfileLock16kOldLockFileNameE, i64 0, i64 0), i64 %16) #9
  %17 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 2
  %18 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* %17, %"class.base::FilePath"* nonnull dereferenceable(24) %2) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  %19 = bitcast %"class.base::FilePath"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %28

26:                                               ; preds = %12
  %27 = bitcast %"class.base::FilePath"* %17 to i8*
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i8* [ %25, %23 ], [ %27, %26 ]
  %30 = call i32 (i8*, i32, ...) @open64(i8* %29, i32 192, i32 420) #9
  store i32 %30, i32* %4, align 8
  br label %31

31:                                               ; preds = %7, %9, %28, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN18FirefoxProfileLock11HasAcquiredEv(%class.FirefoxProfileLock* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18FirefoxProfileLock13LockWithFcntlEv(%class.FirefoxProfileLock* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.flock, align 8
  %3 = alloca %struct.flock, align 8
  %4 = bitcast %class.FirefoxProfileLock* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %class.FirefoxProfileLock* %0 to i8*
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  %15 = tail call i32 (i8*, i32, ...) @open64(i8* %14, i32 577, i32 438) #9
  %16 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 1
  store i32 %15, i32* %16, align 8
  %17 = icmp eq i32 %15, -1
  br i1 %17, label %42, label %18

18:                                               ; preds = %13
  %19 = bitcast %struct.flock* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = getelementptr inbounds %struct.flock, %struct.flock* %2, i64 0, i32 2
  %21 = getelementptr inbounds %struct.flock, %struct.flock* %2, i64 0, i32 0
  %22 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  store i16 1, i16* %21, align 8
  %23 = getelementptr inbounds %struct.flock, %struct.flock* %2, i64 0, i32 1
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds %struct.flock, %struct.flock* %2, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = bitcast %struct.flock* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %19, i64 32, i1 false)
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %15, i32 5, %struct.flock* nonnull %3) #9
  %27 = icmp eq i32 %26, -1
  %28 = load i32, i32* %16, align 8
  br i1 %27, label %29, label %31

29:                                               ; preds = %18
  %30 = call i32 @close(i32 %28) #9
  store i32 -1, i32* %16, align 8
  br label %40

31:                                               ; preds = %18
  %32 = call i32 (i32, i32, ...) @fcntl(i32 %28, i32 6, %struct.flock* nonnull %2) #9
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load i32, i32* %16, align 8
  %36 = call i32 @close(i32 %35) #9
  store i32 -1, i32* %16, align 8
  %37 = tail call i32* @__errno_location() #10
  %38 = load i32, i32* %37, align 4
  switch i32 %38, label %39 [
    i32 11, label %40
    i32 13, label %40
  ]

39:                                               ; preds = %34
  br label %40

40:                                               ; preds = %31, %34, %34, %39, %29
  %41 = phi i1 [ true, %29 ], [ true, %39 ], [ false, %34 ], [ false, %34 ], [ true, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  br label %42

42:                                               ; preds = %13, %40
  %43 = phi i1 [ %41, %40 ], [ true, %13 ]
  ret i1 %43
}

declare void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #4

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18FirefoxProfileLock6UnlockEv(%class.FirefoxProfileLock*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call i32 @close(i32 %3) #9
  store i32 -1, i32* %2, align 8
  %7 = getelementptr inbounds %class.FirefoxProfileLock, %class.FirefoxProfileLock* %0, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %7) #9
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

declare i32 @close(i32) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
