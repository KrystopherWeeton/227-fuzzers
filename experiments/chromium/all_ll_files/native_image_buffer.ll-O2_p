; ModuleID = '../../gpu/command_buffer/service/native_image_buffer.cc'
source_filename = "../../gpu/command_buffer/service/native_image_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::EGLApi" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::gles2::NativeImageBuffer" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL" = type { %"class.gpu::gles2::NativeImageBuffer.base", i8*, i8*, %"class.base::Lock", %"class.std::__1::list", %"class.gl::GLImage"* }
%"class.gpu::gles2::NativeImageBuffer.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL::ClientInfo" }
%"struct.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL::ClientInfo" = type <{ %"class.gl::GLImage"*, i8, [7 x i8] }>
%"class.gl::GLApi" = type { i32 (...)** }
%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub" = type { %"class.gpu::gles2::NativeImageBuffer.base", [4 x i8] }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3gpu5gles217NativeImageBufferD2Ev = comdat any

@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@_ZZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL6CreateEjE15egl_attrib_list = internal constant [5 x i32] [i32 12476, i32 0, i32 12498, i32 1, i32 12344], align 16
@.str = private unnamed_addr constant [56 x i8] c"../../gpu/command_buffer/service/native_image_buffer.cc\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"eglCreateImageKHR for cross-thread sharing failed: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL9AddClientEPN2gl7GLImageE to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL12RemoveClientEPN2gl7GLImageE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL8IsClientEPN2gl7GLImageE to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, i32)* @_ZNK3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL13BindToTextureEj to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*)* @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*)* @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLD0Ev to i8*)] }, align 8
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN3gpu5gles212_GLOBAL__N_121NativeImageBufferStubE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub9AddClientEPN2gl7GLImageE to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub12RemoveClientEPN2gl7GLImageE to i8*), i8* bitcast (i1 (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*, %"class.gl::GLImage"*)* @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub8IsClientEPN2gl7GLImageE to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*, i32)* @_ZNK3gpu5gles212_GLOBAL__N_121NativeImageBufferStub13BindToTextureEj to i8*), i8* bitcast (void (%"class.gpu::gles2::NativeImageBuffer"*)* @_ZN3gpu5gles217NativeImageBufferD2Ev to i8*), i8* bitcast (void (%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*)* @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStubD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::gles2::NativeImageBuffer"* @_ZN3gpu5gles217NativeImageBuffer6CreateEj(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call i32 @_ZN2gl19GetGLImplementationEv() #7
  switch i32 %3, label %72 [
    i32 5, label %4
    i32 9, label %4
    i32 6, label %65
    i32 7, label %65
  ]

4:                                                ; preds = %1, %1
  %5 = tail call i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() #7
  %6 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %7 = bitcast %"class.gl::EGLApi"* %6 to i8* (%"class.gl::EGLApi"*)***
  %8 = load i8* (%"class.gl::EGLApi"*)**, i8* (%"class.gl::EGLApi"*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %8, i64 30
  %10 = load i8* (%"class.gl::EGLApi"*)*, i8* (%"class.gl::EGLApi"*)** %9, align 8
  %11 = tail call i8* %10(%"class.gl::EGLApi"* %6) #7
  %12 = zext i32 %0 to i64
  %13 = inttoptr i64 %12 to i8*
  %14 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %15 = bitcast %"class.gl::EGLApi"* %14 to i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)***
  %16 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)**, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)** %16, i64 9
  %18 = load i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)*, i8* (%"class.gl::EGLApi"*, i8*, i8*, i32, i8*, i32*)** %17, align 8
  %19 = tail call i8* %18(%"class.gl::EGLApi"* %14, i8* %5, i8* %11, i32 12465, i8* %13, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @_ZZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL6CreateEjE15egl_attrib_list, i64 0, i64 0)) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %47

21:                                               ; preds = %4
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #7
  br i1 %22, label %23, label %72

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #7
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 78, i32 2) #7
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 53) #7
  %28 = bitcast %"class.std::__1::basic_ostream"* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_ostream"* %27 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %32
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, -75
  %39 = or i32 %38, 8
  store i32 %39, i32* %36, align 8
  %40 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %41 = bitcast %"class.gl::EGLApi"* %40 to i32 (%"class.gl::EGLApi"*)***
  %42 = load i32 (%"class.gl::EGLApi"*)**, i32 (%"class.gl::EGLApi"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.gl::EGLApi"*)*, i32 (%"class.gl::EGLApi"*)** %42, i64 34
  %44 = load i32 (%"class.gl::EGLApi"*)*, i32 (%"class.gl::EGLApi"*)** %43, align 8
  %45 = call i32 %44(%"class.gl::EGLApi"* %40) #7
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %27, i32 %45) #7
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #7
  br label %72

47:                                               ; preds = %4
  %48 = tail call i8* @_Znwm(i64 104) #8
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  %51 = bitcast i8* %48 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* %5, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i8**
  store i8* %19, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 32
  %57 = bitcast i8* %56 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %57) #7
  %58 = getelementptr inbounds i8, i8* %48, i64 72
  %59 = bitcast i8* %58 to i8**
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %48, i64 80
  %61 = bitcast i8* %60 to i8**
  store i8* %58, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %48, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #7
  %63 = atomicrmw add i32* %50, i32 1 monotonic
  %64 = ptrtoint i8* %48 to i64
  br label %72

65:                                               ; preds = %1, %1
  %66 = tail call i8* @_Znwm(i64 16) #8
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 4
  %69 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_121NativeImageBufferStubE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = ptrtoint i8* %66 to i64
  %71 = atomicrmw add i32* %68, i32 1 monotonic
  br label %72

72:                                               ; preds = %21, %23, %47, %1, %65
  %73 = phi i64 [ %70, %65 ], [ 0, %1 ], [ %64, %47 ], [ 0, %21 ], [ 0, %23 ]
  %74 = inttoptr i64 %73 to %"class.gpu::gles2::NativeImageBuffer"*
  ret %"class.gpu::gles2::NativeImageBuffer"* %74
}

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL9AddClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gl::GLImage"* %1 to i64
  %4 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #7
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4
  %12 = tail call i8* @_Znwm(i64 32) #8, !noalias !4
  %13 = bitcast i8* %12 to %"struct.std::__1::__list_node_base"**
  %14 = getelementptr inbounds i8, i8* %12, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 24
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds i8, i8* %12, i64 8
  %19 = bitcast i8* %18 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %17, %"struct.std::__1::__list_node_base"** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  store %"struct.std::__1::__list_node_base"* %21, %"struct.std::__1::__list_node_base"** %13, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i8**
  store i8* %12, i8** %23, align 8
  %24 = bitcast %"class.std::__1::list"* %11 to i8**
  store i8* %12, i8** %24, align 8
  %25 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %25, align 8
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL12RemoveClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 5
  %11 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %10, align 8
  %12 = icmp eq %"class.gl::GLImage"* %11, %1
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store %"class.gl::GLImage"* null, %"class.gl::GLImage"** %10, align 8
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0
  br label %19

19:                                               ; preds = %23, %14
  %20 = phi i64 [ %17, %14 ], [ %30, %23 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__list_node_base"*
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %18, %21
  br i1 %22, label %45, label %23

23:                                               ; preds = %19
  %24 = inttoptr i64 %20 to %"struct.std::__1::__list_node"*
  %25 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %24, i64 0, i32 1, i32 0
  %26 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %25, align 8
  %27 = icmp eq %"class.gl::GLImage"* %26, %1
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %27, label %31, label %19

31:                                               ; preds = %23
  %32 = inttoptr i64 %20 to %"struct.std::__1::__list_node_base"*
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  store i64 %30, i64* %36, align 8
  %37 = inttoptr i64 %20 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64**
  %40 = load i64*, i64** %39, align 8
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = inttoptr i64 %20 to i8*
  tail call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %19, %31
  %46 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL8IsClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*, %"class.gl::GLImage"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #7
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = bitcast %"struct.std::__1::__list_node_base"** %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = inttoptr i64 %13 to %"struct.std::__1::__list_node_base"*
  %15 = icmp eq %"struct.std::__1::__list_node_base"* %11, %14
  br i1 %15, label %29, label %22

16:                                               ; preds = %22
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %23, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %19 to %"struct.std::__1::__list_node_base"*
  %21 = icmp eq %"struct.std::__1::__list_node_base"* %11, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %9, %16
  %23 = phi %"struct.std::__1::__list_node_base"* [ %20, %16 ], [ %14, %9 ]
  %24 = phi i64 [ %19, %16 ], [ %13, %9 ]
  %25 = inttoptr i64 %24 to %"struct.std::__1::__list_node"*
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %25, i64 0, i32 1, i32 0
  %27 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %26, align 8
  %28 = icmp eq %"class.gl::GLImage"* %27, %1
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %22, %9
  %30 = phi i1 [ false, %9 ], [ true, %22 ], [ false, %16 ]
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #7
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL13BindToTextureEj(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %4 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %3, i64 0, i32 0
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #7
  %6 = bitcast i8* %5 to %"class.gl::GLApi"**
  %7 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::GLApi"* %7 to void (%"class.gl::GLApi"*, i32, i8*)***
  %11 = load void (%"class.gl::GLApi"*, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i8*)** %11, i64 124
  %13 = load void (%"class.gl::GLApi"*, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i8*)** %12, align 8
  tail call void %13(%"class.gl::GLApi"* %7, i32 %1, i8* %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLD2Ev(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 19
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %9, i8* nonnull %4) #7
  br label %15

15:                                               ; preds = %1, %6
  %16 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %16, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %16, i64 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base"* %22 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  store i64 0, i64* %17, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %22, %23
  br i1 %37, label %44, label %38

38:                                               ; preds = %20, %38
  %39 = phi %"struct.std::__1::__list_node_base"* [ %41, %38 ], [ %22, %20 ]
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #8
  %43 = icmp eq %"struct.std::__1::__list_node_base"* %41, %23
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %15, %20
  %45 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %45) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLD0Ev(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %11, i64 19
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %9, i8* nonnull %4) #7
  br label %15

15:                                               ; preds = %6, %1
  %16 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %16, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %16, i64 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base"* %22 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  store i64 0, i64* %17, align 8
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %22, %23
  br i1 %37, label %44, label %38

38:                                               ; preds = %20, %38
  %39 = phi %"struct.std::__1::__list_node_base"* [ %41, %38 ], [ %22, %20 ]
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #8
  %43 = icmp eq %"struct.std::__1::__list_node_base"* %41, %23
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %15, %20
  %45 = getelementptr inbounds %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL", %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %45) #7
  %46 = bitcast %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %46) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu5gles217NativeImageBufferD2Ev(%"class.gpu::gles2::NativeImageBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub9AddClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"* nocapture, %"class.gl::GLImage"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub12RemoveClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"* nocapture, %"class.gl::GLImage"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStub8IsClientEPN2gl7GLImageE(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"* nocapture readnone, %"class.gl::GLImage"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK3gpu5gles212_GLOBAL__N_121NativeImageBufferStub13BindToTextureEj(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"* nocapture, i32) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu5gles212_GLOBAL__N_121NativeImageBufferStubD0Ev(%"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gpu::gles2::(anonymous namespace)::NativeImageBufferStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__14listIN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL10ClientInfoENS_9allocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__14listIN3gpu5gles212_GLOBAL__N_120NativeImageBufferEGL10ClientInfoENS_9allocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE"}
