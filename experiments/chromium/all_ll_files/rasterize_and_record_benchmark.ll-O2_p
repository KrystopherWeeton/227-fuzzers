; ModuleID = '../../cc/benchmarks/rasterize_and_record_benchmark.cc'
source_filename = "../../cc/benchmarks/rasterize_and_record_benchmark.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::RasterizeAndRecordBenchmark" = type { %"class.cc::MicroBenchmark", %"struct.cc::RasterizeAndRecordBenchmark::RecordResults", i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", i8, %"class.cc::LayerTreeHost"*, %"class.base::WeakPtrFactory.493" }
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback", i8, i8, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.cc::RasterizeAndRecordBenchmark::RecordResults" = type { i32, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::Value"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"union.absl::variant_internal::DestructibleUnionImpl.6" }
%"union.absl::variant_internal::DestructibleUnionImpl.6" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr", %class.scoped_refptr.54, %"class.std::__1::unique_ptr.55", i32, %"class.std::__1::unique_ptr.61", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", i32, %"class.std::__1::unique_ptr.79", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.116, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.194", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.338, %"class.base::flat_map.339", %"class.base::internal::flat_tree.349", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.380", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.406", %"class.std::__1::unordered_map.414", %"class.std::__1::vector.438", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.447", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.468", %"class.std::__1::vector.474", %"class.base::flat_map.482", %"class.base::WeakPtrFactory.492" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.37", %class.scoped_refptr.45 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::unique_ptr.39" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::unique_ptr.39"* }
%class.scoped_refptr.45 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46" }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.48", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%class.scoped_refptr.54 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.45, %class.scoped_refptr.45 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.85", %"class.std::__1::set" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::unique_ptr.87"*, %"class.std::__1::unique_ptr.87"*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::unique_ptr.87"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.104, %class.scoped_refptr.105, %class.scoped_refptr.45, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.106", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.104 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.105 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.116 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.134", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.169" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.117", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %class.scoped_refptr.116*, %class.scoped_refptr.116*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.scoped_refptr.116* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.124" }
%"class.base::flat_map.124" = type { %"class.base::internal::flat_tree.125" }
%"class.base::internal::flat_tree.125" = type { %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"struct.std::__1::pair.128"*, %"struct.std::__1::pair.128"*, %"class.std::__1::__compressed_pair.129" }
%"struct.std::__1::pair.128" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::pair.128"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.153", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.158" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.594", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.494, %"class.absl::optional.589", [4 x i8] }>
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%class.scoped_refptr.494 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.495", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.141", %"class.std::__1::vector.575", %"class.std::__1::vector.582", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.495" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.496", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.503", %"class.std::__1::vector.513", %"class.base::flat_map.527", i8, i8, [6 x i8], %"class.cc::RTree.537", %"class.std::__1::vector.567" }
%"class.base::flat_map.503" = type { %"class.base::internal::flat_tree.504" }
%"class.base::internal::flat_tree.504" = type { %"class.std::__1::vector.505" }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"struct.std::__1::pair.507"*, %"struct.std::__1::pair.507"*, %"class.std::__1::__compressed_pair.508" }
%"struct.std::__1::pair.507" = type opaque
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::pair.507"* }
%"class.std::__1::vector.513" = type { %"class.std::__1::__vector_base.514" }
%"class.std::__1::__vector_base.514" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.522" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.515", i32, i32 }
%"class.std::__1::vector.515" = type { %"class.std::__1::__vector_base.516" }
%"class.std::__1::__vector_base.516" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.517" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.527" = type { %"class.base::internal::flat_tree.528" }
%"class.base::internal::flat_tree.528" = type { %"class.std::__1::vector.529" }
%"class.std::__1::vector.529" = type { %"class.std::__1::__vector_base.530" }
%"class.std::__1::__vector_base.530" = type { %"struct.std::__1::pair.531"*, %"struct.std::__1::pair.531"*, %"class.std::__1::__compressed_pair.532" }
%"struct.std::__1::pair.531" = type { i32, i32 }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::pair.531"* }
%"class.cc::RTree.537" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.559", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.549", %"class.absl::optional.554", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.538, %class.sk_sp.540, %"class.gfx::Rect", i32, %class.sk_sp.545, %class.sk_sp.546, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.538, %class.scoped_refptr.547 }
%class.sk_sp.540 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.545 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.546 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.538 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.539, i32, i32 }
%class.sk_sp.539 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.49" }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.547 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.548", [4 x i8] }>
%"class.base::RefCountedThreadSafe.548" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.549" = type { %"class.absl::optional_internal::optional_data.550" }
%"class.absl::optional_internal::optional_data.550" = type { %"class.absl::optional_internal::optional_data_base.551" }
%"class.absl::optional_internal::optional_data_base.551" = type { %"class.absl::optional_internal::optional_data_dtor_base.552" }
%"class.absl::optional_internal::optional_data_dtor_base.552" = type { i8, %union.anon.553 }
%union.anon.553 = type { i64 }
%"class.absl::optional.554" = type { %"class.absl::optional_internal::optional_data.555" }
%"class.absl::optional_internal::optional_data.555" = type { %"class.absl::optional_internal::optional_data_base.556" }
%"class.absl::optional_internal::optional_data_base.556" = type { %"class.absl::optional_internal::optional_data_dtor_base.557" }
%"class.absl::optional_internal::optional_data_dtor_base.557" = type { i8, %union.anon.558 }
%union.anon.558 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.559" = type { %"class.std::__1::__vector_base.560" }
%"class.std::__1::__vector_base.560" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.567" = type { %"class.std::__1::__vector_base.568" }
%"class.std::__1::__vector_base.568" = type { %"struct.std::__1::pair.569"*, %"struct.std::__1::pair.569"*, %"class.std::__1::__compressed_pair.570" }
%"struct.std::__1::pair.569" = type opaque
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::pair.569"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.541", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { i8* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { i64*, i64*, %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { i64* }
%"class.std::__1::vector.582" = type { %"class.std::__1::__vector_base.583" }
%"class.std::__1::__vector_base.583" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.584" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.absl::optional.589" = type { %"class.absl::optional_internal::optional_data.590" }
%"class.absl::optional_internal::optional_data.590" = type { %"class.absl::optional_internal::optional_data_base.591" }
%"class.absl::optional_internal::optional_data_base.591" = type { %"class.absl::optional_internal::optional_data_dtor_base.592" }
%"class.absl::optional_internal::optional_data_dtor_base.592" = type { i8, %union.anon.593 }
%union.anon.593 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type { i32 (...)**, %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i8, i32, i32, %class.scoped_refptr.494, float, %"class.cc::InvalidationRegion" }
%"class.cc::InvalidationRegion" = type { %"class.cc::Region", %"class.std::__1::vector.141" }
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.137" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.148" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.141", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.139, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.139 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.140 }
%union.anon.140 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.std::__1::unique_ptr.160"*, %"class.std::__1::unique_ptr.160"*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::unique_ptr.160" = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::unique_ptr.160"* }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.172", %"class.std::__1::vector.172", %"class.std::__1::vector.179" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { i8**, i8**, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { i8** }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.181" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.189" }
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.200", %"class.base::flat_map.200", %"class.base::flat_map.200", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.200" = type { %"class.base::internal::flat_tree.201" }
%"class.base::internal::flat_tree.201" = type { %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.std::__1::pair.204"*, %"struct.std::__1::pair.204"*, %"class.std::__1::__compressed_pair.205" }
%"struct.std::__1::pair.204" = type opaque
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::pair.204"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.217", %"class.std::__1::vector.224", %"class.std::__1::vector.231" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.210", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.212" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { i32*, i32*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { i32* }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.226" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.233" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.238", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.273" }
%"class.cc::PropertyTree.238" = type { i32 (...)**, %"class.std::__1::vector.239", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.249" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.153", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.241" }
%"class.base::internal::flat_tree.241" = type { %"class.std::__1::vector.242" }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { i32*, i32*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { i32* }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.254", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256", %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { float }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"class.std::__1::unique_ptr.275"*, %"class.std::__1::unique_ptr.275"*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::unique_ptr.275"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.286" }
%"class.cc::PropertyTree.286" = type { i32 (...)**, %"class.std::__1::vector.287", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.289" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.294", i32, %"class.base::flat_map.302", %"class.base::flat_map.312", %"class.base::WeakPtr.322" }
%"class.cc::PropertyTree.294" = type { i32 (...)**, %"class.std::__1::vector.295", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.297" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.302" = type { %"class.base::internal::flat_tree.303" }
%"class.base::internal::flat_tree.303" = type { %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.307" }
%"struct.std::__1::pair.306" = type opaque
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::pair.306"* }
%"class.base::flat_map.312" = type { %"class.base::internal::flat_tree.313" }
%"class.base::internal::flat_tree.313" = type { %"class.std::__1::vector.314" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"*, %"class.std::__1::__compressed_pair.317" }
%"struct.std::__1::pair.316" = type opaque
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::pair.316"* }
%"class.base::WeakPtr.322" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.323", %"class.std::__1::vector.330" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.325" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.std::__1::vector.332"*, %"class.std::__1::vector.332"*, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::vector.332" = type opaque
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::vector.332"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.338 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.339" = type { %"class.base::internal::flat_tree.340" }
%"class.base::internal::flat_tree.340" = type { %"class.std::__1::vector.341" }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"struct.std::__1::pair.343"*, %"struct.std::__1::pair.343"*, %"class.std::__1::__compressed_pair.344" }
%"struct.std::__1::pair.343" = type opaque
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::pair.343"* }
%"class.base::internal::flat_tree.349" = type { %"class.std::__1::vector.350" }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.357" }
%"class.std::__1::__hash_table.357" = type <{ %"class.std::__1::unique_ptr.358", %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.376", [4 x i8] }>
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360", %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.std::__1::__hash_node_base.361"** }
%"struct.std::__1::__hash_node_base.361" = type { %"struct.std::__1::__hash_node_base.361"* }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::__bucket_list_deallocator.363" }
%"class.std::__1::__bucket_list_deallocator.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base.361" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"class.std::__1::unordered_map.380" = type { %"class.std::__1::__hash_table.381" }
%"class.std::__1::__hash_table.381" = type <{ %"class.std::__1::unique_ptr.382", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384", %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.385"** }
%"struct.std::__1::__hash_node_base.385" = type { %"struct.std::__1::__hash_node_base.385"* }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.std::__1::__bucket_list_deallocator.387" }
%"class.std::__1::__bucket_list_deallocator.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base.385" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"struct.std::__1::pair.408"*, %"struct.std::__1::pair.408"*, %"class.std::__1::__compressed_pair.409" }
%"struct.std::__1::pair.408" = type opaque
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::pair.408"* }
%"class.std::__1::unordered_map.414" = type { %"class.std::__1::__hash_table.415" }
%"class.std::__1::__hash_table.415" = type <{ %"class.std::__1::unique_ptr.416", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.434", [4 x i8] }>
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418", %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::__hash_node_base.419"** }
%"struct.std::__1::__hash_node_base.419" = type { %"struct.std::__1::__hash_node_base.419"* }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::__bucket_list_deallocator.421" }
%"class.std::__1::__bucket_list_deallocator.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::__hash_node_base.419" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"class.base::OnceCallback.440"*, %"class.base::OnceCallback.440"*, %"class.std::__1::__compressed_pair.441" }
%"class.base::OnceCallback.440" = type opaque
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.base::OnceCallback.440"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.446" }
%"class.base::OnceCallback.446" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.453", %"class.std::__1::vector.460" }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.455" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { %"class.std::__1::unique_ptr.462"*, %"class.std::__1::unique_ptr.462"*, %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.615", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.615" = type { %"class.absl::optional_internal::optional_data.616" }
%"class.absl::optional_internal::optional_data.616" = type { %"class.absl::optional_internal::optional_data_base.617" }
%"class.absl::optional_internal::optional_data_base.617" = type { %"class.absl::optional_internal::optional_data_dtor_base.618" }
%"class.absl::optional_internal::optional_data_dtor_base.618" = type { i8, %union.anon.619 }
%union.anon.619 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.std::__1::unique_ptr.462"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %"class.std::__1::unique_ptr.476"*, %"class.std::__1::unique_ptr.476"*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::unique_ptr.476" = type opaque
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.std::__1::unique_ptr.476"* }
%"class.base::flat_map.482" = type { %"class.base::internal::flat_tree.483" }
%"class.base::internal::flat_tree.483" = type { %"class.std::__1::vector.484" }
%"class.std::__1::vector.484" = type { %"class.std::__1::__vector_base.485" }
%"class.std::__1::__vector_base.485" = type { %"struct.std::__1::pair.486"*, %"struct.std::__1::pair.486"*, %"class.std::__1::__compressed_pair.487" }
%"struct.std::__1::pair.486" = type opaque
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"struct.std::__1::pair.486"* }
%"class.base::WeakPtrFactory.492" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.493" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::LayerListIterator" = type { i32 (...)**, %"class.cc::Layer"*, %"class.std::__1::vector.575" }
%"struct.cc::PaintBenchmarkResult" = type { double, double, double, double, double, double, double, i64 }
%"class.cc::MicroBenchmarkImpl" = type { i32 (...)**, %"class.base::OnceCallback", i8, %class.scoped_refptr.45 }
%"class.base::WeakPtr.612" = type { %"class.base::internal::WeakPtrBase" }
%"class.cc::RasterizeAndRecordBenchmarkImpl" = type <{ %"class.cc::MicroBenchmarkImpl", %"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults", i32, [4 x i8] }>
%"struct.cc::RasterizeAndRecordBenchmarkImpl::RasterizeResults" = type { i32, i32, i32, [11 x i32], %"class.base::TimeDelta", i32, i32, i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ = comdat any

$_ZN4base8internal9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

@_ZTVN2cc27RasterizeAndRecordBenchmarkE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmark"*)* @_ZN2cc27RasterizeAndRecordBenchmarkD2Ev to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmark"*)* @_ZN2cc27RasterizeAndRecordBenchmarkD0Ev to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc27RasterizeAndRecordBenchmark15DidUpdateLayersEPNS_13LayerTreeHostE to i8*), i8* bitcast (void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.cc::PictureLayer"*)* @_ZN2cc27RasterizeAndRecordBenchmark10RunOnLayerEPNS_12PictureLayerE to i8*), i8* bitcast (i1 (%"class.cc::MicroBenchmark"*, %"class.base::Value"*)* @_ZN2cc14MicroBenchmark14ProcessMessageENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (%"class.cc::MicroBenchmarkImpl"* (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN2cc27RasterizeAndRecordBenchmark19CreateBenchmarkImplE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"record_repeat_count\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"pixels_recorded\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"paint_op_memory_usage\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"paint_op_count\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"record_time_ms\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"record_time_caching_disabled_ms\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"record_time_subsequence_caching_disabled_ms\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"record_time_partial_invalidation_ms\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"record_time_small_invalidation_ms\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"raster_invalidation_and_convert_time_ms\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"paint_artifact_compositor_update_time_ms\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"painter_memory_usage\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN2cc27RasterizeAndRecordBenchmarkC1ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE = hidden unnamed_addr alias void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"*), void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"*)* @_ZN2cc27RasterizeAndRecordBenchmarkC2ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE
@_ZN2cc27RasterizeAndRecordBenchmarkD1Ev = hidden unnamed_addr alias void (%"class.cc::RasterizeAndRecordBenchmark"*), void (%"class.cc::RasterizeAndRecordBenchmark"*)* @_ZN2cc27RasterizeAndRecordBenchmarkD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmarkC2ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE(%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::DictionaryValue"*, align 8
  %6 = ptrtoint %"class.base::Value"* %1 to i64
  %7 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN2cc14MicroBenchmarkC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE(%"class.cc::MicroBenchmark"* %7, %"class.base::OnceCallback"* nonnull %4) #6
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #6
  %13 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2cc27RasterizeAndRecordBenchmarkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 1
  %16 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #6
  %17 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 2
  store i32 100, i32* %17, align 8
  %18 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 3
  %19 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %6, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.2"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 5
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 6
  store %"class.cc::LayerTreeHost"* null, %"class.cc::LayerTreeHost"** %23, align 8
  %24 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 7, i32 0
  %25 = ptrtoint %"class.cc::RasterizeAndRecordBenchmark"* %0 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %24, i64 %25) #6
  %26 = bitcast %"class.base::DictionaryValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %5, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.base::Value"*, %"class.base::Value"** %27, align 8
  %29 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %28, %"class.base::DictionaryValue"** nonnull %5) #6
  %30 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %31 = icmp eq %"class.base::DictionaryValue"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %3
  %33 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* nonnull %30, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #6
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %36 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %35, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, i32* %17) #6
  br label %37

37:                                               ; preds = %3, %34, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  ret void
}

declare void @_ZN2cc14MicroBenchmarkC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE(%"class.cc::MicroBenchmark"*, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmarkD2Ev(%"class.cc::RasterizeAndRecordBenchmark"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2cc27RasterizeAndRecordBenchmarkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.base::WeakPtrFactory.493", %"class.base::WeakPtrFactory.493"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %4) #6
  %5 = getelementptr inbounds %"class.base::WeakPtrFactory.493", %"class.base::WeakPtrFactory.493"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %5) #6
  %6 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %6, align 8
  %8 = icmp eq %"class.base::DictionaryValue"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %7, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %10) #6
  %11 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %14) #6
  %17 = bitcast %"class.base::Value"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0
  tail call void @_ZN2cc14MicroBenchmarkD2Ev(%"class.cc::MicroBenchmark"* %19) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc14MicroBenchmarkD2Ev(%"class.cc::MicroBenchmark"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmarkD0Ev(%"class.cc::RasterizeAndRecordBenchmark"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc27RasterizeAndRecordBenchmarkD2Ev(%"class.cc::RasterizeAndRecordBenchmark"* %0) #6
  %2 = bitcast %"class.cc::RasterizeAndRecordBenchmark"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmark15DidUpdateLayersEPNS_13LayerTreeHostE(%"class.cc::RasterizeAndRecordBenchmark"*, %"class.cc::LayerTreeHost"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::LayerListIterator", align 8
  %4 = alloca %"class.cc::LayerListIterator", align 8
  %5 = alloca %"struct.cc::PaintBenchmarkResult", align 8
  %6 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %103

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 6
  store %"class.cc::LayerTreeHost"* %1, %"class.cc::LayerTreeHost"** %10, align 8
  %11 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %3, i64 0, i32 1
  %13 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* nonnull sret %3, %"class.cc::LayerTreeHost"* %1) #6
  %14 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %4, i64 0, i32 1
  %16 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* nonnull sret %4, %"class.cc::LayerTreeHost"* %1) #6
  %17 = load %"class.cc::Layer"*, %"class.cc::Layer"** %12, align 8
  %18 = load %"class.cc::Layer"*, %"class.cc::Layer"** %15, align 8
  %19 = icmp eq %"class.cc::Layer"* %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0
  br label %93

22:                                               ; preds = %93, %9
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #6
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #6
  %23 = bitcast %"struct.cc::PaintBenchmarkResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 3
  %28 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 4
  %29 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 5
  %30 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 6
  %31 = getelementptr inbounds %"struct.cc::PaintBenchmarkResult", %"struct.cc::PaintBenchmarkResult"* %5, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 64, i1 false) #6
  %32 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %1, i64 0, i32 7
  %33 = load %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostClient"** %32, align 8
  %34 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = bitcast %"class.cc::LayerTreeHostClient"* %33 to void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)***
  %37 = load void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)**, void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)*, void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)** %37, i64 27
  %39 = load void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)*, void (%"class.cc::LayerTreeHostClient"*, i32, %"struct.cc::PaintBenchmarkResult"*)** %38, align 8
  call void %39(%"class.cc::LayerTreeHostClient"* %33, i32 %35, %"struct.cc::PaintBenchmarkResult"* nonnull dereferenceable(64) %5) #6
  %40 = call i8* @_Znwm(i64 32) #7
  %41 = bitcast i8* %40 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %41) #6
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 4
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.2"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %"class.base::DictionaryValue"* %45, null
  %48 = bitcast i8* %40 to %"class.base::DictionaryValue"*
  br i1 %47, label %53, label %49

49:                                               ; preds = %22
  %50 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %45, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %50) #6
  %51 = bitcast %"class.base::DictionaryValue"* %45 to i8*
  call void @_ZdlPv(i8* %51) #7
  %52 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  br label %53

53:                                               ; preds = %49, %22
  %54 = phi %"class.base::DictionaryValue"* [ %52, %49 ], [ %48, %22 ]
  %55 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15, i32 %56) #6
  %58 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %59 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* %58, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21, i32 %61) #6
  %63 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %64 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = trunc i64 %65 to i32
  %67 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* %63, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14, i32 %66) #6
  %68 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %69 = load double, double* %24, align 8
  %70 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %68, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14, double %69) #6
  %71 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %72 = load double, double* %25, align 8
  %73 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %71, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i64 31, double %72) #6
  %74 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %75 = load double, double* %26, align 8
  %76 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %74, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i64 43, double %75) #6
  %77 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %78 = load double, double* %27, align 8
  %79 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %77, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i64 35, double %78) #6
  %80 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %81 = load double, double* %28, align 8
  %82 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %80, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i64 33, double %81) #6
  %83 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %84 = load double, double* %29, align 8
  %85 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %83, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0), i64 39, double %84) #6
  %86 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %87 = load double, double* %30, align 8
  %88 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"* %86, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i64 40, double %87) #6
  %89 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %44, align 8
  %90 = load i64, i64* %31, align 8
  %91 = trunc i64 %90 to i32
  %92 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* %89, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i64 20, i32 %91) #6
  store i8 1, i8* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #6
  br label %103

93:                                               ; preds = %20, %93
  %94 = phi %"class.cc::Layer"* [ %17, %20 ], [ %100, %93 ]
  %95 = bitcast %"class.cc::Layer"* %94 to void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)***
  %96 = load void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)**, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)** %96, i64 7
  %98 = load void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)** %97, align 8
  call void %98(%"class.cc::Layer"* %94, %"class.cc::MicroBenchmark"* %21) #6
  %99 = call dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"* nonnull %3) #6
  %100 = load %"class.cc::Layer"*, %"class.cc::Layer"** %12, align 8
  %101 = load %"class.cc::Layer"*, %"class.cc::Layer"** %15, align 8
  %102 = icmp eq %"class.cc::Layer"* %100, %101
  br i1 %102, label %22, label %93

103:                                              ; preds = %2, %53
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #1

declare void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #1

declare dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEd(%"class.base::DictionaryValue"*, i8*, i64, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmark19RecordRasterResultsENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*) #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue"*, align 8
  %4 = bitcast %"class.base::DictionaryValue"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %3, align 8
  %5 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %1, %"class.base::DictionaryValue"** nonnull %3) #6
  %6 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %9 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.base::DictionaryValue"** %3 to %"class.base::Value"**
  %11 = load %"class.base::Value"*, %"class.base::Value"** %10, align 8
  call void @_ZN4base5Value15MergeDictionaryEPKS0_(%"class.base::Value"* %9, %"class.base::Value"* %11) #6
  %12 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.2"* %6 to %"class.base::Value"**
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %7, align 8
  call void @_ZN2cc14MicroBenchmark10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmark"* %12, %"class.base::Value"* %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  %15 = icmp eq %"class.base::Value"* %1, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %1) #6
  %17 = bitcast %"class.base::Value"* %1 to i8*
  call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %2, %16
  ret void
}

declare void @_ZN4base5Value15MergeDictionaryEPKS0_(%"class.base::Value"*, %"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN2cc14MicroBenchmark10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmark"*, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::MicroBenchmarkImpl"* @_ZN2cc27RasterizeAndRecordBenchmark19CreateBenchmarkImplE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.612", align 8
  %6 = tail call i8* @_Znwm(i64 120) #7
  %7 = bitcast i8* %6 to %"class.cc::RasterizeAndRecordBenchmarkImpl"*
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %2
  %13 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = bitcast %"class.base::WeakPtr.612"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6, !noalias !3
  %17 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %17) #6, !noalias !3
  %18 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !3
  %20 = getelementptr inbounds %"class.base::WeakPtr.612", %"class.base::WeakPtr.612"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %20, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %19) #6
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6, !noalias !3
  %21 = call i8* @_Znwm(i64 64) #7, !noalias !6
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #6, !noalias !6
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)* @_ZN2cc27RasterizeAndRecordBenchmark19RecordRasterResultsENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !6
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to %"class.base::internal::WeakReference"*
  %27 = getelementptr inbounds %"class.base::WeakPtr.612", %"class.base::WeakPtr.612"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %27) #6, !noalias !6
  %28 = getelementptr inbounds i8, i8* %21, i64 56
  %29 = bitcast i8* %28 to i64*
  %30 = getelementptr inbounds %"class.base::WeakPtr.612", %"class.base::WeakPtr.612"* %5, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !6
  store i64 %31, i64* %29, align 8, !noalias !6
  %32 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %21, i8** %32, align 8, !alias.scope !6
  call void @_ZN2cc31RasterizeAndRecordBenchmarkImplC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS2_5ValueENS2_12OnceCallbackIFvNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEEE(%"class.cc::RasterizeAndRecordBenchmarkImpl"* nonnull %7, %"class.base::SingleThreadTaskRunner"* %1, %"class.base::Value"* %14, %"class.base::OnceCallback"* nonnull %4) #6
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #6
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  br i1 %8, label %42, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.46", %"class.base::RefCountedThreadSafe.46"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.46", %"class.base::RefCountedThreadSafe.46"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.46"* %40 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %41) #6
  br label %42

42:                                               ; preds = %12, %34, %39
  %43 = bitcast i8* %6 to %"class.cc::MicroBenchmarkImpl"*
  ret %"class.cc::MicroBenchmarkImpl"* %43
}

declare void @_ZN2cc31RasterizeAndRecordBenchmarkImplC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS2_5ValueENS2_12OnceCallbackIFvNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEEE(%"class.cc::RasterizeAndRecordBenchmarkImpl"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::Value"*, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27RasterizeAndRecordBenchmark10RunOnLayerEPNS_12PictureLayerE(%"class.cc::RasterizeAndRecordBenchmark"* nocapture, %"class.cc::PictureLayer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %1, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"* %3) #6
  br i1 %4, label %5, label %48

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.cc::ContentLayerClient"*, %"class.cc::ContentLayerClient"** %6, align 8
  %8 = bitcast %"class.cc::ContentLayerClient"* %7 to %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)***
  %9 = load %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)**, %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)*, %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)** %9, i64 1
  %11 = load %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)*, %"class.cc::DisplayItemList"* (%"class.cc::ContentLayerClient"*)** %10, align 8
  %12 = tail call %"class.cc::DisplayItemList"* %11(%"class.cc::ContentLayerClient"* %7) #6
  %13 = tail call i64 @_ZNK2cc15DisplayItemList9BytesUsedEv(%"class.cc::DisplayItemList"* %12) #6
  %14 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %13
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 4, i32 5
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 4, i32 7
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, %23
  store i64 %24, i64* %22, align 8
  %25 = bitcast %"class.cc::ContentLayerClient"* %7 to { i64, i64 } (%"class.cc::ContentLayerClient"*)***
  %26 = load { i64, i64 } (%"class.cc::ContentLayerClient"*)**, { i64, i64 } (%"class.cc::ContentLayerClient"*)*** %25, align 8
  %27 = load { i64, i64 } (%"class.cc::ContentLayerClient"*)*, { i64, i64 } (%"class.cc::ContentLayerClient"*)** %26, align 8
  %28 = tail call { i64, i64 } %27(%"class.cc::ContentLayerClient"* %7) #6
  %29 = extractvalue { i64, i64 } %28, 1
  %30 = trunc i64 %29 to i32
  %31 = load { i64, i64 } (%"class.cc::ContentLayerClient"*)**, { i64, i64 } (%"class.cc::ContentLayerClient"*)*** %25, align 8
  %32 = load { i64, i64 } (%"class.cc::ContentLayerClient"*)*, { i64, i64 } (%"class.cc::ContentLayerClient"*)** %31, align 8
  %33 = tail call { i64, i64 } %32(%"class.cc::ContentLayerClient"* %7) #6
  %34 = extractvalue { i64, i64 } %33, 1
  %35 = lshr i64 %34, 32
  %36 = trunc i64 %35 to i32
  %37 = mul nsw i32 %36, %30
  %38 = getelementptr inbounds %"class.cc::RasterizeAndRecordBenchmark", %"class.cc::RasterizeAndRecordBenchmark"* %0, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %37, %39
  store i32 %40, i32* %38, align 8
  %41 = icmp eq %"class.cc::DisplayItemList"* %12, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %5
  %43 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %12) #6
  %47 = bitcast %"class.cc::DisplayItemList"* %12 to i8*
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

48:                                               ; preds = %46, %42, %5, %2
  ret void
}

declare zeroext i1 @_ZNK2cc5Layer12DrawsContentEv(%"class.cc::Layer"*) local_unnamed_addr #1

declare i64 @_ZNK2cc15DisplayItemList9BytesUsedEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2cc14MicroBenchmark14ProcessMessageENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmark"*, %"class.base::Value"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_(%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #6
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.cc::RasterizeAndRecordBenchmark"**
  %11 = load %"class.cc::RasterizeAndRecordBenchmark"*, %"class.cc::RasterizeAndRecordBenchmark"** %10, align 8
  %12 = icmp eq %"class.cc::RasterizeAndRecordBenchmark"* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #6
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #6
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.cc::RasterizeAndRecordBenchmark"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)**
  %38 = load void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)*, void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.cc::RasterizeAndRecordBenchmark"*, %"class.base::Value"*)* [ %38, %32 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.base::Value"*, %"class.base::Value"** %43, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %43, align 8
  call void %42(%"class.cc::RasterizeAndRecordBenchmark"* %29, %"class.base::Value"* %44) #6
  br label %45

45:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #6
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.cc::RasterizeAndRecordBenchmark"**
  %9 = load %"class.cc::RasterizeAndRecordBenchmark"*, %"class.cc::RasterizeAndRecordBenchmark"** %8, align 8
  %10 = icmp ne %"class.cc::RasterizeAndRecordBenchmark"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #6
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN2cc27RasterizeAndRecordBenchmarkEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN2cc27RasterizeAndRecordBenchmarkEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN2cc27RasterizeAndRecordBenchmarkEFvNSt3__110unique_ptrINS_5ValueENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
