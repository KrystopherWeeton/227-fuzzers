; ModuleID = '../../third_party/boringssl/src/crypto/evp/evp_ctx.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/evp_ctx.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_method_st = type { i32, i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* }
%struct.evp_pkey_ctx_st = type { %struct.evp_pkey_method_st*, %struct.engine_st*, %struct.evp_pkey_st*, %struct.evp_pkey_st*, i32, i8* }
%struct.engine_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type opaque
%struct.cbb_st = type opaque

@.str = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/evp/evp_ctx.c\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"algorithm %d\00", align 1
@rsa_pkey_meth = external constant %struct.evp_pkey_method_st, align 8
@ec_pkey_meth = external constant %struct.evp_pkey_method_st, align 8
@ed25519_pkey_meth = external constant %struct.evp_pkey_method_st, align 8
@x25519_pkey_meth = external constant %struct.evp_pkey_method_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st*, %struct.engine_st*) local_unnamed_addr #0 {
  %3 = tail call fastcc %struct.evp_pkey_ctx_st* @evp_pkey_ctx_new(%struct.evp_pkey_st* %0, %struct.engine_st* %1, i32 -1)
  ret %struct.evp_pkey_ctx_st* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.evp_pkey_ctx_st* @evp_pkey_ctx_new(%struct.evp_pkey_st*, %struct.engine_st*, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %9 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_asn1_method_st* %9, null
  br i1 %10, label %57, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %11, %3
  %15 = phi i32 [ %13, %11 ], [ %2, %3 ]
  %16 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_method_st, %struct.evp_pkey_method_st* @rsa_pkey_meth, i64 0, i32 0), align 8
  %17 = icmp eq i32 %16, %15
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_method_st, %struct.evp_pkey_method_st* @ec_pkey_meth, i64 0, i32 0), align 8
  %20 = icmp eq i32 %19, %15
  br i1 %20, label %28, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_method_st, %struct.evp_pkey_method_st* @ed25519_pkey_meth, i64 0, i32 0), align 8
  %23 = icmp eq i32 %22, %15
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* getelementptr inbounds (%struct.evp_pkey_method_st, %struct.evp_pkey_method_st* @x25519_pkey_meth, i64 0, i32 0), align 8
  %26 = icmp eq i32 %25, %15
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 100) #4
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %15) #4
  br label %57

28:                                               ; preds = %24, %14, %18, %21
  %29 = phi %struct.evp_pkey_method_st* [ @ed25519_pkey_meth, %21 ], [ @ec_pkey_meth, %18 ], [ @rsa_pkey_meth, %14 ], [ @x25519_pkey_meth, %24 ]
  %30 = tail call i8* @OPENSSL_malloc(i64 48) #4
  %31 = bitcast i8* %30 to %struct.evp_pkey_ctx_st*
  %32 = icmp eq i8* %30, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 107) #4
  br label %57

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %30, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %35, i8 0, i64 32, i1 false) #4
  %36 = getelementptr inbounds i8, i8* %30, i64 8
  %37 = bitcast i8* %36 to %struct.engine_st**
  store %struct.engine_st* %1, %struct.engine_st** %37, align 8
  %38 = bitcast i8* %30 to %struct.evp_pkey_method_st**
  store %struct.evp_pkey_method_st* %29, %struct.evp_pkey_method_st** %38, align 8
  %39 = getelementptr inbounds i8, i8* %30, i64 32
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %34
  %43 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %0) #4
  %44 = getelementptr inbounds i8, i8* %30, i64 16
  %45 = bitcast i8* %44 to %struct.evp_pkey_st**
  store %struct.evp_pkey_st* %0, %struct.evp_pkey_st** %45, align 8
  br label %46

46:                                               ; preds = %34, %42
  %47 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %29, i64 0, i32 1
  %48 = load i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*)** %47, align 8
  %49 = icmp eq i32 (%struct.evp_pkey_ctx_st*)* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = tail call i32 %48(%struct.evp_pkey_ctx_st* nonnull %31) #4
  %52 = icmp slt i32 %51, 1
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = getelementptr inbounds i8, i8* %30, i64 16
  %55 = bitcast i8* %54 to %struct.evp_pkey_st**
  %56 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %55, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %56) #4
  tail call void @OPENSSL_free(i8* nonnull %30) #4
  br label %57

57:                                               ; preds = %50, %46, %5, %7, %53, %33, %27
  %58 = phi %struct.evp_pkey_ctx_st* [ null, %27 ], [ null, %53 ], [ null, %33 ], [ null, %7 ], [ null, %5 ], [ %31, %46 ], [ %31, %50 ]
  ret %struct.evp_pkey_ctx_st* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new_id(i32, %struct.engine_st*) local_unnamed_addr #0 {
  %3 = tail call fastcc %struct.evp_pkey_ctx_st* @evp_pkey_ctx_new(%struct.evp_pkey_st* null, %struct.engine_st* %1, i32 %0)
  ret %struct.evp_pkey_ctx_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 3
  %9 = load void (%struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)** %8, align 8
  %10 = icmp eq void (%struct.evp_pkey_ctx_st*)* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void %9(%struct.evp_pkey_ctx_st* nonnull %0) #4
  br label %12

12:                                               ; preds = %7, %3, %11
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %14 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %13, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %14) #4
  %15 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 3
  %16 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %15, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %16) #4
  %17 = bitcast %struct.evp_pkey_ctx_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %17) #4
  br label %18

18:                                               ; preds = %1, %12
  ret void
}

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_dup(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %3 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %2, align 8
  %4 = icmp eq %struct.evp_pkey_method_st* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %3, i64 0, i32 2
  %7 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)** %6, align 8
  %8 = icmp eq i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @OPENSSL_malloc(i64 48) #4
  %11 = bitcast i8* %10 to %struct.evp_pkey_ctx_st*
  %12 = icmp eq i8* %10, null
  br i1 %12, label %59, label %13

13:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 48, i1 false) #4
  %14 = bitcast %struct.evp_pkey_ctx_st* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %10 to %struct.evp_pkey_method_st**
  %17 = bitcast i8* %10 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 1
  %19 = bitcast %struct.engine_st** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %10, i64 32
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %28 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %27, align 8
  %29 = icmp eq %struct.evp_pkey_st* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %13
  %31 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %28) #4
  %32 = bitcast %struct.evp_pkey_st** %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %10, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %33, i64* %35, align 8
  br label %36

36:                                               ; preds = %13, %30
  %37 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 3
  %38 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %37, align 8
  %39 = icmp eq %struct.evp_pkey_st* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %38) #4
  %42 = bitcast %struct.evp_pkey_st** %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %10, i64 24
  %45 = bitcast i8* %44 to i64*
  store i64 %43, i64* %45, align 8
  br label %46

46:                                               ; preds = %36, %40
  %47 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %2, align 8
  %48 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %47, i64 0, i32 2
  %49 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)** %48, align 8
  %50 = tail call i32 %49(%struct.evp_pkey_ctx_st* nonnull %11, %struct.evp_pkey_ctx_st* %0) #4
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  store %struct.evp_pkey_method_st* null, %struct.evp_pkey_method_st** %16, align 8
  %53 = getelementptr inbounds i8, i8* %10, i64 16
  %54 = bitcast i8* %53 to %struct.evp_pkey_st**
  %55 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %54, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %55) #4
  %56 = getelementptr inbounds i8, i8* %10, i64 24
  %57 = bitcast i8* %56 to %struct.evp_pkey_st**
  %58 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %57, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %58) #4
  tail call void @OPENSSL_free(i8* nonnull %10) #4
  tail call void @ERR_put_error(i32 6, i32 0, i32 6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 181) #4
  br label %59

59:                                               ; preds = %52, %9, %46, %1, %5
  %60 = phi %struct.evp_pkey_ctx_st* [ null, %5 ], [ null, %1 ], [ null, %52 ], [ null, %9 ], [ %11, %46 ]
  ret %struct.evp_pkey_ctx_st* %60
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_PKEY_CTX_get0_pkey(%struct.evp_pkey_ctx_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %3 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  ret %struct.evp_pkey_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_CTX_ctrl(%struct.evp_pkey_ctx_st*, i32, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %7 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %10 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %9, align 8
  %11 = icmp eq %struct.evp_pkey_method_st* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %10, i64 0, i32 14
  %14 = load i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)** %13, align 8
  %15 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %8, %6
  tail call void @ERR_put_error(i32 6, i32 0, i32 101, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 193) #4
  br label %37

17:                                               ; preds = %12
  %18 = icmp eq i32 %1, -1
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %10, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 197) #4
  br label %37

24:                                               ; preds = %19, %17
  %25 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @ERR_put_error(i32 6, i32 0, i32 123, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 202) #4
  br label %37

29:                                               ; preds = %24
  %30 = icmp ne i32 %2, -1
  %31 = and i32 %26, %2
  %32 = icmp eq i32 %31, 0
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @ERR_put_error(i32 6, i32 0, i32 114, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 207) #4
  br label %37

35:                                               ; preds = %29
  %36 = tail call i32 %14(%struct.evp_pkey_ctx_st* nonnull %0, i32 %3, i32 %4, i8* %5) #4
  br label %37

37:                                               ; preds = %35, %34, %28, %23, %16
  %38 = phi i32 [ 0, %23 ], [ 0, %28 ], [ %36, %35 ], [ 0, %34 ], [ 0, %16 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_sign_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 5
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 6
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 217) #4
  br label %18

16:                                               ; preds = %11, %7
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 8, i32* %17, align 8
  br label %18

18:                                               ; preds = %16, %15
  %19 = phi i32 [ 0, %15 ], [ 1, %16 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_sign(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_method_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 5
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 228) #4
  br label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 232) #4
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 %13(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64* %2, i8* %3, i64 %4) #4
  br label %23

23:                                               ; preds = %21, %20, %15
  %24 = phi i32 [ 0, %20 ], [ %22, %21 ], [ 0, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_verify_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 7
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 8
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 241) #4
  br label %18

16:                                               ; preds = %11, %7
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 16, i32* %17, align 8
  br label %18

18:                                               ; preds = %16, %15
  %19 = phi i32 [ 0, %15 ], [ 1, %16 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_verify(%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_method_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 7
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 251) #4
  br label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 16
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 255) #4
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 %13(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64 %2, i8* %3, i64 %4) #4
  br label %23

23:                                               ; preds = %21, %20, %15
  %24 = phi i32 [ 0, %20 ], [ %22, %21 ], [ 0, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_encrypt_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 10
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 263) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 64, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_encrypt(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_method_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 10
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 273) #4
  br label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 64
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 277) #4
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 %13(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64* %2, i8* %3, i64 %4) #4
  br label %23

23:                                               ; preds = %21, %20, %15
  %24 = phi i32 [ 0, %20 ], [ %22, %21 ], [ 0, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_decrypt_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 11
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 285) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 128, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_decrypt(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_method_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 11
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 295) #4
  br label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 128
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 299) #4
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 %13(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64* %2, i8* %3, i64 %4) #4
  br label %23

23:                                               ; preds = %21, %20, %15
  %24 = phi i32 [ 0, %20 ], [ %22, %21 ], [ 0, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_verify_recover_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 9
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 307) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 32, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_verify_recover(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = icmp eq %struct.evp_pkey_method_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 9
  %13 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %12, align 8
  %14 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 317) #4
  br label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 32
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 321) #4
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 %13(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64* %2, i8* %3, i64 %4) #4
  br label %23

23:                                               ; preds = %21, %20, %15
  %24 = phi i32 [ 0, %20 ], [ %22, %21 ], [ 0, %15 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_derive_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 12
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 329) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 256, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_derive_set_peer(%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %6 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %7 = icmp eq %struct.evp_pkey_method_st* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 12
  %10 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)** %9, align 8
  %11 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)* %10, null
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 10
  %14 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %13, align 8
  %15 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 11
  %18 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %17, align 8
  %19 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16, %12, %8
  %21 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 14
  %22 = load i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)** %21, align 8
  %23 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %20, %16, %4, %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 341) #4
  br label %66

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %28 [
    i32 256, label %29
    i32 64, label %29
    i32 128, label %29
  ]

28:                                               ; preds = %25
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 347) #4
  br label %66

29:                                               ; preds = %25, %25, %25
  %30 = bitcast %struct.evp_pkey_st* %1 to i8*
  %31 = tail call i32 %22(%struct.evp_pkey_ctx_st* nonnull %0, i32 3, i32 0, i8* %30) #4
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %66, label %33

33:                                               ; preds = %29
  %34 = icmp eq i32 %31, 2
  br i1 %34, label %66, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %37 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %36, align 8
  %38 = icmp eq %struct.evp_pkey_st* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @ERR_put_error(i32 6, i32 0, i32 120, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 362) #4
  br label %66

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %37, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %40
  tail call void @ERR_put_error(i32 6, i32 0, i32 103, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 367) #4
  br label %66

47:                                               ; preds = %40
  %48 = tail call i32 @EVP_PKEY_missing_parameters(%struct.evp_pkey_st* %1) #4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %36, align 8
  %52 = tail call i32 @EVP_PKEY_cmp_parameters(%struct.evp_pkey_st* %51, %struct.evp_pkey_st* %1) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  tail call void @ERR_put_error(i32 6, i32 0, i32 104, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 378) #4
  br label %66

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 3
  %57 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %56, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %57) #4
  store %struct.evp_pkey_st* %1, %struct.evp_pkey_st** %56, align 8
  %58 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %59 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %58, i64 0, i32 14
  %60 = load i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)** %59, align 8
  %61 = tail call i32 %60(%struct.evp_pkey_ctx_st* nonnull %0, i32 3, i32 1, i8* %30) #4
  %62 = icmp slt i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %55
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %56, align 8
  br label %66

64:                                               ; preds = %55
  %65 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* %1) #4
  br label %66

66:                                               ; preds = %33, %29, %64, %63, %54, %46, %39, %28, %24
  %67 = phi i32 [ 0, %28 ], [ 0, %46 ], [ 0, %63 ], [ 1, %64 ], [ 0, %54 ], [ 0, %39 ], [ 0, %24 ], [ 0, %29 ], [ 1, %33 ]
  ret i32 %67
}

declare i32 @EVP_PKEY_missing_parameters(%struct.evp_pkey_st*) local_unnamed_addr #1

declare i32 @EVP_PKEY_cmp_parameters(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_derive(%struct.evp_pkey_ctx_st*, i8*, i64*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %7 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %6, align 8
  %8 = icmp eq %struct.evp_pkey_method_st* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %7, i64 0, i32 12
  %11 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)** %10, align 8
  %12 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %9, %5, %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 398) #4
  br label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 256
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 402) #4
  br label %21

19:                                               ; preds = %14
  %20 = tail call i32 %11(%struct.evp_pkey_ctx_st* nonnull %0, i8* %1, i64* %2) #4
  br label %21

21:                                               ; preds = %19, %18, %13
  %22 = phi i32 [ 0, %18 ], [ %20, %19 ], [ 0, %13 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_keygen_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 4
  %9 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 410) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 4, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_keygen(%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %6 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %7 = icmp eq %struct.evp_pkey_method_st* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 4
  %10 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %9, align 8
  %11 = icmp eq i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8, %4, %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 419) #4
  br label %38

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 423) #4
  br label %38

18:                                               ; preds = %13
  %19 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  %21 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  %22 = icmp eq %struct.evp_pkey_st* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  store %struct.evp_pkey_st* %24, %struct.evp_pkey_st** %1, align 8
  %25 = icmp eq %struct.evp_pkey_st* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %28 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %27, i64 0, i32 4
  %29 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %28, align 8
  br label %31

30:                                               ; preds = %23
  tail call void @ERR_put_error(i32 6, i32 0, i32 6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 434) #4
  br label %38

31:                                               ; preds = %26, %20
  %32 = phi %struct.evp_pkey_st* [ %24, %26 ], [ %21, %20 ]
  %33 = phi i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* [ %29, %26 ], [ %10, %20 ]
  %34 = tail call i32 %33(%struct.evp_pkey_ctx_st* nonnull %0, %struct.evp_pkey_st* nonnull %32) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %37) #4
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %1, align 8
  br label %38

38:                                               ; preds = %31, %18, %36, %30, %17, %12
  %39 = phi i32 [ 0, %17 ], [ 0, %36 ], [ 0, %30 ], [ 0, %12 ], [ 0, %18 ], [ 1, %31 ]
  ret i32 %39
}

declare %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_paramgen_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %5 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %4, align 8
  %6 = icmp eq %struct.evp_pkey_method_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %5, i64 0, i32 13
  %9 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %3, %1
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 449) #4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  store i32 512, i32* %13, align 8
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ 1, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_paramgen(%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.evp_pkey_ctx_st* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 0
  %6 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %7 = icmp eq %struct.evp_pkey_method_st* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %6, i64 0, i32 13
  %10 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %9, align 8
  %11 = icmp eq i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8, %4, %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 458) #4
  br label %38

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 512
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @ERR_put_error(i32 6, i32 0, i32 126, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 462) #4
  br label %38

18:                                               ; preds = %13
  %19 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  %21 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  %22 = icmp eq %struct.evp_pkey_st* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  store %struct.evp_pkey_st* %24, %struct.evp_pkey_st** %1, align 8
  %25 = icmp eq %struct.evp_pkey_st* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %5, align 8
  %28 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %27, i64 0, i32 13
  %29 = load i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)** %28, align 8
  br label %31

30:                                               ; preds = %23
  tail call void @ERR_put_error(i32 6, i32 0, i32 6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 473) #4
  br label %38

31:                                               ; preds = %26, %20
  %32 = phi %struct.evp_pkey_st* [ %24, %26 ], [ %21, %20 ]
  %33 = phi i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* [ %29, %26 ], [ %10, %20 ]
  %34 = tail call i32 %33(%struct.evp_pkey_ctx_st* nonnull %0, %struct.evp_pkey_st* nonnull %32) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %37) #4
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %1, align 8
  br label %38

38:                                               ; preds = %31, %18, %36, %30, %17, %12
  %39 = phi i32 [ 0, %17 ], [ 0, %36 ], [ 0, %30 ], [ 0, %12 ], [ 0, %18 ], [ 1, %31 ]
  ret i32 %39
}

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
