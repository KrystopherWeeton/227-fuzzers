; ModuleID = '../../third_party/ffmpeg/libavformat/mov.c'
source_filename = "../../third_party/ffmpeg/libavformat/mov.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type { i32, i32, %struct.AVFrame*, %struct.AVBufferRef*, i8*, %struct.DecodeSimpleContext, %struct.AVBSFContext*, %struct.AVPacket*, %struct.AVFifoBuffer*, i8*, i32, i8*, %struct.EncodeSimpleContext, i32, i8*, i32, %struct.AVPacket*, %struct.AVFrame*, i32, i32, i64, i64, %struct.AVFrame*, %struct.AVPacket*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.DecodeSimpleContext = type { %struct.AVPacket* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.EncodeSimpleContext = type { %struct.AVFrame* }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext*, i32, %struct.AVCodecContext*, i32, i32, %struct.anon, i32, i32, %struct.FFFrac*, %struct.anon.0*, %struct.AVIndexEntry*, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], [17 x i64], i64, i8, i8, i32, %struct.AVRational, %struct.AVProbeData, %struct.AVPacketList* }
%struct.anon = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.anon.0 = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.MOVParseTableEntry = type { i32, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* }
%struct.MOVContext = type { %struct.AVClass*, %struct.AVFormatContext*, i32, i64, i32, i32, i32, i32, i8**, i32, %struct.DVDemuxContext*, %struct.AVFormatContext*, i32, %struct.MOVFragment, %struct.MOVTrackExt*, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32*, i32, i32, i32, i32, %struct.MOVFragmentIndex, i32, i32, [20 x i8], [20 x i8], i8*, i32, i8*, i32, i8*, i32, i8*, i32, %struct.AVAES*, i8*, i32, i32, [3 x [3 x i32]], i32, i32 }
%struct.DVDemuxContext = type opaque
%struct.MOVFragment = type { i32, i32, i64, i64, i64, i32, i32, i32, i32 }
%struct.MOVTrackExt = type { i32, i32, i32, i32, i32 }
%struct.MOVFragmentIndex = type { i32, i32, i32, i32, %struct.MOVFragmentIndexItem* }
%struct.MOVFragmentIndexItem = type { i64, i32, i32, i32, %struct.MOVFragmentStreamInfo* }
%struct.MOVFragmentStreamInfo = type { i32, i64, i64, i64, i64, i32, %struct.MOVEncryptionIndex* }
%struct.MOVEncryptionIndex = type { i32, %struct.AVEncryptionInfo**, i8*, i64, i8, i64*, i64 }
%struct.AVEncryptionInfo = type { i32, i32, i32, i8*, i32, i8*, i32, %struct.AVSubsampleEncryptionInfo*, i32 }
%struct.AVSubsampleEncryptionInfo = type { i32, i32 }
%struct.AVAES = type opaque
%struct.MOVStreamContext = type { %struct.AVIOContext*, i32, i32, i32, i32, i64*, i32, %struct.MOVStts*, i32, i8*, i32, i32, %struct.MOVStts*, i32, %struct.MOVStsc*, i32, i32, i32, i32*, %struct.MOVElst*, i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32*, i32, i64, i64, i32, i64, %struct.MOVIndexRange*, %struct.MOVIndexRange*, i32, i32, i32, i32, i16, i32, %struct.MOVDref*, i32, i32, i32, i32, i32, [256 x i32], i32, i64, i32, i64, i32, i32, %struct.MOVSbgp*, i32, i64, i8**, i32*, i32, i32, i32, i32*, %struct.AVStereo3D*, %struct.AVSphericalMapping*, i64, %struct.AVMasteringDisplayMetadata*, %struct.AVContentLightMetadata*, i64, i32, i32, %struct.anon.1 }
%struct.MOVStts = type { i32, i32 }
%struct.MOVStsc = type { i32, i32, i32 }
%struct.MOVElst = type { i64, i64, float }
%struct.MOVIndexRange = type { i64, i64 }
%struct.MOVDref = type { i32, i8*, i8*, [28 x i8], [64 x i8], i16, i16 }
%struct.MOVSbgp = type { i32, i32 }
%struct.AVStereo3D = type { i32, i32, i32 }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVMasteringDisplayMetadata = type { [3 x [2 x %struct.AVRational]], [2 x %struct.AVRational], %struct.AVRational, %struct.AVRational, i32, i32 }
%struct.AVContentLightMetadata = type { i32, i32 }
%struct.anon.1 = type { %struct.AVAESCTR*, i32, %struct.AVEncryptionInfo*, %struct.MOVEncryptionIndex* }
%struct.AVAESCTR = type opaque
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.AVSHA = type opaque
%struct.AVEncryptionInitInfo = type { i8*, i32, i8**, i32, i32, i8*, i32, %struct.AVEncryptionInitInfo* }
%struct.AVDOVIDecoderConfigurationRecord = type { i8, i8, i8, i8, i8, i8, i8, i8 }

@.str = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"c->fc->nb_streams >= 1\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"../../third_party/ffmpeg/libavformat/mov.c\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"invalid size %ld in stsd\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"size=%ld 4CC=%s codec_type=%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"Invalid sample rate %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STSD atom\0A\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"mov,mp4,m4a,3gp,3g2,mj2\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"QuickTime / MOV\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"mov,mp4,m4a,3gp,3g2,mj2,psp,m4b,ism,ismv,isma,f4v\00", align 1
@mov_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([18 x %struct.AVOption], [18 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @mov_options to [18 x %struct.AVOption]*), i32 0, i32 0), i32 3687524, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null, %struct.AVClass* (i8**)* null }, align 8
@ff_mov_demuxer = hidden local_unnamed_addr global %struct.AVInputFormat { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0), i32 67141632, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* @mov_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 440, i32 (%struct.AVProbeData*)* @mov_probe, i32 (%struct.AVFormatContext*)* @mov_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mov_read_packet, i32 (%struct.AVFormatContext*)* @mov_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @mov_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@ff_codec_movvideo_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.17 = private unnamed_addr constant [31 x i8] c"multiple fourcc not supported\0A\00", align 1
@ff_codec_movaudio_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_wav_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_bmp_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_movsubtitle_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_movdata_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.18 = private unnamed_addr constant [10 x i8] c"vendor_id\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"Planar Y'CbCr 8-bit 4:2:0\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"Sorenson H263\00", align 1
@mac_to_unicode = internal unnamed_addr constant [128 x i32] [i32 196, i32 197, i32 199, i32 201, i32 209, i32 214, i32 220, i32 225, i32 224, i32 226, i32 228, i32 227, i32 229, i32 231, i32 233, i32 232, i32 234, i32 235, i32 237, i32 236, i32 238, i32 239, i32 241, i32 243, i32 242, i32 244, i32 246, i32 245, i32 250, i32 249, i32 251, i32 252, i32 8224, i32 176, i32 162, i32 163, i32 167, i32 8226, i32 182, i32 223, i32 174, i32 169, i32 8482, i32 180, i32 168, i32 8800, i32 198, i32 216, i32 8734, i32 177, i32 8804, i32 8805, i32 165, i32 181, i32 8706, i32 8721, i32 8719, i32 960, i32 8747, i32 170, i32 186, i32 937, i32 230, i32 248, i32 191, i32 161, i32 172, i32 8730, i32 402, i32 8776, i32 8710, i32 171, i32 187, i32 8230, i32 160, i32 192, i32 195, i32 213, i32 338, i32 339, i32 8211, i32 8212, i32 8220, i32 8221, i32 8216, i32 8217, i32 247, i32 9674, i32 255, i32 376, i32 8260, i32 8364, i32 8249, i32 8250, i32 64257, i32 64258, i32 8225, i32 183, i32 8218, i32 8222, i32 8240, i32 194, i32 202, i32 193, i32 203, i32 200, i32 205, i32 206, i32 207, i32 204, i32 211, i32 212, i32 63743, i32 210, i32 218, i32 219, i32 217, i32 305, i32 710, i32 732, i32 175, i32 728, i32 729, i32 730, i32 184, i32 733, i32 731, i32 711], align 16
@.str.22 = private unnamed_addr constant [18 x i8] c"compatible_brands\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"audio channels %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"version =%d, isom =%d\0A\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"qt  \00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"ignoring multiple glbl\0A\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"reel_name\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"Atoms too deeply nested\0A\00", align 1
@.str.31 = private unnamed_addr constant [39 x i8] c"Detected moov in a free or hoov atom.\0A\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c"Broken file, trak/mdat not at top-level\0A\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"type:'%s' parent:'%s' sz: %ld %ld %ld\0A\00", align 1
@mov_default_parse_table = internal unnamed_addr constant [97 x %struct.MOVParseTableEntry] [%struct.MOVParseTableEntry { i32 1380729665, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_aclr }, %struct.MOVParseTableEntry { i32 1196576833, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_avid }, %struct.MOVParseTableEntry { i32 1347174721, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_avid }, %struct.MOVParseTableEntry { i32 1397051969, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_ares }, %struct.MOVParseTableEntry { i32 1936946785, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_avss }, %struct.MOVParseTableEntry { i32 1127315041, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_av1c }, %struct.MOVParseTableEntry { i32 1819306083, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_chpl }, %struct.MOVParseTableEntry { i32 875982691, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stco }, %struct.MOVParseTableEntry { i32 1919709027, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_colr }, %struct.MOVParseTableEntry { i32 1937011811, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_ctts }, %struct.MOVParseTableEntry { i32 1718511972, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1165520964, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dpxe }, %struct.MOVParseTableEntry { i32 1717924452, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dref }, %struct.MOVParseTableEntry { i32 1937007717, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1953721445, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_elst }, %struct.MOVParseTableEntry { i32 1633971813, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_enda }, %struct.MOVParseTableEntry { i32 1818585446, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_fiel }, %struct.MOVParseTableEntry { i32 1836213345, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_adrm }, %struct.MOVParseTableEntry { i32 1887007846, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_ftyp }, %struct.MOVParseTableEntry { i32 1818389607, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_glbl }, %struct.MOVParseTableEntry { i32 1919706216, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_hdlr }, %struct.MOVParseTableEntry { i32 1953721449, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_ilst }, %struct.MOVParseTableEntry { i32 1748136042, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_jp2h }, %struct.MOVParseTableEntry { i32 1952539757, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_mdat }, %struct.MOVParseTableEntry { i32 1684563053, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_mdhd }, %struct.MOVParseTableEntry { i32 1634296941, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1635018093, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_meta }, %struct.MOVParseTableEntry { i32 1718511981, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1718579053, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_moof }, %struct.MOVParseTableEntry { i32 1987014509, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_moov }, %struct.MOVParseTableEntry { i32 2019915373, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1684567661, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_mvhd }, %struct.MOVParseTableEntry { i32 541674835, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_svq3 }, %struct.MOVParseTableEntry { i32 1667329121, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_alac }, %struct.MOVParseTableEntry { i32 1130591841, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_glbl }, %struct.MOVParseTableEntry { i32 1886609776, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_pasp }, %struct.MOVParseTableEntry { i32 2019846515, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_sidx }, %struct.MOVParseTableEntry { i32 1818391667, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1868788851, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stco }, %struct.MOVParseTableEntry { i32 1936749683, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stps }, %struct.MOVParseTableEntry { i32 1718776947, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_strf }, %struct.MOVParseTableEntry { i32 1668510835, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stsc }, %struct.MOVParseTableEntry { i32 1685288051, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stsd }, %struct.MOVParseTableEntry { i32 1936946291, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stss }, %struct.MOVParseTableEntry { i32 2054386803, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stsz }, %struct.MOVParseTableEntry { i32 1937011827, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stts }, %struct.MOVParseTableEntry { i32 846886003, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_stsz }, %struct.MOVParseTableEntry { i32 1886676083, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_sdtp }, %struct.MOVParseTableEntry { i32 1684564852, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_tkhd }, %struct.MOVParseTableEntry { i32 1952736884, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_tfdt }, %struct.MOVParseTableEntry { i32 1684563572, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_tfhd }, %struct.MOVParseTableEntry { i32 1801548404, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_trak }, %struct.MOVParseTableEntry { i32 1717662324, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1717924468, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1684237684, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_tmcd }, %struct.MOVParseTableEntry { i32 1885431907, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_chap }, %struct.MOVParseTableEntry { i32 2019914356, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_trex }, %struct.MOVParseTableEntry { i32 1853190772, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_trun }, %struct.MOVParseTableEntry { i32 1635017845, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1702257015, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_wave }, %struct.MOVParseTableEntry { i32 1935962981, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_esds }, %struct.MOVParseTableEntry { i32 862151012, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dac3 }, %struct.MOVParseTableEntry { i32 862152036, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dec3 }, %struct.MOVParseTableEntry { i32 1937007716, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_ddts }, %struct.MOVParseTableEntry { i32 1701079415, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_wide }, %struct.MOVParseTableEntry { i32 2019911287, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_wfex }, %struct.MOVParseTableEntry { i32 1987013987, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_cmov }, %struct.MOVParseTableEntry { i32 1851877475, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_chan }, %struct.MOVParseTableEntry { i32 828601956, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dvc1 }, %struct.MOVParseTableEntry { i32 1885823603, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_sbgp }, %struct.MOVParseTableEntry { i32 1130591848, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_glbl }, %struct.MOVParseTableEntry { i32 1684632949, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_uuid }, %struct.MOVParseTableEntry { i32 -1905366717, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_targa_y216 }, %struct.MOVParseTableEntry { i32 1701147238, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_free }, %struct.MOVParseTableEntry { i32 757935405, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_custom }, %struct.MOVParseTableEntry { i32 1718511987, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1634562662, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_frma }, %struct.MOVParseTableEntry { i32 1668179315, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_senc }, %struct.MOVParseTableEntry { i32 2053726579, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_saiz }, %struct.MOVParseTableEntry { i32 1869177203, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_saio }, %struct.MOVParseTableEntry { i32 1752396656, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_pssh }, %struct.MOVParseTableEntry { i32 1835557747, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_schm }, %struct.MOVParseTableEntry { i32 1768448883, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_default }, %struct.MOVParseTableEntry { i32 1668179316, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_tenc }, %struct.MOVParseTableEntry { i32 1632396900, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dfla }, %struct.MOVParseTableEntry { i32 1681093747, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_st3d }, %struct.MOVParseTableEntry { i32 1681094259, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_sv3d }, %struct.MOVParseTableEntry { i32 1936740196, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dops }, %struct.MOVParseTableEntry { i32 1886154084, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dmlp }, %struct.MOVParseTableEntry { i32 1833200979, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_smdm }, %struct.MOVParseTableEntry { i32 1280077635, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_coll }, %struct.MOVParseTableEntry { i32 1130590326, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_vpcc }, %struct.MOVParseTableEntry { i32 1986225261, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_mdcv }, %struct.MOVParseTableEntry { i32 1768713315, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_clli }, %struct.MOVParseTableEntry { i32 1130591844, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dvcc_dvvc }, %struct.MOVParseTableEntry { i32 1131837028, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* @mov_read_dvcc_dvvc }, %struct.MOVParseTableEntry zeroinitializer], align 16
@.str.34 = private unnamed_addr constant [40 x i8] c"overread end of atom '%s' by %ld bytes\0A\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"ignored unknown aclr value (%d)\0A\00", align 1
@.str.36 = private unnamed_addr constant [36 x i8] c"aclr not decoded - incomplete atom\0A\00", align 1
@.str.37 = private unnamed_addr constant [52 x i8] c"aclr not decoded - unable to add atom to extradata\0A\00", align 1
@.str.38 = private unnamed_addr constant [40 x i8] c"aclr not decoded - unexpected size %ld\0A\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"truncated extradata\0A\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"Empty AV1 Codec Configuration Box\0A\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"STCO outside TRAK\0A\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"Duplicated STCO atom\0A\00", align 1
@.str.43 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STCO atom\0A\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"nclx\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"nclc\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"prof\00", align 1
@.str.47 = private unnamed_addr constant [37 x i8] c"unsupported color_parameter_type %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"%s: pri %d trc %d matrix %d\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c" full %u\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.51 = private unnamed_addr constant [29 x i8] c"track[%u].ctts.entries = %u\0A\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"ignoring CTTS entry with count=%d duration=%d\0A\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"count=%d, duration=%d\0A\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"CTTS invalid\0A\00", align 1
@.str.55 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted CTTS atom\0A\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"dts shift %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [45 x i8] c"mov_update_dts_shift(): dts_shift set to %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"volume %s, len %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"filename %s, len %d\0A\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"nlvl from %d, nlvl to %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"type %d, len %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"path %s\0A\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"dir %s\0A\00", align 1
@.str.64 = private unnamed_addr constant [34 x i8] c"Unknown dref type 0x%08x size %u\0A\00", align 1
@.str.65 = private unnamed_addr constant [69 x i8] c"Invalid edit list entry_count: %d for elst atom of size: %ld bytes.\0A\00", align 1
@.str.66 = private unnamed_addr constant [49 x i8] c"ELST atom of %ld bytes, bigger than %d entries.\0A\00", align 1
@.str.67 = private unnamed_addr constant [22 x i8] c"Duplicated ELST atom\0A\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"track[%u].edit_count = %i\0A\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"duration=%ld time=%ld rate=%f\0A\00", align 1
@.str.70 = private unnamed_addr constant [53 x i8] c"Track %d, edit %d: Invalid edit list media time=%ld\0A\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"enda %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [32 x i8] c"Unknown MOV field order 0x%04x\0A\00", align 1
@.str.73 = private unnamed_addr constant [24 x i8] c"[aax] file checksum == \00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.75 = private unnamed_addr constant [43 x i8] c"[aax] activation_bytes option is missing!\0A\00", align 1
@.str.76 = private unnamed_addr constant [51 x i8] c"[aax] activation_bytes value needs to be 4 bytes!\0A\00", align 1
@.str.77 = private unnamed_addr constant [53 x i8] c"[aax] audible_fixed_key value needs to be 16 bytes!\0A\00", align 1
@.str.78 = private unnamed_addr constant [30 x i8] c"[aax] mismatch in checksums!\0A\00", align 1
@.str.79 = private unnamed_addr constant [37 x i8] c"[aax] error in drm blob decryption!\0A\00", align 1
@.str.80 = private unnamed_addr constant [34 x i8] c"ISO: File Type Major Brand: %.4s\0A\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"major_brand\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"minor_version\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"aaxc\00", align 1
@.str.84 = private unnamed_addr constant [48 x i8] c"[aaxc] audible_key value needs to be 16 bytes!\0A\00", align 1
@.str.85 = private unnamed_addr constant [47 x i8] c"[aaxc] audible_iv value needs to be 16 bytes!\0A\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"ctype=%s\0A\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"stype=%s\0A\00", align 1
@.str.88 = private unnamed_addr constant [13 x i8] c"handler_name\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"Multiple mdhd?\0A\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"Version %d\00", align 1
@.str.91 = private unnamed_addr constant [45 x i8] c"Invalid mdhd time scale %d, defaulting to 1\0A\00", align 1
@.str.92 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.93 = private unnamed_addr constant [36 x i8] c"creation_time is not representable\0A\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.95 = private unnamed_addr constant [45 x i8] c"stream has moof boxes, will look for a mfra\0A\00", align 1
@.str.96 = private unnamed_addr constant [67 x i8] c"found a moof box but failed to read the mfra (may be a live ismv)\0A\00", align 1
@.str.97 = private unnamed_addr constant [68 x i8] c"found a moof box but stream is not seekable, can not look for mfra\0A\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"moof offset %lx\0A\00", align 1
@.str.99 = private unnamed_addr constant [44 x i8] c"doesn't look like mfra (unreasonable size)\0A\00", align 1
@.str.100 = private unnamed_addr constant [40 x i8] c"doesn't look like mfra (size mismatch)\0A\00", align 1
@.str.101 = private unnamed_addr constant [39 x i8] c"doesn't look like mfra (tag mismatch)\0A\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"stream has mfra\0A\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"failed to seek back after looking for mfra\0A\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"found tfra\0A\00", align 1
@.str.105 = private unnamed_addr constant [40 x i8] c"Found duplicated MOOV Atom. Skipped it\0A\00", align 1
@.str.106 = private unnamed_addr constant [45 x i8] c"Invalid mvhd time scale %d, defaulting to 1\0A\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"time scale = %i\0A\00", align 1
@.str.108 = private unnamed_addr constant [72 x i8] c"sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\0A\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"sidx version %u\00", align 1
@.str.110 = private unnamed_addr constant [42 x i8] c"could not find corresponding track id %d\0A\00", align 1
@.str.111 = private unnamed_addr constant [29 x i8] c"Invalid sidx timescale 1/%d\0A\00", align 1
@.str.112 = private unnamed_addr constant [27 x i8] c"sidx contains no segments\0A\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"sidx reference_type 1\00", align 1
@.str.114 = private unnamed_addr constant [22 x i8] c"Duplicated STPS atom\0A\00", align 1
@.str.115 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STPS atom\0A\00", align 1
@.str.116 = private unnamed_addr constant [29 x i8] c"track[%u].stsc.entries = %u\0A\00", align 1
@.str.117 = private unnamed_addr constant [22 x i8] c"Duplicated STSC atom\0A\00", align 1
@.str.118 = private unnamed_addr constant [52 x i8] c"STSC entry %d is invalid (first=%d count=%d id=%d)\0A\00", align 1
@.str.119 = private unnamed_addr constant [30 x i8] c"sc->stsc_data[i+1].first >= 2\00", align 1
@.str.120 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STSC atom\0A\00", align 1
@.str.121 = private unnamed_addr constant [25 x i8] c"invalid STSD entries %d\0A\00", align 1
@.str.122 = private unnamed_addr constant [37 x i8] c"Duplicate stsd found in this track.\0A\00", align 1
@.str.123 = private unnamed_addr constant [21 x i8] c"keyframe_count = %u\0A\00", align 1
@.str.124 = private unnamed_addr constant [22 x i8] c"Duplicated STSS atom\0A\00", align 1
@.str.125 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STSS atom\0A\00", align 1
@.str.126 = private unnamed_addr constant [36 x i8] c"sample_size = %u sample_count = %u\0A\00", align 1
@.str.127 = private unnamed_addr constant [30 x i8] c"Invalid sample field size %u\0A\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"Duplicated STSZ atom\0A\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"STSZ atom truncated\0A\00", align 1
@.str.130 = private unnamed_addr constant [24 x i8] c"Invalid sample size %d\0A\00", align 1
@.str.131 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STSZ atom\0A\00", align 1
@.str.132 = private unnamed_addr constant [29 x i8] c"track[%u].stts.entries = %u\0A\00", align 1
@.str.133 = private unnamed_addr constant [22 x i8] c"Duplicated STTS atom\0A\00", align 1
@.str.134 = private unnamed_addr constant [37 x i8] c"sample_count=%d, sample_duration=%d\0A\00", align 1
@.str.135 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted STTS atom\0A\00", align 1
@.str.136 = private unnamed_addr constant [30 x i8] c"track[%u].sdtp.entries = %ld\0A\00", align 1
@.str.137 = private unnamed_addr constant [22 x i8] c"Duplicated SDTP atom\0A\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.140 = private unnamed_addr constant [42 x i8] c"could not find corresponding track id %u\0A\00", align 1
@.str.141 = private unnamed_addr constant [43 x i8] c"could not find corresponding trex (id %u)\0A\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"frag flags 0x%x\0A\00", align 1
@.str.143 = private unnamed_addr constant [51 x i8] c"stream %d, missing mandatory atoms, broken header\0A\00", align 1
@.str.144 = private unnamed_addr constant [43 x i8] c"stream %d, contradictionary STSC and STCO\0A\00", align 1
@.str.145 = private unnamed_addr constant [107 x i8] c"stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\0A\00", align 1
@.str.146 = private unnamed_addr constant [157 x i8] c"Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\0A\00", align 1
@.str.147 = private unnamed_addr constant [30 x i8] c"stream %d, timescale not set\0A\00", align 1
@.str.148 = private unnamed_addr constant [105 x i8] c"multiple edit list entries, Use -advanced_editlist to correctly decode otherwise a/v desync might occur\0A\00", align 1
@.str.149 = private unnamed_addr constant [51 x i8] c"STSZ sample size %d invalid (too large), ignoring\0A\00", align 1
@.str.150 = private unnamed_addr constant [51 x i8] c"STSZ sample size %d invalid (too small), ignoring\0A\00", align 1
@.str.151 = private unnamed_addr constant [20 x i8] c"wrong sample count\0A\00", align 1
@.str.152 = private unnamed_addr constant [29 x i8] c"Sample size %u is too large\0A\00", align 1
@.str.153 = private unnamed_addr constant [86 x i8] c"AVIndex stream %d, sample %u, offset %lx, dts %ld, size %u, distance %u, keyframe %d\0A\00", align 1
@.str.154 = private unnamed_addr constant [45 x i8] c"Invalid SampleDelta %d in STTS, at %d st:%d\0A\00", align 1
@.str.155 = private unnamed_addr constant [23 x i8] c"error unaligned chunk\0A\00", align 1
@.str.156 = private unnamed_addr constant [16 x i8] c"chunk count %u\0A\00", align 1
@.str.157 = private unnamed_addr constant [47 x i8] c"Zero bytes per frame, but %d samples per frame\00", align 1
@.str.158 = private unnamed_addr constant [22 x i8] c"wrong chunk count %u\0A\00", align 1
@.str.159 = private unnamed_addr constant [72 x i8] c"AVIndex stream %d, chunk %u, offset %lx, dts %ld, size %u, duration %u\0A\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"Cannot allocate index ranges buffer\0A\00", align 1
@.str.161 = private unnamed_addr constant [46 x i8] c"Shifting DTS by %d because of negative CTTS.\0A\00", align 1
@.str.162 = private unnamed_addr constant [67 x i8] c"Processing st: %d, edit list %ld - media time: %ld, duration: %ld\0A\00", align 1
@.str.163 = private unnamed_addr constant [76 x i8] c"st: %d edit list: %ld Missing key frame while searching for timestamp: %ld\0A\00", align 1
@.str.164 = private unnamed_addr constant [72 x i8] c"st: %d edit list %ld Cannot find an index entry before timestamp: %ld.\0A\00", align 1
@.str.165 = private unnamed_addr constant [55 x i8] c"stts: %ld ctts: %ld, ctts_index: %ld, ctts_count: %ld\0A\00", align 1
@.str.166 = private unnamed_addr constant [39 x i8] c"Cannot add CTTS entry %ld - {%ld, %d}\0A\00", align 1
@.str.167 = private unnamed_addr constant [42 x i8] c"skip %d audio samples from curr_cts: %ld\0A\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"drop a frame at curr_cts: %ld @ %ld\0A\00", align 1
@.str.169 = private unnamed_addr constant [41 x i8] c"Cannot reallocate frame duration buffer\0A\00", align 1
@.str.170 = private unnamed_addr constant [24 x i8] c"Cannot add index entry\0A\00", align 1
@.str.171 = private unnamed_addr constant [43 x i8] c"Offset DTS by %ld to make first pts zero.\0A\00", align 1
@.str.172 = private unnamed_addr constant [46 x i8] c"Support for mvhd.timescale = 0 with editlists\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"ctts_index\00", align 1
@.str.175 = private unnamed_addr constant [12 x i8] c"ctts_sample\00", align 1
@.str.176 = private unnamed_addr constant [62 x i8] c"end_index >= 0 && end_index <= st->internal->nb_index_entries\00", align 1
@.str.177 = private unnamed_addr constant [49 x i8] c"Setting codecpar->delay to %d for stream st: %d\0A\00", align 1
@.str.178 = private unnamed_addr constant [4 x i8] c"../\00", align 1
@.str.179 = private unnamed_addr constant [127 x i8] c"Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\0A\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.182 = private unnamed_addr constant [72 x i8] c"Using absolute path on user request, this is a possible security issue\0A\00", align 1
@.str.183 = private unnamed_addr constant [111 x i8] c"Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\0A\00", align 1
@.str.184 = private unnamed_addr constant [42 x i8] c"trun track id unknown, no tfhd was found\0A\00", align 1
@.str.185 = private unnamed_addr constant [50 x i8] c"index_entry_pos <= st->internal->nb_index_entries\00", align 1
@.str.186 = private unnamed_addr constant [23 x i8] c"flags 0x%x entries %u\0A\00", align 1
@.str.187 = private unnamed_addr constant [39 x i8] c"found mfra time %ld, using it for pts\0A\00", align 1
@.str.188 = private unnamed_addr constant [39 x i8] c"found mfra time %ld, using it for dts\0A\00", align 1
@.str.189 = private unnamed_addr constant [39 x i8] c"found sidx time %ld, using it for pts\0A\00", align 1
@.str.190 = private unnamed_addr constant [39 x i8] c"found tfdt time %ld, using it for dts\0A\00", align 1
@.str.191 = private unnamed_addr constant [44 x i8] c"found track end time %ld, using it for dts\0A\00", align 1
@.str.192 = private unnamed_addr constant [25 x i8] c"first sample flags 0x%x\0A\00", align 1
@.str.193 = private unnamed_addr constant [27 x i8] c"Failed to add index entry\0A\00", align 1
@.str.194 = private unnamed_addr constant [113 x i8] c"pts %ld calculated dts %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\0A\00", align 1
@.str.195 = private unnamed_addr constant [86 x i8] c"AVIndex stream %d, sample %d, offset %lx, dts %ld, size %u, distance %d, keyframe %d\0A\00", align 1
@.str.196 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted TRUN atom\0A\00", align 1
@constinit = private unnamed_addr constant [8 x i32] [i32 2, i32 1, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5], align 4
@avpriv_ac3_channel_layout_tab = external local_unnamed_addr constant [8 x i16], align 16
@.str.197 = private unnamed_addr constant [38 x i8] c"Unsupported DTS audio channel layout\0A\00", align 1
@.str.198 = private unnamed_addr constant [23 x i8] c"get_wav_header failed\0A\00", align 1
@.str.199 = private unnamed_addr constant [45 x i8] c"this file requires zlib support compiled in\0A\00", align 1
@.str.200 = private unnamed_addr constant [22 x i8] c"Duplicated SBGP atom\0A\00", align 1
@.str.201 = private unnamed_addr constant [34 x i8] c"reached eof, corrupted SBGP atom\0A\00", align 1
@mov_read_uuid.uuid_isml_manifest = internal constant [16 x i8] c"\A5\D4\0B0\E8\14\11\DD\BA/\08\00 \0C\9Af", align 16
@mov_read_uuid.uuid_xmp = internal constant [16 x i8] c"\BEz\CF\CB\97\A9B\E8\9Cq\99\94\91\E3\AF\AC", align 16
@mov_read_uuid.uuid_spherical = internal constant [16 x i8] c"\FF\CC\82c\F8UJ\93\88\14Xz\02R\1F\DD", align 16
@.str.202 = private unnamed_addr constant [16 x i8] c"systemBitrate=\22\00", align 1
@.str.203 = private unnamed_addr constant [4 x i8] c"xmp\00", align 1
@.str.204 = private unnamed_addr constant [34 x i8] c"Invalid spherical metadata found\0A\00", align 1
@.str.205 = private unnamed_addr constant [31 x i8] c"<GSpherical:StitchingSoftware>\00", align 1
@.str.206 = private unnamed_addr constant [23 x i8] c"<GSpherical:Spherical>\00", align 1
@.str.207 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.208 = private unnamed_addr constant [22 x i8] c"<GSpherical:Stitched>\00", align 1
@.str.209 = private unnamed_addr constant [28 x i8] c"<GSpherical:ProjectionType>\00", align 1
@.str.210 = private unnamed_addr constant [16 x i8] c"equirectangular\00", align 1
@.str.211 = private unnamed_addr constant [24 x i8] c"<GSpherical:StereoMode>\00", align 1
@.str.212 = private unnamed_addr constant [11 x i8] c"left-right\00", align 1
@.str.213 = private unnamed_addr constant [11 x i8] c"top-bottom\00", align 1
@.str.214 = private unnamed_addr constant [39 x i8] c"<GSpherical:InitialViewHeadingDegrees>\00", align 1
@.str.215 = private unnamed_addr constant [37 x i8] c"<GSpherical:InitialViewPitchDegrees>\00", align 1
@.str.216 = private unnamed_addr constant [36 x i8] c"<GSpherical:InitialViewRollDegrees>\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"iTunSMPB\00", align 1
@.str.219 = private unnamed_addr constant [13 x i8] c"%*X %X %X %X\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c"cdec\00", align 1
@.str.221 = private unnamed_addr constant [52 x i8] c"Unhandled or malformed custom metadata of size %ld\0A\00", align 1
@.str.222 = private unnamed_addr constant [56 x i8] c"ignoring 'frma' atom of '%.4s', stream has codec id %d\0A\00", align 1
@.str.223 = private unnamed_addr constant [57 x i8] c"ignoring 'frma' atom of '%.4s', stream format is '%.4s'\0A\00", align 1
@.str.224 = private unnamed_addr constant [44 x i8] c"Ignoring duplicate encryption info in senc\0A\00", align 1
@.str.225 = private unnamed_addr constant [28 x i8] c"Hit EOF while reading senc\0A\00", align 1
@.str.226 = private unnamed_addr constant [22 x i8] c"Missing schm or tenc\0A\00", align 1
@.str.227 = private unnamed_addr constant [42 x i8] c"failed to read the initialization vector\0A\00", align 1
@.str.228 = private unnamed_addr constant [50 x i8] c"hit EOF while reading sub-sample encryption info\0A\00", align 1
@.str.229 = private unnamed_addr constant [44 x i8] c"Ignoring duplicate encryption info in saiz\0A\00", align 1
@.str.230 = private unnamed_addr constant [21 x i8] c"Duplicate saiz atom\0A\00", align 1
@.str.231 = private unnamed_addr constant [47 x i8] c"Ignoring saiz box with non-zero aux_info_type\0A\00", align 1
@.str.232 = private unnamed_addr constant [57 x i8] c"Ignoring saiz box with non-zero aux_info_type_parameter\0A\00", align 1
@.str.233 = private unnamed_addr constant [38 x i8] c"Saw encrypted saiz without schm/tenc\0A\00", align 1
@.str.234 = private unnamed_addr constant [35 x i8] c"Failed to read the auxiliary info\0A\00", align 1
@.str.235 = private unnamed_addr constant [50 x i8] c"Multiple auxiliary info chunks are not supported\0A\00", align 1
@.str.236 = private unnamed_addr constant [83 x i8] c"Failed to seek for auxiliary info, will only parse senc atoms for encryption info\0A\00", align 1
@.str.237 = private unnamed_addr constant [38 x i8] c"Hit EOF while reading auxiliary info\0A\00", align 1
@.str.238 = private unnamed_addr constant [44 x i8] c"Ignoring duplicate encryption info in saio\0A\00", align 1
@.str.239 = private unnamed_addr constant [21 x i8] c"Duplicate saio atom\0A\00", align 1
@.str.240 = private unnamed_addr constant [47 x i8] c"Ignoring saio box with non-zero aux_info_type\0A\00", align 1
@.str.241 = private unnamed_addr constant [57 x i8] c"Ignoring saio box with non-zero aux_info_type_parameter\0A\00", align 1
@.str.242 = private unnamed_addr constant [38 x i8] c"Saw encrypted saio without schm/tenc\0A\00", align 1
@.str.243 = private unnamed_addr constant [28 x i8] c"Hit EOF while reading saio\0A\00", align 1
@.str.244 = private unnamed_addr constant [30 x i8] c"Failed to read the system id\0A\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Failed to read the key id\0A\00", align 1
@.str.246 = private unnamed_addr constant [28 x i8] c"Hit EOF while reading pssh\0A\00", align 1
@.str.247 = private unnamed_addr constant [58 x i8] c"schm boxes are only supported in first sample descriptor\0A\00", align 1
@.str.248 = private unnamed_addr constant [57 x i8] c"tenc atom are only supported in first sample descriptor\0A\00", align 1
@.str.249 = private unnamed_addr constant [34 x i8] c"invalid per-sample IV size value\0A\00", align 1
@.str.250 = private unnamed_addr constant [35 x i8] c"failed to read the default key ID\0A\00", align 1
@.str.251 = private unnamed_addr constant [47 x i8] c"invalid default_constant_IV_size in tenc atom\0A\00", align 1
@.str.252 = private unnamed_addr constant [31 x i8] c"failed to read the default IV\0A\00", align 1
@.str.253 = private unnamed_addr constant [44 x i8] c"STREAMINFO must be first FLACMetadataBlock\0A\00", align 1
@.str.254 = private unnamed_addr constant [45 x i8] c"non-STREAMINFO FLACMetadataBlock(s) ignored\0A\00", align 1
@.str.255 = private unnamed_addr constant [30 x i8] c"Empty stereoscopic video box\0A\00", align 1
@.str.256 = private unnamed_addr constant [28 x i8] c"Unknown st3d mode value %d\0A\00", align 1
@.str.257 = private unnamed_addr constant [27 x i8] c"Empty spherical video box\0A\00", align 1
@.str.258 = private unnamed_addr constant [32 x i8] c"Missing spherical video header\0A\00", align 1
@.str.259 = private unnamed_addr constant [30 x i8] c"Unknown spherical version %d\0A\00", align 1
@.str.260 = private unnamed_addr constant [24 x i8] c"Missing projection box\0A\00", align 1
@.str.261 = private unnamed_addr constant [31 x i8] c"Missing projection header box\0A\00", align 1
@.str.262 = private unnamed_addr constant [31 x i8] c"Unsupported cubemap layout %d\0A\00", align 1
@.str.263 = private unnamed_addr constant [52 x i8] c"Invalid bounding rectangle coordinates %u,%u,%u,%u\0A\00", align 1
@.str.264 = private unnamed_addr constant [29 x i8] c"Unknown projection type: %s\0A\00", align 1
@.str.265 = private unnamed_addr constant [37 x i8] c"unsupported OpusSpecificBox version\0A\00", align 1
@.str.266 = private unnamed_addr constant [38 x i8] c"Empty Mastering Display Metadata box\0A\00", align 1
@.str.267 = private unnamed_addr constant [55 x i8] c"Unsupported Mastering Display Metadata box version %d\0A\00", align 1
@.str.268 = private unnamed_addr constant [31 x i8] c"Empty Content Light Level box\0A\00", align 1
@.str.269 = private unnamed_addr constant [48 x i8] c"Unsupported Content Light Level box version %d\0A\00", align 1
@.str.270 = private unnamed_addr constant [34 x i8] c"Empty VP Codec Configuration box\0A\00", align 1
@.str.271 = private unnamed_addr constant [51 x i8] c"Unsupported VP Codec Configuration box version %d\0A\00", align 1
@.str.272 = private unnamed_addr constant [44 x i8] c"Invalid Mastering Display Color Volume box\0A\00", align 1
@.str.273 = private unnamed_addr constant [36 x i8] c"Empty Content Light Level Info box\0A\00", align 1
@.str.274 = private unnamed_addr constant [125 x i8] c"DOVI in dvcC/dvvC box, version: %d.%d, profile: %d, level: %d, rpu flag: %d, el flag: %d, bl flag: %d, compatibility id: %d\0A\00", align 1
@.str.275 = private unnamed_addr constant [17 x i8] c"premiere_version\00", align 1
@.str.276 = private unnamed_addr constant [18 x i8] c"quicktime_version\00", align 1
@.str.277 = private unnamed_addr constant [13 x i8] c"album_artist\00", align 1
@.str.278 = private unnamed_addr constant [13 x i8] c"account_type\00", align 1
@.str.279 = private unnamed_addr constant [11 x i8] c"account_id\00", align 1
@.str.280 = private unnamed_addr constant [9 x i8] c"category\00", align 1
@.str.281 = private unnamed_addr constant [12 x i8] c"compilation\00", align 1
@.str.282 = private unnamed_addr constant [10 x i8] c"copyright\00", align 1
@.str.283 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.284 = private unnamed_addr constant [5 x i8] c"disc\00", align 1
@.str.285 = private unnamed_addr constant [12 x i8] c"episode_uid\00", align 1
@.str.286 = private unnamed_addr constant [9 x i8] c"firmware\00", align 1
@.str.287 = private unnamed_addr constant [6 x i8] c"genre\00", align 1
@.str.288 = private unnamed_addr constant [9 x i8] c"hd_video\00", align 1
@.str.289 = private unnamed_addr constant [9 x i8] c"keywords\00", align 1
@.str.290 = private unnamed_addr constant [9 x i8] c"synopsis\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"make\00", align 1
@.str.292 = private unnamed_addr constant [6 x i8] c"model\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c"podcast\00", align 1
@.str.294 = private unnamed_addr constant [17 x i8] c"gapless_playback\00", align 1
@.str.295 = private unnamed_addr constant [14 x i8] c"purchase_date\00", align 1
@.str.296 = private unnamed_addr constant [7 x i8] c"rating\00", align 1
@.str.297 = private unnamed_addr constant [18 x i8] c"sort_album_artist\00", align 1
@.str.298 = private unnamed_addr constant [11 x i8] c"sort_album\00", align 1
@.str.299 = private unnamed_addr constant [12 x i8] c"sort_artist\00", align 1
@.str.300 = private unnamed_addr constant [14 x i8] c"sort_composer\00", align 1
@.str.301 = private unnamed_addr constant [10 x i8] c"sort_name\00", align 1
@.str.302 = private unnamed_addr constant [10 x i8] c"sort_show\00", align 1
@.str.303 = private unnamed_addr constant [11 x i8] c"media_type\00", align 1
@.str.304 = private unnamed_addr constant [6 x i8] c"track\00", align 1
@.str.305 = private unnamed_addr constant [11 x i8] c"episode_id\00", align 1
@.str.306 = private unnamed_addr constant [13 x i8] c"episode_sort\00", align 1
@.str.307 = private unnamed_addr constant [8 x i8] c"network\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"show\00", align 1
@.str.309 = private unnamed_addr constant [14 x i8] c"season_number\00", align 1
@.str.310 = private unnamed_addr constant [7 x i8] c"artist\00", align 1
@.str.311 = private unnamed_addr constant [9 x i8] c"producer\00", align 1
@.str.312 = private unnamed_addr constant [6 x i8] c"album\00", align 1
@.str.313 = private unnamed_addr constant [8 x i8] c"chapter\00", align 1
@.str.314 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.315 = private unnamed_addr constant [9 x i8] c"composer\00", align 1
@.str.316 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.317 = private unnamed_addr constant [9 x i8] c"director\00", align 1
@.str.318 = private unnamed_addr constant [11 x i8] c"disclaimer\00", align 1
@.str.319 = private unnamed_addr constant [10 x i8] c"edit_date\00", align 1
@.str.320 = private unnamed_addr constant [16 x i8] c"original_format\00", align 1
@.str.321 = private unnamed_addr constant [9 x i8] c"grouping\00", align 1
@.str.322 = private unnamed_addr constant [14 x i8] c"host_computer\00", align 1
@.str.323 = private unnamed_addr constant [7 x i8] c"lyrics\00", align 1
@.str.324 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.325 = private unnamed_addr constant [16 x i8] c"original_artist\00", align 1
@.str.326 = private unnamed_addr constant [11 x i8] c"performers\00", align 1
@.str.327 = private unnamed_addr constant [22 x i8] c"playback_requirements\00", align 1
@.str.328 = private unnamed_addr constant [16 x i8] c"original_source\00", align 1
@.str.329 = private unnamed_addr constant [9 x i8] c"subtitle\00", align 1
@.str.330 = private unnamed_addr constant [4 x i8] c"URL\00", align 1
@.str.331 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.333 = private unnamed_addr constant [26 x i8] c"Error parsing cover art.\0A\00", align 1
@.str.334 = private unnamed_addr constant [55 x i8] c"The index of 'data' is out of range: %d < 1 or >= %d.\0A\00", align 1
@.str.335 = private unnamed_addr constant [34 x i8] c"UDTA parsing failed retrying raw\0A\00", align 1
@.str.336 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.337 = private unnamed_addr constant [44 x i8] c"Failed to store the number (%d) in string.\0A\00", align 1
@.str.338 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.339 = private unnamed_addr constant [44 x i8] c"Failed to store the number (%u) in string.\0A\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.341 = private unnamed_addr constant [52 x i8] c"Failed to store the float32 number (%f) in string.\0A\00", align 1
@.str.343 = private unnamed_addr constant [6 x i8] c"%s-%s\00", align 1
@.str.344 = private unnamed_addr constant [19 x i8] c"HandBrake %d.%d.%d\00", align 1
@.str.345 = private unnamed_addr constant [6 x i8] c"%d/%d\00", align 1
@ff_id3v1_genre_str = external local_unnamed_addr constant [192 x i8*], align 16
@.str.346 = private unnamed_addr constant [16 x i8] c"loci too short\0A\00", align 1
@.str.347 = private unnamed_addr constant [21 x i8] c"place name too long\0A\00", align 1
@.str.348 = private unnamed_addr constant [50 x i8] c"loci too short (%u bytes left, need at least %d)\0A\00", align 1
@.str.349 = private unnamed_addr constant [15 x i8] c"%+08.4f%+09.4f\00", align 1
@.str.350 = private unnamed_addr constant [4 x i8] c"%+f\00", align 1
@.str.351 = private unnamed_addr constant [4 x i8] c"/%s\00", align 1
@.str.352 = private unnamed_addr constant [27 x i8] c"Unknown cover type: 0x%x.\0A\00", align 1
@.str.353 = private unnamed_addr constant [48 x i8] c"The 'keys' atom with the invalid key count: %u\0A\00", align 1
@.str.354 = private unnamed_addr constant [41 x i8] c"The key# %u in meta has invalid size:%u\0A\00", align 1
@.str.355 = private unnamed_addr constant [18 x i8] c"use_absolute_path\00", align 1
@.str.356 = private unnamed_addr constant [80 x i8] c"allow using absolute path when opening alias, this is a possible security issue\00", align 1
@.str.357 = private unnamed_addr constant [26 x i8] c"seek_streams_individually\00", align 1
@.str.358 = private unnamed_addr constant [51 x i8] c"Seek each stream individually to the closest point\00", align 1
@.str.359 = private unnamed_addr constant [16 x i8] c"ignore_editlist\00", align 1
@.str.360 = private unnamed_addr constant [27 x i8] c"Ignore the edit list atom.\00", align 1
@.str.361 = private unnamed_addr constant [18 x i8] c"advanced_editlist\00", align 1
@.str.362 = private unnamed_addr constant [110 x i8] c"Modify the AVIndex according to the editlists. Use this option to decode in the order specified by the edits.\00", align 1
@.str.363 = private unnamed_addr constant [16 x i8] c"ignore_chapters\00", align 1
@.str.364 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.365 = private unnamed_addr constant [13 x i8] c"use_mfra_for\00", align 1
@.str.366 = private unnamed_addr constant [33 x i8] c"use mfra for fragment timestamps\00", align 1
@.str.367 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.368 = private unnamed_addr constant [4 x i8] c"dts\00", align 1
@.str.369 = private unnamed_addr constant [4 x i8] c"pts\00", align 1
@.str.370 = private unnamed_addr constant [11 x i8] c"export_all\00", align 1
@.str.371 = private unnamed_addr constant [37 x i8] c"Export unrecognized metadata entries\00", align 1
@.str.372 = private unnamed_addr constant [11 x i8] c"export_xmp\00", align 1
@.str.373 = private unnamed_addr constant [25 x i8] c"Export full XMP metadata\00", align 1
@.str.374 = private unnamed_addr constant [17 x i8] c"activation_bytes\00", align 1
@.str.375 = private unnamed_addr constant [35 x i8] c"Secret bytes for Audible AAX files\00", align 1
@.str.376 = private unnamed_addr constant [12 x i8] c"audible_key\00", align 1
@.str.377 = private unnamed_addr constant [35 x i8] c"AES-128 Key for Audible AAXC files\00", align 1
@.str.378 = private unnamed_addr constant [11 x i8] c"audible_iv\00", align 1
@.str.379 = private unnamed_addr constant [34 x i8] c"AES-128 IV for Audible AAXC files\00", align 1
@.str.380 = private unnamed_addr constant [18 x i8] c"audible_fixed_key\00", align 1
@.str.381 = private unnamed_addr constant [46 x i8] c"Fixed key used for handling Audible AAX files\00", align 1
@.str.382 = private unnamed_addr constant [33 x i8] c"77214d4b196a87cd520045fd20a51d67\00", align 1
@.str.383 = private unnamed_addr constant [15 x i8] c"decryption_key\00", align 1
@.str.384 = private unnamed_addr constant [31 x i8] c"The media decryption key (hex)\00", align 1
@.str.385 = private unnamed_addr constant [13 x i8] c"enable_drefs\00", align 1
@.str.386 = private unnamed_addr constant [31 x i8] c"Enable external track support.\00", align 1
@mov_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.356, i32 0, i32 0), i32 172, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.358, i32 0, i32 0), i32 188, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.360, i32 0, i32 0), i32 176, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.362, i32 0, i32 0), i32 180, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.364, i32 0, i32 0), i32 184, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.366, i32 0, i32 0), i32 224, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 2.000000e+00, i32 18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.367, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0.000000e+00, double 0.000000e+00, i32 18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.368, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.369, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.365, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.371, i32 0, i32 0), i32 200, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.373, i32 0, i32 0), i32 204, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.375, i32 0, i32 0), i32 304, i32 7, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.377, i32 0, i32 0), i32 336, i32 7, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.379, i32 0, i32 0), i32 352, i32 7, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.381, i32 0, i32 0), i32 320, i32 7, { i8* } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.382, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.384, i32 0, i32 0), i32 376, i32 7, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.386, i32 0, i32 0), i32 388, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.388 = private unnamed_addr constant [68 x i8] c"Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\0A\00", align 1
@.str.390 = private unnamed_addr constant [43 x i8] c"Invalid decryption key len %d expected %d\0A\00", align 1
@.str.391 = private unnamed_addr constant [22 x i8] c"error reading header\0A\00", align 1
@.str.392 = private unnamed_addr constant [21 x i8] c"moov atom not found\0A\00", align 1
@.str.393 = private unnamed_addr constant [26 x i8] c"on_parse_exit_offset=%ld\0A\00", align 1
@.str.396 = private unnamed_addr constant [9 x i8] c"timecode\00", align 1
@.str.397 = private unnamed_addr constant [37 x i8] c"Forcing full parsing for mp3 stream\0A\00", align 1
@.str.398 = private unnamed_addr constant [51 x i8] c"Overflow during bit rate calculation %ld * 8 * %d\0A\00", align 1
@.str.399 = private unnamed_addr constant [39 x i8] c"Referenced QT chapter track not found\0A\00", align 1
@.str.400 = private unnamed_addr constant [32 x i8] c"Failed to retrieve first frame\0A\00", align 1
@.str.401 = private unnamed_addr constant [57 x i8] c"ignoring stream duration which is shorter than chapters\0A\00", align 1
@.str.402 = private unnamed_addr constant [30 x i8] c"Chapter %d not found in file\0A\00", align 1
@.str.403 = private unnamed_addr constant [21 x i8] c"%02d:%02d:%02d%c%02d\00", align 1
@.str.404 = private unnamed_addr constant [13 x i8] c"size: %dx%d\0A\00", align 1
@.str.405 = private unnamed_addr constant [10 x i8] c"palette: \00", align 1
@.str.406 = private unnamed_addr constant [7 x i8] c"%06x%s\00", align 1
@.str.407 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.408 = private unnamed_addr constant [39 x i8] c"stream %d, offset 0x%lx: partial file\0A\00", align 1
@.str.409 = private unnamed_addr constant [63 x i8] c"Nonkey frame from stream %d discarded due to AVDISCARD_NONKEY\0A\00", align 1
@.str.410 = private unnamed_addr constant [33 x i8] c"Cannot append palette to packet\0A\00", align 1
@.str.411 = private unnamed_addr constant [31 x i8] c"stream %d, sample %d, dts %ld\0A\00", align 1
@.str.412 = private unnamed_addr constant [38 x i8] c"root atom offset 0x%lx: partial file\0A\00", align 1
@.str.413 = private unnamed_addr constant [30 x i8] c"read fragments, offset 0x%lx\0A\00", align 1
@.str.414 = private unnamed_addr constant [46 x i8] c"sc->stsc_data[index].first <= sc->chunk_count\00", align 1
@.str.415 = private unnamed_addr constant [30 x i8] c"saiz atom found without saio\0A\00", align 1
@.str.416 = private unnamed_addr constant [30 x i8] c"saio atom found without saiz\0A\00", align 1
@.str.417 = private unnamed_addr constant [48 x i8] c"Incorrect number of samples in encryption info\0A\00", align 1
@.str.418 = private unnamed_addr constant [48 x i8] c"Only the 'cenc' encryption scheme is supported\0A\00", align 1
@.str.419 = private unnamed_addr constant [45 x i8] c"subsample size exceeds the packet size left\0A\00", align 1
@.str.420 = private unnamed_addr constant [50 x i8] c"leftover packet bytes after subsample processing\0A\00", align 1
@.str.421 = private unnamed_addr constant [37 x i8] c"stream %d, timestamp %ld, sample %d\0A\00", align 1
@.str.422 = private unnamed_addr constant [28 x i8] c"stream %d, found sample %d\0A\00", align 1
@.str.423 = private unnamed_addr constant [18 x i8] c"next == (int)next\00", align 1
@.str.424 = private unnamed_addr constant [17 x i8] c"frag_stream_info\00", align 1
@switch.table.mov_read_ddts = private unnamed_addr constant [3 x i32] [i32 512, i32 1024, i32 2048], align 4
@switch.table.mov_read_st3d = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 1], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_mov_read_stsd_entries(%struct.MOVContext*, %struct.AVIOContext*, i32) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  %5 = alloca [32 x i8], align 1
  %6 = alloca [32 x i8], align 1
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 2505) #11
  tail call void @abort() #12
  unreachable

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = add i32 %10, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %17
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 3
  %21 = bitcast i8** %20 to %struct.MOVStreamContext**
  %22 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %21, align 8
  %23 = icmp sgt i32 %2, 0
  br i1 %23, label %24, label %554

24:                                               ; preds = %13
  %25 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %26 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 19
  %27 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 62
  %28 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 40
  %29 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 44
  %30 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 71
  %31 = bitcast %struct.AVFormatContext** %7 to i8**
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  %34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 11
  %35 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 41
  %36 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 12
  %37 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 63
  %38 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 37
  %39 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 38
  %40 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 28
  %41 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 23
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %43 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 31
  %44 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 49, i64 0
  %45 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 50
  %46 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 12
  %47 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %46, i64 0, i32 0
  %48 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 12, i32 1
  %49 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 2
  %50 = bitcast %struct.AVRational* %46 to i64*
  %51 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 46
  %52 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 47
  %53 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 59
  %54 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 60
  %55 = zext i32 %2 to i64
  br label %56

56:                                               ; preds = %549, %24
  %57 = phi i64 [ 0, %24 ], [ %552, %549 ]
  %58 = load i32, i32* %25, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %554

60:                                               ; preds = %56
  %61 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %62 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %63 = zext i32 %62 to i64
  %64 = call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %65 = icmp ugt i32 %62, 15
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %68 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %69 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  br label %75

70:                                               ; preds = %60
  %71 = icmp ult i32 %62, 8
  br i1 %71, label %72, label %75

72:                                               ; preds = %70
  %73 = zext i32 %62 to i64
  %74 = load i8*, i8** %31, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 %73) #11
  br label %561

75:                                               ; preds = %70, %66
  %76 = phi i32 [ %69, %66 ], [ 1, %70 ]
  %77 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %78 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %77, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %81 = add i64 %61, %63
  %82 = sub i64 %81, %80
  %83 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), i32 %64) #11
  %84 = icmp eq i32 %79, 0
  %85 = icmp eq i32 %79, %64
  %86 = or i1 %84, %85
  br i1 %86, label %104, label %87

87:                                               ; preds = %75
  %88 = icmp eq i32 %79, 2016499265
  %89 = icmp eq i32 %64, 1886737985
  %90 = and i1 %89, %88
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  switch i32 %79, label %92 [
    i32 1886418532, label %104
    i32 1885566564, label %104
    i32 1852010593, label %104
    i32 1751347297, label %104
  ]

92:                                               ; preds = %91
  %93 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %94 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %93, i64 0, i32 22
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 0
  %97 = bitcast %struct.AVFormatContext* %93 to i8*
  br i1 %96, label %100, label %98

98:                                               ; preds = %92
  %99 = icmp eq i32 %83, %95
  br i1 %99, label %104, label %102

100:                                              ; preds = %92
  %101 = icmp eq i32 %79, 1734701162
  br i1 %101, label %104, label %102

102:                                              ; preds = %100, %98
  call void (i8*, i32, i8*, ...) @av_log(i8* %97, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0)) #11
  %103 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %82) #11
  br label %549

104:                                              ; preds = %91, %91, %91, %91, %98, %100, %75, %87
  %105 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %106 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %105, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  %109 = trunc i64 %57 to i32
  %110 = select i1 %108, i32 %109, i32 -1
  store i32 %110, i32* %28, align 4
  store i32 %76, i32* %29, align 8
  store i32 %64, i32* %30, align 8
  %111 = call fastcc i32 @mov_codec_id(%struct.AVStream* %19, i32 %64)
  %112 = load i8*, i8** %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %32, i8 0, i64 32, i1 false)
  %113 = call i8* @av_fourcc_make_string(i8* nonnull %32, i32 %64) #11
  %114 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %115 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 56, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 %63, i8* %113, i32 %116) #11
  %117 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %118 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %117, i64 0, i32 1
  store i32 %111, i32* %118, align 4
  %119 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %120 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  switch i32 %121, label %403 [
    i32 0, label %122
    i32 1, label %242
  ]

122:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 32, i1 false) #11
  %123 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %124 = add nsw i64 %123, -16
  %125 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %126 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %127 = call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %42, i8 0, i64 32, i1 false) #11
  %128 = call i8* @av_fourcc_make_string(i8* nonnull %42, i32 %127) #11
  %129 = call i32 @av_dict_set(%struct.AVDictionary** %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %128, i32 0) #11
  %130 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %131 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %132 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %133 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %134 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %133, i64 0, i32 11
  store i32 %132, i32* %134, align 8
  %135 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %136 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %137 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %136, i64 0, i32 12
  store i32 %135, i32* %137, align 4
  %138 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %139 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %140 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %141 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %142 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %143 = icmp ult i32 %142, 31
  %144 = select i1 %143, i32 %142, i32 31
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %191

146:                                              ; preds = %122, %187
  %147 = phi i32 [ %189, %187 ], [ 0, %122 ]
  %148 = phi i8* [ %188, %187 ], [ %33, %122 ]
  %149 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %150 = trunc i32 %149 to i8
  %151 = icmp ult i8* %148, %43
  br i1 %151, label %152, label %187

152:                                              ; preds = %146
  %153 = and i32 %149, 255
  %154 = icmp ult i32 %153, 128
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  %156 = getelementptr inbounds i8, i8* %148, i64 1
  store i8 %150, i8* %148, align 1
  br label %187

157:                                              ; preds = %152
  %158 = add nsw i32 %153, -128
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [128 x i32], [128 x i32]* @mac_to_unicode, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = or i32 %161, 1
  %163 = call i32 @llvm.ctlz.i32(i32 %162, i1 true) #11, !range !2
  %164 = sub nuw nsw i32 35, %163
  %165 = udiv i32 %164, 5
  %166 = mul nuw nsw i32 %165, 6
  %167 = add nsw i32 %166, -6
  %168 = lshr i32 256, %165
  %169 = sub nsw i32 0, %168
  %170 = lshr i32 %161, %167
  %171 = or i32 %170, %169
  %172 = trunc i32 %171 to i8
  store i8 %172, i8* %148, align 1
  %173 = getelementptr inbounds i8, i8* %148, i64 1
  %174 = icmp sgt i32 %167, 5
  br i1 %174, label %175, label %187

175:                                              ; preds = %157
  %176 = add nsw i32 %166, -12
  %177 = icmp ult i8* %173, %43
  br i1 %177, label %178, label %184

178:                                              ; preds = %175
  %179 = lshr i32 %161, %176
  %180 = trunc i32 %179 to i8
  %181 = and i8 %180, 63
  %182 = or i8 %181, -128
  %183 = getelementptr inbounds i8, i8* %148, i64 2
  store i8 %182, i8* %173, align 1
  br label %184

184:                                              ; preds = %178, %175
  %185 = phi i8* [ %183, %178 ], [ %173, %175 ]
  %186 = icmp sgt i32 %176, 5
  br i1 %186, label %563, label %187

187:                                              ; preds = %613, %184, %572, %584, %596, %608, %157, %155, %146
  %188 = phi i8* [ %148, %146 ], [ %156, %155 ], [ %173, %157 ], [ %185, %184 ], [ %573, %572 ], [ %585, %584 ], [ %597, %596 ], [ %609, %608 ], [ %619, %613 ]
  %189 = add nuw nsw i32 %147, 1
  %190 = icmp eq i32 %189, %144
  br i1 %190, label %191, label %146

191:                                              ; preds = %187, %122
  %192 = phi i8* [ %33, %122 ], [ %188, %187 ]
  store i8 0, i8* %192, align 1
  br i1 %143, label %193, label %197

193:                                              ; preds = %191
  %194 = xor i32 %144, 31
  %195 = zext i32 %194 to i64
  %196 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %195) #11
  br label %197

197:                                              ; preds = %193, %191
  %198 = load i8, i8* %33, align 16
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %197
  %201 = call i32 @av_dict_set(%struct.AVDictionary** %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i8* nonnull %33, i32 0) #11
  br label %202

202:                                              ; preds = %200, %197
  %203 = call i32 @bcmp(i8* nonnull %33, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i64 25) #11
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %216

205:                                              ; preds = %202
  %206 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %207 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %206, i64 0, i32 2
  store i32 808596553, i32* %207, align 8
  %208 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %209 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %208, i64 0, i32 11
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, -2
  store i32 %211, i32* %209, align 8
  %212 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %213 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %212, i64 0, i32 12
  %214 = load i32, i32* %213, align 4
  %215 = and i32 %214, -2
  store i32 %215, i32* %213, align 4
  br label %216

216:                                              ; preds = %205, %202
  %217 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %218 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %217, i64 0, i32 2
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 859189832
  br i1 %220, label %221, label %226

221:                                              ; preds = %216
  %222 = call i32 @bcmp(i8* nonnull %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i64 13) #11
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %221
  %225 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %217, i64 0, i32 1
  store i32 21, i32* %225, align 4
  br label %226

226:                                              ; preds = %224, %221, %216
  %227 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %228 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %229 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %228, i64 0, i32 7
  store i32 %227, i32* %229, align 8
  %230 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 %124, i32 0) #11
  %231 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %232 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %231, i64 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = call i32 @ff_get_qtpalette(i32 %233, %struct.AVIOContext* %1, i32* %44) #11
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %226
  %237 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %238 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %237, i64 0, i32 7
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 31
  store i32 %240, i32* %238, align 8
  store i32 1, i32* %45, align 4
  br label %241

241:                                              ; preds = %226, %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42)
  br label %513

242:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33)
  %243 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %244 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %245 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %244, i64 0, i32 29
  %246 = load %struct.AVDictionary*, %struct.AVDictionary** %245, align 8
  %247 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %246, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 1) #11
  %248 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %249 = call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 32, i1 false) #11
  %250 = call i8* @av_fourcc_make_string(i8* nonnull %33, i32 %249) #11
  %251 = call i32 @av_dict_set(%struct.AVDictionary** %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %250, i32 0) #11
  %252 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %253 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %254 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %253, i64 0, i32 22
  store i32 %252, i32* %254, align 8
  %255 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %256 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %257 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %256, i64 0, i32 7
  store i32 %255, i32* %257, align 8
  %258 = load i8*, i8** %31, align 8
  %259 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %260 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %259, i64 0, i32 22
  %261 = load i32, i32* %260, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i32 %261) #11
  %262 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %263 = trunc i32 %262 to i16
  store i16 %263, i16* %35, align 8
  %264 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %265 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %266 = lshr i32 %265, 16
  %267 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %268 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %267, i64 0, i32 23
  store i32 %266, i32* %268, align 4
  %269 = load i8*, i8** %31, align 8
  %270 = and i32 %243, 65535
  %271 = load i32, i32* %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %269, i32 56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 %270, i32 %271) #11
  %272 = load i32, i32* %36, align 8
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %286, label %274

274:                                              ; preds = %242
  %275 = icmp eq %struct.AVDictionaryEntry* %247, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %274
  %277 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %247, i64 0, i32 1
  %278 = load i8*, i8** %277, align 8
  %279 = call i8* @strstr(i8* %278, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #13
  %280 = icmp eq i8* %279, null
  br i1 %280, label %281, label %286

281:                                              ; preds = %276, %274
  %282 = load i32, i32* %37, align 8
  %283 = icmp ne i32 %282, 0
  %284 = icmp eq i32 %270, 0
  %285 = or i1 %284, %283
  br i1 %285, label %333, label %286

286:                                              ; preds = %281, %276, %242
  %287 = trunc i32 %243 to i16
  switch i16 %287, label %333 [
    i16 1, label %319
    i16 2, label %288
    i16 0, label %326
  ]

288:                                              ; preds = %286
  %289 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %290 = call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %291 = bitcast i64 %290 to double
  %292 = fptosi double %291 to i32
  %293 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %294 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %293, i64 0, i32 23
  store i32 %292, i32* %294, align 4
  %295 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %296 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %297 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %296, i64 0, i32 22
  store i32 %295, i32* %297, align 8
  %298 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %299 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %300 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %301 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %300, i64 0, i32 7
  store i32 %299, i32* %301, align 8
  %302 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %303 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %303, i32* %38, align 8
  %304 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %304, i32* %39, align 4
  %305 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %306 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %305, i64 0, i32 2
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, 1835233388
  br i1 %308, label %309, label %333

309:                                              ; preds = %288
  %310 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %305, i64 0, i32 7
  %311 = load i32, i32* %310, align 8
  %312 = and i32 %302, 1
  %313 = and i32 %302, 2
  %314 = shl i32 %302, 29
  %315 = ashr i32 %314, 31
  %316 = call i32 @ff_get_pcm_codec_id(i32 %311, i32 %312, i32 %313, i32 %315) #11
  %317 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %318 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %317, i64 0, i32 1
  store i32 %316, i32* %318, align 4
  br label %333

319:                                              ; preds = %286
  %320 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %320, i32* %39, align 4
  %321 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %322 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %322, i32* %38, align 8
  %323 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %324 = load i16, i16* %35, align 8
  %325 = icmp eq i16 %324, -2
  br i1 %325, label %333, label %326

326:                                              ; preds = %319, %286
  %327 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %328 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %327, i64 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = and i32 %329, -2
  %331 = icmp eq i32 %330, 86016
  br i1 %331, label %332, label %333

332:                                              ; preds = %326
  store i32 1, i32* %40, align 4
  br label %333

333:                                              ; preds = %332, %326, %319, %309, %288, %286, %281
  %334 = load i32, i32* %30, align 8
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %348

336:                                              ; preds = %333
  %337 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %338 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %337, i64 0, i32 7
  %339 = load i32, i32* %338, align 8
  switch i32 %339, label %348 [
    i32 8, label %340
    i32 16, label %344
  ]

340:                                              ; preds = %336
  %341 = call fastcc i32 @mov_codec_id(%struct.AVStream* %19, i32 544694642) #11
  %342 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %343 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %342, i64 0, i32 1
  store i32 %341, i32* %343, align 4
  br label %348

344:                                              ; preds = %336
  %345 = call fastcc i32 @mov_codec_id(%struct.AVStream* %19, i32 1936684916) #11
  %346 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %347 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %346, i64 0, i32 1
  store i32 %345, i32* %347, align 4
  br label %348

348:                                              ; preds = %344, %340, %336, %333
  %349 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %350 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %349, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  switch i32 %351, label %382 [
    i32 65540, label %352
    i32 65541, label %352
    i32 65536, label %357
    i32 65537, label %357
    i32 86025, label %367
    i32 86026, label %372
    i32 69632, label %376
    i32 86034, label %381
  ]

352:                                              ; preds = %348, %348
  %353 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %349, i64 0, i32 7
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 16
  br i1 %355, label %356, label %382

356:                                              ; preds = %352
  store i32 65537, i32* %350, align 4
  br label %382

357:                                              ; preds = %348, %348
  %358 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %349, i64 0, i32 7
  %359 = load i32, i32* %358, align 8
  switch i32 %359, label %382 [
    i32 8, label %360
    i32 24, label %361
    i32 32, label %364
  ]

360:                                              ; preds = %357
  store i32 65540, i32* %350, align 4
  br label %382

361:                                              ; preds = %357
  %362 = icmp eq i32 %351, 65537
  %363 = select i1 %362, i32 65549, i32 65548
  store i32 %363, i32* %350, align 4
  br label %382

364:                                              ; preds = %357
  %365 = icmp eq i32 %351, 65537
  %366 = select i1 %365, i32 65545, i32 65544
  store i32 %366, i32* %350, align 4
  br label %382

367:                                              ; preds = %348
  store i32 6, i32* %39, align 4
  %368 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %369 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %368, i64 0, i32 22
  %370 = load i32, i32* %369, align 8
  %371 = shl nsw i32 %370, 1
  store i32 %371, i32* %38, align 8
  br label %382

372:                                              ; preds = %348
  store i32 6, i32* %39, align 4
  %373 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %374 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %373, i64 0, i32 22
  %375 = load i32, i32* %374, align 8
  store i32 %375, i32* %38, align 8
  br label %382

376:                                              ; preds = %348
  store i32 64, i32* %39, align 4
  %377 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %378 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %377, i64 0, i32 22
  %379 = load i32, i32* %378, align 8
  %380 = mul nsw i32 %379, 34
  store i32 %380, i32* %38, align 8
  br label %382

381:                                              ; preds = %348
  store i32 160, i32* %39, align 4
  store i32 33, i32* %38, align 8
  br label %382

382:                                              ; preds = %381, %376, %372, %367, %364, %361, %360, %357, %356, %352, %348
  %383 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %384 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %383, i64 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = call i32 @av_get_bits_per_sample(i32 %385) #11
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %382
  %389 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %390 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %389, i64 0, i32 7
  store i32 %386, i32* %390, align 8
  %391 = ashr i32 %386, 3
  %392 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %393 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %392, i64 0, i32 22
  %394 = load i32, i32* %393, align 8
  %395 = mul nsw i32 %394, %391
  store i32 %395, i32* %41, align 4
  br label %396

396:                                              ; preds = %382, %388
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33)
  %397 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %398 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %397, i64 0, i32 23
  %399 = load i32, i32* %398, align 4
  %400 = icmp slt i32 %399, 0
  br i1 %400, label %401, label %513

401:                                              ; preds = %396
  %402 = load i8*, i8** %31, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %402, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 %399) #11
  br label %561

403:                                              ; preds = %104
  %404 = icmp eq i32 %121, 3
  %405 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %406 = sub i64 %61, %405
  %407 = add i64 %406, %63
  %408 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %409 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %408, i64 0, i32 2
  %410 = load i32, i32* %409, align 8
  br i1 %404, label %411, label %423

411:                                              ; preds = %403
  %412 = icmp eq i32 %410, 1932816493
  br i1 %412, label %416, label %413

413:                                              ; preds = %411
  %414 = call i32 @mov_read_glbl(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 0, i64 %407) #11
  %415 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  br label %416

416:                                              ; preds = %411, %413
  %417 = phi %struct.AVCodecParameters* [ %408, %411 ], [ %415, %413 ]
  %418 = load i32, i32* %51, align 8
  %419 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %417, i64 0, i32 11
  store i32 %418, i32* %419, align 8
  %420 = load i32, i32* %52, align 4
  %421 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %422 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %421, i64 0, i32 12
  store i32 %420, i32* %422, align 4
  br label %513

423:                                              ; preds = %403
  %424 = icmp eq i32 %410, 1684237684
  br i1 %424, label %425, label %511

425:                                              ; preds = %423
  %426 = add i64 %407, 2147483648
  %427 = icmp ugt i64 %426, 4294967295
  br i1 %427, label %561, label %428

428:                                              ; preds = %425
  %429 = trunc i64 %407 to i32
  %430 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %431 = call i32 @ff_get_extradata(%struct.AVFormatContext* %430, %struct.AVCodecParameters* %408, %struct.AVIOContext* %1, i32 %429) #11
  %432 = icmp slt i32 %431, 0
  br i1 %432, label %561, label %433

433:                                              ; preds = %428
  %434 = icmp sgt i64 %407, 16
  br i1 %434, label %435, label %513

435:                                              ; preds = %433
  %436 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %21, align 8
  %437 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %438 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %437, i64 0, i32 3
  %439 = load i8*, i8** %438, align 8
  %440 = getelementptr inbounds i8, i8* %439, i64 4
  %441 = bitcast i8* %440 to i32*
  %442 = load i32, i32* %441, align 1
  %443 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %442) #14, !srcloc !3
  %444 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %436, i64 0, i32 52
  store i32 %443, i32* %444, align 8
  %445 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %446 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %445, i64 0, i32 3
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 8
  %449 = bitcast i8* %448 to i32*
  %450 = load i32, i32* %449, align 1
  %451 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %450) #14, !srcloc !3
  store i32 %451, i32* %47, align 8
  %452 = load i8*, i8** %446, align 8
  %453 = getelementptr inbounds i8, i8* %452, i64 12
  %454 = bitcast i8* %453 to i32*
  %455 = load i32, i32* %454, align 1
  %456 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %455) #14, !srcloc !3
  store i32 %456, i32* %48, align 4
  %457 = load %struct.AVCodecContext*, %struct.AVCodecContext** %49, align 8
  %458 = load i64, i64* %50, align 8
  %459 = lshr i64 %458, 32
  %460 = shl i64 %458, 32
  %461 = or i64 %460, %459
  %462 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %457, i64 0, i32 17
  %463 = bitcast %struct.AVRational* %462 to i64*
  store i64 %461, i64* %463, align 4
  %464 = icmp sgt i64 %407, 30
  br i1 %464, label %465, label %513

465:                                              ; preds = %435
  %466 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %467 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %466, i64 0, i32 3
  %468 = load i8*, i8** %467, align 8
  %469 = getelementptr inbounds i8, i8* %468, i64 22
  %470 = bitcast i8* %469 to i32*
  %471 = load i32, i32* %470, align 1
  %472 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %471) #14, !srcloc !3
  %473 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 1701667182) #14, !srcloc !3
  %474 = icmp eq i32 %472, %473
  br i1 %474, label %475, label %513

475:                                              ; preds = %465
  %476 = getelementptr inbounds i8, i8* %468, i64 18
  %477 = bitcast i8* %476 to i32*
  %478 = load i32, i32* %477, align 1
  %479 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %478) #14, !srcloc !3
  %480 = zext i32 %479 to i64
  %481 = add nuw nsw i64 %480, 18
  %482 = icmp sgt i64 %481, %407
  br i1 %482, label %513, label %483

483:                                              ; preds = %475
  %484 = getelementptr inbounds i8, i8* %468, i64 26
  %485 = bitcast i8* %484 to i16*
  %486 = load i16, i16* %485, align 1
  %487 = call i16 @llvm.bswap.i16(i16 %486) #11
  %488 = zext i16 %487 to i32
  %489 = icmp eq i16 %486, 0
  br i1 %489, label %513, label %490

490:                                              ; preds = %483
  %491 = add nuw nsw i32 %488, 30
  %492 = zext i32 %491 to i64
  %493 = icmp slt i64 %407, %492
  br i1 %493, label %513, label %494

494:                                              ; preds = %490
  %495 = getelementptr inbounds i8, i8* %468, i64 30
  %496 = load i8, i8* %495, align 1
  %497 = icmp eq i8 %496, 0
  br i1 %497, label %513, label %498

498:                                              ; preds = %494
  %499 = add nuw nsw i32 %488, 1
  %500 = zext i32 %499 to i64
  %501 = call noalias i8* @av_malloc(i64 %500) #11
  %502 = icmp eq i8* %501, null
  br i1 %502, label %561, label %503

503:                                              ; preds = %498
  %504 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %505 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %504, i64 0, i32 3
  %506 = load i8*, i8** %505, align 8
  %507 = getelementptr inbounds i8, i8* %506, i64 30
  %508 = zext i16 %487 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %501, i8* align 1 %507, i64 %508, i1 false) #11
  %509 = getelementptr inbounds i8, i8* %501, i64 %508
  store i8 0, i8* %509, align 1
  %510 = call i32 @av_dict_set(%struct.AVDictionary** %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i8* nonnull %501, i32 8) #11
  br label %513

511:                                              ; preds = %423
  %512 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %407) #11
  br label %513

513:                                              ; preds = %483, %490, %494, %503, %465, %475, %435, %511, %433, %396, %416, %241
  %514 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %515 = sub i64 %61, %514
  %516 = add i64 %515, %63
  %517 = icmp sgt i64 %516, 8
  br i1 %517, label %518, label %521

518:                                              ; preds = %513
  %519 = call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 1685288051, i64 %516)
  %520 = icmp slt i32 %519, 0
  br i1 %520, label %561, label %525

521:                                              ; preds = %513
  %522 = icmp sgt i64 %516, 0
  br i1 %522, label %523, label %525

523:                                              ; preds = %521
  %524 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %516) #11
  br label %525

525:                                              ; preds = %521, %523, %518
  %526 = load i8**, i8*** %53, align 8
  %527 = icmp eq i8** %526, null
  br i1 %527, label %549, label %528

528:                                              ; preds = %525
  %529 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %530 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %529, i64 0, i32 3
  %531 = load i8*, i8** %530, align 8
  %532 = icmp eq i8* %531, null
  br i1 %532, label %549, label %533

533:                                              ; preds = %528
  %534 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %529, i64 0, i32 4
  %535 = load i32, i32* %534, align 8
  %536 = load i32*, i32** %54, align 8
  %537 = getelementptr inbounds i32, i32* %536, i64 %57
  store i32 %535, i32* %537, align 4
  %538 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %539 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %538, i64 0, i32 3
  %540 = bitcast i8** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = load i8**, i8*** %53, align 8
  %543 = getelementptr inbounds i8*, i8** %542, i64 %57
  %544 = bitcast i8** %543 to i64*
  store i64 %541, i64* %544, align 8
  %545 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %546 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %545, i64 0, i32 3
  store i8* null, i8** %546, align 8
  %547 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %548 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %547, i64 0, i32 4
  store i32 0, i32* %548, align 8
  br label %549

549:                                              ; preds = %533, %525, %528, %102
  %550 = load i32, i32* %27, align 4
  %551 = add nsw i32 %550, 1
  store i32 %551, i32* %27, align 4
  %552 = add nuw nsw i64 %57, 1
  %553 = icmp eq i64 %552, %55
  br i1 %553, label %554, label %56

554:                                              ; preds = %56, %549, %13
  %555 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %556 = load i32, i32* %555, align 8
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %561, label %558

558:                                              ; preds = %554
  %559 = bitcast %struct.AVFormatContext** %7 to i8**
  %560 = load i8*, i8** %559, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %560, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %561

561:                                              ; preds = %498, %428, %425, %518, %72, %401, %554, %558
  %562 = phi i32 [ -541478725, %558 ], [ 0, %554 ], [ -1094995529, %72 ], [ -1094995529, %401 ], [ %519, %518 ], [ -12, %425 ], [ %431, %428 ], [ -12, %498 ]
  ret i32 %562

563:                                              ; preds = %184
  %564 = add nsw i32 %166, -18
  %565 = icmp ult i8* %185, %43
  br i1 %565, label %566, label %572

566:                                              ; preds = %563
  %567 = lshr i32 %161, %564
  %568 = trunc i32 %567 to i8
  %569 = and i8 %568, 63
  %570 = or i8 %569, -128
  %571 = getelementptr inbounds i8, i8* %185, i64 1
  store i8 %570, i8* %185, align 1
  br label %572

572:                                              ; preds = %566, %563
  %573 = phi i8* [ %571, %566 ], [ %185, %563 ]
  %574 = icmp sgt i32 %564, 5
  br i1 %574, label %575, label %187

575:                                              ; preds = %572
  %576 = add nsw i32 %166, -24
  %577 = icmp ult i8* %573, %43
  br i1 %577, label %578, label %584

578:                                              ; preds = %575
  %579 = lshr i32 %161, %576
  %580 = trunc i32 %579 to i8
  %581 = and i8 %580, 63
  %582 = or i8 %581, -128
  %583 = getelementptr inbounds i8, i8* %573, i64 1
  store i8 %582, i8* %573, align 1
  br label %584

584:                                              ; preds = %578, %575
  %585 = phi i8* [ %583, %578 ], [ %573, %575 ]
  %586 = icmp sgt i32 %576, 5
  br i1 %586, label %587, label %187

587:                                              ; preds = %584
  %588 = add nsw i32 %166, -30
  %589 = icmp ult i8* %585, %43
  br i1 %589, label %590, label %596

590:                                              ; preds = %587
  %591 = lshr i32 %161, %588
  %592 = trunc i32 %591 to i8
  %593 = and i8 %592, 63
  %594 = or i8 %593, -128
  %595 = getelementptr inbounds i8, i8* %585, i64 1
  store i8 %594, i8* %585, align 1
  br label %596

596:                                              ; preds = %590, %587
  %597 = phi i8* [ %595, %590 ], [ %585, %587 ]
  %598 = icmp sgt i32 %588, 5
  br i1 %598, label %599, label %187

599:                                              ; preds = %596
  %600 = add nsw i32 %166, -36
  %601 = icmp ult i8* %597, %43
  br i1 %601, label %602, label %608

602:                                              ; preds = %599
  %603 = lshr i32 %161, %600
  %604 = trunc i32 %603 to i8
  %605 = and i8 %604, 63
  %606 = or i8 %605, -128
  %607 = getelementptr inbounds i8, i8* %597, i64 1
  store i8 %606, i8* %597, align 1
  br label %608

608:                                              ; preds = %602, %599
  %609 = phi i8* [ %607, %602 ], [ %597, %599 ]
  %610 = icmp sgt i32 %600, 5
  %611 = icmp ult i8* %609, %43
  %612 = and i1 %610, %611
  br i1 %612, label %613, label %187

613:                                              ; preds = %608
  %614 = add nsw i32 %166, -42
  %615 = lshr i32 %161, %614
  %616 = trunc i32 %615 to i8
  %617 = and i8 %616, 63
  %618 = or i8 %617, -128
  %619 = getelementptr inbounds i8, i8* %609, i64 1
  store i8 %618, i8* %609, align 1
  br label %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @avio_rb32(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_rl32(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @avio_rb16(%struct.AVIOContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_codec_id(%struct.AVStream* nocapture readonly, i32) unnamed_addr #0 {
  %3 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i64 0, i64 0), i32 %1) #11
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  switch i16 %6, label %11 [
    i16 29549, label %7
    i16 21332, label %7
  ]

7:                                                ; preds = %5, %5
  %8 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %1) #14, !srcloc !3
  %9 = and i32 %8, 65535
  %10 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_wav_tags, i64 0, i64 0), i32 %9) #11
  br label %11

11:                                               ; preds = %5, %7, %2
  %12 = phi i32 [ %10, %7 ], [ %3, %2 ], [ %3, %5 ]
  %13 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i64 0, i32 19
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 0
  %18 = icmp sgt i32 %12, 0
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  store i32 1, i32* %15, align 8
  br label %52

21:                                               ; preds = %11
  %22 = icmp eq i32 %16, 1
  br i1 %22, label %52, label %23

23:                                               ; preds = %21
  switch i32 %1, label %24 [
    i32 1932816493, label %52
    i32 0, label %52
  ]

24:                                               ; preds = %23
  %25 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i64 0, i64 0), i32 %1) #11
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i64 0, i32 0
  br label %35

30:                                               ; preds = %24
  %31 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i64 0, i64 0), i32 %1) #11
  %32 = icmp sgt i32 %31, 0
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %34 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i64 0, i32 0
  br i1 %32, label %35, label %38

35:                                               ; preds = %27, %30
  %36 = phi i32* [ %29, %27 ], [ %34, %30 ]
  %37 = phi i32 [ %25, %27 ], [ %31, %30 ]
  store i32 0, i32* %36, align 8
  br label %52

38:                                               ; preds = %30
  %39 = load i32, i32* %34, align 8
  switch i32 %39, label %52 [
    i32 2, label %44
    i32 3, label %40
  ]

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %52

44:                                               ; preds = %38, %40
  %45 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movsubtitle_tags, i64 0, i64 0), i32 %1) #11
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %48, i64 0, i32 0
  store i32 3, i32* %49, align 8
  br label %52

50:                                               ; preds = %44
  %51 = tail call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movdata_tags, i64 0, i64 0), i32 %1) #11
  br label %52

52:                                               ; preds = %21, %23, %23, %38, %40, %50, %47, %35, %20
  %53 = phi i32 [ %12, %20 ], [ %37, %35 ], [ %45, %47 ], [ %51, %50 ], [ %31, %40 ], [ %12, %23 ], [ %31, %38 ], [ %12, %21 ], [ %12, %23 ]
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %13, align 8
  %55 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i64 0, i32 2
  store i32 %1, i32* %55, align 8
  ret i32 %53
}

declare i8* @av_fourcc_make_string(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_default(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [32 x i8], align 1
  %6 = alloca [32 x i8], align 1
  %7 = alloca [32 x i8], align 1
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 34
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 10
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %13 = bitcast %struct.AVFormatContext** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0)) #11
  br label %208

15:                                               ; preds = %4
  %16 = add nsw i32 %9, 1
  store i32 %16, i32* %8, align 8
  %17 = icmp ult i64 %3, 9223372036854775807
  %18 = select i1 %17, i64 %3, i64 9223372036854775807
  %19 = add nsw i64 %18, -8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %197, label %21

21:                                               ; preds = %15
  %22 = icmp sgt i64 %18, 7
  %23 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 30
  %24 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %25 = bitcast %struct.AVFormatContext** %24 to i8**
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  %28 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 6
  %29 = icmp eq i32 %2, 1635018093
  %30 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 9
  %31 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 4
  %32 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 5
  %33 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 19
  %34 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 1
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  br label %36

36:                                               ; preds = %21, %194
  %37 = phi i64 [ 0, %21 ], [ %195, %194 ]
  %38 = call i32 @avio_feof(%struct.AVIOContext* %1) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %197

40:                                               ; preds = %36
  br i1 %22, label %41, label %83

41:                                               ; preds = %40
  %42 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %43 = zext i32 %42 to i64
  %44 = call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  switch i32 %44, label %66 [
    i32 1701147238, label %45
    i32 1987014504, label %50
  ]

45:                                               ; preds = %41
  %46 = load i32, i32* %23, align 4
  %47 = icmp ne i32 %46, 0
  %48 = icmp ugt i32 %42, 7
  %49 = and i1 %48, %47
  br i1 %49, label %52, label %66

50:                                               ; preds = %41
  %51 = icmp ugt i32 %42, 7
  br i1 %51, label %52, label %66

52:                                               ; preds = %45, %50
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %24, align 8
  %54 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %53, i64 0, i32 36
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %57, label %66

57:                                               ; preds = %52
  %58 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %59 = call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %60 = call i32 @avio_feof(%struct.AVIOContext* %1) #11
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %197

62:                                               ; preds = %57
  %63 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 -8, i32 1) #11
  switch i32 %59, label %66 [
    i32 1987013987, label %64
    i32 1684567661, label %64
  ]

64:                                               ; preds = %62, %62
  %65 = load i8*, i8** %25, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.31, i64 0, i64 0)) #11
  br label %66

66:                                               ; preds = %64, %62, %45, %41, %52, %50
  %67 = phi i32 [ %44, %52 ], [ 1987014504, %50 ], [ %44, %41 ], [ 1701147238, %45 ], [ %44, %62 ], [ 1987014509, %64 ]
  switch i32 %2, label %68 [
    i32 1953460082, label %74
    i32 1987014509, label %74
  ]

68:                                               ; preds = %66
  switch i32 %67, label %74 [
    i32 1801548404, label %69
    i32 1952539757, label %69
  ]

69:                                               ; preds = %68, %68
  %70 = load i8*, i8** %25, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %70, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0)) #11
  %71 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 -8) #11
  %72 = load i32, i32* %8, align 8
  %73 = add nsw i32 %72, -1
  store i32 %73, i32* %8, align 8
  br label %208

74:                                               ; preds = %68, %66, %66
  %75 = add nsw i64 %37, 8
  %76 = icmp eq i32 %42, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %74
  %78 = add nsw i64 %37, 16
  %79 = icmp sgt i64 %78, %18
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %82 = add i64 %81, -8
  br label %83

83:                                               ; preds = %77, %74, %80, %40
  %84 = phi i64 [ %78, %80 ], [ %75, %77 ], [ %75, %74 ], [ %37, %40 ]
  %85 = phi i64 [ %82, %80 ], [ 1, %77 ], [ %43, %74 ], [ %3, %40 ]
  %86 = phi i32 [ %67, %80 ], [ %67, %77 ], [ %67, %74 ], [ 0, %40 ]
  %87 = load i8*, i8** %25, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %26, i8 0, i64 32, i1 false)
  %88 = call i8* @av_fourcc_make_string(i8* nonnull %26, i32 %86) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %27, i8 0, i64 32, i1 false)
  %89 = call i8* @av_fourcc_make_string(i8* nonnull %27, i32 %2) #11
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 56, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i8* %88, i8* %89, i64 %85, i64 %84, i64 %18) #11
  %90 = icmp eq i64 %85, 0
  %91 = sub nsw i64 %18, %84
  %92 = add nsw i64 %91, 8
  %93 = select i1 %90, i64 %92, i64 %85
  %94 = add nsw i64 %93, -8
  %95 = icmp slt i64 %94, 0
  br i1 %95, label %197, label %96

96:                                               ; preds = %83
  %97 = icmp sgt i64 %94, %91
  %98 = select i1 %97, i64 %91, i64 %94
  br label %99

99:                                               ; preds = %220, %96
  %100 = phi i64 [ 0, %96 ], [ %221, %220 ]
  %101 = getelementptr inbounds [97 x %struct.MOVParseTableEntry], [97 x %struct.MOVParseTableEntry]* @mov_default_parse_table, i64 0, i64 %100, i32 0
  %102 = load i32, i32* %101, align 16
  %103 = icmp eq i32 %102, %86
  br i1 %103, label %109, label %104

104:                                              ; preds = %99
  %105 = or i64 %100, 1
  %106 = getelementptr inbounds [97 x %struct.MOVParseTableEntry], [97 x %struct.MOVParseTableEntry]* @mov_default_parse_table, i64 0, i64 %105, i32 0
  %107 = load i32, i32* %106, align 16
  %108 = icmp eq i32 %107, %86
  br i1 %108, label %109, label %210

109:                                              ; preds = %215, %210, %104, %99
  %110 = phi i64 [ %100, %99 ], [ %105, %104 ], [ %211, %210 ], [ %216, %215 ]
  %111 = trunc i64 %110 to i32
  %112 = getelementptr inbounds [97 x %struct.MOVParseTableEntry], [97 x %struct.MOVParseTableEntry]* @mov_default_parse_table, i64 0, i64 %110, i32 1
  %113 = load i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)*, i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)** %112, align 8
  %114 = icmp eq i32 %111, 96
  br i1 %114, label %115, label %127

115:                                              ; preds = %220, %109
  switch i32 %2, label %116 [
    i32 1635017845, label %127
    i32 1953721449, label %127
  ]

116:                                              ; preds = %115
  %117 = load i32, i32* %28, align 8
  %118 = icmp ne i32 %117, 0
  %119 = and i1 %29, %118
  %120 = icmp eq i32 %86, 1937335659
  %121 = and i1 %120, %119
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = load i32, i32* %30, align 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %116, %122
  %126 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %98) #11
  br label %194

127:                                              ; preds = %122, %115, %115, %109
  %128 = phi i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i64)* [ %113, %109 ], [ @mov_read_udta_string, %115 ], [ @mov_read_udta_string, %115 ], [ @mov_read_keys, %122 ]
  %129 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %130 = call i32 %128(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %86, i64 %98) #11
  %131 = icmp slt i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = load i32, i32* %8, align 8
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %8, align 8
  br label %208

135:                                              ; preds = %127
  %136 = load i32, i32* %31, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %180, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %32, align 4
  %140 = icmp eq i32 %139, 0
  %141 = sub nsw i64 9223372036854775807, %129
  %142 = icmp sgt i64 %98, %141
  %143 = or i1 %142, %140
  br i1 %143, label %180, label %144

144:                                              ; preds = %138
  %145 = load i32, i32* %33, align 8
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %174, label %148

148:                                              ; preds = %144
  %149 = load %struct.AVFormatContext*, %struct.AVFormatContext** %24, align 8
  %150 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %149, i64 0, i32 15
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %165

154:                                              ; preds = %148
  %155 = load i32, i32* %34, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %165

157:                                              ; preds = %154
  %158 = add nsw i64 %129, %98
  %159 = call i64 @avio_size(%struct.AVIOContext* %1) #11
  %160 = icmp eq i64 %158, %159
  br i1 %160, label %161, label %180

161:                                              ; preds = %157
  %162 = load i32, i32* %33, align 8
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %174, label %165

165:                                              ; preds = %148, %154, %161
  %166 = load %struct.AVFormatContext*, %struct.AVFormatContext** %24, align 8
  %167 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %166, i64 0, i32 15
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %165
  %172 = load i32, i32* %34, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %144, %171, %165, %161
  %175 = add nsw i64 %129, %98
  %176 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 25
  store i64 %175, i64* %176, align 8
  br label %177

177:                                              ; preds = %171, %174
  %178 = load i32, i32* %8, align 8
  %179 = add nsw i32 %178, -1
  store i32 %179, i32* %8, align 8
  br label %208

180:                                              ; preds = %138, %135, %157
  %181 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %182 = sub nsw i64 %98, %181
  %183 = add nsw i64 %182, %129
  %184 = icmp sgt i64 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %183) #11
  br label %194

187:                                              ; preds = %180
  %188 = icmp slt i64 %183, 0
  br i1 %188, label %189, label %194

189:                                              ; preds = %187
  %190 = load i8*, i8** %25, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %35, i8 0, i64 32, i1 false)
  %191 = call i8* @av_fourcc_make_string(i8* nonnull %35, i32 %86) #11
  %192 = sub nsw i64 0, %183
  call void (i8*, i32, i8*, ...) @av_log(i8* %190, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0), i8* %191, i64 %192) #11
  %193 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 %183, i32 1) #11
  br label %194

194:                                              ; preds = %185, %189, %187, %125
  %195 = add nsw i64 %98, %84
  %196 = icmp sgt i64 %195, %19
  br i1 %196, label %197, label %36

197:                                              ; preds = %36, %194, %83, %57, %15
  %198 = phi i64 [ 0, %15 ], [ %37, %57 ], [ %84, %83 ], [ %195, %194 ], [ %37, %36 ]
  %199 = icmp sgt i64 %18, %198
  %200 = icmp slt i64 %18, 524287
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = sub nsw i64 %18, %198
  %204 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %203) #11
  br label %205

205:                                              ; preds = %202, %197
  %206 = load i32, i32* %8, align 8
  %207 = add nsw i32 %206, -1
  store i32 %207, i32* %8, align 8
  br label %208

208:                                              ; preds = %177, %132, %69, %205, %11
  %209 = phi i32 [ -1094995529, %11 ], [ 0, %205 ], [ 0, %177 ], [ %130, %132 ], [ 0, %69 ]
  ret i32 %209

210:                                              ; preds = %104
  %211 = or i64 %100, 2
  %212 = getelementptr inbounds [97 x %struct.MOVParseTableEntry], [97 x %struct.MOVParseTableEntry]* @mov_default_parse_table, i64 0, i64 %211, i32 0
  %213 = load i32, i32* %212, align 16
  %214 = icmp eq i32 %213, %86
  br i1 %214, label %109, label %215

215:                                              ; preds = %210
  %216 = or i64 %100, 3
  %217 = getelementptr inbounds [97 x %struct.MOVParseTableEntry], [97 x %struct.MOVParseTableEntry]* @mov_default_parse_table, i64 0, i64 %216, i32 0
  %218 = load i32, i32* %217, align 16
  %219 = icmp eq i32 %218, %86
  br i1 %219, label %109, label %220

220:                                              ; preds = %215
  %221 = add nuw nsw i64 %100, 4
  %222 = icmp eq i64 %221, 96
  br i1 %222, label %115, label %99
}

declare i64 @avio_skip(%struct.AVIOContext*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_probe(%struct.AVProbeData* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 8
  br i1 %4, label %103, label %5

5:                                                ; preds = %1
  %6 = zext i32 %3 to i64
  %7 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 4
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = sext i32 %3 to i64
  br label %12

12:                                               ; preds = %5, %65
  %13 = phi i32 [ -1, %5 ], [ %68, %65 ]
  %14 = phi i32 [ 0, %5 ], [ %67, %65 ]
  %15 = phi i64 [ 0, %5 ], [ %66, %65 ]
  %16 = getelementptr inbounds i8, i8* %8, i64 %15
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %18) #14, !srcloc !3
  %20 = icmp eq i32 %19, 1
  %21 = add nsw i64 %15, 16
  %22 = icmp sgt i64 %21, %6
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds i8, i8* %16, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 1
  %28 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %27) #14, !srcloc !4
  br label %34

29:                                               ; preds = %12
  %30 = zext i32 %19 to i64
  %31 = icmp eq i32 %19, 0
  %32 = sub nsw i64 %11, %15
  %33 = select i1 %31, i64 %32, i64 %30
  br label %34

34:                                               ; preds = %29, %24
  %35 = phi i64 [ %28, %24 ], [ %33, %29 ]
  %36 = phi i64 [ 16, %24 ], [ 8, %29 ]
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = add nsw i64 %15, 4
  br label %65

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %9, i64 %15
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 1
  switch i32 %43, label %61 [
    i32 1987014509, label %44
    i32 1818653296, label %57
    i32 1684632949, label %57
    i32 1885956979, label %57
    i32 2105508482, label %57
    i32 2003395685, label %54
    i32 1701079415, label %54
    i32 1701147238, label %54
    i32 1802401130, label %54
    i32 1952672112, label %54
    i32 1887007846, label %47
    i32 1635017845, label %60
    i32 1952539757, label %60
    i32 1953459824, label %60
  ]

44:                                               ; preds = %40
  %45 = trunc i64 %15 to i32
  %46 = add i32 %45, 4
  br label %61

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %10, i64 %15
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 1
  switch i32 %50, label %61 [
    i32 540176490, label %51
    i32 544764010, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = icmp sgt i32 %14, 5
  %53 = select i1 %52, i32 %14, i32 5
  br label %61

54:                                               ; preds = %40, %40, %40, %40, %40
  %55 = icmp sgt i32 %14, 95
  %56 = select i1 %55, i32 %14, i32 95
  br label %61

57:                                               ; preds = %40, %40, %40, %40
  %58 = icmp sgt i32 %14, 50
  %59 = select i1 %58, i32 %14, i32 50
  br label %61

60:                                               ; preds = %40, %40, %40
  br label %61

61:                                               ; preds = %40, %60, %44, %47, %51, %57, %54
  %62 = phi i32 [ %14, %40 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ 100, %47 ], [ 100, %44 ], [ 100, %60 ]
  %63 = phi i32 [ %13, %40 ], [ %13, %57 ], [ %13, %54 ], [ %13, %51 ], [ %13, %47 ], [ %46, %44 ], [ %13, %60 ]
  %64 = add nsw i64 %35, %15
  br label %65

65:                                               ; preds = %61, %38
  %66 = phi i64 [ %39, %38 ], [ %64, %61 ]
  %67 = phi i32 [ %14, %38 ], [ %62, %61 ]
  %68 = phi i32 [ %13, %38 ], [ %63, %61 ]
  %69 = add nsw i64 %66, 8
  %70 = icmp sgt i64 %69, %6
  br i1 %70, label %71, label %12

71:                                               ; preds = %65
  %72 = icmp sgt i32 %67, 50
  %73 = icmp ne i32 %68, -1
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %103

75:                                               ; preds = %71
  %76 = add nsw i32 %3, -16
  %77 = sext i32 %76 to i64
  %78 = icmp slt i32 %68, %76
  br i1 %78, label %79, label %103

79:                                               ; preds = %75
  %80 = sext i32 %68 to i64
  %81 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i64 0, i32 1
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %79, %100
  %84 = phi i64 [ %80, %79 ], [ %101, %100 ]
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = icmp eq i32 %87, 1919706216
  br i1 %88, label %89, label %100

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %85, i64 8
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 1
  %93 = icmp eq i32 %92, 1919707245
  br i1 %93, label %94, label %100

94:                                               ; preds = %89
  %95 = getelementptr inbounds i8, i8* %85, i64 12
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %96, align 1
  %98 = icmp eq i32 %97, 1195724877
  br i1 %98, label %99, label %100

99:                                               ; preds = %94
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.388, i64 0, i64 0)) #11
  br label %103

100:                                              ; preds = %94, %89, %83
  %101 = add nsw i64 %84, 2
  %102 = icmp slt i64 %101, %77
  br i1 %102, label %83, label %103

103:                                              ; preds = %100, %1, %75, %71, %99
  %104 = phi i32 [ 5, %99 ], [ %67, %71 ], [ %67, %75 ], [ 0, %1 ], [ %67, %100 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_header(%struct.AVFormatContext*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca %struct.AVTimecode, align 4
  %4 = alloca [23 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %7 = bitcast i8** %6 to %struct.MOVContext**
  %8 = load %struct.MOVContext*, %struct.MOVContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 48
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %13 [
    i32 0, label %15
    i32 16, label %15
  ]

13:                                               ; preds = %1
  %14 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.390, i64 0, i64 0), i32 %12, i32 16) #11
  br label %951

15:                                               ; preds = %1, %1
  %16 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 1
  store %struct.AVFormatContext* %0, %struct.AVFormatContext** %16, align 8
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 7
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %10, i64 0, i32 19
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = tail call i64 @avio_size(%struct.AVIOContext* %10) #11
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi i64 [ %23, %22 ], [ 9223372036854775807, %15 ]
  %26 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 30
  %27 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 4
  %28 = load i32, i32* %26, align 4
  br label %29

29:                                               ; preds = %46, %24
  %30 = phi i32 [ 1, %46 ], [ %28, %24 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call i64 @avio_seek(%struct.AVIOContext* %10, i64 0, i32 0) #11
  br label %34

34:                                               ; preds = %29, %32
  %35 = tail call i32 @mov_read_default(%struct.MOVContext* %8, %struct.AVIOContext* %10, i32 1953460082, i64 %25)
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.391, i64 0, i64 0)) #11
  br label %948

39:                                               ; preds = %34
  %40 = load i32, i32* %18, align 8
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = load i32, i32* %27, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %42, label %50, label %45

45:                                               ; preds = %39
  br i1 %44, label %46, label %53

46:                                               ; preds = %45
  %47 = load i32, i32* %26, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %26, align 4
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %29, label %51

50:                                               ; preds = %39
  br i1 %44, label %51, label %53

51:                                               ; preds = %46, %50
  %52 = bitcast %struct.AVFormatContext* %0 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.392, i64 0, i64 0)) #11
  br label %948

53:                                               ; preds = %45, %50
  %54 = bitcast %struct.AVFormatContext** %16 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call i64 @avio_seek(%struct.AVIOContext* %10, i64 0, i32 1) #11
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 56, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.393, i64 0, i64 0), i64 %56) #11
  %57 = load i32, i32* %18, align 8
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %62 = load i32, i32* %61, align 4
  br label %360

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 19
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %255, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 23
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %255

71:                                               ; preds = %67
  %72 = load %struct.MOVContext*, %struct.MOVContext** %7, align 8
  %73 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %72, i64 0, i32 19
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %255, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %72, i64 0, i32 18
  %78 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %79 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %80 = bitcast i8** %5 to i8*
  %81 = bitcast %struct.AVFormatContext* %0 to i8*
  %82 = bitcast i8** %5 to i16**
  br label %83

83:                                               ; preds = %250, %76
  %84 = phi i64 [ 0, %76 ], [ %251, %250 ]
  %85 = load i32*, i32** %77, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %78, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %105, label %90

90:                                               ; preds = %83
  %91 = load %struct.AVStream**, %struct.AVStream*** %79, align 8
  %92 = zext i32 %88 to i64
  br label %95

93:                                               ; preds = %95
  %94 = icmp eq i64 %102, %92
  br i1 %94, label %105, label %95

95:                                               ; preds = %93, %90
  %96 = phi i64 [ 0, %90 ], [ %102, %93 ]
  %97 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %91, i64 %96
  %98 = load %struct.AVStream*, %struct.AVStream** %97, align 8
  %99 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, %87
  %102 = add nuw nsw i64 %96, 1
  br i1 %101, label %103, label %93

103:                                              ; preds = %95
  %104 = icmp eq %struct.AVStream* %98, null
  br i1 %104, label %105, label %106

105:                                              ; preds = %93, %103, %83
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.399, i64 0, i64 0)) #11
  br label %250

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 3
  %108 = bitcast i8** %107 to %struct.MOVStreamContext**
  %109 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %108, align 8
  %110 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %109, i64 0, i32 0
  %111 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %112 = call i64 @avio_seek(%struct.AVIOContext* %111, i64 0, i32 1) #11
  %113 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 19
  %114 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %113, align 8
  %115 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %152

118:                                              ; preds = %106
  %119 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 8
  %120 = load i32, i32* %119, align 8
  %121 = or i32 %120, 3072
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 40
  %123 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %122, align 8
  %124 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %123, i64 0, i32 12
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %247, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %123, i64 0, i32 11
  %129 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %128, align 8
  %130 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %131 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %129, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = call i64 @avio_seek(%struct.AVIOContext* %130, i64 %132, i32 0) #11
  %134 = load i64, i64* %131, align 8
  %135 = icmp eq i64 %133, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %127
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.400, i64 0, i64 0)) #11
  br label %247

137:                                              ; preds = %127
  %138 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %139 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 13
  %140 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %129, i64 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = ashr i32 %141, 2
  %143 = call i32 @av_get_packet(%struct.AVIOContext* %138, %struct.AVPacket* %139, i32 %142) #11
  %144 = icmp slt i32 %143, 0
  br i1 %144, label %247, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 13, i32 5
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 13, i32 6
  %150 = load i32, i32* %149, align 8
  %151 = or i32 %150, 1
  store i32 %151, i32* %149, align 8
  br label %247

152:                                              ; preds = %106
  store i32 2, i32* %115, align 8
  %153 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %113, align 8
  %154 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %153, i64 0, i32 1
  store i32 100359, i32* %154, align 4
  %155 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 9
  store i32 48, i32* %155, align 4
  %156 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 40
  %157 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %156, align 8
  %158 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %157, i64 0, i32 12
  %159 = load i32, i32* %158, align 8
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %247

161:                                              ; preds = %152
  %162 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 6
  %163 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i64 0, i32 4
  %164 = bitcast %struct.AVRational* %163 to i64*
  br label %165

165:                                              ; preds = %241, %161
  %166 = phi i64 [ 0, %161 ], [ %171, %241 ]
  %167 = phi i32 [ %159, %161 ], [ %244, %241 ]
  %168 = phi %struct.AVStreamInternal* [ %157, %161 ], [ %242, %241 ]
  %169 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %168, i64 0, i32 11
  %170 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %169, align 8
  %171 = add nuw nsw i64 %166, 1
  %172 = sext i32 %167 to i64
  %173 = icmp slt i64 %171, %172
  %174 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %170, i64 %171, i32 1
  %175 = select i1 %173, i64* %174, i64* %162
  %176 = load i64, i64* %175, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %177 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %170, i64 %166, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %180, label %181

180:                                              ; preds = %165
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.401, i64 0, i64 0)) #11
  br label %181

181:                                              ; preds = %180, %165
  %182 = phi i64 [ -9223372036854775808, %180 ], [ %176, %165 ]
  %183 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %184 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %170, i64 %166, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = call i64 @avio_seek(%struct.AVIOContext* %183, i64 %185, i32 0) #11
  %187 = load i64, i64* %184, align 8
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %191, label %189

189:                                              ; preds = %181
  %190 = trunc i64 %166 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.402, i64 0, i64 0), i32 %190) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  br label %247

191:                                              ; preds = %181
  %192 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %193 = call i32 @avio_rb16(%struct.AVIOContext* %192) #11
  %194 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %170, i64 %166, i32 2
  %195 = load i32, i32* %194, align 8
  %196 = ashr i32 %195, 2
  %197 = add nsw i32 %196, -2
  %198 = icmp sgt i32 %193, %197
  br i1 %198, label %241, label %199

199:                                              ; preds = %191
  %200 = shl nsw i32 %193, 1
  %201 = or i32 %200, 1
  %202 = sext i32 %201 to i64
  %203 = call noalias i8* @av_mallocz(i64 %202) #11
  store i8* %203, i8** %5, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %240, label %205

205:                                              ; preds = %199
  %206 = icmp eq i32 %193, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %205
  store i8 0, i8* %203, align 1
  br label %234

208:                                              ; preds = %205
  %209 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %210 = call i32 @avio_rb16(%struct.AVIOContext* %209) #11
  %211 = trunc i32 %210 to i16
  switch i16 %211, label %220 [
    i16 -257, label %212
    i16 -2, label %216
  ]

212:                                              ; preds = %208
  %213 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %214 = load i8*, i8** %5, align 8
  %215 = call i32 @avio_get_str16be(%struct.AVIOContext* %213, i32 %193, i8* %214, i32 %201) #11
  br label %234

216:                                              ; preds = %208
  %217 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %218 = load i8*, i8** %5, align 8
  %219 = call i32 @avio_get_str16le(%struct.AVIOContext* %217, i32 %193, i8* %218, i32 %201) #11
  br label %234

220:                                              ; preds = %208
  %221 = call i16 @llvm.bswap.i16(i16 %211) #11
  %222 = load i16*, i16** %82, align 8
  store i16 %221, i16* %222, align 1
  %223 = add i32 %193, -1
  %224 = icmp ult i32 %223, 2
  br i1 %224, label %225, label %229

225:                                              ; preds = %220
  %226 = load i8*, i8** %5, align 8
  %227 = sext i32 %193 to i64
  %228 = getelementptr inbounds i8, i8* %226, i64 %227
  store i8 0, i8* %228, align 1
  br label %234

229:                                              ; preds = %220
  %230 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %231 = load i8*, i8** %5, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 2
  %233 = call i32 @avio_get_str(%struct.AVIOContext* %230, i32 2147483647, i8* %232, i32 %223) #11
  br label %234

234:                                              ; preds = %229, %225, %216, %212, %207
  %235 = load i64, i64* %177, align 8
  %236 = load i8*, i8** %5, align 8
  %237 = load i64, i64* %164, align 8
  %238 = trunc i64 %166 to i32
  %239 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %0, i32 %238, i64 %237, i64 %235, i64 %182, i8* %236) #11
  call void @av_freep(i8* nonnull %80) #11
  br label %241

240:                                              ; preds = %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  br label %247

241:                                              ; preds = %191, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %242 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %156, align 8
  %243 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %242, i64 0, i32 12
  %244 = load i32, i32* %243, align 8
  %245 = sext i32 %244 to i64
  %246 = icmp slt i64 %171, %245
  br i1 %246, label %165, label %247

247:                                              ; preds = %241, %240, %189, %152, %145, %137, %136, %118
  %248 = load %struct.AVIOContext*, %struct.AVIOContext** %110, align 8
  %249 = call i64 @avio_seek(%struct.AVIOContext* %248, i64 %112, i32 0) #11
  br label %250

250:                                              ; preds = %247, %105
  %251 = add nuw nsw i64 %84, 1
  %252 = load i32, i32* %73, align 8
  %253 = zext i32 %252 to i64
  %254 = icmp ult i64 %251, %253
  br i1 %254, label %83, label %255

255:                                              ; preds = %250, %71, %67, %63
  %256 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  br label %724

261:                                              ; preds = %255
  %262 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %263 = getelementptr inbounds [23 x i8], [23 x i8]* %4, i64 0, i64 0
  %264 = bitcast %struct.AVTimecode* %3 to i8*
  %265 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %266

266:                                              ; preds = %261, %355
  %267 = phi i64 [ 0, %261 ], [ %356, %355 ]
  %268 = load %struct.AVStream**, %struct.AVStream*** %262, align 8
  %269 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %268, i64 %267
  %270 = load %struct.AVStream*, %struct.AVStream** %269, align 8
  %271 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 19
  %272 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %271, align 8
  %273 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %272, i64 0, i32 2
  %274 = load i32, i32* %273, align 8
  switch i32 %274, label %355 [
    i32 1684237684, label %275
    i32 1684894834, label %316
  ]

275:                                              ; preds = %266
  %276 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 3
  %277 = bitcast i8** %276 to %struct.MOVStreamContext**
  %278 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %277, align 8
  %279 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %278, i64 0, i32 0
  %280 = load %struct.AVIOContext*, %struct.AVIOContext** %279, align 8
  %281 = call i64 @avio_seek(%struct.AVIOContext* %280, i64 0, i32 1) #11
  %282 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 40
  %283 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %282, align 8
  %284 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %283, i64 0, i32 12
  %285 = load i32, i32* %284, align 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %355, label %287

287:                                              ; preds = %275
  %288 = load %struct.AVIOContext*, %struct.AVIOContext** %279, align 8
  %289 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %283, i64 0, i32 11
  %290 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %289, align 8
  %291 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %290, i64 0, i32 0
  %292 = load i64, i64* %291, align 8
  %293 = call i64 @avio_seek(%struct.AVIOContext* %288, i64 %292, i32 0) #11
  %294 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %295 = call i32 @avio_rb32(%struct.AVIOContext* %294) #11
  %296 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %278, i64 0, i32 52
  %297 = load i32, i32* %296, align 8
  %298 = and i32 %297, 7
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %264) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %264, i8 -86, i64 20, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %263) #11
  %299 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 12, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %263, i8 -86, i64 23, i1 false) #11
  %300 = load i32, i32* %299, align 8
  %301 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 12, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = zext i32 %302 to i64
  %304 = shl nuw i64 %303, 32
  %305 = zext i32 %300 to i64
  %306 = or i64 %304, %305
  %307 = call i32 @av_timecode_init(%struct.AVTimecode* nonnull %3, i64 %306, i32 %298, i32 0, i8* %265) #11
  %308 = icmp slt i32 %307, 0
  br i1 %308, label %313, label %309

309:                                              ; preds = %287
  %310 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 11
  %311 = call i8* @av_timecode_make_string(%struct.AVTimecode* nonnull %3, i8* nonnull %263, i32 %295) #11
  %312 = call i32 @av_dict_set(%struct.AVDictionary** %310, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), i8* %311, i32 0) #11
  br label %313

313:                                              ; preds = %309, %287
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %263) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %264) #11
  %314 = load %struct.AVIOContext*, %struct.AVIOContext** %279, align 8
  %315 = call i64 @avio_seek(%struct.AVIOContext* %314, i64 %281, i32 0) #11
  br label %355

316:                                              ; preds = %266
  %317 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 3
  %318 = bitcast i8** %317 to %struct.MOVStreamContext**
  %319 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %318, align 8
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %263) #11
  %320 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %319, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %263, i8 -86, i64 23, i1 false) #11
  %321 = load %struct.AVIOContext*, %struct.AVIOContext** %320, align 8
  %322 = call i64 @avio_seek(%struct.AVIOContext* %321, i64 0, i32 1) #11
  %323 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 40
  %324 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %323, align 8
  %325 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %324, i64 0, i32 12
  %326 = load i32, i32* %325, align 8
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %354, label %328

328:                                              ; preds = %316
  %329 = load %struct.AVIOContext*, %struct.AVIOContext** %320, align 8
  %330 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %324, i64 0, i32 11
  %331 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %330, align 8
  %332 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %331, i64 0, i32 0
  %333 = load i64, i64* %332, align 8
  %334 = call i64 @avio_seek(%struct.AVIOContext* %329, i64 %333, i32 0) #11
  %335 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %336 = call i64 @avio_skip(%struct.AVIOContext* %335, i64 13) #11
  %337 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %338 = call i32 @avio_r8(%struct.AVIOContext* %337) #11
  %339 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %340 = call i32 @avio_r8(%struct.AVIOContext* %339) #11
  %341 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %342 = call i32 @avio_r8(%struct.AVIOContext* %341) #11
  %343 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %344 = call i32 @avio_r8(%struct.AVIOContext* %343) #11
  %345 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %346 = call i32 @avio_r8(%struct.AVIOContext* %345) #11
  %347 = icmp eq i32 %344, 0
  %348 = select i1 %347, i32 58, i32 59
  %349 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %263, i64 23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.403, i64 0, i64 0), i32 %338, i32 %340, i32 %342, i32 %348, i32 %346) #11
  %350 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i64 0, i32 11
  %351 = call i32 @av_dict_set(%struct.AVDictionary** %350, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), i8* nonnull %263, i32 0) #11
  %352 = load %struct.AVIOContext*, %struct.AVIOContext** %320, align 8
  %353 = call i64 @avio_seek(%struct.AVIOContext* %352, i64 %322, i32 0) #11
  br label %354

354:                                              ; preds = %316, %328
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %263) #11
  br label %355

355:                                              ; preds = %313, %275, %266, %354
  %356 = add nuw nsw i64 %267, 1
  %357 = load i32, i32* %256, align 4
  %358 = zext i32 %357 to i64
  %359 = icmp ult i64 %356, %358
  br i1 %359, label %266, label %360

360:                                              ; preds = %355, %60
  %361 = phi i32 [ %62, %60 ], [ %357, %355 ]
  %362 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %363 = icmp eq i32 %361, 0
  br i1 %363, label %724, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %366

366:                                              ; preds = %364, %463
  %367 = phi i64 [ 0, %364 ], [ %464, %463 ]
  %368 = phi i32 [ %361, %364 ], [ %465, %463 ]
  %369 = load %struct.AVStream**, %struct.AVStream*** %365, align 8
  %370 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %367
  %371 = load %struct.AVStream*, %struct.AVStream** %370, align 8
  %372 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %371, i64 0, i32 3
  %373 = bitcast i8** %372 to %struct.MOVStreamContext**
  %374 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %373, align 8
  %375 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %374, i64 0, i32 45
  %376 = load i32, i32* %375, align 4
  %377 = icmp slt i32 %376, 1
  %378 = icmp eq i32 %368, 0
  %379 = or i1 %377, %378
  br i1 %379, label %463, label %380

380:                                              ; preds = %366
  %381 = zext i32 %368 to i64
  %382 = add nsw i64 %381, -1
  %383 = and i64 %381, 3
  %384 = icmp ult i64 %382, 3
  br i1 %384, label %425, label %385

385:                                              ; preds = %380
  %386 = sub nsw i64 %381, %383
  br label %387

387:                                              ; preds = %387, %385
  %388 = phi i64 [ 0, %385 ], [ %422, %387 ]
  %389 = phi i32 [ -1, %385 ], [ %421, %387 ]
  %390 = phi i64 [ %386, %385 ], [ %423, %387 ]
  %391 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %388
  %392 = load %struct.AVStream*, %struct.AVStream** %391, align 8
  %393 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %392, i64 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = icmp eq i32 %394, %376
  %396 = trunc i64 %388 to i32
  %397 = select i1 %395, i32 %396, i32 %389
  %398 = or i64 %388, 1
  %399 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %398
  %400 = load %struct.AVStream*, %struct.AVStream** %399, align 8
  %401 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %400, i64 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, %376
  %404 = trunc i64 %398 to i32
  %405 = select i1 %403, i32 %404, i32 %397
  %406 = or i64 %388, 2
  %407 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %406
  %408 = load %struct.AVStream*, %struct.AVStream** %407, align 8
  %409 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %408, i64 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, %376
  %412 = trunc i64 %406 to i32
  %413 = select i1 %411, i32 %412, i32 %405
  %414 = or i64 %388, 3
  %415 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %414
  %416 = load %struct.AVStream*, %struct.AVStream** %415, align 8
  %417 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %416, i64 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = icmp eq i32 %418, %376
  %420 = trunc i64 %414 to i32
  %421 = select i1 %419, i32 %420, i32 %413
  %422 = add nuw nsw i64 %388, 4
  %423 = add i64 %390, -4
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %387

425:                                              ; preds = %387, %380
  %426 = phi i32 [ undef, %380 ], [ %421, %387 ]
  %427 = phi i64 [ 0, %380 ], [ %422, %387 ]
  %428 = phi i32 [ -1, %380 ], [ %421, %387 ]
  %429 = icmp eq i64 %383, 0
  br i1 %429, label %444, label %430

430:                                              ; preds = %425, %430
  %431 = phi i64 [ %441, %430 ], [ %427, %425 ]
  %432 = phi i32 [ %440, %430 ], [ %428, %425 ]
  %433 = phi i64 [ %442, %430 ], [ %383, %425 ]
  %434 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %431
  %435 = load %struct.AVStream*, %struct.AVStream** %434, align 8
  %436 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %435, i64 0, i32 1
  %437 = load i32, i32* %436, align 4
  %438 = icmp eq i32 %437, %376
  %439 = trunc i64 %431 to i32
  %440 = select i1 %438, i32 %439, i32 %432
  %441 = add nuw nsw i64 %431, 1
  %442 = add i64 %433, -1
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %430, !llvm.loop !5

444:                                              ; preds = %430, %425
  %445 = phi i32 [ %426, %425 ], [ %440, %430 ]
  %446 = icmp slt i32 %445, 0
  %447 = zext i32 %445 to i64
  %448 = icmp eq i64 %367, %447
  %449 = or i1 %446, %448
  br i1 %449, label %463, label %450

450:                                              ; preds = %444
  %451 = sext i32 %445 to i64
  %452 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %369, i64 %451
  %453 = load %struct.AVStream*, %struct.AVStream** %452, align 8
  %454 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %453, i64 0, i32 11
  %455 = load %struct.AVDictionary*, %struct.AVDictionary** %454, align 8
  %456 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %455, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #11
  %457 = icmp eq %struct.AVDictionaryEntry* %456, null
  br i1 %457, label %463, label %458

458:                                              ; preds = %450
  %459 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %371, i64 0, i32 11
  %460 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %456, i64 0, i32 1
  %461 = load i8*, i8** %460, align 8
  %462 = call i32 @av_dict_set(%struct.AVDictionary** %459, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), i8* %461, i32 0) #11
  br label %463

463:                                              ; preds = %366, %444, %458, %450
  %464 = add nuw nsw i64 %367, 1
  %465 = load i32, i32* %362, align 4
  %466 = zext i32 %465 to i64
  %467 = icmp ult i64 %464, %466
  br i1 %467, label %366, label %468

468:                                              ; preds = %463
  %469 = icmp eq i32 %465, 0
  br i1 %469, label %525, label %470

470:                                              ; preds = %468
  %471 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %472

472:                                              ; preds = %520, %470
  %473 = phi i32 [ %465, %470 ], [ %521, %520 ]
  %474 = phi i32 [ %465, %470 ], [ %522, %520 ]
  %475 = phi i64 [ 0, %470 ], [ %484, %520 ]
  %476 = load %struct.AVStream**, %struct.AVStream*** %471, align 8
  %477 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %476, i64 %475
  %478 = load %struct.AVStream*, %struct.AVStream** %477, align 8
  %479 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %478, i64 0, i32 19
  %480 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %479, align 8
  %481 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %480, i64 0, i32 2
  %482 = load i32, i32* %481, align 8
  %483 = icmp eq i32 %482, 1684237684
  %484 = add nuw nsw i64 %475, 1
  br i1 %483, label %485, label %520

485:                                              ; preds = %472
  %486 = zext i32 %474 to i64
  br label %487

487:                                              ; preds = %504, %485
  %488 = phi i64 [ 0, %485 ], [ %505, %504 ]
  %489 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %476, i64 %488
  %490 = load %struct.AVStream*, %struct.AVStream** %489, align 8
  %491 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %490, i64 0, i32 19
  %492 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %491, align 8
  %493 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %492, i64 0, i32 0
  %494 = load i32, i32* %493, align 8
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %504

496:                                              ; preds = %487
  %497 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %490, i64 0, i32 3
  %498 = bitcast i8** %497 to %struct.MOVStreamContext**
  %499 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %498, align 8
  %500 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %499, i64 0, i32 45
  %501 = load i32, i32* %500, align 4
  %502 = zext i32 %501 to i64
  %503 = icmp eq i64 %484, %502
  br i1 %503, label %520, label %504

504:                                              ; preds = %496, %487
  %505 = add nuw nsw i64 %488, 1
  %506 = icmp ult i64 %505, %486
  br i1 %506, label %487, label %507

507:                                              ; preds = %504
  %508 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %478, i64 0, i32 11
  %509 = load %struct.AVDictionary*, %struct.AVDictionary** %508, align 8
  %510 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %509, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #11
  %511 = icmp eq %struct.AVDictionaryEntry* %510, null
  br i1 %511, label %512, label %514

512:                                              ; preds = %507
  %513 = load i32, i32* %362, align 4
  br label %520

514:                                              ; preds = %507
  %515 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %516 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %510, i64 0, i32 1
  %517 = load i8*, i8** %516, align 8
  %518 = call i32 @av_dict_set(%struct.AVDictionary** %515, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i64 0, i64 0), i8* %517, i32 0) #11
  %519 = load i32, i32* %362, align 4
  br label %525

520:                                              ; preds = %496, %512, %472
  %521 = phi i32 [ %513, %512 ], [ %473, %472 ], [ %473, %496 ]
  %522 = phi i32 [ %513, %512 ], [ %474, %472 ], [ %474, %496 ]
  %523 = zext i32 %522 to i64
  %524 = icmp ult i64 %484, %523
  br i1 %524, label %472, label %525

525:                                              ; preds = %520, %468, %514
  %526 = phi i32 [ 0, %468 ], [ %519, %514 ], [ %521, %520 ]
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %724, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %530 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 2
  %531 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %532 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 17
  %533 = bitcast %struct.AVFormatContext* %0 to i8*
  br label %534

534:                                              ; preds = %528, %719
  %535 = phi i64 [ 0, %528 ], [ %720, %719 ]
  %536 = load %struct.AVStream**, %struct.AVStream*** %529, align 8
  %537 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %536, i64 %535
  %538 = load %struct.AVStream*, %struct.AVStream** %537, align 8
  %539 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 3
  %540 = bitcast i8** %539 to %struct.MOVStreamContext**
  %541 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %540, align 8
  %542 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 30
  %543 = load i32, i32* %542, align 8
  %544 = icmp slt i32 %543, 1
  br i1 %544, label %545, label %552

545:                                              ; preds = %534
  %546 = load i8*, i8** %54, align 8
  %547 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 2
  %548 = load i32, i32* %547, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* %546, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.147, i64 0, i64 0), i32 %548) #11
  %549 = load i32, i32* %530, align 8
  %550 = icmp sgt i32 %549, 1
  %551 = select i1 %550, i32 %549, i32 1
  store i32 %551, i32* %542, align 8
  br label %552

552:                                              ; preds = %534, %545
  %553 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 19
  %554 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %555 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %554, i64 0, i32 0
  %556 = load i32, i32* %555, align 8
  %557 = icmp eq i32 %556, 1
  br i1 %557, label %558, label %571

558:                                              ; preds = %552
  %559 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %554, i64 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = icmp eq i32 %560, 86018
  br i1 %561, label %562, label %706

562:                                              ; preds = %558
  %563 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 54
  %564 = load i32, i32* %563, align 8
  %565 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 40
  %566 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %565, align 8
  %567 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %566, i64 0, i32 18
  store i32 %564, i32* %567, align 8
  %568 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %569 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %568, i64 0, i32 0
  %570 = load i32, i32* %569, align 8
  br label %571

571:                                              ; preds = %562, %552
  %572 = phi i32 [ %570, %562 ], [ %556, %552 ]
  %573 = phi %struct.AVCodecParameters* [ %568, %562 ], [ %554, %552 ]
  %574 = icmp eq i32 %572, 0
  br i1 %574, label %575, label %594

575:                                              ; preds = %571
  %576 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 57
  %577 = load i32, i32* %576, align 8
  %578 = icmp sgt i32 %577, 0
  br i1 %578, label %579, label %706

579:                                              ; preds = %575
  %580 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 58
  %581 = load i64, i64* %580, align 8
  %582 = icmp sgt i64 %581, 0
  br i1 %582, label %583, label %706

583:                                              ; preds = %579
  %584 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 12, i32 0
  %585 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 12, i32 1
  %586 = load i32, i32* %542, align 8
  %587 = sext i32 %586 to i64
  %588 = sext i32 %577 to i64
  %589 = mul nsw i64 %587, %588
  %590 = call i32 @av_reduce(i32* %584, i32* %585, i64 %589, i64 %581, i64 2147483647) #11
  %591 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %592 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %591, i64 0, i32 0
  %593 = load i32, i32* %592, align 8
  br label %594

594:                                              ; preds = %583, %571
  %595 = phi i32 [ %593, %583 ], [ %572, %571 ]
  %596 = phi %struct.AVCodecParameters* [ %591, %583 ], [ %573, %571 ]
  %597 = icmp eq i32 %595, 3
  br i1 %597, label %598, label %706

598:                                              ; preds = %594
  %599 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %596, i64 0, i32 11
  %600 = load i32, i32* %599, align 8
  %601 = icmp slt i32 %600, 1
  br i1 %601, label %606, label %602

602:                                              ; preds = %598
  %603 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %596, i64 0, i32 12
  %604 = load i32, i32* %603, align 4
  %605 = icmp slt i32 %604, 1
  br i1 %605, label %606, label %614

606:                                              ; preds = %602, %598
  %607 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 46
  %608 = load i32, i32* %607, align 8
  store i32 %608, i32* %599, align 8
  %609 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %541, i64 0, i32 47
  %610 = load i32, i32* %609, align 4
  %611 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %612 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %611, i64 0, i32 12
  store i32 %610, i32* %612, align 4
  %613 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  br label %614

614:                                              ; preds = %606, %602
  %615 = phi %struct.AVCodecParameters* [ %613, %606 ], [ %596, %602 ]
  %616 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %615, i64 0, i32 1
  %617 = load i32, i32* %616, align 4
  %618 = icmp eq i32 %617, 94208
  br i1 %618, label %619, label %706

619:                                              ; preds = %614
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %531) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %531, i8 0, i64 256, i1 false) #11
  %620 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %621 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %620, i64 0, i32 3
  %622 = load i8*, i8** %621, align 8
  %623 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %620, i64 0, i32 4
  %624 = load i32, i32* %623, align 8
  %625 = icmp eq i32 %624, 64
  br i1 %625, label %626, label %705

626:                                              ; preds = %619
  %627 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %620, i64 0, i32 11
  %628 = load i32, i32* %627, align 8
  %629 = icmp sgt i32 %628, 0
  br i1 %629, label %630, label %636

630:                                              ; preds = %626
  %631 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %620, i64 0, i32 12
  %632 = load i32, i32* %631, align 4
  %633 = icmp sgt i32 %632, 0
  br i1 %633, label %634, label %636

634:                                              ; preds = %630
  %635 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %531, i64 256, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.404, i64 0, i64 0), i32 %628, i32 %632) #11
  br label %636

636:                                              ; preds = %634, %630, %626
  %637 = call i64 @av_strlcat(i8* nonnull %531, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.405, i64 0, i64 0), i64 256) #11
  br label %638

638:                                              ; preds = %638, %636
  %639 = phi i64 [ 0, %636 ], [ %687, %638 ]
  %640 = shl nsw i64 %639, 2
  %641 = getelementptr inbounds i8, i8* %622, i64 %640
  %642 = bitcast i8* %641 to i32*
  %643 = load i32, i32* %642, align 1
  %644 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %643) #14, !srcloc !3
  %645 = lshr i32 %644, 16
  %646 = and i32 %645, 255
  %647 = lshr i32 %644, 8
  %648 = and i32 %647, 255
  %649 = and i32 %644, 255
  %650 = mul nuw nsw i32 %646, 1164
  %651 = add nsw i32 %650, -18624
  %652 = add nsw i32 %649, -128
  %653 = mul nsw i32 %652, 2018
  %654 = add nsw i32 %651, %653
  %655 = sdiv i32 %654, 1000
  %656 = icmp ugt i32 %655, 255
  %657 = ashr i32 %655, 31
  %658 = xor i32 %657, 255
  %659 = select i1 %656, i32 %658, i32 %655
  %660 = add nsw i32 %648, -128
  %661 = mul nsw i32 %660, -813
  %662 = mul nsw i32 %652, -391
  %663 = add nsw i32 %661, %662
  %664 = add nsw i32 %663, %651
  %665 = sdiv i32 %664, 1000
  %666 = icmp ugt i32 %665, 255
  %667 = ashr i32 %665, 31
  %668 = xor i32 %667, 255
  %669 = select i1 %666, i32 %668, i32 %665
  %670 = mul nsw i32 %660, 1596
  %671 = add nsw i32 %651, %670
  %672 = sdiv i32 %671, 1000
  %673 = icmp ugt i32 %672, 255
  %674 = ashr i32 %672, 31
  %675 = xor i32 %674, 255
  %676 = select i1 %673, i32 %675, i32 %672
  %677 = shl nsw i32 %676, 16
  %678 = and i32 %677, 16711680
  %679 = shl nsw i32 %669, 8
  %680 = and i32 %679, 65280
  %681 = and i32 %659, 255
  %682 = or i32 %678, %681
  %683 = or i32 %682, %680
  %684 = icmp eq i64 %639, 15
  %685 = select i1 %684, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.407, i64 0, i64 0)
  %686 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %531, i64 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.406, i64 0, i64 0), i32 %683, i8* %685) #11
  %687 = add nuw nsw i64 %639, 1
  %688 = icmp eq i64 %687, 16
  br i1 %688, label %689, label %638

689:                                              ; preds = %638
  %690 = call i64 @av_strlcat(i8* nonnull %531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0), i64 256) #11
  %691 = icmp ugt i64 %690, 255
  br i1 %691, label %705, label %692

692:                                              ; preds = %689
  %693 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %694 = call i64 @strlen(i8* nonnull %531) #13
  %695 = trunc i64 %694 to i32
  %696 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %693, i32 %695) #11
  %697 = icmp slt i32 %696, 0
  br i1 %697, label %718, label %698

698:                                              ; preds = %692
  %699 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %700 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %699, i64 0, i32 3
  %701 = load i8*, i8** %700, align 8
  %702 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %699, i64 0, i32 4
  %703 = load i32, i32* %702, align 8
  %704 = sext i32 %703 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %701, i8* nonnull align 16 %531, i64 %704, i1 false) #11
  br label %705

705:                                              ; preds = %698, %619, %689
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %531) #11
  br label %706

706:                                              ; preds = %558, %575, %579, %705, %614, %594
  %707 = load i32, i32* %532, align 8
  %708 = icmp ne i32 %707, 0
  %709 = icmp slt i32 %707, 10003
  %710 = and i1 %708, %709
  br i1 %710, label %711, label %719

711:                                              ; preds = %706
  %712 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %553, align 8
  %713 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %712, i64 0, i32 1
  %714 = load i32, i32* %713, align 4
  %715 = icmp eq i32 %714, 86017
  br i1 %715, label %716, label %719

716:                                              ; preds = %711
  call void (i8*, i32, i8*, ...) @av_log(i8* %533, i32 40, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.397, i64 0, i64 0)) #11
  %717 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %538, i64 0, i32 28
  store i32 1, i32* %717, align 4
  br label %719

718:                                              ; preds = %692
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %531) #11
  br label %948

719:                                              ; preds = %706, %716, %711
  %720 = add nuw nsw i64 %535, 1
  %721 = load i32, i32* %362, align 4
  %722 = zext i32 %721 to i64
  %723 = icmp ult i64 %720, %722
  br i1 %723, label %534, label %724

724:                                              ; preds = %719, %360, %259, %525
  %725 = phi i32* [ %362, %525 ], [ %260, %259 ], [ %362, %360 ], [ %362, %719 ]
  %726 = phi i32 [ 0, %525 ], [ 0, %259 ], [ 0, %360 ], [ %721, %719 ]
  %727 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 14
  %728 = load %struct.MOVTrackExt*, %struct.MOVTrackExt** %727, align 8
  %729 = icmp eq %struct.MOVTrackExt* %728, null
  br i1 %729, label %770, label %730

730:                                              ; preds = %724
  %731 = icmp eq i32 %726, 0
  br i1 %731, label %770, label %732

732:                                              ; preds = %730
  %733 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %734

734:                                              ; preds = %732, %765
  %735 = phi i32 [ %726, %732 ], [ %766, %765 ]
  %736 = phi i64 [ 0, %732 ], [ %767, %765 ]
  %737 = load %struct.AVStream**, %struct.AVStream*** %733, align 8
  %738 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %737, i64 %736
  %739 = load %struct.AVStream*, %struct.AVStream** %738, align 8
  %740 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %739, i64 0, i32 3
  %741 = bitcast i8** %740 to %struct.MOVStreamContext**
  %742 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %741, align 8
  %743 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %739, i64 0, i32 6
  %744 = load i64, i64* %743, align 8
  %745 = icmp sgt i64 %744, 0
  br i1 %745, label %746, label %765

746:                                              ; preds = %734
  %747 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %742, i64 0, i32 51
  %748 = load i64, i64* %747, align 8
  %749 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %742, i64 0, i32 30
  %750 = load i32, i32* %749, align 8
  %751 = sext i32 %750 to i64
  %752 = sdiv i64 9223372036854775807, %751
  %753 = sdiv i64 %752, 8
  %754 = icmp sgt i64 %748, %753
  br i1 %754, label %763, label %755

755:                                              ; preds = %746
  %756 = shl i64 %748, 3
  %757 = mul nsw i64 %756, %751
  %758 = sdiv i64 %757, %744
  %759 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %739, i64 0, i32 19
  %760 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %759, align 8
  %761 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %760, i64 0, i32 6
  store i64 %758, i64* %761, align 8
  %762 = load i32, i32* %725, align 4
  br label %765

763:                                              ; preds = %746
  %764 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %764, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.398, i64 0, i64 0), i64 %748, i32 %750) #11
  br label %948

765:                                              ; preds = %755, %734
  %766 = phi i32 [ %762, %755 ], [ %735, %734 ]
  %767 = add nuw nsw i64 %736, 1
  %768 = zext i32 %766 to i64
  %769 = icmp ult i64 %767, %768
  br i1 %769, label %734, label %770

770:                                              ; preds = %765, %730, %724
  %771 = phi i32 [ 0, %730 ], [ %726, %724 ], [ %766, %765 ]
  %772 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 31
  %773 = load i32, i32* %772, align 8
  %774 = icmp sgt i32 %773, 0
  br i1 %774, label %775, label %815

775:                                              ; preds = %770
  %776 = icmp eq i32 %771, 0
  br i1 %776, label %815, label %777

777:                                              ; preds = %775
  %778 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %779

779:                                              ; preds = %777, %810
  %780 = phi i32 [ %771, %777 ], [ %811, %810 ]
  %781 = phi i64 [ 0, %777 ], [ %812, %810 ]
  %782 = load %struct.AVStream**, %struct.AVStream*** %778, align 8
  %783 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %782, i64 %781
  %784 = load %struct.AVStream*, %struct.AVStream** %783, align 8
  %785 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %784, i64 0, i32 3
  %786 = bitcast i8** %785 to %struct.MOVStreamContext**
  %787 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %786, align 8
  %788 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %787, i64 0, i32 58
  %789 = load i64, i64* %788, align 8
  %790 = icmp sgt i64 %789, 0
  br i1 %790, label %791, label %810

791:                                              ; preds = %779
  %792 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %787, i64 0, i32 51
  %793 = load i64, i64* %792, align 8
  %794 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %787, i64 0, i32 30
  %795 = load i32, i32* %794, align 8
  %796 = sext i32 %795 to i64
  %797 = sdiv i64 9223372036854775807, %796
  %798 = sdiv i64 %797, 8
  %799 = icmp sgt i64 %793, %798
  br i1 %799, label %808, label %800

800:                                              ; preds = %791
  %801 = shl i64 %793, 3
  %802 = mul nsw i64 %801, %796
  %803 = sdiv i64 %802, %789
  %804 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %784, i64 0, i32 19
  %805 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %804, align 8
  %806 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %805, i64 0, i32 6
  store i64 %803, i64* %806, align 8
  %807 = load i32, i32* %725, align 4
  br label %810

808:                                              ; preds = %791
  %809 = bitcast %struct.AVFormatContext* %0 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %809, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.398, i64 0, i64 0), i64 %793, i32 %795) #11
  br label %948

810:                                              ; preds = %800, %779
  %811 = phi i32 [ %807, %800 ], [ %780, %779 ]
  %812 = add nuw nsw i64 %781, 1
  %813 = zext i32 %811 to i64
  %814 = icmp ult i64 %812, %813
  br i1 %814, label %779, label %815

815:                                              ; preds = %810, %775, %770
  %816 = phi i32 [ 0, %775 ], [ %771, %770 ], [ %811, %810 ]
  %817 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 29
  %818 = load i32, i32* %817, align 8
  %819 = icmp sgt i32 %818, 0
  br i1 %819, label %820, label %849

820:                                              ; preds = %815
  %821 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 28
  %822 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %823 = icmp eq i32 %816, 0
  br i1 %823, label %849, label %824

824:                                              ; preds = %820, %845
  %825 = phi i64 [ %842, %845 ], [ 0, %820 ]
  %826 = phi i32 [ %841, %845 ], [ %818, %820 ]
  %827 = load i32*, i32** %821, align 8
  %828 = getelementptr inbounds i32, i32* %827, i64 %825
  %829 = load i32, i32* %828, align 4
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %840, label %831

831:                                              ; preds = %824
  %832 = sext i32 %829 to i64
  %833 = load %struct.AVStream**, %struct.AVStream*** %822, align 8
  %834 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %833, i64 %825
  %835 = load %struct.AVStream*, %struct.AVStream** %834, align 8
  %836 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %835, i64 0, i32 19
  %837 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %836, align 8
  %838 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %837, i64 0, i32 6
  store i64 %832, i64* %838, align 8
  %839 = load i32, i32* %817, align 8
  br label %840

840:                                              ; preds = %824, %831
  %841 = phi i32 [ %826, %824 ], [ %839, %831 ]
  %842 = add nuw nsw i64 %825, 1
  %843 = sext i32 %841 to i64
  %844 = icmp slt i64 %842, %843
  br i1 %844, label %845, label %849

845:                                              ; preds = %840
  %846 = load i32, i32* %725, align 4
  %847 = zext i32 %846 to i64
  %848 = icmp ult i64 %842, %847
  br i1 %848, label %824, label %849

849:                                              ; preds = %840, %845, %820, %815
  call void @ff_rfps_calculate(%struct.AVFormatContext* %0) #11
  %850 = load i32, i32* %725, align 4
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %925, label %852

852:                                              ; preds = %849
  %853 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %854 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  br label %855

855:                                              ; preds = %852, %920
  %856 = phi i64 [ 0, %852 ], [ %921, %920 ]
  %857 = load %struct.AVStream**, %struct.AVStream*** %853, align 8
  %858 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %857, i64 %856
  %859 = load %struct.AVStream*, %struct.AVStream** %858, align 8
  %860 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %859, i64 0, i32 3
  %861 = bitcast i8** %860 to %struct.MOVStreamContext**
  %862 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %861, align 8
  %863 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %859, i64 0, i32 19
  %864 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %863, align 8
  %865 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %864, i64 0, i32 0
  %866 = load i32, i32* %865, align 8
  switch i32 %866, label %920 [
    i32 1, label %867
    i32 0, label %871
  ]

867:                                              ; preds = %855
  %868 = load %struct.AVDictionary*, %struct.AVDictionary** %854, align 8
  %869 = call i32 @ff_replaygain_export(%struct.AVStream* %859, %struct.AVDictionary* %868) #11
  %870 = icmp slt i32 %869, 0
  br i1 %870, label %948, label %920

871:                                              ; preds = %855
  %872 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 64
  %873 = load i32*, i32** %872, align 8
  %874 = icmp eq i32* %873, null
  br i1 %874, label %880, label %875

875:                                              ; preds = %871
  %876 = bitcast i32* %873 to i8*
  %877 = call i32 @av_stream_add_side_data(%struct.AVStream* %859, i32 5, i8* nonnull %876, i64 36) #11
  %878 = icmp slt i32 %877, 0
  br i1 %878, label %948, label %879

879:                                              ; preds = %875
  store i32* null, i32** %872, align 8
  br label %880

880:                                              ; preds = %871, %879
  %881 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 65
  %882 = load %struct.AVStereo3D*, %struct.AVStereo3D** %881, align 8
  %883 = icmp eq %struct.AVStereo3D* %882, null
  br i1 %883, label %889, label %884

884:                                              ; preds = %880
  %885 = bitcast %struct.AVStereo3D* %882 to i8*
  %886 = call i32 @av_stream_add_side_data(%struct.AVStream* %859, i32 6, i8* nonnull %885, i64 12) #11
  %887 = icmp slt i32 %886, 0
  br i1 %887, label %948, label %888

888:                                              ; preds = %884
  store %struct.AVStereo3D* null, %struct.AVStereo3D** %881, align 8
  br label %889

889:                                              ; preds = %880, %888
  %890 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 66
  %891 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %890, align 8
  %892 = icmp eq %struct.AVSphericalMapping* %891, null
  br i1 %892, label %900, label %893

893:                                              ; preds = %889
  %894 = bitcast %struct.AVSphericalMapping* %891 to i8*
  %895 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 67
  %896 = load i64, i64* %895, align 8
  %897 = call i32 @av_stream_add_side_data(%struct.AVStream* %859, i32 21, i8* nonnull %894, i64 %896) #11
  %898 = icmp slt i32 %897, 0
  br i1 %898, label %948, label %899

899:                                              ; preds = %893
  store %struct.AVSphericalMapping* null, %struct.AVSphericalMapping** %890, align 8
  br label %900

900:                                              ; preds = %889, %899
  %901 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 68
  %902 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %901, align 8
  %903 = icmp eq %struct.AVMasteringDisplayMetadata* %902, null
  br i1 %903, label %909, label %904

904:                                              ; preds = %900
  %905 = bitcast %struct.AVMasteringDisplayMetadata* %902 to i8*
  %906 = call i32 @av_stream_add_side_data(%struct.AVStream* %859, i32 20, i8* nonnull %905, i64 88) #11
  %907 = icmp slt i32 %906, 0
  br i1 %907, label %948, label %908

908:                                              ; preds = %904
  store %struct.AVMasteringDisplayMetadata* null, %struct.AVMasteringDisplayMetadata** %901, align 8
  br label %909

909:                                              ; preds = %900, %908
  %910 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 69
  %911 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %910, align 8
  %912 = icmp eq %struct.AVContentLightMetadata* %911, null
  br i1 %912, label %920, label %913

913:                                              ; preds = %909
  %914 = bitcast %struct.AVContentLightMetadata* %911 to i8*
  %915 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %862, i64 0, i32 70
  %916 = load i64, i64* %915, align 8
  %917 = call i32 @av_stream_add_side_data(%struct.AVStream* %859, i32 22, i8* nonnull %914, i64 %916) #11
  %918 = icmp slt i32 %917, 0
  br i1 %918, label %948, label %919

919:                                              ; preds = %913
  store %struct.AVContentLightMetadata* null, %struct.AVContentLightMetadata** %910, align 8
  br label %920

920:                                              ; preds = %909, %919, %867, %855
  %921 = add nuw nsw i64 %856, 1
  %922 = load i32, i32* %725, align 4
  %923 = zext i32 %922 to i64
  %924 = icmp ult i64 %921, %923
  br i1 %924, label %855, label %925

925:                                              ; preds = %920, %849
  call void @ff_configure_buffers_for_index(%struct.AVFormatContext* %0, i64 1000000) #11
  %926 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 33, i32 3
  %927 = load i32, i32* %926, align 4
  %928 = icmp sgt i32 %927, 0
  br i1 %928, label %929, label %951

929:                                              ; preds = %925
  %930 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 33, i32 4
  %931 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 13, i32 3
  br label %932

932:                                              ; preds = %929, %943
  %933 = phi i32 [ %927, %929 ], [ %944, %943 ]
  %934 = phi i64 [ 0, %929 ], [ %945, %943 ]
  %935 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %930, align 8
  %936 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %935, i64 %934, i32 0
  %937 = load i64, i64* %936, align 8
  %938 = load i64, i64* %931, align 8
  %939 = icmp ugt i64 %937, %938
  br i1 %939, label %943, label %940

940:                                              ; preds = %932
  %941 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %935, i64 %934, i32 1
  store i32 1, i32* %941, align 8
  %942 = load i32, i32* %926, align 4
  br label %943

943:                                              ; preds = %932, %940
  %944 = phi i32 [ %933, %932 ], [ %942, %940 ]
  %945 = add nuw nsw i64 %934, 1
  %946 = sext i32 %944 to i64
  %947 = icmp slt i64 %945, %946
  br i1 %947, label %932, label %951

948:                                              ; preds = %913, %904, %893, %884, %875, %867, %808, %763, %718, %51, %37
  %949 = phi i32 [ %35, %37 ], [ %696, %718 ], [ -1094995529, %763 ], [ -1094995529, %808 ], [ -1094995529, %51 ], [ %869, %867 ], [ %877, %875 ], [ %886, %884 ], [ %897, %893 ], [ %906, %904 ], [ %917, %913 ]
  %950 = call i32 @mov_read_close(%struct.AVFormatContext* %0)
  br label %951

951:                                              ; preds = %943, %925, %948, %13
  %952 = phi i32 [ -22, %13 ], [ %949, %948 ], [ 0, %925 ], [ 0, %943 ]
  ret i32 %952
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_packet(%struct.AVFormatContext*, %struct.AVPacket*) #0 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca i64, align 8
  %5 = alloca %struct.AVStream*, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %7 = bitcast i8** %6 to %struct.MOVContext**
  %8 = load %struct.MOVContext*, %struct.MOVContext** %7, align 8
  %9 = bitcast %struct.AVStream** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %struct.AVStream* null, %struct.AVStream** %5, align 8
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 1
  store %struct.AVFormatContext* %0, %struct.AVFormatContext** %10, align 8
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 25
  %12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %13 = bitcast %struct.AVFormatContext** %10 to i8**
  %14 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 4
  %15 = bitcast i8** %12 to i32**
  %16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 2
  %18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 6
  %19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 1
  %20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 9
  br label %21

21:                                               ; preds = %35, %2
  %22 = call fastcc %struct.AVIndexEntry* @mov_find_next_sample(%struct.AVFormatContext* %0, %struct.AVStream** nonnull %5)
  %23 = icmp eq %struct.AVIndexEntry* %22, null
  %24 = load i64, i64* %11, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %23, label %31, label %26

26:                                               ; preds = %21
  br i1 %25, label %36, label %27

27:                                               ; preds = %26
  %28 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp sgt i64 %29, %24
  br i1 %30, label %32, label %36

31:                                               ; preds = %21
  br i1 %25, label %600, label %32

32:                                               ; preds = %27, %31
  %33 = tail call fastcc i32 @mov_switch_root(%struct.AVFormatContext* %0, i64 %24, i32 -1)
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %600, label %35

35:                                               ; preds = %32, %316, %245
  br label %21

36:                                               ; preds = %26, %27
  %37 = load %struct.AVStream*, %struct.AVStream** %5, align 8
  %38 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 3
  %39 = bitcast i8** %38 to %struct.MOVStreamContext**
  %40 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %39, align 8
  %41 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 34
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 33
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = add nsw i64 %42, 1
  store i64 %46, i64* %41, align 8
  %47 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 35
  %48 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %47, align 8
  %49 = icmp eq %struct.MOVIndexRange* %48, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 36
  %52 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %51, align 8
  %53 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %52, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %46, %54
  %56 = icmp eq i64 %54, 0
  %57 = or i1 %55, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %52, i64 1
  store %struct.MOVIndexRange* %59, %struct.MOVIndexRange** %51, align 8
  %60 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %59, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %41, align 8
  br label %62

62:                                               ; preds = %36, %50, %58
  %63 = load i64, i64* %11, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %82, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp sgt i64 %67, %63
  %69 = select i1 %68, i64 %63, i64 %67
  store i64 %69, i64* %66, align 8
  %70 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = ashr i32 %71, 2
  %73 = sext i32 %72 to i64
  %74 = load i64, i64* %11, align 8
  %75 = sub nsw i64 %74, %69
  %76 = icmp slt i64 %75, %73
  %77 = select i1 %76, i64 %75, i64 %73
  %78 = trunc i64 %77 to i32
  %79 = shl i32 %78, 2
  %80 = and i32 %71, 3
  %81 = or i32 %79, %80
  store i32 %81, i32* %70, align 8
  br label %82

82:                                               ; preds = %62, %65
  %83 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 9
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 48
  br i1 %85, label %249, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 0
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %87, align 8
  %89 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = tail call i64 @avio_seek(%struct.AVIOContext* %88, i64 %90, i32 0) #11
  %92 = load i64, i64* %89, align 8
  %93 = icmp eq i64 %91, %92
  br i1 %93, label %125, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 35
  %96 = load i8*, i8** %13, align 8
  %97 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.408, i64 0, i64 0), i32 %98, i64 %92) #11
  %99 = trunc i64 %91 to i32
  %100 = icmp eq i32 %99, -541478725
  br i1 %100, label %600, label %101

101:                                              ; preds = %94
  %102 = load %struct.AVIOContext*, %struct.AVIOContext** %87, align 8
  %103 = tail call i32 @avio_feof(%struct.AVIOContext* %102) #11
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %600

105:                                              ; preds = %101
  %106 = load i32, i32* %43, align 8
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* %43, align 8
  %108 = load i64, i64* %41, align 8
  %109 = add nsw i64 %108, -1
  store i64 %109, i64* %41, align 8
  %110 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %95, align 8
  %111 = icmp eq %struct.MOVIndexRange* %110, null
  br i1 %111, label %600, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 36
  %114 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %113, align 8
  %115 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %114, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp sle i64 %108, %116
  %118 = icmp ugt %struct.MOVIndexRange* %114, %110
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %600

120:                                              ; preds = %112
  %121 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %114, i64 -1
  store %struct.MOVIndexRange* %121, %struct.MOVIndexRange** %113, align 8
  %122 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %114, i64 -1, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i64 %123, -1
  store i64 %124, i64* %41, align 8
  br label %600

125:                                              ; preds = %86
  %126 = load i32, i32* %83, align 4
  %127 = icmp eq i32 %126, 32
  br i1 %127, label %128, label %133

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %245, label %133

133:                                              ; preds = %128, %125
  %134 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 19
  %135 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %134, align 8
  %136 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %135, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 96257
  %139 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = icmp sgt i32 %140, 35
  %142 = and i1 %138, %141
  %143 = load %struct.AVIOContext*, %struct.AVIOContext** %87, align 8
  br i1 %142, label %144, label %171

144:                                              ; preds = %133
  %145 = lshr i32 %140, 2
  %146 = add nsw i32 %145, -8
  %147 = sdiv i32 %146, 2
  %148 = mul nsw i32 %147, 3
  %149 = tail call i32 @av_new_packet(%struct.AVPacket* %1, i32 %148) #11
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %175, label %151

151:                                              ; preds = %144
  %152 = tail call i64 @avio_skip(%struct.AVIOContext* %143, i64 8) #11
  %153 = icmp sgt i32 %146, 1
  br i1 %153, label %154, label %203

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %168, %154 ], [ 0, %151 ]
  %156 = load i8*, i8** %12, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 %155
  store i8 -4, i8* %157, align 1
  %158 = tail call i32 @avio_r8(%struct.AVIOContext* %143) #11
  %159 = trunc i32 %158 to i8
  %160 = load i8*, i8** %12, align 8
  %161 = add nuw nsw i64 %155, 1
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  store i8 %159, i8* %162, align 1
  %163 = tail call i32 @avio_r8(%struct.AVIOContext* %143) #11
  %164 = trunc i32 %163 to i8
  %165 = load i8*, i8** %12, align 8
  %166 = add nuw nsw i64 %155, 2
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  store i8 %164, i8* %167, align 1
  %168 = add nuw i64 %155, 3
  %169 = trunc i64 %168 to i32
  %170 = icmp sgt i32 %148, %169
  br i1 %170, label %154, label %203

171:                                              ; preds = %133
  %172 = ashr i32 %140, 2
  %173 = tail call i32 @av_get_packet(%struct.AVIOContext* %143, %struct.AVPacket* %1, i32 %172) #11
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %175, label %203

175:                                              ; preds = %144, %171
  %176 = phi i32 [ %173, %171 ], [ %149, %144 ]
  %177 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 35
  %178 = icmp eq i32 %176, -541478725
  br i1 %178, label %600, label %179

179:                                              ; preds = %175
  %180 = load %struct.AVIOContext*, %struct.AVIOContext** %87, align 8
  %181 = tail call i32 @avio_feof(%struct.AVIOContext* %180) #11
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %600

183:                                              ; preds = %179
  %184 = load i32, i32* %43, align 8
  %185 = add nsw i32 %184, -1
  store i32 %185, i32* %43, align 8
  %186 = load i64, i64* %41, align 8
  %187 = add nsw i64 %186, -1
  store i64 %187, i64* %41, align 8
  %188 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %177, align 8
  %189 = icmp eq %struct.MOVIndexRange* %188, null
  br i1 %189, label %600, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 36
  %192 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %191, align 8
  %193 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %192, i64 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp sle i64 %186, %194
  %196 = icmp ugt %struct.MOVIndexRange* %192, %188
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %600

198:                                              ; preds = %190
  %199 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %192, i64 -1
  store %struct.MOVIndexRange* %199, %struct.MOVIndexRange** %191, align 8
  %200 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %192, i64 -1, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = add nsw i64 %201, -1
  store i64 %202, i64* %41, align 8
  br label %600

203:                                              ; preds = %154, %151, %171
  %204 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 50
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %215, label %207

207:                                              ; preds = %203
  %208 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %1, i32 0, i32 1024) #11
  %209 = icmp eq i8* %208, null
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = load i8*, i8** %13, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %211, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.410, i64 0, i64 0)) #11
  br label %215

212:                                              ; preds = %207
  %213 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 49, i64 0
  %214 = bitcast i32* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %208, i8* align 4 %214, i64 1024, i1 false)
  store i32 0, i32* %204, align 4
  br label %215

215:                                              ; preds = %210, %212, %203
  %216 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %134, align 8
  %217 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %216, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 86017
  br i1 %219, label %220, label %249

220:                                              ; preds = %215
  %221 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 28
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %249

224:                                              ; preds = %220
  %225 = load i32, i32* %14, align 8
  %226 = icmp sgt i32 %225, 4
  br i1 %226, label %227, label %249

227:                                              ; preds = %224
  %228 = load i32*, i32** %15, align 8
  %229 = load i32, i32* %228, align 1
  %230 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %229) #14, !srcloc !3
  %231 = icmp ult i32 %230, -2097152
  %232 = and i32 %230, 1572864
  %233 = icmp eq i32 %232, 524288
  %234 = or i1 %231, %233
  %235 = and i32 %230, 393216
  %236 = icmp eq i32 %235, 0
  %237 = or i1 %236, %234
  %238 = and i32 %230, 61440
  %239 = icmp eq i32 %238, 61440
  %240 = or i1 %239, %237
  %241 = and i32 %230, 3072
  %242 = icmp eq i32 %241, 3072
  %243 = or i1 %242, %240
  br i1 %243, label %244, label %249

244:                                              ; preds = %227
  store i32 1, i32* %221, align 4
  br label %249

245:                                              ; preds = %128
  %246 = load i8*, i8** %13, align 8
  %247 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 2
  %248 = load i32, i32* %247, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %246, i32 48, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.409, i64 0, i64 0), i32 %248) #11
  br label %35

249:                                              ; preds = %227, %215, %224, %244, %220, %82
  %250 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 2
  %251 = load i32, i32* %250, align 4
  store i32 %251, i32* %16, align 4
  %252 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 1
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %17, align 8
  %254 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %249
  %259 = load i32, i32* %18, align 8
  %260 = or i32 %259, 4
  store i32 %260, i32* %18, align 8
  br label %261

261:                                              ; preds = %249, %258
  %262 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 12
  %263 = load %struct.MOVStts*, %struct.MOVStts** %262, align 8
  %264 = icmp eq %struct.MOVStts* %263, null
  br i1 %264, label %295, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 21
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 10
  %269 = load i32, i32* %268, align 8
  %270 = icmp ult i32 %267, %269
  br i1 %270, label %271, label %295

271:                                              ; preds = %265
  %272 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 48
  %273 = load i32, i32* %272, align 8
  %274 = sext i32 %273 to i64
  %275 = add nsw i64 %253, %274
  %276 = sext i32 %267 to i64
  %277 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %263, i64 %276, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %278 to i64
  %280 = add nsw i64 %275, %279
  store i64 %280, i64* %19, align 8
  %281 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 22
  %282 = load i32, i32* %281, align 8
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %281, align 8
  %284 = load i32, i32* %266, align 4
  %285 = load i32, i32* %268, align 8
  %286 = icmp ult i32 %284, %285
  br i1 %286, label %287, label %316

287:                                              ; preds = %271
  %288 = load %struct.MOVStts*, %struct.MOVStts** %262, align 8
  %289 = sext i32 %284 to i64
  %290 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %288, i64 %289, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, %283
  br i1 %292, label %293, label %316

293:                                              ; preds = %287
  %294 = add nuw nsw i32 %284, 1
  store i32 %294, i32* %266, align 4
  store i32 0, i32* %281, align 8
  br label %316

295:                                              ; preds = %261, %265
  %296 = load i32, i32* %43, align 8
  %297 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 40
  %298 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %297, align 8
  %299 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %298, i64 0, i32 12
  %300 = load i32, i32* %299, align 8
  %301 = icmp slt i32 %296, %300
  br i1 %301, label %302, label %307

302:                                              ; preds = %295
  %303 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %298, i64 0, i32 11
  %304 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %303, align 8
  %305 = sext i32 %296 to i64
  %306 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %304, i64 %305, i32 1
  br label %309

307:                                              ; preds = %295
  %308 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 6
  br label %309

309:                                              ; preds = %307, %302
  %310 = phi i64* [ %306, %302 ], [ %308, %307 ]
  %311 = load i64, i64* %310, align 8
  %312 = icmp slt i64 %311, %253
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = sub nsw i64 %311, %253
  store i64 %314, i64* %20, align 8
  br label %315

315:                                              ; preds = %309, %313
  store i64 %253, i64* %19, align 8
  br label %316

316:                                              ; preds = %271, %287, %293, %315
  %317 = load i32, i32* %83, align 4
  %318 = icmp eq i32 %317, 48
  br i1 %318, label %35, label %319

319:                                              ; preds = %316
  %320 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 2
  %321 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 9
  %322 = load i8*, i8** %321, align 8
  %323 = icmp eq i8* %322, null
  br i1 %323, label %339, label %324

324:                                              ; preds = %319
  %325 = load i32, i32* %43, align 8
  %326 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 8
  %327 = load i32, i32* %326, align 8
  %328 = icmp ugt i32 %325, %327
  br i1 %328, label %339, label %329

329:                                              ; preds = %324
  %330 = add nsw i32 %325, -1
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8, i8* %322, i64 %331
  %333 = load i8, i8* %332, align 1
  %334 = and i8 %333, 12
  %335 = icmp eq i8 %334, 8
  %336 = select i1 %335, i32 16, i32 0
  %337 = load i32, i32* %18, align 8
  %338 = or i32 %336, %337
  store i32 %338, i32* %18, align 8
  br label %339

339:                                              ; preds = %324, %319, %329
  %340 = load i32, i32* %320, align 8
  %341 = and i32 %340, 1
  %342 = load i32, i32* %18, align 8
  %343 = or i32 %342, %341
  store i32 %343, i32* %18, align 8
  %344 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %22, i64 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 10
  store i64 %345, i64* %346, align 8
  %347 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 14
  %348 = load %struct.MOVStsc*, %struct.MOVStsc** %347, align 8
  %349 = icmp eq %struct.MOVStsc* %348, null
  br i1 %349, label %411, label %350

350:                                              ; preds = %339
  %351 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 16
  %352 = load i32, i32* %351, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %351, align 4
  %354 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 15
  %355 = load i32, i32* %354, align 8
  %356 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 13
  %357 = load i32, i32* %356, align 8
  %358 = add i32 %357, -1
  %359 = icmp ugt i32 %358, %355
  br i1 %359, label %362, label %360

360:                                              ; preds = %350
  %361 = zext i32 %355 to i64
  br label %379

362:                                              ; preds = %350
  %363 = add nuw i32 %355, 1
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %348, i64 %364, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %355 to i64
  %368 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %348, i64 %367, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = sub nsw i32 %366, %369
  %371 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %348, i64 %367, i32 1
  %372 = load i32, i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = sext i32 %370 to i64
  %375 = mul nsw i64 %373, %374
  %376 = sext i32 %353 to i64
  %377 = icmp eq i64 %375, %376
  br i1 %377, label %378, label %379

378:                                              ; preds = %362
  store i32 %363, i32* %354, align 8
  store i32 0, i32* %351, align 4
  br label %411

379:                                              ; preds = %360, %362
  %380 = phi i64 [ %361, %360 ], [ %367, %362 ]
  %381 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %348, i64 %380, i32 2
  %382 = load i32, i32* %381, align 4
  %383 = icmp sgt i32 %382, 0
  br i1 %383, label %384, label %411

384:                                              ; preds = %379
  %385 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 62
  %386 = load i32, i32* %385, align 4
  %387 = icmp sgt i32 %382, %386
  br i1 %387, label %411, label %388

388:                                              ; preds = %384
  %389 = add nsw i32 %382, -1
  %390 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 61
  %391 = load i32, i32* %390, align 8
  %392 = icmp eq i32 %389, %391
  br i1 %392, label %411, label %393

393:                                              ; preds = %388
  store i32 %389, i32* %390, align 8
  %394 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 60
  %395 = load i32*, i32** %394, align 8
  %396 = sext i32 %389 to i64
  %397 = getelementptr inbounds i32, i32* %395, i64 %396
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 59
  %400 = load i8**, i8*** %399, align 8
  %401 = getelementptr inbounds i8*, i8** %400, i64 %396
  %402 = load i8*, i8** %401, align 8
  %403 = icmp sgt i32 %398, 0
  %404 = icmp ne i8* %402, null
  %405 = and i1 %403, %404
  br i1 %405, label %406, label %411

406:                                              ; preds = %393
  %407 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %1, i32 1, i32 %398) #11
  %408 = icmp eq i8* %407, null
  br i1 %408, label %600, label %409

409:                                              ; preds = %406
  %410 = sext i32 %398 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %407, i8* nonnull align 1 %402, i64 %410, i1 false) #11
  br label %411

411:                                              ; preds = %393, %409, %388, %384, %339, %378, %379
  %412 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 35
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %426, label %415

415:                                              ; preds = %411
  %416 = load i8*, i8** %12, align 8
  %417 = load i32, i32* %14, align 8
  %418 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %418) #11
  %419 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 37, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %418, i8* align 4 %419, i64 16, i1 false) #11
  %420 = ashr i32 %417, 4
  %421 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 46
  %422 = load %struct.AVAES*, %struct.AVAES** %421, align 8
  %423 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 36, i64 0
  %424 = tail call i32 @av_aes_init(%struct.AVAES* %422, i8* %423, i32 128, i32 1) #11
  %425 = load %struct.AVAES*, %struct.AVAES** %421, align 8
  call void @av_aes_crypt(%struct.AVAES* %425, i8* %416, i8* %416, i32 %420, i8* nonnull %418, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %418) #11
  br label %426

426:                                              ; preds = %411, %415
  %427 = trunc i64 %42 to i32
  %428 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 33, i32 2
  %429 = load i32, i32* %428, align 8
  %430 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = icmp slt i32 %429, 0
  br i1 %432, label %471, label %433

433:                                              ; preds = %426
  %434 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 33, i32 3
  %435 = load i32, i32* %434, align 4
  %436 = icmp sgt i32 %435, %429
  br i1 %436, label %437, label %471

437:                                              ; preds = %433
  %438 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 33, i32 4
  %439 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %438, align 8
  %440 = sext i32 %429 to i64
  %441 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %439, i64 %440, i32 3
  %442 = load i32, i32* %441, align 8
  %443 = icmp sgt i32 %442, 0
  br i1 %443, label %444, label %471

444:                                              ; preds = %437
  %445 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %439, i64 %440, i32 4
  %446 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %445, align 8
  %447 = sext i32 %442 to i64
  br label %450

448:                                              ; preds = %450
  %449 = icmp eq i64 %456, %447
  br i1 %449, label %471, label %450

450:                                              ; preds = %448, %444
  %451 = phi i64 [ 0, %444 ], [ %456, %448 ]
  %452 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %446, i64 %451
  %453 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %452, i64 0, i32 0
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %454, %431
  %456 = add nuw nsw i64 %451, 1
  br i1 %455, label %457, label %448

457:                                              ; preds = %450
  %458 = icmp eq %struct.MOVFragmentStreamInfo* %452, null
  br i1 %458, label %471, label %459

459:                                              ; preds = %457
  %460 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 13, i32 5
  %461 = load i32, i32* %460, align 8
  %462 = icmp eq i32 %461, 1
  br i1 %462, label %463, label %600

463:                                              ; preds = %459
  %464 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %446, i64 %451, i32 6
  %465 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %464, align 8
  %466 = icmp eq %struct.MOVEncryptionIndex* %465, null
  br i1 %466, label %471, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %446, i64 %451, i32 5
  %469 = load i32, i32* %468, align 8
  %470 = sub nsw i32 %427, %469
  br label %475

471:                                              ; preds = %448, %463, %457, %437, %433, %426
  %472 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 73, i32 3
  %473 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %472, align 8
  %474 = icmp eq %struct.MOVEncryptionIndex* %473, null
  br i1 %474, label %600, label %475

475:                                              ; preds = %471, %467
  %476 = phi i32 [ %470, %467 ], [ %427, %471 ]
  %477 = phi %struct.MOVEncryptionIndex* [ %465, %467 ], [ %473, %471 ]
  %478 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %477, i64 0, i32 3
  %479 = load i64, i64* %478, align 8
  %480 = icmp ne i64 %479, 0
  %481 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %477, i64 0, i32 0
  %482 = load i32, i32* %481, align 8
  %483 = icmp eq i32 %482, 0
  %484 = and i1 %480, %483
  br i1 %484, label %485, label %487

485:                                              ; preds = %475
  %486 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %486, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.415, i64 0, i64 0)) #11
  br label %600

487:                                              ; preds = %475
  %488 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %477, i64 0, i32 6
  %489 = load i64, i64* %488, align 8
  %490 = icmp eq i64 %489, 0
  %491 = icmp eq i32 %482, 0
  br i1 %490, label %495, label %492

492:                                              ; preds = %487
  br i1 %491, label %493, label %498

493:                                              ; preds = %492
  %494 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %494, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.416, i64 0, i64 0)) #11
  br label %600

495:                                              ; preds = %487
  br i1 %491, label %496, label %498

496:                                              ; preds = %495
  %497 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 73, i32 2
  br label %509

498:                                              ; preds = %495, %492
  %499 = icmp sgt i32 %476, -1
  %500 = icmp ult i32 %476, %482
  %501 = and i1 %499, %500
  br i1 %501, label %502, label %507

502:                                              ; preds = %498
  %503 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %477, i64 0, i32 1
  %504 = load %struct.AVEncryptionInfo**, %struct.AVEncryptionInfo*** %503, align 8
  %505 = sext i32 %476 to i64
  %506 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %504, i64 %505
  br label %509

507:                                              ; preds = %498
  %508 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %508, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.417, i64 0, i64 0)) #11
  br label %600

509:                                              ; preds = %502, %496
  %510 = phi %struct.AVEncryptionInfo** [ %506, %502 ], [ %497, %496 ]
  %511 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %510, align 8
  %512 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 47
  %513 = load i8*, i8** %512, align 8
  %514 = icmp eq i8* %513, null
  br i1 %514, label %588, label %515

515:                                              ; preds = %509
  %516 = load i8*, i8** %12, align 8
  %517 = load i32, i32* %14, align 8
  %518 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 0
  %519 = load i32, i32* %518, align 8
  %520 = icmp eq i32 %519, 1667591779
  br i1 %520, label %521, label %529

521:                                              ; preds = %515
  %522 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %529

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 2
  %527 = load i32, i32* %526, align 8
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %531, label %529

529:                                              ; preds = %525, %521, %515
  %530 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %530, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.418, i64 0, i64 0)) #11
  br label %600

531:                                              ; preds = %525
  %532 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %40, i64 0, i32 73, i32 0
  %533 = load %struct.AVAESCTR*, %struct.AVAESCTR** %532, align 8
  %534 = icmp eq %struct.AVAESCTR* %533, null
  br i1 %534, label %535, label %544

535:                                              ; preds = %531
  %536 = call %struct.AVAESCTR* @av_aes_ctr_alloc() #11
  store %struct.AVAESCTR* %536, %struct.AVAESCTR** %532, align 8
  %537 = icmp eq %struct.AVAESCTR* %536, null
  br i1 %537, label %600, label %538

538:                                              ; preds = %535
  %539 = load i8*, i8** %512, align 8
  %540 = call i32 @av_aes_ctr_init(%struct.AVAESCTR* nonnull %536, i8* %539) #11
  %541 = icmp slt i32 %540, 0
  br i1 %541, label %600, label %542

542:                                              ; preds = %538
  %543 = load %struct.AVAESCTR*, %struct.AVAESCTR** %532, align 8
  br label %544

544:                                              ; preds = %542, %531
  %545 = phi %struct.AVAESCTR* [ %543, %542 ], [ %533, %531 ]
  %546 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 5
  %547 = load i8*, i8** %546, align 8
  call void @av_aes_ctr_set_full_iv(%struct.AVAESCTR* %545, i8* %547) #11
  %548 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 8
  %549 = load i32, i32* %548, align 8
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %554, label %551

551:                                              ; preds = %544
  %552 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %511, i64 0, i32 7
  %553 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %552, align 8
  br label %556

554:                                              ; preds = %544
  %555 = load %struct.AVAESCTR*, %struct.AVAESCTR** %532, align 8
  call void @av_aes_ctr_crypt(%struct.AVAESCTR* %555, i8* %516, i8* %516, i32 %517) #11
  br label %600

556:                                              ; preds = %569, %551
  %557 = phi %struct.AVSubsampleEncryptionInfo* [ %553, %551 ], [ %574, %569 ]
  %558 = phi i64 [ 0, %551 ], [ %580, %569 ]
  %559 = phi i32 [ %517, %551 ], [ %579, %569 ]
  %560 = phi i8* [ %516, %551 ], [ %578, %569 ]
  %561 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %557, i64 %558, i32 0
  %562 = load i32, i32* %561, align 4
  %563 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %557, i64 %558, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = add i32 %564, %562
  %566 = icmp ugt i32 %565, %559
  br i1 %566, label %567, label %569

567:                                              ; preds = %556
  %568 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %568, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.419, i64 0, i64 0)) #11
  br label %600

569:                                              ; preds = %556
  %570 = zext i32 %562 to i64
  %571 = getelementptr inbounds i8, i8* %560, i64 %570
  %572 = sub i32 %559, %562
  %573 = load %struct.AVAESCTR*, %struct.AVAESCTR** %532, align 8
  call void @av_aes_ctr_crypt(%struct.AVAESCTR* %573, i8* %571, i8* %571, i32 %564) #11
  %574 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %552, align 8
  %575 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %574, i64 %558, i32 1
  %576 = load i32, i32* %575, align 4
  %577 = zext i32 %576 to i64
  %578 = getelementptr inbounds i8, i8* %571, i64 %577
  %579 = sub i32 %572, %576
  %580 = add nuw nsw i64 %558, 1
  %581 = load i32, i32* %548, align 8
  %582 = zext i32 %581 to i64
  %583 = icmp ult i64 %580, %582
  br i1 %583, label %556, label %584

584:                                              ; preds = %569
  %585 = icmp sgt i32 %579, 0
  br i1 %585, label %586, label %600

586:                                              ; preds = %584
  %587 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %587, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.420, i64 0, i64 0)) #11
  br label %600

588:                                              ; preds = %509
  %589 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %590 = call i8* @av_encryption_info_add_side_data(%struct.AVEncryptionInfo* %511, i64* nonnull %4) #11
  %591 = icmp eq i8* %590, null
  br i1 %591, label %597, label %592

592:                                              ; preds = %588
  %593 = load i64, i64* %4, align 8
  %594 = call i32 @av_packet_add_side_data(%struct.AVPacket* %1, i32 25, i8* nonnull %590, i64 %593) #11
  %595 = icmp slt i32 %594, 0
  br i1 %595, label %596, label %599

596:                                              ; preds = %592
  call void @av_free(i8* nonnull %590) #11
  br label %597

597:                                              ; preds = %588, %596
  %598 = phi i32 [ %594, %596 ], [ -12, %588 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #11
  br label %600

599:                                              ; preds = %592
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #11
  br label %600

600:                                              ; preds = %32, %31, %179, %101, %459, %584, %554, %471, %538, %535, %586, %567, %529, %485, %493, %507, %175, %94, %198, %190, %183, %120, %112, %105, %599, %597, %406
  %601 = phi i32 [ -12, %406 ], [ 0, %599 ], [ %598, %597 ], [ %176, %198 ], [ %176, %190 ], [ %176, %183 ], [ -1094995529, %120 ], [ -1094995529, %112 ], [ -1094995529, %105 ], [ %176, %179 ], [ -1094995529, %101 ], [ -1094995529, %94 ], [ -541478725, %175 ], [ %540, %538 ], [ -12, %535 ], [ -1094995529, %586 ], [ -1094995529, %567 ], [ -1163346256, %529 ], [ -1094995529, %485 ], [ -1094995529, %493 ], [ -1094995529, %507 ], [ 0, %471 ], [ 0, %554 ], [ 0, %584 ], [ 0, %459 ], [ %33, %32 ], [ -541478725, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i32 %601
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_close(%struct.AVFormatContext*) #0 {
  %2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %struct.MOVContext**
  %4 = load %struct.MOVContext*, %struct.MOVContext** %3, align 8
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %113, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  br label %10

10:                                               ; preds = %8, %108
  %11 = phi i32 [ %6, %8 ], [ %109, %108 ]
  %12 = phi i64 [ 0, %8 ], [ %110, %108 ]
  %13 = load %struct.AVStream**, %struct.AVStream*** %9, align 8
  %14 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %13, i64 %12
  %15 = load %struct.AVStream*, %struct.AVStream** %14, align 8
  %16 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i64 0, i32 3
  %17 = bitcast i8** %16 to %struct.MOVStreamContext**
  %18 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %17, align 8
  %19 = icmp eq %struct.MOVStreamContext* %18, null
  br i1 %19, label %108, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 12
  %22 = bitcast %struct.MOVStts** %21 to i8*
  tail call void @av_freep(i8* %22) #11
  %23 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 42
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 43
  br i1 %25, label %39, label %27

27:                                               ; preds = %20, %27
  %28 = phi i64 [ %35, %27 ], [ 0, %20 ]
  %29 = load %struct.MOVDref*, %struct.MOVDref** %26, align 8
  %30 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %29, i64 %28, i32 1
  %31 = bitcast i8** %30 to i8*
  tail call void @av_freep(i8* %31) #11
  %32 = load %struct.MOVDref*, %struct.MOVDref** %26, align 8
  %33 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %32, i64 %28, i32 2
  %34 = bitcast i8** %33 to i8*
  tail call void @av_freep(i8* %34) #11
  %35 = add nuw nsw i64 %28, 1
  %36 = load i32, i32* %23, align 4
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %27, label %39

39:                                               ; preds = %27, %20
  %40 = bitcast %struct.MOVDref** %26 to i8*
  tail call void @av_freep(i8* %40) #11
  store i32 0, i32* %23, align 4
  %41 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 0
  tail call void @ff_format_io_close(%struct.AVFormatContext* %0, %struct.AVIOContext** %45) #11
  br label %46

46:                                               ; preds = %39, %44
  %47 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 0
  store %struct.AVIOContext* null, %struct.AVIOContext** %47, align 8
  %48 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 5
  %49 = bitcast i64** %48 to i8*
  tail call void @av_freep(i8* %49) #11
  %50 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 14
  %51 = bitcast %struct.MOVStsc** %50 to i8*
  tail call void @av_freep(i8* %51) #11
  %52 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 26
  %53 = bitcast i32** %52 to i8*
  tail call void @av_freep(i8* %53) #11
  %54 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 29
  %55 = bitcast i32** %54 to i8*
  tail call void @av_freep(i8* %55) #11
  %56 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 7
  %57 = bitcast %struct.MOVStts** %56 to i8*
  tail call void @av_freep(i8* %57) #11
  %58 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 9
  %59 = bitcast i8** %58 to i8*
  tail call void @av_freep(i8* %59) #11
  %60 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 18
  %61 = bitcast i32** %60 to i8*
  tail call void @av_freep(i8* %61) #11
  %62 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 19
  %63 = bitcast %struct.MOVElst** %62 to i8*
  tail call void @av_freep(i8* %63) #11
  %64 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 56
  %65 = bitcast %struct.MOVSbgp** %64 to i8*
  tail call void @av_freep(i8* %65) #11
  %66 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 64
  %67 = bitcast i32** %66 to i8*
  tail call void @av_freep(i8* %67) #11
  %68 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 35
  %69 = bitcast %struct.MOVIndexRange** %68 to i8*
  tail call void @av_freep(i8* %69) #11
  %70 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 59
  %71 = load i8**, i8*** %70, align 8
  %72 = icmp eq i8** %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %46
  %74 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 62
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %73
  %78 = load i8*, i8** %71, align 8
  tail call void @av_free(i8* %78) #11
  %79 = load i32, i32* %74, align 4
  %80 = icmp sgt i32 %79, 1
  br i1 %80, label %81, label %90

81:                                               ; preds = %77, %81
  %82 = phi i64 [ %86, %81 ], [ 1, %77 ]
  %83 = load i8**, i8*** %70, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 %82
  %85 = load i8*, i8** %84, align 8
  tail call void @av_free(i8* %85) #11
  %86 = add nuw nsw i64 %82, 1
  %87 = load i32, i32* %74, align 4
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %81, label %90

90:                                               ; preds = %81, %77, %73, %46
  %91 = bitcast i8*** %70 to i8*
  tail call void @av_freep(i8* %91) #11
  %92 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 60
  %93 = bitcast i32** %92 to i8*
  tail call void @av_freep(i8* %93) #11
  %94 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 73, i32 3
  tail call fastcc void @mov_free_encryption_index(%struct.MOVEncryptionIndex** %94)
  %95 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 73, i32 2
  %96 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %95, align 8
  tail call void @av_encryption_info_free(%struct.AVEncryptionInfo* %96) #11
  %97 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 73, i32 0
  %98 = load %struct.AVAESCTR*, %struct.AVAESCTR** %97, align 8
  tail call void @av_aes_ctr_free(%struct.AVAESCTR* %98) #11
  %99 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 65
  %100 = bitcast %struct.AVStereo3D** %99 to i8*
  tail call void @av_freep(i8* %100) #11
  %101 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 66
  %102 = bitcast %struct.AVSphericalMapping** %101 to i8*
  tail call void @av_freep(i8* %102) #11
  %103 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 68
  %104 = bitcast %struct.AVMasteringDisplayMetadata** %103 to i8*
  tail call void @av_freep(i8* %104) #11
  %105 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %18, i64 0, i32 69
  %106 = bitcast %struct.AVContentLightMetadata** %105 to i8*
  tail call void @av_freep(i8* %106) #11
  %107 = load i32, i32* %5, align 4
  br label %108

108:                                              ; preds = %10, %90
  %109 = phi i32 [ %11, %10 ], [ %107, %90 ]
  %110 = add nuw nsw i64 %12, 1
  %111 = zext i32 %109 to i64
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %10, label %113

113:                                              ; preds = %108, %1
  %114 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 10
  %115 = bitcast %struct.DVDemuxContext** %114 to i8*
  tail call void @av_freep(i8* %115) #11
  %116 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 11
  %117 = load %struct.AVFormatContext*, %struct.AVFormatContext** %116, align 8
  tail call void @avformat_free_context(%struct.AVFormatContext* %117) #11
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %116, align 8
  %118 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 8
  %119 = load i8**, i8*** %118, align 8
  %120 = icmp eq i8** %119, null
  br i1 %120, label %141, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 9
  %123 = load i32, i32* %122, align 8
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %125, label %139

125:                                              ; preds = %121
  %126 = getelementptr inbounds i8*, i8** %119, i64 1
  %127 = bitcast i8** %126 to i8*
  tail call void @av_freep(i8* %127) #11
  %128 = load i32, i32* %122, align 8
  %129 = icmp ugt i32 %128, 2
  br i1 %129, label %130, label %139

130:                                              ; preds = %125, %130
  %131 = phi i64 [ %135, %130 ], [ 2, %125 ]
  %132 = load i8**, i8*** %118, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i64 %131
  %134 = bitcast i8** %133 to i8*
  tail call void @av_freep(i8* %134) #11
  %135 = add nuw nsw i64 %131, 1
  %136 = load i32, i32* %122, align 8
  %137 = zext i32 %136 to i64
  %138 = icmp ult i64 %135, %137
  br i1 %138, label %130, label %139

139:                                              ; preds = %130, %125, %121
  %140 = bitcast i8*** %118 to i8*
  tail call void @av_freep(i8* %140) #11
  br label %141

141:                                              ; preds = %113, %139
  %142 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 14
  %143 = bitcast %struct.MOVTrackExt** %142 to i8*
  tail call void @av_freep(i8* %143) #11
  %144 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 28
  %145 = bitcast i32** %144 to i8*
  tail call void @av_freep(i8* %145) #11
  %146 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 33, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = icmp sgt i32 %147, 0
  %149 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 33, i32 4
  br i1 %148, label %150, label %175

150:                                              ; preds = %141, %167
  %151 = phi i64 [ %171, %167 ], [ 0, %141 ]
  %152 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %149, align 8
  %153 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %152, i64 %151, i32 4
  %154 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %153, align 8
  %155 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %152, i64 %151, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %167

158:                                              ; preds = %150, %158
  %159 = phi i64 [ %161, %158 ], [ 0, %150 ]
  %160 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %154, i64 %159, i32 6
  tail call fastcc void @mov_free_encryption_index(%struct.MOVEncryptionIndex** %160)
  %161 = add nuw nsw i64 %159, 1
  %162 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %149, align 8
  %163 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %162, i64 %151, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = sext i32 %164 to i64
  %166 = icmp slt i64 %161, %165
  br i1 %166, label %158, label %167

167:                                              ; preds = %158, %150
  %168 = phi %struct.MOVFragmentIndexItem* [ %152, %150 ], [ %162, %158 ]
  %169 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %168, i64 %151, i32 4
  %170 = bitcast %struct.MOVFragmentStreamInfo** %169 to i8*
  tail call void @av_freep(i8* %170) #11
  %171 = add nuw nsw i64 %151, 1
  %172 = load i32, i32* %146, align 4
  %173 = sext i32 %172 to i64
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %150, label %175

175:                                              ; preds = %167, %141
  %176 = bitcast %struct.MOVFragmentIndexItem** %149 to i8*
  tail call void @av_freep(i8* %176) #11
  %177 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 46
  %178 = bitcast %struct.AVAES** %177 to i8*
  tail call void @av_freep(i8* %178) #11
  %179 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %4, i64 0, i32 18
  %180 = bitcast i32** %179 to i8*
  tail call void @av_freep(i8* %180) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_seek(%struct.AVFormatContext*, i32, i64, i32) #0 {
  %5 = alloca %struct.AVStream*, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %7 = bitcast i8** %6 to %struct.MOVContext**
  %8 = load %struct.MOVContext*, %struct.MOVContext** %7, align 8
  %9 = bitcast %struct.AVStream** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %struct.AVStream* inttoptr (i64 -6148914691236517206 to %struct.AVStream*), %struct.AVStream** %5, align 8
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %213

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  store %struct.AVStream* %18, %struct.AVStream** %5, align 8
  %19 = tail call fastcc i32 @mov_seek_stream(%struct.AVFormatContext* %0, %struct.AVStream* %18, i64 %2, i32 %3)
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %213, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %8, i64 0, i32 24
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = load i32, i32* %10, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %132, label %135

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 40
  %30 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %29, align 8
  %31 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %30, i64 0, i32 11
  %32 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %31, align 8
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %32, i64 %33, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %36, align 8
  %38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %64

41:                                               ; preds = %28
  %42 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %32, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 3
  %45 = bitcast i8** %44 to %struct.MOVStreamContext**
  %46 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %45, align 8
  %47 = sub nsw i64 %35, %43
  %48 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 4
  %49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i64 0, i32 23
  %50 = load i32, i32* %49, align 4
  %51 = bitcast %struct.AVRational* %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = zext i32 %50 to i64
  %54 = shl nuw i64 %53, 32
  %55 = or i64 %54, 1
  %56 = tail call i64 @av_rescale_q(i64 %47, i64 %52, i64 %55) #14
  %57 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %46, i64 0, i32 54
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = sub nsw i64 %59, %56
  %61 = icmp sgt i64 %60, 0
  %62 = select i1 %61, i64 %60, i64 0
  %63 = trunc i64 %62 to i32
  br label %64

64:                                               ; preds = %28, %41
  %65 = phi i32 [ %63, %41 ], [ 0, %28 ]
  %66 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %30, i64 0, i32 18
  store i32 %65, i32* %66, align 8
  %67 = load i32, i32* %10, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %213, label %69

69:                                               ; preds = %64
  %70 = zext i32 %1 to i64
  br label %71

71:                                               ; preds = %69, %126
  %72 = phi i64 [ 0, %69 ], [ %127, %126 ]
  %73 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %74 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %73, i64 %72
  %75 = load %struct.AVStream*, %struct.AVStream** %74, align 8
  %76 = icmp eq i64 %72, %70
  br i1 %76, label %126, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %73, i64 %16
  %79 = load %struct.AVStream*, %struct.AVStream** %78, align 8
  %80 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %79, i64 0, i32 4
  %81 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i64 0, i32 4
  %82 = bitcast %struct.AVRational* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %struct.AVRational* %81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64 @av_rescale_q(i64 %35, i64 %83, i64 %85) #14
  %87 = tail call fastcc i32 @mov_seek_stream(%struct.AVFormatContext* %0, %struct.AVStream* %75, i64 %86, i32 %3)
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %126

89:                                               ; preds = %77
  %90 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i64 0, i32 40
  %91 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %90, align 8
  %92 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %91, i64 0, i32 11
  %93 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %92, align 8
  %94 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i64 0, i32 19
  %95 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %94, align 8
  %96 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %122

99:                                               ; preds = %89
  %100 = sext i32 %87 to i64
  %101 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %93, i64 %100, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %93, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i64 0, i32 3
  %106 = bitcast i8** %105 to %struct.MOVStreamContext**
  %107 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %106, align 8
  %108 = sub nsw i64 %102, %104
  %109 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %95, i64 0, i32 23
  %110 = load i32, i32* %109, align 4
  %111 = load i64, i64* %84, align 8
  %112 = zext i32 %110 to i64
  %113 = shl nuw i64 %112, 32
  %114 = or i64 %113, 1
  %115 = tail call i64 @av_rescale_q(i64 %108, i64 %111, i64 %114) #14
  %116 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %107, i64 0, i32 54
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = sub nsw i64 %118, %115
  %120 = icmp sgt i64 %119, 0
  %121 = select i1 %120, i64 %119, i64 0
  br label %122

122:                                              ; preds = %89, %99
  %123 = phi i64 [ %121, %99 ], [ 0, %89 ]
  %124 = trunc i64 %123 to i32
  %125 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %91, i64 0, i32 18
  store i32 %124, i32* %125, align 8
  br label %126

126:                                              ; preds = %77, %122, %71
  %127 = add nuw nsw i64 %72, 1
  %128 = load i32, i32* %10, align 4
  %129 = zext i32 %128 to i64
  %130 = icmp ult i64 %127, %129
  br i1 %130, label %71, label %212

131:                                              ; preds = %171
  store %struct.AVStream* %139, %struct.AVStream** %5, align 8
  br label %132

132:                                              ; preds = %25, %131
  %133 = call fastcc %struct.AVIndexEntry* @mov_find_next_sample(%struct.AVFormatContext* %0, %struct.AVStream** nonnull %5)
  %134 = icmp eq %struct.AVIndexEntry* %133, null
  br i1 %134, label %213, label %176

135:                                              ; preds = %25, %171
  %136 = phi i64 [ %172, %171 ], [ 0, %25 ]
  %137 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %138 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %137, i64 %136
  %139 = load %struct.AVStream*, %struct.AVStream** %138, align 8
  %140 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %139, i64 0, i32 3
  %141 = bitcast i8** %140 to %struct.MOVStreamContext**
  %142 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %141, align 8
  %143 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %142, i64 0, i32 33
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %142, i64 0, i32 34
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %142, i64 0, i32 35
  %146 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %145, align 8
  %147 = icmp eq %struct.MOVIndexRange* %146, null
  br i1 %147, label %171, label %148

148:                                              ; preds = %135
  %149 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %142, i64 0, i32 36
  store %struct.MOVIndexRange* %146, %struct.MOVIndexRange** %149, align 8
  %150 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %146, i64 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %148, %164
  %154 = phi i64 [ %169, %164 ], [ %151, %148 ]
  %155 = phi i32 [ %166, %164 ], [ 0, %148 ]
  %156 = phi %struct.MOVIndexRange* [ %167, %164 ], [ %146, %148 ]
  %157 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %156, i64 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = sub nsw i64 %154, %158
  %160 = sext i32 %155 to i64
  %161 = icmp sgt i64 %159, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %153
  %163 = add nsw i64 %158, %160
  store i64 %163, i64* %144, align 8
  br label %171

164:                                              ; preds = %153
  %165 = trunc i64 %159 to i32
  %166 = sub i32 %155, %165
  %167 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %156, i64 1
  store %struct.MOVIndexRange* %167, %struct.MOVIndexRange** %149, align 8
  %168 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %156, i64 1, i32 1
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153

171:                                              ; preds = %164, %135, %148, %162
  %172 = add nuw nsw i64 %136, 1
  %173 = load i32, i32* %10, align 4
  %174 = zext i32 %173 to i64
  %175 = icmp ult i64 %172, %174
  br i1 %175, label %135, label %131

176:                                              ; preds = %132, %209
  %177 = load %struct.AVStream*, %struct.AVStream** %5, align 8
  %178 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %177, i64 0, i32 3
  %179 = bitcast i8** %178 to %struct.MOVStreamContext**
  %180 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %179, align 8
  %181 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, %1
  %184 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 33
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, %19
  %187 = and i1 %183, %186
  br i1 %187, label %213, label %188

188:                                              ; preds = %176
  %189 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 33
  %190 = add nsw i32 %185, 1
  store i32 %190, i32* %189, align 8
  %191 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 34
  %192 = load i64, i64* %191, align 8
  %193 = add nsw i64 %192, 1
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 35
  %195 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %194, align 8
  %196 = icmp eq %struct.MOVIndexRange* %195, null
  br i1 %196, label %209, label %197

197:                                              ; preds = %188
  %198 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %180, i64 0, i32 36
  %199 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %198, align 8
  %200 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %199, i64 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = icmp slt i64 %193, %201
  %203 = icmp eq i64 %201, 0
  %204 = or i1 %202, %203
  br i1 %204, label %209, label %205

205:                                              ; preds = %197
  %206 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %199, i64 1
  store %struct.MOVIndexRange* %206, %struct.MOVIndexRange** %198, align 8
  %207 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %206, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %191, align 8
  br label %209

209:                                              ; preds = %205, %197, %188
  %210 = call fastcc %struct.AVIndexEntry* @mov_find_next_sample(%struct.AVFormatContext* %0, %struct.AVStream** nonnull %5)
  %211 = icmp eq %struct.AVIndexEntry* %210, null
  br i1 %211, label %213, label %176

212:                                              ; preds = %126
  store %struct.AVStream* %75, %struct.AVStream** %5, align 8
  br label %213

213:                                              ; preds = %209, %176, %64, %212, %132, %13, %4
  %214 = phi i32 [ -1094995529, %4 ], [ %19, %13 ], [ -1094995529, %132 ], [ 0, %212 ], [ 0, %64 ], [ -1094995529, %209 ], [ 0, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i32 %214
}

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) local_unnamed_addr #2

declare i32 @ff_codec_get_id(%struct.AVCodecTag*, i32) local_unnamed_addr #2

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #2

declare i32 @avio_r8(%struct.AVIOContext*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare i32 @ff_get_qtpalette(i32, %struct.AVIOContext*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #4

declare i64 @avio_rb64(%struct.AVIOContext*) local_unnamed_addr #2

declare i32 @av_get_bits_per_sample(i32) local_unnamed_addr #2

declare i32 @ff_get_pcm_codec_id(i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_glbl(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = icmp ugt i64 %3, 1073741824
  br i1 %17, label %57, label %18

18:                                               ; preds = %10
  %19 = icmp sgt i64 %3, 9
  br i1 %19, label %20, label %30

20:                                               ; preds = %18
  %21 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %23 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 -8, i32 1) #11
  %24 = icmp eq i32 %22, 1818585446
  %25 = zext i32 %21 to i64
  %26 = icmp eq i64 %25, %3
  %27 = and i1 %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3)
  br label %57

30:                                               ; preds = %20, %18
  %31 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %31, align 8
  %33 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i64 0, i32 3
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = bitcast %struct.AVFormatContext** %5 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i64 0, i64 0)) #11
  br label %57

43:                                               ; preds = %36, %30
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %45 = trunc i64 %3 to i32
  %46 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %44, %struct.AVCodecParameters* %32, %struct.AVIOContext* %1, i32 %45) #11
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %43
  %49 = icmp eq i32 %2, 1130591848
  br i1 %49, label %50, label %57

50:                                               ; preds = %48
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %31, align 8
  %52 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 828929636
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i64 0, i32 1
  store i32 173, i32* %56, align 4
  br label %57

57:                                               ; preds = %28, %48, %50, %55, %43, %10, %4, %40
  %58 = phi i32 [ 0, %40 ], [ %29, %28 ], [ 0, %4 ], [ -1094995529, %10 ], [ %46, %43 ], [ 0, %55 ], [ 0, %50 ], [ 0, %48 ]
  ret i32 %58
}

declare i32 @ff_get_extradata(%struct.AVFormatContext*, %struct.AVCodecParameters*, %struct.AVIOContext*, i32) local_unnamed_addr #2

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

declare i32 @avio_feof(%struct.AVIOContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_udta_string(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca [200 x i8], align 16
  %7 = alloca [100 x i8], align 16
  %8 = alloca [16 x i8], align 16
  %9 = alloca [32 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 32, i1 false)
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #11
  %18 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  store i32 0, i32* %11, align 4
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store i8* null, i8** %12, align 8
  switch i32 %2, label %197 [
    i32 1297240128, label %20
    i32 1364348992, label %21
    i32 1599098200, label %22
    i32 1414676833, label %29
    i32 1145662305, label %30
    i32 1145663585, label %31
    i32 1735680355, label %32
    i32 1818849379, label %33
    i32 1953656931, label %34
    i32 1668506980, label %35
    i32 1802725732, label %36
    i32 1684629349, label %37
    i32 1297238342, label %38
    i32 1701998183, label %39
    i32 1685480552, label %40
    i32 1414352200, label %41
    i32 2004444523, label %68
    i32 1936024684, label %69
    i32 1768124268, label %70
    i32 1970168173, label %143
    i32 1818521453, label %144
    i32 1953719152, label %145
    i32 1885431664, label %146
    i32 1685222768, label %147
    i32 1735292018, label %148
    i32 1633775475, label %149
    i32 1818324851, label %150
    i32 1918988147, label %151
    i32 1868787571, label %152
    i32 1835954035, label %153
    i32 1853058931, label %154
    i32 1802073203, label %155
    i32 1852535412, label %156
    i32 1852143220, label %157
    i32 1936029300, label %158
    i32 1852733044, label %159
    i32 1752397428, label %160
    i32 1853060724, label %161
    i32 1414676905, label %162
    i32 1146245289, label %163
    i32 1651270057, label %164
    i32 1953849769, label %165
    i32 1885889449, label %166
    i32 1953325993, label %167
    i32 1836016553, label %168
    i32 2037408681, label %169
    i32 2036425897, label %170
    i32 1919509673, label %171
    i32 1936286889, label %172
    i32 828663209, label %173
    i32 1668179369, label %174
    i32 1953326761, label %175
    i32 1852139433, label %176
    i32 1886545833, label %177
    i32 1953720489, label %178
    i32 1718512041, label %179
    i32 1920560297, label %180
    i32 1801547177, label %181
    i32 1685024169, label %182
    i32 1835101865, label %183
    i32 1701867433, label %184
    i32 1685221545, label %185
    i32 1718775977, label %186
    i32 1902473897, label %187
    i32 1668445097, label %188
    i32 863269801, label %189
    i32 1920431017, label %190
    i32 1869575337, label %191
    i32 1802663081, label %192
    i32 1819440553, label %193
    i32 1852995497, label %194
    i32 1953658793, label %195
    i32 2054781097, label %196
  ]

20:                                               ; preds = %4
  br label %197

21:                                               ; preds = %4
  br label %197

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 27
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i64 0, i64 0)
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  br label %197

29:                                               ; preds = %4
  br label %197

30:                                               ; preds = %4
  br label %197

31:                                               ; preds = %4
  br label %197

32:                                               ; preds = %4
  br label %197

33:                                               ; preds = %4
  br label %197

34:                                               ; preds = %4
  br label %197

35:                                               ; preds = %4
  br label %197

36:                                               ; preds = %4
  br label %197

37:                                               ; preds = %4
  br label %197

38:                                               ; preds = %4
  br label %197

39:                                               ; preds = %4
  br label %197

40:                                               ; preds = %4
  br label %197

41:                                               ; preds = %4
  %42 = trunc i64 %3 to i32
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %541, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 23
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %541

48:                                               ; preds = %44
  %49 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %50 = lshr i32 %42, 2
  %51 = icmp ugt i32 %49, %50
  br i1 %51, label %541, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %54 = icmp sgt i32 %49, 0
  br i1 %54, label %55, label %541

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  br label %57

57:                                               ; preds = %61, %55
  %58 = phi i32 [ 0, %55 ], [ %66, %61 ]
  %59 = load i32, i32* %53, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %541

61:                                               ; preds = %57
  %62 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %56, align 8
  %64 = sext i32 %62 to i64
  %65 = tail call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %63, i32 %58, i64 4294967296001, i64 %64, i64 -9223372036854775808, i8* null) #11
  %66 = add nuw nsw i32 %58, 1
  %67 = icmp eq i32 %66, %49
  br i1 %67, label %541, label %57

68:                                               ; preds = %4
  br label %197

69:                                               ; preds = %4
  br label %197

70:                                               ; preds = %4
  %71 = trunc i64 %3 to i32
  %72 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #11
  store i32 0, i32* %5, align 4
  %73 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %73) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -86, i64 200, i1 false) #11
  %74 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %74) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 -86, i64 100, i1 false) #11
  %75 = icmp ult i32 %71, 20
  br i1 %75, label %76, label %80

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %78 = bitcast %struct.AVFormatContext** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.346, i64 0, i64 0)) #11
  br label %141

80:                                               ; preds = %70
  %81 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %82 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %83 = and i32 %82, 65535
  %84 = call i32 @ff_mov_lang_to_iso639(i32 %83, i8* nonnull %72) #11
  %85 = add i32 %71, -6
  %86 = call i32 @avio_get_str(%struct.AVIOContext* %1, i32 %85, i8* nonnull %74, i32 100) #11
  %87 = sub i32 %85, %86
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %80
  %90 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %91 = bitcast %struct.AVFormatContext** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.347, i64 0, i64 0)) #11
  br label %141

93:                                               ; preds = %80
  %94 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 1) #11
  %95 = add i32 %87, -1
  %96 = icmp ult i32 %95, 12
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %99 = bitcast %struct.AVFormatContext** %98 to i8**
  %100 = load i8*, i8** %99, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %100, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.348, i64 0, i64 0), i32 %95, i32 12) #11
  br label %141

101:                                              ; preds = %93
  %102 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %103 = sitofp i32 %102 to float
  %104 = fmul nsz float %103, 0x3EF0000000000000
  %105 = fpext float %104 to double
  %106 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %107 = sitofp i32 %106 to float
  %108 = fmul nsz float %107, 0x3EF0000000000000
  %109 = fpext float %108 to double
  %110 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %111 = sitofp i32 %110 to float
  %112 = fmul nsz float %111, 0x3EF0000000000000
  %113 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %73, i64 200, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.349, i64 0, i64 0), double %109, double %105) #11
  %114 = fcmp nsz une float %112, 0.000000e+00
  br i1 %114, label %115, label %118

115:                                              ; preds = %101
  %116 = fpext float %112 to double
  %117 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %73, i64 200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.350, i64 0, i64 0), double %116) #11
  br label %118

118:                                              ; preds = %115, %101
  %119 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %73, i64 200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.351, i64 0, i64 0), i8* nonnull %74) #11
  %120 = load i8, i8* %72, align 4
  %121 = icmp eq i8 %120, 0
  %122 = load i32, i32* %5, align 4
  %123 = icmp eq i32 %122, 6581877
  %124 = or i1 %121, %123
  br i1 %124, label %132, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %126, i8 -86, i64 16, i1 false) #11
  %127 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %126, i64 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i64 0, i64 0), i32* nonnull %5) #11
  %128 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %129 = load %struct.AVFormatContext*, %struct.AVFormatContext** %128, align 8
  %130 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %129, i64 0, i32 29
  %131 = call i32 @av_dict_set(%struct.AVDictionary** %130, i8* nonnull %126, i8* nonnull %73, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #11
  br label %132

132:                                              ; preds = %125, %118
  %133 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %134 = load %struct.AVFormatContext*, %struct.AVFormatContext** %133, align 8
  %135 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %134, i64 0, i32 37
  %136 = load i32, i32* %135, align 4
  %137 = or i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = load %struct.AVFormatContext*, %struct.AVFormatContext** %133, align 8
  %139 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %138, i64 0, i32 29
  %140 = call i32 @av_dict_set(%struct.AVDictionary** %139, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i64 0, i64 0), i8* nonnull %73, i32 0) #11
  br label %141

141:                                              ; preds = %76, %89, %97, %132
  %142 = phi i32 [ -1094995529, %76 ], [ -1094995529, %89 ], [ -1094995529, %97 ], [ %140, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #11
  br label %541

143:                                              ; preds = %4
  br label %197

144:                                              ; preds = %4
  br label %197

145:                                              ; preds = %4
  br label %197

146:                                              ; preds = %4
  br label %197

147:                                              ; preds = %4
  br label %197

148:                                              ; preds = %4
  br label %197

149:                                              ; preds = %4
  br label %197

150:                                              ; preds = %4
  br label %197

151:                                              ; preds = %4
  br label %197

152:                                              ; preds = %4
  br label %197

153:                                              ; preds = %4
  br label %197

154:                                              ; preds = %4
  br label %197

155:                                              ; preds = %4
  br label %197

156:                                              ; preds = %4
  br label %197

157:                                              ; preds = %4
  br label %197

158:                                              ; preds = %4
  br label %197

159:                                              ; preds = %4
  br label %197

160:                                              ; preds = %4
  br label %197

161:                                              ; preds = %4
  br label %197

162:                                              ; preds = %4
  br label %197

163:                                              ; preds = %4
  br label %197

164:                                              ; preds = %4
  br label %197

165:                                              ; preds = %4
  br label %197

166:                                              ; preds = %4
  br label %197

167:                                              ; preds = %4
  br label %197

168:                                              ; preds = %4
  br label %197

169:                                              ; preds = %4
  br label %197

170:                                              ; preds = %4
  br label %197

171:                                              ; preds = %4
  br label %197

172:                                              ; preds = %4
  br label %197

173:                                              ; preds = %4
  br label %197

174:                                              ; preds = %4
  br label %197

175:                                              ; preds = %4
  br label %197

176:                                              ; preds = %4
  br label %197

177:                                              ; preds = %4
  br label %197

178:                                              ; preds = %4
  br label %197

179:                                              ; preds = %4
  br label %197

180:                                              ; preds = %4
  br label %197

181:                                              ; preds = %4
  br label %197

182:                                              ; preds = %4
  br label %197

183:                                              ; preds = %4
  br label %197

184:                                              ; preds = %4
  br label %197

185:                                              ; preds = %4
  br label %197

186:                                              ; preds = %4
  br label %197

187:                                              ; preds = %4
  br label %197

188:                                              ; preds = %4
  br label %197

189:                                              ; preds = %4
  br label %197

190:                                              ; preds = %4
  br label %197

191:                                              ; preds = %4
  br label %197

192:                                              ; preds = %4
  br label %197

193:                                              ; preds = %4
  br label %197

194:                                              ; preds = %4
  br label %197

195:                                              ; preds = %4
  br label %197

196:                                              ; preds = %4
  br label %197

197:                                              ; preds = %22, %4, %196, %195, %194, %193, %192, %191, %190, %189, %188, %187, %186, %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159, %158, %157, %156, %155, %154, %153, %152, %151, %150, %149, %148, %147, %146, %145, %144, %143, %69, %68, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %21, %20
  %198 = phi i8* [ null, %4 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i64 0, i64 0), %196 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.315, i64 0, i64 0), %195 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.331, i64 0, i64 0), %194 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.330, i64 0, i64 0), %193 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.304, i64 0, i64 0), %192 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), %191 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), %190 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.329, i64 0, i64 0), %189 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.328, i64 0, i64 0), %188 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.327, i64 0, i64 0), %187 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.326, i64 0, i64 0), %186 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.311, i64 0, i64 0), %185 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.325, i64 0, i64 0), %184 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.324, i64 0, i64 0), %183 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.292, i64 0, i64 0), %182 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i64 0, i64 0), %181 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.323, i64 0, i64 0), %180 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.314, i64 0, i64 0), %179 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.322, i64 0, i64 0), %178 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.321, i64 0, i64 0), %177 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.287, i64 0, i64 0), %176 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.320, i64 0, i64 0), %175 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), %174 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.319, i64 0, i64 0), %173 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i64 0, i64 0), %172 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i64 0, i64 0), %171 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.316, i64 0, i64 0), %170 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.282, i64 0, i64 0), %169 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.315, i64 0, i64 0), %168 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.314, i64 0, i64 0), %167 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.313, i64 0, i64 0), %166 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.310, i64 0, i64 0), %165 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.312, i64 0, i64 0), %164 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.311, i64 0, i64 0), %163 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.310, i64 0, i64 0), %162 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.309, i64 0, i64 0), %161 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i64 0, i64 0), %160 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.307, i64 0, i64 0), %159 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.306, i64 0, i64 0), %158 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.305, i64 0, i64 0), %157 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.304, i64 0, i64 0), %156 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.303, i64 0, i64 0), %155 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.302, i64 0, i64 0), %154 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.301, i64 0, i64 0), %153 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i64 0, i64 0), %152 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i64 0, i64 0), %151 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.298, i64 0, i64 0), %150 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.297, i64 0, i64 0), %149 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.296, i64 0, i64 0), %148 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i64 0, i64 0), %147 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.294, i64 0, i64 0), %146 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.293, i64 0, i64 0), %145 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.292, i64 0, i64 0), %144 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i64 0, i64 0), %143 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.290, i64 0, i64 0), %69 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.289, i64 0, i64 0), %68 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.288, i64 0, i64 0), %40 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.287, i64 0, i64 0), %39 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.286, i64 0, i64 0), %38 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.285, i64 0, i64 0), %37 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.284, i64 0, i64 0), %36 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0), %35 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.282, i64 0, i64 0), %34 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.281, i64 0, i64 0), %33 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.280, i64 0, i64 0), %32 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.279, i64 0, i64 0), %31 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.278, i64 0, i64 0), %30 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.277, i64 0, i64 0), %29 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.276, i64 0, i64 0), %21 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.275, i64 0, i64 0), %20 ], [ %26, %22 ]
  %199 = phi i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i8*)* [ null, %4 ], [ null, %196 ], [ null, %195 ], [ null, %194 ], [ null, %193 ], [ null, %192 ], [ null, %191 ], [ null, %190 ], [ null, %189 ], [ null, %188 ], [ null, %187 ], [ null, %186 ], [ null, %185 ], [ null, %184 ], [ null, %183 ], [ null, %182 ], [ null, %181 ], [ null, %180 ], [ null, %179 ], [ null, %178 ], [ null, %177 ], [ null, %176 ], [ null, %175 ], [ null, %174 ], [ null, %173 ], [ null, %172 ], [ null, %171 ], [ null, %170 ], [ null, %169 ], [ null, %168 ], [ null, %167 ], [ null, %166 ], [ null, %165 ], [ null, %164 ], [ null, %163 ], [ null, %162 ], [ @mov_metadata_int8_bypass_padding, %161 ], [ null, %160 ], [ null, %159 ], [ @mov_metadata_int8_bypass_padding, %158 ], [ null, %157 ], [ @mov_metadata_track_or_disc_number, %156 ], [ @mov_metadata_int8_no_padding, %155 ], [ null, %154 ], [ null, %153 ], [ null, %152 ], [ null, %151 ], [ null, %150 ], [ null, %149 ], [ @mov_metadata_int8_no_padding, %148 ], [ null, %147 ], [ @mov_metadata_int8_no_padding, %146 ], [ @mov_metadata_int8_no_padding, %145 ], [ null, %144 ], [ null, %143 ], [ null, %69 ], [ null, %68 ], [ @mov_metadata_int8_no_padding, %40 ], [ @mov_metadata_gnre, %39 ], [ null, %38 ], [ @mov_metadata_int8_no_padding, %37 ], [ @mov_metadata_track_or_disc_number, %36 ], [ null, %35 ], [ null, %34 ], [ @mov_metadata_int8_no_padding, %33 ], [ null, %32 ], [ null, %31 ], [ @mov_metadata_int8_no_padding, %30 ], [ null, %29 ], [ null, %21 ], [ null, %20 ], [ null, %22 ]
  %200 = phi i32 [ 0, %4 ], [ 0, %196 ], [ 0, %195 ], [ 0, %194 ], [ 0, %193 ], [ 0, %192 ], [ 0, %191 ], [ 0, %190 ], [ 0, %189 ], [ 0, %188 ], [ 0, %187 ], [ 0, %186 ], [ 0, %185 ], [ 0, %184 ], [ 0, %183 ], [ 0, %182 ], [ 0, %181 ], [ 0, %180 ], [ 0, %179 ], [ 0, %178 ], [ 0, %177 ], [ 0, %176 ], [ 0, %175 ], [ 0, %174 ], [ 0, %173 ], [ 0, %172 ], [ 0, %171 ], [ 0, %170 ], [ 0, %169 ], [ 0, %168 ], [ 0, %167 ], [ 0, %166 ], [ 0, %165 ], [ 0, %164 ], [ 0, %163 ], [ 0, %162 ], [ 0, %161 ], [ 0, %160 ], [ 0, %159 ], [ 0, %158 ], [ 0, %157 ], [ 0, %156 ], [ 0, %155 ], [ 0, %154 ], [ 0, %153 ], [ 0, %152 ], [ 0, %151 ], [ 0, %150 ], [ 0, %149 ], [ 0, %148 ], [ 0, %147 ], [ 0, %146 ], [ 0, %145 ], [ 0, %144 ], [ 0, %143 ], [ 0, %69 ], [ 0, %68 ], [ 0, %40 ], [ 0, %39 ], [ 1, %38 ], [ 0, %37 ], [ 0, %36 ], [ 0, %35 ], [ 0, %34 ], [ 0, %33 ], [ 0, %32 ], [ 0, %31 ], [ 0, %30 ], [ 0, %29 ], [ 1, %21 ], [ 1, %20 ], [ %28, %22 ]
  %201 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 16
  %202 = icmp ne i8* %198, null
  %203 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %204 = bitcast %struct.AVFormatContext** %203 to i8**
  %205 = icmp eq i32 %2, 1920364387
  br label %206

206:                                              ; preds = %285, %197
  %207 = phi i64 [ %287, %285 ], [ %3, %197 ]
  %208 = phi i32 [ %228, %285 ], [ 0, %197 ]
  %209 = phi i32 [ %218, %285 ], [ %200, %197 ]
  %210 = load i32, i32* %201, align 4
  %211 = icmp ne i32 %210, 0
  %212 = icmp sgt i64 %207, 8
  %213 = and i1 %212, %211
  br i1 %213, label %217, label %214

214:                                              ; preds = %206
  %215 = icmp sgt i64 %207, 4
  %216 = and i1 %202, %215
  br label %312

217:                                              ; preds = %322, %206
  %218 = phi i32 [ %209, %206 ], [ 1, %322 ]
  %219 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %220 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %221 = icmp eq i32 %220, 1635017060
  br i1 %221, label %222, label %541

222:                                              ; preds = %217
  %223 = sext i32 %219 to i64
  %224 = icmp sge i64 %207, %223
  %225 = icmp sgt i32 %219, 15
  %226 = and i1 %225, %224
  br i1 %226, label %227, label %541

227:                                              ; preds = %222
  %228 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %229 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %230 = add nsw i32 %219, -16
  %231 = add nsw i64 %207, -16
  br i1 %205, label %232, label %289

232:                                              ; preds = %227
  switch i32 %228, label %235 [
    i32 13, label %239
    i32 14, label %233
    i32 27, label %234
  ]

233:                                              ; preds = %232
  br label %239

234:                                              ; preds = %232
  br label %239

235:                                              ; preds = %232
  %236 = load i8*, i8** %204, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %236, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.352, i64 0, i64 0), i32 %228) #11
  %237 = sext i32 %230 to i64
  %238 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %237) #11
  br label %285

239:                                              ; preds = %234, %233, %232
  %240 = phi i32 [ 78, %234 ], [ 61, %233 ], [ 7, %232 ]
  %241 = load %struct.AVFormatContext*, %struct.AVFormatContext** %203, align 8
  %242 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %241, %struct.AVCodec* null) #11
  %243 = icmp eq %struct.AVStream* %242, null
  br i1 %243, label %282, label %244

244:                                              ; preds = %239
  %245 = tail call noalias i8* @av_mallocz(i64 1496) #11
  %246 = icmp eq i8* %245, null
  br i1 %246, label %282, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 3
  store i8* %245, i8** %248, align 8
  %249 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 13
  %250 = tail call i32 @av_get_packet(%struct.AVIOContext* %1, %struct.AVPacket* %249, i32 %230) #11
  %251 = icmp slt i32 %250, 0
  br i1 %251, label %282, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 13, i32 4
  %254 = load i32, i32* %253, align 8
  %255 = icmp sgt i32 %254, 7
  %256 = icmp ne i32 %240, 78
  %257 = and i1 %256, %255
  br i1 %257, label %258, label %266

258:                                              ; preds = %252
  %259 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 13, i32 3
  %260 = bitcast i8** %259 to i64**
  %261 = load i64*, i64** %260, align 8
  %262 = load i64, i64* %261, align 1
  %263 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %262) #14, !srcloc !4
  %264 = icmp eq i64 %263, -8552249625308161526
  %265 = select i1 %264, i32 61, i32 7
  br label %266

266:                                              ; preds = %258, %252
  %267 = phi i32 [ %240, %252 ], [ %265, %258 ]
  %268 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 8
  %269 = load i32, i32* %268, align 8
  %270 = or i32 %269, 1024
  store i32 %270, i32* %268, align 8
  %271 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 13, i32 5
  store i32 %272, i32* %273, align 4
  %274 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 13, i32 6
  %275 = load i32, i32* %274, align 8
  %276 = or i32 %275, 1
  store i32 %276, i32* %274, align 8
  %277 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i64 0, i32 19
  %278 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %277, align 8
  %279 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %278, i64 0, i32 0
  store i32 0, i32* %279, align 8
  %280 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %277, align 8
  %281 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %280, i64 0, i32 1
  store i32 %267, i32* %281, align 4
  br label %285

282:                                              ; preds = %239, %244, %247
  %283 = phi i32 [ %250, %247 ], [ -12, %244 ], [ -12, %239 ]
  %284 = load i8*, i8** %204, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %284, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.333, i64 0, i64 0)) #11
  br label %541

285:                                              ; preds = %266, %235
  %286 = zext i32 %230 to i64
  %287 = sub nsw i64 %231, %286
  %288 = icmp sgt i64 %287, 8
  br i1 %288, label %206, label %541

289:                                              ; preds = %227
  %290 = icmp eq i8* %198, null
  br i1 %290, label %291, label %351

291:                                              ; preds = %289
  %292 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 6
  %293 = load i32, i32* %292, align 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %335, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 8
  %297 = load i8**, i8*** %296, align 8
  %298 = icmp eq i8** %297, null
  br i1 %298, label %335, label %299

299:                                              ; preds = %295
  %300 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %2) #14, !srcloc !3
  %301 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 9
  %302 = load i32, i32* %301, align 8
  %303 = icmp ult i32 %300, %302
  %304 = icmp ne i32 %300, 0
  %305 = and i1 %304, %303
  br i1 %305, label %306, label %310

306:                                              ; preds = %299
  %307 = zext i32 %300 to i64
  %308 = getelementptr inbounds i8*, i8** %297, i64 %307
  %309 = load i8*, i8** %308, align 8
  br label %335

310:                                              ; preds = %299
  %311 = load i8*, i8** %204, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %311, i32 24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.334, i64 0, i64 0), i32 %300, i32 %302) #11
  br label %335

312:                                              ; preds = %214, %322
  %313 = phi i32 [ %210, %214 ], [ %325, %322 ]
  %314 = phi i32 [ %209, %214 ], [ 1, %322 ]
  %315 = or i32 %313, %314
  %316 = icmp eq i32 %315, 0
  %317 = and i1 %216, %316
  br i1 %317, label %318, label %333

318:                                              ; preds = %312
  %319 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %320 = zext i32 %319 to i64
  %321 = icmp slt i64 %207, %320
  br i1 %321, label %322, label %328

322:                                              ; preds = %318
  %323 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 -2, i32 1) #11
  %324 = load i8*, i8** %204, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %324, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.335, i64 0, i64 0)) #11
  %325 = load i32, i32* %201, align 4
  %326 = icmp ne i32 %325, 0
  %327 = and i1 %212, %326
  br i1 %327, label %217, label %312

328:                                              ; preds = %318
  %329 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %330 = and i32 %329, 65535
  %331 = call i32 @ff_mov_lang_to_iso639(i32 %330, i8* nonnull %18) #11
  %332 = add nsw i64 %207, -4
  br label %351

333:                                              ; preds = %312
  %334 = trunc i64 %207 to i32
  br label %335

335:                                              ; preds = %291, %295, %310, %306, %333
  %336 = phi i32 [ %314, %333 ], [ %218, %306 ], [ %218, %310 ], [ %218, %295 ], [ %218, %291 ]
  %337 = phi i64 [ %207, %333 ], [ %231, %306 ], [ %231, %310 ], [ %231, %295 ], [ %231, %291 ]
  %338 = phi i8* [ %198, %333 ], [ %309, %306 ], [ null, %310 ], [ null, %295 ], [ null, %291 ]
  %339 = phi i32 [ %208, %333 ], [ %228, %306 ], [ %228, %310 ], [ %228, %295 ], [ %228, %291 ]
  %340 = phi i32 [ %334, %333 ], [ %230, %306 ], [ %230, %310 ], [ %230, %295 ], [ %230, %291 ]
  %341 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 26
  %342 = load i32, i32* %341, align 8
  %343 = icmp eq i32 %342, 0
  %344 = icmp ne i8* %338, null
  %345 = or i1 %344, %343
  br i1 %345, label %348, label %346

346:                                              ; preds = %335
  %347 = call i8* @av_fourcc_make_string(i8* nonnull %16, i32 %2) #11
  br label %348

348:                                              ; preds = %335, %346
  %349 = phi i8* [ %338, %335 ], [ %347, %346 ]
  %350 = icmp eq i8* %349, null
  br i1 %350, label %541, label %351

351:                                              ; preds = %289, %328, %348
  %352 = phi i32 [ %314, %328 ], [ %336, %348 ], [ %218, %289 ]
  %353 = phi i8* [ %198, %328 ], [ %349, %348 ], [ %198, %289 ]
  %354 = phi i64 [ %332, %328 ], [ %337, %348 ], [ %231, %289 ]
  %355 = phi i32 [ %330, %328 ], [ 0, %348 ], [ 0, %289 ]
  %356 = phi i32 [ %208, %328 ], [ %339, %348 ], [ %228, %289 ]
  %357 = phi i32 [ %319, %328 ], [ %340, %348 ], [ %230, %289 ]
  %358 = icmp slt i64 %354, 0
  %359 = icmp ugt i32 %357, 1073741822
  %360 = or i1 %358, %359
  br i1 %360, label %541, label %361

361:                                              ; preds = %351
  %362 = add i32 %356, -21
  %363 = icmp ult i32 %362, 3
  br i1 %363, label %368, label %364

364:                                              ; preds = %361
  %365 = icmp eq i32 %352, 0
  %366 = zext i1 %365 to i32
  %367 = shl i32 %357, %366
  br label %368

368:                                              ; preds = %364, %361
  %369 = phi i32 [ 512, %361 ], [ %367, %364 ]
  %370 = add nuw nsw i32 %369, 1
  %371 = zext i32 %370 to i64
  %372 = call noalias i8* @av_mallocz(i64 %371) #11
  store i8* %372, i8** %12, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %541, label %374

374:                                              ; preds = %368
  %375 = icmp eq i32 (%struct.MOVContext*, %struct.AVIOContext*, i32, i8*)* %199, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %374
  %377 = call i32 %199(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %357, i8* nonnull %353) #11
  br label %540

378:                                              ; preds = %374
  %379 = icmp eq i32 %352, 0
  br i1 %379, label %380, label %437

380:                                              ; preds = %378
  switch i32 %356, label %478 [
    i32 3, label %385
    i32 0, label %381
    i32 21, label %438
    i32 22, label %461
  ]

381:                                              ; preds = %380
  %382 = icmp ult i32 %355, 1024
  %383 = icmp eq i32 %355, 32767
  %384 = or i1 %382, %383
  br i1 %384, label %385, label %492

385:                                              ; preds = %380, %381
  %386 = sext i32 %370 to i64
  %387 = getelementptr inbounds i8, i8* %372, i64 %386
  %388 = getelementptr inbounds i8, i8* %387, i64 -1
  %389 = icmp sgt i32 %357, 0
  br i1 %389, label %390, label %435

390:                                              ; preds = %385, %431
  %391 = phi i32 [ %433, %431 ], [ 0, %385 ]
  %392 = phi i8* [ %432, %431 ], [ %372, %385 ]
  %393 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %394 = trunc i32 %393 to i8
  %395 = icmp ult i8* %392, %388
  br i1 %395, label %396, label %431

396:                                              ; preds = %390
  %397 = and i32 %393, 255
  %398 = icmp ult i32 %397, 128
  br i1 %398, label %399, label %401

399:                                              ; preds = %396
  %400 = getelementptr inbounds i8, i8* %392, i64 1
  store i8 %394, i8* %392, align 1
  br label %431

401:                                              ; preds = %396
  %402 = add nsw i32 %397, -128
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [128 x i32], [128 x i32]* @mac_to_unicode, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4
  %406 = or i32 %405, 1
  %407 = call i32 @llvm.ctlz.i32(i32 %406, i1 true) #11, !range !2
  %408 = sub nuw nsw i32 35, %407
  %409 = udiv i32 %408, 5
  %410 = mul nuw nsw i32 %409, 6
  %411 = add nsw i32 %410, -6
  %412 = lshr i32 256, %409
  %413 = sub nsw i32 0, %412
  %414 = lshr i32 %405, %411
  %415 = or i32 %414, %413
  %416 = trunc i32 %415 to i8
  store i8 %416, i8* %392, align 1
  %417 = getelementptr inbounds i8, i8* %392, i64 1
  %418 = icmp sgt i32 %411, 5
  br i1 %418, label %419, label %431

419:                                              ; preds = %401
  %420 = add nsw i32 %410, -12
  %421 = icmp ult i8* %417, %388
  br i1 %421, label %422, label %428

422:                                              ; preds = %419
  %423 = lshr i32 %405, %420
  %424 = trunc i32 %423 to i8
  %425 = and i8 %424, 63
  %426 = or i8 %425, -128
  %427 = getelementptr inbounds i8, i8* %392, i64 2
  store i8 %426, i8* %417, align 1
  br label %428

428:                                              ; preds = %422, %419
  %429 = phi i8* [ %427, %422 ], [ %417, %419 ]
  %430 = icmp sgt i32 %420, 5
  br i1 %430, label %543, label %431

431:                                              ; preds = %593, %428, %552, %564, %576, %588, %401, %399, %390
  %432 = phi i8* [ %392, %390 ], [ %400, %399 ], [ %417, %401 ], [ %429, %428 ], [ %553, %552 ], [ %565, %564 ], [ %577, %576 ], [ %589, %588 ], [ %599, %593 ]
  %433 = add nuw nsw i32 %391, 1
  %434 = icmp eq i32 %433, %357
  br i1 %434, label %435, label %390

435:                                              ; preds = %431, %385
  %436 = phi i8* [ %372, %385 ], [ %432, %431 ]
  store i8 0, i8* %436, align 1
  br label %500

437:                                              ; preds = %378
  switch i32 %356, label %478 [
    i32 21, label %438
    i32 22, label %461
  ]

438:                                              ; preds = %380, %437
  switch i32 %357, label %453 [
    i32 1, label %439
    i32 2, label %443
    i32 3, label %447
    i32 4, label %451
  ]

439:                                              ; preds = %438
  %440 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %441 = shl i32 %440, 24
  %442 = ashr exact i32 %441, 24
  br label %453

443:                                              ; preds = %438
  %444 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %445 = shl i32 %444, 16
  %446 = ashr exact i32 %445, 16
  br label %453

447:                                              ; preds = %438
  %448 = call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %449 = shl i32 %448, 8
  %450 = ashr exact i32 %449, 8
  br label %453

451:                                              ; preds = %438
  %452 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %453

453:                                              ; preds = %438, %443, %451, %447, %439
  %454 = phi i32 [ %442, %439 ], [ %446, %443 ], [ %450, %447 ], [ %452, %451 ], [ 0, %438 ]
  %455 = load i8*, i8** %12, align 8
  %456 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %455, i64 %371, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.336, i64 0, i64 0), i32 %454) #11
  %457 = icmp ugt i32 %456, %369
  br i1 %457, label %458, label %500

458:                                              ; preds = %453
  %459 = load i8*, i8** %204, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %459, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.337, i64 0, i64 0), i32 %454) #11
  %460 = load i8*, i8** %12, align 8
  call void @av_free(i8* %460) #11
  br label %541

461:                                              ; preds = %380, %437
  switch i32 %357, label %470 [
    i32 1, label %462
    i32 2, label %464
    i32 3, label %466
    i32 4, label %468
  ]

462:                                              ; preds = %461
  %463 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  br label %470

464:                                              ; preds = %461
  %465 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  br label %470

466:                                              ; preds = %461
  %467 = call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  br label %470

468:                                              ; preds = %461
  %469 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %470

470:                                              ; preds = %461, %464, %468, %466, %462
  %471 = phi i32 [ %463, %462 ], [ %465, %464 ], [ %467, %466 ], [ %469, %468 ], [ 0, %461 ]
  %472 = load i8*, i8** %12, align 8
  %473 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %472, i64 %371, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.338, i64 0, i64 0), i32 %471) #11
  %474 = icmp ugt i32 %473, %369
  br i1 %474, label %475, label %500

475:                                              ; preds = %470
  %476 = load i8*, i8** %204, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %476, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.339, i64 0, i64 0), i32 %471) #11
  %477 = load i8*, i8** %12, align 8
  call void @av_free(i8* %477) #11
  br label %541

478:                                              ; preds = %380, %437
  %479 = icmp eq i32 %356, 23
  %480 = icmp ugt i32 %357, 3
  %481 = and i1 %479, %480
  br i1 %481, label %482, label %492

482:                                              ; preds = %478
  %483 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %484 = bitcast i32 %483 to float
  %485 = load i8*, i8** %12, align 8
  %486 = fpext float %484 to double
  %487 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %485, i64 %371, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), double %486) #11
  %488 = icmp ugt i32 %487, %369
  br i1 %488, label %489, label %500

489:                                              ; preds = %482
  %490 = load i8*, i8** %204, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %490, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.341, i64 0, i64 0), double %486) #11
  %491 = load i8*, i8** %12, align 8
  call void @av_free(i8* %491) #11
  br label %541

492:                                              ; preds = %381, %478
  %493 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %372, i32 %357) #11
  %494 = icmp slt i32 %493, 0
  %495 = load i8*, i8** %12, align 8
  br i1 %494, label %499, label %496

496:                                              ; preds = %492
  %497 = zext i32 %357 to i64
  %498 = getelementptr inbounds i8, i8* %495, i64 %497
  store i8 0, i8* %498, align 1
  br label %500

499:                                              ; preds = %492
  call void @av_free(i8* %495) #11
  br label %541

500:                                              ; preds = %482, %453, %470, %496, %435
  %501 = load %struct.AVFormatContext*, %struct.AVFormatContext** %203, align 8
  %502 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %501, i64 0, i32 37
  %503 = load i32, i32* %502, align 4
  %504 = or i32 %503, 1
  store i32 %504, i32* %502, align 4
  %505 = load %struct.AVFormatContext*, %struct.AVFormatContext** %203, align 8
  %506 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %505, i64 0, i32 29
  %507 = load i8*, i8** %12, align 8
  %508 = call i32 @av_dict_set(%struct.AVDictionary** %506, i8* nonnull %353, i8* %507, i32 0) #11
  %509 = load i8, i8* %18, align 4
  %510 = icmp eq i8 %509, 0
  %511 = load i32, i32* %11, align 4
  %512 = icmp eq i32 %511, 6581877
  %513 = or i1 %510, %512
  br i1 %513, label %520, label %514

514:                                              ; preds = %500
  %515 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %17, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.343, i64 0, i64 0), i8* nonnull %353, i32* nonnull %11) #11
  %516 = load %struct.AVFormatContext*, %struct.AVFormatContext** %203, align 8
  %517 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %516, i64 0, i32 29
  %518 = load i8*, i8** %12, align 8
  %519 = call i32 @av_dict_set(%struct.AVDictionary** %517, i8* nonnull %17, i8* %518, i32 0) #11
  br label %520

520:                                              ; preds = %500, %514
  %521 = call i32 @strcmp(i8* nonnull %353, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0)) #13
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %540

523:                                              ; preds = %520
  %524 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %524) #11
  store i32 -1431655766, i32* %13, align 4
  %525 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %525) #11
  store i32 -1431655766, i32* %14, align 4
  %526 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %526) #11
  store i32 -1431655766, i32* %15, align 4
  %527 = load i8*, i8** %12, align 8
  %528 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %527, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.344, i64 0, i64 0), i32* nonnull %13, i32* nonnull %14, i32* nonnull %15) #11
  %529 = icmp eq i32 %528, 3
  br i1 %529, label %530, label %539

530:                                              ; preds = %523
  %531 = load i32, i32* %13, align 4
  %532 = mul nsw i32 %531, 1000000
  %533 = load i32, i32* %14, align 4
  %534 = mul nsw i32 %533, 1000
  %535 = add nsw i32 %534, %532
  %536 = load i32, i32* %15, align 4
  %537 = add nsw i32 %535, %536
  %538 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 17
  store i32 %537, i32* %538, align 8
  br label %539

539:                                              ; preds = %530, %523
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %526) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %525) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %524) #11
  br label %540

540:                                              ; preds = %520, %539, %376
  call void @av_freep(i8* nonnull %19) #11
  br label %541

541:                                              ; preds = %61, %57, %217, %222, %285, %282, %499, %489, %475, %458, %52, %48, %44, %41, %368, %351, %348, %540, %141
  %542 = phi i32 [ 0, %540 ], [ -1094995529, %458 ], [ -1094995529, %475 ], [ -1094995529, %489 ], [ %493, %499 ], [ %142, %141 ], [ 0, %348 ], [ -1094995529, %351 ], [ -12, %368 ], [ 0, %41 ], [ 0, %44 ], [ -1094995529, %48 ], [ 0, %52 ], [ %283, %282 ], [ 0, %285 ], [ 0, %222 ], [ 0, %217 ], [ 0, %57 ], [ 0, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  ret i32 %542

543:                                              ; preds = %428
  %544 = add nsw i32 %410, -18
  %545 = icmp ult i8* %429, %388
  br i1 %545, label %546, label %552

546:                                              ; preds = %543
  %547 = lshr i32 %405, %544
  %548 = trunc i32 %547 to i8
  %549 = and i8 %548, 63
  %550 = or i8 %549, -128
  %551 = getelementptr inbounds i8, i8* %429, i64 1
  store i8 %550, i8* %429, align 1
  br label %552

552:                                              ; preds = %546, %543
  %553 = phi i8* [ %551, %546 ], [ %429, %543 ]
  %554 = icmp sgt i32 %544, 5
  br i1 %554, label %555, label %431

555:                                              ; preds = %552
  %556 = add nsw i32 %410, -24
  %557 = icmp ult i8* %553, %388
  br i1 %557, label %558, label %564

558:                                              ; preds = %555
  %559 = lshr i32 %405, %556
  %560 = trunc i32 %559 to i8
  %561 = and i8 %560, 63
  %562 = or i8 %561, -128
  %563 = getelementptr inbounds i8, i8* %553, i64 1
  store i8 %562, i8* %553, align 1
  br label %564

564:                                              ; preds = %558, %555
  %565 = phi i8* [ %563, %558 ], [ %553, %555 ]
  %566 = icmp sgt i32 %556, 5
  br i1 %566, label %567, label %431

567:                                              ; preds = %564
  %568 = add nsw i32 %410, -30
  %569 = icmp ult i8* %565, %388
  br i1 %569, label %570, label %576

570:                                              ; preds = %567
  %571 = lshr i32 %405, %568
  %572 = trunc i32 %571 to i8
  %573 = and i8 %572, 63
  %574 = or i8 %573, -128
  %575 = getelementptr inbounds i8, i8* %565, i64 1
  store i8 %574, i8* %565, align 1
  br label %576

576:                                              ; preds = %570, %567
  %577 = phi i8* [ %575, %570 ], [ %565, %567 ]
  %578 = icmp sgt i32 %568, 5
  br i1 %578, label %579, label %431

579:                                              ; preds = %576
  %580 = add nsw i32 %410, -36
  %581 = icmp ult i8* %577, %388
  br i1 %581, label %582, label %588

582:                                              ; preds = %579
  %583 = lshr i32 %405, %580
  %584 = trunc i32 %583 to i8
  %585 = and i8 %584, 63
  %586 = or i8 %585, -128
  %587 = getelementptr inbounds i8, i8* %577, i64 1
  store i8 %586, i8* %577, align 1
  br label %588

588:                                              ; preds = %582, %579
  %589 = phi i8* [ %587, %582 ], [ %577, %579 ]
  %590 = icmp sgt i32 %580, 5
  %591 = icmp ult i8* %589, %388
  %592 = and i1 %590, %591
  br i1 %592, label %593, label %431

593:                                              ; preds = %588
  %594 = add nsw i32 %410, -42
  %595 = lshr i32 %405, %594
  %596 = trunc i32 %595 to i8
  %597 = and i8 %596, 63
  %598 = or i8 %597, -128
  %599 = getelementptr inbounds i8, i8* %589, i64 1
  store i8 %598, i8* %589, align 1
  br label %431
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_keys(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) unnamed_addr #0 {
  %5 = icmp slt i64 %3, 8
  br i1 %5, label %55, label %6

6:                                                ; preds = %4
  %7 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %8 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %9 = icmp ugt i32 %8, 536870910
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %12 = bitcast %struct.AVFormatContext** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.353, i64 0, i64 0), i32 %8) #11
  br label %55

14:                                               ; preds = %6
  %15 = add nuw nsw i32 %8, 1
  %16 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 9
  store i32 %15, i32* %16, align 8
  %17 = zext i32 %15 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = tail call noalias i8* @av_mallocz(i64 %18) #11
  %20 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 8
  %21 = bitcast i8*** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = icmp eq i8* %19, null
  br i1 %22, label %55, label %23

23:                                               ; preds = %14
  %24 = icmp eq i32 %8, 0
  br i1 %24, label %55, label %25

25:                                               ; preds = %23, %51
  %26 = phi i32 [ %53, %51 ], [ 1, %23 ]
  %27 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %28 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %29 = icmp ult i32 %27, 8
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %32 = bitcast %struct.AVFormatContext** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.354, i64 0, i64 0), i32 %26, i32 %27) #11
  br label %55

34:                                               ; preds = %25
  %35 = add i32 %27, -8
  %36 = icmp eq i32 %28, 1635017837
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = zext i32 %35 to i64
  %39 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %38) #11
  br label %40

40:                                               ; preds = %34, %37
  %41 = add i32 %27, -7
  %42 = zext i32 %41 to i64
  %43 = tail call noalias i8* @av_mallocz(i64 %42) #11
  %44 = load i8**, i8*** %20, align 8
  %45 = zext i32 %26 to i64
  %46 = getelementptr inbounds i8*, i8** %44, i64 %45
  store i8* %43, i8** %46, align 8
  %47 = load i8**, i8*** %20, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 %45
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %40
  %52 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %49, i32 %35) #11
  %53 = add i32 %26, 1
  %54 = icmp ugt i32 %53, %8
  br i1 %54, label %55, label %25

55:                                               ; preds = %51, %40, %23, %30, %14, %4, %10
  %56 = phi i32 [ -1094995529, %10 ], [ 0, %4 ], [ -12, %14 ], [ -1094995529, %30 ], [ 0, %23 ], [ 0, %51 ], [ -12, %40 ]
  ret i32 %56
}

declare i64 @avio_size(%struct.AVIOContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_aclr(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %struct.AVFormatContext* %6 to i8*
  br i1 %9, label %90, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %13 = load %struct.AVStream**, %struct.AVStream*** %12, align 8
  %14 = add i32 %8, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %13, i64 %15
  %17 = load %struct.AVStream*, %struct.AVStream** %16, align 8
  %18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %17, i64 0, i32 19
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 27
  br i1 %22, label %90, label %23

23:                                               ; preds = %11
  %24 = icmp eq i64 %3, 16
  br i1 %24, label %25, label %89

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 88
  %30 = icmp ugt i64 %29, 2147483647
  br i1 %30, label %86, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 3
  %33 = bitcast i8** %32 to i8*
  %34 = tail call i32 @av_reallocp(i8* %33, i64 %29) #11
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  store i32 0, i32* %26, align 8
  %37 = bitcast %struct.AVFormatContext** %5 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %86

39:                                               ; preds = %31
  %40 = add i32 %27, 24
  store i32 %40, i32* %26, align 8
  %41 = load i8*, i8** %32, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %28
  %43 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 24) #14, !srcloc !3
  %44 = bitcast i8* %42 to i32*
  store i32 %43, i32* %44, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 4
  %46 = bitcast i8* %45 to i32*
  store i32 %2, i32* %46, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 8
  %48 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %47, i32 16) #11
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %39
  %51 = load i32, i32* %26, align 8
  %52 = add i32 %51, -16
  store i32 %52, i32* %26, align 8
  %53 = sext i32 %48 to i64
  br label %66

54:                                               ; preds = %39
  %55 = sext i32 %48 to i64
  %56 = icmp slt i32 %48, 16
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = bitcast %struct.AVFormatContext** %5 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0)) #11
  %60 = load i32, i32* %26, align 8
  %61 = add nuw nsw i32 %48, -16
  %62 = add i32 %61, %60
  store i32 %62, i32* %26, align 8
  br label %63

63:                                               ; preds = %57, %54
  %64 = phi i64 [ %55, %57 ], [ 16, %54 ]
  %65 = getelementptr inbounds i8, i8* %47, i64 %55
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 0, i64 64, i1 false) #11
  br label %66

66:                                               ; preds = %50, %63
  %67 = phi i64 [ %53, %50 ], [ %64, %63 ]
  %68 = and i64 %67, 4294967295
  %69 = icmp eq i64 %68, 16
  br i1 %69, label %70, label %83

70:                                               ; preds = %66
  %71 = load i8*, i8** %32, align 8
  %72 = add nsw i64 %28, 19
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %79 [
    i8 1, label %75
    i8 2, label %77
  ]

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 15
  store i32 1, i32* %76, align 4
  br label %90

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 15
  store i32 2, i32* %78, align 4
  br label %90

79:                                               ; preds = %70
  %80 = zext i8 %74 to i32
  %81 = bitcast %struct.AVFormatContext** %5 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i32 %80) #11
  br label %90

83:                                               ; preds = %66
  %84 = bitcast %struct.AVFormatContext** %5 to i8**
  %85 = load i8*, i8** %84, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %85, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i64 0, i64 0)) #11
  br label %90

86:                                               ; preds = %25, %36
  %87 = phi i8* [ %38, %36 ], [ %10, %25 ]
  %88 = phi i32 [ %34, %36 ], [ -1094995529, %25 ]
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.37, i64 0, i64 0)) #11
  br label %90

89:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38, i64 0, i64 0), i64 %3) #11
  br label %90

90:                                               ; preds = %89, %83, %86, %75, %77, %79, %4, %11
  %91 = phi i32 [ 0, %11 ], [ 0, %4 ], [ 0, %79 ], [ 0, %77 ], [ 0, %75 ], [ 0, %89 ], [ 0, %83 ], [ %88, %86 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_avid(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 32771)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 99)
  br label %9

9:                                                ; preds = %4, %7
  %10 = phi i32 [ %5, %4 ], [ %8, %7 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_ares(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %75, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %75 [
    i32 1852397121, label %21
    i32 828659265, label %34
    i32 845829697, label %34
    i32 1852069441, label %34
  ]

21:                                               ; preds = %10
  %22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 27
  %25 = icmp sgt i64 %3, 11
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %75

27:                                               ; preds = %21
  %28 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 10) #11
  %29 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %30 = add i32 %29, -3405
  %31 = icmp ult i32 %30, 2
  br i1 %31, label %32, label %80

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i64 0, i32 11
  store i32 1440, i32* %33, align 8
  br label %80

34:                                               ; preds = %10, %10, %10
  %35 = icmp sgt i64 %3, 23
  br i1 %35, label %36, label %75

36:                                               ; preds = %34
  %37 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 12) #11
  %38 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %39 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %40 = icmp slt i32 %38, 1
  %41 = icmp slt i32 %39, 1
  %42 = or i1 %40, %41
  br i1 %42, label %80, label %43

43:                                               ; preds = %36
  %44 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  switch i32 %44, label %80 [
    i32 2, label %45
    i32 1, label %49
  ]

45:                                               ; preds = %43
  %46 = icmp sgt i32 %39, 1073741822
  br i1 %46, label %80, label %47

47:                                               ; preds = %45
  %48 = shl nsw i32 %39, 1
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi i32 [ %39, %43 ], [ %48, %47 ]
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %52 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %51, i64 0, i32 7
  %53 = load %struct.AVStream**, %struct.AVStream*** %52, align 8
  %54 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %51, i64 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, -1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %53, i64 %57
  %59 = load %struct.AVStream*, %struct.AVStream** %58, align 8
  %60 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %59, i64 0, i32 40
  %61 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %60, align 8
  %62 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %61, i64 0, i32 34, i32 0
  store i32 %38, i32* %62, align 8
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %64 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %63, i64 0, i32 7
  %65 = load %struct.AVStream**, %struct.AVStream*** %64, align 8
  %66 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %63, i64 0, i32 6
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, -1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %65, i64 %69
  %71 = load %struct.AVStream*, %struct.AVStream** %70, align 8
  %72 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %71, i64 0, i32 40
  %73 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %72, align 8
  %74 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %73, i64 0, i32 34, i32 1
  store i32 %50, i32* %74, align 4
  br label %80

75:                                               ; preds = %10, %21, %34, %4
  %76 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 32771) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 99) #11
  br label %80

80:                                               ; preds = %78, %75, %36, %45, %43, %27, %49, %32
  %81 = phi i32 [ 0, %32 ], [ 0, %49 ], [ 0, %27 ], [ 0, %43 ], [ 0, %45 ], [ 0, %36 ], [ %76, %75 ], [ %79, %78 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_avss(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 82)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_av1c(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = icmp slt i64 %3, 4
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0)) #11
  br label %32

20:                                               ; preds = %10
  %21 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %22 = icmp eq i64 %3, 4
  br i1 %22, label %32, label %23

23:                                               ; preds = %20
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %25, align 8
  %27 = trunc i64 %3 to i32
  %28 = add i32 %27, -4
  %29 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %24, %struct.AVCodecParameters* %26, %struct.AVIOContext* %1, i32 %28) #11
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  br label %32

32:                                               ; preds = %23, %20, %4, %18
  %33 = phi i32 [ -1094995529, %18 ], [ 0, %4 ], [ 0, %20 ], [ %31, %23 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_chpl(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [257 x i8], align 16
  %6 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 257, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 257, i1 false)
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 23
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %47

10:                                               ; preds = %4
  %11 = add nsw i64 %3, -5
  %12 = icmp slt i64 %11, 0
  br i1 %12, label %47, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %15 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %16 = icmp eq i32 %14, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %19

19:                                               ; preds = %13, %17
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = icmp slt i32 %20, 1
  %22 = icmp slt i64 %11, 9
  %23 = or i1 %21, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  br label %26

26:                                               ; preds = %24, %38
  %27 = phi i64 [ %11, %24 ], [ %33, %38 ]
  %28 = phi i32 [ 0, %24 ], [ %43, %38 ]
  %29 = call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %30 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %31 = add nsw i32 %30, 9
  %32 = sext i32 %31 to i64
  %33 = sub nsw i64 %27, %32
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %26
  %36 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %6, i32 %30) #11
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %35
  %39 = sext i32 %30 to i64
  %40 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %39
  store i8 0, i8* %40, align 1
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %25, align 8
  %42 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %41, i32 %28, i64 42949672960000001, i64 %29, i64 -9223372036854775808, i8* nonnull %6) #11
  %43 = add nuw nsw i32 %28, 1
  %44 = icmp sge i32 %43, %20
  %45 = icmp slt i64 %33, 9
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %26

47:                                               ; preds = %26, %35, %38, %19, %10, %4
  %48 = phi i32 [ 0, %4 ], [ 0, %10 ], [ 0, %19 ], [ 0, %26 ], [ %36, %35 ], [ 0, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 257, i8* nonnull %6) #11
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stco(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %8, align 8
  br i1 %7, label %10, label %12

10:                                               ; preds = %4
  %11 = bitcast %struct.AVFormatContext* %9 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0)) #11
  br label %91

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %91, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 7
  %18 = load %struct.AVStream**, %struct.AVStream*** %17, align 8
  %19 = add i32 %14, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %18, i64 %20
  %22 = load %struct.AVStream*, %struct.AVStream** %21, align 8
  %23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i64 0, i32 3
  %24 = bitcast i8** %23 to %struct.MOVStreamContext**
  %25 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %24, align 8
  %26 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %27 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %28 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %91, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %25, i64 0, i32 5
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = bitcast i64* %32 to i8*
  %36 = bitcast i64** %31 to i8**
  br label %42

37:                                               ; preds = %30
  %38 = bitcast %struct.AVFormatContext** %8 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i64 0, i64 0)) #11
  %40 = bitcast i64** %31 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %34, %37
  %43 = phi i8** [ %36, %34 ], [ %40, %37 ]
  %44 = phi i8* [ %35, %34 ], [ %41, %37 ]
  tail call void @av_free(i8* %44) #11
  %45 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %25, i64 0, i32 4
  store i32 0, i32* %45, align 4
  %46 = zext i32 %28 to i64
  %47 = tail call i8* @av_malloc_array(i64 %46, i64 8) #11
  store i8* %47, i8** %43, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %91, label %49

49:                                               ; preds = %42
  store i32 %28, i32* %45, align 4
  switch i32 %2, label %91 [
    i32 1868788851, label %52
    i32 875982691, label %50
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  br label %67

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ 0, %52 ], [ %64, %59 ]
  %56 = phi i32 [ 0, %52 ], [ %65, %59 ]
  %57 = load i32, i32* %53, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %79

59:                                               ; preds = %54
  %60 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %61 = zext i32 %60 to i64
  %62 = load i64*, i64** %31, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 %55
  store i64 %61, i64* %63, align 8
  %64 = add nuw nsw i64 %55, 1
  %65 = add nuw i32 %56, 1
  %66 = icmp eq i64 %64, %46
  br i1 %66, label %83, label %54

67:                                               ; preds = %72, %50
  %68 = phi i64 [ 0, %50 ], [ %76, %72 ]
  %69 = phi i32 [ 0, %50 ], [ %77, %72 ]
  %70 = load i32, i32* %51, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %67
  %73 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %74 = load i64*, i64** %31, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 %68
  store i64 %73, i64* %75, align 8
  %76 = add nuw nsw i64 %68, 1
  %77 = add nuw i32 %69, 1
  %78 = icmp eq i64 %76, %46
  br i1 %78, label %83, label %67

79:                                               ; preds = %54
  %80 = trunc i64 %55 to i32
  br label %83

81:                                               ; preds = %67
  %82 = trunc i64 %68 to i32
  br label %83

83:                                               ; preds = %72, %59, %81, %79
  %84 = phi i32 [ %80, %79 ], [ %82, %81 ], [ %65, %59 ], [ %77, %72 ]
  store i32 %84, i32* %45, align 4
  %85 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = bitcast %struct.AVFormatContext** %8 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %90, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0)) #11
  br label %91

91:                                               ; preds = %83, %49, %42, %16, %12, %88, %10
  %92 = phi i32 [ 0, %10 ], [ -541478725, %88 ], [ 0, %12 ], [ 0, %16 ], [ -12, %42 ], [ -1094995529, %49 ], [ 0, %83 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_colr(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [5 x i8], align 1
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 5, i1 false)
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %85, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %10, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %6, i32 4) #11
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %85, label %21

21:                                               ; preds = %12
  %22 = call i32 @bcmp(i8* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i64 4)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %21
  %25 = call i32 @bcmp(i8* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i64 4)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = call i32 @bcmp(i8* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 4)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = bitcast %struct.AVFormatContext** %7 to i8**
  %32 = load i8*, i8** %31, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %6) #11
  br label %85

33:                                               ; preds = %27, %24, %21
  %34 = call i32 @bcmp(i8* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i64 4)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = trunc i64 %3 to i32
  %38 = add i32 %37, -4
  %39 = call i8* @av_stream_new_side_data(%struct.AVStream* %18, i32 28, i32 %38) #11
  %40 = icmp eq i8* %39, null
  br i1 %40, label %85, label %41

41:                                               ; preds = %36
  %42 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %39, i32 %38) #11
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %85, label %84

44:                                               ; preds = %33
  %45 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %46 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %47 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %48 = bitcast %struct.AVFormatContext** %7 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = and i32 %45, 65535
  %51 = and i32 %46, 65535
  %52 = and i32 %47, 65535
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i8* nonnull %6, i32 %50, i32 %51, i32 %52) #11
  %53 = call i32 @bcmp(i8* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i64 4)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %66

55:                                               ; preds = %44
  %56 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %57 = lshr i32 %56, 7
  %58 = trunc i32 %57 to i8
  %59 = load i8*, i8** %48, align 8
  %60 = and i32 %57, 255
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i32 %60) #11
  %61 = icmp eq i8 %58, 0
  %62 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %62, align 8
  %64 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i64 0, i32 15
  %65 = select i1 %61, i32 1, i32 2
  store i32 %65, i32* %64, align 4
  br label %66

66:                                               ; preds = %44, %55
  %67 = call i8* @av_color_primaries_name(i32 %50) #11
  %68 = icmp eq i8* %67, null
  %69 = call i8* @av_color_transfer_name(i32 %51) #11
  %70 = icmp eq i8* %69, null
  %71 = call i8* @av_color_space_name(i32 %52) #11
  %72 = icmp eq i8* %71, null
  %73 = select i1 %68, i32 2, i32 %50
  %74 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %74, align 8
  %76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 16
  store i32 %73, i32* %76, align 8
  %77 = select i1 %70, i32 2, i32 %51
  %78 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %74, align 8
  %79 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %78, i64 0, i32 17
  store i32 %77, i32* %79, align 4
  %80 = select i1 %72, i32 2, i32 %52
  %81 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %74, align 8
  %82 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %81, i64 0, i32 18
  store i32 %80, i32* %82, align 8
  %83 = load i8*, i8** %48, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %83, i32 56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0)) #11
  br label %84

84:                                               ; preds = %41, %66
  br label %85

85:                                               ; preds = %41, %36, %12, %4, %84, %30
  %86 = phi i32 [ 0, %30 ], [ 0, %84 ], [ 0, %4 ], [ %19, %12 ], [ -12, %36 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %6) #11
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_ctts(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %119, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %24 = bitcast %struct.AVFormatContext* %23 to i8*
  %25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i64 0, i32 6
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 56, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.51, i64 0, i64 0), i32 %27, i32 %22) #11
  %28 = icmp eq i32 %22, 0
  br i1 %28, label %119, label %29

29:                                               ; preds = %10
  %30 = icmp ugt i32 %22, 536870910
  br i1 %30, label %119, label %31

31:                                               ; preds = %29
  %32 = zext i32 %22 to i64
  %33 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 12
  %34 = bitcast %struct.MOVStts** %33 to i8*
  tail call void @av_freep(i8* %34) #11
  %35 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 11
  %36 = shl nuw nsw i64 %32, 3
  %37 = tail call i8* @av_fast_realloc(i8* null, i32* %35, i64 %36) #11
  %38 = bitcast %struct.MOVStts** %33 to i8**
  store i8* %37, i8** %38, align 8
  %39 = icmp eq i8* %37, null
  br i1 %39, label %119, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %42 = bitcast %struct.AVFormatContext** %5 to i8**
  %43 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 48
  br label %44

44:                                               ; preds = %104, %40
  %45 = phi i32 [ 0, %40 ], [ %106, %104 ]
  %46 = phi i32 [ 0, %40 ], [ %105, %104 ]
  %47 = load i32, i32* %41, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %108

49:                                               ; preds = %44
  %50 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %51 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %52 = icmp slt i32 %50, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = load i8*, i8** %42, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 56, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i64 0, i64 0), i32 %50, i32 %51) #11
  br label %104

55:                                               ; preds = %49
  %56 = add i32 %46, 1
  %57 = zext i32 %56 to i64
  %58 = shl nuw nsw i64 %57, 3
  %59 = load i32, i32* %35, align 4
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = shl i32 %59, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %58, %64
  %66 = select i1 %65, i64 %58, i64 %64
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi i64 [ %58, %55 ], [ %66, %62 ]
  %69 = icmp ugt i32 %46, 536870909
  br i1 %69, label %79, label %70

70:                                               ; preds = %67
  %71 = load i8*, i8** %38, align 8
  %72 = tail call i8* @av_fast_realloc(i8* %71, i32* %35, i64 %68) #11
  %73 = bitcast i8* %72 to %struct.MOVStts*
  %74 = icmp eq i8* %72, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  store i8* %72, i8** %38, align 8
  %76 = zext i32 %46 to i64
  %77 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %73, i64 %76, i32 0
  store i32 %50, i32* %77, align 4
  %78 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %73, i64 %76, i32 1
  store i32 %51, i32* %78, align 4
  br label %79

79:                                               ; preds = %67, %70, %75
  %80 = phi i32 [ %46, %67 ], [ %46, %70 ], [ %56, %75 ]
  %81 = load i8*, i8** %42, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 %50, i32 %51) #11
  %82 = icmp slt i32 %51, 0
  %83 = sub nsw i32 0, %51
  %84 = select i1 %82, i32 %51, i32 %83
  %85 = icmp slt i32 %84, -268435456
  %86 = add i32 %45, 2
  %87 = icmp ult i32 %86, %22
  %88 = and i1 %87, %85
  br i1 %88, label %101, label %89

89:                                               ; preds = %79
  br i1 %87, label %90, label %104

90:                                               ; preds = %89
  %91 = load i8*, i8** %42, align 8
  br i1 %82, label %92, label %104

92:                                               ; preds = %90
  %93 = icmp eq i32 %51, -2147483648
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.57, i64 0, i64 0), i32 2147483647) #11
  br label %95

95:                                               ; preds = %94, %92
  %96 = phi i32 [ -2147483647, %94 ], [ %51, %92 ]
  %97 = load i32, i32* %43, align 8
  %98 = sub nsw i32 0, %96
  %99 = icmp sgt i32 %97, %98
  %100 = select i1 %99, i32 %97, i32 %98
  store i32 %100, i32* %43, align 8
  br label %104

101:                                              ; preds = %79
  %102 = load i8*, i8** %42, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %102, i32 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0)) #11
  tail call void @av_freep(i8* %34) #11
  %103 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 10
  store i32 0, i32* %103, align 8
  br label %119

104:                                              ; preds = %53, %89, %90, %95
  %105 = phi i32 [ %80, %95 ], [ %80, %90 ], [ %80, %89 ], [ %46, %53 ]
  %106 = add nuw i32 %45, 1
  %107 = icmp eq i32 %106, %22
  br i1 %107, label %108, label %44

108:                                              ; preds = %44, %104
  %109 = phi i32 [ %46, %44 ], [ %105, %104 ]
  %110 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 10
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  %114 = load i8*, i8** %42, align 8
  br i1 %113, label %116, label %115

115:                                              ; preds = %108
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %114, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.55, i64 0, i64 0)) #11
  br label %119

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 48
  %118 = load i32, i32* %117, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %114, i32 56, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0), i32 %118) #11
  br label %119

119:                                              ; preds = %101, %31, %29, %10, %4, %116, %115
  %120 = phi i32 [ 0, %101 ], [ -541478725, %115 ], [ 0, %116 ], [ 0, %4 ], [ 0, %10 ], [ -1094995529, %29 ], [ -12, %31 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dpxe(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 144)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dref(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %285, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %285, label %23

23:                                               ; preds = %10
  %24 = sext i32 %21 to i64
  %25 = add nsw i64 %3, -1
  %26 = sdiv i64 %25, 12
  %27 = add nsw i64 %26, 1
  %28 = icmp slt i64 %27, %24
  %29 = icmp ugt i32 %21, 35791393
  %30 = or i1 %29, %28
  br i1 %30, label %285, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 42
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 43
  br i1 %34, label %47, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %43, %36 ], [ 0, %31 ]
  %38 = load %struct.MOVDref*, %struct.MOVDref** %35, align 8
  %39 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %38, i64 %37, i32 1
  %40 = bitcast i8** %39 to i8*
  tail call void @av_freep(i8* %40) #11
  %41 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %38, i64 %37, i32 2
  %42 = bitcast i8** %41 to i8*
  tail call void @av_freep(i8* %42) #11
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %32, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %31
  %48 = bitcast %struct.MOVDref** %35 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @av_free(i8* %49) #11
  store i32 0, i32* %32, align 4
  %50 = mul nsw i64 %24, 120
  %51 = tail call noalias i8* @av_mallocz(i64 %50) #11
  store i8* %51, i8** %48, align 8
  %52 = icmp eq i8* %51, null
  %53 = bitcast i8* %51 to %struct.MOVDref*
  br i1 %52, label %285, label %54

54:                                               ; preds = %47
  store i32 %21, i32* %32, align 4
  %55 = icmp sgt i32 %21, 0
  br i1 %55, label %56, label %285

56:                                               ; preds = %54
  %57 = bitcast %struct.AVFormatContext** %5 to i8**
  %58 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %59 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %60 = icmp ult i32 %58, 12
  br i1 %60, label %285, label %61

61:                                               ; preds = %56
  %62 = zext i32 %58 to i64
  %63 = add nsw i64 %62, -4
  %64 = add i64 %63, %59
  br label %65

65:                                               ; preds = %61, %276
  %66 = phi i64 [ %64, %61 ], [ %283, %276 ]
  %67 = phi i32 [ %58, %61 ], [ %279, %276 ]
  %68 = phi i64 [ 0, %61 ], [ %278, %276 ]
  %69 = phi i32 [ %21, %61 ], [ %271, %276 ]
  %70 = phi i32 [ 0, %61 ], [ %274, %276 ]
  %71 = phi %struct.MOVDref* [ %53, %61 ], [ %277, %276 ]
  %72 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %73 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 0
  store i32 %72, i32* %73, align 8
  %74 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %75 = load i32, i32* %73, align 8
  %76 = icmp eq i32 %75, 1936288865
  %77 = icmp ugt i32 %67, 150
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %266

79:                                               ; preds = %65
  %80 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 10) #11
  %81 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %82 = and i32 %81, 65535
  %83 = icmp ult i32 %82, 27
  %84 = select i1 %83, i32 %82, i32 27
  %85 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 3, i64 0
  %86 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %85, i32 27) #11
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %285, label %88

88:                                               ; preds = %79
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 3, i64 %89
  store i8 0, i8* %90, align 1
  %91 = load i8*, i8** %57, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %91, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), i8* %85, i32 %84) #11
  %92 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 12) #11
  %93 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %94 = and i32 %93, 65535
  %95 = icmp ult i32 %94, 63
  %96 = select i1 %95, i32 %94, i32 63
  %97 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 4, i64 0
  %98 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %97, i32 63) #11
  %99 = icmp slt i32 %98, 0
  br i1 %99, label %285, label %100

100:                                              ; preds = %88
  %101 = zext i32 %96 to i64
  %102 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 4, i64 %101
  store i8 0, i8* %102, align 1
  %103 = load i8*, i8** %57, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %103, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0), i8* %97, i32 %96) #11
  %104 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 16) #11
  %105 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %106 = trunc i32 %105 to i16
  %107 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 6
  store i16 %106, i16* %107, align 2
  %108 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %109 = trunc i32 %108 to i16
  %110 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 5
  store i16 %109, i16* %110, align 4
  %111 = load i8*, i8** %57, align 8
  %112 = load i16, i16* %107, align 2
  %113 = sext i16 %112 to i32
  %114 = shl i32 %108, 16
  %115 = ashr exact i32 %114, 16
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %111, i32 48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0), i32 %113, i32 %115) #11
  %116 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 16) #11
  %117 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 2
  %118 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %71, i64 %68, i32 1
  br label %119

119:                                              ; preds = %100, %263
  %120 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %121 = icmp slt i64 %120, %66
  br i1 %121, label %122, label %270

122:                                              ; preds = %119
  %123 = tail call i32 @avio_feof(%struct.AVIOContext* %1) #11
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %285

125:                                              ; preds = %122
  %126 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %127 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %128 = load i8*, i8** %57, align 8
  %129 = shl i32 %126, 16
  %130 = ashr exact i32 %129, 16
  %131 = and i32 %127, 65535
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %128, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0), i32 %130, i32 %131) #11
  %132 = and i32 %127, 1
  %133 = icmp eq i32 %132, 0
  %134 = add nuw nsw i32 %131, 1
  %135 = select i1 %133, i32 %127, i32 %134
  %136 = trunc i32 %135 to i16
  switch i32 %129, label %259 [
    i32 131072, label %137
    i32 0, label %211
  ]

137:                                              ; preds = %125
  %138 = load i8*, i8** %118, align 8
  tail call void @av_free(i8* %138) #11
  %139 = and i32 %135, 65535
  %140 = add nuw nsw i32 %139, 1
  %141 = zext i32 %140 to i64
  %142 = tail call noalias i8* @av_mallocz(i64 %141) #11
  store i8* %142, i8** %118, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %285, label %144

144:                                              ; preds = %137
  %145 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %142, i32 %139) #11
  %146 = icmp slt i32 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %144
  %148 = bitcast i8** %118 to i8*
  tail call void @av_freep(i8* %148) #11
  br label %285

149:                                              ; preds = %144
  %150 = icmp sgt i32 %139, %84
  br i1 %150, label %151, label %163

151:                                              ; preds = %149
  %152 = load i8*, i8** %118, align 8
  %153 = tail call i32 @strncmp(i8* %152, i8* %85, i64 %89) #13
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = sub i32 %135, %84
  %157 = trunc i32 %156 to i16
  %158 = getelementptr inbounds i8, i8* %152, i64 %89
  %159 = and i32 %156, 65535
  %160 = zext i32 %159 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %152, i8* align 1 %158, i64 %160, i1 false)
  %161 = load i8*, i8** %118, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  store i8 0, i8* %162, align 1
  br label %163

163:                                              ; preds = %151, %155, %149
  %164 = phi i16 [ %136, %151 ], [ %157, %155 ], [ %136, %149 ]
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %208, label %166

166:                                              ; preds = %163
  %167 = load i8*, i8** %118, align 8
  %168 = zext i16 %164 to i64
  br label %169

169:                                              ; preds = %166, %176
  %170 = phi i64 [ %168, %166 ], [ %172, %176 ]
  %171 = phi i16 [ %164, %166 ], [ %177, %176 ]
  %172 = add nsw i64 %170, -1
  %173 = getelementptr inbounds i8, i8* %167, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %169
  %177 = add i16 %171, -1
  %178 = icmp sgt i64 %172, 0
  br i1 %178, label %169, label %179

179:                                              ; preds = %176, %169
  %180 = phi i16 [ %177, %176 ], [ %171, %169 ]
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %208, label %182

182:                                              ; preds = %179
  %183 = zext i16 %180 to i64
  %184 = and i64 %183, 1
  %185 = icmp eq i16 %180, 1
  br i1 %185, label %200, label %186

186:                                              ; preds = %182
  %187 = sub nsw i64 %183, %184
  br label %188

188:                                              ; preds = %293, %186
  %189 = phi i64 [ 0, %186 ], [ %294, %293 ]
  %190 = phi i64 [ %187, %186 ], [ %295, %293 ]
  %191 = load i8*, i8** %118, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %189
  %193 = load i8, i8* %192, align 1
  switch i8 %193, label %195 [
    i8 58, label %194
    i8 0, label %194
  ]

194:                                              ; preds = %188, %188
  store i8 47, i8* %192, align 1
  br label %195

195:                                              ; preds = %188, %194
  %196 = or i64 %189, 1
  %197 = load i8*, i8** %118, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 %196
  %199 = load i8, i8* %198, align 1
  switch i8 %199, label %293 [
    i8 58, label %292
    i8 0, label %292
  ]

200:                                              ; preds = %293, %182
  %201 = phi i64 [ 0, %182 ], [ %294, %293 ]
  %202 = icmp eq i64 %184, 0
  br i1 %202, label %208, label %203

203:                                              ; preds = %200
  %204 = load i8*, i8** %118, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 %201
  %206 = load i8, i8* %205, align 1
  switch i8 %206, label %208 [
    i8 58, label %207
    i8 0, label %207
  ]

207:                                              ; preds = %203, %203
  store i8 47, i8* %205, align 1
  br label %208

208:                                              ; preds = %200, %203, %207, %163, %179
  %209 = load i8*, i8** %57, align 8
  %210 = load i8*, i8** %118, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %209, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i64 0, i64 0), i8* %210) #11
  br label %263

211:                                              ; preds = %125
  %212 = load i8*, i8** %117, align 8
  tail call void @av_free(i8* %212) #11
  %213 = and i32 %135, 65535
  %214 = add nuw nsw i32 %213, 1
  %215 = zext i32 %214 to i64
  %216 = tail call noalias i8* @av_malloc(i64 %215) #11
  store i8* %216, i8** %117, align 8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %285, label %218

218:                                              ; preds = %211
  %219 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %216, i32 %213) #11
  %220 = icmp slt i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = bitcast i8** %117 to i8*
  tail call void @av_freep(i8* %222) #11
  br label %285

223:                                              ; preds = %218
  %224 = load i8*, i8** %117, align 8
  %225 = zext i32 %213 to i64
  %226 = getelementptr inbounds i8, i8* %224, i64 %225
  store i8 0, i8* %226, align 1
  %227 = icmp eq i32 %213, 0
  br i1 %227, label %256, label %228

228:                                              ; preds = %223
  %229 = and i64 %225, 1
  %230 = icmp eq i32 %213, 1
  br i1 %230, label %247, label %231

231:                                              ; preds = %228
  %232 = sub nsw i64 %225, %229
  br label %233

233:                                              ; preds = %288, %231
  %234 = phi i64 [ 0, %231 ], [ %289, %288 ]
  %235 = phi i64 [ %232, %231 ], [ %290, %288 ]
  %236 = load i8*, i8** %117, align 8
  %237 = getelementptr inbounds i8, i8* %236, i64 %234
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 58
  br i1 %239, label %240, label %241

240:                                              ; preds = %233
  store i8 47, i8* %237, align 1
  br label %241

241:                                              ; preds = %233, %240
  %242 = or i64 %234, 1
  %243 = load i8*, i8** %117, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, 58
  br i1 %246, label %287, label %288

247:                                              ; preds = %288, %228
  %248 = phi i64 [ 0, %228 ], [ %289, %288 ]
  %249 = icmp eq i64 %229, 0
  br i1 %249, label %256, label %250

250:                                              ; preds = %247
  %251 = load i8*, i8** %117, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 %248
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 58
  br i1 %254, label %255, label %256

255:                                              ; preds = %250
  store i8 47, i8* %252, align 1
  br label %256

256:                                              ; preds = %247, %250, %255, %223
  %257 = load i8*, i8** %57, align 8
  %258 = load i8*, i8** %117, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %257, i32 48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i64 0, i64 0), i8* %258) #11
  br label %263

259:                                              ; preds = %125
  %260 = and i32 %135, 65535
  %261 = zext i32 %260 to i64
  %262 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %261) #11
  br label %263

263:                                              ; preds = %256, %259, %208
  %264 = and i32 %126, 65535
  %265 = icmp eq i32 %264, 65535
  br i1 %265, label %270, label %119

266:                                              ; preds = %65
  %267 = load i8*, i8** %57, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %267, i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.64, i64 0, i64 0), i32 %75, i32 %67) #11
  %268 = add nsw i32 %69, -1
  %269 = add nsw i32 %70, -1
  br label %270

270:                                              ; preds = %263, %119, %266
  %271 = phi i32 [ %268, %266 ], [ %69, %119 ], [ %69, %263 ]
  %272 = phi i32 [ %269, %266 ], [ %70, %119 ], [ %70, %263 ]
  %273 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %66, i32 0) #11
  %274 = add nsw i32 %272, 1
  %275 = icmp slt i32 %274, %271
  br i1 %275, label %276, label %285

276:                                              ; preds = %270
  %277 = load %struct.MOVDref*, %struct.MOVDref** %35, align 8
  %278 = sext i32 %274 to i64
  %279 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %280 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %281 = zext i32 %279 to i64
  %282 = add nsw i64 %281, -4
  %283 = add i64 %282, %280
  %284 = icmp ult i32 %279, 12
  br i1 %284, label %285, label %65

285:                                              ; preds = %88, %79, %276, %270, %211, %137, %122, %56, %54, %221, %147, %47, %23, %10, %4
  %286 = phi i32 [ 0, %4 ], [ -1094995529, %10 ], [ -1094995529, %23 ], [ -12, %47 ], [ %219, %221 ], [ %145, %147 ], [ 0, %54 ], [ -1094995529, %56 ], [ -541478725, %122 ], [ -12, %137 ], [ -12, %211 ], [ 0, %270 ], [ -1094995529, %276 ], [ %86, %79 ], [ %98, %88 ]
  ret i32 %286

287:                                              ; preds = %241
  store i8 47, i8* %244, align 1
  br label %288

288:                                              ; preds = %287, %241
  %289 = add nuw nsw i64 %234, 2
  %290 = add i64 %235, -2
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %247, label %233

292:                                              ; preds = %195, %195
  store i8 47, i8* %198, align 1
  br label %293

293:                                              ; preds = %292, %195
  %294 = add nuw nsw i64 %189, 2
  %295 = add i64 %190, -2
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %200, label %188
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_elst(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %141, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 21
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %141

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %16 = load %struct.AVStream**, %struct.AVStream*** %15, align 8
  %17 = add i32 %8, -1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %16, i64 %18
  %20 = load %struct.AVStream*, %struct.AVStream** %19, align 8
  %21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i64 0, i32 3
  %22 = bitcast i8** %21 to %struct.MOVStreamContext**
  %23 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %22, align 8
  %24 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %25 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %26 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %27 = add nsw i64 %3, -8
  %28 = icmp eq i32 %24, 1
  %29 = select i1 %28, i64 20, i64 12
  %30 = sext i32 %26 to i64
  %31 = mul nsw i64 %29, %30
  %32 = icmp eq i64 %27, %31
  br i1 %32, label %49, label %33

33:                                               ; preds = %14
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %35 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i64 0, i32 36
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = bitcast %struct.AVFormatContext* %34 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.65, i64 0, i64 0), i32 %26, i64 %3) #11
  br label %141

40:                                               ; preds = %33
  %41 = sdiv i64 %27, %29
  %42 = trunc i64 %41 to i32
  %43 = shl i64 %41, 32
  %44 = ashr exact i64 %43, 32
  %45 = mul nsw i64 %44, %29
  %46 = icmp eq i64 %45, %27
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = bitcast %struct.AVFormatContext* %34 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.66, i64 0, i64 0), i64 %27, i32 %42) #11
  br label %49

49:                                               ; preds = %40, %14, %47
  %50 = phi i32 [ %42, %47 ], [ %42, %40 ], [ %26, %14 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %141, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %23, i64 0, i32 19
  %54 = load %struct.MOVElst*, %struct.MOVElst** %53, align 8
  %55 = icmp eq %struct.MOVElst* %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %52
  %57 = bitcast %struct.MOVElst* %54 to i8*
  %58 = bitcast %struct.MOVElst** %53 to i8**
  br label %64

59:                                               ; preds = %52
  %60 = bitcast %struct.AVFormatContext** %5 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i64 0, i64 0)) #11
  %62 = bitcast %struct.MOVElst** %53 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %56, %59
  %65 = phi i8** [ %58, %56 ], [ %62, %59 ]
  %66 = phi i8* [ %57, %56 ], [ %63, %59 ]
  tail call void @av_free(i8* %66) #11
  %67 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %23, i64 0, i32 20
  store i32 0, i32* %67, align 8
  %68 = sext i32 %50 to i64
  %69 = tail call i8* @av_malloc_array(i64 %68, i64 24) #11
  store i8* %69, i8** %65, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %141, label %71

71:                                               ; preds = %64
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %73 = bitcast %struct.AVFormatContext* %72 to i8*
  %74 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %72, i64 0, i32 6
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 56, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0), i32 %76, i32 %50) #11
  %77 = icmp sgt i32 %50, 0
  %78 = icmp sgt i64 %27, 0
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %139

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %82 = bitcast %struct.AVFormatContext** %5 to i8**
  br label %83

83:                                               ; preds = %80, %131
  %84 = phi i64 [ 0, %80 ], [ %132, %131 ]
  %85 = phi i32 [ 0, %80 ], [ %133, %131 ]
  %86 = phi i64 [ %27, %80 ], [ %112, %131 ]
  %87 = load i32, i32* %81, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %137

89:                                               ; preds = %83
  %90 = load %struct.MOVElst*, %struct.MOVElst** %53, align 8
  %91 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %90, i64 %84
  br i1 %28, label %92, label %96

92:                                               ; preds = %89
  %93 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %94 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %91, i64 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %102

96:                                               ; preds = %89
  %97 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %91, i64 0, i32 0
  store i64 %98, i64* %99, align 8
  %100 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %101 = sext i32 %100 to i64
  br label %102

102:                                              ; preds = %96, %92
  %103 = phi i64 [ -8, %96 ], [ -16, %92 ]
  %104 = phi i64 [ %101, %96 ], [ %95, %92 ]
  %105 = add nsw i64 %86, %103
  %106 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %90, i64 %84, i32 1
  store i64 %104, i64* %106, align 8
  %107 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %108 = uitofp i32 %107 to double
  %109 = fmul nsz double %108, 0x3EF0000000000000
  %110 = fptrunc double %109 to float
  %111 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %90, i64 %84, i32 2
  store float %110, float* %111, align 8
  %112 = add nsw i64 %105, -4
  %113 = load i8*, i8** %82, align 8
  %114 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %91, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = load i64, i64* %106, align 8
  %117 = fpext float %110 to double
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 56, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i64 0, i64 0), i64 %115, i64 %116, double %117) #11
  %118 = load i64, i64* %106, align 8
  %119 = icmp sgt i64 %118, -2
  br i1 %119, label %131, label %120

120:                                              ; preds = %102
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %122 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %121, i64 0, i32 36
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = trunc i64 %84 to i32
  %127 = bitcast %struct.AVFormatContext* %121 to i8*
  %128 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %121, i64 0, i32 6
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %127, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.70, i64 0, i64 0), i32 %130, i32 %126, i64 %118) #11
  br label %141

131:                                              ; preds = %102, %120
  %132 = add nuw nsw i64 %84, 1
  %133 = add nuw nsw i32 %85, 1
  %134 = icmp slt i64 %132, %68
  %135 = icmp sgt i64 %112, 0
  %136 = and i1 %135, %134
  br i1 %136, label %83, label %139

137:                                              ; preds = %83
  %138 = trunc i64 %84 to i32
  br label %139

139:                                              ; preds = %131, %137, %71
  %140 = phi i32 [ 0, %71 ], [ %138, %137 ], [ %133, %131 ]
  store i32 %140, i32* %67, align 8
  br label %141

141:                                              ; preds = %125, %64, %49, %4, %10, %139, %38
  %142 = phi i32 [ -1094995529, %38 ], [ 0, %139 ], [ 0, %10 ], [ 0, %4 ], [ 0, %49 ], [ -12, %64 ], [ -1094995529, %125 ]
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_enda(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %18 = and i32 %17, 255
  %19 = bitcast %struct.AVFormatContext** %5 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i32 %18) #11
  %21 = icmp eq i32 %18, 1
  br i1 %21, label %22, label %31

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %23, align 8
  %25 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %31 [
    i32 65549, label %27
    i32 65545, label %28
    i32 65556, label %29
    i32 65558, label %30
  ]

27:                                               ; preds = %22
  store i32 65548, i32* %25, align 4
  br label %31

28:                                               ; preds = %22
  store i32 65544, i32* %25, align 4
  br label %31

29:                                               ; preds = %22
  store i32 65557, i32* %25, align 4
  br label %31

30:                                               ; preds = %22
  store i32 65559, i32* %25, align 4
  br label %31

31:                                               ; preds = %10, %22, %30, %29, %28, %27, %4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_fiel(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = icmp slt i64 %3, 2
  br i1 %17, label %37, label %18

18:                                               ; preds = %10
  %19 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %20 = trunc i32 %19 to i16
  %21 = and i16 %20, -256
  switch i16 %21, label %27 [
    i16 256, label %32
    i16 512, label %22
  ]

22:                                               ; preds = %18
  %23 = trunc i32 %19 to i8
  switch i8 %23, label %27 [
    i8 1, label %32
    i8 6, label %24
    i8 9, label %25
    i8 14, label %26
  ]

24:                                               ; preds = %22
  br label %32

25:                                               ; preds = %22
  br label %32

26:                                               ; preds = %22
  br label %32

27:                                               ; preds = %18, %22
  %28 = icmp eq i32 %19, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %27
  %30 = bitcast %struct.AVFormatContext** %5 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.72, i64 0, i64 0), i32 %19) #11
  br label %32

32:                                               ; preds = %27, %22, %18, %24, %25, %26, %29
  %33 = phi i32 [ 0, %29 ], [ 0, %27 ], [ 1, %18 ], [ 3, %24 ], [ 4, %25 ], [ 5, %26 ], [ 2, %22 ]
  %34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %34, align 8
  %36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i64 0, i32 14
  store i32 %33, i32* %36, align 8
  br label %37

37:                                               ; preds = %10, %4, %32
  %38 = phi i32 [ 0, %32 ], [ 0, %4 ], [ -1094995529, %10 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_adrm(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [20 x i8], align 16
  %6 = alloca [20 x i8], align 16
  %7 = alloca [64 x i8], align 16
  %8 = alloca [64 x i8], align 16
  %9 = alloca [20 x i8], align 16
  %10 = alloca [20 x i8], align 16
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #11
  %12 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #11
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 64, i1 false)
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 64, i1 false)
  %15 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #11
  %16 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %16) #11
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 20, i1 false)
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 40
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 35
  store i32 1, i32* %21, align 4
  %22 = tail call %struct.AVSHA* @av_sha_alloc() #11
  %23 = icmp eq %struct.AVSHA* %22, null
  br i1 %23, label %91, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 46
  %26 = bitcast %struct.AVAES** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @av_free(i8* %27) #11
  %28 = tail call %struct.AVAES* @av_aes_alloc() #11
  store %struct.AVAES* %28, %struct.AVAES** %25, align 8
  %29 = icmp eq %struct.AVAES* %28, null
  br i1 %29, label %88, label %30

30:                                               ; preds = %24
  %31 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %14, i32 8) #11
  %32 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %13, i32 56) #11
  %33 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %14, i32 4) #11
  %34 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %15, i32 20) #11
  %35 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %36 = bitcast %struct.AVFormatContext** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73, i64 0, i64 0)) #11
  %38 = load i8*, i8** %36, align 8
  br label %39

39:                                               ; preds = %39, %30
  %40 = phi i64 [ 0, %30 ], [ %45, %39 ]
  %41 = phi i8* [ %38, %30 ], [ %46, %39 ]
  %42 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 %40
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i32 %44) #11
  %45 = add nuw nsw i64 %40, 1
  %46 = load i8*, i8** %36, align 8
  %47 = icmp eq i64 %45, 20
  br i1 %47, label %48, label %39

48:                                               ; preds = %39
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0)) #11
  %49 = icmp eq i8* %18, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.75, i64 0, i64 0)) #11
  br label %88

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 39
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 4
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.76, i64 0, i64 0)) #11
  br label %88

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 41
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 16
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.77, i64 0, i64 0)) #11
  br label %88

64:                                               ; preds = %58
  %65 = call i32 @av_sha_init(%struct.AVSHA* nonnull %22, i32 160) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* %20, i32 16) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %18, i32 4) #11
  call void @av_sha_final(%struct.AVSHA* nonnull %22, i8* nonnull %11) #11
  %66 = call i32 @av_sha_init(%struct.AVSHA* nonnull %22, i32 160) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* %20, i32 16) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %11, i32 20) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %18, i32 4) #11
  call void @av_sha_final(%struct.AVSHA* nonnull %22, i8* nonnull %12) #11
  %67 = call i32 @av_sha_init(%struct.AVSHA* nonnull %22, i32 160) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %11, i32 16) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %12, i32 16) #11
  call void @av_sha_final(%struct.AVSHA* nonnull %22, i8* nonnull %16) #11
  %68 = call i32 @bcmp(i8* nonnull %16, i8* nonnull %15, i64 20)
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %71, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.78, i64 0, i64 0)) #11
  br label %88

72:                                               ; preds = %64
  %73 = load %struct.AVAES*, %struct.AVAES** %25, align 8
  %74 = call i32 @av_aes_init(%struct.AVAES* %73, i8* nonnull %11, i32 128, i32 1) #11
  %75 = load %struct.AVAES*, %struct.AVAES** %25, align 8
  call void @av_aes_crypt(%struct.AVAES* %75, i8* nonnull %14, i8* nonnull %13, i32 3, i8* nonnull %12, i32 1) #11
  %76 = load i8, i8* %18, align 1
  %77 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 3
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %76, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %72
  %81 = getelementptr inbounds i8, i8* %18, i64 1
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 2
  %84 = load i8, i8* %83, align 2
  %85 = icmp eq i8 %82, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %99, %93, %80, %72
  %87 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.79, i64 0, i64 0)) #11
  br label %88

88:                                               ; preds = %24, %104, %86, %70, %62, %56, %50
  %89 = phi i32 [ -22, %56 ], [ -22, %62 ], [ -1094995529, %70 ], [ -1094995529, %86 ], [ 0, %104 ], [ 0, %50 ], [ -12, %24 ]
  %90 = bitcast %struct.AVSHA* %22 to i8*
  call void @av_free(i8* nonnull %90) #11
  br label %91

91:                                               ; preds = %4, %88
  %92 = phi i32 [ %89, %88 ], [ -12, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #11
  ret i32 %92

93:                                               ; preds = %80
  %94 = getelementptr inbounds i8, i8* %18, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %95, %97
  br i1 %98, label %99, label %86

99:                                               ; preds = %93
  %100 = getelementptr inbounds i8, i8* %18, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = load i8, i8* %14, align 16
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %104, label %86

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 36, i64 0
  %106 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false)
  %107 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 2 %107, i64 16, i1 false)
  %108 = call i32 @av_sha_init(%struct.AVSHA* nonnull %22, i32 160) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* nonnull %13, i32 16) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* %105, i32 16) #11
  call void @av_sha_update(%struct.AVSHA* nonnull %22, i8* %20, i32 16) #11
  %109 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 37, i64 0
  call void @av_sha_final(%struct.AVSHA* nonnull %22, i8* %109) #11
  br label %88
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_ftyp(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca [5 x i8], align 1
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 0, i64 5, i1 false)
  %9 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %8, i32 4) #11
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %75, label %11

11:                                               ; preds = %4
  %12 = call i32 @bcmp(i8* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 5)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 12
  store i32 1, i32* %15, align 8
  br label %16

16:                                               ; preds = %11, %14
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %18 = bitcast %struct.AVFormatContext** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.80, i64 0, i64 0), i8* nonnull %8) #11
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %21 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i64 0, i32 29
  %22 = call i32 @av_dict_set(%struct.AVDictionary** %21, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* nonnull %8, i32 0) #11
  %23 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %24, i64 0, i32 29
  %26 = zext i32 %23 to i64
  %27 = call i32 @av_dict_set_int(%struct.AVDictionary** %25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i64 %26, i32 0) #11
  %28 = trunc i64 %3 to i32
  %29 = add i32 %28, -8
  %30 = icmp slt i32 %29, 0
  %31 = icmp eq i32 %29, 2147483647
  %32 = or i1 %30, %31
  br i1 %32, label %75, label %33

33:                                               ; preds = %16
  %34 = shl i64 %3, 32
  %35 = add i64 %34, -30064771072
  %36 = ashr exact i64 %35, 32
  %37 = call noalias i8* @av_malloc(i64 %36) #11
  store i8* %37, i8** %5, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %33
  %40 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %37, i32 %29) #11
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @av_freep(i8* nonnull %7) #11
  br label %75

43:                                               ; preds = %39
  %44 = sext i32 %29 to i64
  %45 = getelementptr inbounds i8, i8* %37, i64 %44
  store i8 0, i8* %45, align 1
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i64 0, i32 29
  %48 = call i32 @av_dict_set(%struct.AVDictionary** %47, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* nonnull %37, i32 8) #11
  %49 = call i32 @bcmp(i8* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i64 5)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 43
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 16
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = load i8*, i8** %18, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.84, i64 0, i64 0)) #11
  br label %75

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 45
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 16
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = load i8*, i8** %18, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.85, i64 0, i64 0)) #11
  br label %75

63:                                               ; preds = %57
  %64 = call %struct.AVAES* @av_aes_alloc() #11
  %65 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 46
  store %struct.AVAES* %64, %struct.AVAES** %65, align 8
  %66 = icmp eq %struct.AVAES* %64, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 36, i64 0
  %69 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 42
  %70 = load i8*, i8** %69, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 1 %70, i64 16, i1 false) #11
  %71 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 37, i64 0
  %72 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 44
  %73 = load i8*, i8** %72, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 1 %73, i64 16, i1 false) #11
  %74 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 35
  store i32 1, i32* %74, align 4
  br label %75

75:                                               ; preds = %67, %63, %61, %55, %43, %33, %16, %4, %42
  %76 = phi i32 [ %40, %42 ], [ %9, %4 ], [ -1094995529, %16 ], [ -12, %33 ], [ 0, %43 ], [ 0, %55 ], [ 0, %61 ], [ 0, %63 ], [ 0, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_hdlr(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca [32 x i8], align 1
  %7 = alloca [32 x i8], align 1
  %8 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %9 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %10 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %11 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %12 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %13 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %14 = bitcast %struct.AVFormatContext** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %16, i8 0, i64 32, i1 false)
  %17 = call i8* @av_fourcc_make_string(i8* nonnull %16, i32 %11) #11
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i64 0, i64 0), i8* %17) #11
  %18 = load i8*, i8** %14, align 8
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %19, i8 0, i64 32, i1 false)
  %20 = call i8* @av_fourcc_make_string(i8* nonnull %19, i32 %12) #11
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i64 0, i64 0), i8* %20) #11
  %21 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %4
  %25 = icmp eq i32 %12, 1635017837
  br i1 %25, label %26, label %90

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 6
  store i32 1, i32* %27, align 8
  br label %90

28:                                               ; preds = %4
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %13, align 8
  %30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i64 0, i32 7
  %31 = load %struct.AVStream**, %struct.AVStream*** %30, align 8
  %32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i64 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %31, i64 %35
  %37 = load %struct.AVStream*, %struct.AVStream** %36, align 8
  switch i32 %12, label %54 [
    i32 1701079414, label %38
    i32 1853190003, label %42
    i32 543240557, label %46
    i32 1885564003, label %50
    i32 1885500787, label %50
  ]

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 19
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %39, align 8
  %41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i64 0, i32 0
  store i32 0, i32* %41, align 8
  br label %54

42:                                               ; preds = %28
  %43 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 19
  %44 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %43, align 8
  %45 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %44, i64 0, i32 0
  store i32 1, i32* %45, align 8
  br label %54

46:                                               ; preds = %28
  %47 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 19
  %48 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %47, align 8
  %49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %48, i64 0, i32 1
  store i32 86016, i32* %49, align 4
  br label %54

50:                                               ; preds = %28, %28
  %51 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 19
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %51, align 8
  %53 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i64 0, i32 0
  store i32 3, i32* %53, align 8
  br label %54

54:                                               ; preds = %28, %42, %50, %46, %38
  %55 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %56 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %57 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %58 = add nsw i64 %3, -24
  %59 = icmp sgt i64 %58, 0
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = icmp ugt i64 %58, 2147483647
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = add nsw i64 %3, -23
  %64 = call noalias i8* @av_malloc(i64 %63) #11
  store i8* %64, i8** %5, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = trunc i64 %58 to i32
  %68 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %64, i32 %67) #11
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @av_freep(i8* nonnull %8) #11
  br label %90

71:                                               ; preds = %66
  %72 = getelementptr inbounds i8, i8* %64, i64 %58
  store i8 0, i8* %72, align 1
  %73 = load i8, i8* %64, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 12
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = sext i8 %73 to i64
  %81 = add nsw i64 %3, -25
  %82 = icmp eq i64 %81, %80
  %83 = zext i1 %82 to i64
  br label %84

84:                                               ; preds = %75, %79
  %85 = phi i64 [ 0, %75 ], [ %83, %79 ]
  %86 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i64 0, i32 11
  %87 = getelementptr inbounds i8, i8* %64, i64 %85
  %88 = call i32 @av_dict_set(%struct.AVDictionary** %86, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88, i64 0, i64 0), i8* %87, i32 16) #11
  br label %89

89:                                               ; preds = %71, %84
  call void @av_freep(i8* nonnull %8) #11
  br label %90

90:                                               ; preds = %54, %89, %62, %60, %24, %26, %70
  %91 = phi i32 [ %68, %70 ], [ 0, %26 ], [ 0, %24 ], [ -1094995529, %60 ], [ -12, %62 ], [ 0, %89 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_ilst(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 16
  store i32 1, i32* %5, align 4
  %6 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3)
  store i32 0, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_jp2h(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 88)
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @mov_read_mdat(%struct.MOVContext* nocapture, %struct.AVIOContext* nocapture readnone, i32, i64) #6 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 5
  store i32 1, i32* %7, align 4
  br label %8

8:                                                ; preds = %4, %6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_mdhd(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %80, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %10, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %struct.MOVStreamContext**
  %21 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %20, align 8
  %22 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 30
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %12
  %26 = bitcast %struct.AVFormatContext* %8 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0)) #11
  br label %80

27:                                               ; preds = %12
  %28 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = bitcast %struct.AVFormatContext** %7 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void (i8*, i8*, ...) @avpriv_request_sample(i8* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i32 %28) #11
  br label %80

33:                                               ; preds = %27
  %34 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %35 = icmp eq i32 %28, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %33
  %37 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %38 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %43

39:                                               ; preds = %33
  %40 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %41 = zext i32 %40 to i64
  %42 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i64 [ %37, %36 ], [ %41, %39 ]
  %45 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 11
  %46 = bitcast %struct.AVFormatContext** %7 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i64 %44, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i64 %44, 2082844799
  %51 = add nsw i64 %44, -2082844800
  %52 = select i1 %50, i64 %51, i64 %44
  %53 = mul i64 %52, 1000000
  %54 = sdiv i64 %53, 1000000
  %55 = icmp eq i64 %54, %52
  br i1 %55, label %57, label %56

56:                                               ; preds = %49
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 48, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.93, i64 0, i64 0)) #11
  br label %59

57:                                               ; preds = %49
  %58 = tail call i32 @avpriv_dict_set_timestamp(%struct.AVDictionary** %45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i64 0, i64 0), i64 %53) #11
  br label %59

59:                                               ; preds = %43, %56, %57
  %60 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %60, i32* %22, align 8
  %61 = icmp slt i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = load i8*, i8** %46, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.91, i64 0, i64 0), i32 %60) #11
  store i32 1, i32* %22, align 8
  br label %64

64:                                               ; preds = %62, %59
  br i1 %35, label %65, label %67

65:                                               ; preds = %64
  %66 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %70

67:                                               ; preds = %64
  %68 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %69 = zext i32 %68 to i64
  br label %70

70:                                               ; preds = %67, %65
  %71 = phi i64 [ %66, %65 ], [ %69, %67 ]
  %72 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 6
  store i64 %71, i64* %72, align 8
  %73 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %74 = call i32 @ff_mov_lang_to_iso639(i32 %73, i8* nonnull %6) #11
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = call i32 @av_dict_set(%struct.AVDictionary** %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.92, i64 0, i64 0), i8* nonnull %6, i32 0) #11
  br label %78

78:                                               ; preds = %70, %76
  %79 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  br label %80

80:                                               ; preds = %4, %78, %30, %25
  %81 = phi i32 [ -1094995529, %25 ], [ -1163346256, %30 ], [ 0, %78 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_meta(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = icmp sgt i64 %3, 8
  br i1 %5, label %6, label %20

6:                                                ; preds = %4, %17
  %7 = phi i64 [ %18, %17 ], [ %3, %4 ]
  %8 = tail call i32 @avio_feof(%struct.AVIOContext* %1) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %12 = icmp eq i32 %11, 1919706216
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 -8, i32 1) #11
  %15 = add nuw nsw i64 %7, 4
  %16 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %15)
  br label %20

17:                                               ; preds = %10
  %18 = add nsw i64 %7, -4
  %19 = icmp sgt i64 %18, 8
  br i1 %19, label %6, label %20

20:                                               ; preds = %17, %6, %4, %13
  %21 = phi i32 [ %16, %13 ], [ 0, %4 ], [ 0, %17 ], [ -541478725, %6 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_moof(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 32
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %170

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 31
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %170

13:                                               ; preds = %9
  store i32 1, i32* %6, align 4
  %14 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 19
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %19 = bitcast %struct.AVFormatContext** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  br i1 %17, label %169, label %21

21:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 40, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.95, i64 0, i64 0)) #11
  %22 = tail call i64 @avio_size(%struct.AVIOContext* %1) #11
  %23 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %24 = add nsw i64 %22, -4
  %25 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %24, i32 0) #11
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = trunc i64 %25 to i32
  br label %157

29:                                               ; preds = %21
  %30 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %31 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 52
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 51
  store i32 1, i32* %32, align 4
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = zext i32 %30 to i64
  %36 = icmp slt i64 %22, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %34, %29
  %38 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.99, i64 0, i64 0)) #11
  br label %157

39:                                               ; preds = %34
  %40 = sub nsw i64 0, %35
  %41 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %40, i32 1) #11
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = trunc i64 %41 to i32
  br label %157

45:                                               ; preds = %39
  %46 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %47 = load i32, i32* %31, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 48, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.100, i64 0, i64 0)) #11
  br label %157

51:                                               ; preds = %45
  %52 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %53 = icmp eq i32 %52, 1835430497
  %54 = load i8*, i8** %19, align 8
  br i1 %53, label %56, label %55

55:                                               ; preds = %51
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.101, i64 0, i64 0)) #11
  br label %157

56:                                               ; preds = %51
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i64 0, i64 0)) #11
  %57 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %58 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %59 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %60 = icmp eq i32 %59, 1952871009
  br i1 %60, label %61, label %155

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %63 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  br label %64

64:                                               ; preds = %147, %61
  %65 = phi i32 [ %58, %61 ], [ %152, %147 ]
  %66 = phi i64 [ %57, %61 ], [ %151, %147 ]
  %67 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %67, i32 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0)) #11
  %68 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %69 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %70 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %71 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %72 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %147, label %74

74:                                               ; preds = %64
  %75 = icmp eq i32 %68, 1
  %76 = lshr i32 %71, 4
  %77 = and i32 %76, 3
  %78 = lshr i32 %71, 2
  %79 = and i32 %78, 3
  %80 = and i32 %71, 3
  br label %81

81:                                               ; preds = %144, %74
  %82 = phi i32 [ 0, %74 ], [ %145, %144 ]
  %83 = tail call i32 @avio_feof(%struct.AVIOContext* %1) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %157

85:                                               ; preds = %81
  br i1 %75, label %86, label %89

86:                                               ; preds = %85
  %87 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %88 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %94

89:                                               ; preds = %85
  %90 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %91 = zext i32 %90 to i64
  %92 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %93 = zext i32 %92 to i64
  br label %94

94:                                               ; preds = %89, %86
  %95 = phi i64 [ %87, %86 ], [ %91, %89 ]
  %96 = phi i64 [ %88, %86 ], [ %93, %89 ]
  %97 = tail call fastcc i32 @update_frag_index(%struct.MOVContext* %0, i64 %96) #11
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %128, label %99

99:                                               ; preds = %94
  %100 = load i32, i32* %62, align 4
  %101 = icmp sgt i32 %100, %97
  br i1 %101, label %102, label %128

102:                                              ; preds = %99
  %103 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %63, align 8
  %104 = sext i32 %97 to i64
  %105 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %103, i64 %104, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %128

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %103, i64 %104, i32 4
  %110 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %109, align 8
  %111 = sext i32 %106 to i64
  br label %114

112:                                              ; preds = %114
  %113 = icmp eq i64 %120, %111
  br i1 %113, label %128, label %114

114:                                              ; preds = %112, %108
  %115 = phi i64 [ 0, %108 ], [ %120, %112 ]
  %116 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %110, i64 %115
  %117 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, %70
  %120 = add nuw nsw i64 %115, 1
  br i1 %119, label %121, label %112

121:                                              ; preds = %114
  %122 = icmp eq %struct.MOVFragmentStreamInfo* %116, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %110, i64 %115, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, -9223372036854775808
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store i64 %95, i64* %124, align 8
  br label %128

128:                                              ; preds = %112, %127, %123, %121, %102, %99, %94
  br label %129

129:                                              ; preds = %128, %129
  %130 = phi i32 [ %132, %129 ], [ 0, %128 ]
  %131 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %132 = add nuw nsw i32 %130, 1
  %133 = icmp eq i32 %130, %77
  br i1 %133, label %134, label %129

134:                                              ; preds = %129, %134
  %135 = phi i32 [ %137, %134 ], [ 0, %129 ]
  %136 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %137 = add nuw nsw i32 %135, 1
  %138 = icmp eq i32 %135, %79
  br i1 %138, label %139, label %134

139:                                              ; preds = %134, %139
  %140 = phi i32 [ %142, %139 ], [ 0, %134 ]
  %141 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %142 = add nuw nsw i32 %140, 1
  %143 = icmp eq i32 %140, %80
  br i1 %143, label %144, label %139

144:                                              ; preds = %139
  %145 = add nuw i32 %82, 1
  %146 = icmp eq i32 %145, %72
  br i1 %146, label %147, label %81

147:                                              ; preds = %144, %64
  %148 = zext i32 %65 to i64
  %149 = add nsw i64 %66, %148
  %150 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %149, i32 0) #11
  %151 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %152 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %153 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %154 = icmp eq i32 %153, 1952871009
  br i1 %154, label %64, label %155

155:                                              ; preds = %147, %56
  %156 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 1
  store i32 1, i32* %156, align 4
  br label %157

157:                                              ; preds = %81, %155, %55, %49, %43, %37, %27
  %158 = phi i32 [ %28, %27 ], [ -1, %37 ], [ %44, %43 ], [ -1, %49 ], [ -1, %55 ], [ 0, %155 ], [ -1094995529, %81 ]
  %159 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %23, i32 0) #11
  %160 = icmp slt i64 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %157
  %162 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %162, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i64 0, i64 0)) #11
  %163 = trunc i64 %159 to i32
  br label %164

164:                                              ; preds = %157, %161
  %165 = phi i32 [ %163, %161 ], [ %158, %157 ]
  %166 = icmp slt i32 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %168, i32 40, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.96, i64 0, i64 0)) #11
  br label %170

169:                                              ; preds = %13
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 40, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.97, i64 0, i64 0)) #11
  br label %170

170:                                              ; preds = %164, %167, %4, %169, %9
  %171 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %172 = add nsw i64 %171, -8
  %173 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 4
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 3
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %176 = bitcast %struct.AVFormatContext** %175 to i8**
  %177 = load i8*, i8** %176, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %177, i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98, i64 0, i64 0), i64 %172) #11
  %178 = load i64, i64* %174, align 8
  %179 = tail call fastcc i32 @update_frag_index(%struct.MOVContext* %0, i64 %178)
  %180 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  store i32 %179, i32* %180, align 8
  %181 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3)
  ret i32 %181
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_moov(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %10 = bitcast %struct.AVFormatContext** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.105, i64 0, i64 0)) #11
  %12 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %3) #11
  br label %17

13:                                               ; preds = %4
  %14 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3)
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 1, i32* %5, align 8
  br label %17

17:                                               ; preds = %13, %16, %8
  %18 = phi i32 [ 0, %8 ], [ 0, %16 ], [ %14, %13 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_mvhd(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %6 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %7 = icmp eq i32 %5, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %10 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %15

11:                                               ; preds = %4
  %12 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %13 = zext i32 %12 to i64
  %14 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %15

15:                                               ; preds = %11, %8
  %16 = phi i64 [ %9, %8 ], [ %13, %11 ]
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i64 0, i32 29
  %20 = bitcast %struct.AVFormatContext* %18 to i8*
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %15
  %23 = icmp sgt i64 %16, 2082844799
  %24 = add nsw i64 %16, -2082844800
  %25 = select i1 %23, i64 %24, i64 %16
  %26 = mul i64 %25, 1000000
  %27 = sdiv i64 %26, 1000000
  %28 = icmp eq i64 %27, %25
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 48, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.93, i64 0, i64 0)) #11
  br label %32

30:                                               ; preds = %22
  %31 = tail call i32 @avpriv_dict_set_timestamp(%struct.AVDictionary** %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i64 0, i64 0), i64 %26) #11
  br label %32

32:                                               ; preds = %15, %29, %30
  %33 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %34 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = icmp slt i32 %33, 1
  %36 = bitcast %struct.AVFormatContext** %17 to i8**
  br i1 %35, label %37, label %39

37:                                               ; preds = %32
  %38 = load i8*, i8** %36, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.106, i64 0, i64 0), i32 %33) #11
  store i32 1, i32* %34, align 8
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i32 [ 1, %37 ], [ %33, %32 ]
  %41 = load i8*, i8** %36, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i64 0, i64 0), i32 %40) #11
  br i1 %7, label %42, label %44

42:                                               ; preds = %39
  %43 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %47

44:                                               ; preds = %39
  %45 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %44, %42
  %48 = phi i64 [ %43, %42 ], [ %46, %44 ]
  %49 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 3
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 14
  %51 = load %struct.MOVTrackExt*, %struct.MOVTrackExt** %50, align 8
  %52 = icmp eq %struct.MOVTrackExt* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = load i32, i32* %34, align 8
  %55 = sext i32 %54 to i64
  %56 = tail call i64 @av_rescale(i64 %48, i64 1000000, i64 %55) #14
  %57 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %58 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %57, i64 0, i32 11
  store i64 %56, i64* %58, align 8
  br label %59

59:                                               ; preds = %47, %53
  %60 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %61 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %62 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 10) #11
  %63 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %64 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 0
  store i32 %63, i32* %64, align 4
  %65 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %66 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 1
  store i32 %65, i32* %66, align 4
  %67 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %68 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 2
  store i32 %67, i32* %68, align 4
  %69 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %70 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 0
  store i32 %69, i32* %70, align 4
  %71 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %72 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 1
  store i32 %71, i32* %72, align 4
  %73 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %74 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 2
  store i32 %73, i32* %74, align 4
  %75 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %76 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 0
  store i32 %75, i32* %76, align 4
  %77 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %78 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 1
  store i32 %77, i32* %78, align 4
  %79 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %80 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 2
  store i32 %79, i32* %80, align 4
  %81 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %82 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %83 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %84 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %85 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %86 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %87 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_svq3(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 23)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_alac(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 86032)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_pasp(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %6 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %struct.AVFormatContext* %8 to i8*
  br i1 %11, label %42, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = add i32 %10, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %17
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 10
  %21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 10, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %28

24:                                               ; preds = %13
  %25 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %20, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %24, %13
  %29 = icmp eq i32 %6, %22
  %30 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %20, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %5, %31
  %33 = and i1 %29, %32
  br i1 %33, label %35, label %34

34:                                               ; preds = %28
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 24, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.108, i64 0, i64 0), i32 %31, i32 %22, i32 %5, i32 %6) #11
  br label %42

35:                                               ; preds = %28, %24
  %36 = icmp eq i32 %6, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %20, i64 0, i32 0
  %39 = sext i32 %5 to i64
  %40 = sext i32 %6 to i64
  %41 = tail call i32 @av_reduce(i32* %38, i32* %21, i64 %39, i64 %40, i64 32767) #11
  br label %42

42:                                               ; preds = %34, %37, %35, %4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_sidx(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call i64 @avio_size(%struct.AVIOContext* %1) #11
  %6 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %7 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 %3) #11
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = icmp slt i64 %9, 0
  %11 = select i1 %10, i64 9223372036854775807, i64 -9223372036854775808
  %12 = select i1 %8, i64 %11, i64 %9
  %13 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %14 = and i32 %13, 255
  %15 = icmp ugt i32 %14, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %18 = bitcast %struct.AVFormatContext** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void (i8*, i8*, ...) @avpriv_request_sample(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i64 0, i64 0), i32 %14) #11
  br label %251

20:                                               ; preds = %4
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %23 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %23, align 8
  %25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %24, i64 0, i32 6
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast %struct.AVFormatContext* %24 to i8*
  br i1 %27, label %45, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %24, i64 0, i32 7
  %31 = load %struct.AVStream**, %struct.AVStream*** %30, align 8
  %32 = zext i32 %26 to i64
  br label %35

33:                                               ; preds = %35
  %34 = icmp ult i64 %42, %32
  br i1 %34, label %35, label %45

35:                                               ; preds = %29, %33
  %36 = phi i64 [ 0, %29 ], [ %42, %33 ]
  %37 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %31, i64 %36
  %38 = load %struct.AVStream*, %struct.AVStream** %37, align 8
  %39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %22
  %42 = add nuw nsw i64 %36, 1
  br i1 %41, label %43, label %33

43:                                               ; preds = %35
  %44 = icmp eq %struct.AVStream* %38, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %33, %20, %43
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.110, i64 0, i64 0), i32 %22) #11
  br label %251

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i64 0, i32 3
  %48 = bitcast i8** %47 to %struct.MOVStreamContext**
  %49 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %48, align 8
  %50 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, 1
  %54 = icmp slt i32 %50, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %46
  %56 = bitcast %struct.AVFormatContext** %23 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.111, i64 0, i64 0), i32 %50) #11
  br label %251

58:                                               ; preds = %46
  %59 = icmp eq i32 %14, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %62 = zext i32 %61 to i64
  %63 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %64 = zext i32 %63 to i64
  br label %68

65:                                               ; preds = %58
  %66 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %67 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %68

68:                                               ; preds = %65, %60
  %69 = phi i64 [ %64, %60 ], [ %67, %65 ]
  %70 = phi i64 [ %62, %60 ], [ %66, %65 ]
  %71 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %72 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %struct.AVFormatContext** %23 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.112, i64 0, i64 0)) #11
  br label %251

77:                                               ; preds = %68
  %78 = add i64 %69, %12
  %79 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i64 0, i32 4
  %80 = bitcast %struct.AVRational* %79 to i64*
  %81 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %82 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  br label %83

83:                                               ; preds = %125, %77
  %84 = phi i32 [ 0, %77 ], [ %130, %125 ]
  %85 = phi i64 [ %70, %77 ], [ %129, %125 ]
  %86 = phi i64 [ %78, %77 ], [ %127, %125 ]
  %87 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %88 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %89 = icmp slt i32 %87, 0
  br i1 %89, label %122, label %90

90:                                               ; preds = %83
  %91 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %92 = load i64, i64* %80, align 8
  %93 = tail call fastcc i32 @update_frag_index(%struct.MOVContext* %0, i64 %86)
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %125, label %95

95:                                               ; preds = %90
  %96 = load i32, i32* %81, align 4
  %97 = icmp sgt i32 %96, %93
  br i1 %97, label %98, label %125

98:                                               ; preds = %95
  %99 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %82, align 8
  %100 = sext i32 %93 to i64
  %101 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %99, i64 %100, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %125

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %99, i64 %100, i32 4
  %106 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %105, align 8
  %107 = sext i32 %102 to i64
  br label %110

108:                                              ; preds = %110
  %109 = icmp eq i64 %116, %107
  br i1 %109, label %125, label %110

110:                                              ; preds = %108, %104
  %111 = phi i64 [ 0, %104 ], [ %116, %108 ]
  %112 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %106, i64 %111
  %113 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, %22
  %116 = add nuw nsw i64 %111, 1
  br i1 %115, label %117, label %108

117:                                              ; preds = %110
  %118 = icmp eq %struct.MOVFragmentStreamInfo* %112, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %117
  %120 = tail call i64 @av_rescale_q(i64 %85, i64 %53, i64 %92) #14
  %121 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %106, i64 %111, i32 1
  store i64 %120, i64* %121, align 8
  br label %125

122:                                              ; preds = %83
  %123 = bitcast %struct.AVFormatContext** %23 to i8**
  %124 = load i8*, i8** %123, align 8
  tail call void (i8*, i8*, ...) @avpriv_request_sample(i8* %124, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0)) #11
  br label %251

125:                                              ; preds = %108, %98, %90, %95, %119, %117
  %126 = zext i32 %87 to i64
  %127 = add nsw i64 %86, %126
  %128 = zext i32 %88 to i64
  %129 = add nsw i64 %85, %128
  %130 = add nuw i32 %84, 1
  %131 = icmp eq i32 %130, %72
  br i1 %131, label %132, label %83

132:                                              ; preds = %125
  %133 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %49, i64 0, i32 53
  store i64 %129, i64* %133, align 8
  %134 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i64 0, i32 6
  store i64 %129, i64* %134, align 8
  %135 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %49, i64 0, i32 72
  store i32 1, i32* %135, align 4
  %136 = icmp eq i64 %127, %5
  br i1 %136, label %166, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 19
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %251, label %142

142:                                              ; preds = %137
  %143 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %144 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 51
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %160

147:                                              ; preds = %142
  %148 = add nsw i64 %5, -4
  %149 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %148, i32 0) #11
  %150 = icmp slt i64 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = trunc i64 %149 to i32
  br label %251

153:                                              ; preds = %147
  %154 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %155 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 52
  store i32 %154, i32* %155, align 8
  store i32 1, i32* %144, align 4
  %156 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 %143, i32 0) #11
  %157 = icmp slt i64 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = trunc i64 %156 to i32
  br label %251

160:                                              ; preds = %153, %142
  %161 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 52
  %162 = load i32, i32* %161, align 8
  %163 = zext i32 %162 to i64
  %164 = add nsw i64 %127, %163
  %165 = icmp eq i64 %164, %5
  br i1 %165, label %166, label %251

166:                                              ; preds = %160, %132
  %167 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %249, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %172 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %171, align 8
  %173 = zext i32 %168 to i64
  br label %174

174:                                              ; preds = %170, %203
  %175 = phi i64 [ 0, %170 ], [ %206, %203 ]
  %176 = phi %struct.MOVStreamContext* [ null, %170 ], [ %205, %203 ]
  %177 = phi %struct.AVStream* [ null, %170 ], [ %204, %203 ]
  %178 = icmp eq %struct.AVStream* %177, null
  br i1 %178, label %179, label %203

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %172, i64 %175, i32 3
  %181 = load i32, i32* %180, align 8
  %182 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %172, i64 %175, i32 4
  %183 = zext i32 %181 to i64
  br label %184

184:                                              ; preds = %187, %179
  %185 = phi i64 [ %192, %187 ], [ 0, %179 ]
  %186 = icmp eq i64 %185, %183
  br i1 %186, label %203, label %187

187:                                              ; preds = %184
  %188 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %182, align 8
  %189 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %188, i64 %185, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %190, -9223372036854775808
  %192 = add nuw nsw i64 %185, 1
  br i1 %191, label %184, label %193

193:                                              ; preds = %187
  %194 = and i64 %185, 4294967295
  %195 = load %struct.AVFormatContext*, %struct.AVFormatContext** %23, align 8
  %196 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %195, i64 0, i32 7
  %197 = load %struct.AVStream**, %struct.AVStream*** %196, align 8
  %198 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %197, i64 %194
  %199 = load %struct.AVStream*, %struct.AVStream** %198, align 8
  %200 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %199, i64 0, i32 3
  %201 = bitcast i8** %200 to %struct.MOVStreamContext**
  %202 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %201, align 8
  br label %203

203:                                              ; preds = %184, %174, %193
  %204 = phi %struct.AVStream* [ %199, %193 ], [ %177, %174 ], [ null, %184 ]
  %205 = phi %struct.MOVStreamContext* [ %202, %193 ], [ %176, %174 ], [ %176, %184 ]
  %206 = add nuw nsw i64 %175, 1
  %207 = icmp ult i64 %206, %173
  br i1 %207, label %174, label %208

208:                                              ; preds = %203
  %209 = icmp eq %struct.AVStream* %204, null
  br i1 %209, label %249, label %210

210:                                              ; preds = %208
  %211 = load %struct.AVFormatContext*, %struct.AVFormatContext** %23, align 8
  %212 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %211, i64 0, i32 6
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %249, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %204, i64 0, i32 6
  %217 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %205, i64 0, i32 30
  br label %218

218:                                              ; preds = %215, %242
  %219 = phi %struct.AVFormatContext* [ %211, %215 ], [ %243, %242 ]
  %220 = phi i64 [ 0, %215 ], [ %244, %242 ]
  %221 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %219, i64 0, i32 7
  %222 = load %struct.AVStream**, %struct.AVStream*** %221, align 8
  %223 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %222, i64 %220
  %224 = load %struct.AVStream*, %struct.AVStream** %223, align 8
  %225 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %224, i64 0, i32 3
  %226 = bitcast i8** %225 to %struct.MOVStreamContext**
  %227 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %226, align 8
  %228 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %227, i64 0, i32 72
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %242

231:                                              ; preds = %218
  %232 = load i64, i64* %216, align 8
  %233 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %227, i64 0, i32 30
  %234 = load i32, i32* %233, align 8
  %235 = sext i32 %234 to i64
  %236 = load i32, i32* %217, align 8
  %237 = sext i32 %236 to i64
  %238 = tail call i64 @av_rescale(i64 %232, i64 %235, i64 %237) #14
  %239 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %227, i64 0, i32 53
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %224, i64 0, i32 6
  store i64 %238, i64* %240, align 8
  %241 = load %struct.AVFormatContext*, %struct.AVFormatContext** %23, align 8
  br label %242

242:                                              ; preds = %218, %231
  %243 = phi %struct.AVFormatContext* [ %219, %218 ], [ %241, %231 ]
  %244 = add nuw nsw i64 %220, 1
  %245 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %243, i64 0, i32 6
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = icmp ult i64 %244, %247
  br i1 %248, label %218, label %249

249:                                              ; preds = %242, %166, %210, %208
  %250 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 1
  store i32 1, i32* %250, align 4
  br label %251

251:                                              ; preds = %137, %160, %158, %151, %122, %249, %74, %55, %45, %16
  %252 = phi i32 [ 0, %16 ], [ -1094995529, %55 ], [ 0, %74 ], [ -1163346256, %122 ], [ 0, %45 ], [ 0, %249 ], [ %159, %158 ], [ %152, %151 ], [ 0, %160 ], [ 0, %137 ]
  ret i32 %252
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stps(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %64, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %22 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 18
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %10
  %26 = bitcast i32* %23 to i8*
  %27 = bitcast i32** %22 to i8**
  br label %33

28:                                               ; preds = %10
  %29 = bitcast %struct.AVFormatContext** %5 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114, i64 0, i64 0)) #11
  %31 = bitcast i32** %22 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %25, %28
  %34 = phi i8** [ %27, %25 ], [ %31, %28 ]
  %35 = phi i8* [ %26, %25 ], [ %32, %28 ]
  tail call void @av_free(i8* %35) #11
  %36 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 17
  store i32 0, i32* %36, align 8
  %37 = zext i32 %21 to i64
  %38 = tail call i8* @av_malloc_array(i64 %37, i64 4) #11
  store i8* %38, i8** %34, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %64, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %42 = icmp eq i32 %21, 0
  br i1 %42, label %57, label %43

43:                                               ; preds = %40, %48
  %44 = phi i64 [ %52, %48 ], [ 0, %40 ]
  %45 = phi i32 [ %53, %48 ], [ 0, %40 ]
  %46 = load i32, i32* %41, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %50 = load i32*, i32** %22, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %44
  store i32 %49, i32* %51, align 4
  %52 = add nuw nsw i64 %44, 1
  %53 = add nuw i32 %45, 1
  %54 = icmp eq i64 %52, %37
  br i1 %54, label %57, label %43

55:                                               ; preds = %43
  %56 = trunc i64 %44 to i32
  br label %57

57:                                               ; preds = %48, %55, %40
  %58 = phi i32 [ 0, %40 ], [ %56, %55 ], [ %53, %48 ]
  store i32 %58, i32* %36, align 8
  %59 = load i32, i32* %41, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = bitcast %struct.AVFormatContext** %5 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.115, i64 0, i64 0)) #11
  br label %64

64:                                               ; preds = %57, %33, %4, %61
  %65 = phi i32 [ -541478725, %61 ], [ 0, %4 ], [ -12, %33 ], [ 0, %57 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_strf(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i64 %3, 41
  %11 = or i1 %10, %9
  br i1 %11, label %30, label %12

12:                                               ; preds = %4
  %13 = icmp ugt i64 %3, 1073741824
  br i1 %13, label %30, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %16 = load %struct.AVStream**, %struct.AVStream*** %15, align 8
  %17 = add i32 %8, -1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %16, i64 %18
  %20 = load %struct.AVStream*, %struct.AVStream** %19, align 8
  %21 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 40) #11
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i64 0, i32 19
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %23, align 8
  %25 = trunc i64 %3 to i32
  %26 = add nsw i32 %25, -40
  %27 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %22, %struct.AVCodecParameters* %24, %struct.AVIOContext* %1, i32 %26) #11
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 %27, i32 0
  br label %30

30:                                               ; preds = %14, %12, %4
  %31 = phi i32 [ 0, %4 ], [ -1094995529, %12 ], [ %29, %14 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stsc(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %201, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %23 = zext i32 %22 to i64
  %24 = mul nuw nsw i64 %23, 12
  %25 = add nuw nsw i64 %24, 4
  %26 = icmp ugt i64 %25, %3
  br i1 %26, label %201, label %27

27:                                               ; preds = %10
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %29 = bitcast %struct.AVFormatContext* %28 to i8*
  %30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %28, i64 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 56, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i64 0, i64 0), i32 %32, i32 %22) #11
  %33 = icmp eq i32 %22, 0
  br i1 %33, label %201, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 14
  %36 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %37 = icmp eq %struct.MOVStsc* %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = bitcast %struct.MOVStsc* %36 to i8*
  %40 = bitcast %struct.MOVStsc** %35 to i8**
  br label %46

41:                                               ; preds = %34
  %42 = bitcast %struct.AVFormatContext** %5 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.117, i64 0, i64 0)) #11
  %44 = bitcast %struct.MOVStsc** %35 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %38, %41
  %47 = phi i8** [ %40, %38 ], [ %44, %41 ]
  %48 = phi i8* [ %39, %38 ], [ %45, %41 ]
  tail call void @av_free(i8* %48) #11
  %49 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 13
  store i32 0, i32* %49, align 8
  %50 = tail call i8* @av_malloc_array(i64 %23, i64 12) #11
  store i8* %50, i8** %47, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %201, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ 0, %52 ], [ %69, %59 ]
  %56 = phi i32 [ 0, %52 ], [ %70, %59 ]
  %57 = load i32, i32* %53, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %73

59:                                               ; preds = %54
  %60 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %61 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %62 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %61, i64 %55, i32 0
  store i32 %60, i32* %62, align 4
  %63 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %64 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %65 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %64, i64 %55, i32 1
  store i32 %63, i32* %65, align 4
  %66 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %67 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %68 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %67, i64 %55, i32 2
  store i32 %66, i32* %68, align 4
  %69 = add nuw nsw i64 %55, 1
  %70 = add nuw i32 %56, 1
  %71 = icmp eq i64 %69, %23
  br i1 %71, label %72, label %54

72:                                               ; preds = %59
  store i32 %70, i32* %49, align 8
  br label %76

73:                                               ; preds = %54
  %74 = trunc i64 %55 to i32
  store i32 %74, i32* %49, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %195, label %76

76:                                               ; preds = %72, %73
  %77 = phi i32 [ %70, %72 ], [ %74, %73 ]
  %78 = bitcast %struct.AVFormatContext** %5 to i8**
  %79 = zext i32 %77 to i64
  br label %80

80:                                               ; preds = %192, %76
  %81 = phi i32 [ %77, %76 ], [ %194, %192 ]
  %82 = phi i64 [ %79, %76 ], [ %193, %192 ]
  %83 = trunc i64 %82 to i32
  %84 = add i32 %83, -1
  %85 = zext i32 %81 to i64
  %86 = icmp ult i64 %82, %85
  br i1 %86, label %87, label %95

87:                                               ; preds = %80
  %88 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %88, i64 %89, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %88, i64 %82, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %91, %93
  br i1 %94, label %95, label %123

95:                                               ; preds = %87, %80
  %96 = icmp eq i32 %84, 0
  %97 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  br i1 %96, label %98, label %101

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %97, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br label %110

101:                                              ; preds = %95
  %102 = zext i32 %84 to i64
  %103 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %97, i64 %102, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = add i64 %82, 4294967294
  %106 = and i64 %105, 4294967295
  %107 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %97, i64 %106, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %104, %108
  br i1 %109, label %110, label %123

110:                                              ; preds = %98, %101
  %111 = phi i32 [ %100, %98 ], [ %104, %101 ]
  %112 = phi i64 [ 0, %98 ], [ %102, %101 ]
  %113 = sext i32 %111 to i64
  %114 = icmp sgt i64 %82, %113
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %97, i64 %112, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %117, 1
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %97, i64 %112, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %121, 1
  br i1 %122, label %123, label %190

123:                                              ; preds = %87, %101, %119, %115, %110
  %124 = phi i32 [ %91, %87 ], [ %104, %101 ], [ %111, %119 ], [ %111, %115 ], [ %111, %110 ]
  %125 = phi i64 [ %89, %87 ], [ %102, %101 ], [ %112, %119 ], [ %112, %115 ], [ %112, %110 ]
  %126 = phi %struct.MOVStsc* [ %88, %87 ], [ %97, %101 ], [ %97, %119 ], [ %97, %115 ], [ %97, %110 ]
  %127 = load i8*, i8** %78, align 8
  %128 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %126, i64 %125, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %126, i64 %125, i32 2
  %131 = load i32, i32* %130, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %127, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.118, i64 0, i64 0), i32 %84, i32 %124, i32 %129, i32 %131) #11
  %132 = load i32, i32* %49, align 8
  %133 = zext i32 %132 to i64
  %134 = icmp ult i64 %82, %133
  %135 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  br i1 %134, label %174, label %136

136:                                              ; preds = %123
  %137 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %135, i64 %125, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  %140 = icmp ne i32 %84, 0
  %141 = and i1 %140, %139
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = add i32 %132, -1
  store i32 %143, i32* %49, align 8
  br label %192

144:                                              ; preds = %136
  %145 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %135, i64 %125, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = icmp slt i64 %82, %147
  %149 = select i1 %148, i32 %146, i32 %83
  store i32 %149, i32* %145, align 4
  br i1 %140, label %150, label %163

150:                                              ; preds = %144
  %151 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %152 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %151, i64 %125, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = add i64 %82, 4294967294
  %155 = and i64 %154, 4294967295
  %156 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %151, i64 %155, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %153, %157
  br i1 %158, label %163, label %159

159:                                              ; preds = %150
  %160 = icmp eq i32 %157, 2147483647
  %161 = add i32 %157, 1
  %162 = select i1 %160, i32 2147483647, i32 %161
  store i32 %162, i32* %152, align 4
  br label %163

163:                                              ; preds = %150, %159, %144
  %164 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %165 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %164, i64 %125, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %166, 1
  %168 = select i1 %167, i32 %166, i32 1
  store i32 %168, i32* %165, align 4
  %169 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %170 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %169, i64 %125, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %171, 1
  %173 = select i1 %172, i32 %171, i32 1
  store i32 %173, i32* %170, align 4
  br label %190

174:                                              ; preds = %123
  %175 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %135, i64 %82, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp sgt i32 %176, 1
  br i1 %177, label %179, label %178

178:                                              ; preds = %174
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 2722) #11
  tail call void @abort() #12
  unreachable

179:                                              ; preds = %174
  %180 = add nsw i32 %176, -1
  %181 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %135, i64 %125, i32 0
  store i32 %180, i32* %181, align 4
  %182 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %183 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %182, i64 %82, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %182, i64 %125, i32 1
  store i32 %184, i32* %185, align 4
  %186 = load %struct.MOVStsc*, %struct.MOVStsc** %35, align 8
  %187 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %186, i64 %82, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %186, i64 %125, i32 2
  store i32 %188, i32* %189, align 4
  br label %190

190:                                              ; preds = %119, %179, %163
  %191 = icmp eq i32 %84, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %142, %190
  %193 = add nsw i64 %82, -1
  %194 = load i32, i32* %49, align 8
  br label %80

195:                                              ; preds = %190, %73
  %196 = load i32, i32* %53, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = bitcast %struct.AVFormatContext** %5 to i8**
  %200 = load i8*, i8** %199, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %200, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.120, i64 0, i64 0)) #11
  br label %201

201:                                              ; preds = %195, %46, %27, %10, %4, %198
  %202 = phi i32 [ -541478725, %198 ], [ 0, %4 ], [ -1094995529, %10 ], [ 0, %27 ], [ -12, %46 ], [ 0, %195 ]
  ret i32 %202
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stsd(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %180, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 63
  store i32 %20, i32* %21, align 8
  %22 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %23 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %31, label %25

25:                                               ; preds = %10
  %26 = sext i32 %23 to i64
  %27 = sdiv i64 %3, 8
  %28 = icmp slt i64 %27, %26
  %29 = icmp sgt i32 %23, 1024
  %30 = or i1 %29, %28
  br i1 %30, label %31, label %34

31:                                               ; preds = %25, %10
  %32 = bitcast %struct.AVFormatContext** %5 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.121, i64 0, i64 0), i32 %23) #11
  br label %180

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 59
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp eq i8** %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = bitcast %struct.AVFormatContext** %5 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.122, i64 0, i64 0)) #11
  br label %180

41:                                               ; preds = %34
  %42 = tail call i8* @av_mallocz_array(i64 %26, i64 8) #11
  %43 = bitcast i8*** %35 to i8**
  store i8* %42, i8** %43, align 8
  %44 = icmp eq i8* %42, null
  br i1 %44, label %180, label %45

45:                                               ; preds = %41
  %46 = tail call i8* @av_mallocz_array(i64 %26, i64 4) #11
  %47 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 60
  %48 = bitcast i32** %47 to i8**
  store i8* %46, i8** %48, align 8
  %49 = icmp eq i8* %46, null
  br i1 %49, label %156, label %50

50:                                               ; preds = %45
  %51 = tail call i32 @ff_mov_read_stsd_entries(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %23)
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %156, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %55 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %56 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %55, i64 0, i32 3
  %57 = bitcast i8** %56 to i8*
  tail call void @av_freep(i8* %57) #11
  %58 = load i32*, i32** %47, align 8
  %59 = load i32, i32* %58, align 4
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i64 0, i32 4
  store i32 %59, i32* %61, align 8
  %62 = load i32*, i32** %47, align 8
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %86, label %65

65:                                               ; preds = %53
  %66 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %67 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i64 0, i32 3
  %68 = bitcast i8** %67 to i8*
  %69 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 64
  %72 = sext i32 %71 to i64
  %73 = tail call i32 @av_reallocp(i8* %68, i64 %72) #11
  %74 = icmp slt i32 %73, 0
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  br i1 %74, label %76, label %78

76:                                               ; preds = %65
  %77 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 4
  store i32 0, i32* %77, align 8
  br label %180

78:                                               ; preds = %65
  %79 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 3
  %80 = load i8*, i8** %79, align 8
  %81 = load i8**, i8*** %35, align 8
  %82 = load i8*, i8** %81, align 8
  %83 = load i32*, i32** %47, align 8
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %82, i64 %85, i1 false)
  br label %86

86:                                               ; preds = %53, %78
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %88 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %101

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i64 0, i32 23
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 30
  %97 = load i32, i32* %96, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  store i32 %97, i32* %92, align 4
  %100 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  br label %101

101:                                              ; preds = %99, %95, %91, %86
  %102 = phi %struct.AVCodecParameters* [ %87, %91 ], [ %100, %99 ], [ %87, %95 ], [ %87, %86 ]
  %103 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  switch i32 %104, label %180 [
    i32 86040, label %105
    i32 73728, label %119
    i32 73729, label %123
    i32 86016, label %127
    i32 86017, label %127
    i32 86034, label %129
    i32 69638, label %129
    i32 69633, label %129
    i32 86075, label %129
    i32 86025, label %129
    i32 86026, label %129
    i32 86035, label %129
    i32 86032, label %133
    i32 86019, label %152
    i32 86056, label %152
    i32 1, label %152
    i32 70, label %152
    i32 139, label %152
    i32 167, label %152
    i32 32797, label %154
  ]

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 22
  store i32 1, i32* %106, align 8
  %107 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %108 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %107, i64 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 1886151505
  br i1 %110, label %113, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %107, i64 0, i32 23
  store i32 8000, i32* %112, align 4
  br label %113

113:                                              ; preds = %111, %105
  %114 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 38
  store i32 160, i32* %114, align 4
  %115 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 37
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %180

118:                                              ; preds = %113
  store i32 35, i32* %115, align 8
  br label %180

119:                                              ; preds = %101
  %120 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 22
  store i32 1, i32* %120, align 8
  %121 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %122 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %121, i64 0, i32 23
  store i32 8000, i32* %122, align 4
  br label %180

123:                                              ; preds = %101
  %124 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 22
  store i32 1, i32* %124, align 8
  %125 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %126 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %125, i64 0, i32 23
  store i32 16000, i32* %126, align 4
  br label %180

127:                                              ; preds = %101, %101
  %128 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 0
  store i32 1, i32* %128, align 8
  br label %180

129:                                              ; preds = %101, %101, %101, %101, %101, %101, %101
  %130 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 37
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 24
  store i32 %131, i32* %132, align 8
  br label %180

133:                                              ; preds = %101
  %134 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 4
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 36
  br i1 %136, label %137, label %180

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 3
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 21
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i64 0, i32 22
  store i32 %142, i32* %143, align 8
  %144 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %54, align 8
  %145 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %144, i64 0, i32 3
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 32
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 1
  %150 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %149) #14, !srcloc !3
  %151 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %144, i64 0, i32 23
  store i32 %150, i32* %151, align 4
  br label %180

152:                                              ; preds = %101, %101, %101, %101, %101, %101
  %153 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 28
  store i32 1, i32* %153, align 4
  br label %180

154:                                              ; preds = %101
  %155 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 28
  store i32 2, i32* %155, align 4
  br label %180

156:                                              ; preds = %45, %50
  %157 = phi i32 [ %51, %50 ], [ -12, %45 ]
  %158 = load i8**, i8*** %35, align 8
  %159 = icmp eq i8** %158, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 62
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %177

164:                                              ; preds = %160
  %165 = bitcast i8** %158 to i8*
  tail call void @av_freep(i8* nonnull %165) #11
  %166 = load i32, i32* %161, align 4
  %167 = icmp sgt i32 %166, 1
  br i1 %167, label %168, label %177

168:                                              ; preds = %164, %168
  %169 = phi i64 [ %173, %168 ], [ 1, %164 ]
  %170 = load i8**, i8*** %35, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 %169
  %172 = bitcast i8** %171 to i8*
  tail call void @av_freep(i8* %172) #11
  %173 = add nuw nsw i64 %169, 1
  %174 = load i32, i32* %161, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %168, label %177

177:                                              ; preds = %168, %164, %160, %156
  %178 = bitcast i8*** %35 to i8*
  tail call void @av_freep(i8* %178) #11
  %179 = bitcast i32** %47 to i8*
  tail call void @av_freep(i8* %179) #11
  br label %180

180:                                              ; preds = %154, %152, %137, %133, %129, %127, %123, %119, %118, %113, %101, %41, %4, %177, %76, %38, %31
  %181 = phi i32 [ -1094995529, %31 ], [ -1094995529, %38 ], [ %157, %177 ], [ %73, %76 ], [ 0, %4 ], [ -12, %41 ], [ 0, %101 ], [ 0, %113 ], [ 0, %118 ], [ 0, %119 ], [ 0, %123 ], [ 0, %127 ], [ 0, %129 ], [ 0, %133 ], [ 0, %137 ], [ 0, %152 ], [ 0, %154 ]
  ret i32 %181
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stss(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %75, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %23 = bitcast %struct.AVFormatContext** %5 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.123, i64 0, i64 0), i32 %22) #11
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %10
  %27 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 27
  store i32 1, i32* %27, align 8
  %28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 28
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %75

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %34 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %75

37:                                               ; preds = %31
  store i32 2, i32* %28, align 4
  br label %75

38:                                               ; preds = %10
  %39 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 29
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = load i8*, i8** %23, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.124, i64 0, i64 0)) #11
  br label %44

44:                                               ; preds = %38, %42
  %45 = icmp ugt i32 %22, 1073741822
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = zext i32 %22 to i64
  %48 = bitcast i32** %39 to i8*
  tail call void @av_freep(i8* %48) #11
  %49 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 28
  store i32 0, i32* %49, align 4
  %50 = tail call i8* @av_malloc_array(i64 %47, i64 4) #11
  %51 = bitcast i32** %39 to i8**
  store i8* %50, i8** %51, align 8
  %52 = icmp eq i8* %50, null
  br i1 %52, label %75, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  br label %55

55:                                               ; preds = %60, %53
  %56 = phi i64 [ 0, %53 ], [ %64, %60 ]
  %57 = phi i32 [ 0, %53 ], [ %65, %60 ]
  %58 = load i32, i32* %54, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %62 = load i32*, i32** %39, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 %56
  store i32 %61, i32* %63, align 4
  %64 = add nuw nsw i64 %56, 1
  %65 = add nuw i32 %57, 1
  %66 = icmp eq i64 %64, %47
  br i1 %66, label %69, label %55

67:                                               ; preds = %55
  %68 = trunc i64 %56 to i32
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %60 ]
  store i32 %70, i32* %49, align 4
  %71 = load i32, i32* %54, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = load i8*, i8** %23, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.125, i64 0, i64 0)) #11
  br label %75

75:                                               ; preds = %69, %46, %44, %31, %37, %26, %4, %73
  %76 = phi i32 [ -541478725, %73 ], [ 0, %4 ], [ 0, %26 ], [ 0, %37 ], [ 0, %31 ], [ -1094995529, %44 ], [ -12, %46 ], [ 0, %69 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stsz(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %175, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = icmp eq i32 %2, 2054386803
  br i1 %22, label %23, label %32

23:                                               ; preds = %10
  %24 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %25 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 23
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i32 %24, i32* %25, align 4
  br label %29

29:                                               ; preds = %23, %28
  %30 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 24
  store i32 %24, i32* %30, align 8
  %31 = icmp ne i32 %24, 0
  br label %35

32:                                               ; preds = %10
  %33 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %34 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i1 [ %31, %29 ], [ false, %32 ]
  %37 = phi i32 [ 32, %29 ], [ %34, %32 ]
  %38 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %39 = bitcast %struct.AVFormatContext** %5 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 23
  %42 = load i32, i32* %41, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 56, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.126, i64 0, i64 0), i32 %42, i32 %38) #11
  %43 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 25
  store i32 %38, i32* %43, align 4
  br i1 %36, label %175, label %44

44:                                               ; preds = %35
  %45 = add i32 %37, -4
  %46 = lshr i32 %45, 2
  %47 = shl i32 %45, 30
  %48 = or i32 %46, %47
  switch i32 %48, label %49 [
    i32 7, label %51
    i32 3, label %51
    i32 1, label %51
    i32 0, label %51
  ]

49:                                               ; preds = %44
  %50 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i32 %37) #11
  br label %175

51:                                               ; preds = %44, %44, %44, %44
  %52 = icmp eq i32 %38, 0
  br i1 %52, label %175, label %53

53:                                               ; preds = %51
  %54 = udiv i32 -5, %37
  %55 = icmp ult i32 %38, %54
  br i1 %55, label %56, label %175

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 26
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = bitcast i32* %58 to i8*
  %62 = bitcast i32** %57 to i8**
  br label %67

63:                                               ; preds = %56
  %64 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.128, i64 0, i64 0)) #11
  %65 = bitcast i32** %57 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %60, %63
  %68 = phi i8** [ %62, %60 ], [ %65, %63 ]
  %69 = phi i8* [ %61, %60 ], [ %66, %63 ]
  tail call void @av_free(i8* %69) #11
  store i32 0, i32* %43, align 4
  %70 = zext i32 %38 to i64
  %71 = tail call i8* @av_malloc_array(i64 %70, i64 4) #11
  store i8* %71, i8** %68, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %175, label %73

73:                                               ; preds = %67
  %74 = mul i32 %38, %37
  %75 = add i32 %74, 4
  %76 = lshr i32 %75, 3
  %77 = add nuw nsw i32 %76, 64
  %78 = zext i32 %77 to i64
  %79 = tail call noalias i8* @av_malloc(i64 %78) #11
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = bitcast i32** %57 to i8*
  tail call void @av_freep(i8* %82) #11
  br label %175

83:                                               ; preds = %73
  %84 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %79, i32 %76) #11
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = bitcast i32** %57 to i8*
  tail call void @av_freep(i8* %87) #11
  tail call void @av_free(i8* nonnull %79) #11
  %88 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %88, i32 24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i64 0, i64 0)) #11
  br label %175

89:                                               ; preds = %83
  %90 = and i32 %75, -8
  %91 = icmp ult i32 %90, 2147483135
  %92 = select i1 %91, i8* %79, i8* null
  %93 = add i32 %90, 8
  %94 = select i1 %91, i32 %93, i32 8
  %95 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %96 = icmp eq i32 %37, 0
  %97 = icmp slt i32 %37, 26
  %98 = add nsw i32 %37, -16
  %99 = trunc i32 %98 to i8
  %100 = sub i8 0, %99
  %101 = trunc i32 %37 to i8
  %102 = sub i8 0, %101
  %103 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 51
  br label %104

104:                                              ; preds = %159, %89
  %105 = phi i64 [ 0, %89 ], [ %163, %159 ]
  %106 = phi i32 [ 0, %89 ], [ %164, %159 ]
  %107 = phi i32 [ 0, %89 ], [ %145, %159 ]
  %108 = load i32, i32* %95, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %166

110:                                              ; preds = %104
  br i1 %96, label %144, label %111

111:                                              ; preds = %110
  %112 = lshr i32 %107, 3
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %92, i64 %113
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %115, align 1
  %117 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %116) #14
  %118 = and i32 %107, 7
  %119 = shl i32 %117, %118
  br i1 %97, label %120, label %125

120:                                              ; preds = %111
  %121 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %102, i32 %119) #14, !srcloc !7
  %122 = add i32 %107, %37
  %123 = icmp ugt i32 %94, %122
  %124 = select i1 %123, i32 %122, i32 %94
  br label %144

125:                                              ; preds = %111
  %126 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %119) #14, !srcloc !7
  %127 = add i32 %107, 16
  %128 = icmp ugt i32 %94, %127
  %129 = select i1 %128, i32 %127, i32 %94
  %130 = shl i32 %126, %98
  %131 = lshr i32 %129, 3
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %92, i64 %132
  %134 = bitcast i8* %133 to i32*
  %135 = load i32, i32* %134, align 1
  %136 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %135) #14, !srcloc !3
  %137 = and i32 %129, 7
  %138 = shl i32 %136, %137
  %139 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %100, i32 %138) #14, !srcloc !7
  %140 = add i32 %129, %98
  %141 = icmp ugt i32 %94, %140
  %142 = select i1 %141, i32 %140, i32 %94
  %143 = or i32 %139, %130
  br label %144

144:                                              ; preds = %110, %120, %125
  %145 = phi i32 [ %107, %110 ], [ %124, %120 ], [ %142, %125 ]
  %146 = phi i32 [ 0, %110 ], [ %121, %120 ], [ %143, %125 ]
  %147 = load i32*, i32** %57, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 %105
  store i32 %146, i32* %148, align 4
  %149 = load i32*, i32** %57, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 %105
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %151, 0
  br i1 %152, label %153, label %159

153:                                              ; preds = %144
  %154 = and i64 %105, 4294967295
  tail call void @av_free(i8* nonnull %79) #11
  %155 = load i8*, i8** %39, align 8
  %156 = load i32*, i32** %57, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 %154
  %158 = load i32, i32* %157, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %155, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.130, i64 0, i64 0), i32 %158) #11
  br label %175

159:                                              ; preds = %144
  %160 = sext i32 %151 to i64
  %161 = load i64, i64* %103, align 8
  %162 = add nsw i64 %161, %160
  store i64 %162, i64* %103, align 8
  %163 = add nuw nsw i64 %105, 1
  %164 = add nuw i32 %106, 1
  %165 = icmp eq i64 %163, %70
  br i1 %165, label %168, label %104

166:                                              ; preds = %104
  %167 = trunc i64 %105 to i32
  br label %168

168:                                              ; preds = %159, %166
  %169 = phi i32 [ %167, %166 ], [ %164, %159 ]
  store i32 %169, i32* %43, align 4
  tail call void @av_free(i8* nonnull %79) #11
  %170 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %168
  %174 = load i8*, i8** %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %174, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.131, i64 0, i64 0)) #11
  br label %175

175:                                              ; preds = %168, %67, %53, %51, %35, %4, %173, %153, %86, %81, %49
  %176 = phi i32 [ -1094995529, %49 ], [ 0, %86 ], [ -1094995529, %153 ], [ -541478725, %173 ], [ -12, %81 ], [ 0, %4 ], [ 0, %35 ], [ 0, %51 ], [ -1094995529, %53 ], [ -12, %67 ], [ 0, %168 ]
  ret i32 %176
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_stts(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %124, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %10, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 3
  %20 = bitcast i8** %19 to %struct.MOVStreamContext**
  %21 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %20, align 8
  %22 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %23 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %24 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %26 = bitcast %struct.AVFormatContext* %25 to i8*
  %27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 56, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.132, i64 0, i64 0), i32 %29, i32 %24) #11
  %30 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 7
  %31 = load %struct.MOVStts*, %struct.MOVStts** %30, align 8
  %32 = icmp eq %struct.MOVStts* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %12
  %34 = bitcast %struct.AVFormatContext** %7 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.133, i64 0, i64 0)) #11
  br label %36

36:                                               ; preds = %12, %33
  %37 = bitcast %struct.MOVStts** %30 to i8*
  tail call void @av_freep(i8* %37) #11
  %38 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 6
  store i32 0, i32* %38, align 8
  %39 = icmp ugt i32 %24, 268435454
  br i1 %39, label %124, label %40

40:                                               ; preds = %36
  %41 = icmp eq i32 %24, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  store i32 0, i32* %38, align 8
  br label %105

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %45 = bitcast %struct.MOVStts** %30 to i8**
  %46 = bitcast %struct.AVFormatContext** %7 to i8**
  %47 = zext i32 %24 to i64
  br label %48

48:                                               ; preds = %69, %43
  %49 = phi i64 [ 0, %43 ], [ %56, %69 ]
  %50 = phi i64 [ 0, %43 ], [ %81, %69 ]
  %51 = phi i64 [ 0, %43 ], [ %80, %69 ]
  %52 = phi i32 [ 0, %43 ], [ %57, %69 ]
  %53 = load i32, i32* %44, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %83

55:                                               ; preds = %48
  %56 = add nuw nsw i64 %49, 1
  %57 = add nuw i32 %52, 1
  %58 = icmp ugt i64 %49, 1048575
  %59 = trunc i64 %56 to i32
  %60 = select i1 %58, i32 %59, i32 1048576
  %61 = icmp ugt i32 %60, %24
  %62 = select i1 %61, i32 %24, i32 %60
  %63 = load i8*, i8** %45, align 8
  %64 = zext i32 %62 to i64
  %65 = shl nuw nsw i64 %64, 3
  %66 = call i8* @av_fast_realloc(i8* %63, i32* nonnull %5, i64 %65) #11
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %55
  call void @av_freep(i8* %37) #11
  store i32 0, i32* %38, align 8
  br label %124

69:                                               ; preds = %55
  store i32 %62, i32* %38, align 8
  store i8* %66, i8** %45, align 8
  %70 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %71 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %72 = load %struct.MOVStts*, %struct.MOVStts** %30, align 8
  %73 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %72, i64 %49, i32 0
  store i32 %70, i32* %73, align 4
  %74 = load %struct.MOVStts*, %struct.MOVStts** %30, align 8
  %75 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %74, i64 %49, i32 1
  store i32 %71, i32* %75, align 4
  %76 = load i8*, i8** %46, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 56, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.134, i64 0, i64 0), i32 %70, i32 %71) #11
  %77 = sext i32 %71 to i64
  %78 = zext i32 %70 to i64
  %79 = mul nsw i64 %77, %78
  %80 = add i64 %79, %51
  %81 = add nuw nsw i64 %50, %78
  %82 = icmp eq i64 %56, %47
  br i1 %82, label %85, label %48

83:                                               ; preds = %48
  %84 = trunc i64 %49 to i32
  br label %85

85:                                               ; preds = %69, %83
  %86 = phi i32 [ %84, %83 ], [ %57, %69 ]
  %87 = phi i64 [ %51, %83 ], [ %80, %69 ]
  %88 = phi i64 [ %50, %83 ], [ %81, %69 ]
  store i32 %86, i32* %38, align 8
  %89 = icmp sgt i64 %87, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 58
  %92 = load i64, i64* %91, align 8
  %93 = sub nsw i64 9223372036854775807, %92
  %94 = icmp sgt i64 %87, %93
  br i1 %94, label %105, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 57
  %97 = load i32, i32* %96, align 8
  %98 = sub nsw i32 2147483647, %97
  %99 = sext i32 %98 to i64
  %100 = icmp sgt i64 %88, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %95
  %102 = add nsw i64 %92, %87
  store i64 %102, i64* %91, align 8
  %103 = trunc i64 %88 to i32
  %104 = add i32 %97, %103
  store i32 %104, i32* %96, align 8
  br label %105

105:                                              ; preds = %42, %95, %90, %101, %85
  %106 = phi i64 [ 0, %42 ], [ %88, %95 ], [ %88, %90 ], [ %88, %101 ], [ %88, %85 ]
  %107 = phi i64 [ 0, %42 ], [ %87, %95 ], [ %87, %90 ], [ %87, %101 ], [ %87, %85 ]
  %108 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = bitcast %struct.AVFormatContext** %7 to i8**
  %113 = load i8*, i8** %112, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.135, i64 0, i64 0)) #11
  br label %124

114:                                              ; preds = %105
  %115 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 7
  store i64 %106, i64* %115, align 8
  %116 = icmp eq i64 %107, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 6
  %119 = load i64, i64* %118, align 8
  %120 = icmp sgt i64 %119, %107
  %121 = select i1 %120, i64 %107, i64 %119
  store i64 %121, i64* %118, align 8
  br label %122

122:                                              ; preds = %114, %117
  %123 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %21, i64 0, i32 53
  store i64 %107, i64* %123, align 8
  br label %124

124:                                              ; preds = %68, %36, %4, %122, %111
  %125 = phi i32 [ -541478725, %111 ], [ 0, %122 ], [ 0, %4 ], [ -12, %36 ], [ -12, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_sdtp(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = add i64 %3, -4
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %24 = bitcast %struct.AVFormatContext* %23 to i8*
  %25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i64 0, i32 6
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 56, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.136, i64 0, i64 0), i32 %27, i64 %22) #11
  %28 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 9
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %10
  %32 = bitcast %struct.AVFormatContext** %5 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.137, i64 0, i64 0)) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast i8** %28 to i8*
  tail call void @av_freep(i8* %35) #11
  %36 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 8
  store i32 0, i32* %36, align 8
  %37 = tail call noalias i8* @av_mallocz(i64 %22) #11
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %41 = icmp sgt i64 %22, 0
  br i1 %41, label %42, label %53

42:                                               ; preds = %39, %46
  %43 = phi i64 [ %51, %46 ], [ 0, %39 ]
  %44 = load i32, i32* %40, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %42
  %47 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %48 = trunc i32 %47 to i8
  %49 = load i8*, i8** %28, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %43
  store i8 %48, i8* %50, align 1
  %51 = add nuw nsw i64 %43, 1
  %52 = icmp eq i64 %51, %22
  br i1 %52, label %53, label %42

53:                                               ; preds = %42, %46, %39
  %54 = phi i64 [ 0, %39 ], [ %22, %46 ], [ %43, %42 ]
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %36, align 8
  br label %56

56:                                               ; preds = %34, %4, %53
  %57 = phi i32 [ 0, %53 ], [ 0, %4 ], [ -12, %34 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_tkhd(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [3 x [3 x i32]], align 16
  %6 = alloca [3 x [3 x i32]], align 16
  %7 = alloca [64 x i8], align 16
  %8 = bitcast [3 x [3 x i32]]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 36, i1 false)
  %9 = bitcast [3 x [3 x i32]]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 36, i1 false)
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %10, align 8
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %378, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i64 0, i32 7
  %17 = load %struct.AVStream**, %struct.AVStream*** %16, align 8
  %18 = add i32 %13, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 %19
  %21 = load %struct.AVStream*, %struct.AVStream** %20, align 8
  %22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 3
  %23 = bitcast i8** %22 to %struct.MOVStreamContext**
  %24 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %23, align 8
  %25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %378

28:                                               ; preds = %15
  %29 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %30 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %31 = and i32 %30, 1
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = or i32 %33, %31
  store i32 %34, i32* %32, align 8
  %35 = icmp eq i32 %29, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %28
  %37 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %38 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %42

39:                                               ; preds = %28
  %40 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %41 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %42

42:                                               ; preds = %39, %36
  %43 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  store i32 %43, i32* %25, align 4
  %44 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br i1 %35, label %45, label %47

45:                                               ; preds = %42
  %46 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %49

47:                                               ; preds = %42
  %48 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %49

49:                                               ; preds = %47, %45
  %50 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %51 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %52 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %53 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %54 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %55 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %56 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %57 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 0, i64 0
  store i32 %56, i32* %57, align 16
  %58 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %59 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 0, i64 1
  store i32 %58, i32* %59, align 4
  %60 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %61 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 0, i64 2
  store i32 %60, i32* %61, align 8
  %62 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %63 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 0
  store i32 %62, i32* %63, align 4
  %64 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %65 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 1
  store i32 %64, i32* %65, align 4
  %66 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %67 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 2
  store i32 %66, i32* %67, align 4
  %68 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %69 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 0
  store i32 %68, i32* %69, align 8
  %70 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %71 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 1
  store i32 %70, i32* %71, align 4
  %72 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %73 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 2
  store i32 %72, i32* %73, align 8
  %74 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %75 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %76 = ashr i32 %74, 16
  %77 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %24, i64 0, i32 46
  store i32 %76, i32* %77, align 8
  %78 = ashr i32 %75, 16
  %79 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %24, i64 0, i32 47
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 0, i64 2
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 1, i64 2
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 50, i64 2, i64 2
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %81 to i64
  %99 = sext i32 %83 to i64
  %100 = sext i32 %85 to i64
  %101 = sext i32 %87 to i64
  %102 = sext i32 %89 to i64
  %103 = sext i32 %91 to i64
  %104 = sext i32 %93 to i64
  %105 = sext i32 %95 to i64
  %106 = sext i32 %97 to i64
  %107 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 0
  %108 = sext i32 %56 to i64
  %109 = mul nsw i64 %98, %108
  %110 = lshr i64 %109, 16
  %111 = trunc i64 %110 to i32
  %112 = sext i32 %58 to i64
  %113 = mul nsw i64 %99, %112
  %114 = lshr i64 %113, 16
  %115 = trunc i64 %114 to i32
  %116 = add i32 %111, %115
  %117 = sext i32 %60 to i64
  %118 = mul nsw i64 %100, %117
  %119 = lshr i64 %118, 30
  %120 = trunc i64 %119 to i32
  %121 = add i32 %116, %120
  store i32 %121, i32* %107, align 16
  %122 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 1
  %123 = load i32, i32* %122, align 4
  %124 = mul nsw i64 %101, %108
  %125 = lshr i64 %124, 16
  %126 = trunc i64 %125 to i32
  %127 = add i32 %123, %126
  %128 = mul nsw i64 %102, %112
  %129 = lshr i64 %128, 16
  %130 = trunc i64 %129 to i32
  %131 = add i32 %127, %130
  %132 = mul nsw i64 %103, %117
  %133 = lshr i64 %132, 30
  %134 = trunc i64 %133 to i32
  %135 = add i32 %131, %134
  store i32 %135, i32* %122, align 4
  %136 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 2
  %137 = load i32, i32* %136, align 8
  %138 = mul nsw i64 %104, %108
  %139 = lshr i64 %138, 16
  %140 = trunc i64 %139 to i32
  %141 = add i32 %137, %140
  %142 = mul nsw i64 %105, %112
  %143 = lshr i64 %142, 16
  %144 = trunc i64 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul nsw i64 %106, %117
  %147 = lshr i64 %146, 30
  %148 = trunc i64 %147 to i32
  %149 = add i32 %145, %148
  store i32 %149, i32* %136, align 8
  %150 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 0
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 0
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 1, i64 2
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 0
  %159 = sext i32 %153 to i64
  %160 = mul nsw i64 %98, %159
  %161 = lshr i64 %160, 16
  %162 = trunc i64 %161 to i32
  %163 = add i32 %151, %162
  %164 = sext i32 %155 to i64
  %165 = mul nsw i64 %99, %164
  %166 = lshr i64 %165, 16
  %167 = trunc i64 %166 to i32
  %168 = add i32 %163, %167
  %169 = sext i32 %157 to i64
  %170 = mul nsw i64 %100, %169
  %171 = lshr i64 %170, 30
  %172 = trunc i64 %171 to i32
  %173 = add i32 %168, %172
  store i32 %173, i32* %158, align 4
  %174 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 1
  %175 = load i32, i32* %174, align 4
  %176 = mul nsw i64 %101, %159
  %177 = lshr i64 %176, 16
  %178 = trunc i64 %177 to i32
  %179 = add i32 %175, %178
  %180 = mul nsw i64 %102, %164
  %181 = lshr i64 %180, 16
  %182 = trunc i64 %181 to i32
  %183 = add i32 %179, %182
  %184 = mul nsw i64 %103, %169
  %185 = lshr i64 %184, 30
  %186 = trunc i64 %185 to i32
  %187 = add i32 %183, %186
  store i32 %187, i32* %174, align 4
  %188 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 2
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i64 %104, %159
  %191 = lshr i64 %190, 16
  %192 = trunc i64 %191 to i32
  %193 = add i32 %189, %192
  %194 = mul nsw i64 %105, %164
  %195 = lshr i64 %194, 16
  %196 = trunc i64 %195 to i32
  %197 = add i32 %193, %196
  %198 = mul nsw i64 %106, %169
  %199 = lshr i64 %198, 30
  %200 = trunc i64 %199 to i32
  %201 = add i32 %197, %200
  store i32 %201, i32* %188, align 4
  %202 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 0
  %203 = load i32, i32* %202, align 8
  %204 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 0
  %205 = load i32, i32* %204, align 8
  %206 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 1
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %5, i64 0, i64 2, i64 2
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 0
  %211 = sext i32 %205 to i64
  %212 = mul nsw i64 %98, %211
  %213 = lshr i64 %212, 16
  %214 = trunc i64 %213 to i32
  %215 = add i32 %203, %214
  %216 = sext i32 %207 to i64
  %217 = mul nsw i64 %99, %216
  %218 = lshr i64 %217, 16
  %219 = trunc i64 %218 to i32
  %220 = add i32 %215, %219
  %221 = sext i32 %209 to i64
  %222 = mul nsw i64 %100, %221
  %223 = lshr i64 %222, 30
  %224 = trunc i64 %223 to i32
  %225 = add i32 %220, %224
  store i32 %225, i32* %210, align 8
  %226 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = mul nsw i64 %101, %211
  %229 = lshr i64 %228, 16
  %230 = trunc i64 %229 to i32
  %231 = add i32 %227, %230
  %232 = mul nsw i64 %102, %216
  %233 = lshr i64 %232, 16
  %234 = trunc i64 %233 to i32
  %235 = add i32 %231, %234
  %236 = mul nsw i64 %103, %221
  %237 = lshr i64 %236, 30
  %238 = trunc i64 %237 to i32
  %239 = add i32 %235, %238
  store i32 %239, i32* %226, align 4
  %240 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 2
  %241 = load i32, i32* %240, align 8
  %242 = mul nsw i64 %104, %211
  %243 = lshr i64 %242, 16
  %244 = trunc i64 %243 to i32
  %245 = add i32 %241, %244
  %246 = mul nsw i64 %105, %216
  %247 = lshr i64 %246, 16
  %248 = trunc i64 %247 to i32
  %249 = add i32 %245, %248
  %250 = mul nsw i64 %106, %221
  %251 = lshr i64 %250, 30
  %252 = trunc i64 %251 to i32
  %253 = add i32 %249, %252
  store i32 %253, i32* %240, align 8
  %254 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 0
  %255 = load i32, i32* %254, align 16
  %256 = icmp eq i32 %255, 65536
  br i1 %256, label %257, label %289

257:                                              ; preds = %49
  %258 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 1
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, 65536
  br i1 %260, label %261, label %289

261:                                              ; preds = %257
  %262 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 2
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 1073741824
  br i1 %264, label %265, label %289

265:                                              ; preds = %261
  %266 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 1
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %289

269:                                              ; preds = %265
  %270 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 2
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %289

273:                                              ; preds = %269
  %274 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 0
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %289

277:                                              ; preds = %273
  %278 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 2
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %289

281:                                              ; preds = %277
  %282 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 0
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %281
  %286 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 1
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %340, label %289

289:                                              ; preds = %285, %281, %277, %273, %269, %265, %261, %257, %49
  %290 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %24, i64 0, i32 64
  %291 = bitcast i32** %290 to i8*
  tail call void @av_freep(i8* %291) #11
  %292 = tail call noalias i8* @av_malloc(i64 36) #11
  %293 = bitcast i32** %290 to i8**
  store i8* %292, i8** %293, align 8
  %294 = icmp eq i8* %292, null
  br i1 %294, label %378, label %295

295:                                              ; preds = %289
  %296 = bitcast i8* %292 to i32*
  store i32 %255, i32* %296, align 4
  %297 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 1
  %298 = load i32, i32* %297, align 4
  %299 = load i32*, i32** %290, align 8
  %300 = getelementptr inbounds i32, i32* %299, i64 1
  store i32 %298, i32* %300, align 4
  %301 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 0, i64 2
  %302 = load i32, i32* %301, align 8
  %303 = load i32*, i32** %290, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 2
  store i32 %302, i32* %304, align 4
  %305 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 0
  %306 = load i32, i32* %305, align 4
  %307 = load i32*, i32** %290, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 3
  store i32 %306, i32* %308, align 4
  %309 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 1
  %310 = load i32, i32* %309, align 4
  %311 = load i32*, i32** %290, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 4
  store i32 %310, i32* %312, align 4
  %313 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 1, i64 2
  %314 = load i32, i32* %313, align 4
  %315 = load i32*, i32** %290, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 5
  store i32 %314, i32* %316, align 4
  %317 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 0
  %318 = load i32, i32* %317, align 8
  %319 = load i32*, i32** %290, align 8
  %320 = getelementptr inbounds i32, i32* %319, i64 6
  store i32 %318, i32* %320, align 4
  %321 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 1
  %322 = load i32, i32* %321, align 4
  %323 = load i32*, i32** %290, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 7
  store i32 %322, i32* %324, align 4
  %325 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* %6, i64 0, i64 2, i64 2
  %326 = load i32, i32* %325, align 8
  %327 = load i32*, i32** %290, align 8
  %328 = getelementptr inbounds i32, i32* %327, i64 8
  store i32 %326, i32* %328, align 4
  %329 = load i32*, i32** %290, align 8
  %330 = tail call nsz double @av_display_rotation_get(i32* %329) #11
  %331 = fcmp nsz uno double %330, 0.000000e+00
  br i1 %331, label %340, label %332

332:                                              ; preds = %295
  %333 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %333) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %333, i8 -86, i64 64, i1 false)
  %334 = fcmp nsz ogt double %330, 0.000000e+00
  %335 = select i1 %334, double 3.600000e+02, double -0.000000e+00
  %336 = fsub nsz double %335, %330
  %337 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %333, i64 64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0), double %336) #11
  %338 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 11
  %339 = call i32 @av_dict_set(%struct.AVDictionary** %338, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), i8* nonnull %333, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %333) #11
  br label %340

340:                                              ; preds = %332, %295, %285
  %341 = icmp ne i32 %74, 0
  %342 = icmp ne i32 %75, 0
  %343 = and i1 %341, %342
  br i1 %343, label %344, label %378

344:                                              ; preds = %340
  %345 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %24, i64 0, i32 64
  %346 = load i32*, i32** %345, align 8
  %347 = icmp eq i32* %346, null
  br i1 %347, label %378, label %348

348:                                              ; preds = %344
  %349 = load i32, i32* %346, align 4
  %350 = sitofp i32 %349 to double
  %351 = getelementptr inbounds i32, i32* %346, i64 3
  %352 = load i32, i32* %351, align 4
  %353 = sitofp i32 %352 to double
  %354 = call nsz double @hypot(double %350, double %353) #14
  %355 = getelementptr inbounds i32, i32* %346, i64 1
  %356 = load i32, i32* %355, align 4
  %357 = sitofp i32 %356 to double
  %358 = getelementptr inbounds i32, i32* %346, i64 4
  %359 = load i32, i32* %358, align 4
  %360 = sitofp i32 %359 to double
  %361 = call nsz double @hypot(double %357, double %360) #14
  %362 = fcmp nsz ogt double %354, 0.000000e+00
  br i1 %362, label %363, label %378

363:                                              ; preds = %348
  %364 = fcmp nsz ogt double %361, 0.000000e+00
  %365 = fcmp nsz olt double %354, 0x4170000000000000
  %366 = and i1 %365, %364
  %367 = fcmp nsz olt double %361, 0x4170000000000000
  %368 = and i1 %367, %366
  br i1 %368, label %369, label %378

369:                                              ; preds = %363
  %370 = fdiv nsz double %354, %361
  %371 = fadd nsz double %370, -1.000000e+00
  %372 = call nsz double @llvm.fabs.f64(double %371)
  %373 = fcmp nsz ogt double %372, 1.000000e-02
  br i1 %373, label %374, label %378

374:                                              ; preds = %369
  %375 = call i64 @av_d2q(double %370, i32 2147483647) #14
  %376 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 10
  %377 = bitcast %struct.AVRational* %376 to i64*
  store i64 %375, i64* %377, align 8
  br label %378

378:                                              ; preds = %348, %363, %369, %374, %289, %340, %344, %15, %4
  %379 = phi i32 [ 0, %4 ], [ -1094995529, %15 ], [ 0, %344 ], [ 0, %340 ], [ -12, %289 ], [ 0, %374 ], [ 0, %369 ], [ 0, %363 ], [ 0, %348 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %8) #11
  ret i32 %379
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_tfdt(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %struct.AVFormatContext* %6 to i8*
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 1
  %12 = load i32, i32* %11, align 4
  br i1 %9, label %29, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = zext i32 %8 to i64
  br label %19

17:                                               ; preds = %19
  %18 = icmp ult i64 %26, %16
  br i1 %18, label %19, label %29

19:                                               ; preds = %13, %17
  %20 = phi i64 [ 0, %13 ], [ %26, %17 ]
  %21 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %20
  %22 = load %struct.AVStream*, %struct.AVStream** %21, align 8
  %23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %12
  %26 = add nuw nsw i64 %20, 1
  br i1 %25, label %27, label %17

27:                                               ; preds = %19
  %28 = icmp eq %struct.AVStream* %22, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %17, %4, %27
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.140, i64 0, i64 0), i32 %12) #11
  br label %81

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i64 0, i32 3
  %32 = bitcast i8** %31 to %struct.MOVStreamContext**
  %33 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %32, align 8
  %34 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %33, i64 0, i32 40
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, 1
  %37 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  %40 = icmp eq i32 %35, -1
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %81

42:                                               ; preds = %30
  %43 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %44 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %45 = icmp eq i32 %43, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %51

48:                                               ; preds = %42
  %49 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %48, %46
  %52 = phi i64 [ %47, %46 ], [ %50, %48 ]
  %53 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %79, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %54, %58
  br i1 %59, label %60, label %79

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %62 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %61, align 8
  %63 = sext i32 %54 to i64
  %64 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %62, i64 %63, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %79

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %62, i64 %63, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = icmp slt i32 %65, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %62, i64 %63, i32 4
  %73 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %72, align 8
  %74 = sext i32 %65 to i64
  %75 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %73, i64 %74
  %76 = icmp eq %struct.MOVFragmentStreamInfo* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %73, i64 %74, i32 3
  store i64 %52, i64* %78, align 8
  br label %79

79:                                               ; preds = %60, %67, %51, %56, %71, %77
  %80 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %33, i64 0, i32 53
  store i64 %52, i64* %80, align 8
  br label %81

81:                                               ; preds = %30, %79, %29
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_tfhd(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %6 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %7 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %152, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 14
  %15 = load %struct.MOVTrackExt*, %struct.MOVTrackExt** %14, align 8
  %16 = zext i32 %11 to i64
  br label %19

17:                                               ; preds = %19
  %18 = icmp ult i64 %25, %16
  br i1 %18, label %19, label %29

19:                                               ; preds = %13, %17
  %20 = phi i64 [ 0, %13 ], [ %25, %17 ]
  %21 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %15, i64 %20
  %22 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %7
  %25 = add nuw nsw i64 %20, 1
  br i1 %24, label %26, label %17

26:                                               ; preds = %19
  %27 = and i64 %20, 4294967295
  %28 = icmp eq %struct.MOVTrackExt* %21, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %17, %9, %26
  %30 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %31 = bitcast %struct.AVFormatContext** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.141, i64 0, i64 0), i32 %7) #11
  br label %152

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 1
  store i32 %7, i32* %35, align 4
  %36 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %67, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %37, %41
  br i1 %42, label %43, label %67

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %45 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %44, align 8
  %46 = sext i32 %37 to i64
  %47 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %45, i64 %46, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %65

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %45, i64 %46, i32 4
  %52 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %51, align 8
  %53 = sext i32 %48 to i64
  br label %54

54:                                               ; preds = %62, %50
  %55 = phi i64 [ 0, %50 ], [ %63, %62 ]
  %56 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %52, i64 %55, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, %7
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = trunc i64 %55 to i32
  %61 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %45, i64 %46, i32 2
  store i32 %60, i32* %61, align 4
  br label %67

62:                                               ; preds = %54
  %63 = add nuw nsw i64 %55, 1
  %64 = icmp eq i64 %63, %53
  br i1 %64, label %65, label %54

65:                                               ; preds = %62, %43
  %66 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %45, i64 %46, i32 2
  store i32 -1, i32* %66, align 4
  br label %67

67:                                               ; preds = %33, %39, %59, %65
  %68 = and i32 %6, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %81

72:                                               ; preds = %67
  %73 = and i32 %6, 131072
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 3
  %77 = load i64, i64* %76, align 8
  br label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 4
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %75, %78, %70
  %82 = phi i64 [ %71, %70 ], [ %77, %75 ], [ %80, %78 ]
  %83 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 2
  store i64 %82, i64* %83, align 8
  %84 = and i32 %6, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %15, i64 %27, i32 1
  %90 = load i32, i32* %89, align 4
  br label %91

91:                                               ; preds = %88, %86
  %92 = phi i32 [ %87, %86 ], [ %90, %88 ]
  %93 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 5
  store i32 %92, i32* %93, align 8
  %94 = and i32 %6, 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %101

98:                                               ; preds = %91
  %99 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %15, i64 %27, i32 2
  %100 = load i32, i32* %99, align 4
  br label %101

101:                                              ; preds = %98, %96
  %102 = phi i32 [ %97, %96 ], [ %100, %98 ]
  %103 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 6
  store i32 %102, i32* %103, align 4
  %104 = and i32 %6, 16
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %111

108:                                              ; preds = %101
  %109 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %15, i64 %27, i32 3
  %110 = load i32, i32* %109, align 4
  br label %111

111:                                              ; preds = %108, %106
  %112 = phi i32 [ %107, %106 ], [ %110, %108 ]
  %113 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 7
  store i32 %112, i32* %113, align 8
  %114 = and i32 %6, 32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  %117 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %121

118:                                              ; preds = %111
  %119 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %15, i64 %27, i32 4
  %120 = load i32, i32* %119, align 4
  br label %121

121:                                              ; preds = %118, %116
  %122 = phi i32 [ %117, %116 ], [ %120, %118 ]
  %123 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 8
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %125 = bitcast %struct.AVFormatContext** %124 to i8**
  %126 = load i8*, i8** %125, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %126, i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i64 0, i64 0), i32 %122) #11
  %127 = load i32, i32* %36, align 8
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %152, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = icmp slt i32 %127, %131
  br i1 %132, label %133, label %152

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %135 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %134, align 8
  %136 = sext i32 %127 to i64
  %137 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %135, i64 %136, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %140, label %152

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %135, i64 %136, i32 3
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %138, %142
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %135, i64 %136, i32 4
  %146 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %145, align 8
  %147 = sext i32 %138 to i64
  %148 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %146, i64 %147
  %149 = icmp eq %struct.MOVFragmentStreamInfo* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %146, i64 %147, i32 4
  store i64 -9223372036854775808, i64* %151, align 8
  br label %152

152:                                              ; preds = %133, %140, %121, %129, %150, %144, %4, %29
  %153 = phi i32 [ 0, %29 ], [ -1094995529, %4 ], [ 0, %144 ], [ 0, %150 ], [ 0, %129 ], [ 0, %121 ], [ 0, %140 ], [ 0, %133 ]
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_trak(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [64 x i8], align 16
  %6 = alloca [64 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca [256 x i8], align 16
  %10 = alloca [256 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [1025 x i8], align 16
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64*, align 8
  %18 = alloca [17 x i64], align 16
  %19 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %21 = tail call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %20, %struct.AVCodec* null) #11
  %22 = icmp eq %struct.AVStream* %21, null
  br i1 %22, label %2104, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 1
  store i32 -1, i32* %24, align 4
  %25 = tail call noalias i8* @av_mallocz(i64 1496) #11
  %26 = icmp eq i8* %25, null
  br i1 %26, label %2104, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 3
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 19
  %30 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %30, i64 0, i32 0
  store i32 2, i32* %31, align 8
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds i8, i8* %25, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* %32, align 8
  %37 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 7
  store i32 %36, i32* %37, align 4
  %38 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3)
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %2104, label %40

40:                                               ; preds = %27
  store i32 -1, i32* %37, align 4
  %41 = getelementptr inbounds i8, i8* %25, i64 20
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %25, i64 32
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %80

50:                                               ; preds = %45
  %51 = getelementptr inbounds i8, i8* %25, i64 80
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %80, label %55

55:                                               ; preds = %50
  store i32 0, i32* %52, align 8
  %56 = getelementptr inbounds i8, i8* %25, i64 88
  tail call void @av_freep(i8* %56) #11
  %57 = load i32, i32* %42, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %40, %55
  %60 = phi i32 [ %57, %55 ], [ %43, %40 ]
  %61 = getelementptr inbounds i8, i8* %25, i64 32
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %25, i64 80
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, i8* %25, i64 140
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %94

75:                                               ; preds = %70
  %76 = getelementptr inbounds i8, i8* %25, i64 148
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %85, label %94

80:                                               ; preds = %45, %50, %55
  %81 = getelementptr inbounds i8, i8* %25, i64 148
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %75, %65, %59, %80
  %86 = bitcast %struct.AVFormatContext** %19 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = load i32, i32* %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.143, i64 0, i64 0), i32 %88) #11
  br label %2104

89:                                               ; preds = %80
  %90 = getelementptr inbounds i8, i8* %25, i64 80
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %109, label %94

94:                                               ; preds = %70, %75, %89
  %95 = phi i32 [ 0, %89 ], [ %60, %75 ], [ %60, %70 ]
  %96 = phi i32 [ %92, %89 ], [ %68, %75 ], [ %68, %70 ]
  %97 = getelementptr inbounds i8, i8* %25, i64 88
  %98 = bitcast i8* %97 to %struct.MOVStsc**
  %99 = load %struct.MOVStsc*, %struct.MOVStsc** %98, align 8
  %100 = add i32 %96, -1
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %99, i64 %101, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp ugt i32 %103, %95
  br i1 %104, label %105, label %109

105:                                              ; preds = %94
  %106 = bitcast %struct.AVFormatContext** %19 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = load i32, i32* %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.144, i64 0, i64 0), i32 %108) #11
  br label %2104

109:                                              ; preds = %89, %94
  %110 = getelementptr inbounds i8, i8* %25, i64 176
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %114, label %122

114:                                              ; preds = %109
  %115 = bitcast %struct.AVFormatContext** %19 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = load i32, i32* %35, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %116, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.147, i64 0, i64 0), i32 %117) #11
  %118 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp sgt i32 %119, 1
  %121 = select i1 %120, i32 %119, i32 1
  store i32 %121, i32* %111, align 8
  br label %122

122:                                              ; preds = %109, %114
  %123 = phi i32 [ %112, %109 ], [ %121, %114 ]
  tail call void @avpriv_set_pts_info(%struct.AVStream* nonnull %21, i32 64, i32 1, i32 %123) #11
  %124 = bitcast i8** %28 to %struct.MOVStreamContext**
  %125 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %124, align 8
  %126 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 12
  %127 = load %struct.MOVStts*, %struct.MOVStts** %126, align 8
  %128 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 10
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 20
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %216, label %133

133:                                              ; preds = %122
  %134 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 19
  %135 = load %struct.MOVElst*, %struct.MOVElst** %134, align 8
  %136 = zext i32 %131 to i64
  %137 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %135, i64 0, i32 1
  %138 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %135, i64 0, i32 0
  br label %139

139:                                              ; preds = %159, %133
  %140 = phi i64 [ 0, %133 ], [ %164, %159 ]
  %141 = phi i64 [ 0, %133 ], [ %163, %159 ]
  %142 = phi i64 [ 0, %133 ], [ %162, %159 ]
  %143 = phi i32 [ 0, %133 ], [ %161, %159 ]
  %144 = phi i32 [ 0, %133 ], [ %160, %159 ]
  %145 = icmp eq i64 %140, 0
  br i1 %145, label %146, label %151

146:                                              ; preds = %139
  %147 = load i64, i64* %137, align 8
  %148 = icmp eq i64 %147, -1
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i64, i64* %138, align 8
  br label %159

151:                                              ; preds = %146, %139
  %152 = zext i32 %144 to i64
  %153 = icmp eq i64 %140, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %135, i64 %140, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = icmp sgt i64 %156, -1
  br i1 %157, label %159, label %158

158:                                              ; preds = %154, %151
  br label %159

159:                                              ; preds = %158, %154, %149
  %160 = phi i32 [ 1, %149 ], [ %144, %158 ], [ %144, %154 ]
  %161 = phi i32 [ %143, %149 ], [ 1, %158 ], [ %143, %154 ]
  %162 = phi i64 [ %150, %149 ], [ %142, %158 ], [ %142, %154 ]
  %163 = phi i64 [ %141, %149 ], [ %141, %158 ], [ %156, %154 ]
  %164 = add nuw nsw i64 %140, 1
  %165 = icmp eq i64 %164, %136
  br i1 %165, label %166, label %139

166:                                              ; preds = %159
  %167 = icmp ne i32 %161, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %166
  %169 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 22
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %168
  %173 = bitcast %struct.AVFormatContext** %19 to i8**
  %174 = load i8*, i8** %173, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %174, i32 24, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.148, i64 0, i64 0)) #11
  br label %175

175:                                              ; preds = %172, %168, %166
  %176 = icmp eq i64 %162, 0
  %177 = or i64 %163, %162
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %200, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 2
  %181 = load i32, i32* %180, align 8
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %183, label %200

183:                                              ; preds = %179
  br i1 %176, label %190, label %184

184:                                              ; preds = %183
  %185 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 30
  %186 = load i32, i32* %185, align 8
  %187 = sext i32 %186 to i64
  %188 = sext i32 %181 to i64
  %189 = tail call i64 @av_rescale(i64 %162, i64 %187, i64 %188) #14
  br label %190

190:                                              ; preds = %184, %183
  %191 = phi i64 [ %189, %184 ], [ 0, %183 ]
  %192 = sub nsw i64 %163, %191
  %193 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 31
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 32
  store i64 %163, i64* %194, align 8
  %195 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 22
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  %198 = sub nsw i64 0, %192
  %199 = select i1 %197, i64 %198, i64 0
  br label %200

200:                                              ; preds = %190, %179, %175
  %201 = phi i64 [ 0, %179 ], [ 0, %175 ], [ %199, %190 ]
  br i1 %167, label %216, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 22
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %216

206:                                              ; preds = %202
  %207 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %208 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %207, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 86018
  %211 = icmp sgt i64 %163, 0
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %216

213:                                              ; preds = %206
  %214 = trunc i64 %163 to i32
  %215 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 54
  store i32 %214, i32* %215, align 8
  br label %216

216:                                              ; preds = %213, %206, %202, %200, %122
  %217 = phi i64 [ 0, %122 ], [ %201, %202 ], [ %201, %213 ], [ %201, %206 ], [ %201, %200 ]
  %218 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %219 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %218, i64 0, i32 0
  %220 = load i32, i32* %219, align 8
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %232

222:                                              ; preds = %216
  %223 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 6
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %232

226:                                              ; preds = %222
  %227 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 7
  %228 = load %struct.MOVStts*, %struct.MOVStts** %227, align 8
  %229 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %228, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %705, label %232

232:                                              ; preds = %226, %222, %216
  %233 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 55
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 56
  %238 = load %struct.MOVSbgp*, %struct.MOVSbgp** %237, align 8
  %239 = icmp ne %struct.MOVSbgp* %238, null
  br label %240

240:                                              ; preds = %236, %232
  %241 = phi i1 [ false, %232 ], [ %239, %236 ]
  %242 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 28
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 29
  %247 = load i32*, i32** %246, align 8
  %248 = load i32, i32* %247, align 4
  %249 = icmp sgt i32 %248, 0
  br i1 %249, label %260, label %250

250:                                              ; preds = %245, %240
  %251 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 17
  %252 = load i32, i32* %251, align 8
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %260, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 18
  %256 = load i32*, i32** %255, align 8
  %257 = load i32, i32* %256, align 4
  %258 = icmp ne i32 %257, 0
  %259 = zext i1 %258 to i32
  br label %260

260:                                              ; preds = %254, %250, %245
  %261 = phi i32 [ 1, %245 ], [ 0, %250 ], [ %259, %254 ]
  %262 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 48
  %263 = load i32, i32* %262, align 8
  %264 = sext i32 %263 to i64
  %265 = sub nsw i64 %217, %264
  %266 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 25
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %1763, label %269

269:                                              ; preds = %260
  %270 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 40
  %271 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %270, align 8
  %272 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %271, i64 0, i32 12
  %273 = load i32, i32* %272, align 8
  %274 = icmp ne i32 %273, 0
  %275 = icmp ugt i32 %267, 178956969
  %276 = or i1 %275, %274
  br i1 %276, label %1763, label %277

277:                                              ; preds = %269
  %278 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %271, i64 0, i32 11
  %279 = bitcast %struct.AVIndexEntry** %278 to i8*
  %280 = zext i32 %267 to i64
  %281 = tail call i32 @av_reallocp_array(i8* %279, i64 %280, i64 24) #11
  %282 = icmp slt i32 %281, 0
  %283 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %270, align 8
  %284 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %283, i64 0, i32 12
  br i1 %282, label %285, label %286

285:                                              ; preds = %277
  store i32 0, i32* %284, align 8
  br label %1763

286:                                              ; preds = %277
  %287 = load i32, i32* %284, align 8
  %288 = load i32, i32* %266, align 4
  %289 = add i32 %288, %287
  %290 = mul i32 %289, 24
  %291 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %283, i64 0, i32 13
  store i32 %290, i32* %291, align 4
  %292 = icmp eq %struct.MOVStts* %127, null
  br i1 %292, label %367, label %293

293:                                              ; preds = %286
  %294 = load i32, i32* %266, align 4
  %295 = icmp ugt i32 %294, 536870910
  br i1 %295, label %1763, label %296

296:                                              ; preds = %293
  store i32 0, i32* %128, align 8
  %297 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 11
  store i32 0, i32* %297, align 4
  %298 = zext i32 %294 to i64
  %299 = shl nuw nsw i64 %298, 3
  %300 = tail call i8* @av_fast_realloc(i8* null, i32* %297, i64 %299) #11
  %301 = bitcast %struct.MOVStts** %126 to i8**
  store i8* %300, i8** %301, align 8
  %302 = icmp eq i8* %300, null
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = bitcast %struct.MOVStts* %127 to i8*
  tail call void @av_free(i8* nonnull %304) #11
  br label %1763

305:                                              ; preds = %296
  %306 = load i32, i32* %297, align 4
  %307 = zext i32 %306 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %300, i8 0, i64 %307, i1 false) #11
  %308 = icmp eq i32 %129, 0
  br i1 %308, label %365, label %309

309:                                              ; preds = %305
  %310 = zext i32 %129 to i64
  br label %311

311:                                              ; preds = %362, %309
  %312 = phi i64 [ 0, %309 ], [ %363, %362 ]
  %313 = load i32, i32* %128, align 8
  %314 = load i32, i32* %266, align 4
  %315 = icmp ult i32 %313, %314
  br i1 %315, label %316, label %365

316:                                              ; preds = %311
  %317 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %127, i64 %312, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %362, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %127, i64 %312, i32 1
  br label %322

322:                                              ; preds = %320, %358
  %323 = phi i32 [ %355, %358 ], [ 0, %320 ]
  %324 = phi i32 [ %359, %358 ], [ %313, %320 ]
  %325 = load i32, i32* %321, align 4
  %326 = add nuw i32 %324, 1
  %327 = zext i32 %326 to i64
  %328 = shl nuw nsw i64 %327, 3
  %329 = load i32, i32* %297, align 4
  %330 = zext i32 %329 to i64
  %331 = icmp ugt i64 %328, %330
  br i1 %331, label %332, label %337

332:                                              ; preds = %322
  %333 = shl i32 %329, 1
  %334 = zext i32 %333 to i64
  %335 = icmp ugt i64 %328, %334
  %336 = select i1 %335, i64 %328, i64 %334
  br label %337

337:                                              ; preds = %332, %322
  %338 = phi i64 [ %328, %322 ], [ %336, %332 ]
  %339 = icmp ugt i32 %324, 536870909
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = load i8*, i8** %301, align 8
  %342 = tail call i8* @av_fast_realloc(i8* %341, i32* %297, i64 %338) #11
  %343 = bitcast i8* %342 to %struct.MOVStts*
  %344 = icmp eq i8* %342, null
  br i1 %344, label %354, label %345

345:                                              ; preds = %340
  store i8* %342, i8** %301, align 8
  %346 = load i32, i32* %128, align 4
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %343, i64 %347, i32 0
  store i32 1, i32* %348, align 4
  %349 = load i32, i32* %128, align 4
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %343, i64 %350, i32 1
  store i32 %325, i32* %351, align 4
  %352 = load i32, i32* %128, align 4
  %353 = add i32 %352, 1
  store i32 %353, i32* %128, align 4
  br label %354

354:                                              ; preds = %345, %340, %337
  %355 = add nuw i32 %323, 1
  %356 = load i32, i32* %317, align 4
  %357 = icmp ult i32 %355, %356
  br i1 %357, label %358, label %362

358:                                              ; preds = %354
  %359 = load i32, i32* %128, align 8
  %360 = load i32, i32* %266, align 4
  %361 = icmp ult i32 %359, %360
  br i1 %361, label %322, label %362

362:                                              ; preds = %358, %354, %316
  %363 = add nuw nsw i64 %312, 1
  %364 = icmp eq i64 %363, %310
  br i1 %364, label %365, label %311

365:                                              ; preds = %362, %311, %305
  %366 = bitcast %struct.MOVStts* %127 to i8*
  tail call void @av_free(i8* nonnull %366) #11
  br label %367

367:                                              ; preds = %365, %286
  %368 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 4
  %369 = load i32, i32* %368, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %691, label %371

371:                                              ; preds = %367
  %372 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 5
  %373 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 14
  %374 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 13
  %375 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 23
  %376 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 24
  %377 = bitcast %struct.AVFormatContext** %19 to i8**
  %378 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 27
  %379 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 29
  %380 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 17
  %381 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 18
  %382 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 56
  %383 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 26
  %384 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 40
  %385 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 7
  %386 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 6
  br label %405

387:                                              ; preds = %683
  %388 = trunc i64 %673 to i32
  br label %389

389:                                              ; preds = %479, %387
  %390 = phi i64 [ %420, %479 ], [ %669, %387 ]
  %391 = phi i32 [ %419, %479 ], [ %684, %387 ]
  %392 = phi i32 [ %417, %479 ], [ %543, %387 ]
  %393 = phi i32 [ %416, %479 ], [ %544, %387 ]
  %394 = phi i64 [ %415, %479 ], [ %636, %387 ]
  %395 = phi i32 [ %414, %479 ], [ %388, %387 ]
  %396 = phi i32 [ %413, %479 ], [ %685, %387 ]
  %397 = phi i32 [ %412, %479 ], [ %671, %387 ]
  %398 = phi i32 [ %411, %479 ], [ %564, %387 ]
  %399 = phi i32 [ %410, %479 ], [ %565, %387 ]
  %400 = phi i64 [ %409, %479 ], [ %669, %387 ]
  %401 = phi i64 [ %408, %479 ], [ %670, %387 ]
  %402 = load i32, i32* %368, align 4
  %403 = zext i32 %402 to i64
  %404 = icmp ult i64 %421, %403
  br i1 %404, label %405, label %691

405:                                              ; preds = %389, %371
  %406 = phi i64 [ 0, %371 ], [ %421, %389 ]
  %407 = phi i32 [ %369, %371 ], [ %402, %389 ]
  %408 = phi i64 [ 0, %371 ], [ %401, %389 ]
  %409 = phi i64 [ %265, %371 ], [ %400, %389 ]
  %410 = phi i32 [ 0, %371 ], [ %399, %389 ]
  %411 = phi i32 [ 0, %371 ], [ %398, %389 ]
  %412 = phi i32 [ 0, %371 ], [ %397, %389 ]
  %413 = phi i32 [ 0, %371 ], [ %396, %389 ]
  %414 = phi i32 [ 0, %371 ], [ %395, %389 ]
  %415 = phi i64 [ 0, %371 ], [ %394, %389 ]
  %416 = phi i32 [ 0, %371 ], [ %393, %389 ]
  %417 = phi i32 [ 0, %371 ], [ %392, %389 ]
  %418 = phi i64 [ 0, %371 ], [ %437, %389 ]
  %419 = phi i32 [ 0, %371 ], [ %391, %389 ]
  %420 = phi i64 [ %265, %371 ], [ %390, %389 ]
  %421 = add nuw nsw i64 %406, 1
  %422 = zext i32 %407 to i64
  %423 = icmp ult i64 %421, %422
  %424 = load i64*, i64** %372, align 8
  br i1 %423, label %425, label %428

425:                                              ; preds = %405
  %426 = getelementptr inbounds i64, i64* %424, i64 %421
  %427 = load i64, i64* %426, align 8
  br label %428

428:                                              ; preds = %425, %405
  %429 = phi i64 [ %427, %425 ], [ 9223372036854775807, %405 ]
  %430 = getelementptr inbounds i64, i64* %424, i64 %406
  %431 = load i64, i64* %430, align 8
  %432 = load i32, i32* %374, align 8
  %433 = add i32 %432, -1
  %434 = and i64 %418, 4294967295
  %435 = zext i32 %433 to i64
  br label %436

436:                                              ; preds = %439, %428
  %437 = phi i64 [ %441, %439 ], [ %434, %428 ]
  %438 = icmp ult i64 %437, %435
  br i1 %438, label %439, label %447

439:                                              ; preds = %436
  %440 = load %struct.MOVStsc*, %struct.MOVStsc** %373, align 8
  %441 = add nuw nsw i64 %437, 1
  %442 = and i64 %441, 4294967295
  %443 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %440, i64 %442, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = zext i32 %444 to i64
  %446 = icmp eq i64 %421, %445
  br i1 %446, label %436, label %447

447:                                              ; preds = %439, %436
  %448 = icmp sgt i64 %429, %431
  br i1 %448, label %449, label %468

449:                                              ; preds = %447
  %450 = load i32, i32* %375, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %468, label %452

452:                                              ; preds = %449
  %453 = load i32, i32* %376, align 8
  %454 = icmp ult i32 %450, %453
  br i1 %454, label %455, label %470

455:                                              ; preds = %452
  %456 = load %struct.MOVStsc*, %struct.MOVStsc** %373, align 8
  %457 = and i64 %437, 4294967295
  %458 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %456, i64 %457, i32 1
  %459 = load i32, i32* %458, align 4
  %460 = sext i32 %459 to i64
  %461 = zext i32 %453 to i64
  %462 = mul nsw i64 %460, %461
  %463 = sub nsw i64 %429, %431
  %464 = icmp sgt i64 %462, %463
  br i1 %464, label %465, label %468

465:                                              ; preds = %455
  %466 = load i8*, i8** %377, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %466, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.149, i64 0, i64 0), i32 %453) #11
  %467 = load i32, i32* %375, align 4
  store i32 %467, i32* %376, align 8
  br label %470

468:                                              ; preds = %455, %449, %447
  %469 = load i32, i32* %376, align 8
  br label %470

470:                                              ; preds = %468, %465, %452
  %471 = phi i32 [ %469, %468 ], [ %467, %465 ], [ %453, %452 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %479, label %473

473:                                              ; preds = %470
  %474 = load i32, i32* %375, align 4
  %475 = icmp ult i32 %471, %474
  br i1 %475, label %476, label %479

476:                                              ; preds = %473
  %477 = load i8*, i8** %377, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %477, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.150, i64 0, i64 0), i32 %471) #11
  %478 = load i32, i32* %375, align 4
  store i32 %478, i32* %376, align 8
  br label %479

479:                                              ; preds = %476, %473, %470
  %480 = load %struct.MOVStsc*, %struct.MOVStsc** %373, align 8
  %481 = and i64 %437, 4294967295
  %482 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %480, i64 %481, i32 1
  %483 = load i32, i32* %482, align 4
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %389, label %485

485:                                              ; preds = %479
  %486 = zext i32 %414 to i64
  %487 = trunc i64 %406 to i32
  br label %488

488:                                              ; preds = %683, %485
  %489 = phi i64 [ %486, %485 ], [ %673, %683 ]
  %490 = phi %struct.MOVStsc* [ %480, %485 ], [ %687, %683 ]
  %491 = phi i64 [ %408, %485 ], [ %670, %683 ]
  %492 = phi i64 [ %409, %485 ], [ %669, %683 ]
  %493 = phi i32 [ %410, %485 ], [ %565, %683 ]
  %494 = phi i32 [ %411, %485 ], [ %564, %683 ]
  %495 = phi i32 [ %412, %485 ], [ %671, %683 ]
  %496 = phi i32 [ %413, %485 ], [ %685, %683 ]
  %497 = phi i64 [ %415, %485 ], [ %636, %683 ]
  %498 = phi i32 [ 0, %485 ], [ %686, %683 ]
  %499 = phi i32 [ %416, %485 ], [ %544, %683 ]
  %500 = phi i32 [ %417, %485 ], [ %543, %683 ]
  %501 = phi i32 [ %419, %485 ], [ %684, %683 ]
  %502 = phi i64 [ %420, %485 ], [ %669, %683 ]
  %503 = phi i64 [ %431, %485 ], [ %635, %683 ]
  %504 = load i32, i32* %266, align 4
  %505 = zext i32 %504 to i64
  %506 = icmp ult i64 %489, %505
  br i1 %506, label %509, label %507

507:                                              ; preds = %488
  %508 = load i8*, i8** %377, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %508, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.151, i64 0, i64 0)) #11
  br label %1763

509:                                              ; preds = %488
  %510 = load i32, i32* %378, align 8
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %527

512:                                              ; preds = %509
  %513 = load i32, i32* %242, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %523, label %515

515:                                              ; preds = %512
  %516 = trunc i64 %489 to i32
  %517 = add i32 %261, %516
  %518 = load i32*, i32** %379, align 8
  %519 = zext i32 %500 to i64
  %520 = getelementptr inbounds i32, i32* %518, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = icmp eq i32 %517, %521
  br i1 %522, label %523, label %527

523:                                              ; preds = %515, %512
  %524 = add i32 %500, 1
  %525 = icmp ult i32 %524, %513
  %526 = select i1 %525, i32 %524, i32 %500
  br label %542

527:                                              ; preds = %515, %509
  %528 = load i32, i32* %380, align 8
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %542, label %530

530:                                              ; preds = %527
  %531 = trunc i64 %489 to i32
  %532 = add i32 %261, %531
  %533 = load i32*, i32** %381, align 8
  %534 = zext i32 %499 to i64
  %535 = getelementptr inbounds i32, i32* %533, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = icmp eq i32 %532, %536
  br i1 %537, label %538, label %542

538:                                              ; preds = %530
  %539 = add i32 %499, 1
  %540 = icmp ult i32 %539, %528
  %541 = select i1 %540, i32 %539, i32 %499
  br label %542

542:                                              ; preds = %538, %530, %527, %523
  %543 = phi i32 [ %500, %530 ], [ %500, %527 ], [ %526, %523 ], [ %500, %538 ]
  %544 = phi i32 [ %499, %530 ], [ %499, %527 ], [ %499, %523 ], [ %541, %538 ]
  %545 = phi i32 [ 0, %530 ], [ 0, %527 ], [ 1, %523 ], [ 1, %538 ]
  br i1 %241, label %546, label %563

546:                                              ; preds = %542
  %547 = load i32, i32* %233, align 4
  %548 = icmp ult i32 %494, %547
  br i1 %548, label %549, label %563

549:                                              ; preds = %546
  %550 = load %struct.MOVSbgp*, %struct.MOVSbgp** %382, align 8
  %551 = zext i32 %494 to i64
  %552 = getelementptr inbounds %struct.MOVSbgp, %struct.MOVSbgp* %550, i64 %551, i32 1
  %553 = load i32, i32* %552, align 4
  %554 = icmp eq i32 %553, 0
  %555 = select i1 %554, i32 %545, i32 1
  %556 = add i32 %493, 1
  %557 = getelementptr inbounds %struct.MOVSbgp, %struct.MOVSbgp* %550, i64 %551, i32 0
  %558 = load i32, i32* %557, align 4
  %559 = icmp eq i32 %556, %558
  %560 = zext i1 %559 to i32
  %561 = add nuw i32 %494, %560
  %562 = select i1 %559, i32 0, i32 %556
  br label %563

563:                                              ; preds = %549, %546, %542
  %564 = phi i32 [ %494, %546 ], [ %494, %542 ], [ %561, %549 ]
  %565 = phi i32 [ %493, %546 ], [ %493, %542 ], [ %562, %549 ]
  %566 = phi i32 [ %545, %546 ], [ %545, %542 ], [ %555, %549 ]
  br i1 %511, label %580, label %567

567:                                              ; preds = %563
  %568 = load i32, i32* %380, align 8
  %569 = icmp ne i32 %568, 0
  %570 = or i1 %241, %569
  br i1 %570, label %580, label %571

571:                                              ; preds = %567
  %572 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %573 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %572, i64 0, i32 0
  %574 = load i32, i32* %573, align 8
  %575 = icmp eq i32 %574, 1
  %576 = or i32 %498, %487
  %577 = icmp eq i32 %576, 0
  %578 = or i1 %577, %575
  %579 = select i1 %578, i32 1, i32 %566
  br label %580

580:                                              ; preds = %571, %567, %563
  %581 = phi i32 [ %566, %567 ], [ %566, %563 ], [ %579, %571 ]
  %582 = icmp ne i32 %581, 0
  %583 = select i1 %582, i32 0, i32 %495
  %584 = load i32, i32* %376, align 8
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %590

586:                                              ; preds = %580
  %587 = load i32*, i32** %383, align 8
  %588 = getelementptr inbounds i32, i32* %587, i64 %489
  %589 = load i32, i32* %588, align 4
  br label %590

590:                                              ; preds = %586, %580
  %591 = phi i32 [ %589, %586 ], [ %584, %580 ]
  %592 = load i32, i32* %384, align 4
  %593 = icmp eq i32 %592, -1
  br i1 %593, label %599, label %594

594:                                              ; preds = %590
  %595 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %490, i64 %481, i32 2
  %596 = load i32, i32* %595, align 4
  %597 = add nsw i32 %596, -1
  %598 = icmp eq i32 %597, %592
  br i1 %598, label %599, label %633

599:                                              ; preds = %594, %590
  %600 = icmp ugt i32 %591, 1073741823
  br i1 %600, label %631, label %601

601:                                              ; preds = %599
  %602 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %270, align 8
  %603 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %602, i64 0, i32 11
  %604 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %603, align 8
  %605 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %602, i64 0, i32 12
  %606 = load i32, i32* %605, align 8
  %607 = add nsw i32 %606, 1
  store i32 %607, i32* %605, align 8
  %608 = sext i32 %606 to i64
  %609 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %604, i64 %608, i32 0
  store i64 %503, i64* %609, align 8
  %610 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %604, i64 %608, i32 1
  store i64 %502, i64* %610, align 8
  %611 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %604, i64 %608, i32 2
  %612 = shl i32 %591, 2
  %613 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %604, i64 %608, i32 3
  store i32 %583, i32* %613, align 4
  %614 = zext i1 %582 to i32
  %615 = or i32 %612, %614
  store i32 %615, i32* %611, align 8
  %616 = load i8*, i8** %377, align 8
  %617 = load i32, i32* %32, align 8
  %618 = trunc i64 %489 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %616, i32 56, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.153, i64 0, i64 0), i32 %617, i32 %618, i64 %503, i64 %502, i32 %591, i32 %583, i32 %581) #11
  %619 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %620 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %619, i64 0, i32 0
  %621 = load i32, i32* %620, align 8
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %633

623:                                              ; preds = %601
  %624 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %270, align 8
  %625 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %624, i64 0, i32 12
  %626 = load i32, i32* %625, align 8
  %627 = icmp slt i32 %626, 100
  br i1 %627, label %628, label %633

628:                                              ; preds = %623
  %629 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %630 = tail call i32 @ff_rfps_add_frame(%struct.AVFormatContext* %629, %struct.AVStream* %21, i64 %502) #11
  br label %633

631:                                              ; preds = %599
  %632 = load i8*, i8** %377, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %632, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i64 0, i64 0), i32 %591) #11
  br label %1763

633:                                              ; preds = %628, %623, %601, %594
  %634 = zext i32 %591 to i64
  %635 = add nsw i64 %503, %634
  %636 = add i64 %497, %634
  %637 = load %struct.MOVStts*, %struct.MOVStts** %385, align 8
  %638 = zext i32 %501 to i64
  %639 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %637, i64 %638, i32 1
  %640 = load i32, i32* %639, align 4
  %641 = icmp slt i32 %640, 0
  br i1 %641, label %642, label %654

642:                                              ; preds = %633
  %643 = load i8*, i8** %377, align 8
  %644 = load i32, i32* %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %643, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.154, i64 0, i64 0), i32 %640, i32 %501, i32 %644) #11
  %645 = load %struct.MOVStts*, %struct.MOVStts** %385, align 8
  %646 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %645, i64 %638, i32 1
  %647 = load i32, i32* %646, align 4
  %648 = add nsw i32 %647, -1
  %649 = sext i32 %648 to i64
  %650 = add nsw i64 %491, %649
  store i32 1, i32* %646, align 4
  %651 = load %struct.MOVStts*, %struct.MOVStts** %385, align 8
  %652 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %651, i64 %638, i32 1
  %653 = load i32, i32* %652, align 4
  br label %654

654:                                              ; preds = %642, %633
  %655 = phi i32 [ %653, %642 ], [ %640, %633 ]
  %656 = phi %struct.MOVStts* [ %651, %642 ], [ %637, %633 ]
  %657 = phi i64 [ %650, %642 ], [ %491, %633 ]
  %658 = sext i32 %655 to i64
  %659 = add nsw i64 %502, %658
  %660 = icmp eq i64 %657, 0
  %661 = add i64 %659, %657
  %662 = icmp sgt i64 %661, %492
  %663 = or i1 %660, %662
  br i1 %663, label %668, label %664

664:                                              ; preds = %654
  %665 = xor i64 %492, -1
  %666 = add i64 %661, %665
  %667 = add nsw i64 %492, 1
  br label %668

668:                                              ; preds = %664, %654
  %669 = phi i64 [ %667, %664 ], [ %661, %654 ]
  %670 = phi i64 [ %666, %664 ], [ 0, %654 ]
  %671 = add i32 %583, 1
  %672 = add i32 %496, 1
  %673 = add nuw nsw i64 %489, 1
  %674 = add i32 %501, 1
  %675 = load i32, i32* %386, align 8
  %676 = icmp ult i32 %674, %675
  br i1 %676, label %677, label %683

677:                                              ; preds = %668
  %678 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %656, i64 %638, i32 0
  %679 = load i32, i32* %678, align 4
  %680 = icmp eq i32 %672, %679
  %681 = select i1 %680, i32 %674, i32 %501
  %682 = select i1 %680, i32 0, i32 %672
  br label %683

683:                                              ; preds = %677, %668
  %684 = phi i32 [ %681, %677 ], [ %501, %668 ]
  %685 = phi i32 [ %682, %677 ], [ %672, %668 ]
  %686 = add nuw i32 %498, 1
  %687 = load %struct.MOVStsc*, %struct.MOVStsc** %373, align 8
  %688 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %687, i64 %481, i32 1
  %689 = load i32, i32* %688, align 4
  %690 = icmp ult i32 %686, %689
  br i1 %690, label %488, label %387

691:                                              ; preds = %389, %367
  %692 = phi i64 [ 0, %367 ], [ %394, %389 ]
  %693 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 6
  %694 = load i64, i64* %693, align 8
  %695 = icmp sgt i64 %694, 0
  br i1 %695, label %696, label %908

696:                                              ; preds = %691
  %697 = shl i64 %692, 3
  %698 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 30
  %699 = load i32, i32* %698, align 8
  %700 = sext i32 %699 to i64
  %701 = mul i64 %697, %700
  %702 = udiv i64 %701, %694
  %703 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %704 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %703, i64 0, i32 6
  store i64 %702, i64* %704, align 8
  br label %908

705:                                              ; preds = %226
  %706 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 4
  %707 = load i32, i32* %706, align 4
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %1763, label %709

709:                                              ; preds = %705
  %710 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 13
  %711 = load i32, i32* %710, align 8
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %774, label %713

713:                                              ; preds = %709
  %714 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 14
  %715 = load %struct.MOVStsc*, %struct.MOVStsc** %714, align 8
  %716 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 38
  %717 = add i32 %711, -1
  %718 = zext i32 %717 to i64
  %719 = add i32 %707, 1
  %720 = zext i32 %711 to i64
  %721 = load i32, i32* %716, align 4
  %722 = icmp eq i32 %721, 0
  %723 = icmp ugt i32 %721, 159
  %724 = icmp ugt i32 %721, 1
  %725 = trunc i32 %721 to i16
  br label %726

726:                                              ; preds = %768, %713
  %727 = phi i64 [ 0, %713 ], [ %769, %768 ]
  %728 = phi i32 [ 0, %713 ], [ %772, %768 ]
  %729 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %715, i64 %727, i32 1
  %730 = load i32, i32* %729, align 4
  %731 = icmp eq i64 %727, %718
  br i1 %731, label %736, label %732

732:                                              ; preds = %726
  br i1 %722, label %747, label %733

733:                                              ; preds = %732
  %734 = urem i32 %730, %721
  %735 = icmp eq i32 %734, 0
  br i1 %735, label %736, label %765

736:                                              ; preds = %733, %726
  br i1 %723, label %737, label %739

737:                                              ; preds = %736
  %738 = udiv i32 %730, %721
  br label %750

739:                                              ; preds = %736
  br i1 %724, label %740, label %747

740:                                              ; preds = %739
  %741 = urem i16 1024, %725
  %742 = zext i16 %741 to i32
  %743 = sub nuw nsw i32 1024, %742
  %744 = add i32 %730, -1
  %745 = add i32 %744, %743
  %746 = udiv i32 %745, %743
  br label %750

747:                                              ; preds = %739, %732
  %748 = add i32 %730, 1023
  %749 = lshr i32 %748, 10
  br label %750

750:                                              ; preds = %747, %740, %737
  %751 = phi i32 [ %738, %737 ], [ %746, %740 ], [ %749, %747 ]
  %752 = icmp ult i64 %727, %718
  br i1 %752, label %753, label %760

753:                                              ; preds = %750
  %754 = add nuw nsw i64 %727, 1
  %755 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %715, i64 %754, i32 0
  %756 = load i32, i32* %755, align 4
  %757 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %715, i64 %727, i32 0
  %758 = load i32, i32* %757, align 4
  %759 = sub nsw i32 %756, %758
  br label %768

760:                                              ; preds = %750
  %761 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %715, i64 %727, i32 0
  %762 = load i32, i32* %761, align 4
  %763 = sub i32 %719, %762
  %764 = add nuw nsw i64 %727, 1
  br label %768

765:                                              ; preds = %733
  %766 = bitcast %struct.AVFormatContext** %19 to i8**
  %767 = load i8*, i8** %766, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %767, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i64 0, i64 0)) #11
  br label %1763

768:                                              ; preds = %760, %753
  %769 = phi i64 [ %754, %753 ], [ %764, %760 ]
  %770 = phi i32 [ %759, %753 ], [ %763, %760 ]
  %771 = mul i32 %770, %751
  %772 = add i32 %771, %728
  %773 = icmp ult i64 %769, %720
  br i1 %773, label %726, label %774

774:                                              ; preds = %768, %709
  %775 = phi i32 [ 0, %709 ], [ %772, %768 ]
  %776 = bitcast %struct.AVFormatContext** %19 to i8**
  %777 = load i8*, i8** %776, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %777, i32 56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.156, i64 0, i64 0), i32 %775) #11
  %778 = zext i32 %775 to i64
  %779 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 40
  %780 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %779, align 8
  %781 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %780, i64 0, i32 12
  %782 = load i32, i32* %781, align 8
  %783 = sext i32 %782 to i64
  %784 = sub nsw i64 178956970, %783
  %785 = icmp ugt i64 %784, %778
  br i1 %785, label %786, label %1763

786:                                              ; preds = %774
  %787 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %780, i64 0, i32 11
  %788 = bitcast %struct.AVIndexEntry** %787 to i8*
  %789 = add i32 %782, %775
  %790 = zext i32 %789 to i64
  %791 = tail call i32 @av_reallocp_array(i8* %788, i64 %790, i64 24) #11
  %792 = icmp slt i32 %791, 0
  %793 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %779, align 8
  %794 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %793, i64 0, i32 12
  br i1 %792, label %795, label %796

795:                                              ; preds = %786
  store i32 0, i32* %794, align 8
  br label %1763

796:                                              ; preds = %786
  %797 = load i32, i32* %794, align 8
  %798 = add i32 %797, %775
  %799 = mul i32 %798, 24
  %800 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %793, i64 0, i32 13
  store i32 %799, i32* %800, align 4
  %801 = load i32, i32* %706, align 4
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %908, label %803

803:                                              ; preds = %796
  %804 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 5
  %805 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 14
  %806 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 38
  %807 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 23
  %808 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 37
  br label %809

809:                                              ; preds = %902, %803
  %810 = phi i32 [ %801, %803 ], [ %903, %902 ]
  %811 = phi i64 [ 0, %803 ], [ %905, %902 ]
  %812 = phi i32 [ 0, %803 ], [ %834, %902 ]
  %813 = phi i64 [ %217, %803 ], [ %904, %902 ]
  %814 = load i64*, i64** %804, align 8
  %815 = getelementptr inbounds i64, i64* %814, i64 %811
  %816 = load i64, i64* %815, align 8
  %817 = load i32, i32* %710, align 8
  %818 = add i32 %817, -1
  %819 = icmp ugt i32 %818, %812
  br i1 %819, label %822, label %820

820:                                              ; preds = %809
  %821 = load %struct.MOVStsc*, %struct.MOVStsc** %805, align 8
  br label %832

822:                                              ; preds = %809
  %823 = add nuw nsw i64 %811, 1
  %824 = load %struct.MOVStsc*, %struct.MOVStsc** %805, align 8
  %825 = add nuw i32 %812, 1
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %824, i64 %826, i32 0
  %828 = load i32, i32* %827, align 4
  %829 = zext i32 %828 to i64
  %830 = icmp eq i64 %823, %829
  %831 = select i1 %830, i32 %825, i32 %812
  br label %832

832:                                              ; preds = %822, %820
  %833 = phi %struct.MOVStsc* [ %821, %820 ], [ %824, %822 ]
  %834 = phi i32 [ %812, %820 ], [ %831, %822 ]
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %833, i64 %835, i32 1
  %837 = load i32, i32* %836, align 4
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %902, label %839

839:                                              ; preds = %832
  %840 = trunc i64 %811 to i32
  br label %841

841:                                              ; preds = %881, %839
  %842 = phi i32 [ %898, %881 ], [ %837, %839 ]
  %843 = phi i64 [ %897, %881 ], [ %813, %839 ]
  %844 = phi i64 [ %895, %881 ], [ %816, %839 ]
  %845 = load i32, i32* %806, align 4
  %846 = icmp ugt i32 %845, 1
  br i1 %846, label %847, label %863

847:                                              ; preds = %841
  %848 = load i32, i32* %808, align 8
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %852

850:                                              ; preds = %847
  %851 = load i8*, i8** %776, align 8
  tail call void (i8*, i8*, ...) @avpriv_request_sample(i8* %851, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.157, i64 0, i64 0), i32 %845) #11
  br label %1763

852:                                              ; preds = %847
  %853 = icmp ugt i32 %845, 159
  br i1 %853, label %868, label %854

854:                                              ; preds = %852
  %855 = trunc i32 %845 to i16
  %856 = urem i16 1024, %855
  %857 = zext i16 %856 to i32
  %858 = sub nuw nsw i32 1024, %857
  %859 = icmp ugt i32 %858, %842
  %860 = select i1 %859, i32 %842, i32 %858
  %861 = udiv i32 %860, %845
  %862 = mul i32 %861, %848
  br label %868

863:                                              ; preds = %841
  %864 = icmp ult i32 %842, 1024
  %865 = select i1 %864, i32 %842, i32 1024
  %866 = load i32, i32* %807, align 4
  %867 = mul i32 %866, %865
  br label %868

868:                                              ; preds = %863, %854, %852
  %869 = phi i32 [ %862, %854 ], [ %867, %863 ], [ %848, %852 ]
  %870 = phi i32 [ %860, %854 ], [ %865, %863 ], [ %845, %852 ]
  %871 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %779, align 8
  %872 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %871, i64 0, i32 12
  %873 = load i32, i32* %872, align 8
  %874 = icmp ult i32 %873, %775
  br i1 %874, label %877, label %875

875:                                              ; preds = %868
  %876 = load i8*, i8** %776, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %876, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.158, i64 0, i64 0), i32 %775) #11
  br label %1763

877:                                              ; preds = %868
  %878 = icmp ugt i32 %869, 1073741823
  br i1 %878, label %879, label %881

879:                                              ; preds = %877
  %880 = load i8*, i8** %776, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %880, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i64 0, i64 0), i32 %869) #11
  br label %1763

881:                                              ; preds = %877
  %882 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %871, i64 0, i32 11
  %883 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %882, align 8
  %884 = add nuw nsw i32 %873, 1
  store i32 %884, i32* %872, align 8
  %885 = sext i32 %873 to i64
  %886 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %883, i64 %885, i32 0
  store i64 %844, i64* %886, align 8
  %887 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %883, i64 %885, i32 1
  store i64 %843, i64* %887, align 8
  %888 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %883, i64 %885, i32 2
  %889 = shl i32 %869, 2
  %890 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %883, i64 %885, i32 3
  store i32 0, i32* %890, align 4
  %891 = or i32 %889, 1
  store i32 %891, i32* %888, align 8
  %892 = load i8*, i8** %776, align 8
  %893 = load i32, i32* %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %892, i32 56, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.159, i64 0, i64 0), i32 %893, i32 %840, i64 %844, i64 %843, i32 %869, i32 %870) #11
  %894 = zext i32 %869 to i64
  %895 = add nsw i64 %844, %894
  %896 = zext i32 %870 to i64
  %897 = add nsw i64 %843, %896
  %898 = sub i32 %842, %870
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %841

900:                                              ; preds = %881
  %901 = load i32, i32* %706, align 4
  br label %902

902:                                              ; preds = %900, %832
  %903 = phi i32 [ %810, %832 ], [ %901, %900 ]
  %904 = phi i64 [ %813, %832 ], [ %897, %900 ]
  %905 = add nuw nsw i64 %811, 1
  %906 = zext i32 %903 to i64
  %907 = icmp ult i64 %905, %906
  br i1 %907, label %809, label %908

908:                                              ; preds = %902, %796, %696, %691
  %909 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 21
  %910 = load i32, i32* %909, align 8
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %1613

912:                                              ; preds = %908
  %913 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 22
  %914 = load i32, i32* %913, align 4
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %1613, label %916

916:                                              ; preds = %912
  %917 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %124, align 8
  %918 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 40
  %919 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %920 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %919, i64 0, i32 11
  %921 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %920, align 8
  %922 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %919, i64 0, i32 12
  %923 = load i32, i32* %922, align 8
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %921, i64 %924
  %926 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 12
  %927 = load %struct.MOVStts*, %struct.MOVStts** %926, align 8
  %928 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %928) #11
  store i64 0, i64* %14, align 8
  %929 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %929) #11
  store i64 0, i64* %15, align 8
  %930 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 10
  %931 = load i32, i32* %930, align 8
  %932 = zext i32 %931 to i64
  %933 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %933) #11
  store i64 -6148914691236517206, i64* %16, align 8
  %934 = bitcast i64** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %934) #11
  store i64* null, i64** %17, align 8
  %935 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 19
  %936 = load %struct.MOVElst*, %struct.MOVElst** %935, align 8
  %937 = icmp eq %struct.MOVElst* %936, null
  br i1 %937, label %1612, label %938

938:                                              ; preds = %916
  %939 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 20
  %940 = load i32, i32* %939, align 8
  %941 = icmp eq i32 %940, 0
  %942 = icmp slt i32 %923, 1
  %943 = or i1 %942, %941
  br i1 %943, label %1612, label %944

944:                                              ; preds = %938
  %945 = add i32 %940, 1
  %946 = zext i32 %945 to i64
  %947 = shl nuw nsw i64 %946, 4
  %948 = tail call noalias i8* @av_malloc(i64 %947) #11
  %949 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 35
  %950 = bitcast %struct.MOVIndexRange** %949 to i8**
  store i8* %948, i8** %950, align 8
  %951 = icmp eq i8* %948, null
  br i1 %951, label %952, label %955

952:                                              ; preds = %944
  %953 = bitcast %struct.AVFormatContext** %19 to i8**
  %954 = load i8*, i8** %953, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %954, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i64 0, i64 0)) #11
  br label %1612

955:                                              ; preds = %944
  %956 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 36
  %957 = bitcast %struct.MOVIndexRange** %956 to i8**
  store i8* %948, i8** %957, align 8
  %958 = getelementptr inbounds i8, i8* %948, i64 -16
  %959 = bitcast i8* %958 to %struct.MOVIndexRange*
  %960 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %961 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %960, i64 0, i32 11
  store %struct.AVIndexEntry* null, %struct.AVIndexEntry** %961, align 8
  %962 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %963 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %962, i64 0, i32 13
  store i32 0, i32* %963, align 4
  %964 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %965 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %964, i64 0, i32 12
  store i32 0, i32* %965, align 8
  %966 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 21
  store i32 0, i32* %966, align 4
  %967 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 22
  store i32 0, i32* %967, align 8
  %968 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 11
  %969 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 32
  %970 = bitcast i32* %930 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %970, i8 0, i64 16, i1 false) #11
  store i64 -1, i64* %969, align 8
  %971 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 48
  %972 = load i32, i32* %971, align 8
  %973 = icmp sgt i32 %972, 0
  br i1 %973, label %974, label %979

974:                                              ; preds = %955
  %975 = sext i32 %972 to i64
  %976 = sub nsw i64 0, %975
  %977 = bitcast %struct.AVFormatContext** %19 to i8**
  %978 = load i8*, i8** %977, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %978, i32 48, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.161, i64 0, i64 0), i32 %972) #11
  br label %979

979:                                              ; preds = %974, %955
  %980 = phi i64 [ %976, %974 ], [ 0, %955 ]
  %981 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 2
  %982 = load i32, i32* %939, align 8
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %1557, label %984

984:                                              ; preds = %979
  %985 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 30
  %986 = bitcast %struct.AVFormatContext** %19 to i8**
  %987 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 54
  %988 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %921, i64 0, i32 1
  %989 = icmp ne %struct.MOVStts* %927, null
  %990 = bitcast %struct.MOVStts** %926 to i8**
  %991 = bitcast i64** %17 to i8**
  br label %992

992:                                              ; preds = %1026, %984
  %993 = phi %struct.MOVIndexRange* [ %959, %984 ], [ %1000, %1026 ]
  %994 = phi i32 [ -1, %984 ], [ %1001, %1026 ]
  %995 = phi i64 [ 0, %984 ], [ %1021, %1026 ]
  %996 = phi i64 [ 0, %984 ], [ %1027, %1026 ]
  %997 = phi i64 [ %980, %984 ], [ %1022, %1026 ]
  br label %998

998:                                              ; preds = %1552, %992
  %999 = phi i32 [ 0, %992 ], [ 1, %1552 ]
  %1000 = phi %struct.MOVIndexRange* [ %993, %992 ], [ %1553, %1552 ]
  %1001 = phi i32 [ %994, %992 ], [ %1054, %1552 ]
  %1002 = phi i64 [ %995, %992 ], [ %1021, %1552 ]
  %1003 = phi i64 [ %997, %992 ], [ %1022, %1552 ]
  %1004 = load i32, i32* %981, align 8
  %1005 = load %struct.MOVElst*, %struct.MOVElst** %935, align 8
  %1006 = and i64 %1002, 4294967295
  %1007 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %1005, i64 %1006, i32 1
  %1008 = load i64, i64* %1007, align 8
  %1009 = icmp eq i32 %1004, 0
  br i1 %1009, label %1010, label %1012

1010:                                             ; preds = %998
  %1011 = load i8*, i8** %986, align 8
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %1011, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.172, i64 0, i64 0)) #11
  br label %1557

1012:                                             ; preds = %998
  %1013 = sext i32 %1004 to i64
  %1014 = getelementptr inbounds %struct.MOVElst, %struct.MOVElst* %1005, i64 %1006, i32 0
  %1015 = load i64, i64* %1014, align 8
  %1016 = load i32, i32* %985, align 8
  %1017 = sext i32 %1016 to i64
  %1018 = call i64 @av_rescale(i64 %1015, i64 %1017, i64 %1013) #14
  %1019 = load i8*, i8** %986, align 8
  %1020 = load i32, i32* %32, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1019, i32 48, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.162, i64 0, i64 0), i32 %1020, i64 %1002, i64 %1008, i64 %1018) #11
  %1021 = add nsw i64 %1002, 1
  %1022 = add nsw i64 %1018, %1003
  %1023 = icmp eq i32 %999, 0
  %1024 = icmp eq i64 %1008, -1
  %1025 = and i1 %1023, %1024
  br i1 %1025, label %1026, label %1031

1026:                                             ; preds = %1012
  %1027 = add nsw i64 %1018, %996
  %1028 = trunc i64 %1021 to i32
  %1029 = load i32, i32* %939, align 8
  %1030 = icmp eq i32 %1029, %1028
  br i1 %1030, label %1557, label %992

1031:                                             ; preds = %1012
  %1032 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1033 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1032, i64 0, i32 0
  %1034 = load i32, i32* %1033, align 8
  %1035 = icmp eq i32 %1034, 1
  br i1 %1035, label %1036, label %1053

1036:                                             ; preds = %1031
  %1037 = icmp sgt i32 %1001, -1
  br i1 %1037, label %1045, label %1038

1038:                                             ; preds = %1036
  store i32 0, i32* %987, align 8
  %1039 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1040 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1039, i64 0, i32 18
  store i32 0, i32* %1040, align 8
  %1041 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1042 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1041, i64 0, i32 0
  %1043 = load i32, i32* %1042, align 8
  %1044 = icmp eq i32 %1043, 1
  br i1 %1044, label %1045, label %1053

1045:                                             ; preds = %1038, %1036
  %1046 = phi i32 [ 1, %1038 ], [ 0, %1036 ]
  %1047 = load i32, i32* %985, align 8
  %1048 = sext i32 %1047 to i64
  %1049 = sub nsw i64 %1008, %1048
  %1050 = load i64, i64* %988, align 8
  %1051 = icmp sgt i64 %1049, %1050
  %1052 = select i1 %1051, i64 %1049, i64 %1050
  br label %1053

1053:                                             ; preds = %1045, %1038, %1031
  %1054 = phi i32 [ %1046, %1045 ], [ 1, %1038 ], [ %1001, %1031 ]
  %1055 = phi i64 [ %1052, %1045 ], [ %1008, %1038 ], [ %1008, %1031 ]
  %1056 = call fastcc i32 @find_prev_closest_index(%struct.AVStream* %21, %struct.AVIndexEntry* %921, i32 %923, %struct.MOVStts* %927, i64 %932, i64 %1055, i32 0, i64* nonnull %16, i64* nonnull %14, i64* nonnull %15) #11
  %1057 = icmp slt i32 %1056, 0
  br i1 %1057, label %1058, label %1066

1058:                                             ; preds = %1053
  %1059 = load i8*, i8** %986, align 8
  %1060 = load i32, i32* %32, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1059, i32 24, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.163, i64 0, i64 0), i32 %1060, i64 %1021, i64 %1055) #11
  %1061 = call fastcc i32 @find_prev_closest_index(%struct.AVStream* %21, %struct.AVIndexEntry* %921, i32 %923, %struct.MOVStts* %927, i64 %932, i64 %1055, i32 4, i64* nonnull %16, i64* nonnull %14, i64* nonnull %15) #11
  %1062 = icmp slt i32 %1061, 0
  br i1 %1062, label %1063, label %1066

1063:                                             ; preds = %1058
  %1064 = load i8*, i8** %986, align 8
  %1065 = load i32, i32* %32, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1064, i32 24, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.164, i64 0, i64 0), i32 %1065, i64 %1021, i64 %1055) #11
  store i64 0, i64* %16, align 8
  store i64 0, i64* %14, align 8
  store i64 0, i64* %15, align 8
  br label %1066

1066:                                             ; preds = %1063, %1058, %1053
  %1067 = load i64, i64* %16, align 8
  %1068 = icmp slt i64 %1067, %924
  br i1 %1068, label %1069, label %1552

1069:                                             ; preds = %1066
  %1070 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %921, i64 %1067
  %1071 = load i64, i64* %15, align 8
  %1072 = add nsw i64 %1018, %1008
  %1073 = icmp sgt i32 %1054, 0
  br label %1074

1074:                                             ; preds = %1550, %1069
  %1075 = phi i32 [ 0, %1069 ], [ %1551, %1550 ]
  %1076 = phi %struct.MOVIndexRange* [ %1000, %1069 ], [ %1477, %1550 ]
  %1077 = phi i32 [ 0, %1069 ], [ %1415, %1550 ]
  %1078 = phi i64 [ 0, %1069 ], [ %1414, %1550 ]
  %1079 = phi i64 [ %1071, %1069 ], [ %1169, %1550 ]
  %1080 = phi i64 [ %1003, %1069 ], [ %1482, %1550 ]
  %1081 = phi %struct.AVIndexEntry* [ %1070, %1069 ], [ %1082, %1550 ]
  %1082 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 1
  %1083 = icmp ult %struct.AVIndexEntry* %1082, %925
  br i1 %1083, label %1087, label %1084

1084:                                             ; preds = %1074
  %1085 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 0, i32 1
  %1086 = load i64, i64* %1085, align 8
  br label %1093

1087:                                             ; preds = %1074
  %1088 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 1, i32 1
  %1089 = load i64, i64* %1088, align 8
  %1090 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 0, i32 1
  %1091 = load i64, i64* %1090, align 8
  %1092 = sub nsw i64 %1089, %1091
  br label %1093

1093:                                             ; preds = %1087, %1084
  %1094 = phi i64 [ %1091, %1087 ], [ %1086, %1084 ]
  %1095 = phi i64 [ %1092, %1087 ], [ %1018, %1084 ]
  %1096 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 0, i32 2
  %1097 = load i32, i32* %1096, align 8
  %1098 = shl i32 %1097, 30
  %1099 = ashr exact i32 %1098, 30
  %1100 = load i32, i32* %971, align 8
  %1101 = sext i32 %1100 to i64
  %1102 = add nsw i64 %1094, %1101
  br i1 %989, label %1103, label %1168

1103:                                             ; preds = %1093
  %1104 = load i64, i64* %14, align 8
  %1105 = icmp slt i64 %1104, %932
  br i1 %1105, label %1106, label %1168

1106:                                             ; preds = %1103
  %1107 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1104, i32 1
  %1108 = load i32, i32* %1107, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = load i8*, i8** %986, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1110, i32 48, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.165, i64 0, i64 0), i64 %1102, i64 %1109, i64 %1104, i64 %932) #11
  %1111 = add nsw i64 %1102, %1109
  %1112 = load i64, i64* %15, align 8
  %1113 = add nsw i64 %1112, 1
  store i64 %1113, i64* %15, align 8
  %1114 = load i64, i64* %14, align 8
  %1115 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1114, i32 0
  %1116 = load i32, i32* %1115, align 4
  %1117 = zext i32 %1116 to i64
  %1118 = icmp eq i64 %1113, %1117
  br i1 %1118, label %1119, label %1168

1119:                                             ; preds = %1106
  %1120 = trunc i64 %1079 to i32
  %1121 = sub i32 %1116, %1120
  %1122 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1114, i32 1
  %1123 = load i32, i32* %1122, align 4
  %1124 = load i32, i32* %930, align 4
  %1125 = add i32 %1124, 1
  %1126 = zext i32 %1125 to i64
  %1127 = shl nuw nsw i64 %1126, 3
  %1128 = load i32, i32* %968, align 4
  %1129 = zext i32 %1128 to i64
  %1130 = icmp ugt i64 %1127, %1129
  br i1 %1130, label %1131, label %1136

1131:                                             ; preds = %1119
  %1132 = shl i32 %1128, 1
  %1133 = zext i32 %1132 to i64
  %1134 = icmp ugt i64 %1127, %1133
  %1135 = select i1 %1134, i64 %1127, i64 %1133
  br label %1136

1136:                                             ; preds = %1131, %1119
  %1137 = phi i64 [ %1127, %1119 ], [ %1135, %1131 ]
  %1138 = icmp ugt i32 %1124, 536870909
  br i1 %1138, label %1161, label %1139

1139:                                             ; preds = %1136
  %1140 = load i8*, i8** %990, align 8
  %1141 = call i8* @av_fast_realloc(i8* %1140, i32* %968, i64 %1137) #11
  %1142 = bitcast i8* %1141 to %struct.MOVStts*
  %1143 = icmp eq i8* %1141, null
  br i1 %1143, label %1144, label %1150

1144:                                             ; preds = %1139
  %1145 = load i64, i64* %14, align 8
  %1146 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1145, i32 0
  %1147 = load i32, i32* %1146, align 4
  %1148 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1145, i32 1
  %1149 = load i32, i32* %1148, align 4
  br label %1161

1150:                                             ; preds = %1139
  store i8* %1141, i8** %990, align 8
  %1151 = load i32, i32* %930, align 4
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1142, i64 %1152, i32 0
  store i32 %1121, i32* %1153, align 4
  %1154 = load i32, i32* %930, align 4
  %1155 = zext i32 %1154 to i64
  %1156 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1142, i64 %1155, i32 1
  store i32 %1123, i32* %1156, align 4
  %1157 = load i32, i32* %930, align 4
  %1158 = add i32 %1157, 1
  store i32 %1158, i32* %930, align 4
  %1159 = load i64, i64* %14, align 8
  %1160 = add nsw i64 %1159, 1
  store i64 %1160, i64* %14, align 8
  store i64 0, i64* %15, align 8
  br label %1168

1161:                                             ; preds = %1136, %1144
  %1162 = phi i32 [ %1147, %1144 ], [ %1116, %1136 ]
  %1163 = phi i32 [ %1149, %1144 ], [ %1123, %1136 ]
  %1164 = phi i64 [ %1145, %1144 ], [ %1114, %1136 ]
  %1165 = zext i32 %1162 to i64
  %1166 = load i8*, i8** %986, align 8
  %1167 = sub nsw i64 %1165, %1079
  call void (i8*, i32, i8*, ...) @av_log(i8* %1166, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.166, i64 0, i64 0), i64 %1164, i64 %1167, i32 %1163) #11
  br label %1552

1168:                                             ; preds = %1150, %1106, %1103, %1093
  %1169 = phi i64 [ 0, %1150 ], [ %1079, %1106 ], [ %1079, %1103 ], [ %1079, %1093 ]
  %1170 = phi i64 [ %1111, %1150 ], [ %1111, %1106 ], [ %1102, %1103 ], [ %1102, %1093 ]
  %1171 = phi i64 [ %1109, %1150 ], [ %1109, %1106 ], [ 0, %1103 ], [ 0, %1093 ]
  %1172 = icmp sle i64 %1008, %1170
  %1173 = icmp slt i64 %1170, %1072
  %1174 = and i1 %1173, %1172
  br i1 %1174, label %1318, label %1175

1175:                                             ; preds = %1168
  %1176 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1177 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1176, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 8
  %1179 = icmp eq i32 %1178, 1
  br i1 %1179, label %1180, label %1285

1180:                                             ; preds = %1175
  %1181 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1176, i64 0, i32 1
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp eq i32 %1182, 86021
  %1184 = or i1 %1172, %1183
  br i1 %1184, label %1285, label %1185

1185:                                             ; preds = %1180
  %1186 = add nsw i64 %1170, %1095
  %1187 = icmp sgt i64 %1186, %1008
  %1188 = and i1 %1073, %1187
  br i1 %1188, label %1189, label %1285

1189:                                             ; preds = %1185
  %1190 = sub nsw i64 %1008, %1170
  %1191 = trunc i64 %1190 to i32
  %1192 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1193 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1192, i64 0, i32 18
  %1194 = load i32, i32* %1193, align 8
  %1195 = add nsw i32 %1194, %1191
  store i32 %1195, i32* %1193, align 8
  %1196 = shl i64 %1190, 32
  %1197 = ashr exact i64 %1196, 32
  %1198 = sub nsw i64 %1080, %1197
  %1199 = icmp eq i64 %1078, 0
  br i1 %1199, label %1200, label %1282

1200:                                             ; preds = %1189
  %1201 = load i64*, i64** %17, align 8
  %1202 = icmp eq i64* %1201, null
  br i1 %1202, label %1282, label %1203

1203:                                             ; preds = %1200
  %1204 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1205 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1204, i64 0, i32 12
  %1206 = load i32, i32* %1205, align 8
  %1207 = icmp sgt i32 %1206, -1
  br i1 %1207, label %1208, label %1229

1208:                                             ; preds = %1203
  %1209 = icmp sgt i32 %1077, 0
  br i1 %1209, label %1210, label %1281

1210:                                             ; preds = %1208
  %1211 = add nsw i32 %1077, -1
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds i64, i64* %1201, i64 %1212
  %1214 = load i64, i64* %1213, align 8
  %1215 = sub nsw i64 %1198, %1214
  %1216 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1204, i64 0, i32 11
  %1217 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1216, align 8
  %1218 = add nsw i32 %1206, -1
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1217, i64 %1219, i32 1
  store i64 %1215, i64* %1220, align 8
  %1221 = icmp eq i32 %1077, 1
  br i1 %1221, label %1281, label %1222

1222:                                             ; preds = %1210
  %1223 = zext i32 %1077 to i64
  %1224 = add nsw i64 %1223, -1
  %1225 = and i64 %1224, 1
  %1226 = icmp eq i32 %1077, 2
  br i1 %1226, label %1263, label %1227

1227:                                             ; preds = %1222
  %1228 = sub nsw i64 %1224, %1225
  br label %1230

1229:                                             ; preds = %1203
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 3354) #11
  call void @abort() #12
  unreachable

1230:                                             ; preds = %1230, %1227
  %1231 = phi i64 [ 1, %1227 ], [ %1260, %1230 ]
  %1232 = phi i64 [ %1215, %1227 ], [ %1254, %1230 ]
  %1233 = phi i64 [ %1228, %1227 ], [ %1261, %1230 ]
  %1234 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1235 = trunc i64 %1231 to i32
  %1236 = xor i32 %1235, -1
  %1237 = add i32 %1077, %1236
  %1238 = sext i32 %1237 to i64
  %1239 = getelementptr inbounds i64, i64* %1201, i64 %1238
  %1240 = load i64, i64* %1239, align 8
  %1241 = sub nsw i64 %1232, %1240
  %1242 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1234, i64 0, i32 11
  %1243 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1242, align 8
  %1244 = add i32 %1206, %1236
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1243, i64 %1245, i32 1
  store i64 %1241, i64* %1246, align 8
  %1247 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1248 = trunc i64 %1231 to i32
  %1249 = sub i32 -2, %1248
  %1250 = add i32 %1077, %1249
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds i64, i64* %1201, i64 %1251
  %1253 = load i64, i64* %1252, align 8
  %1254 = sub nsw i64 %1241, %1253
  %1255 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1247, i64 0, i32 11
  %1256 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1255, align 8
  %1257 = add i32 %1206, %1249
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1256, i64 %1258, i32 1
  store i64 %1254, i64* %1259, align 8
  %1260 = add nuw nsw i64 %1231, 2
  %1261 = add i64 %1233, -2
  %1262 = icmp eq i64 %1261, 0
  br i1 %1262, label %1263, label %1230

1263:                                             ; preds = %1230, %1222
  %1264 = phi i64 [ 1, %1222 ], [ %1260, %1230 ]
  %1265 = phi i64 [ %1215, %1222 ], [ %1254, %1230 ]
  %1266 = icmp eq i64 %1225, 0
  br i1 %1266, label %1281, label %1267

1267:                                             ; preds = %1263
  %1268 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1269 = trunc i64 %1264 to i32
  %1270 = xor i32 %1269, -1
  %1271 = add i32 %1077, %1270
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds i64, i64* %1201, i64 %1272
  %1274 = load i64, i64* %1273, align 8
  %1275 = sub nsw i64 %1265, %1274
  %1276 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1268, i64 0, i32 11
  %1277 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1276, align 8
  %1278 = add i32 %1206, %1270
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1277, i64 %1279, i32 1
  store i64 %1275, i64* %1280, align 8
  br label %1281

1281:                                             ; preds = %1267, %1263, %1210, %1208
  call void @av_freep(i8* nonnull %934) #11
  br label %1282

1282:                                             ; preds = %1281, %1200, %1189
  %1283 = phi i64 [ 1, %1281 ], [ 1, %1200 ], [ %1078, %1189 ]
  %1284 = load i8*, i8** %986, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1284, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.167, i64 0, i64 0), i32 %1191, i64 %1170) #11
  br label %1411

1285:                                             ; preds = %1185, %1180, %1175
  %1286 = or i32 %1099, 2
  %1287 = load i8*, i8** %986, align 8
  %1288 = load i64, i64* %16, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1287, i32 48, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i64 0, i64 0), i64 %1170, i64 %1288) #11
  %1289 = icmp eq i64 %1078, 0
  br i1 %1289, label %1290, label %1411

1290:                                             ; preds = %1285
  %1291 = add nsw i32 %1077, 1
  %1292 = load i8*, i8** %991, align 8
  %1293 = sext i32 %1291 to i64
  %1294 = shl nsw i64 %1293, 3
  %1295 = call i8* @av_realloc(i8* %1292, i64 %1294) #11
  store i8* %1295, i8** %991, align 8
  %1296 = icmp eq i8* %1295, null
  br i1 %1296, label %1297, label %1299

1297:                                             ; preds = %1290
  %1298 = load i8*, i8** %986, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1298, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.169, i64 0, i64 0)) #11
  br label %1552

1299:                                             ; preds = %1290
  %1300 = bitcast i8* %1295 to i64*
  %1301 = sext i32 %1077 to i64
  %1302 = getelementptr inbounds i64, i64* %1300, i64 %1301
  store i64 %1095, i64* %1302, align 8
  %1303 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1304 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1303, i64 0, i32 0
  %1305 = load i32, i32* %1304, align 8
  %1306 = icmp eq i32 %1305, 1
  %1307 = and i1 %1073, %1306
  br i1 %1307, label %1308, label %1411

1308:                                             ; preds = %1299
  %1309 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1303, i64 0, i32 1
  %1310 = load i32, i32* %1309, align 4
  %1311 = icmp eq i32 %1310, 86021
  br i1 %1311, label %1411, label %1312

1312:                                             ; preds = %1308
  %1313 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1314 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1313, i64 0, i32 18
  %1315 = load i32, i32* %1314, align 8
  %1316 = trunc i64 %1095 to i32
  %1317 = add i32 %1315, %1316
  store i32 %1317, i32* %1314, align 8
  br label %1411

1318:                                             ; preds = %1168
  %1319 = load i64, i64* %969, align 8
  %1320 = icmp slt i64 %1319, 0
  %1321 = add nsw i64 %1171, %1080
  %1322 = load i32, i32* %971, align 8
  %1323 = sext i32 %1322 to i64
  %1324 = add nsw i64 %1321, %1323
  %1325 = icmp sgt i64 %1319, %1324
  %1326 = or i1 %1320, %1325
  %1327 = select i1 %1326, i64 %1324, i64 %1319
  store i64 %1327, i64* %969, align 8
  %1328 = icmp eq i64 %1078, 0
  br i1 %1328, label %1329, label %1411

1329:                                             ; preds = %1318
  %1330 = load i64*, i64** %17, align 8
  %1331 = icmp eq i64* %1330, null
  br i1 %1331, label %1411, label %1332

1332:                                             ; preds = %1329
  %1333 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1334 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1333, i64 0, i32 12
  %1335 = load i32, i32* %1334, align 8
  %1336 = icmp sgt i32 %1335, -1
  br i1 %1336, label %1337, label %1358

1337:                                             ; preds = %1332
  %1338 = icmp sgt i32 %1077, 0
  br i1 %1338, label %1339, label %1410

1339:                                             ; preds = %1337
  %1340 = add nsw i32 %1077, -1
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds i64, i64* %1330, i64 %1341
  %1343 = load i64, i64* %1342, align 8
  %1344 = sub nsw i64 %1080, %1343
  %1345 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1333, i64 0, i32 11
  %1346 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1345, align 8
  %1347 = add nsw i32 %1335, -1
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1346, i64 %1348, i32 1
  store i64 %1344, i64* %1349, align 8
  %1350 = icmp eq i32 %1077, 1
  br i1 %1350, label %1410, label %1351

1351:                                             ; preds = %1339
  %1352 = zext i32 %1077 to i64
  %1353 = add nsw i64 %1352, -1
  %1354 = and i64 %1353, 1
  %1355 = icmp eq i32 %1077, 2
  br i1 %1355, label %1392, label %1356

1356:                                             ; preds = %1351
  %1357 = sub nsw i64 %1353, %1354
  br label %1359

1358:                                             ; preds = %1332
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 3354) #11
  call void @abort() #12
  unreachable

1359:                                             ; preds = %1359, %1356
  %1360 = phi i64 [ 1, %1356 ], [ %1389, %1359 ]
  %1361 = phi i64 [ %1344, %1356 ], [ %1383, %1359 ]
  %1362 = phi i64 [ %1357, %1356 ], [ %1390, %1359 ]
  %1363 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1364 = trunc i64 %1360 to i32
  %1365 = xor i32 %1364, -1
  %1366 = add i32 %1077, %1365
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds i64, i64* %1330, i64 %1367
  %1369 = load i64, i64* %1368, align 8
  %1370 = sub nsw i64 %1361, %1369
  %1371 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1363, i64 0, i32 11
  %1372 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1371, align 8
  %1373 = add i32 %1335, %1365
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1372, i64 %1374, i32 1
  store i64 %1370, i64* %1375, align 8
  %1376 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1377 = trunc i64 %1360 to i32
  %1378 = sub i32 -2, %1377
  %1379 = add i32 %1077, %1378
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds i64, i64* %1330, i64 %1380
  %1382 = load i64, i64* %1381, align 8
  %1383 = sub nsw i64 %1370, %1382
  %1384 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1376, i64 0, i32 11
  %1385 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1384, align 8
  %1386 = add i32 %1335, %1378
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1385, i64 %1387, i32 1
  store i64 %1383, i64* %1388, align 8
  %1389 = add nuw nsw i64 %1360, 2
  %1390 = add i64 %1362, -2
  %1391 = icmp eq i64 %1390, 0
  br i1 %1391, label %1392, label %1359

1392:                                             ; preds = %1359, %1351
  %1393 = phi i64 [ 1, %1351 ], [ %1389, %1359 ]
  %1394 = phi i64 [ %1344, %1351 ], [ %1383, %1359 ]
  %1395 = icmp eq i64 %1354, 0
  br i1 %1395, label %1410, label %1396

1396:                                             ; preds = %1392
  %1397 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1398 = trunc i64 %1393 to i32
  %1399 = xor i32 %1398, -1
  %1400 = add i32 %1077, %1399
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i64, i64* %1330, i64 %1401
  %1403 = load i64, i64* %1402, align 8
  %1404 = sub nsw i64 %1394, %1403
  %1405 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1397, i64 0, i32 11
  %1406 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1405, align 8
  %1407 = add i32 %1335, %1399
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1406, i64 %1408, i32 1
  store i64 %1404, i64* %1409, align 8
  br label %1410

1410:                                             ; preds = %1396, %1392, %1339, %1337
  call void @av_freep(i8* nonnull %934) #11
  br label %1411

1411:                                             ; preds = %1410, %1329, %1318, %1312, %1308, %1299, %1285, %1282
  %1412 = phi i64 [ %1198, %1282 ], [ %1080, %1312 ], [ %1080, %1308 ], [ %1080, %1299 ], [ %1080, %1285 ], [ %1080, %1410 ], [ %1080, %1329 ], [ %1080, %1318 ]
  %1413 = phi i32 [ %1099, %1282 ], [ %1286, %1312 ], [ %1286, %1308 ], [ %1286, %1299 ], [ %1286, %1285 ], [ %1099, %1410 ], [ %1099, %1329 ], [ %1099, %1318 ]
  %1414 = phi i64 [ %1283, %1282 ], [ 0, %1312 ], [ 0, %1308 ], [ 0, %1299 ], [ %1078, %1285 ], [ 1, %1410 ], [ 1, %1329 ], [ %1078, %1318 ]
  %1415 = phi i32 [ %1077, %1282 ], [ %1291, %1312 ], [ %1291, %1308 ], [ %1291, %1299 ], [ %1077, %1285 ], [ %1077, %1410 ], [ %1077, %1329 ], [ %1077, %1318 ]
  %1416 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 0, i32 0
  %1417 = load i64, i64* %1416, align 8
  %1418 = load i32, i32* %1096, align 8
  %1419 = and i32 %1418, -4
  %1420 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1081, i64 0, i32 3
  %1421 = load i32, i32* %1420, align 4
  %1422 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1423 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1422, i64 0, i32 12
  %1424 = load i32, i32* %1423, align 8
  %1425 = add i32 %1424, 1
  %1426 = sext i32 %1425 to i64
  %1427 = mul nsw i64 %1426, 24
  %1428 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1422, i64 0, i32 13
  %1429 = load i32, i32* %1428, align 4
  %1430 = zext i32 %1429 to i64
  %1431 = icmp ugt i64 %1427, %1430
  br i1 %1431, label %1432, label %1437

1432:                                             ; preds = %1411
  %1433 = shl i32 %1429, 1
  %1434 = zext i32 %1433 to i64
  %1435 = icmp ugt i64 %1427, %1434
  %1436 = select i1 %1435, i64 %1427, i64 %1434
  br label %1437

1437:                                             ; preds = %1432, %1411
  %1438 = phi i64 [ %1427, %1411 ], [ %1436, %1432 ]
  %1439 = icmp ugt i32 %1425, 178956969
  br i1 %1439, label %1463, label %1440

1440:                                             ; preds = %1437
  %1441 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1422, i64 0, i32 11
  %1442 = bitcast %struct.AVIndexEntry** %1441 to i8**
  %1443 = load i8*, i8** %1442, align 8
  %1444 = call i8* @av_fast_realloc(i8* %1443, i32* %1428, i64 %1438) #11
  %1445 = icmp eq i8* %1444, null
  br i1 %1445, label %1463, label %1446

1446:                                             ; preds = %1440
  %1447 = bitcast i8* %1444 to %struct.AVIndexEntry*
  %1448 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1449 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1448, i64 0, i32 11
  %1450 = bitcast %struct.AVIndexEntry** %1449 to i8**
  store i8* %1444, i8** %1450, align 8
  %1451 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1452 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1451, i64 0, i32 12
  %1453 = load i32, i32* %1452, align 8
  %1454 = add nsw i32 %1453, 1
  store i32 %1454, i32* %1452, align 8
  %1455 = sext i32 %1453 to i64
  %1456 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1447, i64 %1455, i32 0
  store i64 %1417, i64* %1456, align 8
  %1457 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1447, i64 %1455, i32 1
  store i64 %1412, i64* %1457, align 8
  %1458 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1447, i64 %1455, i32 3
  store i32 %1421, i32* %1458, align 4
  %1459 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1447, i64 %1455, i32 2
  %1460 = and i32 %1413, 3
  %1461 = or i32 %1419, %1460
  store i32 %1461, i32* %1459, align 8
  %1462 = icmp eq i32 %1453, -1
  br i1 %1462, label %1463, label %1465

1463:                                             ; preds = %1446, %1440, %1437
  %1464 = load i8*, i8** %986, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1464, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.170, i64 0, i64 0)) #11
  br label %1552

1465:                                             ; preds = %1446
  %1466 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %949, align 8
  %1467 = icmp ult %struct.MOVIndexRange* %1076, %1466
  %1468 = load i64, i64* %16, align 8
  br i1 %1467, label %1473, label %1469

1469:                                             ; preds = %1465
  %1470 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1076, i64 0, i32 1
  %1471 = load i64, i64* %1470, align 8
  %1472 = icmp eq i64 %1468, %1471
  br i1 %1472, label %1476, label %1473

1473:                                             ; preds = %1469, %1465
  %1474 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1076, i64 1
  %1475 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1474, i64 0, i32 0
  store i64 %1468, i64* %1475, align 8
  br label %1476

1476:                                             ; preds = %1473, %1469
  %1477 = phi %struct.MOVIndexRange* [ %1474, %1473 ], [ %1076, %1469 ]
  %1478 = add nsw i64 %1468, 1
  %1479 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1477, i64 0, i32 1
  store i64 %1478, i64* %1479, align 8
  %1480 = icmp sgt i64 %1414, 0
  %1481 = select i1 %1480, i64 %1095, i64 0
  %1482 = add nsw i64 %1481, %1412
  %1483 = add nsw i64 %1170, %1095
  %1484 = icmp slt i64 %1483, %1072
  br i1 %1484, label %1550, label %1485

1485:                                             ; preds = %1476
  %1486 = and i32 %1413, 1
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1488, label %1493

1488:                                             ; preds = %1485
  %1489 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1490 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1489, i64 0, i32 0
  %1491 = load i32, i32* %1490, align 8
  %1492 = icmp eq i32 %1491, 1
  br i1 %1492, label %1493, label %1550

1493:                                             ; preds = %1488, %1485
  br i1 %989, label %1494, label %1552

1494:                                             ; preds = %1493
  %1495 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1496 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1495, i64 0, i32 0
  %1497 = load i32, i32* %1496, align 8
  %1498 = icmp ne i32 %1497, 1
  %1499 = icmp eq i32 %1075, 0
  %1500 = and i1 %1499, %1498
  br i1 %1500, label %1550, label %1501

1501:                                             ; preds = %1494
  %1502 = load i64, i64* %15, align 8
  %1503 = icmp eq i64 %1502, 0
  br i1 %1503, label %1552, label %1504

1504:                                             ; preds = %1501
  %1505 = sub nsw i64 %1502, %1169
  %1506 = trunc i64 %1505 to i32
  %1507 = load i64, i64* %14, align 8
  %1508 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1507, i32 1
  %1509 = load i32, i32* %1508, align 4
  %1510 = load i32, i32* %930, align 4
  %1511 = add i32 %1510, 1
  %1512 = zext i32 %1511 to i64
  %1513 = shl nuw nsw i64 %1512, 3
  %1514 = load i32, i32* %968, align 4
  %1515 = zext i32 %1514 to i64
  %1516 = icmp ugt i64 %1513, %1515
  br i1 %1516, label %1517, label %1522

1517:                                             ; preds = %1504
  %1518 = shl i32 %1514, 1
  %1519 = zext i32 %1518 to i64
  %1520 = icmp ugt i64 %1513, %1519
  %1521 = select i1 %1520, i64 %1513, i64 %1519
  br label %1522

1522:                                             ; preds = %1517, %1504
  %1523 = phi i64 [ %1513, %1504 ], [ %1521, %1517 ]
  %1524 = icmp ugt i32 %1510, 536870909
  br i1 %1524, label %1545, label %1525

1525:                                             ; preds = %1522
  %1526 = load i8*, i8** %990, align 8
  %1527 = call i8* @av_fast_realloc(i8* %1526, i32* %968, i64 %1523) #11
  %1528 = bitcast i8* %1527 to %struct.MOVStts*
  %1529 = icmp eq i8* %1527, null
  br i1 %1529, label %1530, label %1536

1530:                                             ; preds = %1525
  %1531 = load i64, i64* %14, align 8
  %1532 = load i64, i64* %15, align 8
  %1533 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %927, i64 %1531, i32 1
  %1534 = load i32, i32* %1533, align 4
  %1535 = sub nsw i64 %1532, %1169
  br label %1545

1536:                                             ; preds = %1525
  store i8* %1527, i8** %990, align 8
  %1537 = load i32, i32* %930, align 4
  %1538 = zext i32 %1537 to i64
  %1539 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1528, i64 %1538, i32 0
  store i32 %1506, i32* %1539, align 4
  %1540 = load i32, i32* %930, align 4
  %1541 = zext i32 %1540 to i64
  %1542 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1528, i64 %1541, i32 1
  store i32 %1509, i32* %1542, align 4
  %1543 = load i32, i32* %930, align 4
  %1544 = add i32 %1543, 1
  store i32 %1544, i32* %930, align 4
  br label %1552

1545:                                             ; preds = %1530, %1522
  %1546 = phi i64 [ %1535, %1530 ], [ %1505, %1522 ]
  %1547 = phi i32 [ %1534, %1530 ], [ %1509, %1522 ]
  %1548 = phi i64 [ %1531, %1530 ], [ %1507, %1522 ]
  %1549 = load i8*, i8** %986, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1549, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.166, i64 0, i64 0), i64 %1548, i64 %1546, i32 %1547) #11
  br label %1552

1550:                                             ; preds = %1494, %1488, %1476
  %1551 = phi i32 [ %1075, %1488 ], [ %1075, %1476 ], [ 1, %1494 ]
  store i64 %1478, i64* %16, align 8
  br i1 %1083, label %1074, label %1552

1552:                                             ; preds = %1550, %1493, %1545, %1536, %1501, %1463, %1297, %1161, %1066
  %1553 = phi %struct.MOVIndexRange* [ %1076, %1161 ], [ %1076, %1463 ], [ %1477, %1545 ], [ %1477, %1536 ], [ %1477, %1501 ], [ %1076, %1297 ], [ %1000, %1066 ], [ %1477, %1493 ], [ %1477, %1550 ]
  %1554 = trunc i64 %1021 to i32
  %1555 = load i32, i32* %939, align 8
  %1556 = icmp eq i32 %1555, %1554
  br i1 %1556, label %1557, label %998

1557:                                             ; preds = %1026, %1552, %1010, %979
  %1558 = phi i64 [ %996, %1010 ], [ 0, %979 ], [ %996, %1552 ], [ %1027, %1026 ]
  %1559 = phi i64 [ %1003, %1010 ], [ %980, %979 ], [ %1022, %1552 ], [ %1022, %1026 ]
  %1560 = phi %struct.MOVIndexRange* [ %1000, %1010 ], [ %959, %979 ], [ %1553, %1552 ], [ %1000, %1026 ]
  %1561 = load i64, i64* %969, align 8
  %1562 = sub nsw i64 %1561, %1558
  store i64 %1562, i64* %969, align 8
  %1563 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1564 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1563, i64 0, i32 0
  %1565 = load i32, i32* %1564, align 8
  %1566 = icmp eq i32 %1565, 0
  %1567 = icmp sgt i64 %1562, 0
  %1568 = and i1 %1567, %1566
  br i1 %1568, label %1571, label %1569

1569:                                             ; preds = %1557
  %1570 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  br label %1593

1571:                                             ; preds = %1557
  %1572 = bitcast %struct.AVFormatContext** %19 to i8**
  %1573 = load i8*, i8** %1572, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1573, i32 48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.171, i64 0, i64 0), i64 %1562) #11
  %1574 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1575 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1574, i64 0, i32 12
  %1576 = load i32, i32* %1575, align 8
  %1577 = icmp sgt i32 %1576, 0
  br i1 %1577, label %1578, label %1593

1578:                                             ; preds = %1571, %1578
  %1579 = phi i64 [ %1587, %1578 ], [ 0, %1571 ]
  %1580 = phi %struct.AVStreamInternal* [ %1588, %1578 ], [ %1574, %1571 ]
  %1581 = load i64, i64* %969, align 8
  %1582 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1580, i64 0, i32 11
  %1583 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1582, align 8
  %1584 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1583, i64 %1579, i32 1
  %1585 = load i64, i64* %1584, align 8
  %1586 = sub nsw i64 %1585, %1581
  store i64 %1586, i64* %1584, align 8
  %1587 = add nuw nsw i64 %1579, 1
  %1588 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %918, align 8
  %1589 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1588, i64 0, i32 12
  %1590 = load i32, i32* %1589, align 8
  %1591 = sext i32 %1590 to i64
  %1592 = icmp slt i64 %1587, %1591
  br i1 %1592, label %1578, label %1593

1593:                                             ; preds = %1578, %1571, %1569
  %1594 = phi %struct.AVStreamInternal* [ %1570, %1569 ], [ %1574, %1571 ], [ %1588, %1578 ]
  %1595 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 5
  store i64 %1558, i64* %1595, align 8
  %1596 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 6
  %1597 = load i64, i64* %1596, align 8
  %1598 = sub nsw i64 %1559, %980
  %1599 = icmp sgt i64 %1597, %1598
  %1600 = select i1 %1599, i64 %1598, i64 %1597
  store i64 %1600, i64* %1596, align 8
  %1601 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1594, i64 0, i32 18
  %1602 = load i32, i32* %1601, align 8
  %1603 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 54
  store i32 %1602, i32* %1603, align 8
  %1604 = bitcast %struct.AVIndexEntry* %921 to i8*
  call void @av_free(i8* %1604) #11
  %1605 = bitcast %struct.MOVStts* %927 to i8*
  call void @av_free(i8* %1605) #11
  call void @av_freep(i8* nonnull %934) #11
  %1606 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1560, i64 1, i32 0
  %1607 = bitcast i64* %1606 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1607, i8 0, i64 16, i1 false) #11
  %1608 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %949, align 8
  %1609 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %1608, i64 0, i32 0
  %1610 = load i64, i64* %1609, align 8
  %1611 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %917, i64 0, i32 34
  store i64 %1610, i64* %1611, align 8
  br label %1612

1612:                                             ; preds = %1593, %952, %938, %916
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %934) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %933) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %929) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %928) #11
  br label %1613

1613:                                             ; preds = %1612, %912, %908
  %1614 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 5
  %1615 = load i64, i64* %1614, align 8
  %1616 = icmp eq i64 %1615, -9223372036854775808
  %1617 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  br i1 %1616, label %1618, label %1644

1618:                                             ; preds = %1613
  %1619 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1617, i64 0, i32 0
  %1620 = load i32, i32* %1619, align 8
  %1621 = icmp eq i32 %1620, 0
  br i1 %1621, label %1622, label %1644

1622:                                             ; preds = %1618
  %1623 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 40
  %1624 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %1623, align 8
  %1625 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1624, i64 0, i32 12
  %1626 = load i32, i32* %1625, align 8
  %1627 = icmp sgt i32 %1626, 0
  br i1 %1627, label %1628, label %1644

1628:                                             ; preds = %1622
  %1629 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1624, i64 0, i32 11
  %1630 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1629, align 8
  %1631 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1630, i64 0, i32 1
  %1632 = load i64, i64* %1631, align 8
  %1633 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %125, i64 0, i32 48
  %1634 = load i32, i32* %1633, align 8
  %1635 = sext i32 %1634 to i64
  %1636 = add nsw i64 %1632, %1635
  store i64 %1636, i64* %1614, align 8
  %1637 = load %struct.MOVStts*, %struct.MOVStts** %126, align 8
  %1638 = icmp eq %struct.MOVStts* %1637, null
  br i1 %1638, label %1644, label %1639

1639:                                             ; preds = %1628
  %1640 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1637, i64 0, i32 1
  %1641 = load i32, i32* %1640, align 4
  %1642 = sext i32 %1641 to i64
  %1643 = add nsw i64 %1636, %1642
  store i64 %1643, i64* %1614, align 8
  br label %1644

1644:                                             ; preds = %1639, %1628, %1622, %1618, %1613
  %1645 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %124, align 8
  %1646 = bitcast [17 x i64]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %1646) #11
  %1647 = bitcast [17 x i64]* %18 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1647, align 16
  %1648 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 2
  %1649 = bitcast i64* %1648 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1649, align 16
  %1650 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 4
  %1651 = bitcast i64* %1650 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1651, align 16
  %1652 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 6
  %1653 = bitcast i64* %1652 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1653, align 16
  %1654 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 8
  %1655 = bitcast i64* %1654 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1655, align 16
  %1656 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 10
  %1657 = bitcast i64* %1656 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1657, align 16
  %1658 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 12
  %1659 = bitcast i64* %1658 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1659, align 16
  %1660 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 14
  %1661 = bitcast i64* %1660 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %1661, align 16
  %1662 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 16
  store i64 -9223372036854775808, i64* %1662, align 16
  %1663 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1617, i64 0, i32 20
  %1664 = load i32, i32* %1663, align 8
  %1665 = icmp slt i32 %1664, 1
  br i1 %1665, label %1666, label %1762

1666:                                             ; preds = %1644
  %1667 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %1645, i64 0, i32 12
  %1668 = load %struct.MOVStts*, %struct.MOVStts** %1667, align 8
  %1669 = icmp eq %struct.MOVStts* %1668, null
  br i1 %1669, label %1762, label %1670

1670:                                             ; preds = %1666
  %1671 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1617, i64 0, i32 1
  %1672 = load i32, i32* %1671, align 4
  %1673 = icmp eq i32 %1672, 27
  br i1 %1673, label %1674, label %1762

1674:                                             ; preds = %1670
  store i32 0, i32* %1663, align 8
  %1675 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %1645, i64 0, i32 10
  %1676 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 40
  %1677 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %1676, align 8
  %1678 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1677, i64 0, i32 12
  %1679 = load i32, i32* %1678, align 8
  %1680 = icmp sgt i32 %1679, 0
  br i1 %1680, label %1681, label %1755

1681:                                             ; preds = %1674, %1734
  %1682 = phi i64 [ %1749, %1734 ], [ 0, %1674 ]
  %1683 = phi %struct.AVStreamInternal* [ %1750, %1734 ], [ %1677, %1674 ]
  %1684 = phi i32 [ %1692, %1734 ], [ 0, %1674 ]
  %1685 = phi i32 [ %1748, %1734 ], [ 0, %1674 ]
  %1686 = phi i32 [ %1747, %1734 ], [ 0, %1674 ]
  %1687 = load i32, i32* %1675, align 8
  %1688 = icmp ult i32 %1686, %1687
  br i1 %1688, label %1689, label %1755

1689:                                             ; preds = %1681
  %1690 = add nsw i32 %1684, 1
  %1691 = icmp eq i32 %1690, 17
  %1692 = select i1 %1691, i32 0, i32 %1690
  %1693 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1683, i64 0, i32 11
  %1694 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %1693, align 8
  %1695 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1694, i64 %1682, i32 1
  %1696 = load i64, i64* %1695, align 8
  %1697 = load %struct.MOVStts*, %struct.MOVStts** %1667, align 8
  %1698 = zext i32 %1686 to i64
  %1699 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1697, i64 %1698, i32 1
  %1700 = load i32, i32* %1699, align 4
  %1701 = sext i32 %1700 to i64
  %1702 = add nsw i64 %1696, %1701
  %1703 = sext i32 %1684 to i64
  %1704 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 %1703
  store i64 %1702, i64* %1704, align 8
  %1705 = icmp eq i32 %1684, %1692
  br i1 %1705, label %1734, label %1706

1706:                                             ; preds = %1689
  %1707 = add nsw i32 %1684, -1
  %1708 = icmp slt i32 %1684, 1
  %1709 = select i1 %1708, i32 16, i32 %1707
  %1710 = sext i32 %1709 to i64
  %1711 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 %1710
  %1712 = load i64, i64* %1711, align 8
  %1713 = icmp slt i64 %1702, %1712
  br i1 %1713, label %1714, label %1734

1714:                                             ; preds = %1706, %1725
  %1715 = phi i64 [ %1732, %1725 ], [ %1712, %1706 ]
  %1716 = phi i64* [ %1731, %1725 ], [ %1711, %1706 ]
  %1717 = phi i32 [ %1729, %1725 ], [ %1709, %1706 ]
  %1718 = phi i32 [ %1717, %1725 ], [ %1684, %1706 ]
  %1719 = phi i32 [ %1723, %1725 ], [ 0, %1706 ]
  %1720 = phi i64 [ %1726, %1725 ], [ %1702, %1706 ]
  %1721 = sext i32 %1718 to i64
  %1722 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 %1721
  store i64 %1720, i64* %1716, align 8
  store i64 %1715, i64* %1722, align 8
  %1723 = add nuw nsw i32 %1719, 1
  %1724 = icmp eq i32 %1717, %1692
  br i1 %1724, label %1734, label %1725

1725:                                             ; preds = %1714
  %1726 = load i64, i64* %1716, align 8
  %1727 = add nsw i32 %1717, -1
  %1728 = icmp slt i32 %1717, 1
  %1729 = select i1 %1728, i32 16, i32 %1727
  %1730 = sext i32 %1729 to i64
  %1731 = getelementptr inbounds [17 x i64], [17 x i64]* %18, i64 0, i64 %1730
  %1732 = load i64, i64* %1731, align 8
  %1733 = icmp slt i64 %1726, %1732
  br i1 %1733, label %1714, label %1734

1734:                                             ; preds = %1725, %1714, %1706, %1689
  %1735 = phi i32 [ 0, %1689 ], [ 0, %1706 ], [ %1723, %1714 ], [ %1723, %1725 ]
  %1736 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1737 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1736, i64 0, i32 20
  %1738 = load i32, i32* %1737, align 8
  %1739 = icmp sgt i32 %1738, %1735
  %1740 = select i1 %1739, i32 %1738, i32 %1735
  store i32 %1740, i32* %1737, align 8
  %1741 = add nsw i32 %1685, 1
  %1742 = load %struct.MOVStts*, %struct.MOVStts** %1667, align 8
  %1743 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %1742, i64 %1698, i32 0
  %1744 = load i32, i32* %1743, align 4
  %1745 = icmp eq i32 %1741, %1744
  %1746 = zext i1 %1745 to i32
  %1747 = add nuw nsw i32 %1686, %1746
  %1748 = select i1 %1745, i32 0, i32 %1741
  %1749 = add nuw nsw i64 %1682, 1
  %1750 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %1676, align 8
  %1751 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %1750, i64 0, i32 12
  %1752 = load i32, i32* %1751, align 8
  %1753 = sext i32 %1752 to i64
  %1754 = icmp slt i64 %1749, %1753
  br i1 %1754, label %1681, label %1755

1755:                                             ; preds = %1734, %1681, %1674
  %1756 = bitcast %struct.AVFormatContext** %19 to i8**
  %1757 = load i8*, i8** %1756, align 8
  %1758 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1759 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1758, i64 0, i32 20
  %1760 = load i32, i32* %1759, align 8
  %1761 = load i32, i32* %32, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1757, i32 48, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.177, i64 0, i64 0), i32 %1760, i32 %1761) #11
  br label %1762

1762:                                             ; preds = %1755, %1670, %1666, %1644
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %1646) #11
  br label %1763

1763:                                             ; preds = %260, %269, %285, %293, %303, %507, %631, %705, %765, %774, %795, %850, %875, %879, %1762
  %1764 = getelementptr inbounds i8, i8* %25, i64 264
  %1765 = bitcast i8* %1764 to i32*
  %1766 = load i32, i32* %1765, align 8
  %1767 = add nsw i32 %1766, -1
  %1768 = getelementptr inbounds i8, i8* %25, i64 252
  %1769 = bitcast i8* %1768 to i32*
  %1770 = load i32, i32* %1769, align 4
  %1771 = icmp ult i32 %1767, %1770
  br i1 %1771, label %1772, label %1980

1772:                                             ; preds = %1763
  %1773 = getelementptr inbounds i8, i8* %25, i64 256
  %1774 = bitcast i8* %1773 to %struct.MOVDref**
  %1775 = load %struct.MOVDref*, %struct.MOVDref** %1774, align 8
  %1776 = sext i32 %1767 to i64
  %1777 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 1
  %1778 = load i8*, i8** %1777, align 8
  %1779 = icmp eq i8* %1778, null
  br i1 %1779, label %1980, label %1780

1780:                                             ; preds = %1772
  %1781 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 49
  %1782 = load i32, i32* %1781, align 4
  %1783 = icmp eq i32 %1782, 0
  br i1 %1783, label %1966, label %1784

1784:                                             ; preds = %1780
  %1785 = bitcast i8* %25 to %struct.AVIOContext**
  %1786 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %1787 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1786, i64 0, i32 9
  %1788 = load i8*, i8** %1787, align 8
  %1789 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 5
  %1790 = load i16, i16* %1789, align 4
  %1791 = icmp sgt i16 %1790, 0
  %1792 = bitcast %struct.AVFormatContext* %1786 to i8*
  br i1 %1791, label %1793, label %1938

1793:                                             ; preds = %1784
  %1794 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 6
  %1795 = load i16, i16* %1794, align 2
  %1796 = icmp sgt i16 %1795, 0
  br i1 %1796, label %1797, label %1938

1797:                                             ; preds = %1793
  %1798 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1025, i8* nonnull %1798) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1798, i8 -86, i64 1025, i1 false) #11
  %1799 = call i8* @strrchr(i8* %1788, i32 47) #13
  %1800 = icmp eq i8* %1799, null
  %1801 = getelementptr inbounds i8, i8* %1799, i64 1
  %1802 = select i1 %1800, i8* %1788, i8* %1801
  %1803 = load i8*, i8** %1777, align 8
  %1804 = call i64 @strlen(i8* %1803) #13
  %1805 = trunc i64 %1804 to i32
  %1806 = sext i16 %1790 to i32
  %1807 = add nsw i32 %1806, -1
  %1808 = add i32 %1805, -1
  %1809 = icmp sgt i32 %1808, -1
  br i1 %1809, label %1810, label %1828

1810:                                             ; preds = %1797
  %1811 = sext i32 %1808 to i64
  br label %1812

1812:                                             ; preds = %1823, %1810
  %1813 = phi i64 [ %1811, %1810 ], [ %1827, %1823 ]
  %1814 = phi i32 [ %1808, %1810 ], [ %1825, %1823 ]
  %1815 = phi i32 [ 0, %1810 ], [ %1824, %1823 ]
  %1816 = getelementptr inbounds i8, i8* %1803, i64 %1813
  %1817 = load i8, i8* %1816, align 1
  %1818 = icmp eq i8 %1817, 47
  br i1 %1818, label %1819, label %1823

1819:                                             ; preds = %1812
  %1820 = icmp eq i32 %1815, %1807
  br i1 %1820, label %1832, label %1821

1821:                                             ; preds = %1819
  %1822 = add nsw i32 %1815, 1
  br label %1823

1823:                                             ; preds = %1821, %1812
  %1824 = phi i32 [ %1822, %1821 ], [ %1815, %1812 ]
  %1825 = add i32 %1814, -1
  %1826 = icmp sgt i32 %1825, -1
  %1827 = add nsw i64 %1813, -1
  br i1 %1826, label %1812, label %1828

1828:                                             ; preds = %1823, %1797
  %1829 = phi i32 [ 0, %1797 ], [ %1824, %1823 ]
  %1830 = phi i32 [ %1808, %1797 ], [ %1825, %1823 ]
  %1831 = icmp eq i32 %1829, %1807
  br i1 %1831, label %1834, label %1937

1832:                                             ; preds = %1819
  %1833 = trunc i64 %1813 to i32
  br label %1834

1834:                                             ; preds = %1832, %1828
  %1835 = phi i32 [ %1830, %1828 ], [ %1833, %1832 ]
  %1836 = ptrtoint i8* %1802 to i64
  %1837 = ptrtoint i8* %1788 to i64
  %1838 = sub i64 %1836, %1837
  %1839 = icmp ult i64 %1838, 1025
  br i1 %1839, label %1840, label %1937

1840:                                             ; preds = %1834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %1798, i8* align 1 %1788, i64 %1838, i1 false) #11
  %1841 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 %1838
  store i8 0, i8* %1841, align 1
  %1842 = icmp sgt i16 %1795, 1
  br i1 %1842, label %1843, label %1852

1843:                                             ; preds = %1840, %1843
  %1844 = phi i32 [ %1846, %1843 ], [ 1, %1840 ]
  %1845 = call i64 @av_strlcat(i8* nonnull %1798, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.178, i64 0, i64 0), i64 1025) #11
  %1846 = add nuw nsw i32 %1844, 1
  %1847 = load i16, i16* %1794, align 2
  %1848 = sext i16 %1847 to i32
  %1849 = icmp slt i32 %1846, %1848
  br i1 %1849, label %1843, label %1850

1850:                                             ; preds = %1843
  %1851 = load i8*, i8** %1777, align 8
  br label %1852

1852:                                             ; preds = %1850, %1840
  %1853 = phi i8* [ %1851, %1850 ], [ %1803, %1840 ]
  %1854 = sext i32 %1835 to i64
  %1855 = getelementptr inbounds i8, i8* %1853, i64 %1854
  %1856 = getelementptr inbounds i8, i8* %1855, i64 1
  %1857 = call i64 @av_strlcat(i8* nonnull %1798, i8* %1856, i64 1025) #11
  %1858 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 20
  %1859 = load i32, i32* %1858, align 4
  %1860 = icmp eq i32 %1859, 0
  br i1 %1860, label %1861, label %1928

1861:                                             ; preds = %1852
  %1862 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1862) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1862, i8 -86, i64 64, i1 false) #11
  %1863 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %1863) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1863, i8 -86, i64 64, i1 false) #11
  %1864 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1864) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1864, i8 -86, i64 256, i1 false) #11
  %1865 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1865) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1865, i8 -86, i64 256, i1 false) #11
  %1866 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1866) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1866, i8 -86, i64 256, i1 false) #11
  %1867 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %1867) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1867, i8 -86, i64 256, i1 false) #11
  %1868 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1868) #11
  store i32 -1, i32* %11, align 4
  %1869 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1869) #11
  store i32 -1, i32* %12, align 4
  call void @av_url_split(i8* nonnull %1862, i32 64, i8* nonnull %1864, i32 256, i8* nonnull %1866, i32 256, i32* nonnull %11, i8* null, i32 0, i8* %1788) #11
  call void @av_url_split(i8* nonnull %1863, i32 64, i8* nonnull %1865, i32 256, i8* nonnull %1867, i32 256, i32* nonnull %12, i8* null, i32 0, i8* nonnull %1798) #11
  %1870 = load i8, i8* %1788, align 1
  %1871 = icmp eq i8 %1870, 0
  br i1 %1871, label %1902, label %1872

1872:                                             ; preds = %1861
  %1873 = call i64 @strlen(i8* nonnull %1864) #13
  %1874 = add i64 %1873, 1
  %1875 = icmp ugt i64 %1874, 255
  br i1 %1875, label %1902, label %1876

1876:                                             ; preds = %1872
  %1877 = call i64 @strlen(i8* nonnull %1865) #13
  %1878 = add i64 %1877, 1
  %1879 = icmp ugt i64 %1878, 255
  br i1 %1879, label %1902, label %1880

1880:                                             ; preds = %1876
  %1881 = call i64 @strlen(i8* nonnull %1866) #13
  %1882 = add i64 %1881, 1
  %1883 = icmp ugt i64 %1882, 255
  br i1 %1883, label %1902, label %1884

1884:                                             ; preds = %1880
  %1885 = call i64 @strlen(i8* nonnull %1867) #13
  %1886 = add i64 %1885, 1
  %1887 = icmp ugt i64 %1886, 255
  br i1 %1887, label %1902, label %1888

1888:                                             ; preds = %1884
  %1889 = call i32 @strcmp(i8* nonnull %1862, i8* nonnull %1863) #13
  %1890 = icmp eq i32 %1889, 0
  br i1 %1890, label %1891, label %1902

1891:                                             ; preds = %1888
  %1892 = call i32 @strcmp(i8* nonnull %1864, i8* nonnull %1865) #13
  %1893 = icmp eq i32 %1892, 0
  br i1 %1893, label %1894, label %1902

1894:                                             ; preds = %1891
  %1895 = call i32 @strcmp(i8* nonnull %1866, i8* nonnull %1867) #13
  %1896 = icmp eq i32 %1895, 0
  br i1 %1896, label %1897, label %1902

1897:                                             ; preds = %1894
  %1898 = load i32, i32* %11, align 4
  %1899 = load i32, i32* %12, align 4
  %1900 = icmp eq i32 %1898, %1899
  %1901 = zext i1 %1900 to i32
  br label %1902

1902:                                             ; preds = %1897, %1894, %1891, %1888, %1884, %1880, %1876, %1872, %1861
  %1903 = phi i32 [ -1, %1861 ], [ 0, %1884 ], [ 0, %1880 ], [ 0, %1876 ], [ 0, %1872 ], [ 0, %1894 ], [ 0, %1891 ], [ 0, %1888 ], [ %1901, %1897 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1869) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1868) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1867) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1866) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1865) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %1864) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1863) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %1862) #11
  %1904 = icmp eq i32 %1903, 0
  br i1 %1904, label %1905, label %1909

1905:                                             ; preds = %1902
  %1906 = bitcast %struct.AVFormatContext** %19 to i8**
  %1907 = load i8*, i8** %1906, align 8
  %1908 = load i8*, i8** %1777, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1907, i32 16, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.179, i64 0, i64 0), i8* %1908) #11
  br label %1950

1909:                                             ; preds = %1902
  %1910 = load i8*, i8** %1777, align 8
  %1911 = getelementptr inbounds i8, i8* %1910, i64 %1854
  %1912 = getelementptr inbounds i8, i8* %1911, i64 1
  %1913 = call i8* @strstr(i8* %1912, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i64 0, i64 0)) #13
  %1914 = icmp eq i8* %1913, null
  br i1 %1914, label %1915, label %1950

1915:                                             ; preds = %1909
  %1916 = call i8* @strchr(i8* %1912, i32 58) #11
  %1917 = icmp eq i8* %1916, null
  br i1 %1917, label %1918, label %1950

1918:                                             ; preds = %1915
  %1919 = load i16, i16* %1794, align 2
  %1920 = icmp sgt i16 %1919, 1
  %1921 = icmp slt i32 %1903, 0
  %1922 = and i1 %1921, %1920
  br i1 %1922, label %1950, label %1923

1923:                                             ; preds = %1918
  %1924 = load i8, i8* %1798, align 16
  %1925 = icmp eq i8 %1924, 47
  %1926 = icmp eq i8* %1802, %1788
  %1927 = and i1 %1926, %1925
  br i1 %1927, label %1950, label %1928

1928:                                             ; preds = %1923, %1852
  %1929 = call i64 @strlen(i8* nonnull %1798) #13
  %1930 = icmp eq i64 %1929, 1024
  br i1 %1930, label %1950, label %1931

1931:                                             ; preds = %1928
  %1932 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %1933 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1932, i64 0, i32 69
  %1934 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %1933, align 8
  %1935 = call i32 %1934(%struct.AVFormatContext* %1932, %struct.AVIOContext** %1785, i8* nonnull %1798, i32 1, %struct.AVDictionary** null) #11
  %1936 = icmp eq i32 %1935, 0
  br i1 %1936, label %1951, label %1937

1937:                                             ; preds = %1931, %1834, %1828
  call void @llvm.lifetime.end.p0i8(i64 1025, i8* nonnull %1798) #11
  br label %1952

1938:                                             ; preds = %1793, %1784
  %1939 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 20
  %1940 = load i32, i32* %1939, align 4
  %1941 = icmp eq i32 %1940, 0
  br i1 %1941, label %1949, label %1942

1942:                                             ; preds = %1938
  call void (i8*, i32, i8*, ...) @av_log(i8* %1792, i32 24, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.182, i64 0, i64 0)) #11
  %1943 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %1944 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1943, i64 0, i32 69
  %1945 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %1944, align 8
  %1946 = load i8*, i8** %1777, align 8
  %1947 = call i32 %1945(%struct.AVFormatContext* %1943, %struct.AVIOContext** %1785, i8* %1946, i32 1, %struct.AVDictionary** null) #11
  %1948 = icmp eq i32 %1947, 0
  br i1 %1948, label %1988, label %1952

1949:                                             ; preds = %1938
  call void (i8*, i32, i8*, ...) @av_log(i8* %1792, i32 16, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.183, i64 0, i64 0), i8* nonnull %1778) #11
  br label %1952

1950:                                             ; preds = %1928, %1905, %1915, %1909, %1918, %1923
  call void @llvm.lifetime.end.p0i8(i64 1025, i8* nonnull %1798) #11
  br label %1952

1951:                                             ; preds = %1931
  call void @llvm.lifetime.end.p0i8(i64 1025, i8* nonnull %1798) #11
  br label %1988

1952:                                             ; preds = %1949, %1942, %1937, %1950
  %1953 = bitcast %struct.AVFormatContext** %19 to i8**
  %1954 = load i8*, i8** %1953, align 8
  %1955 = load i32, i32* %32, align 8
  %1956 = load i8*, i8** %1777, align 8
  %1957 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 2
  %1958 = load i8*, i8** %1957, align 8
  %1959 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 4, i64 0
  %1960 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 3, i64 0
  %1961 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 6
  %1962 = load i16, i16* %1961, align 2
  %1963 = sext i16 %1962 to i32
  %1964 = load i16, i16* %1789, align 4
  %1965 = sext i16 %1964 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1954, i32 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.145, i64 0, i64 0), i32 %1955, i8* %1956, i8* %1958, i8* %1959, i8* %1960, i32 %1963, i32 %1965) #11
  br label %1988

1966:                                             ; preds = %1780
  %1967 = bitcast %struct.AVFormatContext** %19 to i8**
  %1968 = load i8*, i8** %1967, align 8
  %1969 = load i32, i32* %32, align 8
  %1970 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 2
  %1971 = load i8*, i8** %1970, align 8
  %1972 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 4, i64 0
  %1973 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 3, i64 0
  %1974 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 6
  %1975 = load i16, i16* %1974, align 2
  %1976 = sext i16 %1975 to i32
  %1977 = getelementptr inbounds %struct.MOVDref, %struct.MOVDref* %1775, i64 %1776, i32 5
  %1978 = load i16, i16* %1977, align 4
  %1979 = sext i16 %1978 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1968, i32 24, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.146, i64 0, i64 0), i32 %1969, i8* nonnull %1778, i8* %1971, i8* %1972, i8* %1973, i32 %1976, i32 %1979) #11
  br label %1988

1980:                                             ; preds = %1772, %1763
  %1981 = load %struct.AVFormatContext*, %struct.AVFormatContext** %19, align 8
  %1982 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1981, i64 0, i32 4
  %1983 = bitcast %struct.AVIOContext** %1982 to i64*
  %1984 = load i64, i64* %1983, align 8
  %1985 = bitcast i8* %25 to i64*
  store i64 %1984, i64* %1985, align 8
  %1986 = getelementptr inbounds i8, i8* %25, i64 8
  %1987 = bitcast i8* %1986 to i32*
  store i32 1, i32* %1987, align 8
  br label %1988

1988:                                             ; preds = %1942, %1951, %1966, %1952, %1980
  %1989 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  %1990 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1989, i64 0, i32 0
  %1991 = load i32, i32* %1990, align 8
  %1992 = icmp eq i32 %1991, 0
  br i1 %1992, label %1993, label %2056

1993:                                             ; preds = %1988
  %1994 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 10, i32 0
  %1995 = load i32, i32* %1994, align 8
  %1996 = icmp eq i32 %1995, 0
  br i1 %1996, label %1997, label %2030

1997:                                             ; preds = %1993
  %1998 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1989, i64 0, i32 11
  %1999 = load i32, i32* %1998, align 8
  %2000 = icmp eq i32 %1999, 0
  br i1 %2000, label %2030, label %2001

2001:                                             ; preds = %1997
  %2002 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1989, i64 0, i32 12
  %2003 = load i32, i32* %2002, align 4
  %2004 = icmp eq i32 %2003, 0
  br i1 %2004, label %2030, label %2005

2005:                                             ; preds = %2001
  %2006 = getelementptr inbounds i8, i8* %25, i64 276
  %2007 = bitcast i8* %2006 to i32*
  %2008 = load i32, i32* %2007, align 4
  %2009 = icmp eq i32 %2008, 0
  br i1 %2009, label %2030, label %2010

2010:                                             ; preds = %2005
  %2011 = getelementptr inbounds i8, i8* %25, i64 272
  %2012 = bitcast i8* %2011 to i32*
  %2013 = load i32, i32* %2012, align 8
  %2014 = icmp eq i32 %2013, 0
  br i1 %2014, label %2030, label %2015

2015:                                             ; preds = %2010
  %2016 = icmp eq i32 %1999, %2013
  %2017 = icmp eq i32 %2003, %2008
  %2018 = and i1 %2017, %2016
  br i1 %2018, label %2030, label %2019

2019:                                             ; preds = %2015
  %2020 = sitofp i32 %2003 to double
  %2021 = sitofp i32 %2013 to double
  %2022 = fmul nsz double %2020, %2021
  %2023 = sitofp i32 %1999 to double
  %2024 = sitofp i32 %2008 to double
  %2025 = fmul nsz double %2023, %2024
  %2026 = fdiv nsz double %2022, %2025
  %2027 = call i64 @av_d2q(double %2026, i32 2147483647) #14
  %2028 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 10
  %2029 = bitcast %struct.AVRational* %2028 to i64*
  store i64 %2027, i64* %2029, align 8
  br label %2030

2030:                                             ; preds = %2015, %2010, %2005, %2001, %1997, %1993, %2019
  %2031 = getelementptr inbounds i8, i8* %25, i64 32
  %2032 = bitcast i8* %2031 to i32*
  %2033 = load i32, i32* %2032, align 8
  switch i32 %2033, label %2056 [
    i32 1, label %2034
    i32 2, label %2038
  ]

2034:                                             ; preds = %2030
  %2035 = getelementptr inbounds i8, i8* %25, i64 40
  %2036 = bitcast i8* %2035 to %struct.MOVStts**
  %2037 = load %struct.MOVStts*, %struct.MOVStts** %2036, align 8
  br label %2045

2038:                                             ; preds = %2030
  %2039 = getelementptr inbounds i8, i8* %25, i64 40
  %2040 = bitcast i8* %2039 to %struct.MOVStts**
  %2041 = load %struct.MOVStts*, %struct.MOVStts** %2040, align 8
  %2042 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %2041, i64 1, i32 0
  %2043 = load i32, i32* %2042, align 4
  %2044 = icmp eq i32 %2043, 1
  br i1 %2044, label %2045, label %2056

2045:                                             ; preds = %2034, %2038
  %2046 = phi %struct.MOVStts* [ %2037, %2034 ], [ %2041, %2038 ]
  %2047 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 17, i32 0
  %2048 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 17, i32 1
  %2049 = load i32, i32* %111, align 8
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %2046, i64 0, i32 1
  %2052 = load i32, i32* %2051, align 4
  %2053 = sext i32 %2052 to i64
  %2054 = call i32 @av_reduce(i32* %2047, i32* %2048, i64 %2050, i64 %2053, i64 2147483647) #11
  %2055 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  br label %2056

2056:                                             ; preds = %2030, %2038, %2045, %1988
  %2057 = phi %struct.AVCodecParameters* [ %1989, %2030 ], [ %1989, %2038 ], [ %2055, %2045 ], [ %1989, %1988 ]
  %2058 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2057, i64 0, i32 4
  %2059 = load i32, i32* %2058, align 8
  %2060 = icmp eq i32 %2059, 0
  br i1 %2060, label %2061, label %2073

2061:                                             ; preds = %2056
  %2062 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2057, i64 0, i32 1
  %2063 = load i32, i32* %2062, align 4
  %2064 = icmp eq i32 %2063, 27
  br i1 %2064, label %2065, label %2073

2065:                                             ; preds = %2061
  %2066 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2057, i64 0, i32 2
  %2067 = load i32, i32* %2066, align 8
  switch i32 %2067, label %2073 [
    i32 1882548577, label %2068
    i32 1899325793, label %2068
    i32 842361185, label %2068
    i32 859138401, label %2068
    i32 892692833, label %2068
    i32 909470049, label %2068
    i32 1882286433, label %2068
    i32 1899063649, label %2068
    i32 842099041, label %2068
    i32 858876257, label %2068
    i32 892430689, label %2068
    i32 909207905, label %2068
    i32 2021026145, label %2068
    i32 1852397121, label %2068
  ]

2068:                                             ; preds = %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065, %2065
  %2069 = call i32 @ff_generate_avci_extradata(%struct.AVStream* nonnull %21) #11
  %2070 = icmp slt i32 %2069, 0
  br i1 %2070, label %2104, label %2071

2071:                                             ; preds = %2068
  %2072 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %29, align 8
  br label %2073

2073:                                             ; preds = %2071, %2065, %2056, %2061
  %2074 = phi %struct.AVCodecParameters* [ %2072, %2071 ], [ %2057, %2065 ], [ %2057, %2056 ], [ %2057, %2061 ]
  %2075 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2074, i64 0, i32 1
  %2076 = load i32, i32* %2075, align 4
  %2077 = icmp eq i32 %2076, 86017
  br i1 %2077, label %2078, label %2096

2078:                                             ; preds = %2073
  %2079 = getelementptr inbounds i8, i8* %25, i64 32
  %2080 = bitcast i8* %2079 to i32*
  %2081 = load i32, i32* %2080, align 8
  %2082 = icmp ugt i32 %2081, 3
  br i1 %2082, label %2083, label %2096

2083:                                             ; preds = %2078
  %2084 = mul i32 %2081, 10
  %2085 = zext i32 %2084 to i64
  %2086 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 7
  %2087 = load i64, i64* %2086, align 8
  %2088 = icmp slt i64 %2087, %2085
  br i1 %2088, label %2089, label %2096

2089:                                             ; preds = %2083
  %2090 = load i32, i32* %111, align 8
  %2091 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2074, i64 0, i32 23
  %2092 = load i32, i32* %2091, align 4
  %2093 = icmp eq i32 %2090, %2092
  br i1 %2093, label %2094, label %2096

2094:                                             ; preds = %2089
  %2095 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 28
  store i32 1, i32* %2095, align 4
  br label %2096

2096:                                             ; preds = %2094, %2089, %2083, %2078, %2073
  %2097 = getelementptr inbounds i8, i8* %25, i64 24
  call void @av_freep(i8* %2097) #11
  %2098 = getelementptr inbounds i8, i8* %25, i64 152
  call void @av_freep(i8* %2098) #11
  %2099 = getelementptr inbounds i8, i8* %25, i64 168
  call void @av_freep(i8* %2099) #11
  %2100 = getelementptr inbounds i8, i8* %25, i64 40
  call void @av_freep(i8* %2100) #11
  %2101 = getelementptr inbounds i8, i8* %25, i64 112
  call void @av_freep(i8* %2101) #11
  %2102 = getelementptr inbounds i8, i8* %25, i64 120
  call void @av_freep(i8* %2102) #11
  %2103 = getelementptr inbounds i8, i8* %25, i64 1344
  call void @av_freep(i8* %2103) #11
  br label %2104

2104:                                             ; preds = %2068, %27, %23, %4, %2096, %105, %85
  %2105 = phi i32 [ -1094995529, %105 ], [ 0, %2096 ], [ 0, %85 ], [ -12, %4 ], [ -12, %23 ], [ %38, %27 ], [ %2069, %2068 ]
  ret i32 %2105
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_tmcd(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %21 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 45
  store i32 %20, i32* %21, align 4
  br label %22

22:                                               ; preds = %4, %10
  %23 = phi i32 [ 0, %10 ], [ -1094995529, %4 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_chap(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = sdiv i64 %3, 4
  %6 = trunc i64 %5 to i32
  %7 = and i64 %5, 4294967295
  %8 = tail call i8* @av_malloc_array(i64 %7, i64 4) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 18
  %12 = bitcast i32** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @av_free(i8* %13) #11
  store i8* %8, i8** %12, align 8
  %14 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 19
  store i32 %6, i32* %14, align 8
  %15 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %16 = icmp eq i32 %6, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %10
  %18 = and i64 %5, 4294967295
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi i64 [ 0, %17 ], [ %27, %23 ]
  %21 = load i32, i32* %15, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %25 = load i32*, i32** %11, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %20
  store i32 %24, i32* %26, align 4
  %27 = add nuw nsw i64 %20, 1
  %28 = icmp eq i64 %27, %18
  br i1 %28, label %29, label %19

29:                                               ; preds = %19, %23, %10, %4
  %30 = phi i32 [ -12, %4 ], [ 0, %10 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_trex(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 8
  %7 = icmp ugt i32 %6, 214748362
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 14
  %10 = bitcast %struct.MOVTrackExt** %9 to i8*
  %11 = add nuw nsw i32 %6, 1
  %12 = zext i32 %11 to i64
  %13 = tail call i32 @av_reallocp_array(i8* %10, i64 %12, i64 20) #11
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  store i32 0, i32* %5, align 8
  br label %36

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %17, align 8
  %19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i64 0, i32 11
  store i64 -9223372036854775808, i64* %19, align 8
  %20 = load %struct.MOVTrackExt*, %struct.MOVTrackExt** %9, align 8
  %21 = load i32, i32* %5, align 8
  %22 = add i32 %21, 1
  store i32 %22, i32* %5, align 8
  %23 = zext i32 %21 to i64
  %24 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %25 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %26 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %27 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %20, i64 %23, i32 0
  store i32 %26, i32* %27, align 4
  %28 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %29 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %20, i64 %23, i32 1
  store i32 %28, i32* %29, align 4
  %30 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %31 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %20, i64 %23, i32 2
  store i32 %30, i32* %31, align 4
  %32 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %33 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %20, i64 %23, i32 3
  store i32 %32, i32* %33, align 4
  %34 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %35 = getelementptr inbounds %struct.MOVTrackExt, %struct.MOVTrackExt* %20, i64 %23, i32 4
  store i32 %34, i32* %35, align 4
  br label %36

36:                                               ; preds = %4, %16, %15
  %37 = phi i32 [ %13, %15 ], [ 0, %16 ], [ -1094995529, %4 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_trun(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  br i1 %9, label %23, label %11

11:                                               ; preds = %4
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %10, align 8
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %struct.AVFormatContext* %12 to i8*
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 1
  %18 = load i32, i32* %17, align 4
  br i1 %15, label %38, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 7
  %21 = load %struct.AVStream**, %struct.AVStream*** %20, align 8
  %22 = zext i32 %14 to i64
  br label %28

23:                                               ; preds = %4
  %24 = bitcast %struct.AVFormatContext** %10 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.184, i64 0, i64 0)) #11
  br label %625

26:                                               ; preds = %28
  %27 = icmp ult i64 %35, %22
  br i1 %27, label %28, label %38

28:                                               ; preds = %19, %26
  %29 = phi i64 [ 0, %19 ], [ %35, %26 ]
  %30 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %21, i64 %29
  %31 = load %struct.AVStream*, %struct.AVStream** %30, align 8
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %18
  %35 = add nuw nsw i64 %29, 1
  br i1 %34, label %36, label %26

36:                                               ; preds = %28
  %37 = icmp eq %struct.AVStream* %31, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %26, %11, %36
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.140, i64 0, i64 0), i32 %18) #11
  br label %625

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 3
  %41 = bitcast i8** %40 to %struct.MOVStreamContext**
  %42 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %41, align 8
  %43 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 40
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  %46 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  %49 = icmp eq i32 %44, -1
  %50 = or i1 %49, %48
  br i1 %50, label %51, label %625

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 40
  %53 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %54 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %53, i64 0, i32 12
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  %59 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %58, %60
  br i1 %61, label %62, label %104

62:                                               ; preds = %51
  %63 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %64 = sext i32 %58 to i64
  %65 = sext i32 %60 to i64
  %66 = sext i32 %60 to i64
  br label %67

67:                                               ; preds = %62, %96
  %68 = phi i64 [ %64, %62 ], [ %98, %96 ]
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %96, label %70

70:                                               ; preds = %67
  %71 = icmp slt i64 %68, %65
  br i1 %71, label %72, label %96

72:                                               ; preds = %70
  %73 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %63, align 8
  %74 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %73, i64 %68, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %96

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %73, i64 %68, i32 4
  %79 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %78, align 8
  %80 = sext i32 %75 to i64
  br label %83

81:                                               ; preds = %83
  %82 = icmp eq i64 %89, %80
  br i1 %82, label %96, label %83

83:                                               ; preds = %81, %77
  %84 = phi i64 [ 0, %77 ], [ %89, %81 ]
  %85 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %79, i64 %84
  %86 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, %18
  %89 = add nuw nsw i64 %84, 1
  br i1 %88, label %90, label %81

90:                                               ; preds = %83
  %91 = icmp eq %struct.MOVFragmentStreamInfo* %85, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %79, i64 %84, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = icmp sgt i32 %94, -1
  br i1 %95, label %100, label %96

96:                                               ; preds = %81, %67, %72, %70, %90, %92
  %97 = phi i64 [ %65, %72 ], [ %65, %70 ], [ %65, %90 ], [ %65, %92 ], [ %66, %67 ], [ %65, %81 ]
  %98 = add nsw i64 %68, 1
  %99 = icmp slt i64 %98, %97
  br i1 %99, label %67, label %104

100:                                              ; preds = %92
  %101 = trunc i64 %68 to i32
  %102 = icmp sgt i32 %94, %55
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 4831) #11
  tail call void @abort() #12
  unreachable

104:                                              ; preds = %96, %51, %100
  %105 = phi i32 [ %94, %100 ], [ %55, %51 ], [ %55, %96 ]
  %106 = phi i32 [ %101, %100 ], [ -1, %51 ], [ -1, %96 ]
  %107 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %108 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %109 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %110 = bitcast %struct.AVFormatContext** %10 to i8**
  %111 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %111, i32 56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.186, i64 0, i64 0), i32 %108, i32 %109) #11
  %112 = zext i32 %109 to i64
  %113 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 10
  %114 = load i32, i32* %113, align 8
  %115 = zext i32 %114 to i64
  %116 = add nuw nsw i64 %115, %112
  %117 = icmp ugt i64 %116, 536870910
  br i1 %117, label %625, label %118

118:                                              ; preds = %104
  %119 = and i32 %108, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %123

123:                                              ; preds = %118, %121
  %124 = phi i32 [ %122, %121 ], [ 0, %118 ]
  %125 = and i32 %108, 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %129

129:                                              ; preds = %123, %127
  %130 = phi i32 [ %128, %127 ], [ %6, %123 ]
  %131 = load i32, i32* %56, align 8
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %197, label %133

133:                                              ; preds = %129
  %134 = load i32, i32* %59, align 4
  %135 = icmp slt i32 %131, %134
  br i1 %135, label %136, label %197

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %138 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %137, align 8
  %139 = sext i32 %131 to i64
  %140 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %138, i64 %139, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, -1
  br i1 %142, label %143, label %197

143:                                              ; preds = %136
  %144 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %138, i64 %139, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = icmp slt i32 %141, %145
  br i1 %146, label %147, label %197

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %138, i64 %139, i32 4
  %149 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %148, align 8
  %150 = sext i32 %141 to i64
  %151 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %149, i64 %150
  %152 = icmp eq %struct.MOVFragmentStreamInfo* %151, null
  br i1 %152, label %197, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %149, i64 %150, i32 4
  %155 = load i64, i64* %154, align 8
  %156 = icmp eq i64 %155, -9223372036854775808
  br i1 %156, label %161, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %159 = load i64, i64* %158, align 8
  %160 = sub nsw i64 %155, %159
  br label %204

161:                                              ; preds = %153
  %162 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %149, i64 %150, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %163, -9223372036854775808
  br i1 %164, label %172, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 31
  %167 = load i32, i32* %166, align 8
  switch i32 %167, label %172 [
    i32 2, label %168
    i32 1, label %170
  ]

168:                                              ; preds = %165
  %169 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %169, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.187, i64 0, i64 0), i64 %163) #11
  br label %204

170:                                              ; preds = %165
  %171 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %171, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.188, i64 0, i64 0), i64 -9223372036854775808) #11
  br label %204

172:                                              ; preds = %165, %161
  %173 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %149, i64 %150, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, -9223372036854775808
  br i1 %175, label %181, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %178 = load i64, i64* %177, align 8
  %179 = sub nsw i64 %174, %178
  %180 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %180, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.189, i64 0, i64 0), i64 -9223372036854775808) #11
  br label %204

181:                                              ; preds = %172
  %182 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %149, i64 %150, i32 3
  %183 = load i64, i64* %182, align 8
  %184 = icmp eq i64 %183, -9223372036854775808
  br i1 %184, label %190, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %187 = load i64, i64* %186, align 8
  %188 = sub nsw i64 %183, %187
  %189 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %189, i32 48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.190, i64 0, i64 0), i64 %188) #11
  br label %204

190:                                              ; preds = %181
  %191 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 53
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %194 = load i64, i64* %193, align 8
  %195 = sub nsw i64 %192, %194
  %196 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %196, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.191, i64 0, i64 0), i64 %195) #11
  br label %204

197:                                              ; preds = %147, %136, %143, %129, %133
  %198 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 53
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %201 = load i64, i64* %200, align 8
  %202 = sub nsw i64 %199, %201
  %203 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %203, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.191, i64 0, i64 0), i64 %202) #11
  br label %204

204:                                              ; preds = %157, %170, %185, %190, %176, %168, %197
  %205 = phi i1 [ true, %157 ], [ true, %168 ], [ true, %170 ], [ true, %176 ], [ true, %185 ], [ true, %190 ], [ false, %197 ]
  %206 = phi %struct.MOVFragmentStreamInfo* [ %151, %157 ], [ %151, %168 ], [ %151, %170 ], [ %151, %176 ], [ %151, %185 ], [ %151, %190 ], [ null, %197 ]
  %207 = phi i64 [ %160, %157 ], [ -6148914691236517206, %168 ], [ %163, %170 ], [ %179, %176 ], [ %188, %185 ], [ %195, %190 ], [ %202, %197 ]
  %208 = phi i64 [ -9223372036854775808, %157 ], [ %163, %168 ], [ -9223372036854775808, %170 ], [ -9223372036854775808, %176 ], [ -9223372036854775808, %185 ], [ -9223372036854775808, %190 ], [ -9223372036854775808, %197 ]
  %209 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = sext i32 %124 to i64
  %212 = add i64 %210, %211
  %213 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %213, i32 56, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.192, i64 0, i64 0), i32 %130) #11
  %214 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %215 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %214, i64 0, i32 12
  %216 = load i32, i32* %215, align 8
  %217 = sext i32 %216 to i64
  %218 = add nsw i64 %217, %112
  %219 = icmp ugt i64 %218, 178956969
  br i1 %219, label %220, label %223

220:                                              ; preds = %204
  %221 = sub i32 178956970, %216
  %222 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %222, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.193, i64 0, i64 0)) #11
  br label %223

223:                                              ; preds = %220, %204
  %224 = phi i32 [ %221, %220 ], [ %109, %204 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %625, label %226

226:                                              ; preds = %223
  %227 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %228 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %227, i64 0, i32 12
  %229 = load i32, i32* %228, align 8
  %230 = add i32 %229, %224
  %231 = zext i32 %230 to i64
  %232 = mul nuw nsw i64 %231, 24
  %233 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %227, i64 0, i32 11
  %234 = bitcast %struct.AVIndexEntry** %233 to i8**
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %227, i64 0, i32 13
  %237 = tail call i8* @av_fast_realloc(i8* %235, i32* %236, i64 %232) #11
  %238 = icmp eq i8* %237, null
  br i1 %238, label %625, label %239

239:                                              ; preds = %226
  %240 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %241 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %240, i64 0, i32 11
  %242 = bitcast %struct.AVIndexEntry** %241 to i8**
  store i8* %237, i8** %242, align 8
  %243 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %244 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %243, i64 0, i32 12
  %245 = load i32, i32* %244, align 8
  %246 = add i32 %245, %224
  %247 = zext i32 %246 to i64
  %248 = shl nuw nsw i64 %247, 3
  %249 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 11
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 12
  %253 = bitcast %struct.MOVStts** %252 to i8**
  %254 = load i8*, i8** %253, align 8
  %255 = tail call i8* @av_fast_realloc(i8* %254, i32* %249, i64 %248) #11
  %256 = icmp eq i8* %255, null
  br i1 %256, label %625, label %257

257:                                              ; preds = %239
  store i8* %255, i8** %253, align 8
  %258 = getelementptr inbounds i8, i8* %255, i64 %251
  %259 = load i32, i32* %249, align 4
  %260 = zext i32 %259 to i64
  %261 = sub nsw i64 %260, %251
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %258, i8 0, i64 %261, i1 false)
  %262 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %263 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %262, i64 0, i32 12
  %264 = load i32, i32* %263, align 8
  %265 = icmp sgt i32 %264, %105
  br i1 %265, label %266, label %292

266:                                              ; preds = %257
  %267 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %262, i64 0, i32 11
  %268 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %267, align 8
  %269 = sext i32 %105 to i64
  %270 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %268, i64 %269
  %271 = zext i32 %224 to i64
  %272 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %270, i64 %271
  %273 = bitcast %struct.AVIndexEntry* %272 to i8*
  %274 = bitcast %struct.AVIndexEntry* %270 to i8*
  %275 = sub nsw i32 %264, %105
  %276 = sext i32 %275 to i64
  %277 = mul nsw i64 %276, 24
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %273, i8* align 8 %274, i64 %277, i1 false)
  %278 = load %struct.MOVStts*, %struct.MOVStts** %252, align 8
  %279 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %278, i64 %269
  %280 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %279, i64 %271
  %281 = bitcast %struct.MOVStts* %280 to i8*
  %282 = bitcast %struct.MOVStts* %279 to i8*
  %283 = load i32, i32* %113, align 8
  %284 = sub i32 %283, %105
  %285 = zext i32 %284 to i64
  %286 = shl nuw nsw i64 %285, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %282, i64 %286, i1 false)
  %287 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 33
  %288 = load i32, i32* %287, align 8
  %289 = icmp slt i32 %105, %288
  br i1 %289, label %290, label %292

290:                                              ; preds = %266
  %291 = add i32 %288, %224
  store i32 %291, i32* %287, align 8
  br label %292

292:                                              ; preds = %266, %290, %257
  %293 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %294 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %293, i64 0, i32 12
  %295 = load i32, i32* %294, align 8
  %296 = add i32 %295, %224
  store i32 %296, i32* %294, align 8
  %297 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %298 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %297, i64 0, i32 12
  %299 = load i32, i32* %298, align 8
  store i32 %299, i32* %113, align 8
  br i1 %205, label %300, label %302

300:                                              ; preds = %292
  %301 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %206, i64 0, i32 5
  store i32 %105, i32* %301, align 8
  br label %302

302:                                              ; preds = %300, %292
  %303 = icmp sgt i32 %105, 0
  br i1 %303, label %304, label %312

304:                                              ; preds = %302
  %305 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %306 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %305, i64 0, i32 11
  %307 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %306, align 8
  %308 = add nsw i32 %105, -1
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %307, i64 %309, i32 1
  %311 = load i64, i64* %310, align 8
  br label %312

312:                                              ; preds = %302, %304
  %313 = phi i64 [ %311, %304 ], [ -9223372036854775808, %302 ]
  %314 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %315 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 7
  %316 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 6
  %317 = and i32 %108, 256
  %318 = icmp eq i32 %317, 0
  %319 = and i32 %108, 512
  %320 = icmp eq i32 %319, 0
  %321 = and i32 %108, 1024
  %322 = icmp eq i32 %321, 0
  %323 = and i32 %108, 2048
  %324 = icmp ne i32 %323, 0
  %325 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 48
  %326 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %327 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 19
  %328 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 0
  %329 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 51
  %330 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 58
  %331 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 57
  %332 = sext i32 %105 to i64
  %333 = load i32, i32* %314, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %338, label %471

335:                                              ; preds = %466
  %336 = load i32, i32* %314, align 8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %469

338:                                              ; preds = %312, %335
  %339 = phi i64 [ %454, %335 ], [ %212, %312 ]
  %340 = phi i64 [ %452, %335 ], [ %207, %312 ]
  %341 = phi i64 [ -9223372036854775808, %335 ], [ %208, %312 ]
  %342 = phi i32 [ %450, %335 ], [ 0, %312 ]
  %343 = phi i32 [ %467, %335 ], [ 0, %312 ]
  %344 = phi i32 [ %446, %335 ], [ %105, %312 ]
  %345 = phi i64 [ %445, %335 ], [ %332, %312 ]
  %346 = load i32, i32* %315, align 8
  %347 = icmp eq i32 %343, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %338
  %349 = load i32, i32* %5, align 4
  br label %350

350:                                              ; preds = %338, %348
  %351 = phi i32 [ %349, %348 ], [ %130, %338 ]
  %352 = load i32, i32* %316, align 4
  br i1 %318, label %355, label %353

353:                                              ; preds = %350
  %354 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %355

355:                                              ; preds = %350, %353
  %356 = phi i32 [ %354, %353 ], [ %352, %350 ]
  br i1 %320, label %359, label %357

357:                                              ; preds = %355
  %358 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %359

359:                                              ; preds = %355, %357
  %360 = phi i32 [ %358, %357 ], [ %346, %355 ]
  br i1 %322, label %363, label %361

361:                                              ; preds = %359
  %362 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %363

363:                                              ; preds = %359, %361
  %364 = phi i32 [ %362, %361 ], [ %351, %359 ]
  br i1 %324, label %365, label %378

365:                                              ; preds = %363
  %366 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %367 = load i8*, i8** %110, align 8
  %368 = icmp slt i32 %366, 0
  br i1 %368, label %369, label %378

369:                                              ; preds = %365
  %370 = icmp eq i32 %366, -2147483648
  br i1 %370, label %371, label %372

371:                                              ; preds = %369
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %367, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.57, i64 0, i64 0), i32 2147483647) #11
  br label %372

372:                                              ; preds = %371, %369
  %373 = phi i32 [ -2147483647, %371 ], [ %366, %369 ]
  %374 = load i32, i32* %325, align 8
  %375 = sub nsw i32 0, %373
  %376 = icmp sgt i32 %374, %375
  %377 = select i1 %376, i32 %374, i32 %375
  store i32 %377, i32* %325, align 8
  br label %378

378:                                              ; preds = %363, %365, %372
  %379 = phi i32 [ %366, %365 ], [ %366, %372 ], [ 0, %363 ]
  %380 = icmp eq i64 %341, -9223372036854775808
  br i1 %380, label %395, label %381

381:                                              ; preds = %378
  %382 = load i32, i32* %325, align 8
  %383 = sext i32 %382 to i64
  %384 = sub nsw i64 %341, %383
  br i1 %324, label %385, label %388

385:                                              ; preds = %381
  %386 = zext i32 %379 to i64
  %387 = load i64, i64* %326, align 8
  br label %390

388:                                              ; preds = %381
  %389 = load i64, i64* %326, align 8
  br label %390

390:                                              ; preds = %388, %385
  %391 = phi i64 [ %387, %385 ], [ %389, %388 ]
  %392 = phi i64 [ %386, %385 ], [ %389, %388 ]
  %393 = sub i64 %384, %392
  %394 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %394, i32 48, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.194, i64 0, i64 0), i64 %341, i64 %393, i32 %382, i32 %379, i64 %391, i32 %323) #11
  br label %395

395:                                              ; preds = %378, %390
  %396 = phi i64 [ %393, %390 ], [ %340, %378 ]
  %397 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %327, align 8
  %398 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %397, i64 0, i32 0
  %399 = load i32, i32* %398, align 8
  %400 = icmp eq i32 %399, 1
  br i1 %400, label %405, label %401

401:                                              ; preds = %395
  %402 = and i32 %364, 16842752
  %403 = icmp eq i32 %402, 0
  %404 = zext i1 %403 to i32
  br label %405

405:                                              ; preds = %395, %401
  %406 = phi i32 [ %404, %401 ], [ 1, %395 ]
  %407 = icmp eq i32 %406, 0
  %408 = select i1 %407, i32 %342, i32 0
  %409 = xor i1 %407, true
  %410 = zext i1 %409 to i32
  %411 = icmp slt i64 %313, %396
  %412 = or i32 %410, 2
  %413 = select i1 %411, i32 %410, i32 %412
  %414 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %415 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %414, i64 0, i32 11
  %416 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %415, align 8
  %417 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %416, i64 %345, i32 0
  store i64 %339, i64* %417, align 8
  %418 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %419 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %418, i64 0, i32 11
  %420 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %419, align 8
  %421 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %420, i64 %345, i32 1
  store i64 %396, i64* %421, align 8
  %422 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %423 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %422, i64 0, i32 11
  %424 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %423, align 8
  %425 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %424, i64 %345, i32 2
  %426 = load i32, i32* %425, align 8
  %427 = shl i32 %360, 2
  %428 = and i32 %426, 3
  %429 = or i32 %428, %427
  store i32 %429, i32* %425, align 8
  %430 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %431 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %430, i64 0, i32 11
  %432 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %431, align 8
  %433 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %432, i64 %345, i32 3
  store i32 %408, i32* %433, align 4
  %434 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %435 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %434, i64 0, i32 11
  %436 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %435, align 8
  %437 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %436, i64 %345, i32 2
  %438 = load i32, i32* %437, align 8
  %439 = and i32 %438, -4
  %440 = or i32 %439, %413
  store i32 %440, i32* %437, align 8
  %441 = load %struct.MOVStts*, %struct.MOVStts** %252, align 8
  %442 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %441, i64 %345, i32 0
  store i32 1, i32* %442, align 4
  %443 = load %struct.MOVStts*, %struct.MOVStts** %252, align 8
  %444 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %443, i64 %345, i32 1
  store i32 %379, i32* %444, align 4
  %445 = add nsw i64 %345, 1
  %446 = add nsw i32 %344, 1
  %447 = load i8*, i8** %110, align 8
  %448 = load i32, i32* %328, align 8
  %449 = trunc i64 %445 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %447, i32 56, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.195, i64 0, i64 0), i32 %448, i32 %449, i64 %339, i64 %396, i32 %360, i32 %408, i32 %406) #11
  %450 = add nsw i32 %408, 1
  %451 = zext i32 %356 to i64
  %452 = add nsw i64 %396, %451
  %453 = zext i32 %360 to i64
  %454 = add i64 %339, %453
  %455 = load i64, i64* %329, align 8
  %456 = add nsw i64 %455, %453
  store i64 %456, i64* %329, align 8
  %457 = load i64, i64* %330, align 8
  %458 = sub nsw i64 9223372036854775807, %457
  %459 = icmp slt i64 %458, %451
  br i1 %459, label %466, label %460

460:                                              ; preds = %405
  %461 = load i32, i32* %331, align 8
  %462 = icmp eq i32 %461, 2147483647
  br i1 %462, label %466, label %463

463:                                              ; preds = %460
  %464 = add nsw i64 %457, %451
  store i64 %464, i64* %330, align 8
  %465 = add nsw i32 %461, 1
  store i32 %465, i32* %331, align 8
  br label %466

466:                                              ; preds = %460, %405, %463
  %467 = add nuw i32 %343, 1
  %468 = icmp eq i32 %467, %224
  br i1 %468, label %478, label %335

469:                                              ; preds = %335
  %470 = icmp ugt i32 %224, %467
  br label %471

471:                                              ; preds = %469, %312
  %472 = phi i64 [ %332, %312 ], [ %445, %469 ]
  %473 = phi i1 [ true, %312 ], [ %470, %469 ]
  %474 = phi i32 [ 0, %312 ], [ %467, %469 ]
  %475 = phi i64 [ %207, %312 ], [ %452, %469 ]
  %476 = phi i64 [ %212, %312 ], [ %454, %469 ]
  %477 = trunc i64 %472 to i32
  br label %480

478:                                              ; preds = %466
  %479 = icmp ugt i32 %224, %467
  br label %480

480:                                              ; preds = %478, %471
  %481 = phi i64 [ %476, %471 ], [ %454, %478 ]
  %482 = phi i64 [ %475, %471 ], [ %452, %478 ]
  %483 = phi i32 [ %474, %471 ], [ %224, %478 ]
  %484 = phi i32 [ %477, %471 ], [ %446, %478 ]
  %485 = phi i1 [ %473, %471 ], [ %479, %478 ]
  br i1 %205, label %486, label %491

486:                                              ; preds = %480
  %487 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %488 = load i64, i64* %487, align 8
  %489 = add nsw i64 %488, %482
  %490 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %206, i64 0, i32 4
  store i64 %489, i64* %490, align 8
  br label %491

491:                                              ; preds = %486, %480
  br i1 %485, label %492, label %529

492:                                              ; preds = %491
  %493 = sub i32 %224, %483
  %494 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %495 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %494, i64 0, i32 11
  %496 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %495, align 8
  %497 = sext i32 %484 to i64
  %498 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %496, i64 %497
  %499 = bitcast %struct.AVIndexEntry* %498 to i8*
  %500 = sext i32 %493 to i64
  %501 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %498, i64 %500
  %502 = bitcast %struct.AVIndexEntry* %501 to i8*
  %503 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %494, i64 0, i32 12
  %504 = load i32, i32* %503, align 8
  %505 = add nsw i32 %484, %493
  %506 = sub nsw i32 %504, %505
  %507 = sext i32 %506 to i64
  %508 = mul nsw i64 %507, 24
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %499, i8* align 8 %502, i64 %508, i1 false)
  %509 = load %struct.MOVStts*, %struct.MOVStts** %252, align 8
  %510 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %509, i64 %497
  %511 = bitcast %struct.MOVStts* %510 to i8*
  %512 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %510, i64 %500
  %513 = bitcast %struct.MOVStts* %512 to i8*
  %514 = load i32, i32* %113, align 8
  %515 = sub i32 %514, %505
  %516 = zext i32 %515 to i64
  %517 = shl nuw nsw i64 %516, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %511, i8* align 4 %513, i64 %517, i1 false)
  %518 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %519 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %518, i64 0, i32 12
  %520 = load i32, i32* %519, align 8
  %521 = sub nsw i32 %520, %493
  store i32 %521, i32* %519, align 8
  %522 = load i32, i32* %113, align 8
  %523 = sub i32 %522, %493
  store i32 %523, i32* %113, align 8
  %524 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 33
  %525 = load i32, i32* %524, align 8
  %526 = icmp slt i32 %484, %525
  br i1 %526, label %527, label %529

527:                                              ; preds = %492
  %528 = sub nsw i32 %525, %493
  store i32 %528, i32* %524, align 8
  br label %529

529:                                              ; preds = %492, %527, %491
  %530 = phi i32 [ %224, %491 ], [ %483, %527 ], [ %483, %492 ]
  %531 = icmp sgt i32 %484, 0
  %532 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  br i1 %531, label %533, label %540

533:                                              ; preds = %529
  %534 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %532, i64 0, i32 11
  %535 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %534, align 8
  %536 = add nsw i32 %484, -1
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %535, i64 %537, i32 1
  %539 = load i64, i64* %538, align 8
  br label %540

540:                                              ; preds = %529, %533
  %541 = phi i64 [ %539, %533 ], [ -9223372036854775808, %529 ]
  %542 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %532, i64 0, i32 12
  %543 = load i32, i32* %542, align 8
  %544 = icmp slt i32 %484, %543
  br i1 %544, label %545, label %565

545:                                              ; preds = %540
  %546 = sext i32 %484 to i64
  br label %547

547:                                              ; preds = %545, %555
  %548 = phi i64 [ %546, %545 ], [ %559, %555 ]
  %549 = phi %struct.AVStreamInternal* [ %532, %545 ], [ %560, %555 ]
  %550 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %549, i64 0, i32 11
  %551 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %550, align 8
  %552 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %551, i64 %548, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = icmp slt i64 %541, %553
  br i1 %554, label %565, label %555

555:                                              ; preds = %547
  %556 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %551, i64 %548, i32 2
  %557 = load i32, i32* %556, align 8
  %558 = or i32 %557, 2
  store i32 %558, i32* %556, align 8
  %559 = add nsw i64 %548, 1
  %560 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %52, align 8
  %561 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %560, i64 0, i32 12
  %562 = load i32, i32* %561, align 8
  %563 = sext i32 %562 to i64
  %564 = icmp slt i64 %559, %563
  br i1 %564, label %547, label %565

565:                                              ; preds = %555, %547, %540
  %566 = load i32, i32* %17, align 4
  %567 = icmp slt i32 %106, 0
  br i1 %567, label %610, label %568

568:                                              ; preds = %565
  %569 = load i32, i32* %59, align 4
  %570 = icmp sgt i32 %569, %106
  br i1 %570, label %571, label %610

571:                                              ; preds = %568
  %572 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %573 = sext i32 %106 to i64
  br label %574

574:                                              ; preds = %605, %571
  %575 = phi i32 [ %569, %571 ], [ %606, %605 ]
  %576 = phi i64 [ %573, %571 ], [ %607, %605 ]
  %577 = icmp slt i64 %576, 0
  br i1 %577, label %605, label %578

578:                                              ; preds = %574
  %579 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %572, align 8
  %580 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %579, i64 %576, i32 3
  %581 = load i32, i32* %580, align 8
  %582 = icmp sgt i32 %581, 0
  br i1 %582, label %583, label %605

583:                                              ; preds = %578
  %584 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %579, i64 %576, i32 4
  %585 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %584, align 8
  %586 = sext i32 %581 to i64
  br label %589

587:                                              ; preds = %589
  %588 = icmp eq i64 %595, %586
  br i1 %588, label %605, label %589

589:                                              ; preds = %587, %583
  %590 = phi i64 [ 0, %583 ], [ %595, %587 ]
  %591 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %585, i64 %590
  %592 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %591, i64 0, i32 0
  %593 = load i32, i32* %592, align 8
  %594 = icmp eq i32 %593, %566
  %595 = add nuw nsw i64 %590, 1
  br i1 %594, label %596, label %587

596:                                              ; preds = %589
  %597 = icmp eq %struct.MOVFragmentStreamInfo* %591, null
  br i1 %597, label %605, label %598

598:                                              ; preds = %596
  %599 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %585, i64 %590, i32 5
  %600 = load i32, i32* %599, align 8
  %601 = icmp sgt i32 %600, -1
  br i1 %601, label %602, label %605

602:                                              ; preds = %598
  %603 = add nsw i32 %600, %530
  store i32 %603, i32* %599, align 8
  %604 = load i32, i32* %59, align 4
  br label %605

605:                                              ; preds = %587, %602, %598, %596, %578, %574
  %606 = phi i32 [ %575, %578 ], [ %575, %574 ], [ %575, %596 ], [ %575, %598 ], [ %604, %602 ], [ %575, %587 ]
  %607 = add nsw i64 %576, 1
  %608 = sext i32 %606 to i64
  %609 = icmp slt i64 %607, %608
  br i1 %609, label %574, label %610

610:                                              ; preds = %605, %565, %568
  %611 = load i32, i32* %314, align 8
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %615, label %613

613:                                              ; preds = %610
  %614 = load i8*, i8** %110, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %614, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.196, i64 0, i64 0)) #11
  br label %625

615:                                              ; preds = %610
  %616 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 4
  store i64 %481, i64* %616, align 8
  %617 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 31
  %618 = load i64, i64* %617, align 8
  %619 = add nsw i64 %618, %482
  %620 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %42, i64 0, i32 53
  store i64 %619, i64* %620, align 8
  %621 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i64 0, i32 6
  %622 = load i64, i64* %621, align 8
  %623 = icmp slt i64 %622, %619
  br i1 %623, label %624, label %625

624:                                              ; preds = %615
  store i64 %619, i64* %621, align 8
  br label %625

625:                                              ; preds = %615, %624, %239, %226, %223, %104, %39, %613, %38, %23
  %626 = phi i32 [ -541478725, %613 ], [ 0, %38 ], [ -1094995529, %23 ], [ 0, %39 ], [ -1094995529, %104 ], [ 0, %223 ], [ -12, %226 ], [ -12, %239 ], [ 0, %624 ], [ 0, %615 ]
  ret i32 %626
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_wave(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %104, label %10

10:                                               ; preds = %4
  %11 = icmp ugt i64 %3, 1073741824
  br i1 %11, label %104, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %8, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %27 [
    i32 86035, label %23
    i32 86066, label %23
    i32 86051, label %23
  ]

23:                                               ; preds = %12, %12, %12
  %24 = trunc i64 %3 to i32
  %25 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %6, %struct.AVCodecParameters* %20, %struct.AVIOContext* %1, i32 %24) #11
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %104, label %103

27:                                               ; preds = %12
  %28 = icmp sgt i64 %3, 8
  br i1 %28, label %29, label %101

29:                                               ; preds = %27
  %30 = icmp eq i32 %22, 86032
  %31 = icmp sgt i64 %3, 23
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %97

33:                                               ; preds = %29
  %34 = tail call i32 @ffio_ensure_seekback(%struct.AVIOContext* %1, i64 8) #11
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %104, label %36

36:                                               ; preds = %33
  %37 = tail call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  %38 = add nsw i64 %3, -8
  %39 = and i64 %37, 4294967295
  %40 = icmp eq i64 %39, 1718775137
  %41 = lshr i64 %37, 32
  %42 = icmp ule i64 %41, %38
  %43 = and i1 %42, %40
  %44 = icmp ugt i64 %37, 34359738367
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %36
  %47 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 -8) #11
  br label %97

48:                                               ; preds = %36
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %50 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %97

53:                                               ; preds = %48
  store i32 36, i32* %50, align 8
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %55 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i64 0, i32 3
  %56 = bitcast i8** %55 to i8*
  %57 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 64
  %60 = sext i32 %59 to i64
  %61 = tail call i32 @av_reallocp(i8* %56, i64 %60) #11
  %62 = icmp slt i32 %61, 0
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  br i1 %62, label %64, label %66

64:                                               ; preds = %53
  %65 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i64 0, i32 4
  store i32 0, i32* %65, align 8
  br label %104

66:                                               ; preds = %53
  %67 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i64 0, i32 3
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 64
  %72 = sext i32 %71 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 0, i64 %72, i1 false)
  %73 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 36) #14, !srcloc !3
  %74 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %75 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %74, i64 0, i32 3
  %76 = bitcast i8** %75 to i32**
  %77 = load i32*, i32** %76, align 8
  store i32 %73, i32* %77, align 1
  %78 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 1667329121) #14, !srcloc !3
  %79 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %80 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %79, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  %83 = bitcast i8* %82 to i32*
  store i32 %78, i32* %83, align 1
  %84 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %37) #14, !srcloc !4
  %85 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %86 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %85, i64 0, i32 3
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 12
  %89 = bitcast i8* %88 to i64*
  store i64 %84, i64* %89, align 1
  %90 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %19, align 8
  %91 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %90, i64 0, i32 3
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 20
  %94 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* %93, i32 16) #11
  %95 = add nsw i64 %3, -32
  %96 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %95) #11
  br label %104

97:                                               ; preds = %48, %46, %29
  %98 = phi i64 [ %3, %29 ], [ %3, %46 ], [ %38, %48 ]
  %99 = tail call i32 @mov_read_default(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %98)
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %104, label %103

101:                                              ; preds = %27
  %102 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %3) #11
  br label %103

103:                                              ; preds = %101, %97, %23
  br label %104

104:                                              ; preds = %33, %66, %64, %97, %23, %10, %4, %103
  %105 = phi i32 [ 0, %103 ], [ 0, %4 ], [ -1094995529, %10 ], [ %25, %23 ], [ %99, %97 ], [ %34, %33 ], [ 0, %66 ], [ %61, %64 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_esds(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = tail call i32 @ff_mov_read_esds(%struct.AVFormatContext* %6, %struct.AVIOContext* %1) #11
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dac3(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = tail call i8* @av_stream_new_side_data(%struct.AVStream* %16, i32 7, i32 4) #11
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %57, label %20

20:                                               ; preds = %10
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = lshr i32 %21, 14
  %23 = and i32 %22, 7
  %24 = lshr i32 %21, 11
  %25 = and i32 %24, 7
  %26 = lshr i32 %21, 10
  %27 = and i32 %26, 1
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @constinit, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %27, %30
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %34 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i64 0, i32 22
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %28
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i64
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i64 0, i32 21
  store i64 %37, i64* %39, align 8
  %40 = icmp eq i32 %27, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %20
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %43 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i64 0, i32 21
  %44 = load i64, i64* %43, align 8
  %45 = or i64 %44, 8
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %20, %41
  store i32 %23, i32* %18, align 4
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %48 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i64 0, i32 22
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %49, 1
  %51 = icmp eq i32 %23, 7
  %52 = and i1 %51, %50
  %53 = select i1 %52, i32 8, i32 %23
  store i32 %53, i32* %18, align 4
  %54 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 2
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %54, align 8
  %56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i64 0, i32 91
  store i32 %53, i32* %56, align 8
  br label %57

57:                                               ; preds = %10, %4, %46
  %58 = phi i32 [ 0, %46 ], [ 0, %4 ], [ -12, %10 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dec3(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = tail call i8* @av_stream_new_side_data(%struct.AVStream* %16, i32 7, i32 4) #11
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %10
  %21 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %23 = lshr i32 %22, 12
  %24 = and i32 %23, 31
  %25 = lshr i32 %22, 9
  %26 = and i32 %25, 7
  %27 = and i32 %22, 256
  %28 = zext i32 %26 to i64
  %29 = getelementptr inbounds [8 x i16], [8 x i16]* @avpriv_ac3_channel_layout_tab, i64 0, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %34 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i64 0, i32 21
  store i64 %31, i64* %34, align 8
  %35 = icmp eq i32 %27, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %20
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i64 0, i32 21
  %39 = load i64, i64* %38, align 8
  %40 = or i64 %39, 8
  store i64 %40, i64* %38, align 8
  br label %41

41:                                               ; preds = %20, %36
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %43 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i64 0, i32 21
  %44 = load i64, i64* %43, align 8
  %45 = tail call i32 @av_get_channel_layout_nb_channels(i64 %44) #11
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %47 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i64 0, i32 22
  store i32 %45, i32* %47, align 8
  store i32 %24, i32* %18, align 4
  %48 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %32, align 8
  %49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %48, i64 0, i32 22
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 1
  %52 = icmp eq i32 %24, 7
  %53 = and i1 %52, %51
  %54 = select i1 %53, i32 8, i32 %24
  store i32 %54, i32* %18, align 4
  %55 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 2
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %55, align 8
  %57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i64 0, i32 91
  store i32 %54, i32* %57, align 8
  br label %58

58:                                               ; preds = %10, %4, %41
  %59 = phi i32 [ 0, %41 ], [ 0, %4 ], [ -12, %10 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_ddts(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [84 x i8], align 16
  %6 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 84, i1 false)
  %7 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %6, i32 20) #11
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %113, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %10, align 8
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i64 0, i32 6
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %113, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i64 0, i32 7
  %17 = load %struct.AVStream**, %struct.AVStream*** %16, align 8
  %18 = add i32 %13, -1
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 %19
  %21 = load %struct.AVStream*, %struct.AVStream** %20, align 8
  %22 = bitcast [84 x i8]* %5 to i32*
  %23 = load i32, i32* %22, align 16
  %24 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %23) #14
  %25 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %24) #14, !srcloc !7
  %26 = shl i32 %25, 16
  %27 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 2
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 2
  %30 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %29) #14, !srcloc !3
  %31 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %30) #14, !srcloc !7
  %32 = or i32 %31, %26
  %33 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i64 0, i32 19
  %34 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %35 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %34, i64 0, i32 23
  store i32 %32, i32* %35, align 4
  %36 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %37 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %36, i64 0, i32 23
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 1
  br i1 %39, label %40, label %43

40:                                               ; preds = %15
  %41 = bitcast %struct.AVFormatContext** %10 to i8**
  %42 = load i8*, i8** %41, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 %38) #11
  br label %113

43:                                               ; preds = %15
  %44 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 8
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %46) #14
  %48 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %47) #14, !srcloc !7
  %49 = shl i32 %48, 16
  %50 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 10
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 2
  %53 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %52) #14, !srcloc !3
  %54 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %53) #14, !srcloc !7
  %55 = or i32 %54, %49
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %36, i64 0, i32 6
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 12
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %60) #14, !srcloc !3
  %62 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %61) #14, !srcloc !7
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %64 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i64 0, i32 7
  store i32 %62, i32* %64, align 8
  %65 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 13
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %67) #14, !srcloc !3
  %69 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -2, i32 %68) #14, !srcloc !7
  %70 = getelementptr inbounds [84 x i8], [84 x i8]* %5, i64 0, i64 17
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 1
  %73 = call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %72) #14, !srcloc !3
  %74 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -16, i32 %73) #14, !srcloc !7
  %75 = icmp ult i32 %69, 3
  br i1 %75, label %79, label %76

76:                                               ; preds = %43
  %77 = icmp eq i32 %69, 3
  %78 = select i1 %77, i32 4096, i32 0
  br label %83

79:                                               ; preds = %43
  %80 = sext i32 %69 to i64
  %81 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.mov_read_ddts, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %79, %76
  %84 = phi i32 [ %78, %76 ], [ %82, %79 ]
  %85 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %86 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %85, i64 0, i32 25
  store i32 %84, i32* %86, align 4
  %87 = icmp ugt i32 %74, 255
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = bitcast %struct.AVFormatContext** %10 to i8**
  %90 = load i8*, i8** %89, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %90, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.197, i64 0, i64 0)) #11
  br label %91

91:                                               ; preds = %88, %83
  %92 = shl i32 %74, 2
  %93 = and i32 %92, 4
  %94 = lshr i32 %74, 1
  %95 = and i32 %94, 1
  %96 = and i32 %74, 4
  %97 = shl nuw nsw i32 %96, 7
  %98 = shl nuw nsw i32 %96, 8
  %99 = and i32 %74, 10
  %100 = or i32 %99, %95
  %101 = or i32 %100, %93
  %102 = or i32 %101, %97
  %103 = or i32 %102, %98
  %104 = zext i32 %103 to i64
  %105 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %106 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %105, i64 0, i32 21
  store i64 %104, i64* %106, align 8
  %107 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %108 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %107, i64 0, i32 21
  %109 = load i64, i64* %108, align 8
  %110 = call i32 @av_get_channel_layout_nb_channels(i64 %109) #11
  %111 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %33, align 8
  %112 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %111, i64 0, i32 22
  store i32 %110, i32* %112, align 8
  br label %113

113:                                              ; preds = %9, %4, %91, %40
  %114 = phi i32 [ -1094995529, %40 ], [ 0, %91 ], [ %7, %4 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %6) #11
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_wide(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = icmp slt i64 %3, 8
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = add nsw i64 %3, -4
  %11 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %10) #11
  br label %22

12:                                               ; preds = %6
  %13 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %14 = add nsw i64 %3, -8
  %15 = icmp eq i32 %13, 1952539757
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %14) #11
  br label %22

18:                                               ; preds = %12
  %19 = icmp eq i64 %14, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 5
  store i32 1, i32* %21, align 4
  br label %22

22:                                               ; preds = %20, %18, %4, %16, %9
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_wfex(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %17, align 8
  %19 = trunc i64 %3 to i32
  %20 = tail call i32 @ff_get_wav_header(%struct.AVFormatContext* %6, %struct.AVIOContext* %1, %struct.AVCodecParameters* %18, i32 %19, i32 0) #11
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = bitcast %struct.AVFormatContext** %5 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.198, i64 0, i64 0)) #11
  br label %25

25:                                               ; preds = %10, %22, %4
  %26 = phi i32 [ 0, %4 ], [ %20, %22 ], [ %20, %10 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_cmov(%struct.MOVContext* nocapture readonly, %struct.AVIOContext* nocapture readnone, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = bitcast %struct.AVFormatContext** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.199, i64 0, i64 0)) #11
  ret i32 -38
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_chan(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i64 %3, 16
  %11 = or i1 %10, %9
  br i1 %11, label %23, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %8, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %21 = add nsw i64 %3, -4
  %22 = tail call i32 @ff_mov_read_chan(%struct.AVFormatContext* %20, %struct.AVIOContext* %1, %struct.AVStream* %18, i64 %21) #11
  br label %23

23:                                               ; preds = %4, %12
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dvc1(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = add i64 %3, -7
  %18 = icmp ugt i64 %17, 268435448
  br i1 %18, label %33, label %19

19:                                               ; preds = %10
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = and i32 %20, 240
  %22 = icmp eq i32 %21, 192
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 6, i32 1) #11
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %26 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %27 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %26, align 8
  %28 = trunc i64 %3 to i32
  %29 = add nsw i32 %28, -7
  %30 = tail call i32 @ff_get_extradata(%struct.AVFormatContext* %25, %struct.AVCodecParameters* %27, %struct.AVIOContext* %1, i32 %29) #11
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  br label %33

33:                                               ; preds = %23, %19, %10, %4
  %34 = phi i32 [ 0, %4 ], [ -1094995529, %10 ], [ 0, %19 ], [ %32, %23 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_sbgp(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %77, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %21 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %22 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %23 = icmp eq i32 %22, 544235890
  br i1 %23, label %24, label %77

24:                                               ; preds = %10
  %25 = and i32 %20, 255
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %29

29:                                               ; preds = %27, %24
  %30 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 56
  %34 = load %struct.MOVSbgp*, %struct.MOVSbgp** %33, align 8
  %35 = icmp eq %struct.MOVSbgp* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = bitcast %struct.MOVSbgp* %34 to i8*
  %38 = bitcast %struct.MOVSbgp** %33 to i8**
  br label %44

39:                                               ; preds = %32
  %40 = bitcast %struct.AVFormatContext** %5 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.200, i64 0, i64 0)) #11
  %42 = bitcast %struct.MOVSbgp** %33 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %36, %39
  %45 = phi i8** [ %38, %36 ], [ %42, %39 ]
  %46 = phi i8* [ %37, %36 ], [ %43, %39 ]
  tail call void @av_free(i8* %46) #11
  %47 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 55
  store i32 0, i32* %47, align 4
  %48 = zext i32 %30 to i64
  %49 = tail call i8* @av_malloc_array(i64 %48, i64 8) #11
  store i8* %49, i8** %45, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %77, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  br label %53

53:                                               ; preds = %58, %51
  %54 = phi i64 [ 0, %51 ], [ %65, %58 ]
  %55 = phi i32 [ 0, %51 ], [ %66, %58 ]
  %56 = load i32, i32* %52, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %60 = load %struct.MOVSbgp*, %struct.MOVSbgp** %33, align 8
  %61 = getelementptr inbounds %struct.MOVSbgp, %struct.MOVSbgp* %60, i64 %54, i32 0
  store i32 %59, i32* %61, align 4
  %62 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %63 = load %struct.MOVSbgp*, %struct.MOVSbgp** %33, align 8
  %64 = getelementptr inbounds %struct.MOVSbgp, %struct.MOVSbgp* %63, i64 %54, i32 1
  store i32 %62, i32* %64, align 4
  %65 = add nuw nsw i64 %54, 1
  %66 = add nuw i32 %55, 1
  %67 = icmp eq i64 %65, %48
  br i1 %67, label %70, label %53

68:                                               ; preds = %53
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %58, %68
  %71 = phi i32 [ %69, %68 ], [ %66, %58 ]
  store i32 %71, i32* %47, align 4
  %72 = load i32, i32* %52, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = bitcast %struct.AVFormatContext** %5 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.201, i64 0, i64 0)) #11
  br label %77

77:                                               ; preds = %70, %44, %29, %10, %4, %74
  %78 = phi i32 [ -541478725, %74 ], [ 0, %4 ], [ 0, %10 ], [ 0, %29 ], [ -12, %44 ], [ 0, %70 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_uuid(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [16 x i8], align 16
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = add i64 %3, -16
  %9 = icmp ugt i64 %8, 2147483630
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  br i1 %9, label %210, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %11, align 8
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %210, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 7
  %18 = load %struct.AVStream**, %struct.AVStream*** %17, align 8
  %19 = add i32 %14, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %18, i64 %20
  %22 = load %struct.AVStream*, %struct.AVStream** %21, align 8
  %23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i64 0, i32 3
  %24 = bitcast i8** %23 to %struct.MOVStreamContext**
  %25 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %24, align 8
  %26 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %7, i32 16) #11
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %210, label %28

28:                                               ; preds = %16
  %29 = call i32 @bcmp(i8* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mov_read_uuid.uuid_isml_manifest, i64 0, i64 0), i64 16)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %88

31:                                               ; preds = %28
  %32 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %33 = and i64 %3, -4
  %34 = icmp eq i64 %33, 16
  br i1 %34, label %85, label %35

35:                                               ; preds = %31
  %36 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %37 = add nsw i64 %3, -19
  %38 = call noalias i8* @av_mallocz(i64 %37) #11
  %39 = icmp eq i8* %38, null
  br i1 %39, label %85, label %40

40:                                               ; preds = %35
  %41 = trunc i64 %3 to i32
  %42 = add nsw i32 %41, -20
  %43 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %38, i32 %42) #11
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = call i8* @av_stristr(i8* nonnull %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.202, i64 0, i64 0)) #11
  %47 = icmp eq i8* %46, null
  br i1 %47, label %87, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 29
  %50 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 28
  %51 = bitcast i32** %50 to i8**
  br label %53

52:                                               ; preds = %40
  call void @av_free(i8* nonnull %38) #11
  br label %85

53:                                               ; preds = %48, %76
  %54 = phi i8* [ %46, %48 ], [ %83, %76 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 15
  %56 = load i32, i32* %49, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %49, align 8
  %58 = load i8*, i8** %51, align 8
  %59 = sext i32 %57 to i64
  %60 = call i8* @av_realloc_f(i8* %58, i64 %59, i64 4) #11
  store i8* %60, i8** %51, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %53
  store i32 0, i32* %49, align 8
  call void @av_free(i8* nonnull %38) #11
  br label %85

63:                                               ; preds = %53
  %64 = tail call i32* @__errno_location() #14
  store i32 0, i32* %64, align 4
  %65 = call i64 @strtol(i8* %55, i8** nonnull %6, i32 10) #11
  %66 = icmp slt i64 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %63
  %68 = load i32, i32* %64, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %67
  %71 = load i8*, i8** %6, align 8
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 34
  %74 = trunc i64 %65 to i32
  %75 = select i1 %73, i32 %74, i32 0
  br label %76

76:                                               ; preds = %70, %63, %67
  %77 = phi i32 [ 0, %67 ], [ 0, %63 ], [ %75, %70 ]
  %78 = load i32*, i32** %50, align 8
  %79 = load i32, i32* %49, align 8
  %80 = add nsw i32 %79, -1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %78, i64 %81
  store i32 %77, i32* %82, align 4
  %83 = call i8* @av_stristr(i8* %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.202, i64 0, i64 0)) #11
  %84 = icmp eq i8* %83, null
  br i1 %84, label %87, label %53

85:                                               ; preds = %52, %62, %31, %35
  %86 = phi i32 [ -12, %35 ], [ -1094995529, %31 ], [ -12, %62 ], [ %43, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %210

87:                                               ; preds = %76, %45
  call void @av_free(i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %209

88:                                               ; preds = %28
  %89 = call i32 @bcmp(i8* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mov_read_uuid.uuid_xmp, i64 0, i64 0), i64 16)
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %113

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 27
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %91
  %96 = add nsw i64 %3, -15
  %97 = call noalias i8* @av_mallocz(i64 %96) #11
  %98 = icmp eq i8* %97, null
  br i1 %98, label %210, label %99

99:                                               ; preds = %95
  %100 = trunc i64 %8 to i32
  %101 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %97, i32 %100) #11
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  call void @av_free(i8* nonnull %97) #11
  br label %210

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %97, i64 %8
  store i8 0, i8* %105, align 1
  %106 = load %struct.AVFormatContext*, %struct.AVFormatContext** %11, align 8
  %107 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %106, i64 0, i32 29
  %108 = call i32 @av_dict_set(%struct.AVDictionary** %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.203, i64 0, i64 0), i8* nonnull %97, i32 8) #11
  br label %209

109:                                              ; preds = %91
  %110 = call i64 @avio_skip(%struct.AVIOContext* %1, i64 %8) #11
  %111 = icmp sgt i64 %110, -1
  %112 = trunc i64 %110 to i32
  br i1 %111, label %209, label %210

113:                                              ; preds = %88
  %114 = call i32 @bcmp(i8* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mov_read_uuid.uuid_spherical, i64 0, i64 0), i64 16)
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %209

116:                                              ; preds = %113
  %117 = add nsw i64 %3, -15
  %118 = call noalias i8* @av_malloc(i64 %117) #11
  %119 = icmp eq i8* %118, null
  br i1 %119, label %210, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i8, i8* %118, i64 %8
  store i8 0, i8* %121, align 1
  %122 = trunc i64 %8 to i32
  %123 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %118, i32 %122) #11
  %124 = icmp slt i32 %123, 0
  br i1 %124, label %202, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %25, i64 0, i32 66
  %127 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %126, align 8
  %128 = icmp eq %struct.AVSphericalMapping* %127, null
  br i1 %128, label %129, label %203

129:                                              ; preds = %125
  %130 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.205, i64 0, i64 0)) #11
  %131 = icmp eq i8* %130, null
  br i1 %131, label %203, label %132

132:                                              ; preds = %129
  %133 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.206, i64 0, i64 0)) #11
  %134 = icmp eq i8* %133, null
  br i1 %134, label %203, label %135

135:                                              ; preds = %132
  %136 = call i8* @av_stristr(i8* nonnull %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.207, i64 0, i64 0)) #11
  %137 = icmp eq i8* %136, null
  br i1 %137, label %203, label %138

138:                                              ; preds = %135
  %139 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.208, i64 0, i64 0)) #11
  %140 = icmp eq i8* %139, null
  br i1 %140, label %203, label %141

141:                                              ; preds = %138
  %142 = call i8* @av_stristr(i8* nonnull %139, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.207, i64 0, i64 0)) #11
  %143 = icmp eq i8* %142, null
  br i1 %143, label %203, label %144

144:                                              ; preds = %141
  %145 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.209, i64 0, i64 0)) #11
  %146 = icmp eq i8* %145, null
  br i1 %146, label %203, label %147

147:                                              ; preds = %144
  %148 = call i8* @av_stristr(i8* nonnull %145, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.210, i64 0, i64 0)) #11
  %149 = icmp eq i8* %148, null
  br i1 %149, label %203, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %25, i64 0, i32 67
  %152 = call %struct.AVSphericalMapping* @av_spherical_alloc(i64* %151) #11
  store %struct.AVSphericalMapping* %152, %struct.AVSphericalMapping** %126, align 8
  %153 = icmp eq %struct.AVSphericalMapping* %152, null
  br i1 %153, label %203, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %152, i64 0, i32 0
  store i32 0, i32* %155, align 4
  %156 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.211, i64 0, i64 0)) #11
  %157 = icmp eq i8* %156, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %25, i64 0, i32 65
  %160 = load %struct.AVStereo3D*, %struct.AVStereo3D** %159, align 8
  %161 = icmp eq %struct.AVStereo3D* %160, null
  br i1 %161, label %162, label %175

162:                                              ; preds = %158
  %163 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i64 0, i64 0)) #11
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %169

165:                                              ; preds = %162
  %166 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.213, i64 0, i64 0)) #11
  %167 = icmp eq i8* %166, null
  %168 = select i1 %167, i32 0, i32 2
  br label %169

169:                                              ; preds = %165, %162
  %170 = phi i32 [ 1, %162 ], [ %168, %165 ]
  %171 = call %struct.AVStereo3D* @av_stereo3d_alloc() #11
  store %struct.AVStereo3D* %171, %struct.AVStereo3D** %159, align 8
  %172 = icmp eq %struct.AVStereo3D* %171, null
  br i1 %172, label %203, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %171, i64 0, i32 0
  store i32 %170, i32* %174, align 4
  br label %175

175:                                              ; preds = %173, %158, %154
  %176 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.214, i64 0, i64 0)) #11
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = call i64 @strtol(i8* nocapture nonnull %176, i8** null, i32 10) #11
  %180 = trunc i64 %179 to i32
  %181 = shl i32 %180, 16
  %182 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %126, align 8
  %183 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %182, i64 0, i32 1
  store i32 %181, i32* %183, align 4
  br label %184

184:                                              ; preds = %178, %175
  %185 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.215, i64 0, i64 0)) #11
  %186 = icmp eq i8* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %184
  %188 = call i64 @strtol(i8* nocapture nonnull %185, i8** null, i32 10) #11
  %189 = trunc i64 %188 to i32
  %190 = shl i32 %189, 16
  %191 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %126, align 8
  %192 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %191, i64 0, i32 2
  store i32 %190, i32* %192, align 4
  br label %193

193:                                              ; preds = %187, %184
  %194 = call i8* @av_stristr(i8* nonnull %118, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.216, i64 0, i64 0)) #11
  %195 = icmp eq i8* %194, null
  br i1 %195, label %203, label %196

196:                                              ; preds = %193
  %197 = call i64 @strtol(i8* nocapture nonnull %194, i8** null, i32 10) #11
  %198 = trunc i64 %197 to i32
  %199 = shl i32 %198, 16
  %200 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %126, align 8
  %201 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %200, i64 0, i32 3
  store i32 %199, i32* %201, align 4
  br label %203

202:                                              ; preds = %120
  call void @av_free(i8* nonnull %118) #11
  br label %210

203:                                              ; preds = %125, %129, %132, %135, %138, %141, %144, %147, %150, %169, %193, %196
  call void @av_free(i8* nonnull %118) #11
  %204 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %126, align 8
  %205 = icmp eq %struct.AVSphericalMapping* %204, null
  br i1 %205, label %206, label %209

206:                                              ; preds = %203
  %207 = bitcast %struct.AVFormatContext** %11 to i8**
  %208 = load i8*, i8** %207, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %208, i32 24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.204, i64 0, i64 0)) #11
  br label %209

209:                                              ; preds = %104, %87, %203, %206, %113, %109
  br label %210

210:                                              ; preds = %116, %95, %103, %202, %85, %16, %10, %4, %109, %209
  %211 = phi i32 [ 0, %209 ], [ %112, %109 ], [ -1094995529, %4 ], [ 0, %10 ], [ %26, %16 ], [ %123, %202 ], [ %86, %85 ], [ -12, %95 ], [ %101, %103 ], [ -12, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i32 %211
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_targa_y216(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = tail call fastcc i32 @mov_read_extradata(%struct.MOVContext* %0, %struct.AVIOContext* %1, i32 %2, i64 %3, i32 32773)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %40

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %8, align 8
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = add i32 %11, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %17
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 19
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %20, align 8
  %22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 39
  br i1 %24, label %25, label %40

25:                                               ; preds = %13
  %26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 36
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #11
  %32 = zext i16 %31 to i32
  %33 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 12
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %27, i64 38
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #11
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i64 0, i32 11
  store i32 %38, i32* %39, align 8
  br label %40

40:                                               ; preds = %13, %25, %7, %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_free(%struct.MOVContext* nocapture, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [16 x i8], align 16
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = icmp slt i64 %3, 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = icmp ult i64 %3, 16
  %10 = select i1 %9, i64 %3, i64 16
  %11 = trunc i64 %10 to i32
  %12 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %6, i32 %11) #11
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %18
  %23 = bitcast [16 x i8]* %5 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = icmp eq i64 %24, 1880922899966422593
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 31
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i32 2, i32* %27, align 8
  br label %31

31:                                               ; preds = %26, %30, %14, %18, %22, %8, %4
  %32 = phi i32 [ 0, %4 ], [ %12, %8 ], [ 0, %22 ], [ 0, %18 ], [ 0, %14 ], [ 0, %30 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_custom(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 %3) #11
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = icmp slt i64 %14, 0
  %16 = select i1 %15, i64 9223372036854775807, i64 -9223372036854775808
  %17 = select i1 %13, i64 %16, i64 %14
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  store i8* null, i8** %5, align 8
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store i8* null, i8** %6, align 8
  %20 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store i8* null, i8** %7, align 8
  %21 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %21, align 8
  %23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %127, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i64 0, i32 7
  %28 = load %struct.AVStream**, %struct.AVStream*** %27, align 8
  %29 = add i32 %24, -1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %28, i64 %30
  %32 = load %struct.AVStream*, %struct.AVStream** %31, align 8
  %33 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %32, i64 0, i32 3
  %34 = bitcast i8** %33 to %struct.MOVStreamContext**
  %35 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %34, align 8
  %36 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %37 = sub nsw i64 %17, %36
  %38 = icmp slt i64 %37, 13
  br i1 %38, label %86, label %43

39:                                               ; preds = %80
  %40 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %41 = sub nsw i64 %17, %40
  %42 = icmp slt i64 %41, 13
  br i1 %42, label %86, label %43

43:                                               ; preds = %26, %39
  %44 = phi i32 [ %84, %39 ], [ 0, %26 ]
  %45 = phi i32 [ %76, %39 ], [ 0, %26 ]
  %46 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %47 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %48 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %49 = icmp ult i32 %46, 12
  br i1 %49, label %86, label %50

50:                                               ; preds = %43
  %51 = add i32 %46, -12
  %52 = zext i32 %51 to i64
  %53 = tail call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #11
  %54 = sub nsw i64 %17, %53
  %55 = icmp slt i64 %54, %52
  br i1 %55, label %86, label %56

56:                                               ; preds = %50
  switch i32 %47, label %58 [
    i32 1851876717, label %65
    i32 1701667182, label %57
  ]

57:                                               ; preds = %56
  br label %65

58:                                               ; preds = %56
  %59 = icmp eq i32 %47, 1635017060
  %60 = icmp ugt i32 %51, 4
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %86

62:                                               ; preds = %58
  %63 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %64 = add i32 %46, -16
  br label %65

65:                                               ; preds = %56, %57, %62
  %66 = phi i8** [ %5, %57 ], [ %6, %62 ], [ %7, %56 ]
  %67 = phi i32 [ %51, %57 ], [ %64, %62 ], [ %51, %56 ]
  %68 = load i8*, i8** %66, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %86

70:                                               ; preds = %65
  %71 = add nuw i32 %67, 1
  %72 = zext i32 %71 to i64
  %73 = tail call noalias i8* @av_malloc(i64 %72) #11
  store i8* %73, i8** %66, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %86, label %75

75:                                               ; preds = %70
  %76 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* nonnull %73, i32 %67) #11
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast i8** %66 to i8*
  call void @av_freep(i8* %79) #11
  br label %86

80:                                               ; preds = %75
  %81 = load i8*, i8** %66, align 8
  %82 = zext i32 %67 to i64
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  store i8 0, i8* %83, align 1
  %84 = add nuw nsw i32 %44, 1
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %86, label %39

86:                                               ; preds = %80, %39, %50, %43, %58, %65, %70, %26, %78
  %87 = phi i32 [ %76, %78 ], [ 0, %26 ], [ -12, %70 ], [ %45, %65 ], [ %45, %58 ], [ %45, %43 ], [ %45, %50 ], [ %76, %39 ], [ %76, %80 ]
  %88 = load i8*, i8** %7, align 8
  %89 = icmp ne i8* %88, null
  %90 = load i8*, i8** %5, align 8
  %91 = icmp ne i8* %90, null
  %92 = and i1 %89, %91
  %93 = load i8*, i8** %6, align 8
  %94 = icmp ne i8* %93, null
  %95 = and i1 %92, %94
  br i1 %95, label %96, label %122

96:                                               ; preds = %86
  %97 = call i32 @strcmp(i8* nonnull %90, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i64 0, i64 0)) #13
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %113

99:                                               ; preds = %96
  %100 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #11
  store i32 -1431655766, i32* %8, align 4
  %101 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #11
  store i32 -1431655766, i32* %9, align 4
  %102 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #11
  store i32 -1431655766, i32* %10, align 4
  %103 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.219, i64 0, i64 0), i32* nonnull %8, i32* nonnull %9, i32* nonnull %10) #11
  %104 = icmp eq i32 %103, 3
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = load i32, i32* %8, align 4
  %107 = add i32 %106, -1
  %108 = icmp ult i32 %107, 16383
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %35, i64 0, i32 54
  store i32 %106, i32* %110, align 8
  br label %111

111:                                              ; preds = %105, %109, %99
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #11
  %112 = load i8*, i8** %5, align 8
  br label %113

113:                                              ; preds = %111, %96
  %114 = phi i8* [ %112, %111 ], [ %90, %96 ]
  %115 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.220, i64 0, i64 0)) #13
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %113
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %21, align 8
  %119 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %118, i64 0, i32 29
  %120 = load i8*, i8** %6, align 8
  %121 = call i32 @av_dict_set(%struct.AVDictionary** %119, i8* %114, i8* %120, i32 12) #11
  store i8* null, i8** %6, align 8
  store i8* null, i8** %5, align 8
  br label %125

122:                                              ; preds = %86
  %123 = bitcast %struct.AVFormatContext** %21 to i8**
  %124 = load i8*, i8** %123, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 40, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.221, i64 0, i64 0), i64 %3) #11
  br label %125

125:                                              ; preds = %113, %117, %122
  %126 = call i64 @avio_seek(%struct.AVIOContext* %1, i64 %17, i32 0) #11
  call void @av_freep(i8* nonnull %18) #11
  call void @av_freep(i8* nonnull %19) #11
  call void @av_freep(i8* nonnull %20) #11
  br label %127

127:                                              ; preds = %4, %125
  %128 = phi i32 [ %87, %125 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  ret i32 %128
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_frma(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  %7 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %8, align 8
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 7
  %15 = load %struct.AVStream**, %struct.AVStream*** %14, align 8
  %16 = add i32 %11, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %15, i64 %17
  %19 = load %struct.AVStream*, %struct.AVStream** %18, align 8
  %20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 3
  %21 = bitcast i8** %20 to %struct.MOVStreamContext**
  %22 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %21, align 8
  %23 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %22, i64 0, i32 71
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %38 [
    i32 1986227813, label %25
    i32 1633906277, label %25
  ]

25:                                               ; preds = %13, %13
  %26 = tail call fastcc i32 @mov_codec_id(%struct.AVStream* %19, i32 %7)
  %27 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i64 0, i32 19
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = icmp eq i32 %30, %26
  %33 = or i1 %31, %32
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = bitcast %struct.AVFormatContext** %8 to i8**
  %36 = load i8*, i8** %35, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.222, i64 0, i64 0), i32* nonnull %5, i32 %30) #11
  br label %42

37:                                               ; preds = %25
  store i32 %26, i32* %29, align 4
  store i32 %7, i32* %23, align 8
  br label %42

38:                                               ; preds = %13
  %39 = icmp eq i32 %7, %24
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = bitcast %struct.AVFormatContext* %9 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.223, i64 0, i64 0), i32* nonnull %5, i32* %23) #11
  br label %42

42:                                               ; preds = %34, %37, %40, %38, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_senc(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca %struct.MOVEncryptionIndex*, align 8
  %6 = alloca %struct.MOVStreamContext*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %struct.MOVEncryptionIndex** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store %struct.MOVEncryptionIndex* inttoptr (i64 -6148914691236517206 to %struct.MOVEncryptionIndex*), %struct.MOVEncryptionIndex** %5, align 8
  %9 = bitcast %struct.MOVStreamContext** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %struct.MOVStreamContext* inttoptr (i64 -6148914691236517206 to %struct.MOVStreamContext*), %struct.MOVStreamContext** %6, align 8
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %7, align 4
  %11 = call fastcc i32 @get_current_encryption_info(%struct.MOVContext* %0, %struct.MOVEncryptionIndex** nonnull %5, %struct.MOVStreamContext** nonnull %6)
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %85

13:                                               ; preds = %4
  %14 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %5, align 8
  %15 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %20 = bitcast %struct.AVFormatContext** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.224, i64 0, i64 0)) #11
  br label %85

22:                                               ; preds = %13
  %23 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %24 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %25 = and i32 %24, 2
  %26 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %27 = icmp ugt i32 %26, 268435454
  br i1 %27, label %85, label %28

28:                                               ; preds = %22
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %84, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 1
  %32 = bitcast %struct.AVEncryptionInfo*** %31 to i8**
  %33 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %6, align 8
  %34 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %35 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %36 = bitcast %struct.AVFormatContext** %35 to i8**
  %37 = zext i32 %26 to i64
  br label %38

38:                                               ; preds = %81, %30
  %39 = phi i64 [ 0, %30 ], [ %82, %81 ]
  %40 = icmp ugt i64 %39, 1048575
  %41 = select i1 %40, i64 %39, i64 1048575
  %42 = trunc i64 %41 to i32
  %43 = add nuw i32 %42, 1
  %44 = icmp ugt i32 %43, %26
  %45 = select i1 %44, i32 %26, i32 %43
  %46 = load i8*, i8** %32, align 8
  %47 = zext i32 %45 to i64
  %48 = shl nuw nsw i64 %47, 3
  %49 = call i8* @av_fast_realloc(i8* %46, i32* nonnull %7, i64 %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %38
  store i8* %49, i8** %32, align 8
  %52 = bitcast i8* %49 to %struct.AVEncryptionInfo**
  %53 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %52, i64 %39
  %54 = call fastcc i32 @mov_read_sample_encryption_info(%struct.MOVContext* %0, %struct.AVIOContext* %1, %struct.MOVStreamContext* %33, %struct.AVEncryptionInfo** %53, i32 %25)
  br label %55

55:                                               ; preds = %38, %51
  %56 = phi i32 [ %54, %51 ], [ -12, %38 ]
  %57 = load i32, i32* %34, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = load i8*, i8** %36, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.225, i64 0, i64 0)) #11
  br label %63

61:                                               ; preds = %55
  %62 = icmp slt i32 %56, 0
  br i1 %62, label %63, label %81

63:                                               ; preds = %61, %59
  %64 = phi i32 [ -1094995529, %59 ], [ %56, %61 ]
  %65 = trunc i64 %39 to i32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %63
  %68 = and i64 %39, 4294967295
  br label %69

69:                                               ; preds = %67, %69
  %70 = phi i64 [ %68, %67 ], [ %78, %69 ]
  %71 = load %struct.AVEncryptionInfo**, %struct.AVEncryptionInfo*** %31, align 8
  %72 = trunc i64 %70 to i32
  %73 = add i32 %72, -1
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %71, i64 %74
  %76 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %75, align 8
  call void @av_encryption_info_free(%struct.AVEncryptionInfo* %76) #11
  %77 = icmp eq i32 %73, 0
  %78 = add nsw i64 %70, -1
  br i1 %77, label %79, label %69

79:                                               ; preds = %69, %63
  %80 = bitcast %struct.AVEncryptionInfo*** %31 to i8*
  call void @av_freep(i8* %80) #11
  br label %85

81:                                               ; preds = %61
  %82 = add nuw nsw i64 %39, 1
  %83 = icmp eq i64 %82, %37
  br i1 %83, label %84, label %38

84:                                               ; preds = %81, %28
  store i32 %26, i32* %15, align 8
  br label %85

85:                                               ; preds = %79, %22, %4, %84, %18
  %86 = phi i32 [ 0, %18 ], [ %64, %79 ], [ 0, %84 ], [ %11, %4 ], [ -12, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_saiz(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.MOVEncryptionIndex*, align 8
  %7 = alloca %struct.MOVStreamContext*, align 8
  %8 = bitcast %struct.MOVEncryptionIndex** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store %struct.MOVEncryptionIndex* inttoptr (i64 -6148914691236517206 to %struct.MOVEncryptionIndex*), %struct.MOVEncryptionIndex** %6, align 8
  %9 = bitcast %struct.MOVStreamContext** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %struct.MOVStreamContext* inttoptr (i64 -6148914691236517206 to %struct.MOVStreamContext*), %struct.MOVStreamContext** %7, align 8
  %10 = call fastcc i32 @get_current_encryption_info(%struct.MOVContext* %0, %struct.MOVEncryptionIndex** nonnull %6, %struct.MOVStreamContext** nonnull %7)
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %120

12:                                               ; preds = %4
  %13 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %6, align 8
  %14 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %19 = bitcast %struct.AVFormatContext** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.229, i64 0, i64 0)) #11
  br label %120

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %13, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %27 = bitcast %struct.AVFormatContext** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.230, i64 0, i64 0)) #11
  br label %120

29:                                               ; preds = %21
  %30 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %31 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %68, label %34

34:                                               ; preds = %29
  %35 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %36 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %37 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %7, align 8
  %38 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %37, i64 0, i32 73, i32 2
  %39 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %38, align 8
  %40 = icmp eq %struct.AVEncryptionInfo* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %39, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %35, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %47 = bitcast %struct.AVFormatContext** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.231, i64 0, i64 0)) #11
  br label %120

49:                                               ; preds = %41
  %50 = icmp eq i32 %36, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %53 = bitcast %struct.AVFormatContext** %52 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 48, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.232, i64 0, i64 0)) #11
  br label %120

55:                                               ; preds = %34
  %56 = or i32 %35, 16
  %57 = icmp eq i32 %56, 1667591795
  %58 = icmp eq i32 %35, 1667392305
  %59 = or i1 %58, %57
  %60 = icmp eq i32 %35, 1667392371
  %61 = or i1 %60, %59
  %62 = icmp eq i32 %36, 0
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %120

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %66 = bitcast %struct.AVFormatContext** %65 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %67, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.233, i64 0, i64 0)) #11
  br label %120

68:                                               ; preds = %29
  %69 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %7, align 8
  %70 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %69, i64 0, i32 73, i32 2
  %71 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %70, align 8
  %72 = icmp eq %struct.AVEncryptionInfo* %71, null
  br i1 %72, label %120, label %73

73:                                               ; preds = %49, %68
  %74 = phi %struct.MOVStreamContext* [ %37, %49 ], [ %69, %68 ]
  %75 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %76 = trunc i32 %75 to i8
  %77 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %13, i64 0, i32 4
  store i8 %76, i8* %77, align 8
  %78 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %79 = zext i32 %78 to i64
  store i64 %79, i64* %22, align 8
  %80 = load i8, i8* %77, align 8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %114

82:                                               ; preds = %73
  %83 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %13, i64 0, i32 2
  %84 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #11
  store i32 0, i32* %5, align 4
  br label %85

85:                                               ; preds = %103, %82
  %86 = phi i8* [ null, %82 ], [ %96, %103 ]
  %87 = phi i32 [ 0, %82 ], [ %99, %103 ]
  %88 = zext i32 %87 to i64
  %89 = icmp ult i32 %87, %78
  br i1 %89, label %90, label %108

90:                                               ; preds = %85
  %91 = load i32, i32* %5, align 4
  %92 = icmp ugt i32 %91, 2146435070
  %93 = add i32 %91, 1048576
  %94 = select i1 %92, i32 2147483647, i32 %93
  %95 = zext i32 %94 to i64
  %96 = call i8* @av_fast_realloc(i8* %86, i32* nonnull %5, i64 %95) #11
  %97 = load i32, i32* %5, align 4
  %98 = icmp ult i32 %97, %78
  %99 = select i1 %98, i32 %97, i32 %78
  %100 = sub i32 %99, %87
  %101 = icmp eq i8* %96, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %90
  call void @av_free(i8* %86) #11
  br label %109

103:                                              ; preds = %90
  %104 = getelementptr inbounds i8, i8* %96, i64 %88
  %105 = call i32 @avio_read(%struct.AVIOContext* %1, i8* %104, i32 %100) #11
  %106 = icmp eq i32 %105, %100
  br i1 %106, label %85, label %107

107:                                              ; preds = %103
  call void @av_free(i8* nonnull %96) #11
  br label %109

108:                                              ; preds = %85
  store i8* %86, i8** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #11
  br label %114

109:                                              ; preds = %102, %107
  %110 = phi i32 [ -1094995529, %107 ], [ -12, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #11
  %111 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %112 = bitcast %struct.AVFormatContext** %111 to i8**
  %113 = load i8*, i8** %112, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.234, i64 0, i64 0)) #11
  br label %120

114:                                              ; preds = %108, %73
  %115 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %13, i64 0, i32 6
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = call fastcc i32 @mov_parse_auxiliary_info(%struct.MOVContext* %0, %struct.MOVStreamContext* %74, %struct.AVIOContext* %1, %struct.MOVEncryptionIndex* %13)
  br label %120

120:                                              ; preds = %114, %68, %55, %4, %118, %109, %64, %51, %45, %25, %17
  %121 = phi i32 [ 0, %17 ], [ -1094995529, %25 ], [ 0, %45 ], [ 0, %51 ], [ %110, %109 ], [ %119, %118 ], [ -1094995529, %64 ], [ %10, %4 ], [ 0, %55 ], [ 0, %68 ], [ 0, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_saio(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca %struct.MOVEncryptionIndex*, align 8
  %6 = alloca %struct.MOVStreamContext*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %struct.MOVEncryptionIndex** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store %struct.MOVEncryptionIndex* inttoptr (i64 -6148914691236517206 to %struct.MOVEncryptionIndex*), %struct.MOVEncryptionIndex** %5, align 8
  %9 = bitcast %struct.MOVStreamContext** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store %struct.MOVStreamContext* inttoptr (i64 -6148914691236517206 to %struct.MOVStreamContext*), %struct.MOVStreamContext** %6, align 8
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %7, align 4
  %11 = call fastcc i32 @get_current_encryption_info(%struct.MOVContext* %0, %struct.MOVEncryptionIndex** nonnull %5, %struct.MOVStreamContext** nonnull %6)
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %142

13:                                               ; preds = %4
  %14 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %5, align 8
  %15 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %20 = bitcast %struct.AVFormatContext** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.238, i64 0, i64 0)) #11
  br label %142

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 6
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %28 = bitcast %struct.AVFormatContext** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.239, i64 0, i64 0)) #11
  br label %142

30:                                               ; preds = %22
  %31 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %32 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %69, label %35

35:                                               ; preds = %30
  %36 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %37 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %38 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %6, align 8
  %39 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %38, i64 0, i32 73, i32 2
  %40 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %39, align 8
  %41 = icmp eq %struct.AVEncryptionInfo* %40, null
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %36, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %48 = bitcast %struct.AVFormatContext** %47 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.240, i64 0, i64 0)) #11
  br label %142

50:                                               ; preds = %42
  %51 = icmp eq i32 %37, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %54 = bitcast %struct.AVFormatContext** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 48, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.241, i64 0, i64 0)) #11
  br label %142

56:                                               ; preds = %35
  %57 = or i32 %36, 16
  %58 = icmp eq i32 %57, 1667591795
  %59 = icmp eq i32 %36, 1667392305
  %60 = or i1 %59, %58
  %61 = icmp eq i32 %36, 1667392371
  %62 = or i1 %61, %60
  %63 = icmp eq i32 %37, 0
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %142

65:                                               ; preds = %56
  %66 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %67 = bitcast %struct.AVFormatContext** %66 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.242, i64 0, i64 0)) #11
  br label %142

69:                                               ; preds = %30
  %70 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %6, align 8
  %71 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %70, i64 0, i32 73, i32 2
  %72 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %71, align 8
  %73 = icmp eq %struct.AVEncryptionInfo* %72, null
  br i1 %73, label %142, label %74

74:                                               ; preds = %50, %69
  %75 = phi %struct.MOVStreamContext* [ %38, %50 ], [ %70, %69 ]
  %76 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i32 %76, 268435454
  br i1 %78, label %142, label %79

79:                                               ; preds = %74
  %80 = icmp eq i32 %76, 0
  br i1 %80, label %126, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %83 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 5
  %84 = bitcast i64** %83 to i8**
  %85 = icmp eq i32 %31, 0
  %86 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  %87 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 13, i32 2
  br label %88

88:                                               ; preds = %124, %81
  %89 = phi i64 [ 0, %81 ], [ %93, %124 ]
  %90 = load i32, i32* %82, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %126

92:                                               ; preds = %88
  %93 = add nuw nsw i64 %89, 1
  %94 = icmp ugt i64 %89, 1023
  %95 = trunc i64 %93 to i32
  %96 = select i1 %94, i32 %95, i32 1024
  %97 = icmp ugt i32 %96, %76
  %98 = select i1 %97, i32 %76, i32 %96
  %99 = load i8*, i8** %84, align 8
  %100 = zext i32 %98 to i64
  %101 = shl nuw nsw i64 %100, 3
  %102 = call i8* @av_fast_realloc(i8* %99, i32* nonnull %7, i64 %101) #11
  %103 = icmp eq i8* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %92
  %105 = bitcast i64** %83 to i8*
  call void @av_freep(i8* %105) #11
  br label %142

106:                                              ; preds = %92
  store i8* %102, i8** %84, align 8
  br i1 %85, label %107, label %110

107:                                              ; preds = %106
  %108 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %109 = zext i32 %108 to i64
  br label %112

110:                                              ; preds = %106
  %111 = call i64 @avio_rb64(%struct.AVIOContext* %1) #11
  br label %112

112:                                              ; preds = %110, %107
  %113 = phi i64 [ %111, %110 ], [ %109, %107 ]
  %114 = load i64*, i64** %83, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 %89
  store i64 %113, i64* %115, align 8
  %116 = load i32, i32* %86, align 8
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %124

118:                                              ; preds = %112
  %119 = load i64, i64* %87, align 8
  %120 = load i64*, i64** %83, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 %89
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, %119
  store i64 %123, i64* %121, align 8
  br label %124

124:                                              ; preds = %118, %112
  %125 = icmp eq i64 %93, %77
  br i1 %125, label %126, label %88

126:                                              ; preds = %88, %124, %79
  %127 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %132 = bitcast %struct.AVFormatContext** %131 to i8**
  %133 = load i8*, i8** %132, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %133, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.243, i64 0, i64 0)) #11
  %134 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 5
  %135 = bitcast i64** %134 to i8*
  call void @av_freep(i8* %135) #11
  br label %142

136:                                              ; preds = %126
  store i64 %77, i64* %23, align 8
  %137 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %14, i64 0, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = call fastcc i32 @mov_parse_auxiliary_info(%struct.MOVContext* %0, %struct.MOVStreamContext* %75, %struct.AVIOContext* %1, %struct.MOVEncryptionIndex* %14)
  br label %142

142:                                              ; preds = %136, %104, %74, %69, %56, %4, %140, %130, %65, %52, %46, %26, %18
  %143 = phi i32 [ 0, %18 ], [ -1094995529, %26 ], [ 0, %46 ], [ 0, %52 ], [ -1094995529, %130 ], [ %141, %140 ], [ -1094995529, %65 ], [ %11, %4 ], [ 0, %56 ], [ 0, %69 ], [ -12, %74 ], [ -12, %104 ], [ 0, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_pssh(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517206, i64* %6, align 8
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %7, align 4
  %11 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 0, i32* %8, align 4
  %12 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %12, align 8
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %144, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i64 0, i32 7
  %19 = load %struct.AVStream**, %struct.AVStream*** %18, align 8
  %20 = add i32 %15, -1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %19, i64 %21
  %23 = load %struct.AVStream*, %struct.AVStream** %22, align 8
  %24 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %25 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %26 = tail call %struct.AVEncryptionInitInfo* @av_encryption_init_info_alloc(i32 16, i32 0, i32 16, i32 0) #11
  %27 = icmp eq %struct.AVEncryptionInitInfo* %26, null
  br i1 %27, label %144, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %26, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %30, i32 16) #11
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %struct.AVFormatContext** %12 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.244, i64 0, i64 0)) #11
  br label %141

36:                                               ; preds = %28
  %37 = icmp eq i32 %24, 0
  br i1 %37, label %84, label %38

38:                                               ; preds = %36
  %39 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %40 = icmp ugt i32 %39, 268435454
  br i1 %40, label %141, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %43 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %26, i64 0, i32 2
  %44 = bitcast i8*** %43 to i8**
  %45 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %26, i64 0, i32 3
  %46 = zext i32 %39 to i64
  br label %47

47:                                               ; preds = %41, %73
  %48 = phi i64 [ 0, %41 ], [ %54, %73 ]
  %49 = icmp eq i64 %48, %46
  %50 = load i32, i32* %42, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %49, label %80, label %52

52:                                               ; preds = %47
  br i1 %51, label %53, label %81

53:                                               ; preds = %52
  %54 = add nuw nsw i64 %48, 1
  %55 = icmp ugt i64 %48, 1023
  %56 = trunc i64 %54 to i32
  %57 = select i1 %55, i32 %56, i32 1024
  %58 = icmp ugt i32 %57, %39
  %59 = select i1 %58, i32 %39, i32 %57
  %60 = load i8*, i8** %44, align 8
  %61 = zext i32 %59 to i64
  %62 = shl nuw nsw i64 %61, 3
  %63 = call i8* @av_fast_realloc(i8* %60, i32* nonnull %8, i64 %62) #11
  %64 = icmp eq i8* %63, null
  br i1 %64, label %141, label %65

65:                                               ; preds = %53
  store i8* %63, i8** %44, align 8
  %66 = call noalias i8* @av_mallocz(i64 16) #11
  %67 = load i8**, i8*** %43, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 %48
  store i8* %66, i8** %68, align 8
  %69 = load i8**, i8*** %43, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 %48
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %141, label %73

73:                                               ; preds = %65
  store i32 %56, i32* %45, align 8
  %74 = load i8*, i8** %70, align 8
  %75 = call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %74, i32 16) #11
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %77, label %47

77:                                               ; preds = %73
  %78 = bitcast %struct.AVFormatContext** %12 to i8**
  %79 = load i8*, i8** %78, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)) #11
  br label %141

80:                                               ; preds = %47
  br i1 %51, label %84, label %81

81:                                               ; preds = %52, %80
  %82 = bitcast %struct.AVFormatContext** %12 to i8**
  %83 = load i8*, i8** %82, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %83, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.246, i64 0, i64 0)) #11
  br label %141

84:                                               ; preds = %80, %36
  %85 = call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %86 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #11
  store i32 0, i32* %5, align 4
  br label %87

87:                                               ; preds = %105, %84
  %88 = phi i8* [ null, %84 ], [ %98, %105 ]
  %89 = phi i32 [ 0, %84 ], [ %101, %105 ]
  %90 = zext i32 %89 to i64
  %91 = icmp ult i32 %89, %85
  br i1 %91, label %92, label %112

92:                                               ; preds = %87
  %93 = load i32, i32* %5, align 4
  %94 = icmp ugt i32 %93, 2146435070
  %95 = add i32 %93, 1048576
  %96 = select i1 %94, i32 2147483647, i32 %95
  %97 = zext i32 %96 to i64
  %98 = call i8* @av_fast_realloc(i8* %88, i32* nonnull %5, i64 %97) #11
  %99 = load i32, i32* %5, align 4
  %100 = icmp ult i32 %99, %85
  %101 = select i1 %100, i32 %99, i32 %85
  %102 = sub i32 %101, %89
  %103 = icmp eq i8* %98, null
  br i1 %103, label %104, label %105

104:                                              ; preds = %92
  call void @av_free(i8* %88) #11
  br label %110

105:                                              ; preds = %92
  %106 = getelementptr inbounds i8, i8* %98, i64 %90
  %107 = call i32 @avio_read(%struct.AVIOContext* %1, i8* %106, i32 %102) #11
  %108 = icmp eq i32 %107, %102
  br i1 %108, label %87, label %109

109:                                              ; preds = %105
  call void @av_free(i8* nonnull %98) #11
  br label %110

110:                                              ; preds = %104, %109
  %111 = phi i32 [ -1094995529, %109 ], [ -12, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #11
  br label %141

112:                                              ; preds = %87
  %113 = ptrtoint i8* %88 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #11
  %114 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %26, i64 0, i32 5
  %115 = bitcast i8** %114 to i8*
  call void @av_freep(i8* %115) #11
  %116 = bitcast i8** %114 to i64*
  store i64 %113, i64* %116, align 8
  %117 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %26, i64 0, i32 6
  store i32 %85, i32* %117, align 8
  %118 = call i8* @av_stream_get_side_data(%struct.AVStream* %23, i32 24, i32* nonnull %7) #11
  %119 = icmp eq i8* %118, null
  br i1 %119, label %132, label %120

120:                                              ; preds = %112
  %121 = load i32, i32* %7, align 4
  %122 = sext i32 %121 to i64
  %123 = call %struct.AVEncryptionInitInfo* @av_encryption_init_info_get_side_data(i8* nonnull %118, i64 %122) #11
  %124 = icmp eq %struct.AVEncryptionInitInfo* %123, null
  br i1 %124, label %141, label %125

125:                                              ; preds = %120, %125
  %126 = phi %struct.AVEncryptionInitInfo* [ %128, %125 ], [ %123, %120 ]
  %127 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %126, i64 0, i32 7
  %128 = load %struct.AVEncryptionInitInfo*, %struct.AVEncryptionInitInfo** %127, align 8
  %129 = icmp eq %struct.AVEncryptionInitInfo* %128, null
  br i1 %129, label %130, label %125

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %126, i64 0, i32 7
  store %struct.AVEncryptionInitInfo* %26, %struct.AVEncryptionInitInfo** %131, align 8
  br label %132

132:                                              ; preds = %112, %130
  %133 = phi %struct.AVEncryptionInitInfo* [ %123, %130 ], [ %26, %112 ]
  %134 = call i8* @av_encryption_init_info_add_side_data(%struct.AVEncryptionInitInfo* %133, i64* nonnull %6) #11
  %135 = icmp eq i8* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = load i64, i64* %6, align 8
  %138 = call i32 @av_stream_add_side_data(%struct.AVStream* %23, i32 24, i8* nonnull %134, i64 %137) #11
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  call void @av_free(i8* nonnull %134) #11
  br label %141

141:                                              ; preds = %65, %53, %110, %77, %132, %120, %38, %136, %140, %81, %33
  %142 = phi %struct.AVEncryptionInitInfo* [ %26, %33 ], [ %26, %81 ], [ %133, %140 ], [ %133, %136 ], [ %26, %38 ], [ %26, %120 ], [ %133, %132 ], [ %26, %77 ], [ %26, %110 ], [ %26, %53 ], [ %26, %65 ]
  %143 = phi i32 [ %31, %33 ], [ -1094995529, %81 ], [ %138, %140 ], [ %138, %136 ], [ -12, %38 ], [ -12, %120 ], [ -12, %132 ], [ %75, %77 ], [ %111, %110 ], [ -12, %53 ], [ -12, %65 ]
  call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* %142) #11
  br label %144

144:                                              ; preds = %17, %4, %141
  %145 = phi i32 [ %143, %141 ], [ 0, %4 ], [ -12, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret i32 %145
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_schm(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %39, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 40
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.247, i64 0, i64 0)) #11
  br label %39

25:                                               ; preds = %10
  %26 = icmp slt i64 %3, 8
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %29 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 73, i32 2
  %30 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %29, align 8
  %31 = icmp eq %struct.AVEncryptionInfo* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = tail call %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32 0, i32 16, i32 16) #11
  store %struct.AVEncryptionInfo* %33, %struct.AVEncryptionInfo** %29, align 8
  %34 = icmp eq %struct.AVEncryptionInfo* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32, %27
  %36 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %37 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %29, align 8
  %38 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %37, i64 0, i32 0
  store i32 %36, i32* %38, align 8
  br label %39

39:                                               ; preds = %32, %25, %4, %35, %23
  %40 = phi i32 [ -1163346256, %23 ], [ 0, %35 ], [ 0, %4 ], [ -1094995529, %25 ], [ -12, %32 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_tenc(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %91, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 40
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.248, i64 0, i64 0)) #11
  br label %91

25:                                               ; preds = %10
  %26 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 73, i32 2
  %27 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %26, align 8
  %28 = icmp eq %struct.AVEncryptionInfo* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = tail call %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32 0, i32 16, i32 16) #11
  store %struct.AVEncryptionInfo* %30, %struct.AVEncryptionInfo** %26, align 8
  %31 = icmp eq %struct.AVEncryptionInfo* %30, null
  br i1 %31, label %91, label %32

32:                                               ; preds = %29, %25
  %33 = icmp slt i64 %3, 20
  br i1 %33, label %91, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %36 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %37 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %38 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %39 = icmp eq i32 %35, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = lshr i32 %38, 4
  %42 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %26, align 8
  %43 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %42, i64 0, i32 1
  store i32 %41, i32* %43, align 4
  %44 = and i32 %38, 15
  %45 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %26, align 8
  %46 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %45, i64 0, i32 2
  store i32 %44, i32* %46, align 8
  br label %47

47:                                               ; preds = %34, %40
  %48 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 73, i32 3
  %52 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %51, align 8
  %53 = icmp eq %struct.MOVEncryptionIndex* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = tail call noalias i8* @av_mallocz(i64 56) #11
  %56 = bitcast %struct.MOVEncryptionIndex** %51 to i8**
  store i8* %55, i8** %56, align 8
  %57 = icmp eq i8* %55, null
  br i1 %57, label %91, label %58

58:                                               ; preds = %54, %50, %47
  %59 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %60 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 73, i32 1
  store i32 %59, i32* %60, align 8
  switch i32 %59, label %61 [
    i32 0, label %64
    i32 8, label %64
    i32 16, label %64
  ]

61:                                               ; preds = %58
  %62 = bitcast %struct.AVFormatContext** %5 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.249, i64 0, i64 0)) #11
  br label %91

64:                                               ; preds = %58, %58, %58
  %65 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %26, align 8
  %66 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %65, i64 0, i32 3
  %67 = load i8*, i8** %66, align 8
  %68 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* %67, i32 16) #11
  %69 = icmp eq i32 %68, 16
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast %struct.AVFormatContext** %5 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.250, i64 0, i64 0)) #11
  br label %91

73:                                               ; preds = %64
  br i1 %49, label %74, label %91

74:                                               ; preds = %73
  %75 = load i32, i32* %60, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %74
  %78 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  switch i32 %78, label %79 [
    i32 16, label %82
    i32 8, label %82
  ]

79:                                               ; preds = %77
  %80 = bitcast %struct.AVFormatContext** %5 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.251, i64 0, i64 0)) #11
  br label %91

82:                                               ; preds = %77, %77
  %83 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %26, align 8
  %84 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %83, i64 0, i32 5
  %85 = load i8*, i8** %84, align 8
  %86 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* %85, i32 %78) #11
  %87 = icmp eq i32 %86, %78
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = bitcast %struct.AVFormatContext** %5 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %90, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.252, i64 0, i64 0)) #11
  br label %91

91:                                               ; preds = %73, %74, %82, %54, %32, %29, %4, %88, %79, %70, %61, %23
  %92 = phi i32 [ -1163346256, %23 ], [ -1094995529, %61 ], [ -1094995529, %70 ], [ -1094995529, %79 ], [ -1094995529, %88 ], [ 0, %4 ], [ -12, %29 ], [ -1094995529, %32 ], [ -12, %54 ], [ 0, %82 ], [ 0, %74 ], [ 0, %73 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dfla(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to [4 x i8]*
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 1
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 2
  %10 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 3
  %11 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  store i32 -1431655766, i32* %5, align 4
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %11, align 8
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %62, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i64 0, i32 7
  %18 = load %struct.AVStream**, %struct.AVStream*** %17, align 8
  %19 = add i32 %14, -1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %18, i64 %20
  %22 = load %struct.AVStream*, %struct.AVStream** %21, align 8
  %23 = icmp ugt i64 %3, 1073741824
  %24 = icmp slt i64 %3, 42
  %25 = or i1 %23, %24
  br i1 %25, label %62, label %26

26:                                               ; preds = %16
  %27 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %62

29:                                               ; preds = %26
  %30 = tail call i32 @avio_rb24(%struct.AVIOContext* %1) #11
  %31 = call i32 @avio_read(%struct.AVIOContext* %1, i8* nonnull %7, i32 4) #11
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %33, label %62

33:                                               ; preds = %29
  %34 = load i8, i8* %7, align 4
  %35 = and i8 %34, 127
  %36 = load i8, i8* %8, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 16
  %39 = load i8, i8* %9, align 2
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = or i32 %41, %38
  %43 = load i8, i8* %10, align 1
  %44 = zext i8 %43 to i32
  %45 = or i32 %42, %44
  %46 = icmp ne i8 %35, 0
  %47 = icmp ne i32 %45, 34
  %48 = or i1 %46, %47
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %11, align 8
  br i1 %48, label %50, label %52

50:                                               ; preds = %33
  %51 = bitcast %struct.AVFormatContext* %49 to i8*
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.253, i64 0, i64 0)) #11
  br label %62

52:                                               ; preds = %33
  %53 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i64 0, i32 19
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %53, align 8
  %55 = call i32 @ff_get_extradata(%struct.AVFormatContext* %49, %struct.AVCodecParameters* %54, %struct.AVIOContext* %1, i32 34) #11
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = icmp sgt i8 %34, -1
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = bitcast %struct.AVFormatContext** %11 to i8**
  %61 = load i8*, i8** %60, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.254, i64 0, i64 0)) #11
  br label %62

62:                                               ; preds = %59, %57, %52, %29, %26, %16, %4, %50
  %63 = phi i32 [ -1094995529, %50 ], [ 0, %4 ], [ -1094995529, %16 ], [ -1094995529, %26 ], [ -1094995529, %29 ], [ %55, %52 ], [ 0, %57 ], [ 0, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_st3d(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %42, label %10

10:                                               ; preds = %4
  %11 = icmp slt i64 %3, 5
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.255, i64 0, i64 0)) #11
  br label %42

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %16 = load %struct.AVStream**, %struct.AVStream*** %15, align 8
  %17 = add i32 %8, -1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %16, i64 %18
  %20 = load %struct.AVStream*, %struct.AVStream** %19, align 8
  %21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i64 0, i32 3
  %22 = bitcast i8** %21 to %struct.MOVStreamContext**
  %23 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %22, align 8
  %24 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %23, i64 0, i32 65
  %25 = load %struct.AVStereo3D*, %struct.AVStereo3D** %24, align 8
  %26 = icmp eq %struct.AVStereo3D* %25, null
  br i1 %26, label %27, label %42

27:                                               ; preds = %14
  %28 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 4) #11
  %29 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = bitcast %struct.AVFormatContext** %5 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.256, i64 0, i64 0), i32 %29) #11
  br label %42

34:                                               ; preds = %27
  %35 = sext i32 %29 to i64
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.mov_read_st3d, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = tail call %struct.AVStereo3D* @av_stereo3d_alloc() #11
  store %struct.AVStereo3D* %38, %struct.AVStereo3D** %24, align 8
  %39 = icmp eq %struct.AVStereo3D* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %38, i64 0, i32 0
  store i32 %37, i32* %41, align 4
  br label %42

42:                                               ; preds = %34, %14, %4, %40, %31, %12
  %43 = phi i32 [ -1094995529, %12 ], [ 0, %31 ], [ 0, %40 ], [ 0, %4 ], [ -1094995529, %14 ], [ -12, %34 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_sv3d(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca [32 x i8], align 1
  %6 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %6, align 8
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %150, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i64 0, i32 7
  %13 = load %struct.AVStream**, %struct.AVStream*** %12, align 8
  %14 = add i32 %9, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %13, i64 %15
  %17 = load %struct.AVStream*, %struct.AVStream** %16, align 8
  %18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %17, i64 0, i32 3
  %19 = bitcast i8** %18 to %struct.MOVStreamContext**
  %20 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %19, align 8
  %21 = icmp slt i64 %3, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = bitcast %struct.AVFormatContext* %7 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.257, i64 0, i64 0)) #11
  br label %150

24:                                               ; preds = %11
  %25 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %26 = icmp slt i32 %25, 13
  %27 = sext i32 %25 to i64
  %28 = icmp sgt i64 %27, %3
  %29 = or i1 %26, %28
  br i1 %29, label %150, label %30

30:                                               ; preds = %24
  %31 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %32 = icmp eq i32 %31, 1684567667
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = bitcast %struct.AVFormatContext** %6 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.258, i64 0, i64 0)) #11
  br label %150

36:                                               ; preds = %30
  %37 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %struct.AVFormatContext** %6 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.259, i64 0, i64 0), i32 %37) #11
  br label %150

42:                                               ; preds = %36
  %43 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  %44 = add nsw i32 %25, -12
  %45 = sext i32 %44 to i64
  %46 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 %45) #11
  %47 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %48 = sext i32 %47 to i64
  %49 = icmp sgt i64 %48, %3
  br i1 %49, label %150, label %50

50:                                               ; preds = %42
  %51 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %52 = icmp eq i32 %51, 1785688688
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = bitcast %struct.AVFormatContext** %6 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.260, i64 0, i64 0)) #11
  br label %150

56:                                               ; preds = %50
  %57 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %58 = sext i32 %57 to i64
  %59 = icmp sgt i64 %58, %3
  br i1 %59, label %150, label %60

60:                                               ; preds = %56
  %61 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %62 = icmp eq i32 %61, 1684566640
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = bitcast %struct.AVFormatContext** %6 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %65, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.261, i64 0, i64 0)) #11
  br label %150

66:                                               ; preds = %60
  %67 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = bitcast %struct.AVFormatContext** %6 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %71, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.259, i64 0, i64 0), i32 %67) #11
  br label %150

72:                                               ; preds = %66
  %73 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  %74 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %75 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %76 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %77 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %78 = sext i32 %77 to i64
  %79 = icmp sgt i64 %78, %3
  br i1 %79, label %150, label %80

80:                                               ; preds = %72
  %81 = tail call i32 @avio_rl32(%struct.AVIOContext* %1) #11
  %82 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = bitcast %struct.AVFormatContext** %6 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.259, i64 0, i64 0), i32 %82) #11
  br label %150

87:                                               ; preds = %80
  %88 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  switch i32 %81, label %116 [
    i32 1886216803, label %89
    i32 1769304421, label %97
  ]

89:                                               ; preds = %87
  %90 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = bitcast %struct.AVFormatContext** %6 to i8**
  %94 = load i8*, i8** %93, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %94, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.262, i64 0, i64 0), i32 %90) #11
  br label %150

95:                                               ; preds = %89
  %96 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  br label %121

97:                                               ; preds = %87
  %98 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %99 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %100 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %101 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %102 = xor i32 %98, -1
  %103 = icmp ult i32 %99, %102
  %104 = xor i32 %100, -1
  %105 = icmp ult i32 %101, %104
  %106 = and i1 %103, %105
  br i1 %106, label %110, label %107

107:                                              ; preds = %97
  %108 = bitcast %struct.AVFormatContext** %6 to i8**
  %109 = load i8*, i8** %108, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %109, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.263, i64 0, i64 0), i32 %100, i32 %98, i32 %101, i32 %99) #11
  br label %150

110:                                              ; preds = %97
  %111 = or i32 %99, %98
  %112 = or i32 %111, %100
  %113 = or i32 %112, %101
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 2
  br label %121

116:                                              ; preds = %87
  %117 = bitcast %struct.AVFormatContext** %6 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %119, i8 0, i64 32, i1 false)
  %120 = call i8* @av_fourcc_make_string(i8* nonnull %119, i32 %81) #11
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i64 0, i64 0), i8* %120) #11
  br label %150

121:                                              ; preds = %110, %95
  %122 = phi i32 [ 0, %95 ], [ %100, %110 ]
  %123 = phi i32 [ 0, %95 ], [ %98, %110 ]
  %124 = phi i32 [ 0, %95 ], [ %101, %110 ]
  %125 = phi i32 [ 0, %95 ], [ %99, %110 ]
  %126 = phi i32 [ %96, %95 ], [ 0, %110 ]
  %127 = phi i32 [ 1, %95 ], [ %115, %110 ]
  %128 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %20, i64 0, i32 67
  %129 = tail call %struct.AVSphericalMapping* @av_spherical_alloc(i64* %128) #11
  %130 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %20, i64 0, i32 66
  store %struct.AVSphericalMapping* %129, %struct.AVSphericalMapping** %130, align 8
  %131 = icmp eq %struct.AVSphericalMapping* %129, null
  br i1 %131, label %150, label %132

132:                                              ; preds = %121
  %133 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %129, i64 0, i32 0
  store i32 %127, i32* %133, align 4
  %134 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %135 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %134, i64 0, i32 1
  store i32 %74, i32* %135, align 4
  %136 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %137 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %136, i64 0, i32 2
  store i32 %75, i32* %137, align 4
  %138 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %139 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %138, i64 0, i32 3
  store i32 %76, i32* %139, align 4
  %140 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %141 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %140, i64 0, i32 8
  store i32 %126, i32* %141, align 4
  %142 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %143 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %142, i64 0, i32 4
  store i32 %122, i32* %143, align 4
  %144 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %145 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %144, i64 0, i32 5
  store i32 %123, i32* %145, align 4
  %146 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %147 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %146, i64 0, i32 6
  store i32 %124, i32* %147, align 4
  %148 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %130, align 8
  %149 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %148, i64 0, i32 7
  store i32 %125, i32* %149, align 4
  br label %150

150:                                              ; preds = %121, %72, %56, %42, %24, %4, %132, %116, %107, %92, %84, %69, %63, %53, %39, %33, %22
  %151 = phi i32 [ -1094995529, %22 ], [ 0, %33 ], [ 0, %39 ], [ 0, %53 ], [ 0, %63 ], [ 0, %69 ], [ 0, %84 ], [ 0, %116 ], [ -1094995529, %107 ], [ 0, %132 ], [ 0, %92 ], [ 0, %4 ], [ -1094995529, %24 ], [ -1094995529, %42 ], [ -1094995529, %56 ], [ -1094995529, %72 ], [ -12, %121 ]
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dops(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %81, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = icmp ugt i64 %3, 1073741824
  %18 = icmp slt i64 %3, 11
  %19 = or i1 %17, %18
  br i1 %19, label %81, label %20

20:                                               ; preds = %10
  %21 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = bitcast %struct.AVFormatContext** %5 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.265, i64 0, i64 0)) #11
  br label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %29 = trunc i64 %3 to i32
  %30 = add nuw nsw i32 %29, 8
  %31 = tail call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %28, i32 %30) #11
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %81, label %33

33:                                               ; preds = %26
  %34 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %35 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %34, i64 0, i32 3
  %36 = bitcast i8** %35 to i32**
  %37 = load i32*, i32** %36, align 8
  store i32 1937076303, i32* %37, align 1
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i64 0, i32 3
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 4
  %42 = bitcast i8* %41 to i32*
  store i32 1684104520, i32* %42, align 1
  %43 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %44 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %43, i64 0, i32 3
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  store i8 1, i8* %46, align 1
  %47 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %48 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %47, i64 0, i32 3
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 9
  %51 = add nsw i32 %29, -1
  %52 = tail call i32 @avio_read(%struct.AVIOContext* %1, i8* %50, i32 %51) #11
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %54 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i64 0, i32 3
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 10
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 1
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #11
  store i16 %59, i16* %57, align 1
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i64 0, i32 3
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 12
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 1
  %66 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %65) #14, !srcloc !3
  store i32 %66, i32* %64, align 1
  %67 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %68 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %67, i64 0, i32 3
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 1
  %73 = tail call i16 @llvm.bswap.i16(i16 %72) #11
  store i16 %73, i16* %71, align 1
  %74 = zext i16 %59 to i32
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 26
  store i32 %74, i32* %76, align 8
  %77 = tail call i64 @av_rescale_q(i64 80, i64 4294967296001, i64 206158430208001) #14
  %78 = trunc i64 %77 to i32
  %79 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %27, align 8
  %80 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %79, i64 0, i32 28
  store i32 %78, i32* %80, align 8
  br label %81

81:                                               ; preds = %26, %10, %4, %33, %23
  %82 = phi i32 [ -1094995529, %23 ], [ 0, %33 ], [ 0, %4 ], [ -1094995529, %10 ], [ %31, %26 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dmlp(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %120, label %10

10:                                               ; preds = %4
  %11 = icmp slt i64 %3, 10
  br i1 %11, label %120, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %8, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %20 = lshr i32 %19, 28
  %21 = and i32 %19, 8191
  %22 = icmp eq i32 %21, 0
  %23 = lshr i32 %19, 15
  %24 = and i32 %23, 31
  %25 = select i1 %22, i32 %24, i32 %21
  %26 = and i32 %20, 7
  %27 = shl i32 40, %26
  %28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i64 0, i32 19
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %28, align 8
  %30 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i64 0, i32 25
  store i32 %27, i32* %30, align 4
  %31 = icmp eq i32 %20, 15
  br i1 %31, label %36, label %32

32:                                               ; preds = %12
  %33 = icmp sgt i32 %19, -1
  %34 = select i1 %33, i32 48000, i32 44100
  %35 = shl i32 %34, %26
  br label %36

36:                                               ; preds = %12, %32
  %37 = phi i32 [ %35, %32 ], [ 0, %12 ]
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %28, align 8
  %39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i64 0, i32 23
  store i32 %37, i32* %39, align 4
  %40 = shl nuw nsw i32 %25, 1
  %41 = and i32 %40, 2
  %42 = lshr i32 %25, 1
  %43 = and i32 %42, 1
  %44 = or i32 %43, %41
  %45 = lshr i32 %25, 2
  %46 = and i32 %45, 1
  %47 = and i32 %45, 2
  %48 = lshr i32 %25, 3
  %49 = and i32 %48, 2
  %50 = lshr i32 %25, 4
  %51 = and i32 %50, 2
  %52 = lshr i32 %25, 5
  %53 = and i32 %52, 2
  %54 = lshr i32 %25, 7
  %55 = and i32 %54, 1
  %56 = lshr i32 %25, 8
  %57 = and i32 %56, 1
  %58 = and i32 %56, 2
  %59 = lshr i32 %25, 9
  %60 = and i32 %59, 2
  %61 = lshr i32 %25, 11
  %62 = and i32 %61, 1
  %63 = lshr i32 %25, 12
  %64 = add nuw nsw i32 %46, %63
  %65 = add nuw nsw i32 %64, %47
  %66 = add nuw nsw i32 %65, %49
  %67 = add nuw nsw i32 %66, %51
  %68 = add nuw nsw i32 %67, %53
  %69 = add nuw nsw i32 %68, %55
  %70 = add nuw nsw i32 %69, %57
  %71 = add nuw nsw i32 %70, %58
  %72 = add nuw nsw i32 %71, %60
  %73 = add nuw nsw i32 %72, %62
  %74 = add i32 %73, %44
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %28, align 8
  %76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 22
  store i32 %74, i32* %76, align 8
  %77 = and i32 %25, 1
  %78 = mul nuw nsw i32 %77, 3
  %79 = and i32 %40, 4
  %80 = or i32 %79, %78
  %81 = and i32 %40, 8
  %82 = or i32 %80, %81
  %83 = and i32 %48, 1
  %84 = mul nuw nsw i32 %83, 1536
  %85 = and i32 %50, 1
  %86 = mul nuw nsw i32 %85, 20480
  %87 = and i32 %52, 1
  %88 = mul nuw nsw i32 %87, 192
  %89 = lshr i32 %25, 6
  %90 = and i32 %89, 1
  %91 = mul nuw nsw i32 %90, 48
  %92 = and i32 %40, 256
  %93 = shl nuw nsw i32 %25, 3
  %94 = and i32 %93, 2048
  %95 = or i32 %82, %92
  %96 = or i32 %95, %94
  %97 = or i32 %96, %84
  %98 = or i32 %97, %86
  %99 = or i32 %98, %88
  %100 = or i32 %99, %91
  %101 = zext i32 %100 to i64
  %102 = and i32 %59, 1
  %103 = zext i32 %102 to i64
  %104 = mul nuw nsw i64 %103, 25769803776
  %105 = lshr i32 %25, 10
  %106 = and i32 %105, 1
  %107 = zext i32 %106 to i64
  %108 = mul nuw nsw i64 %107, 6442450944
  %109 = shl nuw nsw i32 %25, 2
  %110 = and i32 %109, 8192
  %111 = zext i32 %110 to i64
  %112 = zext i32 %63 to i64
  %113 = shl nuw nsw i64 %112, 35
  %114 = or i64 %113, %111
  %115 = or i64 %114, %104
  %116 = or i64 %115, %108
  %117 = or i64 %116, %101
  %118 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %28, align 8
  %119 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %118, i64 0, i32 21
  store i64 %117, i64* %119, align 8
  br label %120

120:                                              ; preds = %10, %4, %36
  %121 = phi i32 [ 0, %36 ], [ 0, %4 ], [ -1094995529, %10 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_smdm(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %97, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = icmp slt i64 %3, 5
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.266, i64 0, i64 0)) #11
  br label %97

23:                                               ; preds = %10
  %24 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = bitcast %struct.AVFormatContext** %5 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.267, i64 0, i64 0), i32 %24) #11
  br label %97

29:                                               ; preds = %23
  %30 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  %31 = tail call %struct.AVMasteringDisplayMetadata* @av_mastering_display_metadata_alloc() #11
  %32 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 68
  store %struct.AVMasteringDisplayMetadata* %31, %struct.AVMasteringDisplayMetadata** %32, align 8
  %33 = icmp eq %struct.AVMasteringDisplayMetadata* %31, null
  br i1 %33, label %97, label %34

34:                                               ; preds = %29
  %35 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %36 = zext i32 %35 to i64
  %37 = or i64 %36, 281474976710656
  %38 = bitcast %struct.AVMasteringDisplayMetadata* %31 to i64*
  store i64 %37, i64* %38, align 4
  %39 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %40 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, 281474976710656
  %43 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %39, i64 0, i32 0, i64 0, i64 1
  %44 = bitcast %struct.AVRational* %43 to i64*
  store i64 %42, i64* %44, align 4
  %45 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %46 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %45, i64 0, i32 0, i64 1
  %47 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %48 = zext i32 %47 to i64
  %49 = or i64 %48, 281474976710656
  %50 = bitcast [2 x %struct.AVRational]* %46 to i64*
  store i64 %49, i64* %50, align 4
  %51 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %52 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %53 = zext i32 %52 to i64
  %54 = or i64 %53, 281474976710656
  %55 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %51, i64 0, i32 0, i64 1, i64 1
  %56 = bitcast %struct.AVRational* %55 to i64*
  store i64 %54, i64* %56, align 4
  %57 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %58 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %57, i64 0, i32 0, i64 2
  %59 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %60 = zext i32 %59 to i64
  %61 = or i64 %60, 281474976710656
  %62 = bitcast [2 x %struct.AVRational]* %58 to i64*
  store i64 %61, i64* %62, align 4
  %63 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %64 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %65 = zext i32 %64 to i64
  %66 = or i64 %65, 281474976710656
  %67 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %63, i64 0, i32 0, i64 2, i64 1
  %68 = bitcast %struct.AVRational* %67 to i64*
  store i64 %66, i64* %68, align 4
  %69 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %70 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %71 = zext i32 %70 to i64
  %72 = or i64 %71, 281474976710656
  %73 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %69, i64 0, i32 1
  %74 = bitcast [2 x %struct.AVRational]* %73 to i64*
  store i64 %72, i64* %74, align 4
  %75 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %76 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %77 = zext i32 %76 to i64
  %78 = or i64 %77, 281474976710656
  %79 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %75, i64 0, i32 1, i64 1
  %80 = bitcast %struct.AVRational* %79 to i64*
  store i64 %78, i64* %80, align 4
  %81 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %82 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %83 = zext i32 %82 to i64
  %84 = or i64 %83, 1099511627776
  %85 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %81, i64 0, i32 3
  %86 = bitcast %struct.AVRational* %85 to i64*
  store i64 %84, i64* %86, align 4
  %87 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %88 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %89 = zext i32 %88 to i64
  %90 = or i64 %89, 70368744177664
  %91 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %87, i64 0, i32 2
  %92 = bitcast %struct.AVRational* %91 to i64*
  store i64 %90, i64* %92, align 4
  %93 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %94 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %93, i64 0, i32 4
  store i32 1, i32* %94, align 4
  %95 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %32, align 8
  %96 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %95, i64 0, i32 5
  store i32 1, i32* %96, align 4
  br label %97

97:                                               ; preds = %29, %4, %34, %26, %21
  %98 = phi i32 [ -1094995529, %21 ], [ 0, %26 ], [ 0, %34 ], [ -1094995529, %4 ], [ -12, %29 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_coll(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %42, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = icmp slt i64 %3, 5
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.268, i64 0, i64 0)) #11
  br label %42

23:                                               ; preds = %10
  %24 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = bitcast %struct.AVFormatContext** %5 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.269, i64 0, i64 0), i32 %24) #11
  br label %42

29:                                               ; preds = %23
  %30 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  %31 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 70
  %32 = tail call %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64* %31) #11
  %33 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 69
  store %struct.AVContentLightMetadata* %32, %struct.AVContentLightMetadata** %33, align 8
  %34 = icmp eq %struct.AVContentLightMetadata* %32, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %29
  %36 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %37 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %33, align 8
  %38 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %37, i64 0, i32 0
  store i32 %36, i32* %38, align 4
  %39 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %40 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %33, align 8
  %41 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %40, i64 0, i32 1
  store i32 %39, i32* %41, align 4
  br label %42

42:                                               ; preds = %29, %4, %35, %26, %21
  %43 = phi i32 [ -1094995529, %21 ], [ 0, %26 ], [ 0, %35 ], [ -1094995529, %4 ], [ -12, %29 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_vpcc(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = icmp slt i64 %3, 5
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.270, i64 0, i64 0)) #11
  br label %57

20:                                               ; preds = %10
  %21 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = bitcast %struct.AVFormatContext** %5 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.271, i64 0, i64 0), i32 %21) #11
  br label %57

26:                                               ; preds = %20
  %27 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 3) #11
  %28 = tail call i64 @avio_skip(%struct.AVIOContext* %1, i64 2) #11
  %29 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %30 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %31 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %32 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %33 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %57

35:                                               ; preds = %26
  %36 = tail call i8* @av_color_primaries_name(i32 %30) #11
  %37 = icmp eq i8* %36, null
  %38 = select i1 %37, i32 2, i32 %30
  %39 = tail call i8* @av_color_transfer_name(i32 %31) #11
  %40 = icmp eq i8* %39, null
  %41 = select i1 %40, i32 2, i32 %31
  %42 = tail call i8* @av_color_space_name(i32 %32) #11
  %43 = icmp eq i8* %42, null
  %44 = select i1 %43, i32 2, i32 %32
  %45 = and i32 %29, 1
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 1, i32 2
  %48 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 19
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %48, align 8
  %50 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i64 0, i32 15
  store i32 %47, i32* %50, align 4
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %48, align 8
  %52 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i64 0, i32 16
  store i32 %38, i32* %52, align 8
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %48, align 8
  %54 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i64 0, i32 17
  store i32 %41, i32* %54, align 4
  %55 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %48, align 8
  %56 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %55, i64 0, i32 18
  store i32 %44, i32* %56, align 8
  br label %57

57:                                               ; preds = %26, %4, %35, %23, %18
  %58 = phi i32 [ -1094995529, %18 ], [ 0, %23 ], [ 0, %35 ], [ 0, %4 ], [ -1094995529, %26 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_mdcv(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %4
  %11 = icmp slt i64 %3, 24
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.272, i64 0, i64 0)) #11
  br label %90

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %16 = load %struct.AVStream**, %struct.AVStream*** %15, align 8
  %17 = add i32 %8, -1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %16, i64 %18
  %20 = load %struct.AVStream*, %struct.AVStream** %19, align 8
  %21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i64 0, i32 3
  %22 = bitcast i8** %21 to %struct.MOVStreamContext**
  %23 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %22, align 8
  %24 = tail call %struct.AVMasteringDisplayMetadata* @av_mastering_display_metadata_alloc() #11
  %25 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %23, i64 0, i32 68
  store %struct.AVMasteringDisplayMetadata* %24, %struct.AVMasteringDisplayMetadata** %25, align 8
  %26 = icmp eq %struct.AVMasteringDisplayMetadata* %24, null
  br i1 %26, label %90, label %27

27:                                               ; preds = %14
  %28 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %24, i64 0, i32 0, i64 1
  %29 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %30 = zext i32 %29 to i64
  %31 = or i64 %30, 214748364800000
  %32 = bitcast [2 x %struct.AVRational]* %28 to i64*
  store i64 %31, i64* %32, align 4
  %33 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %34 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %35 = zext i32 %34 to i64
  %36 = or i64 %35, 214748364800000
  %37 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %33, i64 0, i32 0, i64 1, i64 1
  %38 = bitcast %struct.AVRational* %37 to i64*
  store i64 %36, i64* %38, align 4
  %39 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %40 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %39, i64 0, i32 0, i64 2
  %41 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %42 = zext i32 %41 to i64
  %43 = or i64 %42, 214748364800000
  %44 = bitcast [2 x %struct.AVRational]* %40 to i64*
  store i64 %43, i64* %44, align 4
  %45 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %46 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %47 = zext i32 %46 to i64
  %48 = or i64 %47, 214748364800000
  %49 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %45, i64 0, i32 0, i64 2, i64 1
  %50 = bitcast %struct.AVRational* %49 to i64*
  store i64 %48, i64* %50, align 4
  %51 = bitcast %struct.AVMasteringDisplayMetadata** %25 to i64**
  %52 = load i64*, i64** %51, align 8
  %53 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %54 = zext i32 %53 to i64
  %55 = or i64 %54, 214748364800000
  store i64 %55, i64* %52, align 4
  %56 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %57 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %58 = zext i32 %57 to i64
  %59 = or i64 %58, 214748364800000
  %60 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %56, i64 0, i32 0, i64 0, i64 1
  %61 = bitcast %struct.AVRational* %60 to i64*
  store i64 %59, i64* %61, align 4
  %62 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %63 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %64 = zext i32 %63 to i64
  %65 = or i64 %64, 214748364800000
  %66 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %62, i64 0, i32 1
  %67 = bitcast [2 x %struct.AVRational]* %66 to i64*
  store i64 %65, i64* %67, align 4
  %68 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %69 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %70 = zext i32 %69 to i64
  %71 = or i64 %70, 214748364800000
  %72 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %68, i64 0, i32 1, i64 1
  %73 = bitcast %struct.AVRational* %72 to i64*
  store i64 %71, i64* %73, align 4
  %74 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %75 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %76 = zext i32 %75 to i64
  %77 = or i64 %76, 42949672960000
  %78 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %74, i64 0, i32 3
  %79 = bitcast %struct.AVRational* %78 to i64*
  store i64 %77, i64* %79, align 4
  %80 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %81 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %82 = zext i32 %81 to i64
  %83 = or i64 %82, 42949672960000
  %84 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %80, i64 0, i32 2
  %85 = bitcast %struct.AVRational* %84 to i64*
  store i64 %83, i64* %85, align 4
  %86 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %87 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %86, i64 0, i32 5
  store i32 1, i32* %87, align 4
  %88 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %25, align 8
  %89 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %88, i64 0, i32 4
  store i32 1, i32* %89, align 4
  br label %90

90:                                               ; preds = %14, %4, %27, %12
  %91 = phi i32 [ -1094995529, %12 ], [ 0, %27 ], [ -1094995529, %4 ], [ -12, %14 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_clli(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = add i32 %8, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %14
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = icmp slt i64 %3, 4
  br i1 %20, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %struct.AVFormatContext* %6 to i8*
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.273, i64 0, i64 0)) #11
  br label %35

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 70
  %25 = tail call %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64* %24) #11
  %26 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 69
  store %struct.AVContentLightMetadata* %25, %struct.AVContentLightMetadata** %26, align 8
  %27 = icmp eq %struct.AVContentLightMetadata* %25, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %30 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %26, align 8
  %31 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %30, i64 0, i32 0
  store i32 %29, i32* %31, align 4
  %32 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %33 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %26, align 8
  %34 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %33, i64 0, i32 1
  store i32 %32, i32* %34, align 4
  br label %35

35:                                               ; preds = %23, %4, %28, %21
  %36 = phi i32 [ -1094995529, %21 ], [ 0, %28 ], [ -1094995529, %4 ], [ -12, %23 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_read_dvcc_dvvc(%struct.MOVContext*, %struct.AVIOContext*, i32, i64) #0 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %83, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %14 = load %struct.AVStream**, %struct.AVStream*** %13, align 8
  %15 = add i32 %10, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %16
  %18 = load %struct.AVStream*, %struct.AVStream** %17, align 8
  %19 = icmp ugt i64 %3, 1073741824
  %20 = icmp slt i64 %3, 4
  %21 = or i1 %19, %20
  br i1 %21, label %83, label %22

22:                                               ; preds = %12
  %23 = call %struct.AVDOVIDecoderConfigurationRecord* @av_dovi_alloc(i64* nonnull %5) #11
  %24 = icmp eq %struct.AVDOVIDecoderConfigurationRecord* %23, null
  br i1 %24, label %83, label %25

25:                                               ; preds = %22
  %26 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 0
  store i8 %27, i8* %28, align 1
  %29 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 1
  store i8 %30, i8* %31, align 1
  %32 = call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %33 = lshr i32 %32, 9
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 127
  %36 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 2
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %32, 3
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 63
  %40 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 3
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %32, 2
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 4
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %32, 1
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 5
  store i8 %47, i8* %48, align 1
  %49 = trunc i32 %32 to i8
  %50 = and i8 %49, 1
  %51 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 6
  store i8 %50, i8* %51, align 1
  %52 = icmp sgt i64 %3, 23
  br i1 %52, label %53, label %58

53:                                               ; preds = %25
  %54 = call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %55 = lshr i32 %54, 4
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 15
  br label %58

58:                                               ; preds = %25, %53
  %59 = phi i8 [ %57, %53 ], [ 0, %25 ]
  %60 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %23, i64 0, i32 7
  store i8 %59, i8* %60, align 1
  %61 = load i64, i64* %5, align 8
  %62 = call i32 @av_stream_add_side_data(%struct.AVStream* %18, i32 29, i8* %28, i64 %61) #11
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  call void @av_free(i8* %28) #11
  br label %83

65:                                               ; preds = %58
  %66 = bitcast %struct.MOVContext* %0 to i8*
  %67 = load i8, i8* %28, align 1
  %68 = zext i8 %67 to i32
  %69 = load i8, i8* %31, align 1
  %70 = zext i8 %69 to i32
  %71 = load i8, i8* %36, align 1
  %72 = zext i8 %71 to i32
  %73 = load i8, i8* %40, align 1
  %74 = zext i8 %73 to i32
  %75 = load i8, i8* %44, align 1
  %76 = zext i8 %75 to i32
  %77 = load i8, i8* %48, align 1
  %78 = zext i8 %77 to i32
  %79 = load i8, i8* %51, align 1
  %80 = zext i8 %79 to i32
  %81 = load i8, i8* %60, align 1
  %82 = zext i8 %81 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %66, i32 56, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.274, i64 0, i64 0), i32 %68, i32 %70, i32 %72, i32 %74, i32 %76, i32 %78, i32 %80, i32 %82) #11
  br label %83

83:                                               ; preds = %22, %12, %4, %65, %64
  %84 = phi i32 [ %62, %64 ], [ 0, %65 ], [ 0, %4 ], [ -1094995529, %12 ], [ -12, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret i32 %84
}

declare i32 @av_reallocp(i8*, i64) local_unnamed_addr #2

declare i32 @ffio_read_size(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_read_extradata(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i64, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %6, align 8
  %8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %76, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i64 0, i32 7
  %13 = load %struct.AVStream**, %struct.AVStream*** %12, align 8
  %14 = add i32 %9, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %13, i64 %15
  %17 = load %struct.AVStream*, %struct.AVStream** %16, align 8
  %18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %17, i64 0, i32 19
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %4
  br i1 %22, label %23, label %76

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = add i64 %26, %3
  %28 = add i64 %27, 72
  %29 = or i64 %28, %3
  %30 = icmp ugt i64 %29, 2147483647
  br i1 %30, label %76, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i64 0, i32 3
  %33 = bitcast i8** %32 to i8*
  %34 = tail call i32 @av_reallocp(i8* %33, i64 %28) #11
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store i32 0, i32* %24, align 8
  br label %76

37:                                               ; preds = %31
  %38 = trunc i64 %27 to i32
  %39 = add nsw i32 %38, 8
  store i32 %39, i32* %24, align 8
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %18, align 8
  %41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %26
  %44 = trunc i64 %3 to i32
  %45 = add i32 %44, 8
  %46 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %45) #14, !srcloc !3
  %47 = bitcast i8* %43 to i32*
  store i32 %46, i32* %47, align 1
  %48 = getelementptr inbounds i8, i8* %43, i64 4
  %49 = bitcast i8* %48 to i32*
  store i32 %2, i32* %49, align 1
  %50 = getelementptr inbounds i8, i8* %43, i64 8
  %51 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %50, i32 %44) #11
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %37
  %54 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %55, %44
  store i32 %56, i32* %54, align 8
  %57 = sext i32 %51 to i64
  br label %71

58:                                               ; preds = %37
  %59 = sext i32 %51 to i64
  %60 = icmp slt i64 %59, %3
  br i1 %60, label %61, label %68

61:                                               ; preds = %58
  %62 = bitcast %struct.AVFormatContext** %6 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i64 0, i64 0)) #11
  %64 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = sub i32 %51, %44
  %67 = add i32 %66, %65
  store i32 %67, i32* %64, align 8
  br label %68

68:                                               ; preds = %61, %58
  %69 = phi i64 [ %59, %61 ], [ %3, %58 ]
  %70 = getelementptr inbounds i8, i8* %50, i64 %59
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %70, i8 0, i64 64, i1 false) #11
  br label %71

71:                                               ; preds = %53, %68
  %72 = phi i64 [ %57, %53 ], [ %69, %68 ]
  %73 = trunc i64 %72 to i32
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 %73, i32 0
  br label %76

76:                                               ; preds = %23, %36, %71, %11, %5
  %77 = phi i32 [ 0, %5 ], [ 0, %11 ], [ %75, %71 ], [ -1094995529, %23 ], [ %34, %36 ]
  ret i32 %77
}

declare i32 @avio_rb24(%struct.AVIOContext*) local_unnamed_addr #2

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) local_unnamed_addr #2

declare void @av_free(i8*) local_unnamed_addr #2

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #2

declare i8* @av_stream_new_side_data(%struct.AVStream*, i32, i32) local_unnamed_addr #2

declare i8* @av_color_primaries_name(i32) local_unnamed_addr #2

declare i8* @av_color_transfer_name(i32) local_unnamed_addr #2

declare i8* @av_color_space_name(i32) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

declare i8* @av_fast_realloc(i8*, i32*, i64) local_unnamed_addr #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct.AVSHA* @av_sha_alloc() local_unnamed_addr #2

declare %struct.AVAES* @av_aes_alloc() local_unnamed_addr #2

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) local_unnamed_addr #2

declare i32 @av_sha_init(%struct.AVSHA*, i32) local_unnamed_addr #2

declare void @av_sha_update(%struct.AVSHA*, i8*, i32) local_unnamed_addr #2

declare void @av_sha_final(%struct.AVSHA*, i8*) local_unnamed_addr #2

declare i32 @av_aes_init(%struct.AVAES*, i8*, i32, i32) local_unnamed_addr #2

declare void @av_aes_crypt(%struct.AVAES*, i8*, i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) local_unnamed_addr #2

declare void @avpriv_request_sample(i8*, i8*, ...) local_unnamed_addr #2

declare i32 @ff_mov_lang_to_iso639(i32, i8*) local_unnamed_addr #2

declare i32 @avpriv_dict_set_timestamp(%struct.AVDictionary**, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @update_frag_index(%struct.MOVContext*, i64) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %8 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %7, align 8
  %9 = add nsw i32 %4, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %8, i64 %10, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp sge i64 %12, %1
  %14 = icmp sgt i32 %4, 0
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %33

16:                                               ; preds = %6, %16
  %17 = phi i32 [ %25, %16 ], [ %4, %6 ]
  %18 = phi i32 [ %27, %16 ], [ -1, %6 ]
  %19 = add nsw i32 %18, %17
  %20 = ashr i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %8, i64 %21, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %23, %1
  %25 = select i1 %24, i32 %17, i32 %20
  %26 = icmp sgt i64 %23, %1
  %27 = select i1 %26, i32 %18, i32 %20
  %28 = sub nsw i32 %25, %27
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %16, label %30

30:                                               ; preds = %16, %2
  %31 = phi i32 [ 0, %2 ], [ %25, %16 ]
  %32 = icmp slt i32 %31, %4
  br i1 %32, label %38, label %33

33:                                               ; preds = %6, %30
  %34 = phi i32 [ %31, %30 ], [ %4, %6 ]
  %35 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %36 = bitcast %struct.MOVFragmentIndexItem** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %48

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %40 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %39, align 8
  %41 = sext i32 %31 to i64
  %42 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %40, i64 %41, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %127, label %45

45:                                               ; preds = %38
  %46 = bitcast %struct.MOVFragmentIndexItem* %40 to i8*
  %47 = bitcast %struct.MOVFragmentIndexItem** %39 to i8**
  br label %48

48:                                               ; preds = %45, %33
  %49 = phi i32 [ %31, %45 ], [ %34, %33 ]
  %50 = phi i8** [ %47, %45 ], [ %36, %33 ]
  %51 = phi i8* [ %46, %45 ], [ %37, %33 ]
  %52 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %53 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 0
  %54 = add nsw i32 %4, 1
  %55 = sext i32 %54 to i64
  %56 = shl nsw i64 %55, 5
  %57 = tail call i8* @av_fast_realloc(i8* %51, i32* %53, i64 %56) #11
  %58 = icmp eq i8* %57, null
  br i1 %58, label %127, label %59

59:                                               ; preds = %48
  store i8* %57, i8** %50, align 8
  %60 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %60, align 8
  %62 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i64 0, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = tail call i8* @av_realloc_array(i8* null, i64 %64, i64 56) #11
  %66 = bitcast i8* %65 to %struct.MOVFragmentStreamInfo*
  %67 = icmp eq i8* %65, null
  br i1 %67, label %127, label %68

68:                                               ; preds = %59
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %60, align 8
  %70 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %69, i64 0, i32 6
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %98, label %73

73:                                               ; preds = %68, %84
  %74 = phi i64 [ %92, %84 ], [ 0, %68 ]
  %75 = phi %struct.AVFormatContext* [ %93, %84 ], [ %69, %68 ]
  %76 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %75, i64 0, i32 7
  %77 = load %struct.AVStream**, %struct.AVStream*** %76, align 8
  %78 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %77, i64 %74
  %79 = load %struct.AVStream*, %struct.AVStream** %78, align 8
  %80 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %73
  tail call void @av_free(i8* nonnull %65) #11
  br label %127

84:                                               ; preds = %73
  %85 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %66, i64 %74, i32 0
  store i32 %81, i32* %85, align 8
  %86 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %66, i64 %74, i32 1
  %87 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %66, i64 %74, i32 3
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %88, align 8
  %89 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %89, align 8
  %90 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %66, i64 %74, i32 5
  store i32 -1, i32* %90, align 8
  %91 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %66, i64 %74, i32 6
  store %struct.MOVEncryptionIndex* null, %struct.MOVEncryptionIndex** %91, align 8
  %92 = add nuw nsw i64 %74, 1
  %93 = load %struct.AVFormatContext*, %struct.AVFormatContext** %60, align 8
  %94 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %93, i64 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %92, %96
  br i1 %97, label %73, label %98

98:                                               ; preds = %84, %68
  %99 = load i32, i32* %3, align 4
  %100 = icmp sgt i32 %99, %49
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = sext i32 %49 to i64
  br label %113

103:                                              ; preds = %98
  %104 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %52, align 8
  %105 = sext i32 %49 to i64
  %106 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %104, i64 %105
  %107 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %106, i64 1
  %108 = bitcast %struct.MOVFragmentIndexItem* %107 to i8*
  %109 = bitcast %struct.MOVFragmentIndexItem* %106 to i8*
  %110 = sub nsw i32 %99, %49
  %111 = sext i32 %110 to i64
  %112 = shl nsw i64 %111, 5
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 %112, i1 false)
  br label %113

113:                                              ; preds = %101, %103
  %114 = phi i64 [ %102, %101 ], [ %105, %103 ]
  %115 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %52, align 8
  %116 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %115, i64 %114, i32 1
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %115, i64 %114, i32 2
  store i32 0, i32* %117, align 4
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %60, align 8
  %119 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %118, i64 0, i32 6
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %115, i64 %114, i32 3
  store i32 %120, i32* %121, align 8
  %122 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %115, i64 %114, i32 0
  store i64 %1, i64* %122, align 8
  %123 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %115, i64 %114, i32 4
  %124 = bitcast %struct.MOVFragmentStreamInfo** %123 to i8**
  store i8* %65, i8** %124, align 8
  %125 = load i32, i32* %3, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %3, align 4
  br label %127

127:                                              ; preds = %59, %48, %38, %113, %83
  %128 = phi i32 [ -1094995529, %83 ], [ %49, %113 ], [ %31, %38 ], [ -1, %48 ], [ -1, %59 ]
  ret i32 %128
}

declare i8* @av_realloc_array(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) local_unnamed_addr #7

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

declare i8* @av_mallocz_array(i64, i64) local_unnamed_addr #2

declare double @av_display_rotation_get(i32*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare double @hypot(double, double) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind readnone
declare i64 @av_d2q(double, i32) local_unnamed_addr #7

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) local_unnamed_addr #2

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) local_unnamed_addr #2

declare i32 @ff_generate_avci_extradata(%struct.AVStream*) local_unnamed_addr #2

declare i32 @av_reallocp_array(i8*, i64, i64) local_unnamed_addr #2

declare i32 @ff_rfps_add_frame(%struct.AVFormatContext*, %struct.AVStream*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @find_prev_closest_index(%struct.AVStream*, %struct.AVIndexEntry*, i32, %struct.MOVStts* readonly, i64, i64, i32, i64*, i64*, i64*) unnamed_addr #0 {
  %11 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i64 0, i32 40
  %12 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %11, align 8
  %13 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %12, i64 0, i32 11
  %14 = bitcast %struct.AVIndexEntry** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %12, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i64* %7, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 3231) #11
  tail call void @abort() #12
  unreachable

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i64 0, i32 3
  %22 = bitcast i8** %21 to %struct.MOVStreamContext**
  %23 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %22, align 8
  %24 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %23, i64 0, i32 48
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = zext i32 %27 to i64
  %29 = sub nsw i64 %5, %28
  store %struct.AVIndexEntry* %1, %struct.AVIndexEntry** %13, align 8
  %30 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %11, align 8
  %31 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %30, i64 0, i32 12
  store i32 %2, i32* %31, align 8
  %32 = or i32 %6, 1
  %33 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %0, i64 %29, i32 %32) #11
  %34 = sext i32 %33 to i64
  store i64 %34, i64* %7, align 8
  %35 = icmp sgt i32 %33, 0
  br i1 %35, label %36, label %58

36:                                               ; preds = %20
  %37 = and i32 %6, 4
  %38 = icmp eq i32 %37, 0
  br label %39

39:                                               ; preds = %36, %55
  %40 = phi i64 [ %34, %36 ], [ %56, %55 ]
  %41 = phi i64 [ %34, %36 ], [ %44, %55 ]
  %42 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1, i64 %41, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %41, -1
  %45 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1, i64 %44, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %43, %46
  br i1 %47, label %48, label %58

48:                                               ; preds = %39
  br i1 %38, label %49, label %54

49:                                               ; preds = %48
  %50 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1, i64 %44, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %49, %48
  store i64 %44, i64* %7, align 8
  br label %55

55:                                               ; preds = %49, %54
  %56 = phi i64 [ %40, %49 ], [ %44, %54 ]
  %57 = icmp sgt i64 %44, 0
  br i1 %57, label %39, label %58

58:                                               ; preds = %55, %39, %20
  %59 = phi i64 [ %34, %20 ], [ %56, %55 ], [ %40, %39 ]
  %60 = icmp ne %struct.MOVStts* %3, null
  %61 = icmp sgt i64 %59, -1
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %133

63:                                               ; preds = %58
  %64 = icmp eq i64* %8, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 3258) #11
  tail call void @abort() #12
  unreachable

66:                                               ; preds = %63
  %67 = icmp eq i64* %9, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 3259) #11
  tail call void @abort() #12
  unreachable

69:                                               ; preds = %66
  store i64 0, i64* %8, align 8
  store i64 0, i64* %9, align 8
  %70 = load i64, i64* %7, align 8
  %71 = icmp sgt i64 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %89, %69
  %73 = phi i64 [ %70, %69 ], [ %92, %89 ]
  %74 = icmp sgt i64 %73, -1
  br i1 %74, label %94, label %133

75:                                               ; preds = %69, %89
  %76 = phi i64 [ %90, %89 ], [ 0, %69 ]
  %77 = phi i64 [ %91, %89 ], [ 0, %69 ]
  %78 = load i64, i64* %8, align 8
  %79 = icmp slt i64 %78, %4
  br i1 %79, label %80, label %89

80:                                               ; preds = %75
  %81 = add nsw i64 %76, 1
  store i64 %81, i64* %9, align 8
  %82 = load i64, i64* %8, align 8
  %83 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %3, i64 %82, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = icmp eq i64 %81, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = add nsw i64 %82, 1
  store i64 %88, i64* %8, align 8
  store i64 0, i64* %9, align 8
  br label %89

89:                                               ; preds = %75, %87, %80
  %90 = phi i64 [ %76, %75 ], [ 0, %87 ], [ %81, %80 ]
  %91 = add nuw nsw i64 %77, 1
  %92 = load i64, i64* %7, align 8
  %93 = icmp slt i64 %91, %92
  br i1 %93, label %75, label %72

94:                                               ; preds = %72, %130
  %95 = phi i64 [ %131, %130 ], [ %73, %72 ]
  %96 = load i64, i64* %8, align 8
  %97 = icmp sgt i64 %96, -1
  %98 = icmp slt i64 %96, %4
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %133

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1, i64 %95, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %3, i64 %96, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %102, %105
  %107 = icmp sgt i64 %106, %29
  br i1 %107, label %113, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %1, i64 %95, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %133

113:                                              ; preds = %108, %100
  %114 = add nsw i64 %95, -1
  store i64 %114, i64* %7, align 8
  %115 = load i64, i64* %9, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %126

117:                                              ; preds = %113
  %118 = load i64, i64* %8, align 8
  %119 = add nsw i64 %118, -1
  store i64 %119, i64* %8, align 8
  %120 = icmp sgt i64 %118, 0
  br i1 %120, label %121, label %130

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %3, i64 %119, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, -1
  %125 = zext i32 %124 to i64
  br label %128

126:                                              ; preds = %113
  %127 = add nsw i64 %115, -1
  br label %128

128:                                              ; preds = %126, %121
  %129 = phi i64 [ %125, %121 ], [ %127, %126 ]
  store i64 %129, i64* %9, align 8
  br label %130

130:                                              ; preds = %128, %117
  %131 = load i64, i64* %7, align 8
  %132 = icmp sgt i64 %131, -1
  br i1 %132, label %94, label %133

133:                                              ; preds = %130, %94, %108, %58, %72
  %134 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %11, align 8
  %135 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %134, i64 0, i32 11
  %136 = bitcast %struct.AVIndexEntry** %135 to i64*
  store i64 %15, i64* %136, align 8
  %137 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %11, align 8
  %138 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %137, i64 0, i32 12
  store i32 %17, i32* %138, align 8
  %139 = load i64, i64* %7, align 8
  %140 = ashr i64 %139, 63
  %141 = trunc i64 %140 to i32
  ret i32 %141
}

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #2

declare i32 @av_index_search_timestamp(%struct.AVStream*, i64, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i64 @av_strlcat(i8*, i8*, i64) local_unnamed_addr #2

declare void @av_url_split(i8*, i32, i8*, i32, i8*, i32, i32*, i8*, i32, i8*) local_unnamed_addr #2

declare i32 @ffio_ensure_seekback(%struct.AVIOContext*, i64) local_unnamed_addr #2

declare i32 @ff_mov_read_esds(%struct.AVFormatContext*, %struct.AVIOContext*) local_unnamed_addr #2

declare i32 @av_get_channel_layout_nb_channels(i64) local_unnamed_addr #2

declare i32 @ff_get_wav_header(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVCodecParameters*, i32, i32) local_unnamed_addr #2

declare i32 @ff_mov_read_chan(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVStream*, i64) local_unnamed_addr #2

declare i8* @av_stristr(i8*, i8*) local_unnamed_addr #2

declare i8* @av_realloc_f(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

declare %struct.AVSphericalMapping* @av_spherical_alloc(i64*) local_unnamed_addr #2

declare %struct.AVStereo3D* @av_stereo3d_alloc() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @get_current_encryption_info(%struct.MOVContext* nocapture readonly, %struct.MOVEncryptionIndex** nocapture, %struct.MOVStreamContext** nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %5, %9
  br i1 %10, label %11, label %78

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 33, i32 4
  %13 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %12, align 8
  %14 = sext i32 %5 to i64
  %15 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %13, i64 %14, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %78

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %13, i64 %14, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %16, %20
  br i1 %21, label %22, label %78

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %13, i64 %14, i32 4
  %24 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %23, align 8
  %25 = sext i32 %16 to i64
  %26 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %24, i64 %25
  %27 = icmp eq %struct.MOVFragmentStreamInfo* %26, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %29, align 8
  %31 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i64 0, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %116, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i64 0, i32 7
  %38 = load %struct.AVStream**, %struct.AVStream*** %37, align 8
  %39 = zext i32 %32 to i64
  br label %40

40:                                               ; preds = %34, %48
  %41 = phi i64 [ 0, %34 ], [ %49, %48 ]
  %42 = phi i32 [ 0, %34 ], [ %50, %48 ]
  %43 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %38, i64 %41
  %44 = load %struct.AVStream*, %struct.AVStream** %43, align 8
  %45 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %36
  br i1 %47, label %52, label %48

48:                                               ; preds = %40
  %49 = add nuw nsw i64 %41, 1
  %50 = add nuw nsw i32 %42, 1
  %51 = icmp ult i64 %49, %39
  br i1 %51, label %40, label %54

52:                                               ; preds = %40
  %53 = trunc i64 %41 to i32
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi i32 [ %53, %52 ], [ %50, %48 ]
  %56 = phi %struct.AVStream* [ %44, %52 ], [ inttoptr (i64 -6148914691236517206 to %struct.AVStream*), %48 ]
  %57 = icmp eq i32 %55, %32
  br i1 %57, label %116, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %56, i64 0, i32 3
  %60 = bitcast i8** %59 to %struct.MOVStreamContext**
  %61 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %60, align 8
  store %struct.MOVStreamContext* %61, %struct.MOVStreamContext** %2, align 8
  %62 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %24, i64 %25, i32 6
  %63 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %62, align 8
  %64 = icmp eq %struct.MOVEncryptionIndex* %63, null
  %65 = ptrtoint %struct.MOVEncryptionIndex* %63 to i64
  br i1 %64, label %66, label %75

66:                                               ; preds = %58
  %67 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %61, i64 0, i32 73, i32 2
  %68 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %67, align 8
  %69 = icmp eq %struct.AVEncryptionInfo* %68, null
  br i1 %69, label %116, label %70

70:                                               ; preds = %66
  %71 = tail call noalias i8* @av_mallocz(i64 56) #11
  %72 = bitcast %struct.MOVEncryptionIndex** %62 to i8**
  store i8* %71, i8** %72, align 8
  %73 = icmp eq i8* %71, null
  %74 = ptrtoint i8* %71 to i64
  br i1 %73, label %116, label %75

75:                                               ; preds = %70, %58
  %76 = phi i64 [ %74, %70 ], [ %65, %58 ]
  %77 = bitcast %struct.MOVEncryptionIndex** %1 to i64*
  store i64 %76, i64* %77, align 8
  br label %116

78:                                               ; preds = %11, %18, %3, %7, %22
  %79 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %80 = load %struct.AVFormatContext*, %struct.AVFormatContext** %79, align 8
  %81 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %80, i64 0, i32 6
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %116, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %80, i64 0, i32 7
  %86 = load %struct.AVStream**, %struct.AVStream*** %85, align 8
  %87 = add i32 %82, -1
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %86, i64 %88
  %90 = load %struct.AVStream*, %struct.AVStream** %89, align 8
  %91 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %90, i64 0, i32 3
  %92 = bitcast i8** %91 to %struct.MOVStreamContext**
  %93 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %92, align 8
  store %struct.MOVStreamContext* %93, %struct.MOVStreamContext** %2, align 8
  %94 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %93, i64 0, i32 73, i32 3
  %95 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %94, align 8
  %96 = icmp eq %struct.MOVEncryptionIndex* %95, null
  br i1 %96, label %97, label %110

97:                                               ; preds = %84
  %98 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %93, i64 0, i32 73, i32 2
  %99 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %98, align 8
  %100 = icmp eq %struct.AVEncryptionInfo* %99, null
  br i1 %100, label %116, label %101

101:                                              ; preds = %97
  %102 = tail call noalias i8* @av_mallocz(i64 56) #11
  %103 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %2, align 8
  %104 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %103, i64 0, i32 73, i32 3
  %105 = bitcast %struct.MOVEncryptionIndex** %104 to i8**
  store i8* %102, i8** %105, align 8
  %106 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %2, align 8
  %107 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %106, i64 0, i32 73, i32 3
  %108 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %107, align 8
  %109 = icmp eq %struct.MOVEncryptionIndex* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %101, %84
  %111 = phi %struct.MOVStreamContext* [ %106, %101 ], [ %93, %84 ]
  %112 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %111, i64 0, i32 73, i32 3
  %113 = bitcast %struct.MOVEncryptionIndex** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %struct.MOVEncryptionIndex** %1 to i64*
  store i64 %114, i64* %115, align 8
  br label %116

116:                                              ; preds = %28, %101, %97, %78, %70, %66, %54, %110, %75
  %117 = phi i32 [ 1, %75 ], [ 1, %110 ], [ 0, %54 ], [ 0, %66 ], [ -12, %70 ], [ 0, %78 ], [ 0, %97 ], [ -12, %101 ], [ 0, %28 ]
  ret i32 %117
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_read_sample_encryption_info(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, %struct.MOVStreamContext* nocapture readonly, %struct.AVEncryptionInfo** nocapture, i32) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %2, i64 0, i32 73, i32 2
  %7 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %6, align 8
  %8 = icmp eq %struct.AVEncryptionInfo* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %11 = bitcast %struct.AVFormatContext** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.226, i64 0, i64 0)) #11
  br label %79

13:                                               ; preds = %5
  %14 = tail call %struct.AVEncryptionInfo* @av_encryption_info_clone(%struct.AVEncryptionInfo* nonnull %7) #11
  store %struct.AVEncryptionInfo* %14, %struct.AVEncryptionInfo** %3, align 8
  %15 = icmp eq %struct.AVEncryptionInfo* %14, null
  br i1 %15, label %79, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %2, i64 0, i32 73, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %14, i64 0, i32 5
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @ffio_read_size(%struct.AVIOContext* %1, i8* %22, i32 %18) #11
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %27 = bitcast %struct.AVFormatContext** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.227, i64 0, i64 0)) #11
  %29 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  tail call void @av_encryption_info_free(%struct.AVEncryptionInfo* %29) #11
  store %struct.AVEncryptionInfo* null, %struct.AVEncryptionInfo** %3, align 8
  br label %79

30:                                               ; preds = %16, %20
  %31 = icmp eq i32 %4, 0
  br i1 %31, label %79, label %32

32:                                               ; preds = %30
  %33 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %34 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %35 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %34, i64 0, i32 7
  %36 = bitcast %struct.AVSubsampleEncryptionInfo** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @av_free(i8* %37) #11
  %38 = zext i32 %33 to i64
  %39 = tail call i8* @av_mallocz_array(i64 %38, i64 8) #11
  %40 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %41 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %40, i64 0, i32 7
  %42 = bitcast %struct.AVSubsampleEncryptionInfo** %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %44 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %43, i64 0, i32 7
  %45 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %44, align 8
  %46 = icmp eq %struct.AVSubsampleEncryptionInfo* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %32
  %48 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %1, i64 0, i32 10
  %49 = icmp eq i32 %33, 0
  br i1 %49, label %68, label %51

50:                                               ; preds = %32
  tail call void @av_encryption_info_free(%struct.AVEncryptionInfo* %43) #11
  store %struct.AVEncryptionInfo* null, %struct.AVEncryptionInfo** %3, align 8
  br label %79

51:                                               ; preds = %47, %55
  %52 = phi i64 [ %66, %55 ], [ 0, %47 ]
  %53 = load i32, i32* %48, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %51
  %56 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %57 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %58 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %57, i64 0, i32 7
  %59 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %58, align 8
  %60 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %59, i64 %52, i32 0
  store i32 %56, i32* %60, align 4
  %61 = tail call i32 @avio_rb32(%struct.AVIOContext* %1) #11
  %62 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %63 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %62, i64 0, i32 7
  %64 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %63, align 8
  %65 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %64, i64 %52, i32 1
  store i32 %61, i32* %65, align 4
  %66 = add nuw nsw i64 %52, 1
  %67 = icmp eq i64 %66, %38
  br i1 %67, label %68, label %51

68:                                               ; preds = %55, %47
  %69 = load i32, i32* %48, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %51, %68
  %72 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %73 = bitcast %struct.AVFormatContext** %72 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.228, i64 0, i64 0)) #11
  %75 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  tail call void @av_encryption_info_free(%struct.AVEncryptionInfo* %75) #11
  store %struct.AVEncryptionInfo* null, %struct.AVEncryptionInfo** %3, align 8
  br label %79

76:                                               ; preds = %68
  %77 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %3, align 8
  %78 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %77, i64 0, i32 8
  store i32 %33, i32* %78, align 8
  br label %79

79:                                               ; preds = %76, %30, %13, %71, %50, %25, %9
  %80 = phi i32 [ %23, %25 ], [ -1094995529, %71 ], [ -12, %50 ], [ -1094995529, %9 ], [ -12, %13 ], [ 0, %30 ], [ 0, %76 ]
  ret i32 %80
}

declare void @av_encryption_info_free(%struct.AVEncryptionInfo*) local_unnamed_addr #2

declare %struct.AVEncryptionInfo* @av_encryption_info_clone(%struct.AVEncryptionInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_parse_auxiliary_info(%struct.MOVContext* nocapture readonly, %struct.MOVStreamContext* nocapture readonly, %struct.AVIOContext*, %struct.MOVEncryptionIndex*) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #11
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %116

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %20, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %18 = bitcast %struct.AVFormatContext** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.235, i64 0, i64 0)) #11
  br label %116

20:                                               ; preds = %10
  %21 = icmp ugt i64 %12, 268435454
  br i1 %21, label %116, label %22

22:                                               ; preds = %20
  %23 = tail call i64 @avio_seek(%struct.AVIOContext* %2, i64 0, i32 1) #11
  %24 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %2, i64 0, i32 19
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 5
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 8
  %32 = tail call i64 @avio_seek(%struct.AVIOContext* %2, i64 %31, i32 0) #11
  %33 = load i64*, i64** %29, align 8
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %36, label %47

36:                                               ; preds = %28
  %37 = icmp eq i64 %12, 0
  br i1 %37, label %86, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %2, i64 0, i32 10
  %40 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 1
  %41 = bitcast %struct.AVEncryptionInfo*** %40 to i8**
  %42 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 4
  %43 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 2
  %44 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %1, i64 0, i32 73, i32 1
  %45 = load i32, i32* %39, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %56, label %86

47:                                               ; preds = %28, %22
  %48 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %49 = bitcast %struct.AVFormatContext** %48 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 32, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.236, i64 0, i64 0)) #11
  br label %98

51:                                               ; preds = %77
  %52 = icmp eq i64 %58, %12
  br i1 %52, label %86, label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %39, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %86

56:                                               ; preds = %38, %53
  %57 = phi i64 [ %58, %53 ], [ 0, %38 ]
  %58 = add nuw i64 %57, 1
  %59 = icmp ugt i64 %58, 1048576
  %60 = select i1 %59, i64 %58, i64 1048576
  %61 = icmp ugt i64 %60, %12
  %62 = select i1 %61, i64 %12, i64 %60
  %63 = load i8*, i8** %41, align 8
  %64 = shl i64 %62, 3
  %65 = and i64 %64, 34359738360
  %66 = call i8* @av_fast_realloc(i8* %63, i32* nonnull %5, i64 %65) #11
  %67 = icmp eq i8* %66, null
  br i1 %67, label %101, label %68

68:                                               ; preds = %56
  %69 = bitcast i8* %66 to %struct.AVEncryptionInfo**
  store i8* %66, i8** %41, align 8
  %70 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %69, i64 %57
  %71 = load i8, i8* %42, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = load i8*, i8** %43, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %57
  %76 = load i8, i8* %75, align 1
  br label %77

77:                                               ; preds = %68, %73
  %78 = phi i8 [ %76, %73 ], [ %71, %68 ]
  %79 = zext i8 %78 to i64
  %80 = load i32, i32* %44, align 8
  %81 = zext i32 %80 to i64
  %82 = icmp ugt i64 %79, %81
  %83 = zext i1 %82 to i32
  %84 = call fastcc i32 @mov_read_sample_encryption_info(%struct.MOVContext* %0, %struct.AVIOContext* %2, %struct.MOVStreamContext* %1, %struct.AVEncryptionInfo** %70, i32 %83)
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %101, label %51

86:                                               ; preds = %51, %53, %38, %36
  %87 = phi i64 [ 0, %36 ], [ 0, %38 ], [ %58, %53 ], [ %12, %51 ]
  %88 = phi i32 [ 0, %36 ], [ 0, %38 ], [ %84, %53 ], [ %84, %51 ]
  %89 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %2, i64 0, i32 10
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %94 = bitcast %struct.AVFormatContext** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %95, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.237, i64 0, i64 0)) #11
  br label %101

96:                                               ; preds = %86
  %97 = trunc i64 %12 to i32
  store i32 %97, i32* %7, align 8
  br label %98

98:                                               ; preds = %47, %96
  %99 = phi i32 [ %88, %96 ], [ 0, %47 ]
  %100 = call i64 @avio_seek(%struct.AVIOContext* %2, i64 %23, i32 0) #11
  br label %116

101:                                              ; preds = %77, %56, %92
  %102 = phi i64 [ %87, %92 ], [ %57, %56 ], [ %57, %77 ]
  %103 = phi i32 [ -1094995529, %92 ], [ %84, %77 ], [ -12, %56 ]
  %104 = call i64 @avio_seek(%struct.AVIOContext* %2, i64 %23, i32 0) #11
  %105 = icmp eq i64 %102, 0
  %106 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %3, i64 0, i32 1
  br i1 %105, label %114, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64 [ %110, %107 ], [ %102, %101 ]
  %109 = load %struct.AVEncryptionInfo**, %struct.AVEncryptionInfo*** %106, align 8
  %110 = add i64 %108, -1
  %111 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %109, i64 %110
  %112 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %111, align 8
  call void @av_encryption_info_free(%struct.AVEncryptionInfo* %112) #11
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %114, label %107

114:                                              ; preds = %107, %101
  %115 = bitcast %struct.AVEncryptionInfo*** %106 to i8*
  call void @av_freep(i8* %115) #11
  br label %116

116:                                              ; preds = %98, %114, %20, %4, %16
  %117 = phi i32 [ -1163346256, %16 ], [ 0, %4 ], [ -12, %20 ], [ %103, %114 ], [ %99, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #11
  ret i32 %117
}

declare %struct.AVEncryptionInitInfo* @av_encryption_init_info_alloc(i32, i32, i32, i32) local_unnamed_addr #2

declare i8* @av_stream_get_side_data(%struct.AVStream*, i32, i32*) local_unnamed_addr #2

declare %struct.AVEncryptionInitInfo* @av_encryption_init_info_get_side_data(i8*, i64) local_unnamed_addr #2

declare i8* @av_encryption_init_info_add_side_data(%struct.AVEncryptionInitInfo*, i64*) local_unnamed_addr #2

declare i32 @av_stream_add_side_data(%struct.AVStream*, i32, i8*, i64) local_unnamed_addr #2

declare void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo*) local_unnamed_addr #2

declare %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32, i32, i32) local_unnamed_addr #2

declare i32 @ff_alloc_extradata(%struct.AVCodecParameters*, i32) local_unnamed_addr #2

declare %struct.AVMasteringDisplayMetadata* @av_mastering_display_metadata_alloc() local_unnamed_addr #2

declare %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64*) local_unnamed_addr #2

declare %struct.AVDOVIDecoderConfigurationRecord* @av_dovi_alloc(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_metadata_int8_no_padding(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i8*) #0 {
  %5 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i64 0, i32 37
  %8 = load i32, i32* %7, align 4
  %9 = or i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %5, align 8
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i64 0, i32 29
  %12 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %13 = sext i32 %12 to i64
  %14 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %11, i8* %3, i64 %13, i32 0) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_metadata_track_or_disc_number(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i8*) #0 {
  %5 = alloca [16 x i8], align 16
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16, i1 false)
  %7 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %8 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %9 = icmp ugt i32 %2, 5
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = shl i32 %8, 16
  %12 = ashr exact i32 %11, 16
  br label %19

13:                                               ; preds = %4
  %14 = tail call i32 @avio_rb16(%struct.AVIOContext* %1) #11
  %15 = trunc i32 %14 to i16
  %16 = icmp eq i16 %15, 0
  %17 = shl i32 %8, 16
  %18 = ashr exact i32 %17, 16
  br i1 %16, label %19, label %22

19:                                               ; preds = %10, %13
  %20 = phi i32 [ %12, %10 ], [ %18, %13 ]
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.336, i64 0, i64 0), i32 %20) #11
  br label %26

22:                                               ; preds = %13
  %23 = shl i32 %14, 16
  %24 = ashr exact i32 %23, 16
  %25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), i32 %18, i32 %24) #11
  br label %26

26:                                               ; preds = %22, %19
  %27 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %27, align 8
  %29 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %28, i64 0, i32 37
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %27, align 8
  %33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i64 0, i32 29
  %34 = call i32 @av_dict_set(%struct.AVDictionary** %33, i8* %3, i8* nonnull %6, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_metadata_gnre(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i8*) #0 {
  %5 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %6 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %7 = shl i32 %6, 16
  %8 = add i32 %7, -65536
  %9 = icmp ugt i32 %8, 12451840
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = and i32 %6, 65535
  %12 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %12, align 8
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i64 0, i32 37
  %15 = load i32, i32* %14, align 4
  %16 = or i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %12, align 8
  %18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i64 0, i32 29
  %19 = add nsw i32 %11, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [192 x i8*], [192 x i8*]* @ff_id3v1_genre_str, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @av_dict_set(%struct.AVDictionary** %18, i8* %3, i8* %22, i32 0) #11
  br label %24

24:                                               ; preds = %4, %10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mov_metadata_int8_bypass_padding(%struct.MOVContext* nocapture readonly, %struct.AVIOContext*, i32, i8*) #0 {
  %5 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %6 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %7 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %8 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %0, i64 0, i32 1
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %8, align 8
  %10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i64 0, i32 37
  %11 = load i32, i32* %10, align 4
  %12 = or i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %8, align 8
  %14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i64 0, i32 29
  %15 = tail call i32 @avio_r8(%struct.AVIOContext* %1) #11
  %16 = sext i32 %15 to i64
  %17 = tail call i32 @av_dict_set_int(%struct.AVDictionary** %14, i8* %3, i64 %16, i32 0) #11
  ret i32 0
}

declare i32 @avio_get_str(%struct.AVIOContext*, i32, i8*, i32) local_unnamed_addr #2

declare i64 @av_strlcatf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare i32 @av_get_packet(%struct.AVIOContext*, %struct.AVPacket*, i32) local_unnamed_addr #2

declare i8* @av_default_item_name(i8*) #2

declare void @ff_rfps_calculate(%struct.AVFormatContext*) local_unnamed_addr #2

declare i32 @ff_replaygain_export(%struct.AVStream*, %struct.AVDictionary*) local_unnamed_addr #2

declare void @ff_configure_buffers_for_index(%struct.AVFormatContext*, i64) local_unnamed_addr #2

declare i32 @avio_get_str16be(%struct.AVIOContext*, i32, i8*, i32) local_unnamed_addr #2

declare i32 @avio_get_str16le(%struct.AVIOContext*, i32, i8*, i32) local_unnamed_addr #2

declare i32 @av_timecode_init(%struct.AVTimecode*, i64, i32, i32, i8*) local_unnamed_addr #2

declare i8* @av_timecode_make_string(%struct.AVTimecode*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.AVIndexEntry* @mov_find_next_sample(%struct.AVFormatContext*, %struct.AVStream** nocapture) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %88, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %8 = bitcast %struct.AVFormatContext* %0 to i8*
  %9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  br label %10

10:                                               ; preds = %6, %81
  %11 = phi i64 [ 0, %6 ], [ %84, %81 ]
  %12 = phi i64 [ 9223372036854775807, %6 ], [ %83, %81 ]
  %13 = phi %struct.AVIndexEntry* [ null, %6 ], [ %82, %81 ]
  %14 = load %struct.AVStream**, %struct.AVStream*** %7, align 8
  %15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %11
  %16 = load %struct.AVStream*, %struct.AVStream** %15, align 8
  %17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.MOVStreamContext**
  %19 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %18, align 8
  %20 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 0
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %22 = icmp eq %struct.AVIOContext* %21, null
  br i1 %22, label %81, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 33
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i64 0, i32 40
  %27 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %26, align 8
  %28 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %27, i64 0, i32 12
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %25, %29
  br i1 %30, label %31, label %81

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %27, i64 0, i32 11
  %33 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %32, align 8
  %34 = sext i32 %25 to i64
  %35 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %33, i64 %34
  %36 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %33, i64 %34, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %19, i64 0, i32 30
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = tail call i64 @av_rescale(i64 %37, i64 1000000, i64 %40) #14
  %42 = trunc i64 %11 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 56, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.411, i64 0, i64 0), i32 %42, i32 %25, i64 %41) #11
  %43 = icmp eq %struct.AVIndexEntry* %13, null
  br i1 %43, label %80, label %44

44:                                               ; preds = %31
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %9, align 8
  %46 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %45, i64 0, i32 19
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %35, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %13, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %80, label %81

56:                                               ; preds = %44
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %58 = icmp ne %struct.AVIOContext* %57, %45
  %59 = icmp sgt i64 %12, %41
  %60 = and i1 %59, %58
  br i1 %60, label %80, label %61

61:                                               ; preds = %56
  %62 = icmp eq %struct.AVIOContext* %57, %45
  %63 = icmp ne i64 %41, -9223372036854775808
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %81

65:                                               ; preds = %61
  %66 = sub nsw i64 %12, %41
  %67 = icmp slt i64 %66, 0
  %68 = sub nsw i64 0, %66
  %69 = select i1 %67, i64 %68, i64 %66
  %70 = icmp slt i64 %69, 1000001
  br i1 %70, label %71, label %77

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %35, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %13, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp slt i64 %73, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %71, %65
  %78 = icmp sgt i64 %69, 1000000
  %79 = and i1 %59, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %77, %56, %31, %71, %50
  store %struct.AVStream* %16, %struct.AVStream** %1, align 8
  br label %81

81:                                               ; preds = %50, %61, %77, %80, %10, %23
  %82 = phi %struct.AVIndexEntry* [ %13, %23 ], [ %13, %10 ], [ %35, %80 ], [ %13, %77 ], [ %13, %61 ], [ %13, %50 ]
  %83 = phi i64 [ %12, %23 ], [ %12, %10 ], [ %41, %80 ], [ %12, %77 ], [ %12, %61 ], [ %12, %50 ]
  %84 = add nuw nsw i64 %11, 1
  %85 = load i32, i32* %3, align 4
  %86 = zext i32 %85 to i64
  %87 = icmp ult i64 %84, %86
  br i1 %87, label %10, label %88

88:                                               ; preds = %81, %2
  %89 = phi %struct.AVIndexEntry* [ null, %2 ], [ %82, %81 ]
  ret %struct.AVIndexEntry* %89
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_switch_root(%struct.AVFormatContext*, i64, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %5 = bitcast i8** %4 to %struct.MOVContext**
  %6 = load %struct.MOVContext*, %struct.MOVContext** %5, align 8
  %7 = icmp sgt i32 %2, -1
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 33, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 33, i32 4
  %14 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %13, align 8
  %15 = sext i32 %2 to i64
  %16 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %14, i64 %15, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %12, %8, %3
  %19 = phi i64 [ %17, %12 ], [ %1, %8 ], [ %1, %3 ]
  %20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 4
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %22 = tail call i64 @avio_seek(%struct.AVIOContext* %21, i64 %19, i32 0) #11
  %23 = icmp eq i64 %22, %19
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 1
  %26 = bitcast %struct.AVFormatContext** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.412, i64 0, i64 0), i64 %19) #11
  br label %96

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 25
  store i64 0, i64* %29, align 8
  %30 = icmp sgt i32 %2, -1
  %31 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 33, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %2
  %34 = and i1 %30, %33
  br i1 %34, label %61, label %35

35:                                               ; preds = %28
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %83, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 33, i32 4
  %39 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %38, align 8
  %40 = add nsw i32 %32, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %39, i64 %41, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp sge i64 %43, %19
  %45 = icmp sgt i32 %32, 0
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %83

47:                                               ; preds = %37, %47
  %48 = phi i32 [ %56, %47 ], [ %32, %37 ]
  %49 = phi i32 [ %58, %47 ], [ -1, %37 ]
  %50 = add nsw i32 %49, %48
  %51 = ashr i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %39, i64 %52, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %19
  %56 = select i1 %55, i32 %48, i32 %51
  %57 = icmp sgt i64 %54, %19
  %58 = select i1 %57, i32 %49, i32 %51
  %59 = sub nsw i32 %56, %58
  %60 = icmp sgt i32 %59, 1
  br i1 %60, label %47, label %61

61:                                               ; preds = %47, %28
  %62 = phi i32 [ %2, %28 ], [ %56, %47 ]
  %63 = icmp slt i32 %62, %32
  br i1 %63, label %64, label %83

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 33, i32 4
  %66 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %65, align 8
  %67 = sext i32 %62 to i64
  %68 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %66, i64 %67, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %19
  br i1 %70, label %71, label %83

71:                                               ; preds = %64
  %72 = add nsw i32 %62, 1
  %73 = icmp slt i32 %72, %32
  br i1 %73, label %74, label %78

74:                                               ; preds = %71
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %66, i64 %75, i32 0
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %29, align 8
  br label %78

78:                                               ; preds = %74, %71
  %79 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %66, i64 %67, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  store i32 1, i32* %79, align 8
  br label %83

83:                                               ; preds = %37, %35, %82, %64, %61
  %84 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %6, i64 0, i32 5
  store i32 0, i32* %84, align 4
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %86 = tail call i32 @mov_read_default(%struct.MOVContext* %6, %struct.AVIOContext* %85, i32 1953460082, i64 9223372036854775807)
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %83
  %89 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %90 = tail call i32 @avio_feof(%struct.AVIOContext* %89) #11
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  %93 = bitcast %struct.AVFormatContext* %0 to i8*
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %20, align 8
  %95 = tail call i64 @avio_seek(%struct.AVIOContext* %94, i64 0, i32 1) #11
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 56, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.413, i64 0, i64 0), i64 %95) #11
  br label %96

96:                                               ; preds = %88, %83, %78, %92, %24
  %97 = phi i32 [ -1094995529, %24 ], [ 1, %92 ], [ 0, %78 ], [ %86, %83 ], [ -541478725, %88 ]
  ret i32 %97
}

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) local_unnamed_addr #2

declare i32 @av_new_packet(%struct.AVPacket*, i32) local_unnamed_addr #2

declare i8* @av_encryption_info_add_side_data(%struct.AVEncryptionInfo*, i64*) local_unnamed_addr #2

declare i32 @av_packet_add_side_data(%struct.AVPacket*, i32, i8*, i64) local_unnamed_addr #2

declare %struct.AVAESCTR* @av_aes_ctr_alloc() local_unnamed_addr #2

declare i32 @av_aes_ctr_init(%struct.AVAESCTR*, i8*) local_unnamed_addr #2

declare void @av_aes_ctr_set_full_iv(%struct.AVAESCTR*, i8*) local_unnamed_addr #2

declare void @av_aes_ctr_crypt(%struct.AVAESCTR*, i8*, i8*, i32) local_unnamed_addr #2

declare void @ff_format_io_close(%struct.AVFormatContext*, %struct.AVIOContext**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @mov_free_encryption_index(%struct.MOVEncryptionIndex**) unnamed_addr #0 {
  %2 = icmp eq %struct.MOVEncryptionIndex** %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %0, align 8
  %5 = icmp eq %struct.MOVEncryptionIndex* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %4, i64 0, i32 1
  br i1 %9, label %24, label %11

11:                                               ; preds = %6, %11
  %12 = phi i64 [ %17, %11 ], [ 0, %6 ]
  %13 = phi %struct.AVEncryptionInfo*** [ %23, %11 ], [ %10, %6 ]
  %14 = load %struct.AVEncryptionInfo**, %struct.AVEncryptionInfo*** %13, align 8
  %15 = getelementptr inbounds %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %14, i64 %12
  %16 = load %struct.AVEncryptionInfo*, %struct.AVEncryptionInfo** %15, align 8
  tail call void @av_encryption_info_free(%struct.AVEncryptionInfo* %16) #11
  %17 = add nuw nsw i64 %12, 1
  %18 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %0, align 8
  %19 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %17, %21
  %23 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %18, i64 0, i32 1
  br i1 %22, label %11, label %24

24:                                               ; preds = %11, %6
  %25 = phi %struct.AVEncryptionInfo*** [ %10, %6 ], [ %23, %11 ]
  %26 = bitcast %struct.AVEncryptionInfo*** %25 to i8*
  tail call void @av_freep(i8* %26) #11
  %27 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %0, align 8
  %28 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %27, i64 0, i32 2
  %29 = bitcast i8** %28 to i8*
  tail call void @av_freep(i8* %29) #11
  %30 = load %struct.MOVEncryptionIndex*, %struct.MOVEncryptionIndex** %0, align 8
  %31 = getelementptr inbounds %struct.MOVEncryptionIndex, %struct.MOVEncryptionIndex* %30, i64 0, i32 5
  %32 = bitcast i64** %31 to i8*
  tail call void @av_freep(i8* %32) #11
  %33 = bitcast %struct.MOVEncryptionIndex** %0 to i8*
  tail call void @av_freep(i8* nonnull %33) #11
  br label %34

34:                                               ; preds = %1, %3, %24
  ret void
}

declare void @av_aes_ctr_free(%struct.AVAESCTR*) local_unnamed_addr #2

declare void @avformat_free_context(%struct.AVFormatContext*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @mov_seek_stream(%struct.AVFormatContext*, %struct.AVStream*, i64, i32) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 3
  %6 = bitcast i8** %5 to %struct.MOVStreamContext**
  %7 = load %struct.MOVStreamContext*, %struct.MOVStreamContext** %6, align 8
  %8 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 32
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 48
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = sub i64 %2, %9
  %14 = sub i64 %13, %12
  %15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 3
  %16 = bitcast i8** %15 to %struct.MOVContext**
  %17 = load %struct.MOVContext*, %struct.MOVContext** %16, align 8
  %18 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %17, i64 0, i32 33, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %155, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %17, i64 0, i32 33, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %155, label %25

25:                                               ; preds = %21
  %26 = icmp eq %struct.AVStream* %1, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 72
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %31, %27, %25
  %35 = phi i32 [ -1, %25 ], [ %33, %31 ], [ -1, %27 ]
  %36 = icmp sgt i32 %23, 0
  br i1 %36, label %37, label %136

37:                                               ; preds = %34
  %38 = icmp sgt i32 %35, -1
  %39 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %17, i64 0, i32 33, i32 4
  %40 = sext i32 %23 to i64
  br label %41

41:                                               ; preds = %122, %37
  %42 = phi i32 [ -1, %37 ], [ %130, %122 ]
  %43 = phi i64 [ -6148914691236517206, %37 ], [ %125, %122 ]
  %44 = phi i32 [ %23, %37 ], [ %129, %122 ]
  %45 = add nsw i32 %44, %42
  %46 = ashr i32 %45, 1
  %47 = icmp slt i32 %46, %44
  br i1 %47, label %48, label %122

48:                                               ; preds = %41
  %49 = sext i32 %46 to i64
  %50 = sext i32 %44 to i64
  br label %51

51:                                               ; preds = %111, %48
  %52 = phi i64 [ %49, %48 ], [ %112, %111 ]
  %53 = phi i1 [ true, %48 ], [ %114, %111 ]
  %54 = phi i32 [ %46, %48 ], [ %113, %111 ]
  br i1 %38, label %64, label %55

55:                                               ; preds = %51
  %56 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %39, align 8
  %57 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %56, i64 %52, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %111

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %56, i64 %52, i32 4
  %62 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %61, align 8
  %63 = sext i32 %58 to i64
  br label %88

64:                                               ; preds = %51
  %65 = icmp sgt i64 %52, -1
  %66 = icmp slt i64 %52, %40
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %106

68:                                               ; preds = %64
  %69 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %39, align 8
  %70 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %69, i64 %52, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %106

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %69, i64 %52, i32 4
  %75 = load %struct.MOVFragmentStreamInfo*, %struct.MOVFragmentStreamInfo** %74, align 8
  %76 = sext i32 %71 to i64
  br label %79

77:                                               ; preds = %79
  %78 = icmp eq i64 %85, %76
  br i1 %78, label %106, label %79

79:                                               ; preds = %77, %73
  %80 = phi i64 [ 0, %73 ], [ %85, %77 ]
  %81 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %75, i64 %80
  %82 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, %35
  %85 = add nuw nsw i64 %80, 1
  br i1 %84, label %106, label %77

86:                                               ; preds = %101
  %87 = icmp eq i64 %105, %63
  br i1 %87, label %111, label %88

88:                                               ; preds = %86, %60
  %89 = phi i64 [ 0, %60 ], [ %105, %86 ]
  %90 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %62, i64 %89
  %91 = icmp eq %struct.MOVFragmentStreamInfo* %90, null
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.424, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 1265) #11
  tail call void @abort() #12
  unreachable

93:                                               ; preds = %88
  %94 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %62, i64 %89, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, -9223372036854775808
  br i1 %96, label %97, label %117

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %62, i64 %89, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, -9223372036854775808
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %62, i64 %89, i32 3
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, -9223372036854775808
  %105 = add nuw nsw i64 %89, 1
  br i1 %104, label %86, label %117

106:                                              ; preds = %79, %77, %68, %64
  %107 = phi %struct.MOVFragmentStreamInfo* [ null, %64 ], [ null, %68 ], [ %81, %79 ], [ null, %77 ]
  %108 = getelementptr inbounds %struct.MOVFragmentStreamInfo, %struct.MOVFragmentStreamInfo* %107, i64 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, -9223372036854775808
  br i1 %110, label %111, label %120

111:                                              ; preds = %86, %106, %55
  %112 = add nsw i64 %52, 1
  %113 = add nsw i32 %54, 1
  %114 = icmp slt i64 %112, %50
  %115 = trunc i64 %112 to i32
  %116 = icmp eq i32 %44, %115
  br i1 %116, label %122, label %51

117:                                              ; preds = %101, %97, %93
  %118 = phi i64 [ %103, %101 ], [ %95, %93 ], [ %99, %97 ]
  %119 = trunc i64 %52 to i32
  br label %122

120:                                              ; preds = %106
  %121 = trunc i64 %52 to i32
  br label %122

122:                                              ; preds = %111, %120, %117, %41
  %123 = phi i32 [ %46, %41 ], [ %119, %117 ], [ %121, %120 ], [ %113, %111 ]
  %124 = phi i1 [ false, %41 ], [ %53, %117 ], [ %53, %120 ], [ %114, %111 ]
  %125 = phi i64 [ %43, %41 ], [ %118, %117 ], [ %109, %120 ], [ -9223372036854775808, %111 ]
  %126 = xor i1 %124, true
  %127 = icmp sgt i64 %125, %14
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 %46, i32 %44
  %130 = select i1 %128, i32 %42, i32 %123
  %131 = sub nsw i32 %129, %130
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %41, label %133

133:                                              ; preds = %122
  %134 = icmp sgt i32 %130, 0
  %135 = select i1 %134, i32 %130, i32 0
  br label %136

136:                                              ; preds = %133, %34
  %137 = phi i32 [ 0, %34 ], [ %135, %133 ]
  %138 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %17, i64 0, i32 33, i32 4
  %139 = load %struct.MOVFragmentIndexItem*, %struct.MOVFragmentIndexItem** %138, align 8
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %139, i64 %140, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %136
  %145 = add nuw nsw i32 %137, 1
  %146 = icmp slt i32 %145, %23
  br i1 %146, label %147, label %155

147:                                              ; preds = %144
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds %struct.MOVFragmentIndexItem, %struct.MOVFragmentIndexItem* %139, i64 %148, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %struct.MOVContext, %struct.MOVContext* %17, i64 0, i32 25
  store i64 %150, i64* %151, align 8
  br label %155

152:                                              ; preds = %136
  %153 = tail call fastcc i32 @mov_switch_root(%struct.AVFormatContext* %0, i64 -1, i32 %137) #11
  %154 = icmp slt i32 %153, 0
  br i1 %154, label %289, label %155

155:                                              ; preds = %144, %147, %21, %4, %152
  %156 = tail call i32 @av_index_search_timestamp(%struct.AVStream* %1, i64 %14, i32 %3) #11
  %157 = bitcast %struct.AVFormatContext* %0 to i8*
  %158 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %157, i32 56, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.421, i64 0, i64 0), i32 %159, i64 %14, i32 %156) #11
  %160 = icmp slt i32 %156, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i64 0, i32 40
  %163 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %162, align 8
  %164 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %163, i64 0, i32 12
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %289, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %163, i64 0, i32 11
  %169 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %168, align 8
  %170 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %169, i64 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = icmp slt i64 %14, %171
  br i1 %172, label %173, label %289

173:                                              ; preds = %167, %155
  %174 = phi i32 [ %156, %155 ], [ 0, %167 ]
  %175 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 33
  store i32 %174, i32* %175, align 8
  %176 = sext i32 %174 to i64
  %177 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 34
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 35
  %179 = load %struct.MOVIndexRange*, %struct.MOVIndexRange** %178, align 8
  %180 = icmp eq %struct.MOVIndexRange* %179, null
  br i1 %180, label %204, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 36
  store %struct.MOVIndexRange* %179, %struct.MOVIndexRange** %182, align 8
  %183 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %179, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %204, label %186

186:                                              ; preds = %181, %197
  %187 = phi i64 [ %202, %197 ], [ %184, %181 ]
  %188 = phi i32 [ %199, %197 ], [ %174, %181 ]
  %189 = phi %struct.MOVIndexRange* [ %200, %197 ], [ %179, %181 ]
  %190 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %189, i64 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = sub nsw i64 %187, %191
  %193 = sext i32 %188 to i64
  %194 = icmp sgt i64 %192, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %186
  %196 = add nsw i64 %191, %193
  store i64 %196, i64* %177, align 8
  br label %204

197:                                              ; preds = %186
  %198 = trunc i64 %192 to i32
  %199 = sub i32 %188, %198
  %200 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %189, i64 1
  store %struct.MOVIndexRange* %200, %struct.MOVIndexRange** %182, align 8
  %201 = getelementptr inbounds %struct.MOVIndexRange, %struct.MOVIndexRange* %189, i64 1, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %186

204:                                              ; preds = %197, %173, %181, %195
  %205 = load i32, i32* %158, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %157, i32 56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.422, i64 0, i64 0), i32 %205, i32 %174) #11
  %206 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 12
  %207 = load %struct.MOVStts*, %struct.MOVStts** %206, align 8
  %208 = icmp eq %struct.MOVStts* %207, null
  br i1 %208, label %231, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 10
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %231, label %213

213:                                              ; preds = %209
  %214 = load i32, i32* %175, align 8
  %215 = zext i32 %211 to i64
  br label %216

216:                                              ; preds = %213, %228
  %217 = phi i64 [ 0, %213 ], [ %229, %228 ]
  %218 = phi i32 [ 0, %213 ], [ %221, %228 ]
  %219 = getelementptr inbounds %struct.MOVStts, %struct.MOVStts* %207, i64 %217, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = add i32 %220, %218
  %222 = icmp sgt i32 %221, %214
  br i1 %222, label %223, label %228

223:                                              ; preds = %216
  %224 = trunc i64 %217 to i32
  %225 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 21
  store i32 %224, i32* %225, align 4
  %226 = sub nsw i32 %214, %218
  %227 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 22
  store i32 %226, i32* %227, align 8
  br label %231

228:                                              ; preds = %216
  %229 = add nuw nsw i64 %217, 1
  %230 = icmp ult i64 %229, %215
  br i1 %230, label %216, label %231

231:                                              ; preds = %228, %209, %223, %204
  %232 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 4
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %289, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 13
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %289, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 14
  %241 = load %struct.MOVStsc*, %struct.MOVStsc** %240, align 8
  %242 = add i32 %233, 1
  %243 = add i32 %237, -1
  %244 = zext i32 %243 to i64
  %245 = zext i32 %237 to i64
  br label %246

246:                                              ; preds = %239, %285
  %247 = phi i64 [ 0, %239 ], [ %287, %285 ]
  %248 = phi i32 [ 0, %239 ], [ %286, %285 ]
  %249 = sext i32 %248 to i64
  %250 = icmp ult i64 %247, %244
  br i1 %250, label %251, label %258

251:                                              ; preds = %246
  %252 = add nuw nsw i64 %247, 1
  %253 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %241, i64 %252, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %241, i64 %247, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = sub nsw i32 %254, %256
  br label %265

258:                                              ; preds = %246
  %259 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %241, i64 %247, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp ugt i32 %260, %233
  br i1 %261, label %262, label %263

262:                                              ; preds = %258
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 2752) #11
  tail call void @abort() #12
  unreachable

263:                                              ; preds = %258
  %264 = sub i32 %242, %260
  br label %265

265:                                              ; preds = %251, %263
  %266 = phi i32 [ %264, %263 ], [ %257, %251 ]
  %267 = getelementptr inbounds %struct.MOVStsc, %struct.MOVStsc* %241, i64 %247, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = sext i32 %268 to i64
  %270 = sext i32 %266 to i64
  %271 = mul nsw i64 %269, %270
  %272 = add nsw i64 %271, %249
  %273 = load i32, i32* %175, align 8
  %274 = sext i32 %273 to i64
  %275 = icmp sgt i64 %272, %274
  br i1 %275, label %280, label %276

276:                                              ; preds = %265
  %277 = add nsw i64 %272, 2147483648
  %278 = icmp ult i64 %277, 4294967296
  br i1 %278, label %285, label %279

279:                                              ; preds = %276
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.423, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 8138) #11
  tail call void @abort() #12
  unreachable

280:                                              ; preds = %265
  %281 = trunc i64 %247 to i32
  %282 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 15
  store i32 %281, i32* %282, align 8
  %283 = sub nsw i32 %273, %248
  %284 = getelementptr inbounds %struct.MOVStreamContext, %struct.MOVStreamContext* %7, i64 0, i32 16
  store i32 %283, i32* %284, align 4
  br label %289

285:                                              ; preds = %276
  %286 = trunc i64 %272 to i32
  %287 = add nuw nsw i64 %247, 1
  %288 = icmp ult i64 %287, %245
  br i1 %288, label %246, label %289

289:                                              ; preds = %285, %235, %167, %161, %280, %231, %152
  %290 = phi i32 [ %153, %152 ], [ %174, %231 ], [ %174, %280 ], [ -1094995529, %161 ], [ -1094995529, %167 ], [ %174, %235 ], [ %174, %285 ]
  ret i32 %290
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 32}
!3 = !{i32 1721170}
!4 = !{i32 1721328}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{i32 2340312, i32 2340326}
