; ModuleID = '../../components/subresource_filter/core/common/indexed_ruleset.cc'
source_filename = "../../components/subresource_filter/core/common/indexed_ruleset.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.subresource_filter::RulesetIndexer" = type { %"class.flatbuffers::FlatBufferBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.url_pattern_index::UrlPatternIndexBuilder", %"class.std::__1::map" }
%"class.flatbuffers::FlatBufferBuilder" = type { %"class.flatbuffers::vector_downward", i32, i16, i8, i8, i64, i8, i8, %"class.std::__1::set"* }
%"class.flatbuffers::vector_downward" = type { %"class.flatbuffers::Allocator"*, i8, i64, i64, i64, i8*, i8*, i8* }
%"class.flatbuffers::Allocator" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" }
%"struct.flatbuffers::FlatBufferBuilder::StringOffsetCompare" = type { %"class.flatbuffers::vector_downward"* }
%"class.url_pattern_index::UrlPatternIndexBuilder" = type { %"class.url_pattern_index::ClosedHashMap", %"class.std::__1::vector.16", %"class.flatbuffers::FlatBufferBuilder"* }
%"class.url_pattern_index::ClosedHashMap" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.9", %"class.url_pattern_index::SimpleQuadraticProber", [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair"* }
%"class.url_pattern_index::SimpleQuadraticProber" = type { %"class.url_pattern_index::Uint64ToUint32Hasher" }
%"class.url_pattern_index::Uint64ToUint32Hasher" = type { i8 }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.flatbuffers::Offset"*, %"struct.flatbuffers::Offset"*, %"class.std::__1::__compressed_pair.18" }
%"struct.flatbuffers::Offset" = type { i32 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.flatbuffers::Offset"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.subresource_filter::IndexedRulesetMatcher" = type { %"struct.subresource_filter::flat::IndexedRuleset"*, %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher" }
%"struct.subresource_filter::flat::IndexedRuleset" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.url_pattern_index::UrlPatternIndexMatcher" = type { %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"class.absl::optional" }
%"struct.url_pattern_index::flat::UrlPatternIndex" = type { %"class.flatbuffers::Table" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.52 }
%union.anon.52 = type { i64 }
%"class.std::__1::__tree_node.67" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.68" }
%"struct.std::__1::pair.68" = type <{ %"class.std::__1::vector.69", %"struct.flatbuffers::Offset.76", [4 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.flatbuffers::Offset.61"*, %"struct.flatbuffers::Offset.61"*, %"class.std::__1::__compressed_pair.71" }
%"struct.flatbuffers::Offset.61" = type { i32 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.flatbuffers::Offset.61"* }
%"struct.flatbuffers::Offset.76" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.flatbuffers::Offset.61" }
%"class.url_pattern_index::proto::UrlRule" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.31", %"struct.std::__1::atomic.35", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url_pattern_index::flat::UrlRule" = type { %"class.flatbuffers::Table" }
%"class.base::TimeDelta" = type { i64 }
%"class.flatbuffers::Verifier" = type <{ i8*, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.47", [4 x i8] }>
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.77", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.79", i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.90" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.56" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.subresource_filter::FirstPartyOrigin" = type <{ %"class.url::Origin", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.url_pattern_index::flat::NGramToRules" = type { %"class.flatbuffers::Table" }

$_ZN11flatbuffers17FlatBufferBuilderD2Ev = comdat any

$_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder9AddOffsetIN17url_pattern_index4flat15UrlPatternIndexEEEvtNS_6OffsetIT_EE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_ = comdat any

$_ZN11flatbuffers15vector_downward10reallocateEm = comdat any

$_ZN11flatbuffers17FlatBufferBuilder8EndTableEj = comdat any

$_ZNK18subresource_filter4flat14IndexedRuleset6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK17url_pattern_index4flat15UrlPatternIndex6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK17url_pattern_index4flat12NGramToRules6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK17url_pattern_index4flat7UrlRule6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZN18subresource_filter14RulesetIndexer21kIndexedFormatVersionE = hidden local_unnamed_addr constant i32 30, align 4
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [30 x i8] c"IndexedRulesetMatcher::Verify\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"SubresourceFilter.IndexRuleset.Verify.Status\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"SubresourceFilter.IndexRuleset.Verify2.WallDuration\00", align 1
@_ZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN18subresource_filter14RulesetIndexerC1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::RulesetIndexer"*), void (%"class.subresource_filter::RulesetIndexer"*)* @_ZN18subresource_filter14RulesetIndexerC2Ev
@_ZN18subresource_filter14RulesetIndexerD1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::RulesetIndexer"*), void (%"class.subresource_filter::RulesetIndexer"*)* @_ZN18subresource_filter14RulesetIndexerD2Ev
@_ZN18subresource_filter21IndexedRulesetMatcherC1EPKhm = hidden unnamed_addr alias void (%"class.subresource_filter::IndexedRulesetMatcher"*, i8*, i64), void (%"class.subresource_filter::IndexedRulesetMatcher"*, i8*, i64)* @_ZN18subresource_filter21IndexedRulesetMatcherC2EPKhm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter14RulesetIndexerC2Ev(%"class.subresource_filter::RulesetIndexer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %3, align 8
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 1024, i64 8>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 5
  %9 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false) #8
  store i64 1, i64* %8, align 8
  %10 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 8
  store %"class.std::__1::set"* null, %"class.std::__1::set"** %12, align 8
  %13 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %13, %"class.flatbuffers::FlatBufferBuilder"* %2) #8
  %14 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 2
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %14, %"class.flatbuffers::FlatBufferBuilder"* %2) #8
  %15 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 3
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %15, %"class.flatbuffers::FlatBufferBuilder"* %2) #8
  %16 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  ret void
}

declare void @_ZN17url_pattern_index22UrlPatternIndexBuilderC1EPN11flatbuffers17FlatBufferBuilderE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, %"class.flatbuffers::FlatBufferBuilder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter14RulesetIndexerD2Ev(%"class.subresource_filter::RulesetIndexer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.67"**
  %5 = load %"class.std::__1::__tree_node.67"*, %"class.std::__1::__tree_node.67"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.23"* %2, %"class.std::__1::__tree_node.67"* %5) #8
  %6 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 3
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* %6) #8
  %7 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 2
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* %7) #8
  %8 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"* %8) #8
  %9 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers17FlatBufferBuilderD2Ev(%"class.flatbuffers::FlatBufferBuilder"* %9) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17url_pattern_index22UrlPatternIndexBuilderD1Ev(%"class.url_pattern_index::UrlPatternIndexBuilder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilderD2Ev(%"class.flatbuffers::FlatBufferBuilder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 8
  %3 = load %"class.std::__1::set"*, %"class.std::__1::set"** %2, align 8
  %4 = icmp eq %"class.std::__1::set"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::set"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %16, align 8
  %18 = icmp eq %"class.flatbuffers::Allocator"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.flatbuffers::Allocator"* %17 to void (%"class.flatbuffers::Allocator"*, i8*, i64)***
  %23 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)**, void (%"class.flatbuffers::Allocator"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %23, i64 3
  %25 = load void (%"class.flatbuffers::Allocator"*, i8*, i64)*, void (%"class.flatbuffers::Allocator"*, i8*, i64)** %24, align 8
  tail call void %25(%"class.flatbuffers::Allocator"* nonnull %17, i8* nonnull %13, i64 %21) #8
  br label %27

26:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %13) #9
  br label %27

27:                                               ; preds = %26, %19, %11
  store i8* null, i8** %12, align 8
  %28 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %32, align 8
  %34 = icmp eq %"class.flatbuffers::Allocator"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.flatbuffers::Allocator"* %33 to void (%"class.flatbuffers::Allocator"*)***
  %37 = load void (%"class.flatbuffers::Allocator"*)**, void (%"class.flatbuffers::Allocator"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %37, i64 1
  %39 = load void (%"class.flatbuffers::Allocator"*)*, void (%"class.flatbuffers::Allocator"*)** %38, align 8
  tail call void %39(%"class.flatbuffers::Allocator"* nonnull %33) #8
  br label %40

40:                                               ; preds = %27, %31, %35
  %41 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 0
  store %"class.flatbuffers::Allocator"* null, %"class.flatbuffers::Allocator"** %41, align 8
  store i8 0, i8* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18subresource_filter14RulesetIndexer10AddUrlRuleERKN17url_pattern_index5proto7UrlRuleE(%"class.subresource_filter::RulesetIndexer"*, %"class.url_pattern_index::proto::UrlRule"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 4
  %5 = tail call i32 @_ZN17url_pattern_index16SerializeUrlRuleERKNS_5proto7UrlRuleEPN11flatbuffers17FlatBufferBuilderEPNSt3__13mapINS7_6vectorINS4_6OffsetINS4_6StringEEENS7_9allocatorISC_EEEENSA_INS4_6VectorISC_EEEENS_19OffsetVectorCompareENSD_INS7_4pairIKSF_SI_EEEEEE(%"class.url_pattern_index::proto::UrlRule"* dereferenceable(88) %1, %"class.flatbuffers::FlatBufferBuilder"* %3, %"class.std::__1::map"* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %72, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.url_pattern_index::proto::UrlRule", %"class.url_pattern_index::proto::UrlRule"* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %12, i32 %5) #8
  br label %72

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %17, %18
  %23 = add i64 %22, %21
  %24 = and i64 %23, 4294967295
  %25 = getelementptr inbounds i8, i8* %15, i64 %24
  %26 = zext i32 %5 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = bitcast i8* %28 to %"struct.url_pattern_index::flat::UrlRule"*
  %30 = bitcast i8* %28 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = sub nsw i64 0, %32
  %34 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %33
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp ugt i16 %36, 6
  br i1 %37, label %38, label %49

38:                                               ; preds = %13
  %39 = getelementptr inbounds i8, i8* %34, i64 6
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = zext i16 %41 to i64
  %45 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %44
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %13, %38, %43
  %50 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 2
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %50, i32 %5) #8
  %51 = load i32, i32* %30, align 4
  %52 = sext i32 %51 to i64
  %53 = sub nsw i64 0, %52
  br label %54

54:                                               ; preds = %43, %49
  %55 = phi i64 [ %33, %43 ], [ %53, %49 ]
  %56 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %55
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp ugt i16 %58, 10
  br i1 %59, label %60, label %72

60:                                               ; preds = %54
  %61 = getelementptr inbounds i8, i8* %56, i64 10
  %62 = bitcast i8* %61 to i16*
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = zext i16 %63 to i64
  %67 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %29, i64 0, i32 0, i32 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 3
  tail call void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"* %71, i32 %5) #8
  br label %72

72:                                               ; preds = %54, %60, %11, %65, %70, %2
  %73 = phi i1 [ false, %2 ], [ true, %70 ], [ true, %65 ], [ true, %11 ], [ true, %60 ], [ true, %54 ]
  ret i1 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @_ZN17url_pattern_index16SerializeUrlRuleERKNS_5proto7UrlRuleEPN11flatbuffers17FlatBufferBuilderEPNSt3__13mapINS7_6vectorINS4_6OffsetINS4_6StringEEENS7_9allocatorISC_EEEENSA_INS4_6VectorISC_EEEENS_19OffsetVectorCompareENSD_INS7_4pairIKSF_SI_EEEEEE(%"class.url_pattern_index::proto::UrlRule"* dereferenceable(88), %"class.flatbuffers::FlatBufferBuilder"*, %"class.std::__1::map"*) local_unnamed_addr #1

declare void @_ZN17url_pattern_index22UrlPatternIndexBuilder12IndexUrlRuleEN11flatbuffers6OffsetINS_4flat7UrlRuleEEE(%"class.url_pattern_index::UrlPatternIndexBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter14RulesetIndexer6FinishEv(%"class.subresource_filter::RulesetIndexer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"* %2) #8
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 2
  %5 = tail call i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"* %4) #8
  %6 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 3
  %7 = tail call i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"* %6) #8
  %8 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %9, align 2
  %10 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %14
  %19 = add i64 %18, %17
  %20 = trunc i64 %19 to i32
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetIN17url_pattern_index4flat15UrlPatternIndexEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %8, i16 zeroext 8, i32 %7) #8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetIN17url_pattern_index4flat15UrlPatternIndexEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %8, i16 zeroext 6, i32 %5) #8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetIN17url_pattern_index4flat15UrlPatternIndexEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"* %8, i16 zeroext 4, i32 %3) #8
  %21 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"* %8, i32 %20) #8
  tail call void @_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb(%"class.flatbuffers::FlatBufferBuilder"* %8, i32 %21, i8* null, i1 zeroext false) #8
  ret void
}

declare i32 @_ZN17url_pattern_index22UrlPatternIndexBuilder6FinishEv(%"class.url_pattern_index::UrlPatternIndexBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK18subresource_filter14RulesetIndexer11GetChecksumEv(%"class.subresource_filter::RulesetIndexer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 6
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.subresource_filter::RulesetIndexer", %"class.subresource_filter::RulesetIndexer"* %0, i64 0, i32 0, i32 0, i32 5
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %5, %6
  %11 = add i64 %10, %9
  %12 = and i64 %11, 4294967295
  %13 = tail call i32 @_ZN4base14PersistentHashEPKvm(i8* %3, i64 %12) #8
  %14 = and i32 %13, 2147483647
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmi(i8*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.flatbuffers::Verifier", align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store i64 %1, i64* %6, align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %3
  %12 = call i64 @_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64* nonnull dereferenceable(8) %6)
  br label %13

13:                                               ; preds = %3, %11
  %14 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %15 = load i64, i64* %6, align 8
  %16 = bitcast %"class.flatbuffers::Verifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false) #8
  %17 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 0
  store i8* %0, i8** %17, align 8
  %18 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 1
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 2
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 0, i32 1000000>, <4 x i32>* %20, align 8
  %21 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 6
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 7
  store i8 1, i8* %22, align 8
  %23 = icmp eq i32 %2, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %13
  %25 = call i32 @_ZN4base14PersistentHashEPKvm(i8* %0, i64 %15) #8
  %26 = and i32 %25, 2147483647
  %27 = icmp eq i32 %26, %2
  br i1 %27, label %43, label %28

28:                                               ; preds = %24
  %29 = icmp ugt i64 %15, 4
  br i1 %29, label %30, label %61

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %61

34:                                               ; preds = %30
  %35 = zext i32 %32 to i64
  %36 = add i64 %15, -1
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %61, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds i8, i8* %0, i64 %35
  %40 = bitcast i8* %39 to %"struct.subresource_filter::flat::IndexedRuleset"*
  %41 = call zeroext i1 @_ZNK18subresource_filter4flat14IndexedRuleset6VerifyERN11flatbuffers8VerifierE(%"struct.subresource_filter::flat::IndexedRuleset"* %40, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %5) #8
  %42 = select i1 %41, i32 1, i32 2
  br label %61

43:                                               ; preds = %24, %13
  %44 = icmp ugt i64 %15, 4
  br i1 %44, label %45, label %57

45:                                               ; preds = %43
  %46 = bitcast i8* %0 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = zext i32 %47 to i64
  %51 = add i64 %15, -1
  %52 = icmp ult i64 %51, %50
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %0, i64 %50
  %55 = bitcast i8* %54 to %"struct.subresource_filter::flat::IndexedRuleset"*
  %56 = call zeroext i1 @_ZNK18subresource_filter4flat14IndexedRuleset6VerifyERN11flatbuffers8VerifierE(%"struct.subresource_filter::flat::IndexedRuleset"* %55, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %5) #8
  br i1 %56, label %59, label %57

57:                                               ; preds = %53, %49, %45, %43
  %58 = select i1 %23, i32 4, i32 3
  br label %61

59:                                               ; preds = %53
  %60 = select i1 %23, i32 5, i32 0
  br label %61

61:                                               ; preds = %28, %30, %34, %38, %57, %59
  %62 = phi i32 [ %60, %59 ], [ %58, %57 ], [ 2, %28 ], [ 2, %30 ], [ 2, %34 ], [ %42, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #8
  %63 = load atomic i64, i64* @_ZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %64 = inttoptr i64 %63 to %"class.base::HistogramBase"*
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #8
  %68 = ptrtoint %"class.base::HistogramBase"* %67 to i64
  store atomic i64 %68, i64* @_ZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi %"class.base::HistogramBase"* [ %64, %61 ], [ %67, %66 ]
  %71 = bitcast %"class.base::HistogramBase"* %70 to void (%"class.base::HistogramBase"*, i32)***
  %72 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %72, i64 6
  %74 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %73, align 8
  call void %74(%"class.base::HistogramBase"* %70, i32 %62) #8
  %75 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %76 = and i8 %75, 25
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78, !prof !3

78:                                               ; preds = %69
  %79 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #8
  store i32 %62, i32* %7, align 4
  %80 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #8
  br label %81

81:                                               ; preds = %69, %78
  %82 = icmp eq i32 %62, 0
  %83 = icmp eq i32 %62, 5
  %84 = or i1 %82, %83
  %85 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #8
  %86 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %87 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %88 = sub nsw i64 %87, %14
  store i64 %88, i64* %86, align 8
  %89 = load atomic i64, i64* @_ZZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %90 = inttoptr i64 %89 to %"class.base::HistogramBase"*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %81
  %93 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  %94 = ptrtoint %"class.base::HistogramBase"* %93 to i64
  store atomic i64 %94, i64* @_ZZZN18subresource_filter21IndexedRulesetMatcher6VerifyEPKhmiEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %95

95:                                               ; preds = %81, %92
  %96 = phi %"class.base::HistogramBase"* [ %90, %81 ], [ %93, %92 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %96, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #8
  ret i1 %84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRmEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #8
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #8
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #8
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #8
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #8
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #8
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #9
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  ret i64 %21
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #8
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #8
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #8
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #8
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #8
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #8
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #8
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #9
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter21IndexedRulesetMatcherC2EPKhm(%"class.subresource_filter::IndexedRulesetMatcher"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 0
  %5 = bitcast i8* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %1, i64 %7
  %9 = bitcast i8* %8 to %"struct.subresource_filter::flat::IndexedRuleset"*
  %10 = bitcast %"class.subresource_filter::IndexedRulesetMatcher"* %0 to i8**
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 1
  %12 = bitcast i8* %8 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %9, i64 0, i32 0, i32 0, i64 %15
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = icmp ugt i16 %18, 4
  br i1 %19, label %20, label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds i8, i8* %16, i64 4
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %9, i64 0, i32 0, i32 0, i64 %24
  %26 = icmp eq i16 %23, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = bitcast i8* %25 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %25, i64 %30
  %32 = bitcast i8* %31 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  br label %33

33:                                               ; preds = %3, %20, %27
  %34 = phi %"struct.url_pattern_index::flat::UrlPatternIndex"* [ %32, %27 ], [ null, %20 ], [ null, %3 ]
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %11, %"struct.url_pattern_index::flat::UrlPatternIndex"* %34) #8
  %35 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 2
  %36 = load %"struct.subresource_filter::flat::IndexedRuleset"*, %"struct.subresource_filter::flat::IndexedRuleset"** %4, align 8
  %37 = bitcast %"struct.subresource_filter::flat::IndexedRuleset"* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %36, i64 0, i32 0, i32 0, i64 %40
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = icmp ugt i16 %43, 6
  br i1 %44, label %45, label %58

45:                                               ; preds = %33
  %46 = getelementptr inbounds i8, i8* %41, i64 6
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i64
  %50 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %36, i64 0, i32 0, i32 0, i64 %49
  %51 = icmp eq i16 %48, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  %57 = bitcast i8* %56 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  br label %58

58:                                               ; preds = %33, %45, %52
  %59 = phi %"struct.url_pattern_index::flat::UrlPatternIndex"* [ %57, %52 ], [ null, %45 ], [ null, %33 ]
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %35, %"struct.url_pattern_index::flat::UrlPatternIndex"* %59) #8
  %60 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 3
  %61 = load %"struct.subresource_filter::flat::IndexedRuleset"*, %"struct.subresource_filter::flat::IndexedRuleset"** %4, align 8
  %62 = bitcast %"struct.subresource_filter::flat::IndexedRuleset"* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %61, i64 0, i32 0, i32 0, i64 %65
  %67 = bitcast i8* %66 to i16*
  %68 = load i16, i16* %67, align 2
  %69 = icmp ugt i16 %68, 8
  br i1 %69, label %70, label %83

70:                                               ; preds = %58
  %71 = getelementptr inbounds i8, i8* %66, i64 8
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %61, i64 0, i32 0, i32 0, i64 %74
  %76 = icmp eq i16 %73, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %70
  %78 = bitcast i8* %75 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  %82 = bitcast i8* %81 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  br label %83

83:                                               ; preds = %58, %70, %77
  %84 = phi %"struct.url_pattern_index::flat::UrlPatternIndex"* [ %82, %77 ], [ null, %70 ], [ null, %58 ]
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %60, %"struct.url_pattern_index::flat::UrlPatternIndex"* %84) #8
  ret void
}

declare void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"struct.url_pattern_index::flat::UrlPatternIndex"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18subresource_filter21IndexedRulesetMatcher33ShouldDisableFilteringForDocumentERK4GURLRKN3url6OriginEN17url_pattern_index5proto14ActivationTypeE(%"class.subresource_filter::IndexedRulesetMatcher"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 3
  %7 = tail call zeroext i1 @_ZN18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURLRKN3url6OriginE(%class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %2) #8
  %8 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %6, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %2, i32 0, i32 %3, i1 zeroext %7, i1 zeroext false, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %5, i32 0) #8
  %11 = icmp ne %"struct.url_pattern_index::flat::UrlRule"* %10, null
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret i1 %11
}

declare %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* dereferenceable(8), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURLRKN3url6OriginE(%class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK18subresource_filter21IndexedRulesetMatcher28GetLoadPolicyForResourceLoadERK4GURLRKNS_16FirstPartyOriginEN17url_pattern_index5proto11ElementTypeEb(%"class.subresource_filter::IndexedRulesetMatcher"*, %class.GURL* dereferenceable(120), %"class.subresource_filter::FirstPartyOrigin"* dereferenceable(112), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = tail call zeroext i1 @_ZNK18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURL(%"class.subresource_filter::FirstPartyOrigin"* %2, %class.GURL* dereferenceable(120) %1) #8
  %8 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %2, i64 0, i32 0
  %12 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %10, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %11, i32 %3, i32 0, i1 zeroext %7, i1 zeroext %4, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %6, i32 0) #8
  %13 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 2
  %16 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %15, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %11, i32 %3, i32 0, i1 zeroext %7, i1 zeroext %4, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %6, i32 0) #8
  %17 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %16, null
  %18 = select i1 %17, %"struct.url_pattern_index::flat::UrlRule"* %12, %"struct.url_pattern_index::flat::UrlRule"* %16
  br label %19

19:                                               ; preds = %14, %5
  %20 = phi %"struct.url_pattern_index::flat::UrlRule"* [ null, %5 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %22 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %20, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %20 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %20, i64 0, i32 0, i32 0, i64 %27
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp ugt i16 %30, 4
  br i1 %31, label %32, label %44

32:                                               ; preds = %23
  %33 = getelementptr inbounds i8, i8* %28, i64 4
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = zext i16 %35 to i64
  %39 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %20, i64 0, i32 0, i32 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 1
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, i32 3, i32 0
  br label %44

44:                                               ; preds = %37, %32, %23, %19
  %45 = phi i32 [ 1, %19 ], [ %43, %37 ], [ 3, %32 ], [ 3, %23 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.url_pattern_index::flat::UrlRule"* @_ZNK18subresource_filter21IndexedRulesetMatcher14MatchedUrlRuleERK4GURLRKNS_16FirstPartyOriginEN17url_pattern_index5proto11ElementTypeEb(%"class.subresource_filter::IndexedRulesetMatcher"*, %class.GURL* dereferenceable(120), %"class.subresource_filter::FirstPartyOrigin"* dereferenceable(112), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = tail call zeroext i1 @_ZNK18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURL(%"class.subresource_filter::FirstPartyOrigin"* %2, %class.GURL* dereferenceable(120) %1) #8
  %8 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.subresource_filter::FirstPartyOrigin", %"class.subresource_filter::FirstPartyOrigin"* %2, i64 0, i32 0
  %12 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %10, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %11, i32 %3, i32 0, i1 zeroext %7, i1 zeroext %4, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %6, i32 0) #8
  %13 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.subresource_filter::IndexedRulesetMatcher", %"class.subresource_filter::IndexedRulesetMatcher"* %0, i64 0, i32 2
  %16 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_5proto11ElementTypeENS8_14ActivationTypeEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %15, %class.GURL* dereferenceable(120) %1, %"class.url::Origin"* dereferenceable(80) %11, i32 %3, i32 0, i1 zeroext %7, i1 zeroext %4, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %6, i32 0) #8
  %17 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %16, null
  %18 = select i1 %17, %"struct.url_pattern_index::flat::UrlRule"* %12, %"struct.url_pattern_index::flat::UrlRule"* %16
  br label %19

19:                                               ; preds = %5, %14
  %20 = phi %"struct.url_pattern_index::flat::UrlRule"* [ %18, %14 ], [ null, %5 ]
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret %"struct.url_pattern_index::flat::UrlRule"* %20
}

declare zeroext i1 @_ZNK18subresource_filter16FirstPartyOrigin12IsThirdPartyERK4GURL(%"class.subresource_filter::FirstPartyOrigin"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11flatbuffers6OffsetINS1_6StringEEENS1_17FlatBufferBuilder19StringOffsetCompareENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder9AddOffsetIN17url_pattern_index4flat15UrlPatternIndexEEEvtNS_6OffsetIT_EE(%"class.flatbuffers::FlatBufferBuilder"*, i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %118, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i64 4, i64* %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %12, %15
  %20 = add i64 %19, %18
  %21 = sub i64 0, %20
  %22 = and i64 %21, 3
  %23 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %15, %25
  %27 = icmp ult i64 %26, %22
  br i1 %27, label %28, label %33

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %29, i64 %22) #8
  %30 = load i8*, i8** %13, align 8
  %31 = sub nsw i64 0, %22
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %13, align 8
  br label %38

33:                                               ; preds = %10
  %34 = inttoptr i64 %15 to i8*
  %35 = sub nsw i64 0, %22
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8* %36, i8** %13, align 8
  %37 = icmp eq i64 %22, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %33, %28
  %39 = phi i8* [ %32, %28 ], [ %36, %33 ]
  store i8 0, i8* %39, align 1
  %40 = icmp eq i64 %22, 1
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = add nsw i64 %22, -1
  %43 = add nsw i64 %22, -2
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %65, label %46

46:                                               ; preds = %41
  %47 = sub nsw i64 %42, %44
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ 1, %46 ], [ %62, %48 ]
  %50 = phi i64 [ %47, %46 ], [ %63, %48 ]
  %51 = load i8*, i8** %13, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %49, 1
  %54 = load i8*, i8** %13, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw nsw i64 %49, 2
  %57 = load i8*, i8** %13, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %49, 3
  %60 = load i8*, i8** %13, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8 0, i8* %61, align 1
  %62 = add nuw i64 %49, 4
  %63 = add i64 %50, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %48

65:                                               ; preds = %48, %41
  %66 = phi i64 [ 1, %41 ], [ %62, %48 ]
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %44, %65 ]
  %71 = load i8*, i8** %13, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8 0, i8* %72, align 1
  %73 = add nuw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !4

76:                                               ; preds = %65, %68, %33, %38
  %77 = load i64, i64* %11, align 8
  %78 = load i64, i64* %14, align 8
  %79 = load i64, i64* %17, align 8
  %80 = sub i64 %77, %78
  %81 = add i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = sub i32 4, %2
  %84 = add i32 %83, %82
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 6
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %118, label %90

90:                                               ; preds = %86, %76
  %91 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %84) #8
  %92 = load i64, i64* %14, align 8
  %93 = load i64, i64* %24, align 8
  %94 = sub i64 %92, %93
  %95 = icmp ult i64 %94, 8
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = inttoptr i64 %93 to i64*
  br label %102

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %99, i64 8) #8
  %100 = bitcast i8** %23 to i64**
  %101 = load i64*, i64** %100, align 8
  br label %102

102:                                              ; preds = %98, %96
  %103 = phi i64* [ %97, %96 ], [ %101, %98 ]
  %104 = zext i16 %1 to i64
  %105 = shl nuw nsw i64 %104, 32
  %106 = zext i32 %91 to i64
  %107 = or i64 %105, %106
  %108 = or i64 %107, -6149102341220990976
  store i64 %108, i64* %103, align 4
  %109 = load i8*, i8** %23, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 8
  store i8* %110, i8** %23, align 8
  %111 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %115 = load i16, i16* %114, align 2
  %116 = icmp ult i16 %115, %1
  %117 = select i1 %116, i16 %1, i16 %115
  store i16 %117, i16* %114, align 4
  br label %118

118:                                              ; preds = %102, %86, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #8
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !6

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #8
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 %1, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 6
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 5
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %4, %7
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 7
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %10
  %17 = icmp eq i64 %4, 0
  %18 = inttoptr i64 %10 to i8*
  br i1 %17, label %21, label %19

19:                                               ; preds = %2
  %20 = lshr i64 %4, 1
  br label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %21, %19
  %25 = phi i64 [ %20, %19 ], [ %23, %21 ]
  %26 = icmp ugt i64 %25, %1
  %27 = select i1 %26, i64 %25, i64 %1
  %28 = add i64 %27, %4
  %29 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = add i64 %31, %28
  %33 = sub i64 0, %30
  %34 = and i64 %32, %33
  store i64 %34, i64* %3, align 8
  %35 = icmp eq i64 %10, 0
  %36 = getelementptr inbounds %"class.flatbuffers::vector_downward", %"class.flatbuffers::vector_downward"* %0, i64 0, i32 0
  %37 = load %"class.flatbuffers::Allocator"*, %"class.flatbuffers::Allocator"** %36, align 8
  br i1 %35, label %55, label %38

38:                                               ; preds = %24
  %39 = and i64 %12, 4294967295
  %40 = and i64 %16, 4294967295
  %41 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)***
  %44 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)**, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*** %43, align 8
  %45 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %44, i64 4
  %46 = load i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)*, i8* (%"class.flatbuffers::Allocator"*, i8*, i64, i64, i64, i64)** %45, align 8
  %47 = tail call i8* %46(%"class.flatbuffers::Allocator"* nonnull %37, i8* nonnull %18, i64 %4, i64 %34, i64 %39, i64 %40) #8
  br label %65

48:                                               ; preds = %38
  %49 = tail call i8* @_Znam(i64 %34) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %34
  %51 = sub nsw i64 0, %39
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %18, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %39, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* nonnull align 1 %18, i64 %40, i1 false) #8
  tail call void @_ZdaPv(i8* nonnull %18) #9
  br label %65

55:                                               ; preds = %24
  %56 = icmp eq %"class.flatbuffers::Allocator"* %37, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.flatbuffers::Allocator"* %37 to i8* (%"class.flatbuffers::Allocator"*, i64)***
  %59 = load i8* (%"class.flatbuffers::Allocator"*, i64)**, i8* (%"class.flatbuffers::Allocator"*, i64)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %59, i64 2
  %61 = load i8* (%"class.flatbuffers::Allocator"*, i64)*, i8* (%"class.flatbuffers::Allocator"*, i64)** %60, align 8
  %62 = tail call i8* %61(%"class.flatbuffers::Allocator"* nonnull %37, i64 %34) #8
  br label %65

63:                                               ; preds = %55
  %64 = tail call i8* @_Znam(i64 %34) #9
  br label %65

65:                                               ; preds = %63, %57, %48, %42
  %66 = phi i8* [ %47, %42 ], [ %49, %48 ], [ %62, %57 ], [ %64, %63 ]
  store i8* %66, i8** %8, align 8
  %67 = load i64, i64* %3, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = and i64 %12, 4294967295
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8* %71, i8** %5, align 8
  %72 = and i64 %16, 4294967295
  %73 = getelementptr inbounds i8, i8* %66, i64 %72
  store i8* %73, i8** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11flatbuffers17FlatBufferBuilder8EndTableEj(%"class.flatbuffers::FlatBufferBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 4, i64* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %9, %12
  %17 = add i64 %16, %15
  %18 = sub i64 0, %17
  %19 = and i64 %18, 3
  %20 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %12, %22
  %24 = icmp ult i64 %23, %19
  br i1 %24, label %25, label %30

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %26, i64 %19) #8
  %27 = load i8*, i8** %10, align 8
  %28 = sub nsw i64 0, %19
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %10, align 8
  br label %35

30:                                               ; preds = %7
  %31 = inttoptr i64 %12 to i8*
  %32 = sub nsw i64 0, %19
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  store i8* %33, i8** %10, align 8
  %34 = icmp eq i64 %19, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30, %25
  %36 = phi i8* [ %29, %25 ], [ %33, %30 ]
  store i8 0, i8* %36, align 1
  %37 = icmp eq i64 %19, 1
  br i1 %37, label %73, label %38

38:                                               ; preds = %35
  %39 = add nsw i64 %19, -1
  %40 = add nsw i64 %19, -2
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = sub nsw i64 %39, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 1, %43 ], [ %59, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %60, %45 ]
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  store i8 0, i8* %49, align 1
  %50 = add nuw nsw i64 %46, 1
  %51 = load i8*, i8** %10, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  store i8 0, i8* %52, align 1
  %53 = add nuw nsw i64 %46, 2
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  %56 = add nuw i64 %46, 3
  %57 = load i8*, i8** %10, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %56
  store i8 0, i8* %58, align 1
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %45

62:                                               ; preds = %45, %38
  %63 = phi i64 [ 1, %38 ], [ %59, %45 ]
  %64 = icmp eq i64 %41, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %70, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %71, %65 ], [ %41, %62 ]
  %68 = load i8*, i8** %10, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  store i8 0, i8* %69, align 1
  %70 = add nuw i64 %66, 1
  %71 = add i64 %67, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %65, !llvm.loop !7

73:                                               ; preds = %62, %65, %30, %35
  %74 = load i64, i64* %11, align 8
  %75 = load i64, i64* %21, align 8
  %76 = sub i64 %74, %75
  %77 = icmp ult i64 %76, 4
  %78 = inttoptr i64 %74 to i8*
  br i1 %77, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %80, i64 4) #8
  %81 = load i8*, i8** %10, align 8
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi i8* [ %78, %73 ], [ %81, %79 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  store i8* %84, i8** %10, align 8
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 4
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %14, align 8
  %89 = sub i64 %86, %87
  %90 = add i64 %89, %88
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 2
  %93 = load i16, i16* %92, align 4
  %94 = add i16 %93, 2
  %95 = icmp ugt i16 %94, 4
  %96 = select i1 %95, i16 %94, i16 4
  store i16 %96, i16* %92, align 4
  %97 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %98 = zext i16 %96 to i64
  %99 = load i64, i64* %21, align 8
  %100 = sub i64 %87, %99
  %101 = icmp ult i64 %100, %98
  %102 = inttoptr i64 %87 to i8*
  br i1 %101, label %103, label %105

103:                                              ; preds = %82
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 %98) #8
  %104 = load i8*, i8** %10, align 8
  br label %105

105:                                              ; preds = %82, %103
  %106 = phi i8* [ %102, %82 ], [ %104, %103 ]
  %107 = sub nsw i64 0, %98
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  store i8* %108, i8** %10, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %98, i1 false) #8
  %109 = sub i32 %91, %1
  %110 = load i8*, i8** %10, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 2
  %112 = trunc i32 %109 to i16
  %113 = bitcast i8* %111 to i16*
  store i16 %112, i16* %113, align 2
  %114 = bitcast i8** %10 to i16**
  %115 = load i16*, i16** %114, align 8
  %116 = load i16, i16* %92, align 4
  store i16 %116, i16* %115, align 2
  %117 = load i8*, i8** %20, align 8
  %118 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = sub nsw i64 0, %121
  %123 = icmp eq i32 %119, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %105
  %125 = getelementptr inbounds i8, i8* %117, i64 %122
  br label %151

126:                                              ; preds = %151
  %127 = load i32, i32* %118, align 8
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  %130 = sub nsw i64 0, %129
  br label %131

131:                                              ; preds = %105, %126
  %132 = phi i64 [ %130, %126 ], [ %122, %105 ]
  %133 = phi i8* [ %165, %126 ], [ %117, %105 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8* %134, i8** %20, align 8
  store i32 0, i32* %118, align 8
  store i16 0, i16* %92, align 4
  %135 = load i8*, i8** %10, align 8
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = load i64, i64* %8, align 8
  %139 = ptrtoint i8* %135 to i64
  %140 = load i64, i64* %14, align 8
  %141 = sub i64 %138, %139
  %142 = add i64 %141, %140
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 7
  %145 = load i8, i8* %144, align 1, !range !2
  %146 = icmp ne i8 %145, 0
  %147 = inttoptr i64 %140 to i8*
  %148 = ptrtoint i8* %134 to i64
  %149 = icmp ugt i8* %134, %147
  %150 = and i1 %146, %149
  br i1 %150, label %167, label %191

151:                                              ; preds = %124, %151
  %152 = phi i8* [ %164, %151 ], [ %125, %124 ]
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %91, %154
  %156 = trunc i32 %155 to i16
  %157 = load i8*, i8** %10, align 8
  %158 = getelementptr inbounds i8, i8* %152, i64 4
  %159 = bitcast i8* %158 to i16*
  %160 = load i16, i16* %159, align 4
  %161 = zext i16 %160 to i64
  %162 = getelementptr inbounds i8, i8* %157, i64 %161
  %163 = bitcast i8* %162 to i16*
  store i16 %156, i16* %163, align 2
  %164 = getelementptr inbounds i8, i8* %152, i64 8
  %165 = load i8*, i8** %20, align 8
  %166 = icmp ult i8* %164, %165
  br i1 %166, label %151, label %126

167:                                              ; preds = %131
  %168 = getelementptr inbounds i8, i8* %147, i64 %138
  %169 = zext i16 %137 to i64
  br label %170

170:                                              ; preds = %167, %188
  %171 = phi i8* [ %147, %167 ], [ %189, %188 ]
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i8, i8* %168, i64 %175
  %177 = bitcast i8* %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %137, %178
  br i1 %179, label %180, label %188

180:                                              ; preds = %170
  %181 = tail call i32 @bcmp(i8* %176, i8* %135, i64 %169)
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %180
  %184 = sub i64 %142, %90
  %185 = and i64 %184, 4294967295
  %186 = getelementptr inbounds i8, i8* %135, i64 %185
  store i8* %186, i8** %10, align 8
  %187 = ptrtoint i8* %186 to i64
  br label %191

188:                                              ; preds = %180, %170
  %189 = getelementptr inbounds i8, i8* %171, i64 4
  %190 = icmp ult i8* %189, %134
  br i1 %190, label %170, label %191

191:                                              ; preds = %188, %131, %183
  %192 = phi i64 [ %139, %131 ], [ %187, %183 ], [ %139, %188 ]
  %193 = phi i32 [ %143, %131 ], [ %173, %183 ], [ %143, %188 ]
  %194 = add i64 %140, %138
  %195 = sub i64 %194, %192
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %193, %196
  br i1 %197, label %198, label %212

198:                                              ; preds = %191
  %199 = sub i64 %192, %148
  %200 = icmp ult i64 %199, 4
  br i1 %200, label %203, label %201

201:                                              ; preds = %198
  %202 = bitcast i8* %134 to i32*
  br label %206

203:                                              ; preds = %198
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %97, i64 4) #8
  %204 = bitcast i8** %20 to i32**
  %205 = load i32*, i32** %204, align 8
  br label %206

206:                                              ; preds = %201, %203
  %207 = phi i32* [ %202, %201 ], [ %205, %203 ]
  store i32 %193, i32* %207, align 4
  %208 = load i8*, i8** %20, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  store i8* %209, i8** %20, align 8
  %210 = load i8*, i8** %13, align 8
  %211 = load i64, i64* %8, align 8
  br label %212

212:                                              ; preds = %206, %191
  %213 = phi i64 [ %211, %206 ], [ %138, %191 ]
  %214 = phi i8* [ %210, %206 ], [ %147, %191 ]
  %215 = and i64 %90, 4294967295
  %216 = getelementptr inbounds i8, i8* %214, i64 %213
  %217 = sub nsw i64 0, %215
  %218 = getelementptr inbounds i8, i8* %216, i64 %217
  %219 = sub nsw i32 %193, %91
  %220 = bitcast i8* %218 to i32*
  store i32 %219, i32* %220, align 4
  %221 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 3
  store i8 0, i8* %221, align 2
  ret i32 %91
}

declare i32 @_ZN4base14PersistentHashEPKvm(i8*, i64) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18subresource_filter4flat14IndexedRuleset6VerifyERN11flatbuffers8VerifierE(%"struct.subresource_filter::flat::IndexedRuleset"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.subresource_filter::flat::IndexedRuleset"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %238

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %238

21:                                               ; preds = %14
  %22 = bitcast %"struct.subresource_filter::flat::IndexedRuleset"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %238, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %238, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %238

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %238, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %238

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %238

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %121

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %238, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %238, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %238

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %238, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %121, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %121, label %114

114:                                              ; preds = %108
  %115 = bitcast i8* %112 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  %116 = tail call zeroext i1 @_ZNK17url_pattern_index4flat15UrlPatternIndex6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlPatternIndex"* nonnull %115, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  br i1 %116, label %117, label %238

117:                                              ; preds = %114
  %118 = load i32, i32* %22, align 4
  %119 = sext i32 %118 to i64
  %120 = sub nsw i64 0, %119
  br label %121

121:                                              ; preds = %65, %117, %101, %108
  %122 = phi i64 [ %120, %117 ], [ %68, %101 ], [ %68, %108 ], [ %68, %65 ]
  %123 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %122
  %124 = bitcast i8* %123 to i16*
  %125 = load i16, i16* %124, align 2
  %126 = icmp ugt i16 %125, 6
  br i1 %126, label %127, label %180

127:                                              ; preds = %121
  %128 = getelementptr inbounds i8, i8* %123, i64 6
  %129 = bitcast i8* %128 to i16*
  %130 = load i16, i16* %129, align 2
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %160, label %132

132:                                              ; preds = %127
  %133 = load i64, i64* %3, align 8
  %134 = sub i64 %5, %133
  %135 = zext i16 %130 to i64
  %136 = add i64 %134, %135
  %137 = and i64 %136, 3
  %138 = icmp eq i64 %137, 0
  %139 = inttoptr i64 %133 to i8*
  br i1 %138, label %144, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %238

144:                                              ; preds = %140, %132
  %145 = load i64, i64* %15, align 8
  %146 = icmp ugt i64 %145, 4
  %147 = add i64 %145, -4
  %148 = icmp uge i64 %147, %136
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %238

150:                                              ; preds = %144
  %151 = getelementptr inbounds i8, i8* %139, i64 %136
  %152 = bitcast i8* %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = icmp sgt i32 %153, 0
  br i1 %154, label %155, label %238

155:                                              ; preds = %150
  %156 = zext i32 %153 to i64
  %157 = add i64 %136, %156
  %158 = add i64 %145, -1
  %159 = icmp ult i64 %158, %157
  br i1 %159, label %238, label %160

160:                                              ; preds = %155, %127
  %161 = getelementptr inbounds i8, i8* %123, i64 6
  %162 = bitcast i8* %161 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i64
  %165 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %164
  %166 = icmp eq i16 %163, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %160
  %168 = bitcast i8* %165 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %165, i64 %170
  %172 = icmp eq i8* %171, null
  br i1 %172, label %180, label %173

173:                                              ; preds = %167
  %174 = bitcast i8* %171 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  %175 = tail call zeroext i1 @_ZNK17url_pattern_index4flat15UrlPatternIndex6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlPatternIndex"* nonnull %174, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  br i1 %175, label %176, label %238

176:                                              ; preds = %173
  %177 = load i32, i32* %22, align 4
  %178 = sext i32 %177 to i64
  %179 = sub nsw i64 0, %178
  br label %180

180:                                              ; preds = %121, %176, %160, %167
  %181 = phi i64 [ %179, %176 ], [ %122, %160 ], [ %122, %167 ], [ %122, %121 ]
  %182 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %181
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 2
  %185 = icmp ugt i16 %184, 8
  br i1 %185, label %186, label %235

186:                                              ; preds = %180
  %187 = getelementptr inbounds i8, i8* %182, i64 8
  %188 = bitcast i8* %187 to i16*
  %189 = load i16, i16* %188, align 2
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %219, label %191

191:                                              ; preds = %186
  %192 = load i64, i64* %3, align 8
  %193 = sub i64 %5, %192
  %194 = zext i16 %189 to i64
  %195 = add i64 %193, %194
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 0
  %198 = inttoptr i64 %192 to i8*
  br i1 %197, label %203, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %201 = load i8, i8* %200, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %238

203:                                              ; preds = %199, %191
  %204 = load i64, i64* %15, align 8
  %205 = icmp ugt i64 %204, 4
  %206 = add i64 %204, -4
  %207 = icmp uge i64 %206, %195
  %208 = and i1 %205, %207
  br i1 %208, label %209, label %238

209:                                              ; preds = %203
  %210 = getelementptr inbounds i8, i8* %198, i64 %195
  %211 = bitcast i8* %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %214, label %238

214:                                              ; preds = %209
  %215 = zext i32 %212 to i64
  %216 = add i64 %195, %215
  %217 = add i64 %204, -1
  %218 = icmp ult i64 %217, %216
  br i1 %218, label %238, label %219

219:                                              ; preds = %214, %186
  %220 = getelementptr inbounds i8, i8* %182, i64 8
  %221 = bitcast i8* %220 to i16*
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i64
  %224 = getelementptr inbounds %"struct.subresource_filter::flat::IndexedRuleset", %"struct.subresource_filter::flat::IndexedRuleset"* %0, i64 0, i32 0, i32 0, i64 %223
  %225 = icmp eq i16 %222, 0
  br i1 %225, label %235, label %226

226:                                              ; preds = %219
  %227 = bitcast i8* %224 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %224, i64 %229
  %231 = icmp eq i8* %230, null
  br i1 %231, label %235, label %232

232:                                              ; preds = %226
  %233 = bitcast i8* %230 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  %234 = tail call zeroext i1 @_ZNK17url_pattern_index4flat15UrlPatternIndex6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlPatternIndex"* nonnull %233, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  br i1 %234, label %235, label %238

235:                                              ; preds = %180, %219, %226, %232
  %236 = load i32, i32* %26, align 8
  %237 = add i32 %236, -1
  store i32 %237, i32* %26, align 8
  br label %238

238:                                              ; preds = %83, %89, %96, %155, %214, %199, %209, %203, %140, %150, %144, %91, %42, %21, %10, %35, %46, %56, %14, %235, %232, %173, %114, %60
  %239 = phi i1 [ false, %232 ], [ false, %214 ], [ false, %173 ], [ false, %155 ], [ false, %114 ], [ false, %96 ], [ false, %60 ], [ true, %235 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %144 ], [ false, %150 ], [ false, %140 ], [ false, %203 ], [ false, %209 ], [ false, %199 ]
  ret i1 %239
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17url_pattern_index4flat15UrlPatternIndex6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlPatternIndex"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.url_pattern_index::flat::UrlPatternIndex"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %350

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %350

21:                                               ; preds = %14
  %22 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndex"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %350, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %350, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %350

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %350, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %350

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %350

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %181

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %350, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %181

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp ne i8 %96, 0
  %98 = icmp ult i64 %18, %91
  %99 = or i1 %97, %98
  br i1 %99, label %350, label %102

100:                                              ; preds = %89
  %101 = icmp ult i64 %18, %91
  br i1 %101, label %350, label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds i8, i8* %9, i64 %91
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %350

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = add i64 %91, %108
  %110 = add i64 %16, -1
  %111 = icmp ult i64 %110, %109
  br i1 %111, label %350, label %112

112:                                              ; preds = %107, %84
  %113 = getelementptr inbounds i8, i8* %69, i64 6
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %181, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %119
  %126 = ptrtoint i8* %123 to i64
  %127 = sub i64 %126, %4
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp ne i8 %132, 0
  %134 = icmp ult i64 %18, %127
  %135 = or i1 %133, %134
  br i1 %135, label %350, label %138

136:                                              ; preds = %125
  %137 = icmp ult i64 %18, %127
  br i1 %137, label %350, label %138

138:                                              ; preds = %130, %136
  %139 = bitcast i8* %123 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, 536870911
  br i1 %141, label %142, label %350

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = add nuw nsw i64 %144, 4
  %146 = icmp ugt i64 %16, %145
  %147 = sub i64 %16, %145
  %148 = icmp uge i64 %147, %127
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %350

150:                                              ; preds = %142, %119
  %151 = bitcast i8* %117 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %117, i64 %153
  %155 = icmp eq i8* %154, null
  br i1 %155, label %181, label %156

156:                                              ; preds = %150
  %157 = bitcast i8* %154 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %181, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %154, i64 4
  %162 = bitcast i8* %161 to i32*
  br label %167

163:                                              ; preds = %167
  %164 = load i32, i32* %157, align 4
  %165 = zext i32 %164 to i64
  %166 = icmp ult i64 %176, %165
  br i1 %166, label %167, label %177

167:                                              ; preds = %163, %160
  %168 = phi i64 [ 0, %160 ], [ %176, %163 ]
  %169 = getelementptr inbounds i32, i32* %162, i64 %168
  %170 = bitcast i32* %169 to i8*
  %171 = load i32, i32* %169, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = bitcast i8* %173 to %"struct.url_pattern_index::flat::NGramToRules"*
  %175 = tail call zeroext i1 @_ZNK17url_pattern_index4flat12NGramToRules6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::NGramToRules"* %174, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  %176 = add nuw nsw i64 %168, 1
  br i1 %175, label %163, label %350

177:                                              ; preds = %163
  %178 = load i32, i32* %22, align 4
  %179 = sext i32 %178 to i64
  %180 = sub nsw i64 0, %179
  br label %181

181:                                              ; preds = %112, %82, %65, %177, %150, %156
  %182 = phi i64 [ %180, %177 ], [ %68, %150 ], [ %68, %156 ], [ %68, %65 ], [ %68, %82 ], [ %68, %112 ]
  %183 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %182
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp ugt i16 %185, 8
  br i1 %186, label %187, label %240

187:                                              ; preds = %181
  %188 = getelementptr inbounds i8, i8* %183, i64 8
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %220, label %192

192:                                              ; preds = %187
  %193 = load i64, i64* %3, align 8
  %194 = sub i64 %5, %193
  %195 = zext i16 %190 to i64
  %196 = add i64 %194, %195
  %197 = and i64 %196, 3
  %198 = icmp eq i64 %197, 0
  %199 = inttoptr i64 %193 to i8*
  br i1 %198, label %204, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %202 = load i8, i8* %201, align 8, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %350

204:                                              ; preds = %200, %192
  %205 = load i64, i64* %15, align 8
  %206 = icmp ugt i64 %205, 4
  %207 = add i64 %205, -4
  %208 = icmp uge i64 %207, %196
  %209 = and i1 %206, %208
  br i1 %209, label %210, label %350

210:                                              ; preds = %204
  %211 = getelementptr inbounds i8, i8* %199, i64 %196
  %212 = bitcast i8* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %350

215:                                              ; preds = %210
  %216 = zext i32 %213 to i64
  %217 = add i64 %196, %216
  %218 = add i64 %205, -1
  %219 = icmp ult i64 %218, %217
  br i1 %219, label %350, label %220

220:                                              ; preds = %215, %187
  %221 = getelementptr inbounds i8, i8* %183, i64 8
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i64
  %225 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %224
  %226 = icmp eq i16 %223, 0
  br i1 %226, label %240, label %227

227:                                              ; preds = %220
  %228 = bitcast i8* %225 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %225, i64 %230
  %232 = icmp eq i8* %231, null
  br i1 %232, label %240, label %233

233:                                              ; preds = %227
  %234 = bitcast i8* %231 to %"struct.url_pattern_index::flat::NGramToRules"*
  %235 = tail call zeroext i1 @_ZNK17url_pattern_index4flat12NGramToRules6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::NGramToRules"* nonnull %234, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  br i1 %235, label %236, label %350

236:                                              ; preds = %233
  %237 = load i32, i32* %22, align 4
  %238 = sext i32 %237 to i64
  %239 = sub nsw i64 0, %238
  br label %240

240:                                              ; preds = %181, %236, %220, %227
  %241 = phi i64 [ %239, %236 ], [ %182, %220 ], [ %182, %227 ], [ %182, %181 ]
  %242 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %241
  %243 = bitcast i8* %242 to i16*
  %244 = load i16, i16* %243, align 2
  %245 = icmp ugt i16 %244, 10
  br i1 %245, label %246, label %347

246:                                              ; preds = %240
  %247 = getelementptr inbounds i8, i8* %242, i64 10
  %248 = bitcast i8* %247 to i16*
  %249 = load i16, i16* %248, align 2
  %250 = icmp eq i16 %249, 0
  br i1 %250, label %279, label %251

251:                                              ; preds = %246
  %252 = load i64, i64* %3, align 8
  %253 = sub i64 %5, %252
  %254 = zext i16 %249 to i64
  %255 = add i64 %253, %254
  %256 = and i64 %255, 3
  %257 = icmp eq i64 %256, 0
  %258 = inttoptr i64 %252 to i8*
  br i1 %257, label %263, label %259

259:                                              ; preds = %251
  %260 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %261 = load i8, i8* %260, align 8, !range !2
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %263, label %350

263:                                              ; preds = %259, %251
  %264 = load i64, i64* %15, align 8
  %265 = icmp ugt i64 %264, 4
  %266 = add i64 %264, -4
  %267 = icmp uge i64 %266, %255
  %268 = and i1 %265, %267
  br i1 %268, label %269, label %350

269:                                              ; preds = %263
  %270 = getelementptr inbounds i8, i8* %258, i64 %255
  %271 = bitcast i8* %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = icmp sgt i32 %272, 0
  br i1 %273, label %274, label %350

274:                                              ; preds = %269
  %275 = zext i32 %272 to i64
  %276 = add i64 %255, %275
  %277 = add i64 %264, -1
  %278 = icmp ult i64 %277, %276
  br i1 %278, label %350, label %279

279:                                              ; preds = %274, %246
  %280 = getelementptr inbounds i8, i8* %242, i64 10
  %281 = bitcast i8* %280 to i16*
  %282 = load i16, i16* %281, align 2
  %283 = zext i16 %282 to i64
  %284 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlPatternIndex", %"struct.url_pattern_index::flat::UrlPatternIndex"* %0, i64 0, i32 0, i32 0, i64 %283
  %285 = icmp eq i16 %282, 0
  br i1 %285, label %347, label %286

286:                                              ; preds = %279
  %287 = bitcast i8* %284 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds i8, i8* %284, i64 %289
  %291 = icmp eq i8* %290, null
  br i1 %291, label %320, label %292

292:                                              ; preds = %286
  %293 = load i64, i64* %3, align 8
  %294 = ptrtoint i8* %290 to i64
  %295 = sub i64 %294, %293
  %296 = and i64 %295, 3
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %302, label %298

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %300 = load i8, i8* %299, align 8, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %350

302:                                              ; preds = %298, %292
  %303 = load i64, i64* %15, align 8
  %304 = icmp ugt i64 %303, 4
  %305 = add i64 %303, -4
  %306 = icmp uge i64 %305, %295
  %307 = and i1 %304, %306
  br i1 %307, label %308, label %350

308:                                              ; preds = %302
  %309 = bitcast i8* %290 to i32*
  %310 = load i32, i32* %309, align 4
  %311 = icmp ult i32 %310, 536870911
  br i1 %311, label %312, label %350

312:                                              ; preds = %308
  %313 = zext i32 %310 to i64
  %314 = shl nuw nsw i64 %313, 2
  %315 = add nuw nsw i64 %314, 4
  %316 = icmp ugt i64 %303, %315
  %317 = sub i64 %303, %315
  %318 = icmp uge i64 %317, %295
  %319 = and i1 %316, %318
  br i1 %319, label %320, label %350

320:                                              ; preds = %312, %286
  %321 = bitcast i8* %284 to i32*
  %322 = load i32, i32* %321, align 4
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i8, i8* %284, i64 %323
  %325 = icmp eq i8* %324, null
  br i1 %325, label %347, label %326

326:                                              ; preds = %320
  %327 = bitcast i8* %324 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %347, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds i8, i8* %324, i64 4
  %332 = bitcast i8* %331 to i32*
  br label %337

333:                                              ; preds = %337
  %334 = load i32, i32* %327, align 4
  %335 = zext i32 %334 to i64
  %336 = icmp ult i64 %346, %335
  br i1 %336, label %337, label %347

337:                                              ; preds = %333, %330
  %338 = phi i64 [ 0, %330 ], [ %346, %333 ]
  %339 = getelementptr inbounds i32, i32* %332, i64 %338
  %340 = bitcast i32* %339 to i8*
  %341 = load i32, i32* %339, align 4
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds i8, i8* %340, i64 %342
  %344 = bitcast i8* %343 to %"struct.url_pattern_index::flat::UrlRule"*
  %345 = tail call zeroext i1 @_ZNK17url_pattern_index4flat7UrlRule6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlRule"* %344, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  %346 = add nuw nsw i64 %338, 1
  br i1 %345, label %333, label %350

347:                                              ; preds = %333, %279, %240, %320, %326
  %348 = load i32, i32* %26, align 8
  %349 = add i32 %348, -1
  store i32 %349, i32* %26, align 8
  br label %350

350:                                              ; preds = %167, %337, %130, %94, %100, %78, %136, %107, %215, %274, %298, %308, %302, %259, %269, %263, %200, %210, %204, %138, %102, %42, %21, %10, %35, %46, %56, %14, %347, %312, %233, %142, %60
  %351 = phi i1 [ false, %312 ], [ false, %274 ], [ false, %233 ], [ false, %215 ], [ false, %142 ], [ false, %107 ], [ false, %78 ], [ false, %60 ], [ true, %347 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %100 ], [ false, %102 ], [ false, %94 ], [ false, %136 ], [ false, %138 ], [ false, %130 ], [ false, %204 ], [ false, %210 ], [ false, %200 ], [ false, %263 ], [ false, %269 ], [ false, %259 ], [ false, %302 ], [ false, %308 ], [ false, %298 ], [ false, %337 ], [ false, %167 ]
  ret i1 %351
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17url_pattern_index4flat12NGramToRules6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::NGramToRules"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.url_pattern_index::flat::NGramToRules"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %185

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %185

21:                                               ; preds = %14
  %22 = bitcast %"struct.url_pattern_index::flat::NGramToRules"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %185, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %185, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %185

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %185, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %185

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %185

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %182

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ugt i64 %16, 8
  %82 = add i64 %16, -8
  %83 = icmp uge i64 %82, %80
  %84 = and i1 %81, %83
  br i1 %84, label %85, label %185

85:                                               ; preds = %73, %78
  %86 = icmp ugt i16 %71, 6
  br i1 %86, label %87, label %182

87:                                               ; preds = %85
  %88 = getelementptr inbounds i8, i8* %69, i64 6
  %89 = bitcast i8* %88 to i16*
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %115, label %92

92:                                               ; preds = %87
  %93 = zext i16 %90 to i64
  %94 = add i64 %6, %93
  %95 = and i64 %94, 3
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  %101 = icmp ult i64 %18, %94
  %102 = or i1 %100, %101
  br i1 %102, label %185, label %105

103:                                              ; preds = %92
  %104 = icmp ult i64 %18, %94
  br i1 %104, label %185, label %105

105:                                              ; preds = %97, %103
  %106 = getelementptr inbounds i8, i8* %9, i64 %94
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %110, label %185

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = add i64 %94, %111
  %113 = add i64 %16, -1
  %114 = icmp ult i64 %113, %112
  br i1 %114, label %185, label %115

115:                                              ; preds = %110, %87
  %116 = getelementptr inbounds i8, i8* %69, i64 6
  %117 = bitcast i8* %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i64
  %120 = getelementptr inbounds %"struct.url_pattern_index::flat::NGramToRules", %"struct.url_pattern_index::flat::NGramToRules"* %0, i64 0, i32 0, i32 0, i64 %119
  %121 = icmp eq i16 %118, 0
  br i1 %121, label %182, label %122

122:                                              ; preds = %115
  %123 = bitcast i8* %120 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %120, i64 %125
  %127 = icmp eq i8* %126, null
  br i1 %127, label %153, label %128

128:                                              ; preds = %122
  %129 = ptrtoint i8* %126 to i64
  %130 = sub i64 %129, %4
  %131 = and i64 %130, 3
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp ne i8 %135, 0
  %137 = icmp ult i64 %18, %130
  %138 = or i1 %136, %137
  br i1 %138, label %185, label %141

139:                                              ; preds = %128
  %140 = icmp ult i64 %18, %130
  br i1 %140, label %185, label %141

141:                                              ; preds = %133, %139
  %142 = bitcast i8* %126 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp ult i32 %143, 536870911
  br i1 %144, label %145, label %185

145:                                              ; preds = %141
  %146 = zext i32 %143 to i64
  %147 = shl nuw nsw i64 %146, 2
  %148 = add nuw nsw i64 %147, 4
  %149 = icmp ugt i64 %16, %148
  %150 = sub i64 %16, %148
  %151 = icmp uge i64 %150, %130
  %152 = and i1 %149, %151
  br i1 %152, label %153, label %185

153:                                              ; preds = %145, %122
  %154 = bitcast i8* %120 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %120, i64 %156
  %158 = icmp eq i8* %157, null
  br i1 %158, label %182, label %159

159:                                              ; preds = %153
  %160 = bitcast i8* %157 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %157, i64 4
  %165 = bitcast i8* %164 to i32*
  br label %170

166:                                              ; preds = %170
  %167 = load i32, i32* %160, align 4
  %168 = zext i32 %167 to i64
  %169 = icmp ult i64 %179, %168
  br i1 %169, label %170, label %180

170:                                              ; preds = %166, %163
  %171 = phi i64 [ 0, %163 ], [ %179, %166 ]
  %172 = getelementptr inbounds i32, i32* %165, i64 %171
  %173 = bitcast i32* %172 to i8*
  %174 = load i32, i32* %172, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  %177 = bitcast i8* %176 to %"struct.url_pattern_index::flat::UrlRule"*
  %178 = tail call zeroext i1 @_ZNK17url_pattern_index4flat7UrlRule6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlRule"* %177, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #8
  %179 = add nuw nsw i64 %171, 1
  br i1 %178, label %166, label %185

180:                                              ; preds = %166
  %181 = load i32, i32* %26, align 8
  br label %182

182:                                              ; preds = %115, %85, %65, %180, %153, %159
  %183 = phi i32 [ %181, %180 ], [ %28, %153 ], [ %28, %159 ], [ %28, %65 ], [ %28, %85 ], [ %28, %115 ]
  %184 = add i32 %183, -1
  store i32 %184, i32* %26, align 8
  br label %185

185:                                              ; preds = %170, %133, %97, %103, %139, %110, %141, %105, %42, %21, %10, %35, %46, %56, %14, %182, %145, %78, %60
  %186 = phi i1 [ false, %145 ], [ false, %110 ], [ false, %78 ], [ false, %60 ], [ true, %182 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %103 ], [ false, %105 ], [ false, %97 ], [ false, %139 ], [ false, %141 ], [ false, %133 ], [ false, %170 ]
  ret i1 %186
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17url_pattern_index4flat7UrlRule6VerifyERN11flatbuffers8VerifierE(%"struct.url_pattern_index::flat::UrlRule"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %567

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %567

21:                                               ; preds = %14
  %22 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %567, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %567, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %567

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %567, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %567

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %567

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %566

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %567, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %566

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %47, %92
  br i1 %93, label %567, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %566

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %47, %103
  br i1 %104, label %567, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %566

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = add i64 %16, -1
  %116 = icmp ult i64 %115, %114
  br i1 %116, label %567, label %117

117:                                              ; preds = %112, %107
  %118 = icmp ugt i16 %71, 12
  br i1 %118, label %119, label %566

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %69, i64 12
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = add i64 %6, %125
  %127 = add i64 %16, -1
  %128 = icmp ult i64 %127, %126
  br i1 %128, label %567, label %129

129:                                              ; preds = %124, %119
  %130 = icmp ugt i16 %71, 14
  br i1 %130, label %131, label %566

131:                                              ; preds = %129
  %132 = getelementptr inbounds i8, i8* %69, i64 14
  %133 = bitcast i8* %132 to i16*
  %134 = load i16, i16* %133, align 2
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %131
  %137 = zext i16 %134 to i64
  %138 = add i64 %6, %137
  %139 = add i64 %16, -1
  %140 = icmp ult i64 %139, %138
  br i1 %140, label %567, label %141

141:                                              ; preds = %136, %131
  %142 = icmp ugt i16 %71, 16
  br i1 %142, label %143, label %566

143:                                              ; preds = %141
  %144 = getelementptr inbounds i8, i8* %69, i64 16
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %143
  %149 = zext i16 %146 to i64
  %150 = add i64 %6, %149
  %151 = add i64 %16, -1
  %152 = icmp ult i64 %151, %150
  br i1 %152, label %567, label %153

153:                                              ; preds = %148, %143
  %154 = icmp ugt i16 %71, 18
  br i1 %154, label %155, label %566

155:                                              ; preds = %153
  %156 = getelementptr inbounds i8, i8* %69, i64 18
  %157 = bitcast i8* %156 to i16*
  %158 = load i16, i16* %157, align 2
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %183, label %160

160:                                              ; preds = %155
  %161 = zext i16 %158 to i64
  %162 = add i64 %6, %161
  %163 = and i64 %162, 3
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp ne i8 %167, 0
  %169 = icmp ult i64 %18, %162
  %170 = or i1 %168, %169
  br i1 %170, label %567, label %173

171:                                              ; preds = %160
  %172 = icmp ult i64 %18, %162
  br i1 %172, label %567, label %173

173:                                              ; preds = %165, %171
  %174 = getelementptr inbounds i8, i8* %9, i64 %162
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %178, label %567

178:                                              ; preds = %173
  %179 = zext i32 %176 to i64
  %180 = add i64 %162, %179
  %181 = add i64 %16, -1
  %182 = icmp ult i64 %181, %180
  br i1 %182, label %567, label %183

183:                                              ; preds = %155, %178
  %184 = getelementptr inbounds i8, i8* %69, i64 18
  %185 = bitcast i8* %184 to i16*
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i64
  %188 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %187
  %189 = icmp eq i16 %186, 0
  br i1 %189, label %276, label %190

190:                                              ; preds = %183
  %191 = bitcast i8* %188 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %188, i64 %193
  %195 = icmp eq i8* %194, null
  br i1 %195, label %221, label %196

196:                                              ; preds = %190
  %197 = ptrtoint i8* %194 to i64
  %198 = sub i64 %197, %4
  %199 = and i64 %198, 3
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %207, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %203 = load i8, i8* %202, align 8, !range !2
  %204 = icmp ne i8 %203, 0
  %205 = icmp ult i64 %18, %198
  %206 = or i1 %204, %205
  br i1 %206, label %567, label %209

207:                                              ; preds = %196
  %208 = icmp ult i64 %18, %198
  br i1 %208, label %567, label %209

209:                                              ; preds = %201, %207
  %210 = bitcast i8* %194 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = icmp ult i32 %211, 536870911
  br i1 %212, label %213, label %567

213:                                              ; preds = %209
  %214 = zext i32 %211 to i64
  %215 = shl nuw nsw i64 %214, 2
  %216 = add nuw nsw i64 %215, 4
  %217 = icmp ugt i64 %16, %216
  %218 = sub i64 %16, %216
  %219 = icmp uge i64 %218, %198
  %220 = and i1 %217, %219
  br i1 %220, label %221, label %567

221:                                              ; preds = %213, %190
  %222 = bitcast i8* %188 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %188, i64 %224
  %226 = icmp eq i8* %225, null
  br i1 %226, label %276, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %229 = getelementptr inbounds i8, i8* %225, i64 4
  %230 = bitcast i8* %229 to i32*
  %231 = bitcast i8* %225 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %276, label %234

234:                                              ; preds = %227
  %235 = zext i32 %232 to i64
  %236 = add i64 %16, -1
  br label %237

237:                                              ; preds = %273, %234
  %238 = phi i64 [ 0, %234 ], [ %274, %273 ]
  %239 = getelementptr inbounds i32, i32* %230, i64 %238
  %240 = bitcast i32* %239 to i8*
  %241 = load i32, i32* %239, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %240, i64 %242
  %244 = ptrtoint i8* %243 to i64
  %245 = sub i64 %244, %4
  %246 = and i64 %245, 3
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %253, label %248

248:                                              ; preds = %237
  %249 = load i8, i8* %228, align 8, !range !2
  %250 = icmp ne i8 %249, 0
  %251 = icmp ult i64 %18, %245
  %252 = or i1 %250, %251
  br i1 %252, label %567, label %255

253:                                              ; preds = %237
  %254 = icmp ult i64 %18, %245
  br i1 %254, label %567, label %255

255:                                              ; preds = %248, %253
  %256 = bitcast i8* %243 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = icmp ult i32 %257, 2147483647
  br i1 %258, label %259, label %567

259:                                              ; preds = %255
  %260 = zext i32 %257 to i64
  %261 = add nuw nsw i64 %260, 4
  %262 = add i64 %261, %245
  %263 = icmp ule i64 %16, %261
  %264 = sub i64 %16, %261
  %265 = icmp ult i64 %264, %245
  %266 = or i1 %263, %265
  %267 = icmp ult i64 %236, %262
  %268 = or i1 %267, %266
  br i1 %268, label %567, label %269

269:                                              ; preds = %259
  %270 = getelementptr inbounds i8, i8* %9, i64 %262
  %271 = load i8, i8* %270, align 1
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %567

273:                                              ; preds = %269
  %274 = add nuw nsw i64 %238, 1
  %275 = icmp eq i64 %274, %235
  br i1 %275, label %276, label %237

276:                                              ; preds = %273, %183, %227, %221
  %277 = icmp ugt i16 %71, 20
  br i1 %277, label %278, label %566

278:                                              ; preds = %276
  %279 = getelementptr inbounds i8, i8* %69, i64 20
  %280 = bitcast i8* %279 to i16*
  %281 = load i16, i16* %280, align 2
  %282 = icmp eq i16 %281, 0
  br i1 %282, label %306, label %283

283:                                              ; preds = %278
  %284 = zext i16 %281 to i64
  %285 = add i64 %6, %284
  %286 = and i64 %285, 3
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %294, label %288

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %290 = load i8, i8* %289, align 8, !range !2
  %291 = icmp ne i8 %290, 0
  %292 = icmp ult i64 %18, %285
  %293 = or i1 %291, %292
  br i1 %293, label %567, label %296

294:                                              ; preds = %283
  %295 = icmp ult i64 %18, %285
  br i1 %295, label %567, label %296

296:                                              ; preds = %288, %294
  %297 = getelementptr inbounds i8, i8* %9, i64 %285
  %298 = bitcast i8* %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = icmp sgt i32 %299, 0
  br i1 %300, label %301, label %567

301:                                              ; preds = %296
  %302 = zext i32 %299 to i64
  %303 = add i64 %285, %302
  %304 = add i64 %16, -1
  %305 = icmp ult i64 %304, %303
  br i1 %305, label %567, label %306

306:                                              ; preds = %301, %278
  %307 = getelementptr inbounds i8, i8* %69, i64 20
  %308 = bitcast i8* %307 to i16*
  %309 = load i16, i16* %308, align 2
  %310 = zext i16 %309 to i64
  %311 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %310
  %312 = icmp eq i16 %309, 0
  br i1 %312, label %399, label %313

313:                                              ; preds = %306
  %314 = bitcast i8* %311 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds i8, i8* %311, i64 %316
  %318 = icmp eq i8* %317, null
  br i1 %318, label %344, label %319

319:                                              ; preds = %313
  %320 = ptrtoint i8* %317 to i64
  %321 = sub i64 %320, %4
  %322 = and i64 %321, 3
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %330, label %324

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %326 = load i8, i8* %325, align 8, !range !2
  %327 = icmp ne i8 %326, 0
  %328 = icmp ult i64 %18, %321
  %329 = or i1 %327, %328
  br i1 %329, label %567, label %332

330:                                              ; preds = %319
  %331 = icmp ult i64 %18, %321
  br i1 %331, label %567, label %332

332:                                              ; preds = %324, %330
  %333 = bitcast i8* %317 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = icmp ult i32 %334, 536870911
  br i1 %335, label %336, label %567

336:                                              ; preds = %332
  %337 = zext i32 %334 to i64
  %338 = shl nuw nsw i64 %337, 2
  %339 = add nuw nsw i64 %338, 4
  %340 = icmp ugt i64 %16, %339
  %341 = sub i64 %16, %339
  %342 = icmp uge i64 %341, %321
  %343 = and i1 %340, %342
  br i1 %343, label %344, label %567

344:                                              ; preds = %336, %313
  %345 = bitcast i8* %311 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %311, i64 %347
  %349 = icmp eq i8* %348, null
  br i1 %349, label %399, label %350

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %352 = getelementptr inbounds i8, i8* %348, i64 4
  %353 = bitcast i8* %352 to i32*
  %354 = bitcast i8* %348 to i32*
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %399, label %357

357:                                              ; preds = %350
  %358 = zext i32 %355 to i64
  %359 = add i64 %16, -1
  br label %360

360:                                              ; preds = %396, %357
  %361 = phi i64 [ 0, %357 ], [ %397, %396 ]
  %362 = getelementptr inbounds i32, i32* %353, i64 %361
  %363 = bitcast i32* %362 to i8*
  %364 = load i32, i32* %362, align 4
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %363, i64 %365
  %367 = ptrtoint i8* %366 to i64
  %368 = sub i64 %367, %4
  %369 = and i64 %368, 3
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %376, label %371

371:                                              ; preds = %360
  %372 = load i8, i8* %351, align 8, !range !2
  %373 = icmp ne i8 %372, 0
  %374 = icmp ult i64 %18, %368
  %375 = or i1 %373, %374
  br i1 %375, label %567, label %378

376:                                              ; preds = %360
  %377 = icmp ult i64 %18, %368
  br i1 %377, label %567, label %378

378:                                              ; preds = %371, %376
  %379 = bitcast i8* %366 to i32*
  %380 = load i32, i32* %379, align 4
  %381 = icmp ult i32 %380, 2147483647
  br i1 %381, label %382, label %567

382:                                              ; preds = %378
  %383 = zext i32 %380 to i64
  %384 = add nuw nsw i64 %383, 4
  %385 = add i64 %384, %368
  %386 = icmp ule i64 %16, %384
  %387 = sub i64 %16, %384
  %388 = icmp ult i64 %387, %368
  %389 = or i1 %386, %388
  %390 = icmp ult i64 %359, %385
  %391 = or i1 %390, %389
  br i1 %391, label %567, label %392

392:                                              ; preds = %382
  %393 = getelementptr inbounds i8, i8* %9, i64 %385
  %394 = load i8, i8* %393, align 1
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %396, label %567

396:                                              ; preds = %392
  %397 = add nuw nsw i64 %361, 1
  %398 = icmp eq i64 %397, %358
  br i1 %398, label %399, label %360

399:                                              ; preds = %396, %306, %350, %344
  %400 = icmp ugt i16 %71, 22
  br i1 %400, label %401, label %566

401:                                              ; preds = %399
  %402 = getelementptr inbounds i8, i8* %69, i64 22
  %403 = bitcast i8* %402 to i16*
  %404 = load i16, i16* %403, align 2
  %405 = icmp eq i16 %404, 0
  br i1 %405, label %429, label %406

406:                                              ; preds = %401
  %407 = zext i16 %404 to i64
  %408 = add i64 %6, %407
  %409 = and i64 %408, 3
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %417, label %411

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %413 = load i8, i8* %412, align 8, !range !2
  %414 = icmp ne i8 %413, 0
  %415 = icmp ult i64 %18, %408
  %416 = or i1 %414, %415
  br i1 %416, label %567, label %419

417:                                              ; preds = %406
  %418 = icmp ult i64 %18, %408
  br i1 %418, label %567, label %419

419:                                              ; preds = %411, %417
  %420 = getelementptr inbounds i8, i8* %9, i64 %408
  %421 = bitcast i8* %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %424, label %567

424:                                              ; preds = %419
  %425 = zext i32 %422 to i64
  %426 = add i64 %408, %425
  %427 = add i64 %16, -1
  %428 = icmp ult i64 %427, %426
  br i1 %428, label %567, label %429

429:                                              ; preds = %424, %401
  %430 = getelementptr inbounds i8, i8* %69, i64 22
  %431 = bitcast i8* %430 to i16*
  %432 = load i16, i16* %431, align 2
  %433 = zext i16 %432 to i64
  %434 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %433
  %435 = icmp eq i16 %432, 0
  br i1 %435, label %474, label %436

436:                                              ; preds = %429
  %437 = bitcast i8* %434 to i32*
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds i8, i8* %434, i64 %439
  %441 = icmp eq i8* %440, null
  br i1 %441, label %474, label %442

442:                                              ; preds = %436
  %443 = ptrtoint i8* %440 to i64
  %444 = sub i64 %443, %4
  %445 = and i64 %444, 3
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %453, label %447

447:                                              ; preds = %442
  %448 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %449 = load i8, i8* %448, align 8, !range !2
  %450 = icmp ne i8 %449, 0
  %451 = icmp ult i64 %18, %444
  %452 = or i1 %450, %451
  br i1 %452, label %567, label %455

453:                                              ; preds = %442
  %454 = icmp ult i64 %18, %444
  br i1 %454, label %567, label %455

455:                                              ; preds = %447, %453
  %456 = bitcast i8* %440 to i32*
  %457 = load i32, i32* %456, align 4
  %458 = icmp ult i32 %457, 2147483647
  br i1 %458, label %459, label %567

459:                                              ; preds = %455
  %460 = zext i32 %457 to i64
  %461 = add nuw nsw i64 %460, 4
  %462 = add i64 %461, %444
  %463 = icmp ule i64 %16, %461
  %464 = sub i64 %16, %461
  %465 = icmp ult i64 %464, %444
  %466 = or i1 %463, %465
  %467 = add i64 %16, -1
  %468 = icmp ult i64 %467, %462
  %469 = or i1 %468, %466
  br i1 %469, label %567, label %470

470:                                              ; preds = %459
  %471 = getelementptr inbounds i8, i8* %9, i64 %462
  %472 = load i8, i8* %471, align 1
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %474, label %567

474:                                              ; preds = %429, %436, %470
  %475 = icmp ugt i16 %71, 24
  br i1 %475, label %476, label %566

476:                                              ; preds = %474
  %477 = getelementptr inbounds i8, i8* %69, i64 24
  %478 = bitcast i8* %477 to i16*
  %479 = load i16, i16* %478, align 2
  %480 = icmp eq i16 %479, 0
  br i1 %480, label %485, label %481

481:                                              ; preds = %476
  %482 = zext i16 %479 to i64
  %483 = add i64 %6, %482
  %484 = icmp ult i64 %18, %483
  br i1 %484, label %567, label %485

485:                                              ; preds = %481, %476
  %486 = icmp ugt i16 %71, 26
  br i1 %486, label %487, label %566

487:                                              ; preds = %485
  %488 = getelementptr inbounds i8, i8* %69, i64 26
  %489 = bitcast i8* %488 to i16*
  %490 = load i16, i16* %489, align 2
  %491 = icmp eq i16 %490, 0
  br i1 %491, label %499, label %492

492:                                              ; preds = %487
  %493 = zext i16 %490 to i64
  %494 = add i64 %6, %493
  %495 = icmp ugt i64 %16, 8
  %496 = add i64 %16, -8
  %497 = icmp uge i64 %496, %494
  %498 = and i1 %495, %497
  br i1 %498, label %499, label %567

499:                                              ; preds = %487, %492
  %500 = icmp ugt i16 %71, 28
  br i1 %500, label %501, label %566

501:                                              ; preds = %499
  %502 = getelementptr inbounds i8, i8* %69, i64 28
  %503 = bitcast i8* %502 to i16*
  %504 = load i16, i16* %503, align 2
  %505 = icmp eq i16 %504, 0
  br i1 %505, label %529, label %506

506:                                              ; preds = %501
  %507 = zext i16 %504 to i64
  %508 = add i64 %6, %507
  %509 = and i64 %508, 3
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %517, label %511

511:                                              ; preds = %506
  %512 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %513 = load i8, i8* %512, align 8, !range !2
  %514 = icmp ne i8 %513, 0
  %515 = icmp ult i64 %18, %508
  %516 = or i1 %514, %515
  br i1 %516, label %567, label %519

517:                                              ; preds = %506
  %518 = icmp ult i64 %18, %508
  br i1 %518, label %567, label %519

519:                                              ; preds = %511, %517
  %520 = getelementptr inbounds i8, i8* %9, i64 %508
  %521 = bitcast i8* %520 to i32*
  %522 = load i32, i32* %521, align 4
  %523 = icmp sgt i32 %522, 0
  br i1 %523, label %524, label %567

524:                                              ; preds = %519
  %525 = zext i32 %522 to i64
  %526 = add i64 %508, %525
  %527 = add i64 %16, -1
  %528 = icmp ult i64 %527, %526
  br i1 %528, label %567, label %529

529:                                              ; preds = %501, %524
  %530 = getelementptr inbounds i8, i8* %69, i64 28
  %531 = bitcast i8* %530 to i16*
  %532 = load i16, i16* %531, align 2
  %533 = zext i16 %532 to i64
  %534 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %0, i64 0, i32 0, i32 0, i64 %533
  %535 = icmp eq i16 %532, 0
  br i1 %535, label %566, label %536

536:                                              ; preds = %529
  %537 = bitcast i8* %534 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds i8, i8* %534, i64 %539
  %541 = icmp eq i8* %540, null
  br i1 %541, label %566, label %542

542:                                              ; preds = %536
  %543 = ptrtoint i8* %540 to i64
  %544 = sub i64 %543, %4
  %545 = and i64 %544, 3
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %553, label %547

547:                                              ; preds = %542
  %548 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %549 = load i8, i8* %548, align 8, !range !2
  %550 = icmp ne i8 %549, 0
  %551 = icmp ult i64 %18, %544
  %552 = or i1 %550, %551
  br i1 %552, label %567, label %555

553:                                              ; preds = %542
  %554 = icmp ult i64 %18, %544
  br i1 %554, label %567, label %555

555:                                              ; preds = %547, %553
  %556 = bitcast i8* %540 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = icmp ult i32 %557, 2147483647
  br i1 %558, label %559, label %567

559:                                              ; preds = %555
  %560 = zext i32 %557 to i64
  %561 = add nuw nsw i64 %560, 4
  %562 = icmp ugt i64 %16, %561
  %563 = sub i64 %16, %561
  %564 = icmp uge i64 %563, %544
  %565 = and i1 %562, %564
  br i1 %565, label %566, label %567

566:                                              ; preds = %399, %276, %153, %141, %129, %117, %105, %94, %83, %65, %499, %485, %474, %529, %536, %559
  store i32 %27, i32* %26, align 8
  br label %567

567:                                              ; preds = %259, %255, %269, %253, %248, %382, %378, %392, %376, %371, %148, %136, %124, %112, %101, %90, %78, %547, %511, %447, %411, %324, %288, %201, %165, %171, %207, %294, %330, %417, %453, %517, %481, %553, %178, %301, %424, %524, %459, %555, %519, %455, %419, %332, %296, %209, %173, %42, %21, %10, %35, %46, %56, %14, %566, %559, %492, %470, %336, %213, %60
  %568 = phi i1 [ false, %559 ], [ false, %524 ], [ false, %492 ], [ false, %481 ], [ false, %470 ], [ false, %424 ], [ false, %336 ], [ false, %301 ], [ false, %213 ], [ false, %178 ], [ false, %148 ], [ false, %136 ], [ false, %124 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %566 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %171 ], [ false, %173 ], [ false, %165 ], [ false, %207 ], [ false, %209 ], [ false, %201 ], [ false, %294 ], [ false, %296 ], [ false, %288 ], [ false, %330 ], [ false, %332 ], [ false, %324 ], [ false, %417 ], [ false, %419 ], [ false, %411 ], [ false, %459 ], [ false, %453 ], [ false, %455 ], [ false, %447 ], [ false, %517 ], [ false, %519 ], [ false, %511 ], [ false, %553 ], [ false, %555 ], [ false, %547 ], [ false, %371 ], [ false, %376 ], [ false, %392 ], [ false, %378 ], [ false, %382 ], [ false, %248 ], [ false, %253 ], [ false, %269 ], [ false, %255 ], [ false, %259 ]
  ret i1 %568
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11flatbuffers17FlatBufferBuilder6FinishEjPKcb(%"class.flatbuffers::FlatBufferBuilder"*, i32, i8*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 5
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 7
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = select i1 %3, i64 8, i64 4
  %12 = icmp ne i8* %2, null
  %13 = select i1 %12, i64 4, i64 0
  %14 = add nuw nsw i64 %11, %13
  %15 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 0, i32 6
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, %8
  %24 = and i64 %23, 4294967295
  %25 = add nuw nsw i64 %14, %24
  %26 = sub nsw i64 0, %25
  %27 = add i64 %16, -1
  %28 = and i64 %27, %26
  %29 = sub i64 %21, %8
  %30 = icmp ult i64 %29, %28
  br i1 %30, label %31, label %35

31:                                               ; preds = %4
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 %28) #8
  %32 = load i8*, i8** %19, align 8
  %33 = sub i64 0, %28
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8* %34, i8** %19, align 8
  br label %40

35:                                               ; preds = %4
  %36 = inttoptr i64 %21 to i8*
  %37 = sub i64 0, %28
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  store i8* %38, i8** %19, align 8
  %39 = icmp eq i64 %28, 0
  br i1 %39, label %78, label %40

40:                                               ; preds = %35, %31
  %41 = phi i8* [ %34, %31 ], [ %38, %35 ]
  store i8 0, i8* %41, align 1
  %42 = icmp eq i64 %28, 1
  br i1 %42, label %78, label %43

43:                                               ; preds = %40
  %44 = add i64 %28, -1
  %45 = add i64 %28, -2
  %46 = and i64 %44, 3
  %47 = icmp ult i64 %45, 3
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = sub i64 %44, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 1, %48 ], [ %64, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %65, %50 ]
  %53 = load i8*, i8** %19, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  store i8 0, i8* %54, align 1
  %55 = add nuw nsw i64 %51, 1
  %56 = load i8*, i8** %19, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  store i8 0, i8* %57, align 1
  %58 = add nuw nsw i64 %51, 2
  %59 = load i8*, i8** %19, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = add nuw i64 %51, 3
  %62 = load i8*, i8** %19, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  store i8 0, i8* %63, align 1
  %64 = add nuw i64 %51, 4
  %65 = add i64 %52, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %50

67:                                               ; preds = %50, %43
  %68 = phi i64 [ 1, %43 ], [ %64, %50 ]
  %69 = icmp eq i64 %46, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %67, %70
  %71 = phi i64 [ %75, %70 ], [ %68, %67 ]
  %72 = phi i64 [ %76, %70 ], [ %46, %67 ]
  %73 = load i8*, i8** %19, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  store i8 0, i8* %74, align 1
  %75 = add nuw i64 %71, 1
  %76 = add i64 %72, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %70, !llvm.loop !8

78:                                               ; preds = %67, %70, %35, %40
  br i1 %12, label %79, label %93

79:                                               ; preds = %78
  %80 = load i64, i64* %20, align 8
  %81 = load i64, i64* %10, align 8
  %82 = sub i64 %80, %81
  %83 = icmp ult i64 %82, 4
  %84 = inttoptr i64 %80 to i8*
  br i1 %83, label %85, label %87

85:                                               ; preds = %79
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 4) #8
  %86 = load i8*, i8** %19, align 8
  br label %87

87:                                               ; preds = %79, %85
  %88 = phi i8* [ %84, %79 ], [ %86, %85 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 -4
  store i8* %89, i8** %19, align 8
  %90 = bitcast i8* %2 to i32*
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %90, align 1
  store i32 %92, i32* %91, align 1
  br label %93

93:                                               ; preds = %87, %78
  %94 = load i64, i64* %15, align 8
  %95 = icmp ult i64 %94, 4
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  store i64 4, i64* %15, align 8
  br label %97

97:                                               ; preds = %96, %93
  %98 = load i64, i64* %17, align 8
  %99 = load i64, i64* %20, align 8
  %100 = load i64, i64* %7, align 8
  %101 = sub i64 %98, %99
  %102 = add i64 %101, %100
  %103 = sub i64 0, %102
  %104 = and i64 %103, 3
  %105 = load i64, i64* %10, align 8
  %106 = sub i64 %99, %105
  %107 = icmp ult i64 %106, %104
  br i1 %107, label %108, label %112

108:                                              ; preds = %97
  tail call void @_ZN11flatbuffers15vector_downward10reallocateEm(%"class.flatbuffers::vector_downward"* %5, i64 %104) #8
  %109 = load i8*, i8** %19, align 8
  %110 = sub nsw i64 0, %104
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  store i8* %111, i8** %19, align 8
  br label %117

112:                                              ; preds = %97
  %113 = inttoptr i64 %99 to i8*
  %114 = sub nsw i64 0, %104
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  store i8* %115, i8** %19, align 8
  %116 = icmp eq i64 %104, 0
  br i1 %116, label %155, label %117

117:                                              ; preds = %112, %108
  %118 = phi i8* [ %111, %108 ], [ %115, %112 ]
  store i8 0, i8* %118, align 1
  %119 = icmp eq i64 %104, 1
  br i1 %119, label %155, label %120

120:                                              ; preds = %117
  %121 = add nsw i64 %104, -1
  %122 = add nsw i64 %104, -2
  %123 = and i64 %121, 3
  %124 = icmp ult i64 %122, 3
  br i1 %124, label %144, label %125

125:                                              ; preds = %120
  %126 = sub nsw i64 %121, %123
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 1, %125 ], [ %141, %127 ]
  %129 = phi i64 [ %126, %125 ], [ %142, %127 ]
  %130 = load i8*, i8** %19, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  store i8 0, i8* %131, align 1
  %132 = add nuw nsw i64 %128, 1
  %133 = load i8*, i8** %19, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8 0, i8* %134, align 1
  %135 = add nuw nsw i64 %128, 2
  %136 = load i8*, i8** %19, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  store i8 0, i8* %137, align 1
  %138 = add nuw i64 %128, 3
  %139 = load i8*, i8** %19, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 %138
  store i8 0, i8* %140, align 1
  %141 = add nuw i64 %128, 4
  %142 = add i64 %129, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %127

144:                                              ; preds = %127, %120
  %145 = phi i64 [ 1, %120 ], [ %141, %127 ]
  %146 = icmp eq i64 %123, 0
  br i1 %146, label %155, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %152, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %153, %147 ], [ %123, %144 ]
  %150 = load i8*, i8** %19, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %148
  store i8 0, i8* %151, align 1
  %152 = add nuw i64 %148, 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %147, !llvm.loop !9

155:                                              ; preds = %144, %147, %112, %117
  %156 = load i64, i64* %17, align 8
  %157 = load i64, i64* %20, align 8
  %158 = load i64, i64* %7, align 8
  %159 = sub i64 %156, %157
  %160 = add i64 %159, %158
  %161 = trunc i64 %160 to i32
  %162 = sub i32 4, %1
  %163 = add i32 %162, %161
  %164 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %163)
  br i1 %3, label %165, label %173

165:                                              ; preds = %155
  %166 = load i64, i64* %17, align 8
  %167 = load i64, i64* %20, align 8
  %168 = load i64, i64* %7, align 8
  %169 = sub i64 %166, %167
  %170 = add i64 %169, %168
  %171 = trunc i64 %170 to i32
  %172 = tail call i32 @_ZN11flatbuffers17FlatBufferBuilder11PushElementIjEEjT_(%"class.flatbuffers::FlatBufferBuilder"* %0, i32 %171)
  br label %173

173:                                              ; preds = %165, %155
  %174 = getelementptr inbounds %"class.flatbuffers::FlatBufferBuilder", %"class.flatbuffers::FlatBufferBuilder"* %0, i64 0, i32 4
  store i8 1, i8* %174, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.23"*, %"class.std::__1::__tree_node.67"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.67"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.67"* %1 to %"class.std::__1::__tree_node.67"**
  %6 = load %"class.std::__1::__tree_node.67"*, %"class.std::__1::__tree_node.67"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.23"* %0, %"class.std::__1::__tree_node.67"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.67", %"class.std::__1::__tree_node.67"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.67"**
  %9 = load %"class.std::__1::__tree_node.67"*, %"class.std::__1::__tree_node.67"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN11flatbuffers6OffsetINS3_6StringEEENS_9allocatorIS6_EEEENS4_INS3_6VectorIS6_EEEEEENS_19__map_value_compareIS9_SD_N17url_pattern_index19OffsetVectorCompareELb1EEENS7_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree.23"* %0, %"class.std::__1::__tree_node.67"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.67", %"class.std::__1::__tree_node.67"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.flatbuffers::Offset.61"*, %"struct.flatbuffers::Offset.61"** %10, align 8
  %12 = icmp eq %"struct.flatbuffers::Offset.61"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"struct.flatbuffers::Offset.61"* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.67", %"class.std::__1::__tree_node.67"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.flatbuffers::Offset.61"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.flatbuffers::Offset.61"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.67"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
