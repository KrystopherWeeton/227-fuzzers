; ModuleID = '../../chrome/browser/ui/views/user_education/feature_tutorial_registry.cc'
source_filename = "../../chrome/browser/ui/views/user_education/feature_tutorial_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [24 x i8] }
%class.FeatureTutorialRegistry = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%struct.FeatureTutorialDescription = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.FeatureTutorialDescription::Step"*, %"struct.FeatureTutorialDescription::Step"*, %"class.std::__1::__compressed_pair.4" }
%"struct.FeatureTutorialDescription::Step" = type { i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.FeatureTutorialDescription::Step"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %struct.FeatureTutorialDescription }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type opaque

$_ZNSt3__16__treeINS_12__value_typeI15FeatureTutorial26FeatureTutorialDescriptionEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

@.str = private unnamed_addr constant [74 x i8] c"../../chrome/browser/ui/views/user_education/feature_tutorial_registry.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"it != descriptions_.end()\00", align 1
@_ZZN23FeatureTutorialRegistry11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN23FeatureTutorialRegistry11GetInstanceEvE8instance = internal global i64 0, align 8

@_ZN23FeatureTutorialRegistryC1Ev = hidden unnamed_addr alias void (%class.FeatureTutorialRegistry*), void (%class.FeatureTutorialRegistry*)* @_ZN23FeatureTutorialRegistryC2Ev
@_ZN23FeatureTutorialRegistryD1Ev = hidden unnamed_addr alias void (%class.FeatureTutorialRegistry*), void (%class.FeatureTutorialRegistry*)* @_ZN23FeatureTutorialRegistryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23FeatureTutorialRegistryC2Ev(%class.FeatureTutorialRegistry*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.FeatureTutorialDescription, align 8
  %3 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = bitcast %struct.FeatureTutorialDescription* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %struct.FeatureTutorialDescription, %struct.FeatureTutorialDescription* %2, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %struct.FeatureTutorialDescription, %struct.FeatureTutorialDescription* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %struct.FeatureTutorialDescription* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN26FeatureTutorialDescriptionC1Ev(%struct.FeatureTutorialDescription* nonnull %2) #9
  %11 = load %"struct.FeatureTutorialDescription::Step"*, %"struct.FeatureTutorialDescription::Step"** %8, align 8
  %12 = load %"struct.FeatureTutorialDescription::Step"*, %"struct.FeatureTutorialDescription::Step"** %9, align 8
  %13 = icmp eq %"struct.FeatureTutorialDescription::Step"* %11, %12
  %14 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %12 to i64
  br i1 %13, label %20, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %11, i64 0, i32 0
  store i32 7998, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %11, i64 1
  %18 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %17 to i64
  %19 = bitcast %"struct.FeatureTutorialDescription::Step"** %8 to i64*
  store i64 %18, i64* %19, align 8
  br label %67

20:                                               ; preds = %1
  %21 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %11 to i64
  %22 = bitcast %"struct.FeatureTutorialDescription::Step"** %8 to i64*
  %23 = bitcast %struct.FeatureTutorialDescription* %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 2
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 4611686018427387903
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %struct.FeatureTutorialDescription* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %30) #10
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"struct.FeatureTutorialDescription::Step"** %9 to i64*
  %33 = sub i64 %14, %24
  %34 = ashr exact i64 %33, 2
  %35 = icmp ult i64 %34, 2305843009213693951
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 1
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @abort() #10
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 4611686018427387903, %31 ]
  %46 = shl i64 %45, 2
  %47 = call i8* @_Znwm(i64 %46) #11
  %48 = bitcast i8* %47 to %"struct.FeatureTutorialDescription::Step"*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi i8* [ %47, %44 ], [ null, %36 ]
  %52 = phi %"struct.FeatureTutorialDescription::Step"* [ %48, %44 ], [ null, %36 ]
  %53 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %52, i64 %26
  %54 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %52, i64 %50
  %55 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %54 to i64
  %56 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %53, i64 0, i32 0
  store i32 7998, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.FeatureTutorialDescription::Step", %"struct.FeatureTutorialDescription::Step"* %53, i64 1
  %58 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %57 to i64
  %59 = ptrtoint %"struct.FeatureTutorialDescription::Step"* %52 to i64
  %60 = icmp sgt i64 %25, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %49
  %62 = inttoptr i64 %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %62, i64 %25, i1 false) #9
  br label %63

63:                                               ; preds = %61, %49
  store i64 %59, i64* %23, align 8
  store i64 %58, i64* %22, align 8
  store i64 %55, i64* %32, align 8
  %64 = icmp eq i64 %24, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = inttoptr i64 %24 to i8*
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %15, %63, %65
  call void @_ZN26FeatureTutorialDescriptionD1Ev(%struct.FeatureTutorialDescription* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN26FeatureTutorialDescriptionC1Ev(%struct.FeatureTutorialDescription*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN26FeatureTutorialDescriptionD1Ev(%struct.FeatureTutorialDescription*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23FeatureTutorialRegistryD2Ev(%class.FeatureTutorialRegistry*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI15FeatureTutorial26FeatureTutorialDescriptionEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.FeatureTutorialDescription* @_ZNK23FeatureTutorialRegistry22GetTutorialDescriptionE15FeatureTutorial(%class.FeatureTutorialRegistry*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %class.FeatureTutorialRegistry, %class.FeatureTutorialRegistry* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %2 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24, %22, %2
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #9
  %31 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"class.std::__1::__tree_end_node"* [ %4, %29 ], [ %19, %24 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 5
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %struct.FeatureTutorialDescription*
  ret %struct.FeatureTutorialDescription* %35
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.FeatureTutorialRegistry* @_ZN23FeatureTutorialRegistry11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN23FeatureTutorialRegistry11GetInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN23FeatureTutorialRegistry11GetInstanceEvE8instance) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN23FeatureTutorialRegistryC2Ev(%class.FeatureTutorialRegistry* bitcast (%"class.base::NoDestructor"* @_ZZN23FeatureTutorialRegistry11GetInstanceEvE8instance to %class.FeatureTutorialRegistry*)) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN23FeatureTutorialRegistry11GetInstanceEvE8instance) #9
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %class.FeatureTutorialRegistry* bitcast (%"class.base::NoDestructor"* @_ZZN23FeatureTutorialRegistry11GetInstanceEvE8instance to %class.FeatureTutorialRegistry*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI15FeatureTutorial26FeatureTutorialDescriptionEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI15FeatureTutorial26FeatureTutorialDescriptionEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI15FeatureTutorial26FeatureTutorialDescriptionEENS_19__map_value_compareIS2_S4_NS_4lessIS2_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN26FeatureTutorialDescriptionD1Ev(%struct.FeatureTutorialDescription* %10) #9
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
