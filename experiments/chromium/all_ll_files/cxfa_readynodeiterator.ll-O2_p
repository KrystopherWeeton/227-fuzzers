; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_readynodeiterator.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_readynodeiterator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_ReadyNodeIterator = type { %class.CXFA_NodeIteratorTemplate, %"class.fxcrt::UnownedPtr" }
%class.CXFA_NodeIteratorTemplate = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %class.CXFA_Node* }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.3", %"class.pdfium::span.5", i32, %"class.fxcrt::UnownedPtr.7", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.9", %"class.cppgc::internal::BasicMember.10" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.1" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.0", i64 }
%"class.fxcrt::UnownedPtr.0" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.3" = type { %"class.fxcrt::UnownedPtr.4", i64 }
%"class.fxcrt::UnownedPtr.4" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.5" = type { %"class.fxcrt::UnownedPtr.6", i64 }
%"class.fxcrt::UnownedPtr.6" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.7" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.9" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.10" = type { %"class.cppgc::internal::MemberBase" }

@_ZN22CXFA_ReadyNodeIteratorC1EP9CXFA_Node = hidden unnamed_addr alias void (%class.CXFA_ReadyNodeIterator*, %class.CXFA_Node*), void (%class.CXFA_ReadyNodeIterator*, %class.CXFA_Node*)* @_ZN22CXFA_ReadyNodeIteratorC2EP9CXFA_Node
@_ZN22CXFA_ReadyNodeIteratorD1Ev = hidden unnamed_addr alias void (%class.CXFA_ReadyNodeIterator*), void (%class.CXFA_ReadyNodeIterator*)* @_ZN22CXFA_ReadyNodeIteratorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22CXFA_ReadyNodeIteratorC2EP9CXFA_Node(%class.CXFA_ReadyNodeIterator* nocapture, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 0, i32 0
  store %class.CXFA_Node* %1, %class.CXFA_Node** %3, align 8
  %4 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 1, i32 0
  store %class.CXFA_Node* %1, %class.CXFA_Node** %4, align 8
  %5 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 1, i32 0
  store %class.CXFA_Node* null, %class.CXFA_Node** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN22CXFA_ReadyNodeIteratorD2Ev(%class.CXFA_ReadyNodeIterator* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Node* @_ZN22CXFA_ReadyNodeIterator10MoveToNextEv(%class.CXFA_ReadyNodeIterator* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 1, i32 0
  %3 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  %4 = icmp eq %class.CXFA_Node* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  %8 = icmp eq %class.CXFA_Node* %7, null
  br i1 %8, label %93, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 1, i32 0
  %11 = load %class.CXFA_Node*, %class.CXFA_Node** %10, align 8
  %12 = icmp eq %class.CXFA_Node* %11, null
  br i1 %12, label %93, label %13

13:                                               ; preds = %9
  %14 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node22GetFirstContainerChildEv(%class.CXFA_Node* nonnull %11) #4
  %15 = icmp eq %class.CXFA_Node* %14, null
  br i1 %15, label %16, label %44

16:                                               ; preds = %13
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  %18 = icmp eq %class.CXFA_Node* %17, null
  br i1 %18, label %93, label %19

19:                                               ; preds = %16
  %20 = load %class.CXFA_Node*, %class.CXFA_Node** %10, align 8
  %21 = icmp eq %class.CXFA_Node* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %19, %37
  %23 = phi %class.CXFA_Node* [ %38, %37 ], [ %17, %19 ]
  %24 = phi %class.CXFA_Node* [ %35, %37 ], [ %20, %19 ]
  %25 = icmp eq %class.CXFA_Node* %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node23GetNextContainerSiblingEv(%class.CXFA_Node* nonnull %24) #4
  %28 = icmp eq %class.CXFA_Node* %27, null
  br i1 %28, label %29, label %44

29:                                               ; preds = %26
  %30 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi %class.CXFA_Node* [ %30, %29 ], [ %23, %22 ]
  %33 = icmp eq %class.CXFA_Node* %32, %24
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node18GetContainerParentEv(%class.CXFA_Node* nonnull %24) #4
  %36 = icmp eq %class.CXFA_Node* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  br label %22

39:                                               ; preds = %34, %31, %19
  store %class.CXFA_Node* null, %class.CXFA_Node** %10, align 8
  br label %93

40:                                               ; preds = %1
  %41 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 1, i32 0
  %42 = load %class.CXFA_Node*, %class.CXFA_Node** %41, align 8
  %43 = icmp eq %class.CXFA_Node* %42, null
  br i1 %43, label %93, label %46

44:                                               ; preds = %26, %13
  %45 = phi %class.CXFA_Node* [ %14, %13 ], [ %27, %26 ]
  store %class.CXFA_Node* %45, %class.CXFA_Node** %10, align 8
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %class.CXFA_Node* [ %42, %40 ], [ %45, %44 ]
  %48 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %47, i64 0, i32 5
  %51 = load i8, i8* %50, align 2, !range !2
  %52 = icmp ne i8 %51, 0
  %53 = select i1 %52, %class.CXFA_Node* %47, %class.CXFA_Node* null
  store %class.CXFA_Node* %53, %class.CXFA_Node** %2, align 8
  br i1 %52, label %93, label %54

54:                                               ; preds = %46, %87
  %55 = load %class.CXFA_Node*, %class.CXFA_Node** %48, align 8
  %56 = icmp eq %class.CXFA_Node* %55, null
  br i1 %56, label %93, label %57

57:                                               ; preds = %54
  %58 = load %class.CXFA_Node*, %class.CXFA_Node** %49, align 8
  %59 = icmp eq %class.CXFA_Node* %58, null
  br i1 %59, label %93, label %60

60:                                               ; preds = %57
  %61 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node22GetFirstContainerChildEv(%class.CXFA_Node* nonnull %58) #4
  %62 = icmp eq %class.CXFA_Node* %61, null
  br i1 %62, label %63, label %87

63:                                               ; preds = %60
  %64 = load %class.CXFA_Node*, %class.CXFA_Node** %48, align 8
  %65 = icmp eq %class.CXFA_Node* %64, null
  br i1 %65, label %93, label %66

66:                                               ; preds = %63
  %67 = load %class.CXFA_Node*, %class.CXFA_Node** %49, align 8
  %68 = icmp eq %class.CXFA_Node* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %66, %84
  %70 = phi %class.CXFA_Node* [ %85, %84 ], [ %64, %66 ]
  %71 = phi %class.CXFA_Node* [ %82, %84 ], [ %67, %66 ]
  %72 = icmp eq %class.CXFA_Node* %70, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node23GetNextContainerSiblingEv(%class.CXFA_Node* nonnull %71) #4
  %75 = icmp eq %class.CXFA_Node* %74, null
  br i1 %75, label %76, label %87

76:                                               ; preds = %73
  %77 = load %class.CXFA_Node*, %class.CXFA_Node** %48, align 8
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi %class.CXFA_Node* [ %77, %76 ], [ %70, %69 ]
  %80 = icmp eq %class.CXFA_Node* %79, %71
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node18GetContainerParentEv(%class.CXFA_Node* nonnull %71) #4
  %83 = icmp eq %class.CXFA_Node* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = load %class.CXFA_Node*, %class.CXFA_Node** %48, align 8
  br label %69

86:                                               ; preds = %66, %81, %78
  store %class.CXFA_Node* null, %class.CXFA_Node** %49, align 8
  br label %93

87:                                               ; preds = %73, %60
  %88 = phi %class.CXFA_Node* [ %61, %60 ], [ %74, %73 ]
  store %class.CXFA_Node* %88, %class.CXFA_Node** %49, align 8
  %89 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %88, i64 0, i32 5
  %90 = load i8, i8* %89, align 2, !range !2
  %91 = icmp ne i8 %90, 0
  %92 = select i1 %91, %class.CXFA_Node* %88, %class.CXFA_Node* null
  store %class.CXFA_Node* %92, %class.CXFA_Node** %2, align 8
  br i1 %91, label %93, label %54

93:                                               ; preds = %87, %57, %54, %63, %46, %86, %39, %16, %5, %9, %40
  %94 = phi %class.CXFA_Node* [ null, %40 ], [ null, %9 ], [ null, %5 ], [ null, %16 ], [ null, %39 ], [ null, %86 ], [ %47, %46 ], [ null, %63 ], [ null, %54 ], [ null, %57 ], [ %88, %87 ]
  ret %class.CXFA_Node* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CXFA_ReadyNodeIterator8SkipTreeEv(%class.CXFA_ReadyNodeIterator* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  %4 = icmp eq %class.CXFA_Node* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %class.CXFA_Node*, %class.CXFA_Node** %6, align 8
  %8 = icmp eq %class.CXFA_Node* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %5, %24
  %10 = phi %class.CXFA_Node* [ %25, %24 ], [ %3, %5 ]
  %11 = phi %class.CXFA_Node* [ %22, %24 ], [ %7, %5 ]
  %12 = icmp eq %class.CXFA_Node* %10, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node23GetNextContainerSiblingEv(%class.CXFA_Node* nonnull %11) #4
  %15 = icmp eq %class.CXFA_Node* %14, null
  br i1 %15, label %16, label %26

16:                                               ; preds = %13
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi %class.CXFA_Node* [ %17, %16 ], [ %10, %9 ]
  %20 = icmp eq %class.CXFA_Node* %19, %11
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node18GetContainerParentEv(%class.CXFA_Node* nonnull %11) #4
  %23 = icmp eq %class.CXFA_Node* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  br label %9

26:                                               ; preds = %18, %21, %13, %5
  %27 = phi %class.CXFA_Node* [ null, %5 ], [ null, %18 ], [ null, %21 ], [ %14, %13 ]
  store %class.CXFA_Node* %27, %class.CXFA_Node** %6, align 8
  br label %28

28:                                               ; preds = %26, %1
  %29 = getelementptr inbounds %class.CXFA_ReadyNodeIterator, %class.CXFA_ReadyNodeIterator* %0, i64 0, i32 1, i32 0
  store %class.CXFA_Node* null, %class.CXFA_Node** %29, align 8
  ret void
}

declare %class.CXFA_Node* @_ZNK9CXFA_Node22GetFirstContainerChildEv(%class.CXFA_Node*) local_unnamed_addr #3

declare %class.CXFA_Node* @_ZNK9CXFA_Node23GetNextContainerSiblingEv(%class.CXFA_Node*) local_unnamed_addr #3

declare %class.CXFA_Node* @_ZNK9CXFA_Node18GetContainerParentEv(%class.CXFA_Node*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
